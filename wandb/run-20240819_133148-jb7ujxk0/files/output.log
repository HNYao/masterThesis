2024-08-19 13:31:53,174 [Worker 0] Is distributed: False
2024-08-19 13:31:53,175 [Process: 0] Starting training
2024-08-19 13:31:53,175 [Process: 0] EPOCH 1:
2024-08-19 13:31:53,178 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:31:54,797 [Process: 0] Synchronize training processes
2024-08-19 13:31:54,798 [Process: 0] Evaluating...
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2013, 0.3420, 0.1496,  ..., 0.1481, 0.4452, 0.1980],
         [0.3961, 0.3088, 0.1496,  ..., 0.1420, 0.1849, 0.4061],
         [0.2013, 0.1928, 0.5388,  ..., 0.5084, 0.1849, 0.1980],
         [0.2013, 0.1564, 0.1620,  ..., 0.2015, 0.1849, 0.1980]],
        [[0.3098, 0.1502, 0.6037,  ..., 0.2301, 0.2239, 0.1630],
         [0.1867, 0.4153, 0.0751,  ..., 0.3520, 0.2239, 0.2199],
         [0.1668, 0.2519, 0.0751,  ..., 0.2089, 0.3282, 0.1630],
         [0.3367, 0.1825, 0.2462,  ..., 0.2089, 0.2239, 0.4541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2879, 0.2354, 0.2508,  ..., 0.3008, 0.2188, 0.1432],
         [0.2838, 0.2276, 0.2622,  ..., 0.2874, 0.2700, 0.3270],
         [0.1688, 0.2252, 0.2345,  ..., 0.1637, 0.1772, 0.2348],
         [0.2595, 0.3118, 0.2525,  ..., 0.2481, 0.3340, 0.2950]],
        [[0.2450, 0.3226, 0.2464,  ..., 0.2967, 0.2927, 0.1487],
         [0.2035, 0.2247, 0.2464,  ..., 0.2841, 0.2816, 0.1487],
         [0.2411, 0.2036, 0.2608,  ..., 0.2002, 0.1742, 0.5539],
         [0.3103, 0.2492, 0.2464,  ..., 0.2190, 0.2515, 0.1487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:31:55,752 [Process: 0] EPOCH 2:
2024-08-19 13:31:55,755 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:31:56,727 [Process: 0] Synchronize training processes
2024-08-19 13:31:56,727 [Process: 0] Evaluating...
2024-08-19 13:31:56,729 [Process: 0] EPOCH 3:
2024-08-19 13:31:56,730 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2805, 0.0575, 0.2660,  ..., 0.2896, 0.2745, 0.2673],
         [0.2596, 0.0575, 0.2644,  ..., 0.2492, 0.2504, 0.2705],
         [0.1937, 0.8275, 0.2223,  ..., 0.1932, 0.2017, 0.1959],
         [0.2662, 0.0575, 0.2474,  ..., 0.2680, 0.2734, 0.2663]],
        [[0.2500, 0.2906, 0.0012,  ..., 0.2530, 0.2790, 0.2751],
         [0.2500, 0.2519, 0.0012,  ..., 0.2564, 0.2522, 0.2536],
         [0.2500, 0.1870, 0.9964,  ..., 0.2246, 0.1965, 0.2043],
         [0.2500, 0.2705, 0.0012,  ..., 0.2661, 0.2723, 0.2670]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2796, 0.2587, 0.2737,  ..., 0.2700, 0.2688, 0.2615],
         [0.2495, 0.2562, 0.2608,  ..., 0.2657, 0.2571, 0.2550],
         [0.1964, 0.2028, 0.1896,  ..., 0.1980, 0.2058, 0.2072],
         [0.2745, 0.2823, 0.2759,  ..., 0.2662, 0.2684, 0.2762]],
        [[0.2715, 0.2661, 0.2672,  ..., 0.2793, 0.2613, 0.2640],
         [0.2481, 0.2473, 0.2568,  ..., 0.2505, 0.2452, 0.2526],
         [0.2105, 0.2027, 0.2036,  ..., 0.1983, 0.2234, 0.2172],
         [0.2699, 0.2838, 0.2725,  ..., 0.2719, 0.2702, 0.2662]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:31:57,704 [Process: 0] Synchronize training processes
2024-08-19 13:31:57,705 [Process: 0] Evaluating...
2024-08-19 13:31:57,707 [Process: 0] EPOCH 4:
2024-08-19 13:31:57,708 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:31:58,677 [Process: 0] Synchronize training processes
2024-08-19 13:31:58,678 [Process: 0] Evaluating...
2024-08-19 13:31:58,679 [Process: 0] EPOCH 5:
2024-08-19 13:31:58,681 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2564, 0.0196, 0.2771,  ..., 0.2715, 0.2768, 0.2744],
         [0.2631, 0.0196, 0.2514,  ..., 0.2640, 0.2544, 0.2620],
         [0.2055, 0.9412, 0.1982,  ..., 0.1948, 0.1983, 0.2003],
         [0.2750, 0.0196, 0.2733,  ..., 0.2697, 0.2706, 0.2633]],
        [[0.2219, 0.2673, 0.0314,  ..., 0.2692, 0.0635, 0.2696],
         [0.2219, 0.2505, 0.0314,  ..., 0.2613, 0.0635, 0.2547],
         [0.3342, 0.2061, 0.9057,  ..., 0.1954, 0.8096, 0.2022],
         [0.2219, 0.2761, 0.0314,  ..., 0.2741, 0.0635, 0.2735]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2423, 0.2767, 0.2734,  ..., 0.2644, 0.2853, 0.2613],
         [0.2557, 0.2483, 0.2461,  ..., 0.2499, 0.2487, 0.2545],
         [0.2356, 0.2035, 0.2109,  ..., 0.2128, 0.2013, 0.2167],
         [0.2664, 0.2716, 0.2696,  ..., 0.2729, 0.2646, 0.2675]],
        [[0.2571, 0.2729, 0.2682,  ..., 0.2579, 0.2659, 0.2681],
         [0.2505, 0.2514, 0.2481,  ..., 0.2528, 0.2438, 0.2489],
         [0.2232, 0.2098, 0.2142,  ..., 0.2167, 0.2229, 0.2201],
         [0.2692, 0.2659, 0.2695,  ..., 0.2726, 0.2674, 0.2629]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2728, 0.2813, 0.2740,  ..., 0.2731, 0.2730, 0.2651],
         [0.2479, 0.2529, 0.2484,  ..., 0.2485, 0.2490, 0.2458],
         [0.2067, 0.2007, 0.2137,  ..., 0.2059, 0.2100, 0.2169],
         [0.2726, 0.2651, 0.2639,  ..., 0.2725, 0.2681, 0.2722]],
        [[0.1746, 0.2736, 0.2753,  ..., 0.2815, 0.1340, 0.2696],
         [0.1746, 0.2571, 0.2461,  ..., 0.2431, 0.1340, 0.2520],
         [0.4761, 0.2014, 0.2160,  ..., 0.2052, 0.5981, 0.2050],
         [0.1746, 0.2679, 0.2626,  ..., 0.2702, 0.1340, 0.2734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1340, 0.2781, 0.2654,  ..., 0.2745, 0.2815, 0.2767],
         [0.1340, 0.2469, 0.2467,  ..., 0.2441, 0.2465, 0.2495],
         [0.5979, 0.2058, 0.2143,  ..., 0.2153, 0.2092, 0.2044],
         [0.1340, 0.2692, 0.2736,  ..., 0.2662, 0.2629, 0.2693]],
        [[0.2664, 0.2766, 0.2739,  ..., 0.2715, 0.2667, 0.2544],
         [0.2395, 0.2470, 0.2419,  ..., 0.2455, 0.2438, 0.2369],
         [0.2236, 0.2144, 0.2159,  ..., 0.2147, 0.2177, 0.2338],
         [0.2705, 0.2620, 0.2683,  ..., 0.2683, 0.2718, 0.2749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:31:59,652 [Process: 0] Synchronize training processes
2024-08-19 13:31:59,652 [Process: 0] Evaluating...
2024-08-19 13:31:59,654 [Process: 0] EPOCH 6:
2024-08-19 13:31:59,656 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:00,629 [Process: 0] Synchronize training processes
2024-08-19 13:32:00,629 [Process: 0] Evaluating...
2024-08-19 13:32:00,631 [Process: 0] EPOCH 7:
2024-08-19 13:32:00,632 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2794, 0.2801, 0.2708,  ..., 0.2825, 0.2771, 0.2727],
         [0.2422, 0.2419, 0.2383,  ..., 0.2451, 0.2445, 0.2439],
         [0.2051, 0.2057, 0.2125,  ..., 0.1997, 0.2147, 0.2100],
         [0.2733, 0.2722, 0.2784,  ..., 0.2727, 0.2638, 0.2734]],
        [[0.2088, 0.2803, 0.2162,  ..., 0.2835, 0.1135, 0.2831],
         [0.2088, 0.2424, 0.2162,  ..., 0.2462, 0.1135, 0.2453],
         [0.3736, 0.2017, 0.3513,  ..., 0.1907, 0.6595, 0.2087],
         [0.2088, 0.2756, 0.2162,  ..., 0.2797, 0.1135, 0.2629]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0572, 0.2792, 0.2825,  ..., 0.2812, 0.2738, 0.2838],
         [0.0572, 0.2352, 0.2426,  ..., 0.2458, 0.2464, 0.2407],
         [0.8284, 0.2038, 0.2063,  ..., 0.2023, 0.2036, 0.1990],
         [0.0572, 0.2817, 0.2685,  ..., 0.2708, 0.2762, 0.2765]],
        [[0.2691, 0.2726, 0.2747,  ..., 0.2887, 0.2746, 0.2482],
         [0.2461, 0.2393, 0.2399,  ..., 0.2423, 0.2422, 0.2366],
         [0.2131, 0.2227, 0.2044,  ..., 0.2012, 0.2087, 0.2350],
         [0.2717, 0.2654, 0.2810,  ..., 0.2679, 0.2745, 0.2802]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2773, 0.2831, 0.3078,  ..., 0.2919, 0.2881, 0.2891],
         [0.2341, 0.2318, 0.2357,  ..., 0.2330, 0.2351, 0.2360],
         [0.2095, 0.2123, 0.1848,  ..., 0.1929, 0.2075, 0.2027],
         [0.2791, 0.2728, 0.2716,  ..., 0.2822, 0.2693, 0.2722]],
        [[0.0597, 0.2855, 0.1539,  ..., 0.2987, 0.0359, 0.2923],
         [0.0597, 0.2314, 0.1539,  ..., 0.2356, 0.0359, 0.2366],
         [0.8208, 0.2001, 0.5382,  ..., 0.1953, 0.8924, 0.1965],
         [0.0597, 0.2830, 0.1539,  ..., 0.2704, 0.0359, 0.2747]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0074, 0.2916, 0.3059,  ..., 0.2879, 0.2782, 0.3039],
         [0.0074, 0.2323, 0.2293,  ..., 0.2317, 0.2407, 0.2316],
         [0.9778, 0.1929, 0.1873,  ..., 0.2067, 0.2071, 0.1912],
         [0.0074, 0.2832, 0.2774,  ..., 0.2738, 0.2740, 0.2733]],
        [[0.2789, 0.2940, 0.2882,  ..., 0.2904, 0.2659, 0.2528],
         [0.2288, 0.2342, 0.2295,  ..., 0.2368, 0.2261, 0.2353],
         [0.2120, 0.1958, 0.2016,  ..., 0.1998, 0.2245, 0.2353],
         [0.2802, 0.2759, 0.2806,  ..., 0.2730, 0.2835, 0.2766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:01,608 [Process: 0] Synchronize training processes
2024-08-19 13:32:01,608 [Process: 0] Evaluating...
2024-08-19 13:32:01,610 [Process: 0] EPOCH 8:
2024-08-19 13:32:01,612 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:02,602 [Process: 0] Synchronize training processes
2024-08-19 13:32:02,602 [Process: 0] Evaluating...
2024-08-19 13:32:02,604 [Process: 0] EPOCH 9:
2024-08-19 13:32:02,605 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2834, 0.2587, 0.3052,  ..., 0.3082, 0.2689, 0.2659],
         [0.2396, 0.2375, 0.2254,  ..., 0.2291, 0.2452, 0.2362],
         [0.2029, 0.2288, 0.1915,  ..., 0.1911, 0.2127, 0.2114],
         [0.2741, 0.2750, 0.2778,  ..., 0.2716, 0.2732, 0.2865]],
        [[0.1633, 0.3043, 0.2216,  ..., 0.3086, 0.0355, 0.2964],
         [0.1633, 0.2252, 0.2380,  ..., 0.2277, 0.0355, 0.2235],
         [0.5100, 0.2020, 0.3055,  ..., 0.1942, 0.8934, 0.1955],
         [0.1633, 0.2685, 0.2348,  ..., 0.2695, 0.0355, 0.2845]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1125, 0.3061, 0.3404,  ..., 0.3133, 0.2867, 0.3153],
         [0.1198, 0.2204, 0.2186,  ..., 0.2247, 0.2322, 0.2308],
         [0.6551, 0.1838, 0.1660,  ..., 0.1885, 0.2018, 0.1803],
         [0.1125, 0.2898, 0.2750,  ..., 0.2735, 0.2793, 0.2736]],
        [[0.2895, 0.3011, 0.2989,  ..., 0.3007, 0.2860, 0.1699],
         [0.2256, 0.2371, 0.2203,  ..., 0.2271, 0.2342, 0.1699],
         [0.2035, 0.1867, 0.1857,  ..., 0.1999, 0.2048, 0.4723],
         [0.2814, 0.2751, 0.2950,  ..., 0.2723, 0.2750, 0.1879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2903, 0.2115, 0.2855,  ..., 0.2918, 0.2450, 0.2538],
         [0.2349, 0.2184, 0.2204,  ..., 0.2293, 0.2363, 0.2360],
         [0.2035, 0.3261, 0.2199,  ..., 0.1964, 0.2522, 0.2360],
         [0.2713, 0.2439, 0.2742,  ..., 0.2824, 0.2665, 0.2742]],
        [[0.2155, 0.3214, 0.2908,  ..., 0.3366, 0.0121, 0.3345],
         [0.2155, 0.2163, 0.2218,  ..., 0.2143, 0.0121, 0.2167],
         [0.3534, 0.1873, 0.2064,  ..., 0.1788, 0.9637, 0.1713],
         [0.2155, 0.2750, 0.2810,  ..., 0.2703, 0.0121, 0.2775]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0944, 0.3047, 0.3046,  ..., 0.3450, 0.3064, 0.3206],
         [0.0944, 0.2225, 0.2088,  ..., 0.2086, 0.2112, 0.2127],
         [0.7167, 0.1947, 0.1964,  ..., 0.1693, 0.1913, 0.1829],
         [0.0944, 0.2782, 0.2901,  ..., 0.2772, 0.2911, 0.2837]],
        [[0.3255, 0.3254, 0.3417,  ..., 0.2900, 0.2785, 0.1737],
         [0.2136, 0.2177, 0.2150,  ..., 0.2185, 0.2247, 0.1952],
         [0.1804, 0.1967, 0.1749,  ..., 0.2054, 0.2141, 0.4349],
         [0.2805, 0.2602, 0.2683,  ..., 0.2861, 0.2827, 0.1961]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:03,582 [Process: 0] Synchronize training processes
2024-08-19 13:32:03,582 [Process: 0] Evaluating...
2024-08-19 13:32:03,584 [Process: 0] EPOCH 10:
2024-08-19 13:32:03,586 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:04,557 [Process: 0] Synchronize training processes
2024-08-19 13:32:04,558 [Process: 0] Evaluating...
2024-08-19 13:32:04,560 [Process: 0] EPOCH 11:
2024-08-19 13:32:04,561 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3030, 0.3344, 0.2508,  ..., 0.2706, 0.2031, 0.2563],
         [0.2225, 0.2063, 0.2369,  ..., 0.2248, 0.2031, 0.2312],
         [0.1985, 0.1857, 0.2369,  ..., 0.2248, 0.3899, 0.2312],
         [0.2760, 0.2736, 0.2754,  ..., 0.2798, 0.2038, 0.2813]],
        [[0.2142, 0.3480, 0.3330,  ..., 0.3206, 0.1010, 0.3567],
         [0.2145, 0.2120, 0.2026,  ..., 0.2110, 0.1010, 0.1995],
         [0.3472, 0.1830, 0.1914,  ..., 0.1886, 0.6971, 0.1736],
         [0.2242, 0.2571, 0.2730,  ..., 0.2797, 0.1010, 0.2702]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3533, 0.2770, 0.2153,  ..., 0.3608, 0.3200, 0.3347],
         [0.2101, 0.2307, 0.2096,  ..., 0.1898, 0.2014, 0.1995],
         [0.1718, 0.2182, 0.3221,  ..., 0.1790, 0.2014, 0.1860],
         [0.2647, 0.2741, 0.2529,  ..., 0.2703, 0.2772, 0.2798]],
        [[0.3497, 0.3509, 0.3790,  ..., 0.3187, 0.3009, 0.1313],
         [0.1983, 0.1953, 0.1881,  ..., 0.2041, 0.2198, 0.1664],
         [0.1732, 0.1791, 0.1635,  ..., 0.1922, 0.2033, 0.5711],
         [0.2787, 0.2747, 0.2695,  ..., 0.2851, 0.2761, 0.1313]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3185, 0.1914, 0.3297,  ..., 0.3542, 0.3031, 0.1261],
         [0.2062, 0.1914, 0.2136,  ..., 0.1922, 0.2257, 0.1261],
         [0.1871, 0.4259, 0.1884,  ..., 0.1666, 0.1931, 0.6216],
         [0.2882, 0.1914, 0.2683,  ..., 0.2871, 0.2781, 0.1261]],
        [[0.1719, 0.3545, 0.1950,  ..., 0.3403, 0.1761, 0.3498],
         [0.2048, 0.1943, 0.2028,  ..., 0.1939, 0.1761, 0.1873],
         [0.4333, 0.1718, 0.3632,  ..., 0.1725, 0.4718, 0.1714],
         [0.1900, 0.2795, 0.2390,  ..., 0.2933, 0.1761, 0.2914]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3189, 0.3189, 0.3486,  ..., 0.3500, 0.3949, 0.3325],
         [0.2133, 0.1983, 0.1915,  ..., 0.1870, 0.1789, 0.2035],
         [0.1813, 0.1823, 0.1696,  ..., 0.1824, 0.1559, 0.1684],
         [0.2866, 0.3004, 0.2903,  ..., 0.2807, 0.2703, 0.2956]],
        [[0.3724, 0.3489, 0.3700,  ..., 0.2888, 0.2015, 0.1494],
         [0.1687, 0.1969, 0.1819,  ..., 0.2085, 0.2167, 0.1494],
         [0.1610, 0.1643, 0.1607,  ..., 0.2085, 0.3455, 0.5379],
         [0.2979, 0.2900, 0.2874,  ..., 0.2943, 0.2363, 0.1632]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:32:05,533 [Process: 0] Synchronize training processes
2024-08-19 13:32:05,534 [Process: 0] Evaluating...
2024-08-19 13:32:06,486 [Process: 0] EPOCH 12:
2024-08-19 13:32:06,489 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3176, 0.3694, 0.3597,  ..., 0.3482, 0.3014, 0.2626],
         [0.1964, 0.1802, 0.1940,  ..., 0.1946, 0.2123, 0.2124],
         [0.1832, 0.1802, 0.1715,  ..., 0.1738, 0.2024, 0.2124],
         [0.3028, 0.2702, 0.2747,  ..., 0.2834, 0.2839, 0.3125]],
        [[0.1733, 0.3641, 0.3604,  ..., 0.3838, 0.0884, 0.3023],
         [0.1733, 0.1857, 0.1925,  ..., 0.1838, 0.0884, 0.2030],
         [0.4800, 0.1679, 0.1858,  ..., 0.1606, 0.7347, 0.1984],
         [0.1733, 0.2824, 0.2612,  ..., 0.2719, 0.0884, 0.2963]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3365, 0.3234, 0.3786,  ..., 0.3845, 0.3518, 0.3038],
         [0.2070, 0.1914, 0.1746,  ..., 0.1827, 0.1937, 0.1971],
         [0.1809, 0.1838, 0.1633,  ..., 0.1579, 0.1759, 0.1957],
         [0.2755, 0.3014, 0.2834,  ..., 0.2749, 0.2787, 0.3033]],
        [[0.3483, 0.3492, 0.3856,  ..., 0.3486, 0.2345, 0.1642],
         [0.1877, 0.1919, 0.1830,  ..., 0.1963, 0.2192, 0.1648],
         [0.1611, 0.1813, 0.1737,  ..., 0.1781, 0.2465, 0.4884],
         [0.3029, 0.2776, 0.2577,  ..., 0.2769, 0.2998, 0.1826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3130, 0.3115, 0.3582,  ..., 0.3332, 0.2294, 0.2980],
         [0.1989, 0.1952, 0.1855,  ..., 0.1887, 0.2132, 0.2086],
         [0.1989, 0.1952, 0.1602,  ..., 0.1887, 0.3170, 0.2086],
         [0.2893, 0.2980, 0.2961,  ..., 0.2895, 0.2404, 0.2849]],
        [[0.2019, 0.3337, 0.3279,  ..., 0.3221, 0.1915, 0.3401],
         [0.2019, 0.1935, 0.2039,  ..., 0.1923, 0.1915, 0.1956],
         [0.3918, 0.1905, 0.1948,  ..., 0.1919, 0.4255, 0.1791],
         [0.2044, 0.2823, 0.2734,  ..., 0.2937, 0.1915, 0.2852]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:32:07,465 [Process: 0] Synchronize training processes
2024-08-19 13:32:07,465 [Process: 0] Evaluating...
2024-08-19 13:32:07,467 [Process: 0] EPOCH 13:
2024-08-19 13:32:07,469 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:08,442 [Process: 0] Synchronize training processes
2024-08-19 13:32:08,442 [Process: 0] Evaluating...
2024-08-19 13:32:08,444 [Process: 0] EPOCH 14:
2024-08-19 13:32:08,446 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3257, 0.3979, 0.3732,  ..., 0.3545, 0.3010, 0.3200],
         [0.2183, 0.1800, 0.1762,  ..., 0.1833, 0.1950, 0.1938],
         [0.1803, 0.1545, 0.1696,  ..., 0.1748, 0.1950, 0.1938],
         [0.2757, 0.2676, 0.2810,  ..., 0.2874, 0.3091, 0.2924]],
        [[0.3212, 0.2746, 0.3365,  ..., 0.3439, 0.2384, 0.1598],
         [0.2032, 0.2082, 0.1897,  ..., 0.1934, 0.2101, 0.1784],
         [0.1791, 0.2082, 0.1897,  ..., 0.1722, 0.2600, 0.4669],
         [0.2965, 0.3091, 0.2841,  ..., 0.2905, 0.2916, 0.1949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3584, 0.0725, 0.3067,  ..., 0.3292, 0.3540, 0.2245],
         [0.1844, 0.0725, 0.2003,  ..., 0.2025, 0.1914, 0.2245],
         [0.1844, 0.7824, 0.2003,  ..., 0.2025, 0.1879, 0.2298],
         [0.2729, 0.0725, 0.2928,  ..., 0.2658, 0.2668, 0.3211]],
        [[0.0632, 0.3610, 0.0819,  ..., 0.3990, 0.1320, 0.3369],
         [0.0632, 0.1774, 0.0819,  ..., 0.1761, 0.1320, 0.1921],
         [0.8105, 0.1774, 0.7542,  ..., 0.1716, 0.6041, 0.1921],
         [0.0632, 0.2843, 0.0819,  ..., 0.2534, 0.1320, 0.2789]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1600, 0.3694, 0.2810,  ..., 0.2723, 0.2988, 0.3023],
         [0.1652, 0.1869, 0.2013,  ..., 0.2053, 0.2042, 0.1927],
         [0.5148, 0.1686, 0.2013,  ..., 0.2053, 0.2042, 0.1927],
         [0.1600, 0.2750, 0.3163,  ..., 0.3171, 0.2928, 0.3123]],
        [[0.3579, 0.4007, 0.4949,  ..., 0.4729, 0.2992, 0.1893],
         [0.1927, 0.1718, 0.1503,  ..., 0.1445, 0.2059, 0.1893],
         [0.1709, 0.1641, 0.1285,  ..., 0.1352, 0.1914, 0.4170],
         [0.2785, 0.2635, 0.2263,  ..., 0.2474, 0.3035, 0.2044]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3186, 0.4206, 0.4522,  ..., 0.4750, 0.1361, 0.2764],
         [0.2129, 0.1750, 0.1533,  ..., 0.1512, 0.1361, 0.2080],
         [0.2041, 0.1603, 0.1445,  ..., 0.1462, 0.5918, 0.2080],
         [0.2645, 0.2441, 0.2500,  ..., 0.2277, 0.1361, 0.3075]],
        [[0.1309, 0.2739, 0.4663,  ..., 0.3247, 0.0442, 0.3045],
         [0.1309, 0.2113, 0.1522,  ..., 0.1927, 0.0442, 0.1899],
         [0.6073, 0.2113, 0.1471,  ..., 0.1927, 0.8673, 0.1899],
         [0.1309, 0.3035, 0.2344,  ..., 0.2899, 0.0442, 0.3158]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:32:09,420 [Process: 0] Synchronize training processes
2024-08-19 13:32:09,421 [Process: 0] Evaluating...
2024-08-19 13:32:09,422 [Process: 0] EPOCH 15:
2024-08-19 13:32:09,424 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:10,400 [Process: 0] Synchronize training processes
2024-08-19 13:32:10,400 [Process: 0] Evaluating...
2024-08-19 13:32:10,402 [Process: 0] EPOCH 16:
2024-08-19 13:32:10,404 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:11,378 [Process: 0] Synchronize training processes
2024-08-19 13:32:11,378 [Process: 0] Evaluating...
2024-08-19 13:32:11,380 [Process: 0] EPOCH 17:
2024-08-19 13:32:11,381 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0758, 0.3841, 0.3845,  ..., 0.3959, 0.3387, 0.3138],
         [0.0758, 0.1763, 0.1716,  ..., 0.1700, 0.1931, 0.2097],
         [0.7725, 0.1763, 0.1716,  ..., 0.1700, 0.1931, 0.2097],
         [0.0758, 0.2633, 0.2723,  ..., 0.2642, 0.2751, 0.2668]],
        [[0.4122, 0.3439, 0.3646,  ..., 0.4915, 0.3657, 0.1984],
         [0.1687, 0.1835, 0.1829,  ..., 0.1419, 0.1845, 0.1984],
         [0.1543, 0.1835, 0.1829,  ..., 0.1419, 0.1746, 0.3741],
         [0.2647, 0.2891, 0.2695,  ..., 0.2248, 0.2753, 0.2290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2458, 0.1601, 0.3360,  ..., 0.5139, 0.2406, 0.2310],
         [0.2126, 0.1601, 0.1971,  ..., 0.1417, 0.2078, 0.2310],
         [0.2359, 0.5196, 0.1971,  ..., 0.1322, 0.2793, 0.2310],
         [0.3058, 0.1601, 0.2698,  ..., 0.2122, 0.2724, 0.3069]],
        [[0.1536, 0.2478, 0.2742,  ..., 0.4436, 0.0571, 0.3543],
         [0.1536, 0.2242, 0.2164,  ..., 0.1537, 0.0571, 0.1784],
         [0.5391, 0.2242, 0.2164,  ..., 0.1537, 0.8287, 0.1784],
         [0.1536, 0.3039, 0.2930,  ..., 0.2491, 0.0571, 0.2889]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1436, 0.4936, 0.4756,  ..., 0.3617, 0.2188, 0.2736],
         [0.1525, 0.1525, 0.1382,  ..., 0.1799, 0.2188, 0.2038],
         [0.5604, 0.1281, 0.1311,  ..., 0.1799, 0.2343, 0.2038],
         [0.1436, 0.2258, 0.2551,  ..., 0.2785, 0.3281, 0.3187]],
        [[0.4014, 0.3818, 0.5893,  ..., 0.3645, 0.4147, 0.1890],
         [0.1560, 0.1729, 0.1186,  ..., 0.1806, 0.1631, 0.1890],
         [0.1524, 0.1729, 0.1026,  ..., 0.1806, 0.1631, 0.3945],
         [0.2902, 0.2724, 0.1895,  ..., 0.2744, 0.2592, 0.2275]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2836, 0.1570, 0.3263,  ..., 0.3973, 0.3112, 0.2168],
         [0.2082, 0.1570, 0.1986,  ..., 0.1734, 0.2017, 0.2168],
         [0.2059, 0.5289, 0.1986,  ..., 0.1670, 0.1971, 0.2168],
         [0.3022, 0.1570, 0.2764,  ..., 0.2623, 0.2900, 0.3497]],
        [[0.1897, 0.3832, 0.2114,  ..., 0.4616, 0.1224, 0.3681],
         [0.1897, 0.1742, 0.2114,  ..., 0.1526, 0.1224, 0.1791],
         [0.4171, 0.1571, 0.2773,  ..., 0.1405, 0.6327, 0.1791],
         [0.2036, 0.2855, 0.2999,  ..., 0.2453, 0.1224, 0.2738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:32:12,354 [Process: 0] Synchronize training processes
2024-08-19 13:32:12,354 [Process: 0] Evaluating...
2024-08-19 13:32:12,356 [Process: 0] EPOCH 18:
2024-08-19 13:32:12,358 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:13,329 [Process: 0] Synchronize training processes
2024-08-19 13:32:13,329 [Process: 0] Evaluating...
2024-08-19 13:32:13,331 [Process: 0] EPOCH 19:
2024-08-19 13:32:13,333 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1537, 0.4244, 0.5997,  ..., 0.3741, 0.2149, 0.3014],
         [0.1537, 0.1650, 0.1137,  ..., 0.1878, 0.2161, 0.1922],
         [0.5390, 0.1650, 0.1063,  ..., 0.1878, 0.2254, 0.1922],
         [0.1537, 0.2455, 0.1803,  ..., 0.2503, 0.3436, 0.3142]],
        [[0.5109, 0.3796, 0.3760,  ..., 0.5098, 0.3470, 0.1818],
         [0.1261, 0.1720, 0.1815,  ..., 0.1313, 0.1861, 0.1818],
         [0.1261, 0.1720, 0.1782,  ..., 0.1243, 0.1765, 0.4150],
         [0.2370, 0.2764, 0.2643,  ..., 0.2346, 0.2904, 0.2213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2872, 0.0737, 0.2463,  ..., 0.2994, 0.3114, 0.3835],
         [0.2009, 0.0737, 0.2074,  ..., 0.2021, 0.1996, 0.1718],
         [0.1963, 0.7788, 0.2074,  ..., 0.2021, 0.1966, 0.1657],
         [0.3157, 0.0737, 0.3388,  ..., 0.2964, 0.2925, 0.2790]],
        [[0.1760, 0.4578, 0.1741,  ..., 0.3360, 0.1237, 0.3548],
         [0.1760, 0.1519, 0.1741,  ..., 0.1912, 0.1237, 0.1906],
         [0.4639, 0.1422, 0.4725,  ..., 0.1869, 0.6288, 0.1906],
         [0.1842, 0.2481, 0.1792,  ..., 0.2859, 0.1237, 0.2641]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1937, 0.2988, 0.4335,  ..., 0.2487, 0.1850, 0.1779],
         [0.1937, 0.2009, 0.1646,  ..., 0.2147, 0.1850, 0.1779],
         [0.3596, 0.1870, 0.1607,  ..., 0.2147, 0.4207, 0.4023],
         [0.2531, 0.3134, 0.2411,  ..., 0.3219, 0.2093, 0.2420]],
        [[0.5768, 0.6496, 0.4303,  ..., 0.5843, 0.3997, 0.1869],
         [0.1262, 0.1090, 0.1630,  ..., 0.1247, 0.1671, 0.1869],
         [0.1026, 0.0834, 0.1471,  ..., 0.0871, 0.1631, 0.3689],
         [0.1944, 0.1579, 0.2595,  ..., 0.2039, 0.2701, 0.2573]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3659, 0.1405, 0.2046,  ..., 0.4430, 0.3725, 0.3274],
         [0.1810, 0.1405, 0.2046,  ..., 0.1511, 0.1853, 0.1972],
         [0.1803, 0.5785, 0.2994,  ..., 0.1511, 0.1665, 0.1972],
         [0.2728, 0.1405, 0.2914,  ..., 0.2549, 0.2757, 0.2783]],
        [[0.1901, 0.2985, 0.2097,  ..., 0.2231, 0.1314, 0.3907],
         [0.1901, 0.2017, 0.2097,  ..., 0.2231, 0.1314, 0.1658],
         [0.4032, 0.2017, 0.2720,  ..., 0.2281, 0.6057, 0.1625],
         [0.2166, 0.2982, 0.3087,  ..., 0.3258, 0.1314, 0.2811]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:32:14,304 [Process: 0] Synchronize training processes
2024-08-19 13:32:14,304 [Process: 0] Evaluating...
2024-08-19 13:32:14,306 [Process: 0] EPOCH 20:
2024-08-19 13:32:14,308 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:15,281 [Process: 0] Synchronize training processes
2024-08-19 13:32:15,282 [Process: 0] Evaluating...
2024-08-19 13:32:15,284 [Process: 0] EPOCH 21:
2024-08-19 13:32:15,285 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3082, 0.4032, 0.5581,  ..., 0.4887, 0.1703, 0.1446],
         [0.2070, 0.1678, 0.1218,  ..., 0.1465, 0.1703, 0.1446],
         [0.1884, 0.1626, 0.1075,  ..., 0.1298, 0.4652, 0.5662],
         [0.2964, 0.2664, 0.2126,  ..., 0.2350, 0.1943, 0.1446]],
        [[0.3432, 0.3315, 0.3211,  ..., 0.4275, 0.3157, 0.1778],
         [0.1812, 0.1878, 0.1807,  ..., 0.1656, 0.1911, 0.1778],
         [0.1648, 0.1654, 0.1772,  ..., 0.1656, 0.1911, 0.4287],
         [0.3108, 0.3153, 0.3210,  ..., 0.2412, 0.3022, 0.2156]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3292, 0.1738, 0.2374,  ..., 0.4429, 0.3271, 0.4494],
         [0.1893, 0.1738, 0.2015,  ..., 0.1498, 0.1814, 0.1659],
         [0.1845, 0.4519, 0.2137,  ..., 0.1464, 0.1814, 0.1485],
         [0.2970, 0.2005, 0.3473,  ..., 0.2609, 0.3101, 0.2363]],
        [[0.1971, 0.2400, 0.1785,  ..., 0.2574, 0.1205, 0.4566],
         [0.1993, 0.2022, 0.1785,  ..., 0.1939, 0.1205, 0.1675],
         [0.3616, 0.2022, 0.3939,  ..., 0.1939, 0.6386, 0.1328],
         [0.2419, 0.3555, 0.2492,  ..., 0.3548, 0.1205, 0.2432]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1744, 0.5756, 0.4678,  ..., 0.3636, 0.0947, 0.1286],
         [0.1744, 0.1293, 0.1554,  ..., 0.1630, 0.0947, 0.1286],
         [0.4769, 0.1096, 0.1295,  ..., 0.1501, 0.7158, 0.6142],
         [0.1744, 0.1855, 0.2473,  ..., 0.3233, 0.0947, 0.1286]],
        [[0.4400, 0.4527, 0.3996,  ..., 0.5966, 0.2017, 0.1460],
         [0.1642, 0.1537, 0.1684,  ..., 0.1200, 0.2017, 0.1460],
         [0.1445, 0.1466, 0.1585,  ..., 0.0903, 0.2017, 0.5318],
         [0.2513, 0.2470, 0.2735,  ..., 0.1930, 0.3949, 0.1762]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2839, 0.1537, 0.3916,  ..., 0.4211, 0.3108, 0.3345],
         [0.1917, 0.1537, 0.1644,  ..., 0.1596, 0.1932, 0.1754],
         [0.1917, 0.5311, 0.1533,  ..., 0.1433, 0.1932, 0.1754],
         [0.3326, 0.1614, 0.2907,  ..., 0.2761, 0.3027, 0.3146]],
        [[0.2527, 0.3610, 0.1259,  ..., 0.2749, 0.1820, 0.6129],
         [0.1976, 0.1664, 0.1259,  ..., 0.1867, 0.1820, 0.1084],
         [0.2555, 0.1660, 0.6224,  ..., 0.1867, 0.4539, 0.1032],
         [0.2941, 0.3067, 0.1259,  ..., 0.3517, 0.1820, 0.1755]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:32:16,258 [Process: 0] Synchronize training processes
2024-08-19 13:32:16,258 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1536, 0.3802, 0.4984,  ..., 0.4244, 0.2372, 0.1807],
         [0.1536, 0.1689, 0.1384,  ..., 0.1602, 0.1917, 0.1807],
         [0.5392, 0.1489, 0.1290,  ..., 0.1602, 0.1917, 0.1948],
         [0.1536, 0.3021, 0.2342,  ..., 0.2551, 0.3794, 0.4437]],
        [[0.4694, 0.4886, 0.5243,  ..., 0.5425, 0.1718, 0.0947],
         [0.1463, 0.1666, 0.1339,  ..., 0.1424, 0.1718, 0.0947],
         [0.1320, 0.1369, 0.1339,  ..., 0.1116, 0.1888, 0.7158],
         [0.2523, 0.2079, 0.2079,  ..., 0.2036, 0.4677, 0.0947]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3046, 0.1707, 0.1610,  ..., 0.2552, 0.2565, 0.2661],
         [0.1977, 0.1707, 0.1610,  ..., 0.1895, 0.1780, 0.1972],
         [0.1977, 0.4275, 0.5171,  ..., 0.1895, 0.1757, 0.1972],
         [0.3000, 0.2311, 0.1610,  ..., 0.3657, 0.3898, 0.3395]],
        [[0.3773, 0.2947, 0.2914,  ..., 0.2197, 0.2099, 0.5677],
         [0.1777, 0.1897, 0.1837,  ..., 0.2013, 0.2052, 0.1300],
         [0.1777, 0.1897, 0.1787,  ..., 0.2013, 0.2795, 0.1231],
         [0.2673, 0.3260, 0.3461,  ..., 0.3777, 0.3054, 0.1792]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1759, 0.4000, 0.3653,  ..., 0.4469, 0.2055, 0.1747],
         [0.1759, 0.1794, 0.1702,  ..., 0.1613, 0.1917, 0.1802],
         [0.4007, 0.1501, 0.1660,  ..., 0.1613, 0.1917, 0.1747],
         [0.2474, 0.2705, 0.2985,  ..., 0.2305, 0.4110, 0.4705]],
        [[0.4539, 0.4979, 0.4741,  ..., 0.4840, 0.1928, 0.1425],
         [0.1603, 0.1551, 0.1505,  ..., 0.1687, 0.1928, 0.1425],
         [0.1603, 0.1376, 0.1435,  ..., 0.1351, 0.1928, 0.5724],
         [0.2256, 0.2094, 0.2319,  ..., 0.2122, 0.4216, 0.1425]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:32:17,216 [Process: 0] EPOCH 22:
2024-08-19 13:32:17,220 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:18,198 [Process: 0] Synchronize training processes
2024-08-19 13:32:18,198 [Process: 0] Evaluating...
2024-08-19 13:32:18,200 [Process: 0] EPOCH 23:
2024-08-19 13:32:18,202 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2727, 0.1863, 0.3727,  ..., 0.2923, 0.3179, 0.1957],
         [0.1981, 0.1863, 0.1779,  ..., 0.1937, 0.1993, 0.1957],
         [0.2042, 0.3067, 0.1779,  ..., 0.1937, 0.1993, 0.2100],
         [0.3250, 0.3207, 0.2714,  ..., 0.3203, 0.2835, 0.3986]],
        [[0.1634, 0.1742, 0.1990,  ..., 0.1888, 0.1614, 0.5100],
         [0.1634, 0.1742, 0.1990,  ..., 0.1888, 0.1614, 0.1589],
         [0.5099, 0.2585, 0.3343,  ..., 0.1888, 0.5057, 0.1317],
         [0.1634, 0.3932, 0.2677,  ..., 0.4336, 0.1715, 0.1994]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1756, 0.4539, 0.4781,  ..., 0.5382, 0.2094, 0.1637],
         [0.1756, 0.1561, 0.1524,  ..., 0.1429, 0.1858, 0.1637],
         [0.4733, 0.1561, 0.1524,  ..., 0.1429, 0.1858, 0.1637],
         [0.1756, 0.2339, 0.2170,  ..., 0.1761, 0.4190, 0.5089]],
        [[0.6126, 0.4874, 0.6766,  ..., 0.7006, 0.2027, 0.1350],
         [0.1432, 0.1678, 0.1102,  ..., 0.1109, 0.2027, 0.1350],
         [0.1221, 0.1430, 0.1041,  ..., 0.0912, 0.2027, 0.5951],
         [0.1221, 0.2018, 0.1091,  ..., 0.0972, 0.3918, 0.1350]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2885, 0.1806, 0.4329,  ..., 0.3706, 0.2419, 0.1795],
         [0.1930, 0.1806, 0.1716,  ..., 0.1800, 0.2048, 0.1795],
         [0.1855, 0.2281, 0.1716,  ..., 0.1800, 0.2048, 0.1795],
         [0.3330, 0.4107, 0.2238,  ..., 0.2694, 0.3484, 0.4616]],
        [[0.1644, 0.1791, 0.1850,  ..., 0.1856, 0.1185, 0.2654],
         [0.1644, 0.1791, 0.1850,  ..., 0.1856, 0.1185, 0.1918],
         [0.5068, 0.1791, 0.4093,  ..., 0.1856, 0.6444, 0.1825],
         [0.1644, 0.4627, 0.2207,  ..., 0.4431, 0.1185, 0.3603]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:32:19,181 [Process: 0] Synchronize training processes
2024-08-19 13:32:19,181 [Process: 0] Evaluating...
2024-08-19 13:32:19,183 [Process: 0] EPOCH 24:
2024-08-19 13:32:19,185 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:20,160 [Process: 0] Synchronize training processes
2024-08-19 13:32:20,160 [Process: 0] Evaluating...
2024-08-19 13:32:20,162 [Process: 0] EPOCH 25:
2024-08-19 13:32:20,164 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1516, 0.5025, 0.3697,  ..., 0.4709, 0.1758, 0.1931],
         [0.1525, 0.1473, 0.1819,  ..., 0.1716, 0.1758, 0.1931],
         [0.5428, 0.1473, 0.1819,  ..., 0.1716, 0.1949, 0.2245],
         [0.1531, 0.2029, 0.2665,  ..., 0.1860, 0.4534, 0.3894]],
        [[0.6830, 0.4573, 0.6741,  ..., 0.6747, 0.1466, 0.1370],
         [0.1227, 0.1681, 0.1259,  ..., 0.1084, 0.1466, 0.1370],
         [0.0941, 0.1681, 0.0986,  ..., 0.1084, 0.1466, 0.5889],
         [0.1002, 0.2064, 0.1014,  ..., 0.1084, 0.5603, 0.1370]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2098, 0.1665, 0.2853,  ..., 0.5525, 0.1906, 0.1516],
         [0.1961, 0.1665, 0.1944,  ..., 0.1473, 0.1906, 0.1516],
         [0.1961, 0.1684, 0.1944,  ..., 0.1473, 0.1906, 0.1961],
         [0.3980, 0.4985, 0.3259,  ..., 0.1528, 0.4282, 0.5007]],
        [[0.3839, 0.1458, 0.1910,  ..., 0.1604, 0.1404, 0.2978],
         [0.1887, 0.1458, 0.1948,  ..., 0.1604, 0.1404, 0.1896],
         [0.1887, 0.1458, 0.3615,  ..., 0.1604, 0.5787, 0.1896],
         [0.2386, 0.5627, 0.2528,  ..., 0.5187, 0.1404, 0.3229]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1541, 0.3778, 0.3810,  ..., 0.4139, 0.1669, 0.1626],
         [0.1541, 0.1785, 0.1850,  ..., 0.1773, 0.1789, 0.1626],
         [0.5328, 0.1695, 0.1850,  ..., 0.1773, 0.1669, 0.1626],
         [0.1589, 0.2742, 0.2490,  ..., 0.2315, 0.4872, 0.5123]],
        [[0.7834, 0.8506, 0.7340,  ..., 0.5695, 0.1283, 0.1483],
         [0.0766, 0.0573, 0.0967,  ..., 0.1412, 0.1283, 0.1546],
         [0.0700, 0.0460, 0.0847,  ..., 0.1412, 0.1283, 0.5270],
         [0.0700, 0.0460, 0.0847,  ..., 0.1481, 0.6152, 0.1702]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3035, 0.1578, 0.1777,  ..., 0.4331, 0.1957, 0.1760],
         [0.1958, 0.1578, 0.1780,  ..., 0.1759, 0.1957, 0.1760],
         [0.2215, 0.2044, 0.1777,  ..., 0.1704, 0.2313, 0.2262],
         [0.2792, 0.4800, 0.4665,  ..., 0.2206, 0.3772, 0.4218]],
        [[0.6659, 0.1940, 0.2466,  ..., 0.1483, 0.1400, 0.2359],
         [0.1213, 0.1940, 0.2051,  ..., 0.1483, 0.1400, 0.1960],
         [0.1064, 0.1940, 0.2190,  ..., 0.1483, 0.5792, 0.1960],
         [0.1064, 0.4179, 0.3293,  ..., 0.5552, 0.1408, 0.3722]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1599, 0.2335, 0.2794,  ..., 0.3917, 0.2018, 0.2288],
         [0.1599, 0.1858, 0.1964,  ..., 0.1901, 0.1923, 0.1839],
         [0.4972, 0.1858, 0.1964,  ..., 0.1901, 0.1923, 0.1839],
         [0.1829, 0.3949, 0.3278,  ..., 0.2282, 0.4136, 0.4035]],
        [[0.9386, 0.6727, 0.7598,  ..., 0.6678, 0.1300, 0.1330],
         [0.0211, 0.1091, 0.0904,  ..., 0.1107, 0.1300, 0.1444],
         [0.0201, 0.1091, 0.0749,  ..., 0.1107, 0.1300, 0.5467],
         [0.0201, 0.1091, 0.0749,  ..., 0.1107, 0.6101, 0.1758]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:32:21,140 [Process: 0] Synchronize training processes
2024-08-19 13:32:21,140 [Process: 0] Evaluating...
2024-08-19 13:32:21,142 [Process: 0] EPOCH 26:
2024-08-19 13:32:21,144 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:22,119 [Process: 0] Synchronize training processes
2024-08-19 13:32:22,119 [Process: 0] Evaluating...
2024-08-19 13:32:22,121 [Process: 0] EPOCH 27:
2024-08-19 13:32:22,123 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7621, 0.1607, 0.2026,  ..., 0.7040, 0.1547, 0.1734],
         [0.0793, 0.1607, 0.2026,  ..., 0.0987, 0.1547, 0.1734],
         [0.0793, 0.4972, 0.2026,  ..., 0.0987, 0.1547, 0.1734],
         [0.0793, 0.1814, 0.3921,  ..., 0.0987, 0.5359, 0.4799]],
        [[0.5210, 0.1695, 0.2421,  ..., 0.1499, 0.0188, 0.3123],
         [0.1597, 0.1754, 0.2061,  ..., 0.1499, 0.0188, 0.2038],
         [0.1597, 0.1695, 0.2061,  ..., 0.1499, 0.9435, 0.2038],
         [0.1597, 0.4857, 0.3457,  ..., 0.5503, 0.0188, 0.2801]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0590, 0.4509, 0.6681,  ..., 0.5956, 0.4159, 0.4250],
         [0.0590, 0.1830, 0.1106,  ..., 0.1348, 0.1938, 0.1917],
         [0.8229, 0.1830, 0.1106,  ..., 0.1348, 0.1938, 0.1917],
         [0.0590, 0.1830, 0.1106,  ..., 0.1348, 0.1965, 0.1917]],
        [[0.5273, 0.5667, 0.7473,  ..., 0.4930, 0.1420, 0.1154],
         [0.1698, 0.1444, 0.0842,  ..., 0.1690, 0.1420, 0.1154],
         [0.1515, 0.1444, 0.0842,  ..., 0.1690, 0.1420, 0.5462],
         [0.1515, 0.1444, 0.0842,  ..., 0.1690, 0.5739, 0.2229]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1800, 0.3939, 0.5814,  ..., 0.1485, 0.2797, 0.1770],
         [0.1800, 0.1991, 0.1395,  ..., 0.1485, 0.1914, 0.1770],
         [0.1800, 0.1991, 0.1395,  ..., 0.1485, 0.1914, 0.2501],
         [0.4599, 0.2079, 0.1395,  ..., 0.5545, 0.3374, 0.3959]],
        [[0.0255, 0.2503, 0.2382,  ..., 0.1812, 0.1407, 0.8373],
         [0.0255, 0.1939, 0.1992,  ..., 0.1812, 0.1407, 0.0542],
         [0.9234, 0.1939, 0.1992,  ..., 0.1812, 0.5316, 0.0542],
         [0.0255, 0.3620, 0.3634,  ..., 0.4563, 0.1870, 0.0542]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4990, 0.2009, 0.3814,  ..., 0.5679, 0.1917, 0.1858],
         [0.1670, 0.1998, 0.1952,  ..., 0.1440, 0.1917, 0.1858],
         [0.1670, 0.1998, 0.1951,  ..., 0.1440, 0.1917, 0.1858],
         [0.1670, 0.3995, 0.2283,  ..., 0.1440, 0.4250, 0.4426]],
        [[0.8275, 0.8444, 0.7343,  ..., 0.2341, 0.3591, 0.1444],
         [0.0575, 0.0519, 0.0886,  ..., 0.1881, 0.1961, 0.1444],
         [0.0575, 0.0519, 0.0886,  ..., 0.1881, 0.1961, 0.3490],
         [0.0575, 0.0519, 0.0886,  ..., 0.3897, 0.2487, 0.3622]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:32:23,098 [Process: 0] Synchronize training processes
2024-08-19 13:32:23,098 [Process: 0] Evaluating...
2024-08-19 13:32:23,100 [Process: 0] EPOCH 28:
2024-08-19 13:32:23,102 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:24,103 [Process: 0] Synchronize training processes
2024-08-19 13:32:24,104 [Process: 0] Evaluating...
2024-08-19 13:32:24,106 [Process: 0] EPOCH 29:
2024-08-19 13:32:24,107 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6751, 0.4927, 0.3532,  ..., 0.6995, 0.4276, 0.1423],
         [0.1114, 0.1691, 0.2086,  ..., 0.1002, 0.1908, 0.1423],
         [0.1068, 0.1691, 0.2086,  ..., 0.1002, 0.1908, 0.1423],
         [0.1068, 0.1691, 0.2296,  ..., 0.1002, 0.1908, 0.5731]],
        [[0.0073, 0.1575, 0.1590,  ..., 0.1045, 0.1767, 0.6045],
         [0.0073, 0.1575, 0.1590,  ..., 0.1045, 0.1767, 0.1318],
         [0.9781, 0.1887, 0.4462,  ..., 0.1045, 0.4110, 0.1318],
         [0.0073, 0.4962, 0.2358,  ..., 0.6864, 0.2356, 0.1318]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1847, 0.1852, 0.4945,  ..., 0.7960, 0.3265, 0.2510],
         [0.1847, 0.1852, 0.1678,  ..., 0.0680, 0.1987, 0.2242],
         [0.2398, 0.1852, 0.1671,  ..., 0.0680, 0.1987, 0.2242],
         [0.3909, 0.4444, 0.1706,  ..., 0.0680, 0.2760, 0.3007]],
        [[0.8438, 0.8672, 0.5212,  ..., 0.6162, 0.1543, 0.0470],
         [0.0521, 0.0443, 0.1596,  ..., 0.1302, 0.1543, 0.0470],
         [0.0521, 0.0443, 0.1596,  ..., 0.1268, 0.4135, 0.8589],
         [0.0521, 0.0443, 0.1596,  ..., 0.1268, 0.2778, 0.0470]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3135, 0.2162, 0.2810,  ..., 0.8316, 0.4404, 0.1478],
         [0.2173, 0.2162, 0.2146,  ..., 0.0561, 0.1865, 0.1478],
         [0.2173, 0.2431, 0.2146,  ..., 0.0561, 0.1865, 0.1478],
         [0.2519, 0.3244, 0.2898,  ..., 0.0561, 0.1865, 0.5567]],
        [[0.0408, 0.1349, 0.1454,  ..., 0.1648, 0.1186, 0.4345],
         [0.0376, 0.1349, 0.1454,  ..., 0.1648, 0.1186, 0.1885],
         [0.8839, 0.1381, 0.1574,  ..., 0.1648, 0.5696, 0.1885],
         [0.0376, 0.5921, 0.5518,  ..., 0.5056, 0.1932, 0.1885]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1708, 0.2372, 0.3437,  ..., 0.4578, 0.1936, 0.2155],
         [0.1695, 0.2123, 0.1977,  ..., 0.1807, 0.1936, 0.2155],
         [0.3562, 0.2123, 0.1977,  ..., 0.1807, 0.1936, 0.2155],
         [0.3034, 0.3381, 0.2609,  ..., 0.1807, 0.4192, 0.3536]],
        [[0.5823, 0.8026, 0.9166,  ..., 0.8176, 0.1538, 0.0684],
         [0.1392, 0.0668, 0.0278,  ..., 0.0608, 0.1538, 0.0684],
         [0.1392, 0.0653, 0.0278,  ..., 0.0608, 0.1991, 0.7947],
         [0.1392, 0.0653, 0.0278,  ..., 0.0608, 0.4934, 0.0684]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:32:25,080 [Process: 0] Synchronize training processes
2024-08-19 13:32:25,081 [Process: 0] Evaluating...
2024-08-19 13:32:25,083 [Process: 0] EPOCH 30:
2024-08-19 13:32:25,084 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:26,057 [Process: 0] Synchronize training processes
2024-08-19 13:32:26,057 [Process: 0] Evaluating...
2024-08-19 13:32:26,059 [Process: 0] EPOCH 31:
2024-08-19 13:32:26,061 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2813, 0.2983, 0.3569,  ..., 0.5858, 0.4358, 0.1708],
         [0.2196, 0.2149, 0.2029,  ..., 0.1381, 0.1881, 0.1708],
         [0.2196, 0.2149, 0.2029,  ..., 0.1381, 0.1881, 0.1708],
         [0.2795, 0.2718, 0.2373,  ..., 0.1381, 0.1881, 0.4875]],
        [[0.5433, 0.1375, 0.1826,  ..., 0.1086, 0.1017, 0.2408],
         [0.1283, 0.1375, 0.1826,  ..., 0.1086, 0.1017, 0.2150],
         [0.2001, 0.2620, 0.2149,  ..., 0.1086, 0.6950, 0.2150],
         [0.1283, 0.4629, 0.4199,  ..., 0.6742, 0.1017, 0.3291]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2867, 0.2837, 0.2504,  ..., 0.5337, 0.4157, 0.3796],
         [0.2031, 0.2116, 0.2205,  ..., 0.1554, 0.1861, 0.1919],
         [0.2497, 0.2116, 0.2205,  ..., 0.1554, 0.1861, 0.1919],
         [0.2606, 0.2930, 0.3086,  ..., 0.1554, 0.2121, 0.2366]],
        [[0.1759, 0.5337, 0.5683,  ..., 0.4928, 0.1451, 0.0885],
         [0.1759, 0.1554, 0.1439,  ..., 0.1691, 0.1451, 0.0885],
         [0.1759, 0.1554, 0.1439,  ..., 0.1691, 0.1624, 0.7344],
         [0.4722, 0.1554, 0.1439,  ..., 0.1691, 0.5475, 0.0885]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1938, 0.2113, 0.1648,  ..., 0.5165, 0.2679, 0.1546],
         [0.1938, 0.2113, 0.1648,  ..., 0.1612, 0.2200, 0.1546],
         [0.2332, 0.2113, 0.1648,  ..., 0.1612, 0.2242, 0.1546],
         [0.3791, 0.3662, 0.5057,  ..., 0.1612, 0.2880, 0.5361]],
        [[0.4554, 0.1167, 0.1199,  ..., 0.1070, 0.1140, 0.5162],
         [0.1617, 0.1167, 0.1199,  ..., 0.1070, 0.1140, 0.1613],
         [0.2218, 0.1167, 0.1269,  ..., 0.1184, 0.6581, 0.1613],
         [0.1611, 0.6499, 0.6334,  ..., 0.6676, 0.1140, 0.1613]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1292, 0.4267, 0.2950,  ..., 0.2014, 0.2716, 0.2212],
         [0.1292, 0.1878, 0.1994,  ..., 0.2014, 0.2124, 0.1879],
         [0.5918, 0.1878, 0.1991,  ..., 0.2014, 0.2124, 0.1879],
         [0.1497, 0.1977, 0.3066,  ..., 0.3958, 0.3036, 0.4030]],
        [[0.2877, 0.8650, 0.8570,  ..., 0.7403, 0.0869, 0.0592],
         [0.1925, 0.0450, 0.0477,  ..., 0.0866, 0.0869, 0.0592],
         [0.1925, 0.0450, 0.0477,  ..., 0.0866, 0.1017, 0.8223],
         [0.3272, 0.0450, 0.0477,  ..., 0.0866, 0.7246, 0.0592]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:32:27,033 [Process: 0] Synchronize training processes
2024-08-19 13:32:27,033 [Process: 0] Evaluating...
2024-08-19 13:32:27,984 [Process: 0] EPOCH 32:
2024-08-19 13:32:27,988 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1911, 0.2050, 0.3307,  ..., 0.8590, 0.1983, 0.1223],
         [0.1911, 0.2050, 0.2092,  ..., 0.0470, 0.1983, 0.1223],
         [0.2954, 0.2645, 0.2092,  ..., 0.0470, 0.3038, 0.1223],
         [0.3225, 0.3255, 0.2510,  ..., 0.0470, 0.2997, 0.6332]],
        [[0.2000, 0.1204, 0.1083,  ..., 0.1664, 0.1479, 0.4790],
         [0.1324, 0.1204, 0.1083,  ..., 0.1664, 0.1479, 0.1737],
         [0.5352, 0.1204, 0.1083,  ..., 0.1664, 0.5562, 0.1737],
         [0.1324, 0.6389, 0.6751,  ..., 0.5007, 0.1479, 0.1737]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1284, 0.1821, 0.2029,  ..., 0.3337, 0.1900, 0.1973],
         [0.1284, 0.1821, 0.1961,  ..., 0.1903, 0.1900, 0.1934],
         [0.5829, 0.1821, 0.1961,  ..., 0.1903, 0.1900, 0.1934],
         [0.1603, 0.4536, 0.4049,  ..., 0.2858, 0.4300, 0.4159]],
        [[0.2366, 0.8627, 0.8239,  ..., 0.9190, 0.1584, 0.0561],
         [0.2053, 0.0458, 0.0587,  ..., 0.0270, 0.1584, 0.0561],
         [0.2053, 0.0458, 0.0587,  ..., 0.0270, 0.1584, 0.8318],
         [0.3527, 0.0458, 0.0587,  ..., 0.0270, 0.5249, 0.0561]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:28,961 [Process: 0] Synchronize training processes
2024-08-19 13:32:28,962 [Process: 0] Evaluating...
2024-08-19 13:32:28,964 [Process: 0] EPOCH 33:
2024-08-19 13:32:28,966 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:29,939 [Process: 0] Synchronize training processes
2024-08-19 13:32:29,939 [Process: 0] Evaluating...
2024-08-19 13:32:29,941 [Process: 0] EPOCH 34:
2024-08-19 13:32:29,943 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:30,914 [Process: 0] Synchronize training processes
2024-08-19 13:32:30,915 [Process: 0] Evaluating...
2024-08-19 13:32:30,917 [Process: 0] EPOCH 35:
2024-08-19 13:32:30,918 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2701, 0.3569, 0.1795,  ..., 0.7924, 0.2725, 0.1122],
         [0.2216, 0.2110, 0.1814,  ..., 0.0692, 0.2183, 0.1122],
         [0.2216, 0.2110, 0.1795,  ..., 0.0692, 0.2321, 0.1122],
         [0.2867, 0.2210, 0.4596,  ..., 0.0692, 0.2771, 0.6634]],
        [[0.5396, 0.1713, 0.1151,  ..., 0.1879, 0.1463, 0.3251],
         [0.1435, 0.1713, 0.1151,  ..., 0.1879, 0.1463, 0.2118],
         [0.1735, 0.1713, 0.1151,  ..., 0.2919, 0.5610, 0.2118],
         [0.1435, 0.4860, 0.6547,  ..., 0.3324, 0.1463, 0.2513]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1190, 0.5663, 0.1368,  ..., 0.7171, 0.4406, 0.2993],
         [0.1190, 0.1446, 0.1386,  ..., 0.0943, 0.1865, 0.2028],
         [0.5952, 0.1446, 0.1471,  ..., 0.0943, 0.1865, 0.2028],
         [0.1667, 0.1446, 0.5775,  ..., 0.0943, 0.1865, 0.2951]],
        [[0.1999, 0.3492, 0.5918,  ..., 0.7009, 0.1200, 0.0536],
         [0.1999, 0.1975, 0.1361,  ..., 0.0997, 0.1265, 0.0536],
         [0.1999, 0.1877, 0.1361,  ..., 0.0997, 0.1200, 0.8392],
         [0.4002, 0.2655, 0.1361,  ..., 0.0997, 0.6336, 0.0536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3130, 0.2573, 0.0944,  ..., 0.7663, 0.2755, 0.1510],
         [0.2131, 0.2096, 0.0944,  ..., 0.0779, 0.2038, 0.1510],
         [0.2259, 0.2522, 0.0944,  ..., 0.0779, 0.2492, 0.1510],
         [0.2481, 0.2809, 0.7169,  ..., 0.0779, 0.2715, 0.5470]],
        [[0.7443, 0.1507, 0.2525,  ..., 0.1744, 0.0961, 0.2754],
         [0.0852, 0.1507, 0.2074,  ..., 0.1744, 0.0961, 0.2125],
         [0.0852, 0.1507, 0.2074,  ..., 0.3087, 0.7118, 0.2125],
         [0.0852, 0.5479, 0.3327,  ..., 0.3425, 0.0961, 0.2996]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1022, 0.3879, 0.2004,  ..., 0.7662, 0.2068, 0.2277],
         [0.1022, 0.1997, 0.2082,  ..., 0.0779, 0.1924, 0.2078],
         [0.6856, 0.1997, 0.1913,  ..., 0.0779, 0.2999, 0.2252],
         [0.1100, 0.2127, 0.4002,  ..., 0.0779, 0.3009, 0.3393]],
        [[0.8280, 0.1917, 0.8301,  ..., 0.7519, 0.0929, 0.0642],
         [0.0573, 0.2036, 0.0566,  ..., 0.0827, 0.1046, 0.0642],
         [0.0573, 0.1917, 0.0566,  ..., 0.0827, 0.0929, 0.7848],
         [0.0573, 0.4131, 0.0566,  ..., 0.0827, 0.7097, 0.0867]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:31,892 [Process: 0] Synchronize training processes
2024-08-19 13:32:31,893 [Process: 0] Evaluating...
2024-08-19 13:32:31,895 [Process: 0] EPOCH 36:
2024-08-19 13:32:31,896 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:32,871 [Process: 0] Synchronize training processes
2024-08-19 13:32:32,871 [Process: 0] Evaluating...
2024-08-19 13:32:32,873 [Process: 0] EPOCH 37:
2024-08-19 13:32:32,874 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1959, 0.2589, 0.1597,  ..., 0.8542, 0.2271, 0.1199],
         [0.1959, 0.2177, 0.1597,  ..., 0.0486, 0.2208, 0.1422],
         [0.3385, 0.2177, 0.1597,  ..., 0.0486, 0.2407, 0.1199],
         [0.2696, 0.3057, 0.5208,  ..., 0.0486, 0.3114, 0.6181]],
        [[0.3824, 0.1526, 0.1447,  ..., 0.1574, 0.0727, 0.3475],
         [0.1595, 0.1526, 0.1447,  ..., 0.1574, 0.0727, 0.2140],
         [0.2985, 0.1526, 0.5433,  ..., 0.2748, 0.7818, 0.2140],
         [0.1595, 0.5421, 0.1673,  ..., 0.4104, 0.0727, 0.2245]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1132, 0.1567, 0.2322,  ..., 0.8216, 0.1184, 0.1688],
         [0.1132, 0.1685, 0.1975,  ..., 0.0595, 0.1184, 0.1674],
         [0.6552, 0.1567, 0.1975,  ..., 0.0595, 0.6151, 0.4687],
         [0.1183, 0.5181, 0.3727,  ..., 0.0595, 0.1481, 0.1951]],
        [[0.7668, 0.2349, 0.6931,  ..., 0.7938, 0.1533, 0.0408],
         [0.0777, 0.1867, 0.1023,  ..., 0.0687, 0.1533, 0.0408],
         [0.0777, 0.1867, 0.1023,  ..., 0.0687, 0.1533, 0.8775],
         [0.0777, 0.3917, 0.1023,  ..., 0.0687, 0.5402, 0.0408]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2060, 0.3545, 0.1760,  ..., 0.8366, 0.2892, 0.1699],
         [0.1951, 0.2046, 0.1760,  ..., 0.0545, 0.2078, 0.1699],
         [0.3355, 0.2046, 0.1760,  ..., 0.0545, 0.2739, 0.1699],
         [0.2634, 0.2363, 0.4720,  ..., 0.0545, 0.2291, 0.4903]],
        [[0.6453, 0.1333, 0.4801,  ..., 0.0804, 0.1152, 0.2992],
         [0.1182, 0.1333, 0.1733,  ..., 0.0863, 0.1152, 0.2053],
         [0.1182, 0.1438, 0.1733,  ..., 0.0804, 0.6544, 0.2053],
         [0.1182, 0.5896, 0.1733,  ..., 0.7528, 0.1152, 0.2902]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1197, 0.2075, 0.5497,  ..., 0.7687, 0.1010, 0.1332],
         [0.1197, 0.2075, 0.1501,  ..., 0.0771, 0.1010, 0.1332],
         [0.5363, 0.2075, 0.1501,  ..., 0.0771, 0.6969, 0.5499],
         [0.2244, 0.3776, 0.1501,  ..., 0.0771, 0.1010, 0.1837]],
        [[0.7365, 0.1330, 0.9602,  ..., 0.6710, 0.0860, 0.0999],
         [0.0878, 0.1462, 0.0133,  ..., 0.1097, 0.0898, 0.0999],
         [0.0878, 0.1330, 0.0133,  ..., 0.1097, 0.0860, 0.6983],
         [0.0878, 0.5878, 0.0133,  ..., 0.1097, 0.7382, 0.1018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:33,849 [Process: 0] Synchronize training processes
2024-08-19 13:32:33,849 [Process: 0] Evaluating...
2024-08-19 13:32:33,851 [Process: 0] EPOCH 38:
2024-08-19 13:32:33,852 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:34,824 [Process: 0] Synchronize training processes
2024-08-19 13:32:34,824 [Process: 0] Evaluating...
2024-08-19 13:32:34,826 [Process: 0] EPOCH 39:
2024-08-19 13:32:34,828 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2254, 0.2070, 0.1630,  ..., 0.6808, 0.2091, 0.1268],
         [0.2028, 0.2070, 0.1630,  ..., 0.1064, 0.2091, 0.1273],
         [0.3022, 0.2070, 0.1630,  ..., 0.1064, 0.2157, 0.1268],
         [0.2696, 0.3789, 0.5109,  ..., 0.1064, 0.3661, 0.6191]],
        [[0.8009, 0.3002, 0.5311,  ..., 0.1790, 0.0375, 0.4450],
         [0.0718, 0.2089, 0.1563,  ..., 0.1790, 0.0375, 0.1850],
         [0.0636, 0.2490, 0.1563,  ..., 0.3081, 0.8875, 0.1850],
         [0.0636, 0.2419, 0.1563,  ..., 0.3339, 0.0375, 0.1850]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1004, 0.3353, 0.4087,  ..., 0.6521, 0.0835, 0.0797],
         [0.1004, 0.1936, 0.1971,  ..., 0.1200, 0.0835, 0.0797],
         [0.6869, 0.1936, 0.1971,  ..., 0.1139, 0.7494, 0.7438],
         [0.1122, 0.2775, 0.1971,  ..., 0.1139, 0.0835, 0.0968]],
        [[0.7734, 0.1405, 0.9645,  ..., 0.4970, 0.0996, 0.1047],
         [0.0755, 0.1405, 0.0119,  ..., 0.1703, 0.0996, 0.1047],
         [0.0755, 0.1405, 0.0118,  ..., 0.1561, 0.0996, 0.6827],
         [0.0755, 0.5785, 0.0118,  ..., 0.1766, 0.7011, 0.1078]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1273, 0.2800, 0.1695,  ..., 0.7175, 0.2279, 0.1358],
         [0.1273, 0.1973, 0.1695,  ..., 0.0942, 0.2088, 0.1358],
         [0.5176, 0.1973, 0.1695,  ..., 0.0942, 0.2117, 0.1729],
         [0.2277, 0.3254, 0.4915,  ..., 0.0942, 0.3515, 0.5555]],
        [[0.9118, 0.1781, 0.1581,  ..., 0.0718, 0.0821, 0.1039],
         [0.0317, 0.1781, 0.1581,  ..., 0.0718, 0.0703, 0.1111],
         [0.0283, 0.1781, 0.1581,  ..., 0.0718, 0.7774, 0.1039],
         [0.0283, 0.4656, 0.5257,  ..., 0.7845, 0.0703, 0.6811]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0845, 0.1656, 0.1702,  ..., 0.7693, 0.1443, 0.1303],
         [0.0845, 0.1656, 0.1702,  ..., 0.0769, 0.1443, 0.1303],
         [0.7465, 0.1656, 0.1702,  ..., 0.0769, 0.4341, 0.6091],
         [0.0845, 0.5033, 0.4894,  ..., 0.0769, 0.2773, 0.1303]],
        [[0.2705, 0.1454, 0.8599,  ..., 0.8728, 0.0665, 0.0530],
         [0.1912, 0.1454, 0.0467,  ..., 0.0424, 0.0665, 0.0530],
         [0.1912, 0.1454, 0.0467,  ..., 0.0424, 0.0665, 0.8410],
         [0.3470, 0.5637, 0.0467,  ..., 0.0424, 0.8005, 0.0530]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:35,798 [Process: 0] Synchronize training processes
2024-08-19 13:32:35,798 [Process: 0] Evaluating...
2024-08-19 13:32:35,800 [Process: 0] EPOCH 40:
2024-08-19 13:32:35,802 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:36,771 [Process: 0] Synchronize training processes
2024-08-19 13:32:36,772 [Process: 0] Evaluating...
2024-08-19 13:32:36,773 [Process: 0] EPOCH 41:
2024-08-19 13:32:36,775 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1127, 0.1255, 0.0821,  ..., 0.6429, 0.1787, 0.1378],
         [0.1127, 0.1255, 0.0821,  ..., 0.1227, 0.1787, 0.1378],
         [0.6607, 0.1255, 0.0871,  ..., 0.1172, 0.1904, 0.1378],
         [0.1138, 0.6235, 0.7487,  ..., 0.1172, 0.4521, 0.5866]],
        [[0.5823, 0.1399, 0.2238,  ..., 0.1516, 0.0756, 0.2046],
         [0.1418, 0.1399, 0.1965,  ..., 0.1516, 0.0756, 0.2046],
         [0.1379, 0.1399, 0.1965,  ..., 0.1516, 0.7733, 0.2257],
         [0.1379, 0.5804, 0.3832,  ..., 0.5453, 0.0756, 0.3650]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1294, 0.1017, 0.1774,  ..., 0.5161, 0.0796, 0.1237],
         [0.1294, 0.1017, 0.1774,  ..., 0.1613, 0.0796, 0.1237],
         [0.6117, 0.1017, 0.1774,  ..., 0.1613, 0.7611, 0.6275],
         [0.1294, 0.6948, 0.4679,  ..., 0.1613, 0.0796, 0.1252]],
        [[0.7806, 0.1561, 0.9803,  ..., 0.9440, 0.1803, 0.0991],
         [0.0733, 0.1561, 0.0066,  ..., 0.0187, 0.1803, 0.0991],
         [0.0731, 0.1561, 0.0066,  ..., 0.0187, 0.1810, 0.7028],
         [0.0731, 0.5317, 0.0066,  ..., 0.0187, 0.4585, 0.0991]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1294, 0.1269, 0.1181,  ..., 0.8136, 0.1577, 0.0601],
         [0.1294, 0.1269, 0.1181,  ..., 0.0622, 0.1572, 0.0601],
         [0.6117, 0.6192, 0.1181,  ..., 0.0621, 0.5229, 0.0601],
         [0.1294, 0.1269, 0.6456,  ..., 0.0621, 0.1622, 0.8196]],
        [[0.4455, 0.1771, 0.1594,  ..., 0.1411, 0.0498, 0.2029],
         [0.1644, 0.1771, 0.1594,  ..., 0.1411, 0.0415, 0.2029],
         [0.2257, 0.1771, 0.1594,  ..., 0.1411, 0.8672, 0.2029],
         [0.1644, 0.4688, 0.5218,  ..., 0.5766, 0.0415, 0.3912]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1520, 0.3330, 0.8756,  ..., 0.8733, 0.1025, 0.1186],
         [0.1562, 0.1731, 0.0415,  ..., 0.0476, 0.1025, 0.1186],
         [0.5128, 0.1731, 0.0415,  ..., 0.0396, 0.6924, 0.6441],
         [0.1790, 0.3208, 0.0415,  ..., 0.0396, 0.1025, 0.1186]],
        [[0.1543, 0.0950, 0.8776,  ..., 0.8674, 0.1387, 0.0561],
         [0.1543, 0.0950, 0.0432,  ..., 0.0442, 0.1387, 0.0654],
         [0.1543, 0.0950, 0.0396,  ..., 0.0442, 0.1387, 0.8225],
         [0.5371, 0.7151, 0.0396,  ..., 0.0442, 0.5839, 0.0561]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:32:37,746 [Process: 0] Synchronize training processes
2024-08-19 13:32:37,746 [Process: 0] Evaluating...
2024-08-19 13:32:38,721 [Process: 0] EPOCH 42:
2024-08-19 13:32:38,725 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1942, 0.2690, 0.0942,  ..., 0.5302, 0.1864, 0.0877],
         [0.1885, 0.2036, 0.0942,  ..., 0.1566, 0.1864, 0.0877],
         [0.4010, 0.2742, 0.0942,  ..., 0.1566, 0.3011, 0.0877],
         [0.2164, 0.2533, 0.7174,  ..., 0.1566, 0.3262, 0.7368]],
        [[0.0929, 0.1454, 0.1864,  ..., 0.1826, 0.0490, 0.3657],
         [0.0929, 0.1454, 0.1864,  ..., 0.1826, 0.0490, 0.1980],
         [0.7213, 0.1454, 0.1864,  ..., 0.1826, 0.8530, 0.1980],
         [0.0929, 0.5638, 0.4407,  ..., 0.4523, 0.0490, 0.2382]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1723, 0.2471, 0.7630,  ..., 0.8419, 0.1189, 0.1343],
         [0.1729, 0.2023, 0.0790,  ..., 0.0527, 0.1189, 0.1343],
         [0.4653, 0.2023, 0.0790,  ..., 0.0527, 0.6433, 0.5971],
         [0.1895, 0.3483, 0.0790,  ..., 0.0527, 0.1189, 0.1343]],
        [[0.7012, 0.0389, 0.9446,  ..., 0.7840, 0.0693, 0.1141],
         [0.0996, 0.0389, 0.0185,  ..., 0.0754, 0.0693, 0.1188],
         [0.0996, 0.0389, 0.0185,  ..., 0.0703, 0.0693, 0.6530],
         [0.0996, 0.8833, 0.0185,  ..., 0.0703, 0.7920, 0.1141]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-19 13:32:39,694 [Process: 0] Synchronize training processes
2024-08-19 13:32:39,694 [Process: 0] Evaluating...
2024-08-19 13:32:39,696 [Process: 0] EPOCH 43:
2024-08-19 13:32:39,698 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:40,667 [Process: 0] Synchronize training processes
2024-08-19 13:32:40,667 [Process: 0] Evaluating...
2024-08-19 13:32:40,669 [Process: 0] EPOCH 44:
2024-08-19 13:32:40,671 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.2286, 0.5291, 0.0916,  ..., 0.8730, 0.1883, 0.1191],
         [0.2030, 0.1570, 0.0916,  ..., 0.0423, 0.1883, 0.1191],
         [0.3029, 0.1570, 0.0916,  ..., 0.0423, 0.3094, 0.1191],
         [0.2655, 0.1570, 0.7252,  ..., 0.0423, 0.3140, 0.6426]],
        [[0.0832, 0.1627, 0.1849,  ..., 0.1720, 0.0345, 0.2107],
         [0.0832, 0.1627, 0.1849,  ..., 0.1720, 0.0345, 0.1929],
         [0.7503, 0.1627, 0.3550,  ..., 0.1758, 0.8964, 0.3355],
         [0.0832, 0.5120, 0.2752,  ..., 0.4802, 0.0345, 0.2610]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1892, 0.3168, 0.7474,  ..., 0.8115, 0.1250, 0.1275],
         [0.1892, 0.1684, 0.0842,  ..., 0.0628, 0.1250, 0.1275],
         [0.3670, 0.1684, 0.0842,  ..., 0.0628, 0.6251, 0.6175],
         [0.2546, 0.3464, 0.0842,  ..., 0.0628, 0.1250, 0.1275]],
        [[0.8363, 0.0537, 0.8514,  ..., 0.9002, 0.0681, 0.1048],
         [0.0546, 0.0537, 0.0495,  ..., 0.0333, 0.0681, 0.1270],
         [0.0546, 0.0537, 0.0495,  ..., 0.0333, 0.0681, 0.6628],
         [0.0546, 0.8389, 0.0495,  ..., 0.0333, 0.7958, 0.1055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3361, 0.6214, 0.1055,  ..., 0.8321, 0.1877, 0.1592],
         [0.2008, 0.1262, 0.1069,  ..., 0.0560, 0.1877, 0.1592],
         [0.2371, 0.1262, 0.1374,  ..., 0.0560, 0.3435, 0.1726],
         [0.2260, 0.1262, 0.6502,  ..., 0.0560, 0.2812, 0.5089]],
        [[0.2452, 0.1729, 0.1827,  ..., 0.1827, 0.0495, 0.2007],
         [0.1719, 0.1729, 0.1827,  ..., 0.1827, 0.0495, 0.1944],
         [0.4021, 0.2307, 0.2806,  ..., 0.2711, 0.8516, 0.3020],
         [0.1808, 0.4235, 0.3540,  ..., 0.3635, 0.0495, 0.3028]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1599, 0.3388, 0.4764,  ..., 0.9128, 0.1020, 0.1314],
         [0.1599, 0.1726, 0.1745,  ..., 0.0291, 0.1020, 0.1314],
         [0.4390, 0.1726, 0.1745,  ..., 0.0291, 0.6940, 0.6058],
         [0.2413, 0.3160, 0.1745,  ..., 0.0291, 0.1020, 0.1314]],
        [[0.1654, 0.0323, 0.9303,  ..., 0.9017, 0.0542, 0.0849],
         [0.1654, 0.0323, 0.0232,  ..., 0.0328, 0.0542, 0.0849],
         [0.1654, 0.0323, 0.0232,  ..., 0.0328, 0.0542, 0.7452],
         [0.5039, 0.9032, 0.0232,  ..., 0.0328, 0.8375, 0.0849]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2524, 0.5878, 0.0546,  ..., 0.8583, 0.1920, 0.0953],
         [0.1984, 0.1374, 0.0546,  ..., 0.0472, 0.1920, 0.0953],
         [0.3133, 0.1374, 0.0546,  ..., 0.0472, 0.3440, 0.0953],
         [0.2358, 0.1374, 0.8361,  ..., 0.0472, 0.2720, 0.7142]],
        [[0.5830, 0.1707, 0.1923,  ..., 0.2327, 0.0413, 0.1956],
         [0.1372, 0.1707, 0.1910,  ..., 0.2012, 0.0413, 0.1956],
         [0.1427, 0.1707, 0.2937,  ..., 0.2769, 0.8760, 0.2719],
         [0.1372, 0.4878, 0.3230,  ..., 0.2891, 0.0413, 0.3368]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:32:41,659 [Process: 0] Synchronize training processes
2024-08-19 13:32:41,659 [Process: 0] Evaluating...
2024-08-19 13:32:41,661 [Process: 0] EPOCH 45:
2024-08-19 13:32:41,663 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:42,631 [Process: 0] Synchronize training processes
2024-08-19 13:32:42,632 [Process: 0] Evaluating...
2024-08-19 13:32:42,633 [Process: 0] EPOCH 46:
2024-08-19 13:32:42,635 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1428, 0.1916, 0.8809,  ..., 0.8646, 0.0689, 0.0881],
         [0.1428, 0.1249, 0.0397,  ..., 0.0451, 0.0689, 0.0881],
         [0.5373, 0.1249, 0.0397,  ..., 0.0451, 0.7934, 0.7358],
         [0.1771, 0.5587, 0.0397,  ..., 0.0451, 0.0689, 0.0881]],
        [[0.1434, 0.0228, 0.9537,  ..., 0.9329, 0.0327, 0.0827],
         [0.1434, 0.0228, 0.0187,  ..., 0.0224, 0.0386, 0.0827],
         [0.1434, 0.0228, 0.0138,  ..., 0.0224, 0.0327, 0.7518],
         [0.5699, 0.9316, 0.0138,  ..., 0.0224, 0.8959, 0.0827]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2015, 0.2297, 0.0861,  ..., 0.8749, 0.1967, 0.1108],
         [0.1834, 0.1940, 0.0861,  ..., 0.0417, 0.1838, 0.1108],
         [0.4256, 0.3550, 0.0861,  ..., 0.0417, 0.4000, 0.1154],
         [0.1895, 0.2213, 0.7416,  ..., 0.0417, 0.2195, 0.6629]],
        [[0.6712, 0.1722, 0.1863,  ..., 0.2099, 0.0548, 0.1860],
         [0.1096, 0.1722, 0.1863,  ..., 0.1778, 0.0548, 0.1860],
         [0.1096, 0.1722, 0.3479,  ..., 0.4201, 0.8356, 0.2602],
         [0.1096, 0.4834, 0.2795,  ..., 0.1923, 0.0548, 0.3679]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1072, 0.2572, 0.7373,  ..., 0.9100, 0.0848, 0.0902],
         [0.1072, 0.1596, 0.0876,  ..., 0.0300, 0.0848, 0.0902],
         [0.6783, 0.1596, 0.0876,  ..., 0.0300, 0.7457, 0.7294],
         [0.1072, 0.4236, 0.0876,  ..., 0.0300, 0.0848, 0.0902]],
        [[0.4992, 0.0687, 0.9704,  ..., 0.9560, 0.0230, 0.0841],
         [0.1669, 0.0687, 0.0099,  ..., 0.0149, 0.0230, 0.0841],
         [0.1669, 0.0687, 0.0099,  ..., 0.0146, 0.0230, 0.7477],
         [0.1669, 0.7940, 0.0099,  ..., 0.0146, 0.9311, 0.0841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2612, 0.2135, 0.0973,  ..., 0.8417, 0.2359, 0.0754],
         [0.1975, 0.1852, 0.0973,  ..., 0.0528, 0.2008, 0.0754],
         [0.2934, 0.3704, 0.0973,  ..., 0.0528, 0.2715, 0.0754],
         [0.2480, 0.2309, 0.7082,  ..., 0.0528, 0.2919, 0.7739]],
        [[0.1883, 0.1500, 0.1594,  ..., 0.1596, 0.0905, 0.2437],
         [0.1590, 0.1500, 0.1594,  ..., 0.1596, 0.0905, 0.1965],
         [0.4937, 0.1914, 0.3596,  ..., 0.5067, 0.7285, 0.2555],
         [0.1590, 0.5085, 0.3216,  ..., 0.1741, 0.0905, 0.3043]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:32:43,595 [Process: 0] Synchronize training processes
2024-08-19 13:32:43,595 [Process: 0] Evaluating...
2024-08-19 13:32:43,597 [Process: 0] EPOCH 47:
2024-08-19 13:32:43,599 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:44,572 [Process: 0] Synchronize training processes
2024-08-19 13:32:44,572 [Process: 0] Evaluating...
2024-08-19 13:32:44,574 [Process: 0] EPOCH 48:
2024-08-19 13:32:44,576 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1084, 0.3191, 0.8901,  ..., 0.9256, 0.0879, 0.0581],
         [0.1084, 0.1245, 0.0366,  ..., 0.0248, 0.0879, 0.0581],
         [0.6747, 0.1245, 0.0366,  ..., 0.0248, 0.7362, 0.8256],
         [0.1084, 0.4319, 0.0366,  ..., 0.0248, 0.0879, 0.0581]],
        [[0.2002, 0.0411, 0.8925,  ..., 0.8659, 0.0719, 0.0827],
         [0.1768, 0.0457, 0.0358,  ..., 0.0447, 0.0719, 0.0827],
         [0.1768, 0.0411, 0.0358,  ..., 0.0447, 0.0719, 0.7518],
         [0.4462, 0.8721, 0.0358,  ..., 0.0447, 0.7844, 0.0827]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2974, 0.2796, 0.0726,  ..., 0.6706, 0.2378, 0.0663],
         [0.1999, 0.2003, 0.0726,  ..., 0.1098, 0.1998, 0.0663],
         [0.2462, 0.2543, 0.0726,  ..., 0.1098, 0.2643, 0.0663],
         [0.2565, 0.2658, 0.7821,  ..., 0.1098, 0.2982, 0.8010]],
        [[0.0866, 0.1183, 0.1667,  ..., 0.1470, 0.0891, 0.3093],
         [0.0866, 0.1183, 0.1667,  ..., 0.1470, 0.0891, 0.1948],
         [0.7402, 0.2122, 0.1667,  ..., 0.1470, 0.7326, 0.2478],
         [0.0866, 0.5511, 0.4999,  ..., 0.5589, 0.0891, 0.2481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1515, 0.4475, 0.7906,  ..., 0.8996, 0.0825, 0.1334],
         [0.1515, 0.1421, 0.0698,  ..., 0.0346, 0.0825, 0.1334],
         [0.5082, 0.1421, 0.0698,  ..., 0.0329, 0.7526, 0.5999],
         [0.1887, 0.2683, 0.0698,  ..., 0.0329, 0.0825, 0.1334]],
        [[0.1732, 0.0404, 0.9433,  ..., 0.8251, 0.0152, 0.0929],
         [0.1732, 0.0404, 0.0189,  ..., 0.0583, 0.0152, 0.0929],
         [0.3695, 0.0404, 0.0189,  ..., 0.0583, 0.0152, 0.7213],
         [0.2841, 0.8789, 0.0189,  ..., 0.0583, 0.9543, 0.0929]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5015, 0.2864, 0.1065,  ..., 0.8549, 0.3735, 0.0679],
         [0.1608, 0.2006, 0.1095,  ..., 0.0484, 0.1683, 0.0679],
         [0.1620, 0.2201, 0.1065,  ..., 0.0484, 0.1683, 0.0679],
         [0.1756, 0.2929, 0.6776,  ..., 0.0484, 0.2900, 0.7964]],
        [[0.2429, 0.1392, 0.1761,  ..., 0.1344, 0.0661, 0.1827],
         [0.1774, 0.1392, 0.1761,  ..., 0.1344, 0.0661, 0.1827],
         [0.3900, 0.1392, 0.3374,  ..., 0.1344, 0.8018, 0.2141],
         [0.1898, 0.5823, 0.3104,  ..., 0.5967, 0.0661, 0.4205]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:32:45,544 [Process: 0] Synchronize training processes
2024-08-19 13:32:45,545 [Process: 0] Evaluating...
2024-08-19 13:32:45,547 [Process: 0] EPOCH 49:
2024-08-19 13:32:45,548 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:46,518 [Process: 0] Synchronize training processes
2024-08-19 13:32:46,518 [Process: 0] Evaluating...
2024-08-19 13:32:46,520 [Process: 0] EPOCH 50:
2024-08-19 13:32:46,522 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1739, 0.2014, 0.6337,  ..., 0.8693, 0.1071, 0.0755],
         [0.1739, 0.1325, 0.1093,  ..., 0.0436, 0.1071, 0.0755],
         [0.4324, 0.1325, 0.1093,  ..., 0.0436, 0.6787, 0.7735],
         [0.2198, 0.5336, 0.1477,  ..., 0.0436, 0.1071, 0.0755]],
        [[0.1814, 0.0643, 0.9581,  ..., 0.8236, 0.0147, 0.1080],
         [0.1814, 0.0643, 0.0140,  ..., 0.0609, 0.0147, 0.1080],
         [0.2731, 0.0643, 0.0140,  ..., 0.0577, 0.0147, 0.6761],
         [0.3640, 0.8071, 0.0140,  ..., 0.0577, 0.9560, 0.1080]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3276, 0.2257, 0.1149,  ..., 0.8581, 0.3058, 0.0626],
         [0.1995, 0.2051, 0.1149,  ..., 0.0473, 0.1854, 0.0626],
         [0.1995, 0.2147, 0.1149,  ..., 0.0473, 0.1854, 0.0626],
         [0.2735, 0.3545, 0.6553,  ..., 0.0473, 0.3234, 0.8123]],
        [[0.4451, 0.0965, 0.1652,  ..., 0.1679, 0.0526, 0.1791],
         [0.1805, 0.0965, 0.1652,  ..., 0.1679, 0.0526, 0.1791],
         [0.1940, 0.0965, 0.2364,  ..., 0.4262, 0.8421, 0.2118],
         [0.1805, 0.7105, 0.4333,  ..., 0.2381, 0.0526, 0.4300]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2123, 0.7837, 0.8052,  ..., 0.8834, 0.0831, 0.0562],
         [0.1897, 0.0707, 0.0649,  ..., 0.0389, 0.0831, 0.0562],
         [0.3373, 0.0707, 0.0649,  ..., 0.0389, 0.7508, 0.8314],
         [0.2607, 0.0749, 0.0649,  ..., 0.0389, 0.0831, 0.0562]],
        [[0.1461, 0.0527, 0.8586,  ..., 0.5831, 0.0096, 0.0895],
         [0.1461, 0.0527, 0.0471,  ..., 0.1327, 0.0096, 0.0895],
         [0.4834, 0.0527, 0.0471,  ..., 0.1327, 0.0096, 0.7315],
         [0.2244, 0.8420, 0.0471,  ..., 0.1515, 0.9712, 0.0895]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3470, 0.1502, 0.1190,  ..., 0.8496, 0.2688, 0.0755],
         [0.1849, 0.1502, 0.1190,  ..., 0.0501, 0.2013, 0.0755],
         [0.1849, 0.1502, 0.1190,  ..., 0.0501, 0.2260, 0.0755],
         [0.2831, 0.5494, 0.6429,  ..., 0.0501, 0.3039, 0.7735]],
        [[0.5856, 0.1186, 0.1348,  ..., 0.1366, 0.0687, 0.2441],
         [0.1381, 0.1186, 0.1348,  ..., 0.1366, 0.0687, 0.1996],
         [0.1381, 0.1186, 0.1348,  ..., 0.1366, 0.7940, 0.2593],
         [0.1381, 0.6441, 0.5955,  ..., 0.5901, 0.0687, 0.2970]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:32:47,492 [Process: 0] Synchronize training processes
2024-08-19 13:32:47,492 [Process: 0] Evaluating...
2024-08-19 13:32:47,494 [Process: 0] EPOCH 51:
2024-08-19 13:32:47,496 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:48,469 [Process: 0] Synchronize training processes
2024-08-19 13:32:48,470 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2530, 0.2123, 0.8658,  ..., 0.8945, 0.0966, 0.0739],
         [0.1996, 0.1187, 0.0447,  ..., 0.0352, 0.0966, 0.0739],
         [0.2559, 0.1187, 0.0447,  ..., 0.0352, 0.7103, 0.7782],
         [0.2915, 0.5503, 0.0447,  ..., 0.0352, 0.0966, 0.0739]],
        [[0.2099, 0.0402, 0.9578,  ..., 0.8618, 0.0454, 0.0738],
         [0.1910, 0.0402, 0.0141,  ..., 0.0461, 0.0454, 0.0738],
         [0.2096, 0.0402, 0.0141,  ..., 0.0461, 0.0454, 0.7785],
         [0.3895, 0.8794, 0.0141,  ..., 0.0461, 0.8637, 0.0738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3529, 0.1237, 0.0894,  ..., 0.8966, 0.3496, 0.0727],
         [0.1934, 0.1237, 0.0894,  ..., 0.0345, 0.1935, 0.0727],
         [0.1934, 0.1237, 0.0894,  ..., 0.0345, 0.2003, 0.0727],
         [0.2602, 0.6289, 0.7318,  ..., 0.0345, 0.2566, 0.7819]],
        [[0.7348, 0.0945, 0.1512,  ..., 0.1317, 0.0234, 0.2031],
         [0.0884, 0.0945, 0.1512,  ..., 0.1317, 0.0234, 0.1876],
         [0.0884, 0.0945, 0.2108,  ..., 0.1317, 0.9299, 0.2373],
         [0.0884, 0.7164, 0.4869,  ..., 0.6048, 0.0234, 0.3720]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2011, 0.2278, 0.9615,  ..., 0.9224, 0.1590, 0.0963],
         [0.2011, 0.1286, 0.0128,  ..., 0.0259, 0.1590, 0.0963],
         [0.2076, 0.1285, 0.0128,  ..., 0.0259, 0.5231, 0.7111],
         [0.3902, 0.5151, 0.0128,  ..., 0.0259, 0.1590, 0.0963]],
        [[0.1635, 0.1181, 0.9721,  ..., 0.9441, 0.1328, 0.0531],
         [0.1635, 0.1181, 0.0093,  ..., 0.0186, 0.1204, 0.0531],
         [0.5024, 0.1690, 0.0093,  ..., 0.0186, 0.1155, 0.8407],
         [0.1706, 0.5949, 0.0093,  ..., 0.0186, 0.6313, 0.0531]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:32:49,420 [Process: 0] EPOCH 52:
2024-08-19 13:32:49,423 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:50,394 [Process: 0] Synchronize training processes
2024-08-19 13:32:50,395 [Process: 0] Evaluating...
2024-08-19 13:32:50,396 [Process: 0] EPOCH 53:
2024-08-19 13:32:50,398 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3445, 0.1014, 0.0715,  ..., 0.9313, 0.3691, 0.0869],
         [0.1895, 0.1014, 0.0715,  ..., 0.0229, 0.1894, 0.0869],
         [0.2431, 0.1014, 0.0715,  ..., 0.0229, 0.2015, 0.0869],
         [0.2230, 0.6957, 0.7856,  ..., 0.0229, 0.2401, 0.7394]],
        [[0.5206, 0.1705, 0.1373,  ..., 0.1552, 0.0612, 0.2573],
         [0.1506, 0.1705, 0.1373,  ..., 0.1552, 0.0612, 0.2023],
         [0.1782, 0.1705, 0.1373,  ..., 0.1653, 0.8165, 0.2688],
         [0.1506, 0.4885, 0.5880,  ..., 0.5243, 0.0612, 0.2716]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1961, 0.4319, 0.9027,  ..., 0.9048, 0.0863, 0.0785],
         [0.1961, 0.1560, 0.0324,  ..., 0.0317, 0.0863, 0.0785],
         [0.2775, 0.1560, 0.0324,  ..., 0.0317, 0.7411, 0.7646],
         [0.3303, 0.2562, 0.0324,  ..., 0.0317, 0.0863, 0.0785]],
        [[0.1810, 0.0487, 0.9098,  ..., 0.8671, 0.0433, 0.0580],
         [0.1810, 0.0487, 0.0301,  ..., 0.0473, 0.0433, 0.0580],
         [0.4484, 0.0487, 0.0301,  ..., 0.0428, 0.0433, 0.8033],
         [0.1896, 0.8539, 0.0301,  ..., 0.0428, 0.8700, 0.0807]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4122, 0.0674, 0.0933,  ..., 0.9027, 0.3771, 0.0854],
         [0.1703, 0.0674, 0.0933,  ..., 0.0324, 0.1829, 0.0854],
         [0.1703, 0.0674, 0.0933,  ..., 0.0324, 0.1829, 0.0854],
         [0.2473, 0.7978, 0.7200,  ..., 0.0324, 0.2571, 0.7437]],
        [[0.5277, 0.1074, 0.1341,  ..., 0.1394, 0.0409, 0.2117],
         [0.1534, 0.1074, 0.1341,  ..., 0.1394, 0.0409, 0.2096],
         [0.1655, 0.1074, 0.1341,  ..., 0.1394, 0.8774, 0.3405],
         [0.1534, 0.6779, 0.5977,  ..., 0.5819, 0.0409, 0.2383]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:32:51,370 [Process: 0] Synchronize training processes
2024-08-19 13:32:51,370 [Process: 0] Evaluating...
2024-08-19 13:32:51,372 [Process: 0] EPOCH 54:
2024-08-19 13:32:51,374 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:52,345 [Process: 0] Synchronize training processes
2024-08-19 13:32:52,345 [Process: 0] Evaluating...
2024-08-19 13:32:52,347 [Process: 0] EPOCH 55:
2024-08-19 13:32:52,349 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2256, 0.3662, 0.9462,  ..., 0.8244, 0.0808, 0.0418],
         [0.2210, 0.1565, 0.0179,  ..., 0.0585, 0.0808, 0.0418],
         [0.2210, 0.1384, 0.0179,  ..., 0.0585, 0.7575, 0.8747],
         [0.3324, 0.3389, 0.0179,  ..., 0.0585, 0.0808, 0.0418]],
        [[0.1525, 0.0708, 0.7763,  ..., 0.8604, 0.0152, 0.0601],
         [0.1525, 0.0708, 0.0746,  ..., 0.0465, 0.0152, 0.0601],
         [0.5426, 0.0923, 0.0746,  ..., 0.0465, 0.0152, 0.8196],
         [0.1525, 0.7661, 0.0746,  ..., 0.0465, 0.9543, 0.0601]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4322, 0.0697, 0.0663,  ..., 0.9308, 0.2960, 0.1089],
         [0.1782, 0.0697, 0.0663,  ..., 0.0231, 0.2032, 0.1089],
         [0.1953, 0.0697, 0.0663,  ..., 0.0231, 0.2154, 0.1089],
         [0.1943, 0.7909, 0.8010,  ..., 0.0231, 0.2854, 0.6733]],
        [[0.8867, 0.0806, 0.1294,  ..., 0.1209, 0.0253, 0.1571],
         [0.0378, 0.0806, 0.1294,  ..., 0.1209, 0.0253, 0.1571],
         [0.0378, 0.0806, 0.1471,  ..., 0.1209, 0.9240, 0.5287],
         [0.0378, 0.7583, 0.5940,  ..., 0.6372, 0.0253, 0.1571]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2058, 0.1047, 0.9196,  ..., 0.9256, 0.0568, 0.0723],
         [0.2058, 0.1112, 0.0268,  ..., 0.0248, 0.0568, 0.0723],
         [0.2058, 0.1047, 0.0268,  ..., 0.0248, 0.8295, 0.7831],
         [0.3826, 0.6794, 0.0268,  ..., 0.0248, 0.0568, 0.0723]],
        [[0.1164, 0.1008, 0.9699,  ..., 0.8487, 0.0127, 0.0554],
         [0.1164, 0.1031, 0.0103,  ..., 0.0504, 0.0127, 0.0554],
         [0.6507, 0.1008, 0.0099,  ..., 0.0504, 0.0127, 0.8338],
         [0.1164, 0.6954, 0.0099,  ..., 0.0504, 0.9618, 0.0554]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5441, 0.0766, 0.0829,  ..., 0.9424, 0.4234, 0.1239],
         [0.1364, 0.0766, 0.0829,  ..., 0.0192, 0.1705, 0.1239],
         [0.1364, 0.0766, 0.0829,  ..., 0.0192, 0.1703, 0.1510],
         [0.1832, 0.7701, 0.7513,  ..., 0.0192, 0.2358, 0.6012]],
        [[0.6882, 0.0755, 0.1194,  ..., 0.1518, 0.0520, 0.1336],
         [0.1004, 0.0755, 0.1194,  ..., 0.1518, 0.0520, 0.1336],
         [0.1111, 0.0755, 0.1210,  ..., 0.1852, 0.8440, 0.5991],
         [0.1004, 0.7734, 0.6401,  ..., 0.5111, 0.0520, 0.1336]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:32:53,316 [Process: 0] Synchronize training processes
2024-08-19 13:32:53,317 [Process: 0] Evaluating...
2024-08-19 13:32:53,318 [Process: 0] EPOCH 56:
2024-08-19 13:32:53,320 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:54,290 [Process: 0] Synchronize training processes
2024-08-19 13:32:54,291 [Process: 0] Evaluating...
2024-08-19 13:32:54,293 [Process: 0] EPOCH 57:
2024-08-19 13:32:54,294 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2320, 0.1923, 0.9276,  ..., 0.8908, 0.0917, 0.0623],
         [0.2069, 0.1630, 0.0241,  ..., 0.0364, 0.0917, 0.0623],
         [0.2069, 0.1630, 0.0241,  ..., 0.0364, 0.7248, 0.8132],
         [0.3541, 0.4817, 0.0241,  ..., 0.0364, 0.0917, 0.0623]],
        [[0.1517, 0.0696, 0.9822,  ..., 0.9405, 0.0039, 0.0559],
         [0.1517, 0.0717, 0.0059,  ..., 0.0198, 0.0041, 0.0559],
         [0.5449, 0.0696, 0.0059,  ..., 0.0198, 0.0039, 0.8322],
         [0.1517, 0.7892, 0.0059,  ..., 0.0198, 0.9880, 0.0559]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4515, 0.1037, 0.0707,  ..., 0.8268, 0.3708, 0.0953],
         [0.1841, 0.1197, 0.0707,  ..., 0.0577, 0.1937, 0.0969],
         [0.1822, 0.1037, 0.0707,  ..., 0.0577, 0.1907, 0.0953],
         [0.1822, 0.6730, 0.7878,  ..., 0.0577, 0.2447, 0.7126]],
        [[0.0858, 0.0711, 0.0645,  ..., 0.1417, 0.1125, 0.1668],
         [0.0634, 0.0711, 0.0664,  ..., 0.1367, 0.1125, 0.1668],
         [0.7874, 0.0711, 0.0645,  ..., 0.1220, 0.6625, 0.2780],
         [0.0634, 0.7866, 0.8047,  ..., 0.5996, 0.1125, 0.3883]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2968, 0.2375, 0.9301,  ..., 0.8934, 0.0325, 0.0594],
         [0.2055, 0.1879, 0.0233,  ..., 0.0429, 0.0325, 0.0594],
         [0.2055, 0.1879, 0.0233,  ..., 0.0318, 0.9025, 0.8219],
         [0.2922, 0.3867, 0.0233,  ..., 0.0318, 0.0325, 0.0594]],
        [[0.1942, 0.0453, 0.9913,  ..., 0.9433, 0.0101, 0.0827],
         [0.1942, 0.0527, 0.0029,  ..., 0.0189, 0.0119, 0.0827],
         [0.4013, 0.0453, 0.0029,  ..., 0.0189, 0.0101, 0.7518],
         [0.2103, 0.8567, 0.0029,  ..., 0.0189, 0.9679, 0.0827]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3009, 0.0580, 0.0463,  ..., 0.9078, 0.5293, 0.0497],
         [0.2009, 0.0580, 0.0463,  ..., 0.0307, 0.1504, 0.0497],
         [0.2009, 0.0580, 0.0463,  ..., 0.0307, 0.1504, 0.0497],
         [0.2972, 0.8259, 0.8610,  ..., 0.0307, 0.1698, 0.8510]],
        [[0.0622, 0.1497, 0.0407,  ..., 0.0456, 0.0459, 0.1527],
         [0.0622, 0.1497, 0.0407,  ..., 0.0456, 0.0459, 0.1528],
         [0.8133, 0.1497, 0.8780,  ..., 0.8632, 0.8624, 0.1986],
         [0.0622, 0.5510, 0.0407,  ..., 0.0456, 0.0459, 0.4959]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4468, 0.1894, 0.9025,  ..., 0.9509, 0.0311, 0.0509],
         [0.1844, 0.1894, 0.0325,  ..., 0.0164, 0.0311, 0.0509],
         [0.1844, 0.1894, 0.0325,  ..., 0.0164, 0.9067, 0.8472],
         [0.1844, 0.4318, 0.0325,  ..., 0.0164, 0.0311, 0.0509]],
        [[0.1463, 0.0198, 0.9625,  ..., 0.8371, 0.0128, 0.0918],
         [0.1463, 0.0198, 0.0125,  ..., 0.0568, 0.0128, 0.0918],
         [0.1463, 0.0198, 0.0125,  ..., 0.0530, 0.0128, 0.7245],
         [0.5610, 0.9406, 0.0125,  ..., 0.0530, 0.9617, 0.0918]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:32:55,264 [Process: 0] Synchronize training processes
2024-08-19 13:32:55,264 [Process: 0] Evaluating...
2024-08-19 13:32:55,266 [Process: 0] EPOCH 58:
2024-08-19 13:32:55,268 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:56,232 [Process: 0] Synchronize training processes
2024-08-19 13:32:56,232 [Process: 0] Evaluating...
2024-08-19 13:32:56,234 [Process: 0] EPOCH 59:
2024-08-19 13:32:56,236 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2118, 0.0655, 0.0583,  ..., 0.8594, 0.2565, 0.0985],
         [0.2118, 0.0694, 0.0583,  ..., 0.0483, 0.2095, 0.0985],
         [0.2290, 0.0655, 0.0583,  ..., 0.0461, 0.2324, 0.0985],
         [0.3474, 0.7997, 0.8251,  ..., 0.0461, 0.3015, 0.7045]],
        [[0.3933, 0.0939, 0.1512,  ..., 0.0924, 0.0203, 0.1612],
         [0.1893, 0.0939, 0.1512,  ..., 0.0924, 0.0203, 0.1612],
         [0.2326, 0.0939, 0.5464,  ..., 0.0924, 0.9391, 0.2590],
         [0.1848, 0.7182, 0.1512,  ..., 0.7228, 0.0203, 0.4186]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2259, 0.2144, 0.9865,  ..., 0.9269, 0.0635, 0.0612],
         [0.2468, 0.2102, 0.0045,  ..., 0.0269, 0.0635, 0.0612],
         [0.2157, 0.1827, 0.0045,  ..., 0.0231, 0.8094, 0.8164],
         [0.3117, 0.3927, 0.0045,  ..., 0.0231, 0.0635, 0.0612]],
        [[0.0967, 0.0109, 0.9521,  ..., 0.7025, 0.0192, 0.0425],
         [0.1061, 0.0109, 0.0213,  ..., 0.1108, 0.0192, 0.0425],
         [0.0967, 0.0109, 0.0133,  ..., 0.0933, 0.0192, 0.8724],
         [0.7006, 0.9672, 0.0133,  ..., 0.0933, 0.9424, 0.0425]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2771, 0.0699, 0.0559,  ..., 0.9629, 0.3557, 0.1272],
         [0.2225, 0.0699, 0.0559,  ..., 0.0124, 0.2152, 0.1369],
         [0.2070, 0.0699, 0.0559,  ..., 0.0124, 0.2058, 0.1272],
         [0.2933, 0.7902, 0.8323,  ..., 0.0124, 0.2234, 0.6087]],
        [[0.3814, 0.1126, 0.0474,  ..., 0.1760, 0.0800, 0.1834],
         [0.1695, 0.1126, 0.0474,  ..., 0.1342, 0.0800, 0.1834],
         [0.2941, 0.1126, 0.0474,  ..., 0.1342, 0.7600, 0.3289],
         [0.1550, 0.6622, 0.8578,  ..., 0.5556, 0.0800, 0.3043]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2215, 0.2376, 0.9414,  ..., 0.9319, 0.0637, 0.0555],
         [0.2598, 0.2686, 0.0209,  ..., 0.0227, 0.0637, 0.0555],
         [0.2479, 0.1967, 0.0188,  ..., 0.0227, 0.8090, 0.8336],
         [0.2708, 0.2971, 0.0188,  ..., 0.0227, 0.0637, 0.0555]],
        [[0.2092, 0.0368, 0.9608,  ..., 0.8322, 0.0096, 0.0471],
         [0.2092, 0.0368, 0.0131,  ..., 0.0559, 0.0096, 0.0471],
         [0.3509, 0.0368, 0.0131,  ..., 0.0559, 0.0096, 0.8537],
         [0.2307, 0.8895, 0.0131,  ..., 0.0559, 0.9711, 0.0520]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:57,209 [Process: 0] Synchronize training processes
2024-08-19 13:32:57,210 [Process: 0] Evaluating...
2024-08-19 13:32:57,211 [Process: 0] EPOCH 60:
2024-08-19 13:32:57,213 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:32:58,189 [Process: 0] Synchronize training processes
2024-08-19 13:32:58,189 [Process: 0] Evaluating...
2024-08-19 13:32:58,191 [Process: 0] EPOCH 61:
2024-08-19 13:32:58,192 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4733, 0.0758, 0.0507,  ..., 0.9530, 0.4872, 0.0852],
         [0.1887, 0.0766, 0.0507,  ..., 0.0157, 0.1707, 0.0852],
         [0.1584, 0.0758, 0.0507,  ..., 0.0157, 0.1614, 0.1001],
         [0.1797, 0.7718, 0.8480,  ..., 0.0157, 0.1807, 0.7295]],
        [[0.7129, 0.1006, 0.0963,  ..., 0.1299, 0.0347, 0.1590],
         [0.1022, 0.1090, 0.0911,  ..., 0.1489, 0.0347, 0.1585],
         [0.0924, 0.1006, 0.0911,  ..., 0.1299, 0.8959, 0.5240],
         [0.0924, 0.6898, 0.7215,  ..., 0.5912, 0.0347, 0.1585]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2627, 0.1884, 0.9400,  ..., 0.9368, 0.0529, 0.0623],
         [0.2978, 0.2712, 0.0223,  ..., 0.0223, 0.0529, 0.0623],
         [0.2170, 0.1765, 0.0189,  ..., 0.0204, 0.8412, 0.8132],
         [0.2224, 0.3638, 0.0189,  ..., 0.0204, 0.0529, 0.0623]],
        [[0.2449, 0.0187, 0.9898,  ..., 0.7972, 0.0233, 0.0752],
         [0.2939, 0.0187, 0.0035,  ..., 0.0806, 0.0233, 0.0752],
         [0.2395, 0.0187, 0.0034,  ..., 0.0611, 0.0233, 0.7603],
         [0.2217, 0.9440, 0.0034,  ..., 0.0611, 0.9301, 0.0893]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3546, 0.0286, 0.0367,  ..., 0.9594, 0.5840, 0.0627],
         [0.1925, 0.0286, 0.0367,  ..., 0.0135, 0.1425, 0.0627],
         [0.1713, 0.0286, 0.0406,  ..., 0.0135, 0.1367, 0.0627],
         [0.2816, 0.9142, 0.8860,  ..., 0.0135, 0.1367, 0.8118]],
        [[0.5134, 0.0741, 0.1113,  ..., 0.2160, 0.0298, 0.1548],
         [0.1593, 0.0741, 0.1095,  ..., 0.2398, 0.0298, 0.1514],
         [0.1980, 0.0741, 0.1095,  ..., 0.2686, 0.9105, 0.5423],
         [0.1293, 0.7776, 0.6697,  ..., 0.2756, 0.0298, 0.1514]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2168, 0.1336, 0.9442,  ..., 0.9418, 0.0551, 0.0448],
         [0.2681, 0.1459, 0.0186,  ..., 0.0189, 0.0551, 0.0448],
         [0.2168, 0.1336, 0.0186,  ..., 0.0189, 0.8346, 0.8655],
         [0.2983, 0.5869, 0.0186,  ..., 0.0205, 0.0551, 0.0448]],
        [[0.2156, 0.0649, 0.9769,  ..., 0.9139, 0.0118, 0.0461],
         [0.2918, 0.0649, 0.0077,  ..., 0.0287, 0.0118, 0.0461],
         [0.2708, 0.0649, 0.0077,  ..., 0.0287, 0.0118, 0.8572],
         [0.2219, 0.8054, 0.0077,  ..., 0.0287, 0.9645, 0.0505]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:32:59,166 [Process: 0] Synchronize training processes
2024-08-19 13:32:59,166 [Process: 0] Evaluating...
2024-08-19 13:33:00,118 [Process: 0] EPOCH 62:
2024-08-19 13:33:00,121 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5318, 0.0500, 0.0523,  ..., 0.9392, 0.4346, 0.0555],
         [0.1841, 0.0500, 0.0523,  ..., 0.0203, 0.2014, 0.0555],
         [0.1421, 0.0500, 0.0523,  ..., 0.0203, 0.1602, 0.0555],
         [0.1421, 0.8501, 0.8431,  ..., 0.0203, 0.2038, 0.8334]],
        [[0.3073, 0.1232, 0.1139,  ..., 0.2278, 0.0977, 0.1176],
         [0.1113, 0.1232, 0.1139,  ..., 0.2621, 0.0977, 0.1176],
         [0.4700, 0.1572, 0.1139,  ..., 0.2324, 0.7070, 0.6473],
         [0.1113, 0.5964, 0.6584,  ..., 0.2778, 0.0977, 0.1176]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2268, 0.2021, 0.9797,  ..., 0.7173, 0.0389, 0.0818],
         [0.2853, 0.2369, 0.0068,  ..., 0.0970, 0.0389, 0.0818],
         [0.1916, 0.1624, 0.0068,  ..., 0.0840, 0.8833, 0.7545],
         [0.2963, 0.3986, 0.0068,  ..., 0.1017, 0.0389, 0.0818]],
        [[0.1122, 0.0267, 0.9333,  ..., 0.8745, 0.0038, 0.0530],
         [0.1122, 0.0267, 0.0222,  ..., 0.0529, 0.0038, 0.0530],
         [0.6633, 0.0267, 0.0222,  ..., 0.0363, 0.0038, 0.8411],
         [0.1122, 0.9198, 0.0223,  ..., 0.0363, 0.9886, 0.0530]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:01,096 [Process: 0] Synchronize training processes
2024-08-19 13:33:01,096 [Process: 0] Evaluating...
2024-08-19 13:33:01,098 [Process: 0] EPOCH 63:
2024-08-19 13:33:01,100 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:02,062 [Process: 0] Synchronize training processes
2024-08-19 13:33:02,063 [Process: 0] Evaluating...
2024-08-19 13:33:02,064 [Process: 0] EPOCH 64:
2024-08-19 13:33:02,067 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7206, 0.0728, 0.0765,  ..., 0.9433, 0.5246, 0.0486],
         [0.0881, 0.0728, 0.0765,  ..., 0.0189, 0.1547, 0.0486],
         [0.0881, 0.0728, 0.0765,  ..., 0.0189, 0.1267, 0.0501],
         [0.1032, 0.7815, 0.7705,  ..., 0.0189, 0.1940, 0.8527]],
        [[0.5072, 0.0998, 0.1129,  ..., 0.1966, 0.0715, 0.1338],
         [0.1334, 0.0998, 0.1129,  ..., 0.2346, 0.0715, 0.1338],
         [0.2395, 0.0998, 0.1129,  ..., 0.2865, 0.7856, 0.5985],
         [0.1199, 0.7007, 0.6613,  ..., 0.2823, 0.0715, 0.1338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2637, 0.1742, 0.8378,  ..., 0.9650, 0.0513, 0.0400],
         [0.3449, 0.2487, 0.0669,  ..., 0.0117, 0.0513, 0.0400],
         [0.1957, 0.1742, 0.0477,  ..., 0.0117, 0.8461, 0.8800],
         [0.1957, 0.4030, 0.0477,  ..., 0.0117, 0.0513, 0.0400]],
        [[0.1851, 0.0143, 0.9818,  ..., 0.9043, 0.0129, 0.0512],
         [0.1908, 0.0143, 0.0061,  ..., 0.0383, 0.0129, 0.0512],
         [0.3771, 0.0143, 0.0061,  ..., 0.0287, 0.0129, 0.8465],
         [0.2470, 0.9570, 0.0061,  ..., 0.0287, 0.9614, 0.0512]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6633, 0.0274, 0.0312,  ..., 0.9366, 0.6203, 0.0477],
         [0.1108, 0.0274, 0.0312,  ..., 0.0211, 0.1231, 0.0477],
         [0.1108, 0.0274, 0.0312,  ..., 0.0211, 0.1166, 0.0477],
         [0.1150, 0.9177, 0.9065,  ..., 0.0211, 0.1400, 0.8569]],
        [[0.9174, 0.1118, 0.1309,  ..., 0.2183, 0.0425, 0.0290],
         [0.0296, 0.1118, 0.1339,  ..., 0.2861, 0.0425, 0.0290],
         [0.0265, 0.1256, 0.1373,  ..., 0.2153, 0.8725, 0.9130],
         [0.0265, 0.6508, 0.5979,  ..., 0.2803, 0.0425, 0.0290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1671, 0.1753, 0.9693,  ..., 0.9458, 0.0360, 0.0443],
         [0.3389, 0.3497, 0.0102,  ..., 0.0181, 0.0360, 0.0443],
         [0.1664, 0.1753, 0.0102,  ..., 0.0181, 0.8919, 0.8672],
         [0.3275, 0.2997, 0.0102,  ..., 0.0181, 0.0360, 0.0443]],
        [[0.1158, 0.0115, 0.9911,  ..., 0.8199, 0.0103, 0.0962],
         [0.1158, 0.0115, 0.0030,  ..., 0.0600, 0.0103, 0.0962],
         [0.6384, 0.0115, 0.0030,  ..., 0.0600, 0.0103, 0.7085],
         [0.1299, 0.9654, 0.0030,  ..., 0.0600, 0.9690, 0.0991]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:03,041 [Process: 0] Synchronize training processes
2024-08-19 13:33:03,041 [Process: 0] Evaluating...
2024-08-19 13:33:03,043 [Process: 0] EPOCH 65:
2024-08-19 13:33:03,045 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:04,015 [Process: 0] Synchronize training processes
2024-08-19 13:33:04,016 [Process: 0] Evaluating...
2024-08-19 13:33:04,018 [Process: 0] EPOCH 66:
2024-08-19 13:33:04,020 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5569, 0.0610, 0.1501,  ..., 0.9021, 0.1433, 0.0801],
         [0.1459, 0.0610, 0.2063,  ..., 0.0335, 0.1520, 0.0801],
         [0.1251, 0.0714, 0.1501,  ..., 0.0322, 0.1406, 0.0801],
         [0.1721, 0.8066, 0.4936,  ..., 0.0322, 0.5641, 0.7597]],
        [[0.4873, 0.0840, 0.1023,  ..., 0.2023, 0.0621, 0.0433],
         [0.1045, 0.0840, 0.1023,  ..., 0.2608, 0.0621, 0.0433],
         [0.3037, 0.0840, 0.1023,  ..., 0.2023, 0.8137, 0.8702],
         [0.1045, 0.7481, 0.6932,  ..., 0.3347, 0.0621, 0.0433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7068e-01, 1.3670e-01, 9.5609e-01,  ..., 8.3267e-01,
          3.0021e-02, 4.5301e-02],
         [3.0756e-01, 1.3670e-01, 1.4638e-02,  ..., 5.5778e-02,
          3.0021e-02, 4.5301e-02],
         [1.5006e-01, 1.3670e-01, 1.4638e-02,  ..., 5.5778e-02,
          9.0994e-01, 8.6410e-01],
         [1.7170e-01, 5.8990e-01, 1.4638e-02,  ..., 5.5778e-02,
          3.0021e-02, 4.5301e-02]],
        [[1.7770e-01, 1.4948e-02, 9.9856e-01,  ..., 9.7140e-01,
          2.9333e-03, 7.5982e-02],
         [2.4822e-01, 1.4948e-02, 4.7973e-04,  ..., 9.5340e-03,
          2.9333e-03, 7.5982e-02],
         [2.3019e-01, 1.4948e-02, 4.7973e-04,  ..., 9.5340e-03,
          2.9333e-03, 7.7205e-01],
         [3.4389e-01, 9.5516e-01, 4.7973e-04,  ..., 9.5340e-03,
          9.9120e-01, 7.5982e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9743, 0.0201, 0.0553,  ..., 0.8756, 0.8763, 0.0552],
         [0.0086, 0.0201, 0.0553,  ..., 0.0415, 0.0376, 0.0552],
         [0.0086, 0.0201, 0.0678,  ..., 0.0415, 0.0376, 0.0552],
         [0.0086, 0.9397, 0.8216,  ..., 0.0415, 0.0485, 0.8345]],
        [[0.7683, 0.0391, 0.0689,  ..., 0.1705, 0.0152, 0.0568],
         [0.0529, 0.0391, 0.0689,  ..., 0.1869, 0.0152, 0.0568],
         [0.1260, 0.0391, 0.0689,  ..., 0.4722, 0.9544, 0.8295],
         [0.0529, 0.8827, 0.7932,  ..., 0.1705, 0.0152, 0.0568]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3125, 0.1329, 0.9525,  ..., 0.9687, 0.0543, 0.0693],
         [0.3439, 0.1989, 0.0158,  ..., 0.0104, 0.0543, 0.0693],
         [0.1654, 0.1329, 0.0158,  ..., 0.0104, 0.8372, 0.7921],
         [0.1782, 0.5352, 0.0158,  ..., 0.0104, 0.0543, 0.0693]],
        [[0.1690, 0.0288, 0.9580,  ..., 0.5776, 0.0114, 0.1025],
         [0.3582, 0.0288, 0.0140,  ..., 0.1817, 0.0114, 0.1025],
         [0.1690, 0.0288, 0.0140,  ..., 0.1203, 0.0114, 0.6401],
         [0.3038, 0.9136, 0.0140,  ..., 0.1203, 0.9658, 0.1548]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:04,989 [Process: 0] Synchronize training processes
2024-08-19 13:33:04,989 [Process: 0] Evaluating...
2024-08-19 13:33:04,991 [Process: 0] EPOCH 67:
2024-08-19 13:33:04,993 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:05,962 [Process: 0] Synchronize training processes
2024-08-19 13:33:05,962 [Process: 0] Evaluating...
2024-08-19 13:33:05,964 [Process: 0] EPOCH 68:
2024-08-19 13:33:05,966 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:06,934 [Process: 0] Synchronize training processes
2024-08-19 13:33:06,934 [Process: 0] Evaluating...
2024-08-19 13:33:06,936 [Process: 0] EPOCH 69:
2024-08-19 13:33:06,938 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9665, 0.0368, 0.0325,  ..., 0.9215, 0.6855, 0.0229],
         [0.0112, 0.0368, 0.0325,  ..., 0.0262, 0.1020, 0.0229],
         [0.0112, 0.0368, 0.0325,  ..., 0.0262, 0.0890, 0.0229],
         [0.0112, 0.8895, 0.9024,  ..., 0.0262, 0.1234, 0.9313]],
        [[0.9246, 0.0781, 0.0969,  ..., 0.2250, 0.0159, 0.0450],
         [0.0251, 0.0781, 0.1123,  ..., 0.2799, 0.0159, 0.0450],
         [0.0251, 0.0781, 0.0969,  ..., 0.2441, 0.9522, 0.8649],
         [0.0251, 0.7658, 0.6939,  ..., 0.2509, 0.0159, 0.0450]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4657e-01, 1.7167e-01, 9.7896e-01,  ..., 9.8403e-01,
          5.6996e-02, 4.7820e-02],
         [3.8949e-01, 2.9715e-01, 7.0120e-03,  ..., 5.3233e-03,
          5.6996e-02, 4.7820e-02],
         [1.5901e-01, 1.7167e-01, 7.0120e-03,  ..., 5.3233e-03,
          8.2901e-01, 8.5654e-01],
         [2.0493e-01, 3.5950e-01, 7.0120e-03,  ..., 5.3233e-03,
          5.6996e-02, 4.7820e-02]],
        [[1.8053e-01, 5.5289e-02, 9.9702e-01,  ..., 8.8990e-01,
          5.1761e-02, 8.8002e-02],
         [3.0096e-01, 7.9771e-02, 9.9338e-04,  ..., 3.6700e-02,
          3.9735e-02, 8.8002e-02],
         [3.1506e-01, 5.5289e-02, 9.9338e-04,  ..., 3.6700e-02,
          3.9735e-02, 7.2783e-01],
         [2.0345e-01, 8.0965e-01, 9.9338e-04,  ..., 3.6700e-02,
          8.6877e-01, 9.6167e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4718, 0.1617, 0.0962,  ..., 0.9580, 0.1252, 0.0662],
         [0.1488, 0.1567, 0.0962,  ..., 0.0140, 0.0969, 0.0662],
         [0.1381, 0.1364, 0.0974,  ..., 0.0140, 0.0969, 0.0662],
         [0.2413, 0.5451, 0.7102,  ..., 0.0140, 0.6811, 0.8015]],
        [[0.6984, 0.0381, 0.0802,  ..., 0.1224, 0.1412, 0.0982],
         [0.0623, 0.0381, 0.0802,  ..., 0.1430, 0.1848, 0.0982],
         [0.1770, 0.0381, 0.0802,  ..., 0.1224, 0.5328, 0.7055],
         [0.0623, 0.8858, 0.7594,  ..., 0.6122, 0.1412, 0.0982]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2976, 0.1088, 0.9348,  ..., 0.9869, 0.0200, 0.0234],
         [0.3624, 0.1613, 0.0217,  ..., 0.0044, 0.0200, 0.0234],
         [0.1505, 0.1088, 0.0217,  ..., 0.0044, 0.9401, 0.9297],
         [0.1895, 0.6211, 0.0217,  ..., 0.0044, 0.0200, 0.0234]],
        [[0.2469, 0.0094, 0.9884,  ..., 0.9417, 0.7722, 0.0735],
         [0.4302, 0.0094, 0.0039,  ..., 0.0207, 0.0472, 0.0735],
         [0.1540, 0.0094, 0.0039,  ..., 0.0188, 0.0472, 0.7794],
         [0.1689, 0.9717, 0.0039,  ..., 0.0188, 0.1334, 0.0735]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:33:07,909 [Process: 0] Synchronize training processes
2024-08-19 13:33:07,910 [Process: 0] Evaluating...
2024-08-19 13:33:07,911 [Process: 0] EPOCH 70:
2024-08-19 13:33:07,913 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:08,884 [Process: 0] Synchronize training processes
2024-08-19 13:33:08,885 [Process: 0] Evaluating...
2024-08-19 13:33:08,886 [Process: 0] EPOCH 71:
2024-08-19 13:33:08,888 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4275, 0.0517, 0.1499,  ..., 0.9615, 0.1404, 0.0336],
         [0.1269, 0.0517, 0.1572,  ..., 0.0128, 0.1569, 0.0336],
         [0.1269, 0.0517, 0.1617,  ..., 0.0128, 0.1374, 0.0336],
         [0.3187, 0.8449, 0.5312,  ..., 0.0128, 0.5653, 0.8991]],
        [[0.9000, 0.0664, 0.0699,  ..., 0.0692, 0.1167, 0.1663],
         [0.0333, 0.0664, 0.0699,  ..., 0.0692, 0.1582, 0.1759],
         [0.0333, 0.0664, 0.0699,  ..., 0.0692, 0.6085, 0.4181],
         [0.0333, 0.8009, 0.7903,  ..., 0.7925, 0.1167, 0.2396]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1594, 0.1117, 0.9946,  ..., 0.9700, 0.0251, 0.0371],
         [0.3551, 0.1653, 0.0018,  ..., 0.0100, 0.0251, 0.0371],
         [0.1594, 0.1117, 0.0018,  ..., 0.0100, 0.9247, 0.8886],
         [0.3261, 0.6113, 0.0018,  ..., 0.0100, 0.0251, 0.0371]],
        [[0.2042, 0.0357, 0.9944,  ..., 0.8083, 0.0046, 0.0336],
         [0.3365, 0.0357, 0.0019,  ..., 0.0888, 0.0046, 0.0336],
         [0.2211, 0.0357, 0.0019,  ..., 0.0515, 0.0046, 0.8992],
         [0.2381, 0.8929, 0.0019,  ..., 0.0515, 0.9863, 0.0336]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7587, 0.0790, 0.0616,  ..., 0.9829, 0.2237, 0.0331],
         [0.0852, 0.0790, 0.0616,  ..., 0.0057, 0.1341, 0.0331],
         [0.0780, 0.0790, 0.0626,  ..., 0.0057, 0.1341, 0.0331],
         [0.0780, 0.7629, 0.8141,  ..., 0.0057, 0.5081, 0.9006]],
        [[0.8402, 0.0487, 0.0823,  ..., 0.1108, 0.0222, 0.1464],
         [0.0515, 0.0487, 0.0823,  ..., 0.1108, 0.0222, 0.1464],
         [0.0590, 0.0487, 0.0823,  ..., 0.1173, 0.9335, 0.2130],
         [0.0493, 0.8539, 0.7532,  ..., 0.6610, 0.0222, 0.4943]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1873, 0.0755, 0.9403,  ..., 0.9858, 0.0365, 0.0606],
         [0.3884, 0.0755, 0.0197,  ..., 0.0047, 0.0365, 0.0606],
         [0.1873, 0.0755, 0.0197,  ..., 0.0047, 0.8904, 0.8105],
         [0.2370, 0.7734, 0.0203,  ..., 0.0047, 0.0365, 0.0684]],
        [[0.1893, 0.0178, 0.9812,  ..., 0.7063, 0.0050, 0.0478],
         [0.2391, 0.0178, 0.0063,  ..., 0.1386, 0.0050, 0.0478],
         [0.2806, 0.0178, 0.0063,  ..., 0.0775, 0.0050, 0.8483],
         [0.2910, 0.9467, 0.0063,  ..., 0.0775, 0.9850, 0.0561]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9498, 0.0340, 0.0456,  ..., 0.9785, 0.7874, 0.0747],
         [0.0167, 0.0340, 0.0456,  ..., 0.0072, 0.0643, 0.0747],
         [0.0167, 0.0356, 0.0456,  ..., 0.0072, 0.0643, 0.0747],
         [0.0167, 0.8964, 0.8631,  ..., 0.0072, 0.0839, 0.7760]],
        [[0.3436, 0.0564, 0.0999,  ..., 0.0728, 0.0045, 0.1319],
         [0.2311, 0.0564, 0.0999,  ..., 0.0728, 0.0045, 0.1319],
         [0.2707, 0.0697, 0.0999,  ..., 0.0728, 0.9866, 0.6004],
         [0.1546, 0.8175, 0.7002,  ..., 0.7816, 0.0045, 0.1359]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:33:09,860 [Process: 0] Synchronize training processes
2024-08-19 13:33:09,860 [Process: 0] Evaluating...
2024-08-19 13:33:10,813 [Process: 0] EPOCH 72:
2024-08-19 13:33:10,816 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1866, 0.0646, 0.9927,  ..., 0.9577, 0.0421, 0.0811],
         [0.2851, 0.0646, 0.0024,  ..., 0.0141, 0.0421, 0.0811],
         [0.1909, 0.0646, 0.0024,  ..., 0.0141, 0.8736, 0.7523],
         [0.3374, 0.8063, 0.0024,  ..., 0.0141, 0.0421, 0.0855]],
        [[0.1364, 0.0367, 0.9836,  ..., 0.8928, 0.0013, 0.0690],
         [0.1364, 0.0367, 0.0052,  ..., 0.0427, 0.0013, 0.0690],
         [0.5657, 0.0367, 0.0052,  ..., 0.0322, 0.0013, 0.7930],
         [0.1615, 0.8898, 0.0060,  ..., 0.0322, 0.9960, 0.0690]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9123, 0.0894, 0.1076,  ..., 0.9771, 0.3632, 0.1303],
         [0.0292, 0.0894, 0.1076,  ..., 0.0076, 0.1120, 0.1362],
         [0.0292, 0.0894, 0.1694,  ..., 0.0076, 0.1120, 0.1303],
         [0.0292, 0.7318, 0.6154,  ..., 0.0076, 0.4128, 0.6032]],
        [[0.4965, 0.0345, 0.0616,  ..., 0.0755, 0.0247, 0.1199],
         [0.1966, 0.0345, 0.0616,  ..., 0.0755, 0.0247, 0.1199],
         [0.1662, 0.0345, 0.0616,  ..., 0.0755, 0.9260, 0.6402],
         [0.1407, 0.8965, 0.8151,  ..., 0.7734, 0.0247, 0.1199]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:33:11,787 [Process: 0] Synchronize training processes
2024-08-19 13:33:11,787 [Process: 0] Evaluating...
2024-08-19 13:33:11,789 [Process: 0] EPOCH 73:
2024-08-19 13:33:11,791 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:12,762 [Process: 0] Synchronize training processes
2024-08-19 13:33:12,763 [Process: 0] Evaluating...
2024-08-19 13:33:12,765 [Process: 0] EPOCH 74:
2024-08-19 13:33:12,767 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1215, 0.0572, 0.9899,  ..., 0.9854, 0.0239, 0.0595],
         [0.1270, 0.0572, 0.0034,  ..., 0.0049, 0.0239, 0.0595],
         [0.5860, 0.0572, 0.0034,  ..., 0.0049, 0.9283, 0.8216],
         [0.1654, 0.8285, 0.0034,  ..., 0.0049, 0.0239, 0.0595]],
        [[0.1235, 0.0111, 0.9631,  ..., 0.9058, 0.0100, 0.0652],
         [0.1252, 0.0111, 0.0123,  ..., 0.0314, 0.0100, 0.0652],
         [0.6201, 0.0111, 0.0123,  ..., 0.0314, 0.0100, 0.8043],
         [0.1313, 0.9667, 0.0123,  ..., 0.0314, 0.9700, 0.0652]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9287, 0.0741, 0.0986,  ..., 0.9766, 0.6579, 0.0631],
         [0.0230, 0.0741, 0.0986,  ..., 0.0078, 0.0878, 0.0631],
         [0.0230, 0.0741, 0.1059,  ..., 0.0078, 0.0878, 0.0631],
         [0.0253, 0.7776, 0.6969,  ..., 0.0078, 0.1665, 0.8108]],
        [[0.3982, 0.0925, 0.0976,  ..., 0.0726, 0.0175, 0.0564],
         [0.1277, 0.0925, 0.0976,  ..., 0.0726, 0.0175, 0.0564],
         [0.3600, 0.0925, 0.1213,  ..., 0.0726, 0.9474, 0.8307],
         [0.1142, 0.7224, 0.6835,  ..., 0.7823, 0.0175, 0.0564]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1535, 0.0211, 0.9941,  ..., 0.9323, 0.0637, 0.0562],
         [0.1535, 0.0211, 0.0020,  ..., 0.0219, 0.0607, 0.0562],
         [0.4845, 0.0211, 0.0020,  ..., 0.0219, 0.8150, 0.8314],
         [0.2084, 0.9366, 0.0020,  ..., 0.0240, 0.0607, 0.0562]],
        [[0.1624, 0.0992, 0.9754,  ..., 0.8973, 0.0126, 0.0389],
         [0.1949, 0.0992, 0.0082,  ..., 0.0342, 0.0126, 0.0362],
         [0.4738, 0.0992, 0.0082,  ..., 0.0342, 0.0126, 0.8886],
         [0.1689, 0.7025, 0.0082,  ..., 0.0342, 0.9621, 0.0362]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9867, 0.0148, 0.0298,  ..., 0.9878, 0.9011, 0.0685],
         [0.0044, 0.0148, 0.0298,  ..., 0.0041, 0.0330, 0.0685],
         [0.0044, 0.0148, 0.0298,  ..., 0.0041, 0.0330, 0.0983],
         [0.0044, 0.9557, 0.9105,  ..., 0.0041, 0.0330, 0.7647]],
        [[0.5674, 0.0764, 0.0543,  ..., 0.1236, 0.0109, 0.0500],
         [0.0853, 0.0764, 0.0543,  ..., 0.1236, 0.0109, 0.0500],
         [0.2620, 0.0764, 0.0543,  ..., 0.1810, 0.9672, 0.8500],
         [0.0853, 0.7707, 0.8371,  ..., 0.5717, 0.0109, 0.0500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:33:13,742 [Process: 0] Synchronize training processes
2024-08-19 13:33:13,743 [Process: 0] Evaluating...
2024-08-19 13:33:13,744 [Process: 0] EPOCH 75:
2024-08-19 13:33:13,747 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:14,721 [Process: 0] Synchronize training processes
2024-08-19 13:33:14,722 [Process: 0] Evaluating...
2024-08-19 13:33:14,723 [Process: 0] EPOCH 76:
2024-08-19 13:33:14,725 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1281, 0.0519, 0.9528,  ..., 0.9961, 0.0628, 0.0264],
         [0.1281, 0.0519, 0.0156,  ..., 0.0013, 0.0628, 0.0264],
         [0.6158, 0.0519, 0.0156,  ..., 0.0013, 0.8115, 0.9209],
         [0.1281, 0.8444, 0.0159,  ..., 0.0013, 0.0628, 0.0264]],
        [[0.1275, 0.1065, 0.8679,  ..., 0.9190, 0.0052, 0.0818],
         [0.1720, 0.1065, 0.0440,  ..., 0.0267, 0.0052, 0.0818],
         [0.5731, 0.1065, 0.0440,  ..., 0.0267, 0.0052, 0.7546],
         [0.1275, 0.6805, 0.0440,  ..., 0.0276, 0.9843, 0.0818]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2697, 0.0474, 0.0274,  ..., 0.9270, 0.0997, 0.0919],
         [0.0990, 0.0474, 0.0274,  ..., 0.0243, 0.0972, 0.0919],
         [0.0990, 0.0474, 0.0274,  ..., 0.0243, 0.7079, 0.0919],
         [0.5324, 0.8579, 0.9179,  ..., 0.0243, 0.0952, 0.7244]],
        [[0.7648, 0.0332, 0.0622,  ..., 0.0469, 0.0241, 0.1510],
         [0.0617, 0.0332, 0.0622,  ..., 0.0469, 0.0241, 0.1510],
         [0.1118, 0.0332, 0.0622,  ..., 0.0469, 0.9278, 0.3502],
         [0.0617, 0.9005, 0.8135,  ..., 0.8594, 0.0241, 0.3479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8208e-01, 1.1438e-01, 9.8208e-01,  ..., 9.8406e-01,
          2.9118e-02, 3.2150e-02],
         [2.1218e-01, 1.1876e-01, 5.9722e-03,  ..., 5.3140e-03,
          2.9118e-02, 3.2150e-02],
         [4.4009e-01, 1.1438e-01, 5.9722e-03,  ..., 5.3140e-03,
          9.1265e-01, 9.0355e-01],
         [1.6565e-01, 6.5247e-01, 5.9722e-03,  ..., 5.3140e-03,
          2.9118e-02, 3.2150e-02]],
        [[1.7735e-01, 5.3529e-03, 9.9642e-01,  ..., 9.4574e-01,
          9.8936e-04, 8.6225e-02],
         [2.1660e-01, 5.3529e-03, 1.1939e-03,  ..., 1.8086e-02,
          9.8936e-04, 7.7963e-02],
         [4.5108e-01, 5.3529e-03, 1.1939e-03,  ..., 1.8086e-02,
          9.8936e-04, 7.5356e-01],
         [1.5497e-01, 9.8394e-01, 1.1939e-03,  ..., 1.8086e-02,
          9.9703e-01, 8.2250e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0550, 0.0530, 0.0303,  ..., 0.9691, 0.0443, 0.0422],
         [0.0550, 0.0530, 0.0303,  ..., 0.0103, 0.0443, 0.0422],
         [0.0550, 0.0530, 0.0303,  ..., 0.0103, 0.8671, 0.0422],
         [0.8351, 0.8411, 0.9090,  ..., 0.0103, 0.0443, 0.8735]],
        [[0.6828, 0.0468, 0.1164,  ..., 0.1156, 0.0167, 0.1145],
         [0.0974, 0.0468, 0.1306,  ..., 0.1263, 0.0167, 0.1226],
         [0.1375, 0.0468, 0.1243,  ..., 0.1156, 0.9498, 0.6496],
         [0.0823, 0.8595, 0.6287,  ..., 0.6426, 0.0167, 0.1133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:33:15,699 [Process: 0] Synchronize training processes
2024-08-19 13:33:15,699 [Process: 0] Evaluating...
2024-08-19 13:33:15,701 [Process: 0] EPOCH 77:
2024-08-19 13:33:15,703 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:16,672 [Process: 0] Synchronize training processes
2024-08-19 13:33:16,672 [Process: 0] Evaluating...
2024-08-19 13:33:16,674 [Process: 0] EPOCH 78:
2024-08-19 13:33:16,676 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1516, 0.0583, 0.9543,  ..., 0.9662, 0.0422, 0.0596],
         [0.2706, 0.0583, 0.0152,  ..., 0.0113, 0.0422, 0.0596],
         [0.4263, 0.0583, 0.0152,  ..., 0.0113, 0.8734, 0.8213],
         [0.1516, 0.8250, 0.0152,  ..., 0.0113, 0.0422, 0.0596]],
        [[0.7894, 0.0151, 0.9943,  ..., 0.9352, 0.0259, 0.0464],
         [0.0863, 0.0144, 0.0019,  ..., 0.0216, 0.0133, 0.0464],
         [0.0621, 0.0144, 0.0019,  ..., 0.0216, 0.0133, 0.8607],
         [0.0621, 0.9560, 0.0019,  ..., 0.0216, 0.9475, 0.0464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7837, 0.3646, 0.0427,  ..., 0.8712, 0.1059, 0.0305],
         [0.0543, 0.2420, 0.0427,  ..., 0.0494, 0.1087, 0.0305],
         [0.0543, 0.1485, 0.0427,  ..., 0.0397, 0.1082, 0.0305],
         [0.1077, 0.2449, 0.8720,  ..., 0.0397, 0.6771, 0.9085]],
        [[0.1444, 0.0434, 0.0465,  ..., 0.1125, 0.0764, 0.0311],
         [0.0806, 0.0434, 0.0465,  ..., 0.1317, 0.0764, 0.0311],
         [0.6944, 0.0434, 0.0465,  ..., 0.1125, 0.7709, 0.9066],
         [0.0806, 0.8698, 0.8604,  ..., 0.6432, 0.0764, 0.0311]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0462, 0.3084, 0.9752,  ..., 0.9836, 0.0648, 0.0588],
         [0.0462, 0.4405, 0.0080,  ..., 0.0055, 0.0648, 0.0588],
         [0.8613, 0.1255, 0.0080,  ..., 0.0055, 0.7972, 0.8187],
         [0.0462, 0.1255, 0.0087,  ..., 0.0055, 0.0731, 0.0637]],
        [[0.2287, 0.0087, 0.9651,  ..., 0.8975, 0.0167, 0.0555],
         [0.4632, 0.0087, 0.0116,  ..., 0.0406, 0.0167, 0.0555],
         [0.1599, 0.0087, 0.0116,  ..., 0.0310, 0.0167, 0.8335],
         [0.1482, 0.9739, 0.0116,  ..., 0.0310, 0.9500, 0.0555]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9587, 0.0507, 0.0113,  ..., 0.9216, 0.9715, 0.1041],
         [0.0138, 0.0483, 0.0113,  ..., 0.0261, 0.0095, 0.0617],
         [0.0138, 0.0542, 0.0113,  ..., 0.0261, 0.0095, 0.0617],
         [0.0138, 0.8468, 0.9660,  ..., 0.0261, 0.0095, 0.7725]],
        [[0.7167, 0.0454, 0.0640,  ..., 0.0670, 0.1108, 0.1682],
         [0.0598, 0.0454, 0.0640,  ..., 0.0670, 0.1105, 0.1949],
         [0.1637, 0.0454, 0.0640,  ..., 0.0670, 0.6682, 0.2432],
         [0.0598, 0.8637, 0.8079,  ..., 0.7990, 0.1105, 0.3937]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:33:17,649 [Process: 0] Synchronize training processes
2024-08-19 13:33:17,649 [Process: 0] Evaluating...
2024-08-19 13:33:17,651 [Process: 0] EPOCH 79:
2024-08-19 13:33:17,653 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:18,623 [Process: 0] Synchronize training processes
2024-08-19 13:33:18,623 [Process: 0] Evaluating...
2024-08-19 13:33:18,625 [Process: 0] EPOCH 80:
2024-08-19 13:33:18,627 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0508, 0.1964, 0.9744,  ..., 0.9435, 0.0534, 0.0363],
         [0.0508, 0.4948, 0.0085,  ..., 0.0207, 0.0534, 0.0363],
         [0.8212, 0.1544, 0.0085,  ..., 0.0179, 0.8397, 0.8911],
         [0.0771, 0.1544, 0.0085,  ..., 0.0179, 0.0534, 0.0363]],
        [[0.1638, 0.0091, 0.9739,  ..., 0.9393, 0.0207, 0.0157],
         [0.2659, 0.0091, 0.0087,  ..., 0.0202, 0.0207, 0.0157],
         [0.4064, 0.0091, 0.0087,  ..., 0.0202, 0.0207, 0.9530],
         [0.1638, 0.9726, 0.0087,  ..., 0.0202, 0.9379, 0.0157]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9570, 0.0530, 0.0072,  ..., 0.8755, 0.9290, 0.0273],
         [0.0143, 0.0530, 0.0072,  ..., 0.0442, 0.0234, 0.0273],
         [0.0143, 0.0530, 0.0072,  ..., 0.0401, 0.0242, 0.0283],
         [0.0143, 0.8409, 0.9783,  ..., 0.0401, 0.0234, 0.9172]],
        [[0.6610, 0.0969, 0.1530,  ..., 0.1243, 0.0012, 0.0914],
         [0.0603, 0.0969, 0.1530,  ..., 0.1243, 0.0012, 0.0914],
         [0.2184, 0.1390, 0.2134,  ..., 0.6272, 0.9965, 0.7258],
         [0.0603, 0.6672, 0.4806,  ..., 0.1243, 0.0012, 0.0914]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1270, 0.2340, 0.9816,  ..., 0.9814, 0.0179, 0.0633],
         [0.1270, 0.4835, 0.0055,  ..., 0.0052, 0.0179, 0.0633],
         [0.5534, 0.1413, 0.0055,  ..., 0.0052, 0.9463, 0.8100],
         [0.1926, 0.1413, 0.0075,  ..., 0.0082, 0.0179, 0.0633]],
        [[0.1777, 0.0164, 0.8961,  ..., 0.9106, 0.0288, 0.0354],
         [0.2808, 0.0164, 0.0288,  ..., 0.0317, 0.0288, 0.0354],
         [0.2188, 0.0164, 0.0288,  ..., 0.0285, 0.0288, 0.8939],
         [0.3227, 0.9507, 0.0463,  ..., 0.0292, 0.9136, 0.0354]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7768, 0.0469, 0.0166,  ..., 0.9082, 0.7602, 0.0306],
         [0.0768, 0.0469, 0.0166,  ..., 0.0344, 0.0924, 0.0306],
         [0.0700, 0.0559, 0.0166,  ..., 0.0287, 0.0737, 0.0306],
         [0.0764, 0.8504, 0.9503,  ..., 0.0287, 0.0737, 0.9083]],
        [[0.4250, 0.0534, 0.1870,  ..., 0.1312, 0.0072, 0.1090],
         [0.0642, 0.0534, 0.1870,  ..., 0.1312, 0.0072, 0.1090],
         [0.4465, 0.0534, 0.3449,  ..., 0.1411, 0.9785, 0.6731],
         [0.0642, 0.8398, 0.2811,  ..., 0.5965, 0.0072, 0.1090]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:33:19,603 [Process: 0] Synchronize training processes
2024-08-19 13:33:19,603 [Process: 0] Evaluating...
2024-08-19 13:33:19,605 [Process: 0] EPOCH 81:
2024-08-19 13:33:19,607 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:20,577 [Process: 0] Synchronize training processes
2024-08-19 13:33:20,578 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3145e-01, 6.6943e-02, 9.6546e-01,  ..., 9.9187e-01,
          3.7209e-02, 3.7499e-02],
         [1.3145e-01, 6.6943e-02, 1.3682e-02,  ..., 2.5102e-03,
          3.7209e-02, 3.7499e-02],
         [4.2019e-01, 6.6943e-02, 1.0429e-02,  ..., 2.5102e-03,
          8.8837e-01, 8.8750e-01],
         [3.1691e-01, 7.9917e-01, 1.0429e-02,  ..., 3.1107e-03,
          3.7209e-02, 3.7499e-02]],
        [[2.3862e-01, 4.3263e-04, 9.8903e-01,  ..., 9.8751e-01,
          1.4745e-02, 6.5694e-02],
         [4.0780e-01, 4.3263e-04, 3.6555e-03,  ..., 4.1636e-03,
          1.4745e-02, 6.5694e-02],
         [1.5938e-01, 4.3263e-04, 3.6555e-03,  ..., 4.1636e-03,
          1.4745e-02, 8.0292e-01],
         [1.9421e-01, 9.9870e-01, 3.6555e-03,  ..., 4.1636e-03,
          9.5577e-01, 6.5694e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2943, 0.0453, 0.0464,  ..., 0.9745, 0.5463, 0.0429],
         [0.2082, 0.0453, 0.0464,  ..., 0.0085, 0.1725, 0.0429],
         [0.1669, 0.0477, 0.0604,  ..., 0.0085, 0.1314, 0.0429],
         [0.3307, 0.8617, 0.8469,  ..., 0.0085, 0.1498, 0.8713]],
        [[0.0740, 0.0285, 0.0364,  ..., 0.1079, 0.0616, 0.1140],
         [0.0644, 0.0285, 0.0364,  ..., 0.1079, 0.0616, 0.0943],
         [0.7971, 0.0285, 0.0364,  ..., 0.1124, 0.8152, 0.6975],
         [0.0644, 0.9145, 0.8907,  ..., 0.6719, 0.0616, 0.0943]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0558, 0.2277, 0.9944,  ..., 0.9739, 0.0539, 0.0216],
         [0.0558, 0.4139, 0.0019,  ..., 0.0087, 0.0539, 0.0216],
         [0.7996, 0.1578, 0.0019,  ..., 0.0087, 0.8383, 0.9352],
         [0.0888, 0.2007, 0.0019,  ..., 0.0087, 0.0539, 0.0216]],
        [[0.6044, 0.0045, 0.7601,  ..., 0.9915, 0.0155, 0.0257],
         [0.2202, 0.0045, 0.1110,  ..., 0.0028, 0.0153, 0.0257],
         [0.0877, 0.0045, 0.0644,  ..., 0.0028, 0.0153, 0.9229],
         [0.0877, 0.9866, 0.0644,  ..., 0.0028, 0.9538, 0.0257]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:33:21,529 [Process: 0] EPOCH 82:
2024-08-19 13:33:21,533 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:22,506 [Process: 0] Synchronize training processes
2024-08-19 13:33:22,506 [Process: 0] Evaluating...
2024-08-19 13:33:22,508 [Process: 0] EPOCH 83:
2024-08-19 13:33:22,510 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8518, 0.0404, 0.0483,  ..., 0.9734, 0.9262, 0.0504],
         [0.0514, 0.0404, 0.0483,  ..., 0.0089, 0.0248, 0.0489],
         [0.0484, 0.0404, 0.0483,  ..., 0.0089, 0.0245, 0.0489],
         [0.0484, 0.8788, 0.8551,  ..., 0.0089, 0.0245, 0.8517]],
        [[0.0624, 0.0409, 0.0367,  ..., 0.1208, 0.0064, 0.0952],
         [0.0384, 0.0409, 0.0367,  ..., 0.0905, 0.0064, 0.0952],
         [0.8608, 0.0409, 0.0367,  ..., 0.1241, 0.9807, 0.7143],
         [0.0384, 0.8774, 0.8899,  ..., 0.6646, 0.0064, 0.0952]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.8381e-02, 2.4398e-01, 9.7020e-01,  ..., 9.8845e-01,
          1.4341e-02, 1.5984e-02],
         [8.8381e-02, 4.0512e-01, 1.0001e-02,  ..., 3.8513e-03,
          1.4341e-02, 1.5984e-02],
         [7.2375e-01, 1.6124e-01, 9.9007e-03,  ..., 3.8513e-03,
          9.5698e-01, 9.5205e-01],
         [9.9490e-02, 1.8967e-01, 9.9007e-03,  ..., 3.8513e-03,
          1.4341e-02, 1.5984e-02]],
        [[6.9862e-01, 9.0339e-04, 9.5489e-01,  ..., 9.5319e-01,
          8.4992e-01, 5.3098e-02],
         [1.2411e-01, 9.0339e-04, 1.5036e-02,  ..., 1.8035e-02,
          6.9034e-02, 5.3098e-02],
         [8.8633e-02, 9.0339e-04, 1.5036e-02,  ..., 1.4385e-02,
          4.0524e-02, 8.4070e-01],
         [8.8633e-02, 9.9729e-01, 1.5036e-02,  ..., 1.4385e-02,
          4.0524e-02, 5.3098e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9251, 0.0059, 0.0458,  ..., 0.9834, 0.6884, 0.0445],
         [0.0286, 0.0059, 0.0458,  ..., 0.0055, 0.1408, 0.0445],
         [0.0231, 0.0059, 0.0458,  ..., 0.0055, 0.0854, 0.0490],
         [0.0231, 0.9823, 0.8625,  ..., 0.0055, 0.0854, 0.8619]],
        [[0.1503, 0.0457, 0.0099,  ..., 0.0981, 0.0223, 0.0745],
         [0.0696, 0.0423, 0.0099,  ..., 0.1021, 0.0223, 0.0745],
         [0.7106, 0.0503, 0.0099,  ..., 0.0981, 0.9331, 0.7765],
         [0.0696, 0.8616, 0.9703,  ..., 0.7017, 0.0223, 0.0745]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.0168e-02, 2.1152e-01, 9.8784e-01,  ..., 9.9295e-01,
          6.0910e-02, 2.8285e-02],
         [7.0168e-02, 3.7046e-01, 3.9688e-03,  ..., 2.3486e-03,
          6.0910e-02, 2.8285e-02],
         [7.6945e-01, 1.3982e-01, 3.9688e-03,  ..., 2.3486e-03,
          8.1727e-01, 9.1515e-01],
         [9.0219e-02, 2.7820e-01, 4.2185e-03,  ..., 2.3486e-03,
          6.0910e-02, 2.8285e-02]],
        [[6.7500e-01, 7.9361e-04, 9.5813e-01,  ..., 9.8601e-01,
          6.2960e-01, 5.5878e-02],
         [1.9106e-01, 7.9361e-04, 1.4065e-02,  ..., 4.3121e-03,
          1.6368e-01, 5.5878e-02],
         [6.6969e-02, 7.9361e-04, 1.3905e-02,  ..., 4.3121e-03,
          9.2639e-02, 8.3237e-01],
         [6.6969e-02, 9.9762e-01, 1.3905e-02,  ..., 5.3707e-03,
          1.1408e-01, 5.5878e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:33:23,480 [Process: 0] Synchronize training processes
2024-08-19 13:33:23,480 [Process: 0] Evaluating...
2024-08-19 13:33:23,482 [Process: 0] EPOCH 84:
2024-08-19 13:33:23,484 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:24,463 [Process: 0] Synchronize training processes
2024-08-19 13:33:24,463 [Process: 0] Evaluating...
2024-08-19 13:33:24,465 [Process: 0] EPOCH 85:
2024-08-19 13:33:24,467 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8118, 0.0327, 0.0288,  ..., 0.9662, 0.7674, 0.0524],
         [0.0746, 0.0327, 0.0288,  ..., 0.0113, 0.1022, 0.0524],
         [0.0568, 0.0341, 0.0288,  ..., 0.0113, 0.0652, 0.0571],
         [0.0568, 0.9005, 0.9137,  ..., 0.0113, 0.0652, 0.8380]],
        [[0.0921, 0.0237, 0.0265,  ..., 0.0820, 0.0526, 0.0669],
         [0.0426, 0.0237, 0.0265,  ..., 0.0820, 0.0526, 0.0669],
         [0.8227, 0.0237, 0.0265,  ..., 0.0833, 0.8421, 0.7994],
         [0.0426, 0.9290, 0.9206,  ..., 0.7526, 0.0526, 0.0669]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0434, 0.1438, 0.9924,  ..., 0.9904, 0.0305, 0.0788],
         [0.0434, 0.3377, 0.0025,  ..., 0.0031, 0.0305, 0.0788],
         [0.8697, 0.1438, 0.0025,  ..., 0.0031, 0.9086, 0.7635],
         [0.0434, 0.3748, 0.0025,  ..., 0.0033, 0.0305, 0.0788]],
        [[0.1666, 0.0173, 0.9475,  ..., 0.9817, 0.7566, 0.0987],
         [0.5764, 0.0173, 0.0175,  ..., 0.0064, 0.0763, 0.0987],
         [0.1285, 0.0173, 0.0175,  ..., 0.0059, 0.0653, 0.7039],
         [0.1285, 0.9482, 0.0175,  ..., 0.0059, 0.1018, 0.0987]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8895, 0.0479, 0.0533,  ..., 0.9286, 0.7267, 0.0279],
         [0.0393, 0.0479, 0.0533,  ..., 0.0238, 0.1125, 0.0279],
         [0.0356, 0.0479, 0.0533,  ..., 0.0238, 0.0804, 0.0279],
         [0.0356, 0.8562, 0.8402,  ..., 0.0238, 0.0804, 0.9163]],
        [[0.1368, 0.0423, 0.0281,  ..., 0.0274, 0.0989, 0.0500],
         [0.0539, 0.0423, 0.0281,  ..., 0.0274, 0.0989, 0.0500],
         [0.7554, 0.0423, 0.0281,  ..., 0.0299, 0.7033, 0.8501],
         [0.0539, 0.8732, 0.9158,  ..., 0.9154, 0.0989, 0.0500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0289, 0.1387, 0.9710,  ..., 0.9749, 0.0180, 0.0230],
         [0.0289, 0.3195, 0.0097,  ..., 0.0080, 0.0180, 0.0230],
         [0.9134, 0.1330, 0.0097,  ..., 0.0080, 0.9461, 0.9311],
         [0.0289, 0.4089, 0.0097,  ..., 0.0090, 0.0180, 0.0230]],
        [[0.9111, 0.0100, 0.9486,  ..., 0.9391, 0.7413, 0.0565],
         [0.0338, 0.0100, 0.0171,  ..., 0.0203, 0.0608, 0.0565],
         [0.0276, 0.0100, 0.0171,  ..., 0.0203, 0.0608, 0.8030],
         [0.0276, 0.9700, 0.0171,  ..., 0.0203, 0.1371, 0.0840]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:33:25,447 [Process: 0] Synchronize training processes
2024-08-19 13:33:25,447 [Process: 0] Evaluating...
2024-08-19 13:33:25,449 [Process: 0] EPOCH 86:
2024-08-19 13:33:25,450 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:26,424 [Process: 0] Synchronize training processes
2024-08-19 13:33:26,424 [Process: 0] Evaluating...
2024-08-19 13:33:26,426 [Process: 0] EPOCH 87:
2024-08-19 13:33:26,428 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8152, 0.0182, 0.0488,  ..., 0.3541, 0.8255, 0.0156],
         [0.0651, 0.0182, 0.0488,  ..., 0.2568, 0.0688, 0.0156],
         [0.0598, 0.0182, 0.0488,  ..., 0.1487, 0.0528, 0.0156],
         [0.0598, 0.9454, 0.8537,  ..., 0.2405, 0.0528, 0.9533]],
        [[0.1577, 0.0494, 0.0238,  ..., 0.1073, 0.0189, 0.0213],
         [0.0687, 0.0494, 0.0238,  ..., 0.1451, 0.0189, 0.0213],
         [0.7049, 0.0494, 0.0238,  ..., 0.1073, 0.9432, 0.9362],
         [0.0687, 0.8517, 0.9285,  ..., 0.6403, 0.0189, 0.0213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0481, 0.0608, 0.9680,  ..., 0.9841, 0.0214, 0.0345],
         [0.0481, 0.0854, 0.0107,  ..., 0.0053, 0.0214, 0.0345],
         [0.8558, 0.0608, 0.0107,  ..., 0.0053, 0.9358, 0.8964],
         [0.0481, 0.7929, 0.0107,  ..., 0.0053, 0.0214, 0.0345]],
        [[0.7808, 0.0110, 0.9387,  ..., 0.9944, 0.0016, 0.0433],
         [0.1081, 0.0110, 0.0204,  ..., 0.0019, 0.0016, 0.0433],
         [0.0556, 0.0110, 0.0204,  ..., 0.0019, 0.0016, 0.8701],
         [0.0556, 0.9670, 0.0204,  ..., 0.0019, 0.9951, 0.0433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9215, 0.0234, 0.0749,  ..., 0.9838, 0.7525, 0.0474],
         [0.0247, 0.0234, 0.0749,  ..., 0.0054, 0.1020, 0.0474],
         [0.0290, 0.0234, 0.0749,  ..., 0.0054, 0.0727, 0.0474],
         [0.0247, 0.9298, 0.7752,  ..., 0.0054, 0.0727, 0.8578]],
        [[0.5444, 0.0279, 0.0150,  ..., 0.1215, 0.0128, 0.0193],
         [0.0558, 0.0279, 0.0150,  ..., 0.1671, 0.0128, 0.0193],
         [0.3441, 0.0279, 0.0150,  ..., 0.1215, 0.9615, 0.9420],
         [0.0558, 0.9162, 0.9549,  ..., 0.5900, 0.0128, 0.0193]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2098e-02, 9.6380e-02, 9.7426e-01,  ..., 9.8469e-01,
          2.2254e-02, 2.0532e-02],
         [2.2098e-02, 2.1082e-01, 8.5795e-03,  ..., 5.1026e-03,
          2.2254e-02, 2.0532e-02],
         [9.3371e-01, 9.6380e-02, 8.5795e-03,  ..., 5.1026e-03,
          9.3324e-01, 9.3841e-01],
         [2.2098e-02, 5.9642e-01, 8.5795e-03,  ..., 5.1026e-03,
          2.2254e-02, 2.0532e-02]],
        [[4.1592e-01, 3.2490e-02, 9.2185e-01,  ..., 9.8619e-01,
          3.7578e-04, 8.6740e-02],
         [2.8711e-01, 3.2490e-02, 2.6050e-02,  ..., 4.6030e-03,
          3.7578e-04, 1.0560e-01],
         [1.4848e-01, 5.9310e-02, 2.6050e-02,  ..., 4.6030e-03,
          3.7578e-04, 7.2092e-01],
         [1.4848e-01, 8.7571e-01, 2.6050e-02,  ..., 4.6030e-03,
          9.9887e-01, 8.6740e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:27,399 [Process: 0] Synchronize training processes
2024-08-19 13:33:27,399 [Process: 0] Evaluating...
2024-08-19 13:33:27,401 [Process: 0] EPOCH 88:
2024-08-19 13:33:27,403 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:28,378 [Process: 0] Synchronize training processes
2024-08-19 13:33:28,379 [Process: 0] Evaluating...
2024-08-19 13:33:28,381 [Process: 0] EPOCH 89:
2024-08-19 13:33:28,382 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8007, 0.0371, 0.0516,  ..., 0.9600, 0.9760, 0.0654],
         [0.0862, 0.0371, 0.0516,  ..., 0.0133, 0.0080, 0.0654],
         [0.0566, 0.0371, 0.0516,  ..., 0.0133, 0.0080, 0.0752],
         [0.0566, 0.8886, 0.8451,  ..., 0.0133, 0.0080, 0.7939]],
        [[0.7472, 0.0153, 0.0379,  ..., 0.0841, 0.0157, 0.0151],
         [0.0489, 0.0153, 0.0379,  ..., 0.0942, 0.0157, 0.0151],
         [0.1551, 0.0153, 0.0379,  ..., 0.0841, 0.9528, 0.9547],
         [0.0489, 0.9541, 0.8864,  ..., 0.7376, 0.0157, 0.0151]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0174, 0.1065, 0.9912,  ..., 0.9635, 0.0250, 0.0216],
         [0.0174, 0.2272, 0.0029,  ..., 0.0122, 0.0250, 0.0216],
         [0.9477, 0.1065, 0.0029,  ..., 0.0122, 0.9249, 0.9353],
         [0.0174, 0.5599, 0.0029,  ..., 0.0122, 0.0250, 0.0216]],
        [[0.5692, 0.0434, 0.8893,  ..., 0.9743, 0.4537, 0.0397],
         [0.2571, 0.0389, 0.0369,  ..., 0.0086, 0.0692, 0.0397],
         [0.0868, 0.0389, 0.0369,  ..., 0.0086, 0.0692, 0.8808],
         [0.0868, 0.8787, 0.0369,  ..., 0.0086, 0.4079, 0.0397]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8875, 0.0083, 0.0620,  ..., 0.9468, 0.9588, 0.0467],
         [0.0319, 0.0083, 0.0684,  ..., 0.0177, 0.0137, 0.0467],
         [0.0487, 0.0083, 0.0620,  ..., 0.0177, 0.0137, 0.0467],
         [0.0319, 0.9750, 0.8077,  ..., 0.0177, 0.0137, 0.8599]],
        [[0.6213, 0.0357, 0.0578,  ..., 0.0591, 0.0111, 0.0242],
         [0.0694, 0.0357, 0.0646,  ..., 0.0591, 0.0111, 0.0242],
         [0.2400, 0.0357, 0.0578,  ..., 0.0591, 0.9667, 0.9273],
         [0.0694, 0.8928, 0.8197,  ..., 0.8226, 0.0111, 0.0242]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0461, 0.0868, 0.9539,  ..., 0.9104, 0.0257, 0.0345],
         [0.0461, 0.7397, 0.0154,  ..., 0.0211, 0.0257, 0.0320],
         [0.8617, 0.0868, 0.0154,  ..., 0.0211, 0.9228, 0.9016],
         [0.0461, 0.0868, 0.0154,  ..., 0.0475, 0.0257, 0.0320]],
        [[0.2768, 0.0235, 0.9817,  ..., 0.9817, 0.0507, 0.0523],
         [0.5162, 0.0235, 0.0061,  ..., 0.0061, 0.0343, 0.0523],
         [0.1035, 0.0235, 0.0061,  ..., 0.0061, 0.0343, 0.8431],
         [0.1035, 0.9296, 0.0061,  ..., 0.0061, 0.8808, 0.0523]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:29,353 [Process: 0] Synchronize training processes
2024-08-19 13:33:29,354 [Process: 0] Evaluating...
2024-08-19 13:33:29,355 [Process: 0] EPOCH 90:
2024-08-19 13:33:29,357 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:30,338 [Process: 0] Synchronize training processes
2024-08-19 13:33:30,339 [Process: 0] Evaluating...
2024-08-19 13:33:30,340 [Process: 0] EPOCH 91:
2024-08-19 13:33:30,342 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8000, 0.0472, 0.0516,  ..., 0.9153, 0.9756, 0.0274],
         [0.0666, 0.0472, 0.0516,  ..., 0.0282, 0.0081, 0.0274],
         [0.0658, 0.0472, 0.0516,  ..., 0.0282, 0.0081, 0.0274],
         [0.0676, 0.8584, 0.8452,  ..., 0.0282, 0.0081, 0.9177]],
        [[0.5805, 0.0479, 0.0764,  ..., 0.0447, 0.3588, 0.0395],
         [0.0686, 0.0479, 0.1026,  ..., 0.0447, 0.3253, 0.0395],
         [0.2822, 0.0479, 0.0764,  ..., 0.0447, 0.1593, 0.8816],
         [0.0686, 0.8562, 0.7446,  ..., 0.8658, 0.1566, 0.0395]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0425, 0.1088, 0.9619,  ..., 0.9817, 0.0197, 0.0389],
         [0.0425, 0.6529, 0.0127,  ..., 0.0061, 0.0197, 0.0389],
         [0.8726, 0.1088, 0.0127,  ..., 0.0061, 0.9408, 0.8833],
         [0.0425, 0.1296, 0.0127,  ..., 0.0061, 0.0197, 0.0389]],
        [[0.3996, 0.0080, 0.9657,  ..., 0.9911, 0.0023, 0.0308],
         [0.3890, 0.0080, 0.0114,  ..., 0.0030, 0.0023, 0.0308],
         [0.1057, 0.0080, 0.0114,  ..., 0.0030, 0.0023, 0.9077],
         [0.1057, 0.9760, 0.0114,  ..., 0.0030, 0.9931, 0.0308]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9243, 0.0703, 0.0376,  ..., 0.9918, 0.8981, 0.0323],
         [0.0252, 0.0703, 0.0376,  ..., 0.0031, 0.0452, 0.0323],
         [0.0252, 0.0703, 0.0376,  ..., 0.0025, 0.0284, 0.0323],
         [0.0252, 0.7891, 0.8872,  ..., 0.0025, 0.0284, 0.9032]],
        [[0.2038, 0.0484, 0.0605,  ..., 0.0523, 0.1643, 0.0165],
         [0.0915, 0.0484, 0.0605,  ..., 0.0523, 0.2665, 0.0165],
         [0.6132, 0.0484, 0.0605,  ..., 0.0523, 0.2979, 0.9504],
         [0.0915, 0.8547, 0.8184,  ..., 0.8432, 0.2713, 0.0165]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0709, 0.1147, 0.9756,  ..., 0.9555, 0.0235, 0.0245],
         [0.0709, 0.3664, 0.0081,  ..., 0.0147, 0.0235, 0.0245],
         [0.7707, 0.1147, 0.0081,  ..., 0.0147, 0.9294, 0.9264],
         [0.0875, 0.4043, 0.0081,  ..., 0.0151, 0.0235, 0.0245]],
        [[0.4322, 0.0268, 0.9903,  ..., 0.9934, 0.0126, 0.0312],
         [0.3371, 0.0193, 0.0032,  ..., 0.0022, 0.0126, 0.0312],
         [0.1153, 0.0193, 0.0032,  ..., 0.0022, 0.0126, 0.9064],
         [0.1153, 0.9346, 0.0032,  ..., 0.0022, 0.9623, 0.0312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:33:31,314 [Process: 0] Synchronize training processes
2024-08-19 13:33:31,314 [Process: 0] Evaluating...
2024-08-19 13:33:32,272 [Process: 0] EPOCH 92:
2024-08-19 13:33:32,276 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7895, 0.0312, 0.0523,  ..., 0.9645, 0.9362, 0.0693],
         [0.0624, 0.0312, 0.0523,  ..., 0.0118, 0.0213, 0.0692],
         [0.0691, 0.0312, 0.0523,  ..., 0.0118, 0.0213, 0.0692],
         [0.0790, 0.9064, 0.8432,  ..., 0.0118, 0.0213, 0.7922]],
        [[0.3851, 0.0339, 0.0677,  ..., 0.0668, 0.0110, 0.0304],
         [0.0848, 0.0339, 0.0789,  ..., 0.0668, 0.0110, 0.0304],
         [0.4453, 0.0339, 0.0677,  ..., 0.0846, 0.9670, 0.9088],
         [0.0848, 0.8982, 0.7857,  ..., 0.7817, 0.0110, 0.0304]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.9331e-02, 1.2674e-01, 9.5826e-01,  ..., 9.2230e-01,
          2.4945e-02, 3.6936e-02],
         [5.9331e-02, 4.9704e-01, 1.3289e-02,  ..., 2.3118e-02,
          2.4945e-02, 3.6936e-02],
         [8.2201e-01, 1.2181e-01, 1.3289e-02,  ..., 2.3118e-02,
          9.2517e-01, 8.8919e-01],
         [5.9331e-02, 2.5441e-01, 1.5164e-02,  ..., 3.1460e-02,
          2.4945e-02, 3.6936e-02]],
        [[9.7151e-01, 2.1931e-02, 9.9130e-01,  ..., 9.7662e-01,
          6.4976e-04, 2.6289e-02],
         [1.2411e-02, 2.1931e-02, 2.9009e-03,  ..., 7.7945e-03,
          6.4976e-04, 2.6289e-02],
         [8.0412e-03, 2.1931e-02, 2.9009e-03,  ..., 7.7945e-03,
          6.4976e-04, 9.2113e-01],
         [8.0412e-03, 9.3421e-01, 2.9009e-03,  ..., 7.7945e-03,
          9.9805e-01, 2.6289e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:33,248 [Process: 0] Synchronize training processes
2024-08-19 13:33:33,248 [Process: 0] Evaluating...
2024-08-19 13:33:33,250 [Process: 0] EPOCH 93:
2024-08-19 13:33:33,252 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:34,221 [Process: 0] Synchronize training processes
2024-08-19 13:33:34,221 [Process: 0] Evaluating...
2024-08-19 13:33:34,223 [Process: 0] EPOCH 94:
2024-08-19 13:33:34,225 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8970, 0.0559, 0.1225,  ..., 0.9765, 0.8208, 0.0719],
         [0.0343, 0.0559, 0.0905,  ..., 0.0078, 0.0707, 0.0767],
         [0.0343, 0.0892, 0.1214,  ..., 0.0078, 0.0543, 0.0767],
         [0.0343, 0.7991, 0.6656,  ..., 0.0078, 0.0543, 0.7747]],
        [[0.1054, 0.0499, 0.0556,  ..., 0.0898, 0.0029, 0.0342],
         [0.0693, 0.0499, 0.0518,  ..., 0.0735, 0.0029, 0.0342],
         [0.7560, 0.0499, 0.0518,  ..., 0.0984, 0.9912, 0.8974],
         [0.0693, 0.8502, 0.8408,  ..., 0.7383, 0.0029, 0.0342]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1311, 0.0661, 0.9188,  ..., 0.9633, 0.0183, 0.0301],
         [0.3176, 0.0946, 0.0311,  ..., 0.0122, 0.0183, 0.0301],
         [0.1311, 0.0661, 0.0251,  ..., 0.0122, 0.9452, 0.9098],
         [0.4201, 0.7731, 0.0251,  ..., 0.0122, 0.0183, 0.0301]],
        [[0.6844, 0.0029, 0.9350,  ..., 0.9562, 0.0036, 0.0586],
         [0.1952, 0.0029, 0.0217,  ..., 0.0146, 0.0036, 0.0590],
         [0.0602, 0.0029, 0.0217,  ..., 0.0146, 0.0036, 0.8264],
         [0.0602, 0.9914, 0.0217,  ..., 0.0146, 0.9891, 0.0560]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6072, 0.0517, 0.0471,  ..., 0.9806, 0.9081, 0.0563],
         [0.1093, 0.0517, 0.0471,  ..., 0.0065, 0.0317, 0.0563],
         [0.1263, 0.0517, 0.0471,  ..., 0.0065, 0.0301, 0.0657],
         [0.1572, 0.8448, 0.8587,  ..., 0.0065, 0.0301, 0.8217]],
        [[0.2527, 0.0778, 0.0676,  ..., 0.1032, 0.0120, 0.0348],
         [0.0974, 0.0643, 0.0676,  ..., 0.1039, 0.0120, 0.0348],
         [0.5524, 0.0652, 0.0900,  ..., 0.1402, 0.9640, 0.8955],
         [0.0974, 0.7928, 0.7747,  ..., 0.6526, 0.0120, 0.0348]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0216, 0.1360, 0.9868,  ..., 0.9847, 0.0329, 0.0439],
         [0.0216, 0.5111, 0.0044,  ..., 0.0051, 0.0329, 0.0439],
         [0.9352, 0.1335, 0.0044,  ..., 0.0051, 0.9012, 0.8684],
         [0.0216, 0.2194, 0.0044,  ..., 0.0051, 0.0329, 0.0439]],
        [[0.4152, 0.0827, 0.9685,  ..., 0.9712, 0.0083, 0.0201],
         [0.4080, 0.1235, 0.0105,  ..., 0.0096, 0.0076, 0.0201],
         [0.0884, 0.0827, 0.0105,  ..., 0.0096, 0.0076, 0.9397],
         [0.0884, 0.7110, 0.0105,  ..., 0.0096, 0.9766, 0.0201]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:35,196 [Process: 0] Synchronize training processes
2024-08-19 13:33:35,197 [Process: 0] Evaluating...
2024-08-19 13:33:35,198 [Process: 0] EPOCH 95:
2024-08-19 13:33:35,200 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:36,174 [Process: 0] Synchronize training processes
2024-08-19 13:33:36,175 [Process: 0] Evaluating...
2024-08-19 13:33:36,177 [Process: 0] EPOCH 96:
2024-08-19 13:33:36,178 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8895, 0.0544, 0.0589,  ..., 0.8802, 0.9362, 0.0249],
         [0.0334, 0.0544, 0.0589,  ..., 0.0382, 0.0213, 0.0249],
         [0.0334, 0.0544, 0.0646,  ..., 0.0434, 0.0213, 0.0249],
         [0.0436, 0.8369, 0.8175,  ..., 0.0382, 0.0213, 0.9254]],
        [[0.1351, 0.0307, 0.0458,  ..., 0.0993, 0.0301, 0.0026],
         [0.0800, 0.0307, 0.0458,  ..., 0.1438, 0.0301, 0.0026],
         [0.7049, 0.0307, 0.0458,  ..., 0.0995, 0.9098, 0.9923],
         [0.0800, 0.9079, 0.8627,  ..., 0.6575, 0.0301, 0.0026]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0348, 0.0843, 0.9789,  ..., 0.9840, 0.0318, 0.0222],
         [0.0348, 0.0394, 0.0059,  ..., 0.0042, 0.0318, 0.0222],
         [0.8957, 0.0394, 0.0059,  ..., 0.0042, 0.9045, 0.9333],
         [0.0348, 0.8368, 0.0092,  ..., 0.0076, 0.0318, 0.0222]],
        [[0.1605, 0.0118, 0.9903,  ..., 0.9885, 0.0111, 0.0380],
         [0.6054, 0.0118, 0.0032,  ..., 0.0038, 0.0111, 0.0380],
         [0.1171, 0.0118, 0.0032,  ..., 0.0038, 0.0111, 0.8859],
         [0.1171, 0.9647, 0.0032,  ..., 0.0038, 0.9666, 0.0380]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9167, 0.0534, 0.0427,  ..., 0.9732, 0.8634, 0.0543],
         [0.0232, 0.0482, 0.0427,  ..., 0.0089, 0.0420, 0.0543],
         [0.0232, 0.0482, 0.0427,  ..., 0.0089, 0.0420, 0.0543],
         [0.0368, 0.8503, 0.8719,  ..., 0.0089, 0.0527, 0.8371]],
        [[0.2813, 0.0479, 0.0377,  ..., 0.0685, 0.0038, 0.0287],
         [0.0910, 0.0479, 0.0377,  ..., 0.1440, 0.0038, 0.0356],
         [0.5367, 0.0523, 0.0377,  ..., 0.7191, 0.9886, 0.9070],
         [0.0910, 0.8518, 0.8869,  ..., 0.0685, 0.0038, 0.0287]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0413, 0.0168, 0.9722,  ..., 0.9863, 0.0172, 0.0338],
         [0.0413, 0.0168, 0.0093,  ..., 0.0042, 0.0172, 0.0338],
         [0.8760, 0.0168, 0.0093,  ..., 0.0042, 0.9485, 0.8985],
         [0.0413, 0.9495, 0.0093,  ..., 0.0052, 0.0172, 0.0338]],
        [[0.1717, 0.0359, 0.9946,  ..., 0.9571, 0.0068, 0.0155],
         [0.4741, 0.0359, 0.0018,  ..., 0.0143, 0.0068, 0.0155],
         [0.1699, 0.0359, 0.0018,  ..., 0.0143, 0.0068, 0.9536],
         [0.1843, 0.8922, 0.0018,  ..., 0.0143, 0.9797, 0.0155]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:37,150 [Process: 0] Synchronize training processes
2024-08-19 13:33:37,150 [Process: 0] Evaluating...
2024-08-19 13:33:37,152 [Process: 0] EPOCH 97:
2024-08-19 13:33:37,154 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:38,128 [Process: 0] Synchronize training processes
2024-08-19 13:33:38,128 [Process: 0] Evaluating...
2024-08-19 13:33:38,130 [Process: 0] EPOCH 98:
2024-08-19 13:33:38,132 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9575, 0.0810, 0.0432,  ..., 0.6867, 0.9492, 0.0241],
         [0.0142, 0.0904, 0.0432,  ..., 0.0741, 0.0163, 0.0241],
         [0.0142, 0.0810, 0.0432,  ..., 0.0741, 0.0163, 0.0241],
         [0.0142, 0.7476, 0.8705,  ..., 0.1651, 0.0182, 0.9277]],
        [[0.6193, 0.0167, 0.0254,  ..., 0.0769, 0.0087, 0.1309],
         [0.0840, 0.0167, 0.0254,  ..., 0.1164, 0.0087, 0.2357],
         [0.2128, 0.0167, 0.0254,  ..., 0.7298, 0.9738, 0.4926],
         [0.0840, 0.9500, 0.9239,  ..., 0.0769, 0.0087, 0.1408]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0381, 0.0046, 0.9720,  ..., 0.9657, 0.0270, 0.0160],
         [0.0381, 0.0046, 0.0093,  ..., 0.0114, 0.0261, 0.0160],
         [0.8856, 0.0046, 0.0093,  ..., 0.0114, 0.9209, 0.9519],
         [0.0381, 0.9861, 0.0093,  ..., 0.0114, 0.0261, 0.0160]],
        [[0.1780, 0.0144, 0.9861,  ..., 0.9795, 0.0029, 0.0384],
         [0.6297, 0.0144, 0.0046,  ..., 0.0068, 0.0029, 0.0384],
         [0.0962, 0.0144, 0.0046,  ..., 0.0068, 0.0029, 0.8848],
         [0.0962, 0.9569, 0.0046,  ..., 0.0068, 0.9912, 0.0384]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9476, 0.0250, 0.0511,  ..., 0.9582, 0.9685, 0.0432],
         [0.0169, 0.0250, 0.0511,  ..., 0.0139, 0.0105, 0.0432],
         [0.0169, 0.0250, 0.0511,  ..., 0.0139, 0.0105, 0.0432],
         [0.0186, 0.9249, 0.8467,  ..., 0.0139, 0.0105, 0.8704]],
        [[0.1726, 0.0183, 0.0289,  ..., 0.0522, 0.1142, 0.0830],
         [0.0745, 0.0183, 0.0289,  ..., 0.0522, 0.1142, 0.1280],
         [0.6783, 0.0183, 0.0289,  ..., 0.0522, 0.4353, 0.6997],
         [0.0745, 0.9451, 0.9134,  ..., 0.8433, 0.3362, 0.0892]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0118, 0.0401, 0.9587,  ..., 0.9859, 0.0142, 0.0360],
         [0.0118, 0.0401, 0.0138,  ..., 0.0047, 0.0142, 0.0337],
         [0.9647, 0.0401, 0.0138,  ..., 0.0047, 0.9573, 0.8967],
         [0.0118, 0.8797, 0.0138,  ..., 0.0047, 0.0142, 0.0337]],
        [[0.1204, 0.0138, 0.9692,  ..., 0.9884, 0.0096, 0.0194],
         [0.7571, 0.0138, 0.0097,  ..., 0.0039, 0.0096, 0.0194],
         [0.0613, 0.0138, 0.0097,  ..., 0.0039, 0.0096, 0.9418],
         [0.0613, 0.9586, 0.0114,  ..., 0.0039, 0.9712, 0.0194]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:39,165 [Process: 0] Synchronize training processes
2024-08-19 13:33:39,165 [Process: 0] Evaluating...
2024-08-19 13:33:39,167 [Process: 0] EPOCH 99:
2024-08-19 13:33:39,169 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:40,209 [Process: 0] Synchronize training processes
2024-08-19 13:33:40,209 [Process: 0] Evaluating...
2024-08-19 13:33:40,211 [Process: 0] EPOCH 100:
2024-08-19 13:33:40,213 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9690, 0.0318, 0.0161,  ..., 0.9616, 0.9730, 0.0352],
         [0.0103, 0.0318, 0.0161,  ..., 0.0128, 0.0090, 0.0352],
         [0.0103, 0.0318, 0.0161,  ..., 0.0128, 0.0090, 0.0352],
         [0.0103, 0.9046, 0.9517,  ..., 0.0128, 0.0090, 0.8943]],
        [[0.2836, 0.0377, 0.0250,  ..., 0.0568, 0.0146, 0.0050],
         [0.0939, 0.0377, 0.0250,  ..., 0.0568, 0.0146, 0.0050],
         [0.5286, 0.0377, 0.0250,  ..., 0.0595, 0.9562, 0.9851],
         [0.0939, 0.8869, 0.9250,  ..., 0.8269, 0.0146, 0.0050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0339, 0.0357, 0.9912,  ..., 0.9675, 0.0293, 0.0455],
         [0.0337, 0.0482, 0.0028,  ..., 0.0097, 0.0274, 0.0419],
         [0.8971, 0.0357, 0.0028,  ..., 0.0097, 0.9160, 0.8707],
         [0.0352, 0.8804, 0.0033,  ..., 0.0132, 0.0274, 0.0419]],
        [[0.0910, 0.0304, 0.9665,  ..., 0.9600, 0.0057, 0.0210],
         [0.7270, 0.0328, 0.0120,  ..., 0.0133, 0.0057, 0.0210],
         [0.0910, 0.0304, 0.0107,  ..., 0.0133, 0.0057, 0.9371],
         [0.0910, 0.9064, 0.0107,  ..., 0.0133, 0.9828, 0.0210]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8761, 0.0300, 0.0544,  ..., 0.9517, 0.9767, 0.0298],
         [0.0413, 0.0300, 0.0544,  ..., 0.0161, 0.0078, 0.0298],
         [0.0413, 0.0300, 0.0546,  ..., 0.0161, 0.0078, 0.0298],
         [0.0413, 0.9099, 0.8366,  ..., 0.0161, 0.0078, 0.9107]],
        [[0.7404, 0.0580, 0.0583,  ..., 0.0196, 0.0105, 0.0357],
         [0.0540, 0.0580, 0.0583,  ..., 0.0196, 0.0105, 0.0357],
         [0.1516, 0.0580, 0.0583,  ..., 0.0196, 0.9685, 0.8929],
         [0.0540, 0.8261, 0.8252,  ..., 0.9412, 0.0105, 0.0357]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1550e-02, 3.6958e-02, 9.9647e-01,  ..., 9.8860e-01,
          1.8054e-02, 1.4803e-02],
         [2.1550e-02, 4.0209e-02, 1.1750e-03,  ..., 3.8009e-03,
          1.8054e-02, 1.4803e-02],
         [9.3535e-01, 3.6958e-02, 1.1750e-03,  ..., 3.8009e-03,
          9.4584e-01, 9.5559e-01],
         [2.1550e-02, 8.8588e-01, 1.1750e-03,  ..., 3.8009e-03,
          1.8054e-02, 1.4803e-02]],
        [[8.0652e-02, 3.1872e-02, 7.2938e-01,  ..., 9.6864e-01,
          5.7596e-04, 3.2705e-02],
         [7.5804e-01, 3.1872e-02, 8.0408e-02,  ..., 1.0454e-02,
          5.7596e-04, 3.2705e-02],
         [8.0652e-02, 3.1872e-02, 7.5224e-02,  ..., 1.0454e-02,
          5.7596e-04, 9.0089e-01],
         [8.0652e-02, 9.0438e-01, 1.1499e-01,  ..., 1.0454e-02,
          9.9827e-01, 3.3705e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:41,253 [Process: 0] Synchronize training processes
2024-08-19 13:33:41,253 [Process: 0] Evaluating...
2024-08-19 13:33:41,255 [Process: 0] EPOCH 101:
2024-08-19 13:33:41,257 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:42,289 [Process: 0] Synchronize training processes
2024-08-19 13:33:42,290 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8443, 0.0345, 0.0467,  ..., 0.9662, 0.9830, 0.0280],
         [0.0405, 0.0345, 0.0467,  ..., 0.0113, 0.0057, 0.0280],
         [0.0405, 0.0349, 0.0477,  ..., 0.0113, 0.0057, 0.0359],
         [0.0747, 0.8962, 0.8589,  ..., 0.0113, 0.0057, 0.9080]],
        [[0.3050, 0.0517, 0.0184,  ..., 0.0467, 0.0023, 0.1150],
         [0.0731, 0.0517, 0.0184,  ..., 0.0467, 0.0023, 0.1150],
         [0.5489, 0.0792, 0.0184,  ..., 0.0467, 0.9930, 0.5863],
         [0.0731, 0.8175, 0.9449,  ..., 0.8598, 0.0023, 0.1837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0103, 0.0676, 0.9001,  ..., 0.9896, 0.0314, 0.0149],
         [0.0103, 0.0618, 0.0299,  ..., 0.0035, 0.0314, 0.0149],
         [0.9691, 0.0618, 0.0299,  ..., 0.0035, 0.9058, 0.9553],
         [0.0103, 0.8088, 0.0400,  ..., 0.0035, 0.0314, 0.0149]],
        [[0.3777, 0.0058, 0.9732,  ..., 0.9945, 0.0027, 0.0206],
         [0.4550, 0.0058, 0.0089,  ..., 0.0018, 0.0027, 0.0206],
         [0.0836, 0.0058, 0.0089,  ..., 0.0018, 0.0027, 0.9383],
         [0.0836, 0.9827, 0.0089,  ..., 0.0018, 0.9920, 0.0206]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:43,272 [Process: 0] EPOCH 102:
2024-08-19 13:33:43,276 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:44,278 [Process: 0] Synchronize training processes
2024-08-19 13:33:44,278 [Process: 0] Evaluating...
2024-08-19 13:33:44,280 [Process: 0] EPOCH 103:
2024-08-19 13:33:44,282 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6311, 0.0412, 0.0369,  ..., 0.9768, 0.9682, 0.0450],
         [0.0772, 0.0412, 0.0369,  ..., 0.0077, 0.0106, 0.0450],
         [0.0917, 0.0435, 0.0369,  ..., 0.0077, 0.0106, 0.0450],
         [0.2000, 0.8740, 0.8892,  ..., 0.0077, 0.0106, 0.8651]],
        [[0.2029, 0.0465, 0.0305,  ..., 0.0579, 0.0090, 0.0864],
         [0.0878, 0.0465, 0.0305,  ..., 0.0579, 0.0090, 0.0864],
         [0.6215, 0.0549, 0.0305,  ..., 0.0809, 0.9729, 0.7040],
         [0.0878, 0.8522, 0.9086,  ..., 0.8034, 0.0090, 0.1231]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0256, 0.0680, 0.9694,  ..., 0.9867, 0.0272, 0.0215],
         [0.0256, 0.0740, 0.0102,  ..., 0.0044, 0.0272, 0.0215],
         [0.9231, 0.0537, 0.0102,  ..., 0.0044, 0.9183, 0.9356],
         [0.0256, 0.8044, 0.0102,  ..., 0.0044, 0.0272, 0.0215]],
        [[0.4038, 0.0259, 0.9934,  ..., 0.9751, 0.0107, 0.0324],
         [0.3810, 0.0259, 0.0022,  ..., 0.0083, 0.0084, 0.0324],
         [0.1075, 0.0259, 0.0022,  ..., 0.0083, 0.0084, 0.9027],
         [0.1077, 0.9224, 0.0022,  ..., 0.0083, 0.9726, 0.0324]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8483, 0.0291, 0.0287,  ..., 0.9375, 0.9587, 0.0776],
         [0.0432, 0.0291, 0.0287,  ..., 0.0240, 0.0132, 0.0776],
         [0.0521, 0.0291, 0.0287,  ..., 0.0193, 0.0150, 0.1211],
         [0.0564, 0.9126, 0.9138,  ..., 0.0193, 0.0132, 0.7237]],
        [[0.3650, 0.0297, 0.0463,  ..., 0.0296, 0.0144, 0.0319],
         [0.0793, 0.0297, 0.0463,  ..., 0.0296, 0.0144, 0.0319],
         [0.4764, 0.0297, 0.0463,  ..., 0.0296, 0.9569, 0.9042],
         [0.0793, 0.9109, 0.8612,  ..., 0.9113, 0.0144, 0.0319]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0408, 0.0772, 0.9682,  ..., 0.9543, 0.0306, 0.0153],
         [0.0408, 0.0444, 0.0106,  ..., 0.0163, 0.0306, 0.0153],
         [0.8550, 0.0424, 0.0106,  ..., 0.0147, 0.9083, 0.9542],
         [0.0634, 0.8361, 0.0106,  ..., 0.0147, 0.0306, 0.0153]],
        [[0.1431, 0.0167, 0.9033,  ..., 0.9670, 0.5542, 0.0298],
         [0.1519, 0.0167, 0.0462,  ..., 0.0110, 0.0692, 0.0298],
         [0.3360, 0.0167, 0.0253,  ..., 0.0110, 0.0692, 0.9107],
         [0.3690, 0.9498, 0.0253,  ..., 0.0110, 0.3074, 0.0298]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:45,328 [Process: 0] Synchronize training processes
2024-08-19 13:33:45,328 [Process: 0] Evaluating...
2024-08-19 13:33:45,330 [Process: 0] EPOCH 104:
2024-08-19 13:33:45,332 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:46,367 [Process: 0] Synchronize training processes
2024-08-19 13:33:46,368 [Process: 0] Evaluating...
2024-08-19 13:33:46,369 [Process: 0] EPOCH 105:
2024-08-19 13:33:46,371 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8788, 0.0399, 0.0392,  ..., 0.8033, 0.9900, 0.0260],
         [0.0410, 0.0399, 0.0392,  ..., 0.0761, 0.0033, 0.0260],
         [0.0401, 0.0399, 0.0392,  ..., 0.0615, 0.0033, 0.0260],
         [0.0401, 0.8804, 0.8824,  ..., 0.0591, 0.0033, 0.9221]],
        [[0.1477, 0.0365, 0.0332,  ..., 0.0355, 0.0290, 0.0035],
         [0.0822, 0.0365, 0.0332,  ..., 0.0355, 0.0290, 0.0035],
         [0.6879, 0.0365, 0.0332,  ..., 0.0355, 0.9130, 0.9894],
         [0.0822, 0.8905, 0.9003,  ..., 0.8936, 0.0290, 0.0035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0800, 0.2303, 0.9349,  ..., 0.9935, 0.0442, 0.0183],
         [0.0800, 0.0794, 0.0275,  ..., 0.0022, 0.0442, 0.0183],
         [0.5814, 0.0794, 0.0188,  ..., 0.0022, 0.8675, 0.9450],
         [0.2587, 0.6110, 0.0188,  ..., 0.0022, 0.0442, 0.0183]],
        [[0.1767, 0.0863, 0.9599,  ..., 0.9837, 0.2840, 0.0371],
         [0.2942, 0.0822, 0.0145,  ..., 0.0054, 0.0373, 0.0371],
         [0.3608, 0.0874, 0.0128,  ..., 0.0054, 0.0373, 0.8882],
         [0.1683, 0.7440, 0.0128,  ..., 0.0054, 0.6413, 0.0376]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6442, 0.0337, 0.0310,  ..., 0.9430, 0.9854, 0.0130],
         [0.1127, 0.0337, 0.0310,  ..., 0.0188, 0.0049, 0.0130],
         [0.1287, 0.0337, 0.0310,  ..., 0.0194, 0.0049, 0.0130],
         [0.1143, 0.8988, 0.9070,  ..., 0.0188, 0.0049, 0.9610]],
        [[0.5875, 0.0179, 0.0339,  ..., 0.0306, 0.0057, 0.0232],
         [0.0758, 0.0169, 0.0339,  ..., 0.0306, 0.0057, 0.0232],
         [0.2609, 0.0169, 0.0339,  ..., 0.0306, 0.9830, 0.9304],
         [0.0758, 0.9483, 0.8983,  ..., 0.9081, 0.0057, 0.0232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7504e-02, 5.7240e-01, 9.9187e-01,  ..., 9.9023e-01,
          4.2548e-02, 2.9016e-02],
         [3.7504e-02, 5.7269e-02, 2.7091e-03,  ..., 3.2570e-03,
          4.2548e-02, 2.9016e-02],
         [8.8749e-01, 5.7269e-02, 2.7091e-03,  ..., 3.2570e-03,
          8.7236e-01, 9.1295e-01],
         [3.7504e-02, 3.1306e-01, 2.7091e-03,  ..., 3.2570e-03,
          4.2548e-02, 2.9016e-02]],
        [[9.0462e-01, 6.0854e-02, 9.8686e-01,  ..., 9.6585e-01,
          3.2268e-04, 2.3567e-02],
         [3.9141e-02, 6.0854e-02, 4.3813e-03,  ..., 1.1383e-02,
          3.2268e-04, 2.3567e-02],
         [2.8120e-02, 8.2728e-02, 4.3813e-03,  ..., 1.1383e-02,
          3.2268e-04, 9.2930e-01],
         [2.8120e-02, 7.9556e-01, 4.3813e-03,  ..., 1.1383e-02,
          9.9903e-01, 2.3567e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:47,408 [Process: 0] Synchronize training processes
2024-08-19 13:33:47,409 [Process: 0] Evaluating...
2024-08-19 13:33:47,410 [Process: 0] EPOCH 106:
2024-08-19 13:33:47,412 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:48,451 [Process: 0] Synchronize training processes
2024-08-19 13:33:48,451 [Process: 0] Evaluating...
2024-08-19 13:33:48,453 [Process: 0] EPOCH 107:
2024-08-19 13:33:48,455 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9302, 0.0357, 0.0530,  ..., 0.9837, 0.9894, 0.0380],
         [0.0221, 0.0357, 0.0530,  ..., 0.0054, 0.0035, 0.0380],
         [0.0256, 0.0357, 0.0530,  ..., 0.0054, 0.0035, 0.0408],
         [0.0221, 0.8929, 0.8409,  ..., 0.0054, 0.0035, 0.8833]],
        [[0.8634, 0.0520, 0.0331,  ..., 0.0643, 0.0137, 0.0259],
         [0.0327, 0.0520, 0.0331,  ..., 0.0643, 0.0137, 0.0259],
         [0.0712, 0.0548, 0.0331,  ..., 0.0653, 0.9590, 0.9223],
         [0.0327, 0.8411, 0.9007,  ..., 0.8061, 0.0137, 0.0259]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0158, 0.0379, 0.9890,  ..., 0.9910, 0.0120, 0.0191],
         [0.0158, 0.0379, 0.0037,  ..., 0.0030, 0.0120, 0.0191],
         [0.9527, 0.0379, 0.0037,  ..., 0.0030, 0.9639, 0.9428],
         [0.0158, 0.8864, 0.0037,  ..., 0.0030, 0.0120, 0.0191]],
        [[0.9789, 0.0081, 0.9847,  ..., 0.9902, 0.0019, 0.0372],
         [0.0070, 0.0081, 0.0051,  ..., 0.0033, 0.0019, 0.0372],
         [0.0070, 0.0081, 0.0051,  ..., 0.0033, 0.0019, 0.8885],
         [0.0070, 0.9758, 0.0051,  ..., 0.0033, 0.9944, 0.0372]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8353, 0.0171, 0.0348,  ..., 0.9702, 0.9732, 0.0453],
         [0.0512, 0.0171, 0.0348,  ..., 0.0099, 0.0089, 0.0453],
         [0.0623, 0.0171, 0.0348,  ..., 0.0099, 0.0089, 0.0487],
         [0.0512, 0.9488, 0.8956,  ..., 0.0099, 0.0089, 0.8608]],
        [[0.4495, 0.0264, 0.0413,  ..., 0.1089, 0.0073, 0.0373],
         [0.0936, 0.0264, 0.0389,  ..., 0.1611, 0.0073, 0.0373],
         [0.3631, 0.0264, 0.0389,  ..., 0.1484, 0.9782, 0.8881],
         [0.0937, 0.9208, 0.8810,  ..., 0.5816, 0.0073, 0.0373]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0198, 0.1341, 0.9635,  ..., 0.9606, 0.0315, 0.0391],
         [0.0198, 0.0452, 0.0108,  ..., 0.0122, 0.0315, 0.0391],
         [0.9407, 0.0452, 0.0108,  ..., 0.0122, 0.9055, 0.8826],
         [0.0198, 0.7756, 0.0149,  ..., 0.0149, 0.0315, 0.0391]],
        [[0.9675, 0.0187, 0.9760,  ..., 0.9934, 0.0128, 0.0621],
         [0.0108, 0.0187, 0.0080,  ..., 0.0022, 0.0119, 0.0621],
         [0.0108, 0.0187, 0.0080,  ..., 0.0022, 0.0119, 0.8098],
         [0.0108, 0.9439, 0.0080,  ..., 0.0022, 0.9634, 0.0661]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:49,492 [Process: 0] Synchronize training processes
2024-08-19 13:33:49,492 [Process: 0] Evaluating...
2024-08-19 13:33:49,494 [Process: 0] EPOCH 108:
2024-08-19 13:33:49,496 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:50,525 [Process: 0] Synchronize training processes
2024-08-19 13:33:50,526 [Process: 0] Evaluating...
2024-08-19 13:33:50,528 [Process: 0] EPOCH 109:
2024-08-19 13:33:50,529 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8983, 0.0182, 0.0192,  ..., 0.9688, 0.9765, 0.0296],
         [0.0331, 0.0182, 0.0192,  ..., 0.0104, 0.0076, 0.0296],
         [0.0335, 0.0182, 0.0192,  ..., 0.0104, 0.0076, 0.0296],
         [0.0351, 0.9455, 0.9423,  ..., 0.0104, 0.0083, 0.9112]],
        [[0.3682, 0.0231, 0.0282,  ..., 0.1180, 0.0049, 0.0145],
         [0.0737, 0.0231, 0.0282,  ..., 0.1952, 0.0049, 0.0145],
         [0.4844, 0.0231, 0.0282,  ..., 0.2116, 0.9852, 0.9564],
         [0.0737, 0.9306, 0.9153,  ..., 0.4752, 0.0049, 0.0145]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0277, 0.0319, 0.9337,  ..., 0.9392, 0.0145, 0.0241],
         [0.0277, 0.0162, 0.0173,  ..., 0.0203, 0.0145, 0.0241],
         [0.9169, 0.0162, 0.0173,  ..., 0.0203, 0.9565, 0.9276],
         [0.0277, 0.9356, 0.0318,  ..., 0.0203, 0.0145, 0.0241]],
        [[0.9818, 0.0286, 0.9523,  ..., 0.9912, 0.0051, 0.0491],
         [0.0061, 0.0286, 0.0159,  ..., 0.0029, 0.0047, 0.0491],
         [0.0061, 0.0286, 0.0159,  ..., 0.0029, 0.0047, 0.8511],
         [0.0061, 0.9141, 0.0159,  ..., 0.0029, 0.9855, 0.0506]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7670, 0.0351, 0.0331,  ..., 0.9582, 0.9690, 0.0178],
         [0.0683, 0.0351, 0.0331,  ..., 0.0133, 0.0102, 0.0178],
         [0.0824, 0.0351, 0.0331,  ..., 0.0153, 0.0102, 0.0178],
         [0.0823, 0.8947, 0.9006,  ..., 0.0133, 0.0107, 0.9465]],
        [[0.4555, 0.0721, 0.0470,  ..., 0.1371, 0.0091, 0.0087],
         [0.0767, 0.0721, 0.0470,  ..., 0.1902, 0.0091, 0.0087],
         [0.3911, 0.1040, 0.0556,  ..., 0.2724, 0.9727, 0.9738],
         [0.0767, 0.7518, 0.8503,  ..., 0.4003, 0.0091, 0.0087]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0263, 0.0903, 0.9824,  ..., 0.9779, 0.0363, 0.0214],
         [0.0263, 0.0388, 0.0058,  ..., 0.0074, 0.0363, 0.0214],
         [0.9211, 0.0388, 0.0058,  ..., 0.0074, 0.8912, 0.9357],
         [0.0263, 0.8321, 0.0061,  ..., 0.0074, 0.0363, 0.0214]],
        [[0.9867, 0.0319, 0.9610,  ..., 0.9791, 0.0054, 0.0177],
         [0.0044, 0.0319, 0.0130,  ..., 0.0068, 0.0054, 0.0177],
         [0.0044, 0.0319, 0.0130,  ..., 0.0068, 0.0054, 0.9470],
         [0.0044, 0.9043, 0.0130,  ..., 0.0073, 0.9837, 0.0177]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:51,572 [Process: 0] Synchronize training processes
2024-08-19 13:33:51,572 [Process: 0] Evaluating...
2024-08-19 13:33:51,574 [Process: 0] EPOCH 110:
2024-08-19 13:33:51,576 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:52,621 [Process: 0] Synchronize training processes
2024-08-19 13:33:52,621 [Process: 0] Evaluating...
2024-08-19 13:33:52,623 [Process: 0] EPOCH 111:
2024-08-19 13:33:52,625 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5524, 0.0322, 0.0455,  ..., 0.9806, 0.9878, 0.0535],
         [0.1147, 0.0322, 0.0455,  ..., 0.0059, 0.0041, 0.0577],
         [0.1164, 0.0322, 0.0457,  ..., 0.0077, 0.0041, 0.0590],
         [0.2165, 0.9035, 0.8633,  ..., 0.0059, 0.0041, 0.8298]],
        [[0.7206, 0.0299, 0.0301,  ..., 0.0551, 0.0055, 0.0102],
         [0.0358, 0.0299, 0.0301,  ..., 0.0551, 0.0055, 0.0138],
         [0.2077, 0.0385, 0.0308,  ..., 0.0597, 0.9836, 0.9658],
         [0.0358, 0.9017, 0.9090,  ..., 0.8302, 0.0055, 0.0102]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3620e-02, 3.0067e-02, 9.9788e-01,  ..., 9.9120e-01,
          3.7267e-02, 3.8418e-02],
         [2.3620e-02, 3.0067e-02, 7.0592e-04,  ..., 2.9317e-03,
          3.7267e-02, 3.8418e-02],
         [9.2914e-01, 3.0067e-02, 7.0592e-04,  ..., 2.9317e-03,
          8.8820e-01, 8.8475e-01],
         [2.3620e-02, 9.0980e-01, 7.0592e-04,  ..., 2.9317e-03,
          3.7267e-02, 3.8418e-02]],
        [[9.0192e-01, 8.6767e-03, 9.8772e-01,  ..., 9.7705e-01,
          1.5888e-02, 1.3450e-02],
         [4.1876e-02, 8.6767e-03, 4.0939e-03,  ..., 9.0047e-03,
          1.5888e-02, 1.3450e-02],
         [2.8103e-02, 8.6767e-03, 4.0939e-03,  ..., 6.9724e-03,
          1.5888e-02, 9.5965e-01],
         [2.8103e-02, 9.7397e-01, 4.0939e-03,  ..., 6.9724e-03,
          9.5234e-01, 1.3450e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8533, 0.0299, 0.0333,  ..., 0.9806, 0.9804, 0.0434],
         [0.0485, 0.0299, 0.0333,  ..., 0.0065, 0.0064, 0.0434],
         [0.0461, 0.0299, 0.0333,  ..., 0.0065, 0.0067, 0.0434],
         [0.0520, 0.9104, 0.9000,  ..., 0.0065, 0.0064, 0.8698]],
        [[0.7260, 0.0205, 0.0180,  ..., 0.0721, 0.0171, 0.0029],
         [0.0450, 0.0205, 0.0180,  ..., 0.0721, 0.9487, 0.0029],
         [0.1841, 0.0205, 0.0180,  ..., 0.1296, 0.0171, 0.9914],
         [0.0450, 0.9384, 0.9461,  ..., 0.7263, 0.0171, 0.0029]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0318, 0.0890, 0.9815,  ..., 0.9836, 0.0324, 0.0337],
         [0.0318, 0.0256, 0.0062,  ..., 0.0055, 0.0324, 0.0330],
         [0.9045, 0.0256, 0.0062,  ..., 0.0055, 0.9019, 0.8995],
         [0.0318, 0.8599, 0.0062,  ..., 0.0055, 0.0334, 0.0339]],
        [[0.7043, 0.0174, 0.9805,  ..., 0.9369, 0.1858, 0.0215],
         [0.1761, 0.0174, 0.0065,  ..., 0.0210, 0.0383, 0.0215],
         [0.0598, 0.0174, 0.0065,  ..., 0.0210, 0.0383, 0.9335],
         [0.0598, 0.9479, 0.0065,  ..., 0.0210, 0.7376, 0.0234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:33:53,667 [Process: 0] Synchronize training processes
2024-08-19 13:33:53,668 [Process: 0] Evaluating...
2024-08-19 13:33:54,649 [Process: 0] EPOCH 112:
2024-08-19 13:33:54,652 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8210, 0.0515, 0.0155,  ..., 0.9671, 0.9684, 0.0574],
         [0.0704, 0.0515, 0.0155,  ..., 0.0108, 0.0105, 0.0574],
         [0.0568, 0.0740, 0.0155,  ..., 0.0113, 0.0105, 0.0574],
         [0.0518, 0.8230, 0.9535,  ..., 0.0108, 0.0105, 0.8277]],
        [[0.3073, 0.0588, 0.0180,  ..., 0.0779, 0.0041, 0.0086],
         [0.0358, 0.0588, 0.0180,  ..., 0.0779, 0.0041, 0.0086],
         [0.6211, 0.0822, 0.0180,  ..., 0.1016, 0.9876, 0.9741],
         [0.0358, 0.8003, 0.9461,  ..., 0.7426, 0.0041, 0.0086]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0106, 0.0126, 0.9863,  ..., 0.9926, 0.0239, 0.0337],
         [0.0106, 0.0126, 0.0046,  ..., 0.0025, 0.0239, 0.0310],
         [0.9681, 0.0126, 0.0045,  ..., 0.0025, 0.9283, 0.9020],
         [0.0106, 0.9622, 0.0045,  ..., 0.0025, 0.0239, 0.0333]],
        [[0.4680, 0.0724, 0.9265,  ..., 0.9773, 0.0099, 0.0270],
         [0.1437, 0.0604, 0.0360,  ..., 0.0081, 0.0099, 0.0270],
         [0.1775, 0.0612, 0.0188,  ..., 0.0073, 0.0099, 0.9191],
         [0.2108, 0.8060, 0.0188,  ..., 0.0073, 0.9703, 0.0270]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:33:55,676 [Process: 0] Synchronize training processes
2024-08-19 13:33:55,676 [Process: 0] Evaluating...
2024-08-19 13:33:55,678 [Process: 0] EPOCH 113:
2024-08-19 13:33:55,680 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:56,727 [Process: 0] Synchronize training processes
2024-08-19 13:33:56,727 [Process: 0] Evaluating...
2024-08-19 13:33:56,729 [Process: 0] EPOCH 114:
2024-08-19 13:33:56,730 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7457, 0.0352, 0.0307,  ..., 0.9909, 0.9896, 0.0217],
         [0.0866, 0.0352, 0.0307,  ..., 0.0030, 0.0035, 0.0217],
         [0.0950, 0.0352, 0.0307,  ..., 0.0030, 0.0035, 0.0217],
         [0.0727, 0.8944, 0.9080,  ..., 0.0030, 0.0035, 0.9348]],
        [[0.4528, 0.0212, 0.0220,  ..., 0.0264, 0.0085, 0.0059],
         [0.0698, 0.0212, 0.0220,  ..., 0.0264, 0.0085, 0.0059],
         [0.4076, 0.0212, 0.0220,  ..., 0.0264, 0.9744, 0.9823],
         [0.0698, 0.9365, 0.9339,  ..., 0.9209, 0.0085, 0.0059]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1432e-02, 2.2341e-02, 9.9108e-01,  ..., 9.3149e-01,
          2.0172e-02, 4.2600e-02],
         [2.9853e-02, 2.2341e-02, 2.9731e-03,  ..., 2.0744e-02,
          2.0172e-02, 4.2600e-02],
         [9.0697e-01, 2.2341e-02, 2.9731e-03,  ..., 2.0744e-02,
          9.3948e-01, 8.6062e-01],
         [3.1742e-02, 9.3298e-01, 2.9731e-03,  ..., 2.7026e-02,
          2.0172e-02, 5.4184e-02]],
        [[6.7013e-01, 2.1101e-02, 9.8284e-01,  ..., 9.9459e-01,
          9.8086e-04, 2.4327e-02],
         [2.5172e-01, 2.1101e-02, 5.7202e-03,  ..., 1.8030e-03,
          9.8086e-04, 2.4327e-02],
         [3.9071e-02, 2.1101e-02, 5.7202e-03,  ..., 1.8030e-03,
          9.8086e-04, 9.2702e-01],
         [3.9071e-02, 9.3670e-01, 5.7202e-03,  ..., 1.8030e-03,
          9.9706e-01, 2.4327e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8813, 0.0190, 0.0493,  ..., 0.9917, 0.9741, 0.0412],
         [0.0386, 0.0190, 0.0608,  ..., 0.0028, 0.0090, 0.0412],
         [0.0415, 0.0190, 0.0493,  ..., 0.0028, 0.0084, 0.0412],
         [0.0386, 0.9430, 0.8405,  ..., 0.0028, 0.0084, 0.8764]],
        [[0.2977, 0.0238, 0.0302,  ..., 0.0462, 0.0157, 0.0185],
         [0.0651, 0.0238, 0.0302,  ..., 0.0462, 0.0157, 0.0185],
         [0.5720, 0.0238, 0.0302,  ..., 0.0467, 0.9528, 0.9444],
         [0.0651, 0.9285, 0.9095,  ..., 0.8609, 0.0157, 0.0185]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:33:57,766 [Process: 0] Synchronize training processes
2024-08-19 13:33:57,766 [Process: 0] Evaluating...
2024-08-19 13:33:57,768 [Process: 0] EPOCH 115:
2024-08-19 13:33:57,769 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:33:58,807 [Process: 0] Synchronize training processes
2024-08-19 13:33:58,807 [Process: 0] Evaluating...
2024-08-19 13:33:58,809 [Process: 0] EPOCH 116:
2024-08-19 13:33:58,811 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7303e-02, 1.3877e-02, 9.8473e-01,  ..., 9.6497e-01,
          8.8579e-03, 3.0039e-02],
         [1.7303e-02, 1.4532e-02, 5.0899e-03,  ..., 1.1676e-02,
          8.8579e-03, 3.0039e-02],
         [9.4809e-01, 1.3877e-02, 5.0899e-03,  ..., 1.1676e-02,
          9.7343e-01, 9.0988e-01],
         [1.7303e-02, 9.5771e-01, 5.0899e-03,  ..., 1.1676e-02,
          8.8579e-03, 3.0039e-02]],
        [[3.9510e-01, 6.9340e-03, 9.4765e-01,  ..., 9.8406e-01,
          6.8587e-04, 3.8374e-02],
         [3.9285e-01, 7.5070e-03, 2.3032e-02,  ..., 5.3138e-03,
          6.8587e-04, 3.8374e-02],
         [9.9599e-02, 6.9340e-03, 1.4657e-02,  ..., 5.3138e-03,
          6.8587e-04, 8.7757e-01],
         [1.1245e-01, 9.7862e-01, 1.4657e-02,  ..., 5.3138e-03,
          9.9794e-01, 4.5681e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9850, 0.0188, 0.0310,  ..., 0.9894, 0.9470, 0.0617],
         [0.0050, 0.0188, 0.0310,  ..., 0.0035, 0.0177, 0.0617],
         [0.0050, 0.0188, 0.0310,  ..., 0.0035, 0.0177, 0.0777],
         [0.0050, 0.9435, 0.9069,  ..., 0.0035, 0.0177, 0.7989]],
        [[0.2957, 0.0252, 0.0416,  ..., 0.0960, 0.0221, 0.0100],
         [0.0450, 0.0252, 0.0458,  ..., 0.0960, 0.0221, 0.0100],
         [0.6143, 0.0252, 0.0416,  ..., 0.1754, 0.9336, 0.9699],
         [0.0450, 0.9245, 0.8710,  ..., 0.6326, 0.0221, 0.0100]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0181, 0.0180, 0.9770,  ..., 0.9870, 0.0096, 0.0389],
         [0.0181, 0.0180, 0.0077,  ..., 0.0043, 0.0096, 0.0364],
         [0.9457, 0.0180, 0.0077,  ..., 0.0043, 0.9712, 0.8882],
         [0.0181, 0.9461, 0.0077,  ..., 0.0043, 0.0096, 0.0364]],
        [[0.2626, 0.0052, 0.9875,  ..., 0.9738, 0.0063, 0.0262],
         [0.4572, 0.0052, 0.0042,  ..., 0.0087, 0.0063, 0.0262],
         [0.1391, 0.0052, 0.0042,  ..., 0.0087, 0.0063, 0.9215],
         [0.1411, 0.9843, 0.0042,  ..., 0.0087, 0.9810, 0.0262]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9808, 0.0205, 0.0145,  ..., 0.8051, 0.9628, 0.0834],
         [0.0064, 0.0205, 0.0145,  ..., 0.0512, 0.0124, 0.0834],
         [0.0064, 0.0205, 0.0145,  ..., 0.0718, 0.0124, 0.1285],
         [0.0064, 0.9385, 0.9564,  ..., 0.0718, 0.0124, 0.7047]],
        [[0.6083, 0.0234, 0.0270,  ..., 0.0348, 0.0122, 0.0191],
         [0.0393, 0.0234, 0.0270,  ..., 0.0348, 0.0122, 0.0191],
         [0.3132, 0.0234, 0.0270,  ..., 0.0348, 0.9633, 0.9428],
         [0.0393, 0.9298, 0.9190,  ..., 0.8957, 0.0122, 0.0191]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:33:59,847 [Process: 0] Synchronize training processes
2024-08-19 13:33:59,847 [Process: 0] Evaluating...
2024-08-19 13:33:59,849 [Process: 0] EPOCH 117:
2024-08-19 13:33:59,851 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:00,890 [Process: 0] Synchronize training processes
2024-08-19 13:34:00,891 [Process: 0] Evaluating...
2024-08-19 13:34:00,892 [Process: 0] EPOCH 118:
2024-08-19 13:34:00,894 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0421, 0.0125, 0.9962,  ..., 0.9878, 0.0246, 0.0211],
         [0.0401, 0.0125, 0.0013,  ..., 0.0040, 0.0246, 0.0211],
         [0.8777, 0.0125, 0.0013,  ..., 0.0040, 0.9263, 0.9368],
         [0.0401, 0.9625, 0.0013,  ..., 0.0042, 0.0246, 0.0211]],
        [[0.1401, 0.0092, 0.9694,  ..., 0.9912, 0.0012, 0.0085],
         [0.3087, 0.0092, 0.0102,  ..., 0.0029, 0.0012, 0.0085],
         [0.2931, 0.0092, 0.0102,  ..., 0.0029, 0.0012, 0.9745],
         [0.2580, 0.9725, 0.0102,  ..., 0.0029, 0.9965, 0.0085]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9214, 0.0269, 0.0183,  ..., 0.9950, 0.9916, 0.0737],
         [0.0208, 0.0269, 0.0183,  ..., 0.0017, 0.0028, 0.0700],
         [0.0228, 0.0269, 0.0183,  ..., 0.0017, 0.0028, 0.0864],
         [0.0350, 0.9193, 0.9452,  ..., 0.0017, 0.0028, 0.7699]],
        [[0.8940, 0.0121, 0.0171,  ..., 0.1006, 0.0083, 0.0069],
         [0.0171, 0.0121, 0.0171,  ..., 0.0633, 0.0083, 0.0069],
         [0.0718, 0.0121, 0.0171,  ..., 0.0821, 0.9750, 0.9792],
         [0.0171, 0.9637, 0.9486,  ..., 0.7541, 0.0083, 0.0069]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7642e-02, 3.8381e-03, 9.9841e-01,  ..., 9.4411e-01,
          1.8124e-02, 2.4007e-02],
         [2.7642e-02, 3.8381e-03, 5.3106e-04,  ..., 1.5209e-02,
          1.8124e-02, 2.4007e-02],
         [9.1707e-01, 3.8381e-03, 5.3106e-04,  ..., 1.5209e-02,
          9.4563e-01, 9.2798e-01],
         [2.7642e-02, 9.8849e-01, 5.3106e-04,  ..., 2.5475e-02,
          1.8124e-02, 2.4007e-02]],
        [[2.3417e-01, 9.5722e-03, 9.9454e-01,  ..., 9.8960e-01,
          1.5173e-03, 1.8357e-02],
         [4.3227e-01, 9.5722e-03, 1.8188e-03,  ..., 3.4661e-03,
          1.5173e-03, 1.8357e-02],
         [1.4412e-01, 9.5722e-03, 1.8188e-03,  ..., 3.4661e-03,
          1.5173e-03, 9.4493e-01],
         [1.8944e-01, 9.7128e-01, 1.8188e-03,  ..., 3.4661e-03,
          9.9545e-01, 1.8357e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4842, 0.0248, 0.0204,  ..., 0.9802, 0.9347, 0.0542],
         [0.0907, 0.0248, 0.0204,  ..., 0.0066, 0.0199, 0.0545],
         [0.1149, 0.0248, 0.0204,  ..., 0.0066, 0.0251, 0.0653],
         [0.3101, 0.9255, 0.9387,  ..., 0.0066, 0.0202, 0.8260]],
        [[0.7690, 0.0392, 0.0530,  ..., 0.0404, 0.0080, 0.0045],
         [0.0331, 0.0392, 0.0530,  ..., 0.0404, 0.0080, 0.0045],
         [0.1648, 0.0392, 0.0606,  ..., 0.0454, 0.9760, 0.9864],
         [0.0331, 0.8824, 0.8335,  ..., 0.8738, 0.0080, 0.0045]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:34:01,935 [Process: 0] Synchronize training processes
2024-08-19 13:34:01,935 [Process: 0] Evaluating...
2024-08-19 13:34:01,937 [Process: 0] EPOCH 119:
2024-08-19 13:34:01,939 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:02,973 [Process: 0] Synchronize training processes
2024-08-19 13:34:02,974 [Process: 0] Evaluating...
2024-08-19 13:34:02,975 [Process: 0] EPOCH 120:
2024-08-19 13:34:02,977 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7612e-02, 8.9207e-03, 9.9858e-01,  ..., 9.5873e-01,
          2.8939e-02, 3.0481e-02],
         [4.7612e-02, 4.9378e-03, 4.7413e-04,  ..., 1.1201e-02,
          2.8939e-02, 3.0481e-02],
         [8.5716e-01, 4.9378e-03, 4.7413e-04,  ..., 1.1201e-02,
          9.1318e-01, 9.0856e-01],
         [4.7612e-02, 9.8120e-01, 4.7413e-04,  ..., 1.8871e-02,
          2.8939e-02, 3.0481e-02]],
        [[1.0631e-01, 3.2501e-03, 9.7551e-01,  ..., 9.9553e-01,
          4.4762e-03, 1.8732e-02],
         [1.2595e-01, 3.2501e-03, 8.1646e-03,  ..., 1.4896e-03,
          4.4762e-03, 1.8732e-02],
         [5.3813e-01, 3.2501e-03, 8.1646e-03,  ..., 1.4896e-03,
          4.4762e-03, 9.4381e-01],
         [2.2961e-01, 9.9025e-01, 8.1646e-03,  ..., 1.4896e-03,
          9.8657e-01, 1.8732e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8505, 0.0209, 0.0154,  ..., 0.9697, 0.9615, 0.0686],
         [0.0342, 0.0209, 0.0154,  ..., 0.0101, 0.0115, 0.0686],
         [0.0342, 0.0209, 0.0154,  ..., 0.0101, 0.0115, 0.0919],
         [0.0810, 0.9372, 0.9539,  ..., 0.0101, 0.0156, 0.7708]],
        [[0.8045, 0.0252, 0.0662,  ..., 0.0464, 0.0104, 0.0116],
         [0.0310, 0.0252, 0.0666,  ..., 0.0464, 0.0104, 0.0116],
         [0.1336, 0.0252, 0.0777,  ..., 0.0464, 0.9689, 0.9651],
         [0.0310, 0.9245, 0.7895,  ..., 0.8607, 0.0104, 0.0116]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3991e-02, 6.3140e-02, 9.9525e-01,  ..., 9.9322e-01,
          3.6155e-02, 3.5989e-02],
         [4.3991e-02, 4.1477e-02, 1.5847e-03,  ..., 2.2500e-03,
          3.6155e-02, 3.5989e-02],
         [8.6380e-01, 4.1477e-02, 1.5847e-03,  ..., 2.2500e-03,
          8.9154e-01, 8.9203e-01],
         [4.8218e-02, 8.5391e-01, 1.5847e-03,  ..., 2.2755e-03,
          3.6155e-02, 3.5989e-02]],
        [[7.9011e-02, 3.3999e-03, 9.9267e-01,  ..., 9.9832e-01,
          1.4552e-01, 1.6462e-02],
         [8.1684e-02, 3.3999e-03, 2.4422e-03,  ..., 5.5866e-04,
          3.2411e-02, 1.6462e-02],
         [7.3234e-01, 3.3999e-03, 2.4422e-03,  ..., 5.5866e-04,
          3.2411e-02, 9.5061e-01],
         [1.0696e-01, 9.8980e-01, 2.4422e-03,  ..., 5.5866e-04,
          7.8966e-01, 1.6462e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8009, 0.0279, 0.0359,  ..., 0.9810, 0.9505, 0.0514],
         [0.0525, 0.0279, 0.0279,  ..., 0.0063, 0.0165, 0.0514],
         [0.0712, 0.0279, 0.0279,  ..., 0.0063, 0.0165, 0.0699],
         [0.0753, 0.9164, 0.9083,  ..., 0.0063, 0.0165, 0.8274]],
        [[0.4366, 0.0243, 0.0419,  ..., 0.0190, 0.0086, 0.0290],
         [0.0572, 0.0243, 0.0419,  ..., 0.0190, 0.0086, 0.0290],
         [0.4491, 0.0243, 0.0555,  ..., 0.0190, 0.9741, 0.9130],
         [0.0572, 0.9271, 0.8607,  ..., 0.9430, 0.0086, 0.0290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:34:04,014 [Process: 0] Synchronize training processes
2024-08-19 13:34:04,014 [Process: 0] Evaluating...
2024-08-19 13:34:04,016 [Process: 0] EPOCH 121:
2024-08-19 13:34:04,018 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:05,054 [Process: 0] Synchronize training processes
2024-08-19 13:34:05,054 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0375, 0.0217, 0.9957,  ..., 0.8780, 0.0245, 0.0250],
         [0.0375, 0.0217, 0.0014,  ..., 0.0339, 0.0245, 0.0250],
         [0.8872, 0.0217, 0.0014,  ..., 0.0339, 0.9265, 0.9249],
         [0.0377, 0.9350, 0.0014,  ..., 0.0543, 0.0245, 0.0250]],
        [[0.0553, 0.0094, 0.9821,  ..., 0.9491, 0.0071, 0.0290],
         [0.0553, 0.0094, 0.0060,  ..., 0.0162, 0.0071, 0.0290],
         [0.8257, 0.0094, 0.0060,  ..., 0.0162, 0.0071, 0.9129],
         [0.0636, 0.9719, 0.0060,  ..., 0.0185, 0.9787, 0.0290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9403, 0.0283, 0.0215,  ..., 0.9643, 0.8930, 0.0660],
         [0.0173, 0.0283, 0.0215,  ..., 0.0119, 0.0423, 0.0624],
         [0.0173, 0.0283, 0.0215,  ..., 0.0120, 0.0316, 0.0645],
         [0.0252, 0.9150, 0.9354,  ..., 0.0119, 0.0330, 0.8070]],
        [[0.3511, 0.0270, 0.0178,  ..., 0.0103, 0.0053, 0.0076],
         [0.0725, 0.0270, 0.0178,  ..., 0.0103, 0.0053, 0.0076],
         [0.5039, 0.0270, 0.0178,  ..., 0.0103, 0.9841, 0.9773],
         [0.0725, 0.9191, 0.9465,  ..., 0.9690, 0.0053, 0.0076]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7443e-02, 1.4736e-02, 9.7418e-01,  ..., 9.8888e-01,
          1.5025e-02, 3.7326e-02],
         [1.7443e-02, 1.4736e-02, 7.9025e-03,  ..., 3.7082e-03,
          1.5025e-02, 3.7326e-02],
         [9.4767e-01, 1.4736e-02, 7.9025e-03,  ..., 3.7082e-03,
          9.5492e-01, 8.8802e-01],
         [1.7443e-02, 9.5579e-01, 1.0020e-02,  ..., 3.7082e-03,
          1.5025e-02, 3.7326e-02]],
        [[6.5487e-02, 1.5474e-03, 9.9206e-01,  ..., 9.9743e-01,
          1.5636e-03, 3.0697e-02],
         [6.5487e-02, 1.5474e-03, 2.6451e-03,  ..., 8.5781e-04,
          1.5636e-03, 3.0697e-02],
         [7.5324e-01, 1.5474e-03, 2.6451e-03,  ..., 8.5781e-04,
          1.5636e-03, 9.0788e-01],
         [1.1579e-01, 9.9536e-01, 2.6451e-03,  ..., 8.5781e-04,
          9.9531e-01, 3.0726e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:34:06,036 [Process: 0] EPOCH 122:
2024-08-19 13:34:06,038 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:07,040 [Process: 0] Synchronize training processes
2024-08-19 13:34:07,041 [Process: 0] Evaluating...
2024-08-19 13:34:07,042 [Process: 0] EPOCH 123:
2024-08-19 13:34:07,044 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8202, 0.0152, 0.0172,  ..., 0.9138, 0.9755, 0.0465],
         [0.0500, 0.0152, 0.0172,  ..., 0.0266, 0.0082, 0.0465],
         [0.0577, 0.0152, 0.0172,  ..., 0.0331, 0.0082, 0.0531],
         [0.0721, 0.9543, 0.9483,  ..., 0.0266, 0.0082, 0.8538]],
        [[0.1452, 0.0140, 0.0206,  ..., 0.0126, 0.0076, 0.0085],
         [0.0685, 0.0140, 0.0206,  ..., 0.0126, 0.0076, 0.0085],
         [0.7118, 0.0140, 0.0206,  ..., 0.0126, 0.9773, 0.9744],
         [0.0744, 0.9580, 0.9383,  ..., 0.9622, 0.0076, 0.0085]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0423, 0.0312, 0.9062,  ..., 0.9959, 0.0135, 0.0273],
         [0.0423, 0.0275, 0.0306,  ..., 0.0014, 0.0135, 0.0273],
         [0.8689, 0.0275, 0.0326,  ..., 0.0014, 0.9596, 0.9182],
         [0.0464, 0.9139, 0.0306,  ..., 0.0014, 0.0135, 0.0273]],
        [[0.0233, 0.0182, 0.9866,  ..., 0.9778, 0.0089, 0.0353],
         [0.0233, 0.0182, 0.0045,  ..., 0.0074, 0.0076, 0.0353],
         [0.9302, 0.0182, 0.0045,  ..., 0.0074, 0.0076, 0.8933],
         [0.0233, 0.9455, 0.0045,  ..., 0.0074, 0.9760, 0.0361]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8525, 0.0338, 0.0231,  ..., 0.9848, 0.8822, 0.0404],
         [0.0370, 0.0309, 0.0231,  ..., 0.0051, 0.0334, 0.0404],
         [0.0370, 0.0309, 0.0231,  ..., 0.0051, 0.0503, 0.0404],
         [0.0735, 0.9045, 0.9306,  ..., 0.0051, 0.0342, 0.8787]],
        [[0.3504, 0.0173, 0.0158,  ..., 0.0151, 0.0087, 0.0124],
         [0.0717, 0.0173, 0.0158,  ..., 0.0151, 0.0087, 0.0124],
         [0.5061, 0.0173, 0.0158,  ..., 0.0151, 0.9738, 0.9627],
         [0.0717, 0.9480, 0.9526,  ..., 0.9548, 0.0087, 0.0124]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:34:08,082 [Process: 0] Synchronize training processes
2024-08-19 13:34:08,082 [Process: 0] Evaluating...
2024-08-19 13:34:08,084 [Process: 0] EPOCH 124:
2024-08-19 13:34:08,086 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1038, 0.0065, 0.9927,  ..., 0.9947, 0.0195, 0.0207],
         [0.0835, 0.0065, 0.0024,  ..., 0.0018, 0.0195, 0.0207],
         [0.6735, 0.0065, 0.0024,  ..., 0.0018, 0.9415, 0.9380],
         [0.1392, 0.9806, 0.0025,  ..., 0.0018, 0.0195, 0.0207]],
        [[0.0475, 0.0027, 0.9879,  ..., 0.9877, 0.0070, 0.0464],
         [0.0475, 0.0027, 0.0040,  ..., 0.0041, 0.0070, 0.0454],
         [0.8509, 0.0027, 0.0040,  ..., 0.0041, 0.0070, 0.8563],
         [0.0542, 0.9918, 0.0040,  ..., 0.0041, 0.9789, 0.0519]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9618, 0.0334, 0.0308,  ..., 0.9844, 0.9224, 0.0854],
         [0.0120, 0.0334, 0.0308,  ..., 0.0052, 0.0238, 0.0683],
         [0.0121, 0.0334, 0.0308,  ..., 0.0052, 0.0300, 0.0868],
         [0.0140, 0.8997, 0.9076,  ..., 0.0052, 0.0238, 0.7594]],
        [[0.3472, 0.0150, 0.0198,  ..., 0.0217, 0.0027, 0.0080],
         [0.0468, 0.0150, 0.0198,  ..., 0.0217, 0.0027, 0.0080],
         [0.5592, 0.0150, 0.0198,  ..., 0.0217, 0.9918, 0.9759],
         [0.0468, 0.9549, 0.9407,  ..., 0.9349, 0.0027, 0.0080]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0233, 0.0188, 0.9778,  ..., 0.9954, 0.0270, 0.0151],
         [0.0233, 0.0188, 0.0060,  ..., 0.0015, 0.0270, 0.0151],
         [0.9300, 0.0188, 0.0060,  ..., 0.0015, 0.9191, 0.9547],
         [0.0233, 0.9435, 0.0103,  ..., 0.0015, 0.0270, 0.0151]],
        [[0.0791, 0.0119, 0.9859,  ..., 0.0607, 0.0088, 0.0298],
         [0.0789, 0.0111, 0.0047,  ..., 0.0484, 0.0088, 0.0297],
         [0.7346, 0.0111, 0.0047,  ..., 0.0484, 0.0088, 0.9092],
         [0.1073, 0.9660, 0.0047,  ..., 0.8425, 0.9736, 0.0314]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7838, 0.0322, 0.0159,  ..., 0.9855, 0.9319, 0.0157],
         [0.0508, 0.0322, 0.0159,  ..., 0.0047, 0.0220, 0.0157],
         [0.0896, 0.0322, 0.0159,  ..., 0.0050, 0.0241, 0.0157],
         [0.0758, 0.9034, 0.9523,  ..., 0.0047, 0.0220, 0.9528]],
        [[0.4547, 0.0360, 0.0225,  ..., 0.0171, 0.0045, 0.0093],
         [0.0512, 0.0360, 0.0225,  ..., 0.0171, 0.0045, 0.0093],
         [0.4430, 0.0360, 0.0225,  ..., 0.0171, 0.9866, 0.9721],
         [0.0512, 0.8919, 0.9324,  ..., 0.9486, 0.0045, 0.0093]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:34:09,124 [Process: 0] Synchronize training processes
2024-08-19 13:34:09,124 [Process: 0] Evaluating...
2024-08-19 13:34:09,126 [Process: 0] EPOCH 125:
2024-08-19 13:34:09,127 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:10,164 [Process: 0] Synchronize training processes
2024-08-19 13:34:10,165 [Process: 0] Evaluating...
2024-08-19 13:34:10,166 [Process: 0] EPOCH 126:
2024-08-19 13:34:10,168 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0717, 0.0192, 0.9958,  ..., 0.9800, 0.0237, 0.0211],
         [0.0604, 0.0192, 0.0014,  ..., 0.0063, 0.0216, 0.0211],
         [0.7813, 0.0192, 0.0014,  ..., 0.0063, 0.9330, 0.9368],
         [0.0866, 0.9424, 0.0014,  ..., 0.0075, 0.0216, 0.0211]],
        [[0.0761, 0.0027, 0.9949,  ..., 0.0537, 0.0033, 0.0179],
         [0.1089, 0.0027, 0.0017,  ..., 0.0295, 0.0033, 0.0179],
         [0.7432, 0.0027, 0.0017,  ..., 0.0295, 0.0033, 0.9462],
         [0.0717, 0.9918, 0.0017,  ..., 0.8874, 0.9902, 0.0179]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9767, 0.0459, 0.0289,  ..., 0.9892, 0.9807, 0.0564],
         [0.0078, 0.0459, 0.0289,  ..., 0.0036, 0.0064, 0.0564],
         [0.0078, 0.0569, 0.0289,  ..., 0.0036, 0.0064, 0.0564],
         [0.0078, 0.8513, 0.9134,  ..., 0.0036, 0.0064, 0.8307]],
        [[0.6500, 0.0139, 0.0144,  ..., 0.0264, 0.0044, 0.0118],
         [0.0577, 0.0139, 0.0144,  ..., 0.0264, 0.0044, 0.0118],
         [0.2346, 0.0139, 0.0144,  ..., 0.0264, 0.9868, 0.9647],
         [0.0577, 0.9584, 0.9568,  ..., 0.9208, 0.0044, 0.0118]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0242, 0.0281, 0.9950,  ..., 0.9704, 0.0125, 0.0291],
         [0.0242, 0.0281, 0.0017,  ..., 0.0079, 0.0125, 0.0267],
         [0.9273, 0.0281, 0.0017,  ..., 0.0079, 0.9626, 0.9173],
         [0.0242, 0.9157, 0.0017,  ..., 0.0138, 0.0125, 0.0268]],
        [[0.0444, 0.0011, 0.9659,  ..., 0.9721, 0.0015, 0.0343],
         [0.0479, 0.0011, 0.0125,  ..., 0.0087, 0.0015, 0.0334],
         [0.8633, 0.0011, 0.0108,  ..., 0.0087, 0.0015, 0.8986],
         [0.0444, 0.9966, 0.0108,  ..., 0.0105, 0.9955, 0.0337]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9948, 0.0308, 0.0323,  ..., 0.9897, 0.9915, 0.0208],
         [0.0017, 0.0308, 0.0323,  ..., 0.0034, 0.0028, 0.0208],
         [0.0017, 0.0308, 0.0323,  ..., 0.0034, 0.0028, 0.0208],
         [0.0017, 0.9077, 0.9030,  ..., 0.0034, 0.0028, 0.9375]],
        [[0.4760, 0.0217, 0.0225,  ..., 0.0309, 0.0054, 0.0072],
         [0.0666, 0.0217, 0.0225,  ..., 0.0309, 0.0054, 0.0072],
         [0.3908, 0.0217, 0.0225,  ..., 0.0309, 0.9837, 0.9784],
         [0.0666, 0.9349, 0.9325,  ..., 0.9073, 0.0054, 0.0072]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:34:11,206 [Process: 0] Synchronize training processes
2024-08-19 13:34:11,207 [Process: 0] Evaluating...
2024-08-19 13:34:11,209 [Process: 0] EPOCH 127:
2024-08-19 13:34:11,211 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:12,249 [Process: 0] Synchronize training processes
2024-08-19 13:34:12,249 [Process: 0] Evaluating...
2024-08-19 13:34:12,251 [Process: 0] EPOCH 128:
2024-08-19 13:34:12,253 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0236, 0.0096, 0.9961,  ..., 0.9944, 0.0298, 0.0134],
         [0.0236, 0.0096, 0.0012,  ..., 0.0019, 0.0292, 0.0134],
         [0.9293, 0.0096, 0.0012,  ..., 0.0019, 0.9095, 0.9599],
         [0.0236, 0.9712, 0.0015,  ..., 0.0019, 0.0316, 0.0134]],
        [[0.0717, 0.0021, 0.9807,  ..., 0.9741, 0.1594, 0.0096],
         [0.0632, 0.0021, 0.0064,  ..., 0.0086, 0.0670, 0.0096],
         [0.7589, 0.0021, 0.0064,  ..., 0.0086, 0.0670, 0.9713],
         [0.1062, 0.9937, 0.0064,  ..., 0.0086, 0.7066, 0.0096]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9841, 0.0341, 0.0170,  ..., 0.9072, 0.9912, 0.0169],
         [0.0053, 0.0341, 0.0170,  ..., 0.0250, 0.0029, 0.0169],
         [0.0053, 0.0388, 0.0170,  ..., 0.0429, 0.0029, 0.0169],
         [0.0053, 0.8929, 0.9491,  ..., 0.0250, 0.0029, 0.9494]],
        [[0.6693, 0.0113, 0.0233,  ..., 0.0252, 0.0038, 0.0041],
         [0.0290, 0.0113, 0.0233,  ..., 0.0252, 0.0038, 0.0041],
         [0.2727, 0.0113, 0.0233,  ..., 0.0252, 0.9885, 0.9876],
         [0.0290, 0.9662, 0.9300,  ..., 0.9243, 0.0038, 0.0041]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9443e-02, 1.5209e-02, 9.5060e-01,  ..., 8.7768e-01,
          1.4027e-02, 5.3813e-02],
         [1.9443e-02, 1.5209e-02, 1.4176e-02,  ..., 3.0774e-02,
          1.4027e-02, 4.6888e-02],
         [9.4167e-01, 1.5209e-02, 1.4176e-02,  ..., 3.0774e-02,
          9.5792e-01, 8.3855e-01],
         [1.9443e-02, 9.5437e-01, 2.1047e-02,  ..., 6.0769e-02,
          1.4027e-02, 6.0748e-02]],
        [[2.8460e-02, 6.2637e-03, 9.7126e-01,  ..., 9.9801e-01,
          2.4638e-04, 1.6345e-02],
         [2.8460e-02, 6.2637e-03, 9.5796e-03,  ..., 6.6349e-04,
          2.4638e-04, 1.6345e-02],
         [9.1448e-01, 6.2637e-03, 9.5796e-03,  ..., 6.6349e-04,
          2.4638e-04, 9.5096e-01],
         [2.8598e-02, 9.8121e-01, 9.5796e-03,  ..., 6.6349e-04,
          9.9926e-01, 1.6345e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
2024-08-19 13:34:13,288 [Process: 0] Synchronize training processes
2024-08-19 13:34:13,289 [Process: 0] Evaluating...
2024-08-19 13:34:13,290 [Process: 0] EPOCH 129:
2024-08-19 13:34:13,292 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:14,329 [Process: 0] Synchronize training processes
2024-08-19 13:34:14,329 [Process: 0] Evaluating...
2024-08-19 13:34:14,331 [Process: 0] EPOCH 130:
2024-08-19 13:34:14,333 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9942, 0.0099, 0.0363,  ..., 0.9951, 0.9691, 0.0224],
         [0.0019, 0.0099, 0.0363,  ..., 0.0016, 0.0102, 0.0224],
         [0.0019, 0.0099, 0.0373,  ..., 0.0016, 0.0106, 0.0224],
         [0.0019, 0.9704, 0.8902,  ..., 0.0016, 0.0102, 0.9328]],
        [[0.1191, 0.0258, 0.0172,  ..., 0.0156, 0.0037, 0.0021],
         [0.0375, 0.0292, 0.0172,  ..., 0.0156, 0.0037, 0.0021],
         [0.8060, 0.0258, 0.0172,  ..., 0.0156, 0.9890, 0.9936],
         [0.0375, 0.9193, 0.9483,  ..., 0.9533, 0.0037, 0.0021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0234, 0.0337, 0.9733,  ..., 0.9585, 0.0271, 0.0126],
         [0.0234, 0.0213, 0.0078,  ..., 0.0097, 0.0271, 0.0126],
         [0.9299, 0.0213, 0.0078,  ..., 0.0097, 0.9187, 0.9622],
         [0.0234, 0.9238, 0.0110,  ..., 0.0221, 0.0271, 0.0126]],
        [[0.0300, 0.0038, 0.9932,  ..., 0.9764, 0.0015, 0.0236],
         [0.0300, 0.0038, 0.0023,  ..., 0.0079, 0.0015, 0.0236],
         [0.9099, 0.0038, 0.0023,  ..., 0.0079, 0.0015, 0.9291],
         [0.0300, 0.9886, 0.0023,  ..., 0.0079, 0.9956, 0.0236]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9848, 0.0243, 0.0144,  ..., 0.9865, 0.9779, 0.0281],
         [0.0051, 0.0243, 0.0144,  ..., 0.0045, 0.0074, 0.0281],
         [0.0051, 0.0243, 0.0144,  ..., 0.0045, 0.0074, 0.0281],
         [0.0051, 0.9272, 0.9568,  ..., 0.0045, 0.0074, 0.9157]],
        [[0.5628, 0.0057, 0.0109,  ..., 0.0359, 0.0034, 0.0072],
         [0.0497, 0.0057, 0.0109,  ..., 0.0359, 0.0034, 0.0072],
         [0.3378, 0.0057, 0.0109,  ..., 0.0363, 0.9897, 0.9784],
         [0.0497, 0.9829, 0.9673,  ..., 0.8918, 0.0034, 0.0072]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1600e-02, 6.1800e-03, 9.9858e-01,  ..., 9.8593e-01,
          1.4222e-02, 2.3464e-02],
         [2.1600e-02, 6.1800e-03, 4.7250e-04,  ..., 4.0067e-03,
          1.4222e-02, 2.3464e-02],
         [9.3520e-01, 6.1800e-03, 4.7250e-04,  ..., 4.0067e-03,
          9.5733e-01, 9.2961e-01],
         [2.1600e-02, 9.8146e-01, 4.7250e-04,  ..., 6.0559e-03,
          1.4222e-02, 2.3464e-02]],
        [[4.3668e-02, 1.3614e-03, 9.8943e-01,  ..., 9.9511e-01,
          2.2060e-03, 4.2588e-02],
         [4.3668e-02, 1.3614e-03, 3.5247e-03,  ..., 1.6315e-03,
          2.2060e-03, 3.8898e-02],
         [8.6110e-01, 1.3614e-03, 3.5247e-03,  ..., 1.6315e-03,
          2.2060e-03, 8.7305e-01],
         [5.1565e-02, 9.9592e-01, 3.5247e-03,  ..., 1.6315e-03,
          9.9338e-01, 4.5460e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:15,369 [Process: 0] Synchronize training processes
2024-08-19 13:34:15,369 [Process: 0] Evaluating...
2024-08-19 13:34:15,371 [Process: 0] EPOCH 131:
2024-08-19 13:34:15,373 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:16,402 [Process: 0] Synchronize training processes
2024-08-19 13:34:16,403 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8848, 0.0478, 0.0513,  ..., 0.9880, 0.9291, 0.0361],
         [0.0263, 0.0478, 0.0632,  ..., 0.0040, 0.0253, 0.0361],
         [0.0263, 0.0478, 0.0513,  ..., 0.0040, 0.0225, 0.0403],
         [0.0627, 0.8565, 0.8341,  ..., 0.0040, 0.0231, 0.8875]],
        [[0.6035, 0.0173, 0.0208,  ..., 0.0361, 0.0038, 0.0097],
         [0.0442, 0.0173, 0.0208,  ..., 0.0361, 0.0038, 0.0097],
         [0.3081, 0.0173, 0.0208,  ..., 0.0428, 0.9887, 0.9710],
         [0.0442, 0.9480, 0.9375,  ..., 0.8851, 0.0038, 0.0097]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0885, 0.0114, 0.9030,  ..., 0.9930, 0.0198, 0.0164],
         [0.0823, 0.0096, 0.0236,  ..., 0.0023, 0.0198, 0.0164],
         [0.6848, 0.0096, 0.0236,  ..., 0.0023, 0.9406, 0.9507],
         [0.1444, 0.9695, 0.0499,  ..., 0.0023, 0.0198, 0.0164]],
        [[0.0175, 0.0192, 0.9800,  ..., 0.9962, 0.0026, 0.0094],
         [0.0175, 0.0195, 0.0066,  ..., 0.0013, 0.0026, 0.0094],
         [0.9476, 0.0192, 0.0066,  ..., 0.0013, 0.0026, 0.9717],
         [0.0175, 0.9422, 0.0067,  ..., 0.0013, 0.9922, 0.0094]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:34:17,391 [Process: 0] EPOCH 132:
2024-08-19 13:34:17,394 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:18,392 [Process: 0] Synchronize training processes
2024-08-19 13:34:18,392 [Process: 0] Evaluating...
2024-08-19 13:34:18,394 [Process: 0] EPOCH 133:
2024-08-19 13:34:18,396 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2120, 0.0042, 0.0167,  ..., 0.9755, 0.9765, 0.0543],
         [0.0574, 0.0042, 0.0167,  ..., 0.0082, 0.0078, 0.0581],
         [0.0578, 0.0042, 0.0167,  ..., 0.0082, 0.0078, 0.0543],
         [0.6728, 0.9874, 0.9500,  ..., 0.0082, 0.0078, 0.8334]],
        [[0.7452, 0.0187, 0.0086,  ..., 0.0368, 0.0037, 0.0095],
         [0.0301, 0.0187, 0.0086,  ..., 0.0368, 0.0037, 0.0095],
         [0.1946, 0.0187, 0.0086,  ..., 0.0396, 0.9888, 0.9715],
         [0.0301, 0.9440, 0.9742,  ..., 0.8868, 0.0037, 0.0095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1921e-02, 2.5802e-03, 9.9404e-01,  ..., 9.8701e-01,
          1.4985e-02, 1.1675e-02],
         [4.1921e-02, 2.5802e-03, 1.9869e-03,  ..., 4.3289e-03,
          1.4985e-02, 1.1675e-02],
         [8.6916e-01, 2.5802e-03, 1.9869e-03,  ..., 4.3289e-03,
          9.5504e-01, 9.6497e-01],
         [4.6997e-02, 9.9226e-01, 1.9869e-03,  ..., 4.3289e-03,
          1.4985e-02, 1.1675e-02]],
        [[3.8050e-02, 1.9502e-03, 9.9784e-01,  ..., 9.9686e-01,
          1.0152e-03, 2.1440e-02],
         [3.7312e-02, 1.9502e-03, 7.1894e-04,  ..., 1.0482e-03,
          1.0152e-03, 2.1440e-02],
         [8.7953e-01, 1.9502e-03, 7.1894e-04,  ..., 1.0482e-03,
          1.0152e-03, 9.3568e-01],
         [4.5110e-02, 9.9415e-01, 7.1894e-04,  ..., 1.0482e-03,
          9.9695e-01, 2.1440e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4205, 0.0190, 0.0124,  ..., 0.9901, 0.9471, 0.0978],
         [0.0552, 0.0190, 0.0124,  ..., 0.0033, 0.0169, 0.0729],
         [0.0552, 0.0190, 0.0124,  ..., 0.0033, 0.0192, 0.0992],
         [0.4691, 0.9431, 0.9628,  ..., 0.0033, 0.0169, 0.7301]],
        [[0.4830, 0.0221, 0.0384,  ..., 0.0277, 0.0016, 0.0034],
         [0.0552, 0.0221, 0.0329,  ..., 0.0277, 0.0016, 0.0034],
         [0.4066, 0.0221, 0.0353,  ..., 0.0277, 0.9953, 0.9897],
         [0.0552, 0.9336, 0.8934,  ..., 0.9170, 0.0016, 0.0034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0430, 0.0272, 0.9941,  ..., 0.9950, 0.0229, 0.0130],
         [0.0430, 0.0272, 0.0020,  ..., 0.0017, 0.0229, 0.0130],
         [0.8583, 0.0272, 0.0020,  ..., 0.0017, 0.9312, 0.9609],
         [0.0558, 0.9183, 0.0020,  ..., 0.0017, 0.0229, 0.0130]],
        [[0.0140, 0.0068, 0.9830,  ..., 0.9930, 0.0081, 0.0115],
         [0.0140, 0.0068, 0.0057,  ..., 0.0023, 0.0060, 0.0115],
         [0.9579, 0.0068, 0.0057,  ..., 0.0023, 0.0060, 0.9654],
         [0.0140, 0.9795, 0.0057,  ..., 0.0023, 0.9799, 0.0115]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:19,432 [Process: 0] Synchronize training processes
2024-08-19 13:34:19,432 [Process: 0] Evaluating...
2024-08-19 13:34:19,434 [Process: 0] EPOCH 134:
2024-08-19 13:34:19,436 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:20,470 [Process: 0] Synchronize training processes
2024-08-19 13:34:20,470 [Process: 0] Evaluating...
2024-08-19 13:34:20,472 [Process: 0] EPOCH 135:
2024-08-19 13:34:20,474 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9804, 0.0198, 0.0474,  ..., 0.9898, 0.9750, 0.0392],
         [0.0065, 0.0198, 0.0474,  ..., 0.0034, 0.0079, 0.0392],
         [0.0065, 0.0198, 0.0580,  ..., 0.0034, 0.0091, 0.0392],
         [0.0065, 0.9406, 0.8473,  ..., 0.0034, 0.0079, 0.8825]],
        [[0.4907, 0.0180, 0.0134,  ..., 0.0207, 0.0039, 0.0036],
         [0.0722, 0.0180, 0.0134,  ..., 0.0207, 0.0039, 0.0036],
         [0.3628, 0.0180, 0.0134,  ..., 0.0207, 0.9883, 0.9893],
         [0.0743, 0.9460, 0.9597,  ..., 0.9380, 0.0039, 0.0036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0369, 0.0036, 0.9708,  ..., 0.9807, 0.0112, 0.0130],
         [0.0369, 0.0036, 0.0100,  ..., 0.0064, 0.0112, 0.0130],
         [0.8797, 0.0036, 0.0096,  ..., 0.0064, 0.9663, 0.9609],
         [0.0466, 0.9891, 0.0096,  ..., 0.0064, 0.0112, 0.0130]],
        [[0.0338, 0.0080, 0.9861,  ..., 0.9919, 0.0190, 0.0226],
         [0.0338, 0.0080, 0.0046,  ..., 0.0027, 0.0126, 0.0226],
         [0.8947, 0.0080, 0.0046,  ..., 0.0027, 0.0126, 0.9302],
         [0.0376, 0.9761, 0.0046,  ..., 0.0027, 0.9559, 0.0245]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9883, 0.0297, 0.0267,  ..., 0.9509, 0.9843, 0.0329],
         [0.0039, 0.0280, 0.0267,  ..., 0.0162, 0.0052, 0.0329],
         [0.0039, 0.0280, 0.0267,  ..., 0.0167, 0.0052, 0.0435],
         [0.0039, 0.9143, 0.9199,  ..., 0.0162, 0.0052, 0.8906]],
        [[0.1450, 0.0171, 0.0440,  ..., 0.0540, 0.0041, 0.0042],
         [0.0553, 0.0171, 0.0365,  ..., 0.0540, 0.0041, 0.0042],
         [0.7420, 0.0171, 0.0365,  ..., 0.0738, 0.9878, 0.9873],
         [0.0577, 0.9486, 0.8830,  ..., 0.8182, 0.0041, 0.0042]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9557e-02, 2.1364e-02, 9.0841e-01,  ..., 9.9678e-01,
          1.8288e-02, 1.4726e-02],
         [1.9557e-02, 2.1364e-02, 2.5236e-02,  ..., 1.0744e-03,
          1.8288e-02, 1.4726e-02],
         [9.4133e-01, 2.1364e-02, 2.5236e-02,  ..., 1.0744e-03,
          9.4514e-01, 9.5582e-01],
         [1.9557e-02, 9.3591e-01, 4.1117e-02,  ..., 1.0744e-03,
          1.8288e-02, 1.4726e-02]],
        [[2.9052e-02, 9.6799e-04, 9.5968e-01,  ..., 9.8905e-01,
          2.1049e-02, 2.0140e-02],
         [2.9052e-02, 9.6799e-04, 1.3440e-02,  ..., 3.6492e-03,
          1.1415e-02, 2.0140e-02],
         [9.0984e-01, 9.6799e-04, 1.3440e-02,  ..., 3.6492e-03,
          1.1415e-02, 9.3958e-01],
         [3.2057e-02, 9.9710e-01, 1.3440e-02,  ..., 3.6492e-03,
          9.5612e-01, 2.0140e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:21,512 [Process: 0] Synchronize training processes
2024-08-19 13:34:21,512 [Process: 0] Evaluating...
2024-08-19 13:34:21,514 [Process: 0] EPOCH 136:
2024-08-19 13:34:21,516 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:22,555 [Process: 0] Synchronize training processes
2024-08-19 13:34:22,556 [Process: 0] Evaluating...
2024-08-19 13:34:22,557 [Process: 0] EPOCH 137:
2024-08-19 13:34:22,559 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9813, 0.0435, 0.0201,  ..., 0.9617, 0.9789, 0.0222],
         [0.0062, 0.0435, 0.0201,  ..., 0.0123, 0.0070, 0.0222],
         [0.0062, 0.0476, 0.0201,  ..., 0.0138, 0.0070, 0.0222],
         [0.0062, 0.8653, 0.9396,  ..., 0.0123, 0.0070, 0.9335]],
        [[0.6663, 0.0280, 0.0340,  ..., 0.0145, 0.0070, 0.0025],
         [0.0514, 0.0280, 0.0340,  ..., 0.0145, 0.0070, 0.0025],
         [0.2310, 0.0280, 0.0340,  ..., 0.0145, 0.9791, 0.9924],
         [0.0514, 0.9159, 0.8981,  ..., 0.9565, 0.0070, 0.0025]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0457, 0.0039, 0.9969,  ..., 0.9865, 0.0174, 0.0228],
         [0.0455, 0.0039, 0.0010,  ..., 0.0045, 0.0174, 0.0228],
         [0.8550, 0.0039, 0.0010,  ..., 0.0045, 0.9479, 0.9315],
         [0.0538, 0.9882, 0.0010,  ..., 0.0045, 0.0174, 0.0228]],
        [[0.0554, 0.0058, 0.8850,  ..., 0.9767, 0.0033, 0.0182],
         [0.0554, 0.0058, 0.0362,  ..., 0.0078, 0.0033, 0.0182],
         [0.8127, 0.0058, 0.0386,  ..., 0.0078, 0.0033, 0.9453],
         [0.0764, 0.9827, 0.0402,  ..., 0.0078, 0.9902, 0.0182]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9866, 0.0156, 0.0197,  ..., 0.9593, 0.9946, 0.0184],
         [0.0045, 0.0156, 0.0197,  ..., 0.0138, 0.0018, 0.0184],
         [0.0045, 0.0156, 0.0197,  ..., 0.0134, 0.0018, 0.0184],
         [0.0045, 0.9532, 0.9410,  ..., 0.0134, 0.0018, 0.9449]],
        [[0.5713, 0.0237, 0.0167,  ..., 0.0245, 0.0040, 0.0031],
         [0.0469, 0.0237, 0.0167,  ..., 0.0245, 0.0040, 0.0031],
         [0.3349, 0.0237, 0.0167,  ..., 0.0245, 0.9879, 0.9907],
         [0.0469, 0.9289, 0.9500,  ..., 0.9265, 0.0040, 0.0031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1509e-02, 5.7587e-03, 9.8918e-01,  ..., 9.6283e-01,
          1.6585e-02, 6.7499e-03],
         [2.1509e-02, 5.7587e-03, 3.4099e-03,  ..., 1.0880e-02,
          1.6585e-02, 6.7499e-03],
         [9.3547e-01, 5.7587e-03, 3.4099e-03,  ..., 1.0880e-02,
          9.5025e-01, 9.7975e-01],
         [2.1509e-02, 9.8272e-01, 4.0008e-03,  ..., 1.5412e-02,
          1.6585e-02, 6.7499e-03]],
        [[6.1895e-02, 3.5639e-04, 9.7944e-01,  ..., 9.6174e-01,
          1.6488e-03, 1.3880e-02],
         [6.4169e-02, 3.5639e-04, 6.8532e-03,  ..., 1.1837e-02,
          1.6488e-03, 1.3880e-02],
         [7.7656e-01, 3.5639e-04, 6.8532e-03,  ..., 1.1837e-02,
          1.6488e-03, 9.5836e-01],
         [9.7379e-02, 9.9893e-01, 6.8532e-03,  ..., 1.4588e-02,
          9.9505e-01, 1.3880e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:23,596 [Process: 0] Synchronize training processes
2024-08-19 13:34:23,597 [Process: 0] Evaluating...
2024-08-19 13:34:23,599 [Process: 0] EPOCH 138:
2024-08-19 13:34:23,600 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:24,640 [Process: 0] Synchronize training processes
2024-08-19 13:34:24,640 [Process: 0] Evaluating...
2024-08-19 13:34:24,642 [Process: 0] EPOCH 139:
2024-08-19 13:34:24,644 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9842, 0.0069, 0.0207,  ..., 0.9858, 0.9741, 0.0312],
         [0.0051, 0.0069, 0.0207,  ..., 0.0047, 0.0086, 0.0312],
         [0.0056, 0.0069, 0.0207,  ..., 0.0047, 0.0086, 0.0312],
         [0.0051, 0.9794, 0.9379,  ..., 0.0047, 0.0086, 0.9063]],
        [[0.6557, 0.0267, 0.0200,  ..., 0.0278, 0.0064, 0.0037],
         [0.0514, 0.0267, 0.0200,  ..., 0.0278, 0.0064, 0.0037],
         [0.2415, 0.0312, 0.0206,  ..., 0.0278, 0.9808, 0.9890],
         [0.0514, 0.9154, 0.9394,  ..., 0.9166, 0.0064, 0.0037]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0280, 0.0014, 0.9947,  ..., 0.9813, 0.0215, 0.0114],
         [0.0280, 0.0014, 0.0018,  ..., 0.0062, 0.0215, 0.0114],
         [0.9150, 0.0014, 0.0018,  ..., 0.0062, 0.9354, 0.9658],
         [0.0290, 0.9959, 0.0018,  ..., 0.0062, 0.0215, 0.0114]],
        [[0.0276, 0.0015, 0.9964,  ..., 0.9968, 0.0048, 0.0123],
         [0.0266, 0.0015, 0.0012,  ..., 0.0011, 0.0048, 0.0123],
         [0.9191, 0.0015, 0.0012,  ..., 0.0011, 0.0048, 0.9632],
         [0.0267, 0.9956, 0.0012,  ..., 0.0011, 0.9857, 0.0123]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9937, 0.0086, 0.0069,  ..., 0.9924, 0.9855, 0.0362],
         [0.0021, 0.0086, 0.0069,  ..., 0.0025, 0.0048, 0.0362],
         [0.0021, 0.0086, 0.0069,  ..., 0.0025, 0.0048, 0.0379],
         [0.0021, 0.9741, 0.9794,  ..., 0.0025, 0.0048, 0.8897]],
        [[0.8726, 0.0256, 0.0196,  ..., 0.0242, 0.0120, 0.0029],
         [0.0227, 0.0256, 0.0196,  ..., 0.0242, 0.0120, 0.0029],
         [0.0821, 0.0256, 0.0196,  ..., 0.0245, 0.9641, 0.9913],
         [0.0227, 0.9231, 0.9411,  ..., 0.9271, 0.0120, 0.0029]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8898e-02, 7.9450e-04, 9.9002e-01,  ..., 9.9345e-01,
          1.7862e-02, 7.9667e-03],
         [3.8898e-02, 7.9450e-04, 2.9657e-03,  ..., 2.1821e-03,
          1.7862e-02, 7.9667e-03],
         [8.7335e-01, 7.9450e-04, 2.9657e-03,  ..., 2.1821e-03,
          9.4641e-01, 9.7610e-01],
         [4.8859e-02, 9.9762e-01, 4.0534e-03,  ..., 2.1821e-03,
          1.7862e-02, 7.9667e-03]],
        [[1.9893e-02, 3.9615e-03, 9.5967e-01,  ..., 9.7976e-01,
          7.8765e-03, 1.8833e-02],
         [1.9893e-02, 3.9615e-03, 1.3444e-02,  ..., 5.9269e-03,
          7.8765e-03, 1.8833e-02],
         [9.4032e-01, 3.9615e-03, 1.3444e-02,  ..., 5.9269e-03,
          7.8765e-03, 9.4350e-01],
         [1.9893e-02, 9.8812e-01, 1.3444e-02,  ..., 8.3872e-03,
          9.7637e-01, 1.8833e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:25,682 [Process: 0] Synchronize training processes
2024-08-19 13:34:25,683 [Process: 0] Evaluating...
2024-08-19 13:34:25,685 [Process: 0] EPOCH 140:
2024-08-19 13:34:25,687 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:26,727 [Process: 0] Synchronize training processes
2024-08-19 13:34:26,728 [Process: 0] Evaluating...
2024-08-19 13:34:26,730 [Process: 0] EPOCH 141:
2024-08-19 13:34:26,731 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9187, 0.0187, 0.0419,  ..., 0.9918, 0.9921, 0.0209],
         [0.0224, 0.0187, 0.0568,  ..., 0.0031, 0.0026, 0.0209],
         [0.0293, 0.0187, 0.0419,  ..., 0.0026, 0.0026, 0.0209],
         [0.0295, 0.9438, 0.8594,  ..., 0.0026, 0.0026, 0.9372]],
        [[0.2868, 0.0099, 0.0143,  ..., 0.0694, 0.0033, 0.0061],
         [0.0677, 0.0099, 0.0143,  ..., 0.0688, 0.0033, 0.0061],
         [0.5727, 0.0099, 0.0145,  ..., 0.1147, 0.9901, 0.9816],
         [0.0728, 0.9702, 0.9568,  ..., 0.7471, 0.0033, 0.0061]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0224, 0.0067, 0.9943,  ..., 0.9743, 0.0112, 0.0066],
         [0.0210, 0.0067, 0.0019,  ..., 0.0059, 0.0112, 0.0066],
         [0.9356, 0.0067, 0.0019,  ..., 0.0059, 0.9664, 0.9801],
         [0.0210, 0.9800, 0.0019,  ..., 0.0140, 0.0112, 0.0066]],
        [[0.0230, 0.0045, 0.9947,  ..., 0.4520, 0.0023, 0.0256],
         [0.0202, 0.0045, 0.0018,  ..., 0.0555, 0.0023, 0.0241],
         [0.9366, 0.0045, 0.0018,  ..., 0.0555, 0.0023, 0.9261],
         [0.0202, 0.9864, 0.0018,  ..., 0.4371, 0.9931, 0.0241]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9866, 0.0192, 0.0194,  ..., 0.9913, 0.8905, 0.0115],
         [0.0045, 0.0192, 0.0194,  ..., 0.0029, 0.0276, 0.0115],
         [0.0045, 0.0192, 0.0194,  ..., 0.0029, 0.0276, 0.0115],
         [0.0045, 0.9424, 0.9417,  ..., 0.0029, 0.0544, 0.9656]],
        [[0.2560, 0.0163, 0.0106,  ..., 0.0109, 0.0029, 0.0149],
         [0.0631, 0.0163, 0.0106,  ..., 0.0109, 0.0029, 0.0137],
         [0.6160, 0.0163, 0.0106,  ..., 0.0109, 0.9913, 0.9576],
         [0.0650, 0.9512, 0.9682,  ..., 0.9672, 0.0029, 0.0137]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0135, 0.0039, 0.9930,  ..., 0.9941, 0.0121, 0.0159],
         [0.0135, 0.0039, 0.0023,  ..., 0.0016, 0.0117, 0.0155],
         [0.9595, 0.0039, 0.0023,  ..., 0.0016, 0.9644, 0.9531],
         [0.0135, 0.9883, 0.0023,  ..., 0.0026, 0.0117, 0.0155]],
        [[0.7887, 0.0103, 0.9935,  ..., 0.0023, 0.0011, 0.0253],
         [0.0546, 0.0103, 0.0022,  ..., 0.0023, 0.0011, 0.0234],
         [0.0546, 0.0103, 0.0022,  ..., 0.0023, 0.0011, 0.9278],
         [0.1020, 0.9692, 0.0022,  ..., 0.9932, 0.9967, 0.0234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:34:27,771 [Process: 0] Synchronize training processes
2024-08-19 13:34:27,771 [Process: 0] Evaluating...
2024-08-19 13:34:28,753 [Process: 0] EPOCH 142:
2024-08-19 13:34:28,755 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9017, 0.0103, 0.0202,  ..., 0.9917, 0.1485, 0.0087],
         [0.0276, 0.0103, 0.0202,  ..., 0.0028, 0.0926, 0.0087],
         [0.0430, 0.0103, 0.0202,  ..., 0.0028, 0.1761, 0.0087],
         [0.0276, 0.9692, 0.9393,  ..., 0.0028, 0.5828, 0.9739]],
        [[0.8068, 0.0307, 0.0420,  ..., 0.0162, 0.0015, 0.0103],
         [0.0330, 0.0307, 0.0420,  ..., 0.0162, 0.0015, 0.0103],
         [0.1273, 0.0307, 0.0420,  ..., 0.0162, 0.9955, 0.9690],
         [0.0330, 0.9078, 0.8739,  ..., 0.9513, 0.0015, 0.0103]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4773, 0.0100, 0.9952,  ..., 0.9909, 0.0213, 0.0187],
         [0.0936, 0.0100, 0.0016,  ..., 0.0030, 0.0213, 0.0187],
         [0.2895, 0.0100, 0.0016,  ..., 0.0030, 0.9362, 0.9438],
         [0.1396, 0.9701, 0.0016,  ..., 0.0030, 0.0213, 0.0187]],
        [[0.9774, 0.0711, 0.9890,  ..., 0.9858, 0.0020, 0.0316],
         [0.0072, 0.0711, 0.0037,  ..., 0.0037, 0.0020, 0.0316],
         [0.0072, 0.2033, 0.0037,  ..., 0.0037, 0.0020, 0.8987],
         [0.0083, 0.6544, 0.0037,  ..., 0.0068, 0.9940, 0.0382]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:29,759 [Process: 0] Synchronize training processes
2024-08-19 13:34:29,759 [Process: 0] Evaluating...
2024-08-19 13:34:29,761 [Process: 0] EPOCH 143:
2024-08-19 13:34:29,763 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:30,803 [Process: 0] Synchronize training processes
2024-08-19 13:34:30,803 [Process: 0] Evaluating...
2024-08-19 13:34:30,805 [Process: 0] EPOCH 144:
2024-08-19 13:34:30,807 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7202e-01, 9.0868e-03, 1.5958e-02,  ..., 9.9722e-01,
          8.3685e-01, 3.0912e-02],
         [9.2568e-03, 9.0868e-03, 1.5958e-02,  ..., 9.2682e-04,
          3.7944e-02, 2.6187e-02],
         [9.4685e-03, 9.0868e-03, 1.5958e-02,  ..., 9.2682e-04,
          6.1249e-02, 2.6187e-02],
         [9.2568e-03, 9.7274e-01, 9.5213e-01,  ..., 9.2682e-04,
          6.3954e-02, 9.1671e-01]],
        [[1.3674e-01, 3.3077e-02, 1.7906e-02,  ..., 4.1487e-02,
          3.1552e-03, 4.1203e-03],
         [2.4045e-02, 3.3077e-02, 1.7906e-02,  ..., 3.9458e-02,
          3.1552e-03, 4.1203e-03],
         [8.1517e-01, 3.7904e-02, 1.7906e-02,  ..., 4.2445e-02,
          9.9053e-01, 9.8764e-01],
         [2.4045e-02, 8.9594e-01, 9.4628e-01,  ..., 8.7661e-01,
          3.1552e-03, 4.1203e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0106, 0.0089, 0.9782,  ..., 0.9753, 0.0135, 0.0242],
         [0.0106, 0.0089, 0.0068,  ..., 0.0080, 0.0157, 0.0242],
         [0.9682, 0.0089, 0.0068,  ..., 0.0080, 0.9572, 0.9273],
         [0.0106, 0.9734, 0.0081,  ..., 0.0087, 0.0135, 0.0244]],
        [[0.9637, 0.0086, 0.9955,  ..., 0.9896, 0.9851, 0.0092],
         [0.0116, 0.0086, 0.0015,  ..., 0.0035, 0.0049, 0.0092],
         [0.0116, 0.0086, 0.0015,  ..., 0.0035, 0.0049, 0.9725],
         [0.0131, 0.9741, 0.0015,  ..., 0.0035, 0.0050, 0.0092]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7420e-01, 1.7193e-02, 2.0161e-02,  ..., 9.9740e-01,
          9.6251e-01, 2.3877e-02],
         [8.3775e-03, 1.7193e-02, 2.0161e-02,  ..., 8.6729e-04,
          1.2496e-02, 2.3877e-02],
         [8.3775e-03, 1.7193e-02, 2.0161e-02,  ..., 8.6729e-04,
          1.2496e-02, 2.3877e-02],
         [9.0451e-03, 9.4842e-01, 9.3952e-01,  ..., 8.6729e-04,
          1.2496e-02, 9.2837e-01]],
        [[2.3040e-02, 1.2149e-02, 2.7374e-02,  ..., 1.4452e-02,
          1.1757e-03, 7.9972e-03],
         [1.4700e-02, 1.2149e-02, 2.7374e-02,  ..., 1.4452e-02,
          1.1757e-03, 7.9972e-03],
         [9.4756e-01, 1.2149e-02, 2.7374e-02,  ..., 1.4452e-02,
          9.9647e-01, 9.7601e-01],
         [1.4700e-02, 9.6355e-01, 9.1788e-01,  ..., 9.5665e-01,
          1.1757e-03, 7.9972e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0549, 0.0094, 0.9937,  ..., 0.9935, 0.0155, 0.0141],
         [0.0491, 0.0094, 0.0021,  ..., 0.0022, 0.0155, 0.0141],
         [0.8186, 0.0094, 0.0021,  ..., 0.0022, 0.9536, 0.9578],
         [0.0774, 0.9719, 0.0021,  ..., 0.0022, 0.0155, 0.0141]],
        [[0.9774, 0.0069, 0.9951,  ..., 0.9891, 0.9669, 0.0172],
         [0.0080, 0.0069, 0.0016,  ..., 0.0036, 0.0086, 0.0172],
         [0.0073, 0.0069, 0.0016,  ..., 0.0036, 0.0086, 0.9485],
         [0.0073, 0.9794, 0.0016,  ..., 0.0036, 0.0158, 0.0172]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:31,847 [Process: 0] Synchronize training processes
2024-08-19 13:34:31,847 [Process: 0] Evaluating...
2024-08-19 13:34:31,849 [Process: 0] EPOCH 145:
2024-08-19 13:34:31,851 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:32,889 [Process: 0] Synchronize training processes
2024-08-19 13:34:32,889 [Process: 0] Evaluating...
2024-08-19 13:34:32,891 [Process: 0] EPOCH 146:
2024-08-19 13:34:32,893 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9791, 0.0236, 0.0365,  ..., 0.9935, 0.9724, 0.0222],
         [0.0073, 0.0220, 0.0365,  ..., 0.0022, 0.0098, 0.0222],
         [0.0068, 0.0220, 0.0380,  ..., 0.0022, 0.0089, 0.0222],
         [0.0068, 0.9324, 0.8889,  ..., 0.0022, 0.0089, 0.9334]],
        [[0.9827, 0.0158, 0.0278,  ..., 0.0157, 0.0056, 0.0018],
         [0.0040, 0.0158, 0.0278,  ..., 0.0141, 0.0056, 0.0018],
         [0.0092, 0.0158, 0.0278,  ..., 0.0141, 0.9832, 0.9945],
         [0.0040, 0.9527, 0.9165,  ..., 0.9560, 0.0056, 0.0018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0188, 0.0128, 0.9920,  ..., 0.9692, 0.0159, 0.0141],
         [0.9433, 0.0128, 0.0027,  ..., 0.0113, 0.0159, 0.0141],
         [0.0191, 0.0128, 0.0027,  ..., 0.0096, 0.9522, 0.9577],
         [0.0188, 0.9617, 0.0027,  ..., 0.0099, 0.0159, 0.0141]],
        [[0.9963, 0.0031, 0.9524,  ..., 0.9886, 0.0976, 0.0201],
         [0.0013, 0.0027, 0.0158,  ..., 0.0038, 0.0268, 0.0201],
         [0.0012, 0.0027, 0.0158,  ..., 0.0038, 0.0268, 0.9396],
         [0.0012, 0.9916, 0.0160,  ..., 0.0038, 0.8488, 0.0201]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9945, 0.0623, 0.0386,  ..., 0.9402, 0.9591, 0.0148],
         [0.0018, 0.0550, 0.0261,  ..., 0.0292, 0.0134, 0.0148],
         [0.0018, 0.0731, 0.0261,  ..., 0.0153, 0.0142, 0.0148],
         [0.0019, 0.8096, 0.9092,  ..., 0.0153, 0.0134, 0.9555]],
        [[0.5687, 0.0342, 0.0321,  ..., 0.0136, 0.0115, 0.0044],
         [0.0538, 0.0288, 0.0321,  ..., 0.0136, 0.0115, 0.0044],
         [0.3237, 0.0288, 0.0321,  ..., 0.0136, 0.9654, 0.9868],
         [0.0538, 0.9083, 0.9037,  ..., 0.9593, 0.0115, 0.0044]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1191, 0.2222, 0.9808,  ..., 0.7775, 0.0151, 0.0154],
         [0.0711, 0.5116, 0.0018,  ..., 0.0217, 0.0151, 0.0154],
         [0.1432, 0.0890, 0.0018,  ..., 0.0217, 0.9546, 0.9537],
         [0.6667, 0.1773, 0.0156,  ..., 0.1791, 0.0151, 0.0154]],
        [[0.6986, 0.0277, 0.7550,  ..., 0.9837, 0.0035, 0.0273],
         [0.2314, 0.0277, 0.1562,  ..., 0.0058, 0.0035, 0.0273],
         [0.0350, 0.9108, 0.0444,  ..., 0.0052, 0.0035, 0.9182],
         [0.0350, 0.0338, 0.0444,  ..., 0.0052, 0.9896, 0.0273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:34:33,931 [Process: 0] Synchronize training processes
2024-08-19 13:34:33,931 [Process: 0] Evaluating...
2024-08-19 13:34:33,933 [Process: 0] EPOCH 147:
2024-08-19 13:34:33,935 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:34,972 [Process: 0] Synchronize training processes
2024-08-19 13:34:34,972 [Process: 0] Evaluating...
2024-08-19 13:34:34,974 [Process: 0] EPOCH 148:
2024-08-19 13:34:34,976 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5882, 0.0342, 0.0101,  ..., 0.9575, 0.9810, 0.1343],
         [0.0473, 0.0336, 0.0082,  ..., 0.0192, 0.0063, 0.2456],
         [0.0473, 0.0314, 0.0082,  ..., 0.0116, 0.0063, 0.1188],
         [0.3171, 0.9007, 0.9735,  ..., 0.0116, 0.0063, 0.5013]],
        [[0.1396, 0.0225, 0.0171,  ..., 0.0149, 0.0086, 0.0112],
         [0.0541, 0.0169, 0.0132,  ..., 0.0134, 0.0086, 0.0112],
         [0.7522, 0.0169, 0.0132,  ..., 0.0134, 0.9743, 0.9663],
         [0.0541, 0.9437, 0.9566,  ..., 0.9584, 0.0086, 0.0112]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3193e-01, 6.5635e-02, 9.1829e-01,  ..., 9.9679e-01,
          1.5113e-02, 1.2785e-02],
         [4.1585e-01, 8.8537e-01, 1.2449e-02,  ..., 9.5915e-04,
          1.5113e-02, 1.2785e-02],
         [8.0484e-02, 2.4497e-02, 1.2449e-02,  ..., 9.5915e-04,
          9.5466e-01, 9.6164e-01],
         [7.1730e-02, 2.4497e-02, 5.6817e-02,  ..., 1.2906e-03,
          1.5113e-02, 1.2785e-02]],
        [[9.0317e-01, 7.0180e-02, 9.7831e-01,  ..., 9.4473e-01,
          5.4331e-04, 3.6709e-02],
         [7.4854e-02, 6.6281e-02, 1.3870e-02,  ..., 1.4692e-02,
          5.4331e-04, 3.6709e-02],
         [1.0988e-02, 7.4510e-01, 3.9084e-03,  ..., 1.1932e-02,
          5.4331e-04, 8.8344e-01],
         [1.0988e-02, 1.1844e-01, 3.9084e-03,  ..., 2.8651e-02,
          9.9837e-01, 4.3138e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9789, 0.0185, 0.0199,  ..., 0.9861, 0.9824, 0.0549],
         [0.0083, 0.0160, 0.0182,  ..., 0.0051, 0.0059, 0.0416],
         [0.0064, 0.0160, 0.0182,  ..., 0.0044, 0.0059, 0.0578],
         [0.0064, 0.9495, 0.9437,  ..., 0.0044, 0.0059, 0.8457]],
        [[0.0147, 0.0487, 0.0359,  ..., 0.1128, 0.0237, 0.0145],
         [0.0147, 0.0298, 0.0238,  ..., 0.0802, 0.0237, 0.0145],
         [0.9560, 0.0298, 0.0238,  ..., 0.2688, 0.9289, 0.9564],
         [0.0147, 0.8916, 0.9165,  ..., 0.5382, 0.0237, 0.0145]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
2024-08-19 13:34:36,017 [Process: 0] Synchronize training processes
2024-08-19 13:34:36,017 [Process: 0] Evaluating...
2024-08-19 13:34:36,019 [Process: 0] EPOCH 149:
2024-08-19 13:34:36,021 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:37,059 [Process: 0] Synchronize training processes
2024-08-19 13:34:37,060 [Process: 0] Evaluating...
2024-08-19 13:34:37,061 [Process: 0] EPOCH 150:
2024-08-19 13:34:37,063 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4498e-01, 1.5003e-01, 9.9106e-01,  ..., 9.9456e-01,
          1.4059e-02, 1.2152e-02],
         [2.2154e-01, 2.4813e-01, 2.9344e-03,  ..., 1.8148e-03,
          1.4059e-02, 1.2152e-02],
         [1.6908e-01, 1.4964e-01, 2.9344e-03,  ..., 1.8148e-03,
          9.5782e-01, 9.6354e-01],
         [1.6440e-01, 4.5220e-01, 3.0737e-03,  ..., 1.8148e-03,
          1.4059e-02, 1.2152e-02]],
        [[9.9897e-01, 5.4894e-02, 9.9824e-01,  ..., 4.5843e-01,
          9.9616e-01, 2.3031e-02],
         [3.4481e-04, 5.4894e-02, 5.8620e-04,  ..., 1.8528e-01,
          1.1764e-03, 2.3031e-02],
         [3.4481e-04, 2.2043e-01, 5.8620e-04,  ..., 1.1392e-01,
          1.1764e-03, 9.3091e-01],
         [3.4481e-04, 6.6979e-01, 5.8620e-04,  ..., 2.4237e-01,
          1.4850e-03, 2.3031e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8342, 0.0150, 0.0134,  ..., 0.9679, 0.9672, 0.0453],
         [0.0892, 0.0150, 0.0134,  ..., 0.0193, 0.0223, 0.0311],
         [0.0428, 0.0150, 0.0134,  ..., 0.0064, 0.0052, 0.0385],
         [0.0337, 0.9551, 0.9598,  ..., 0.0064, 0.0052, 0.8851]],
        [[0.0059, 0.0951, 0.0500,  ..., 0.0839, 0.0103, 0.0064],
         [0.0059, 0.0639, 0.0356,  ..., 0.0524, 0.0103, 0.0064],
         [0.9823, 0.1197, 0.0356,  ..., 0.0885, 0.9692, 0.9807],
         [0.0059, 0.7213, 0.8788,  ..., 0.7752, 0.0103, 0.0064]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0599e-01, 1.3792e-01, 9.5202e-01,  ..., 9.8971e-01,
          1.7394e-02, 2.0234e-02],
         [1.9299e-01, 1.3350e-01, 3.0969e-02,  ..., 4.4988e-03,
          1.7394e-02, 2.0234e-02],
         [3.2720e-01, 8.7102e-02, 8.4259e-03,  ..., 2.8942e-03,
          9.4782e-01, 9.3930e-01],
         [1.7383e-01, 6.4148e-01, 8.5817e-03,  ..., 2.8942e-03,
          1.7394e-02, 2.0234e-02]],
        [[9.9772e-01, 3.8559e-03, 9.9556e-01,  ..., 1.0763e-01,
          9.3956e-05, 2.4699e-02],
         [1.5400e-03, 3.8559e-03, 2.4982e-03,  ..., 7.3917e-02,
          9.3956e-05, 2.4699e-02],
         [3.7079e-04, 3.8559e-03, 9.6838e-04,  ..., 5.6952e-02,
          9.3956e-05, 9.2590e-01],
         [3.7079e-04, 9.8843e-01, 9.6838e-04,  ..., 7.6150e-01,
          9.9972e-01, 2.4699e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6428, 0.0153, 0.0073,  ..., 0.9715, 0.8830, 0.0902],
         [0.1050, 0.0153, 0.0073,  ..., 0.0114, 0.0444, 0.0659],
         [0.1646, 0.0153, 0.0073,  ..., 0.0085, 0.0285, 0.1315],
         [0.0876, 0.9540, 0.9782,  ..., 0.0085, 0.0441, 0.7124]],
        [[0.0127, 0.0332, 0.0185,  ..., 0.0080, 0.0208, 0.0163],
         [0.0127, 0.0239, 0.0176,  ..., 0.0077, 0.0208, 0.0163],
         [0.9619, 0.0243, 0.0176,  ..., 0.0077, 0.9376, 0.9512],
         [0.0127, 0.9185, 0.9463,  ..., 0.9767, 0.0208, 0.0163]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:34:38,100 [Process: 0] Synchronize training processes
2024-08-19 13:34:38,101 [Process: 0] Evaluating...
2024-08-19 13:34:38,102 [Process: 0] EPOCH 151:
2024-08-19 13:34:38,104 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1024e-01, 1.3333e-01, 9.9398e-01,  ..., 9.8269e-01,
          1.1338e-02, 1.4233e-02],
         [4.2784e-01, 1.9927e-01, 3.7413e-03,  ..., 1.0691e-02,
          1.1338e-02, 1.4233e-02],
         [1.9285e-01, 6.5756e-02, 1.1388e-03,  ..., 3.3088e-03,
          9.6599e-01, 9.5730e-01],
         [1.6907e-01, 6.0165e-01, 1.1388e-03,  ..., 3.3088e-03,
          1.1338e-02, 1.4233e-02]],
        [[9.9597e-01, 2.4995e-02, 9.8332e-01,  ..., 7.3797e-02,
          5.1276e-06, 2.1344e-02],
         [3.0316e-03, 2.4995e-02, 1.0961e-02,  ..., 7.6266e-02,
          5.1276e-06, 2.1344e-02],
         [4.9835e-04, 3.3038e-02, 2.8608e-03,  ..., 4.0071e-02,
          5.1276e-06, 9.3597e-01],
         [4.9835e-04, 9.1697e-01, 2.8608e-03,  ..., 8.0987e-01,
          9.9998e-01, 2.1344e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9878, 0.0288, 0.0123,  ..., 0.9586, 0.9524, 0.0110],
         [0.0058, 0.0288, 0.0123,  ..., 0.0247, 0.0250, 0.0110],
         [0.0032, 0.0355, 0.0123,  ..., 0.0084, 0.0113, 0.0110],
         [0.0032, 0.9068, 0.9631,  ..., 0.0084, 0.0113, 0.9670]],
        [[0.0378, 0.1137, 0.0601,  ..., 0.0120, 0.0109, 0.0198],
         [0.0209, 0.0716, 0.0370,  ..., 0.0120, 0.0109, 0.0198],
         [0.9203, 0.1367, 0.0370,  ..., 0.0120, 0.9672, 0.9405],
         [0.0209, 0.6779, 0.8659,  ..., 0.9639, 0.0109, 0.0198]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4155e-01, 7.3174e-01, 9.9119e-01,  ..., 9.9490e-01,
          1.9553e-02, 3.1390e-02],
         [5.2324e-01, 7.0720e-02, 2.2273e-03,  ..., 2.2058e-03,
          1.9553e-02, 3.1390e-02],
         [6.2987e-02, 3.1090e-02, 2.2273e-03,  ..., 1.4453e-03,
          9.4134e-01, 9.0365e-01],
         [1.7223e-01, 1.6645e-01, 4.3518e-03,  ..., 1.4453e-03,
          1.9553e-02, 3.3573e-02]],
        [[8.7971e-01, 1.5802e-02, 8.9838e-01,  ..., 5.3849e-01,
          2.9868e-04, 2.9443e-02],
         [9.2390e-02, 1.5802e-02, 7.2874e-02,  ..., 2.5857e-01,
          2.9868e-04, 2.9443e-02],
         [1.3951e-02, 1.6984e-02, 1.3910e-02,  ..., 6.2526e-02,
          2.9868e-04, 9.1167e-01],
         [1.3951e-02, 9.5141e-01, 1.4837e-02,  ..., 1.4041e-01,
          9.9910e-01, 2.9443e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:34:39,145 [Process: 0] Synchronize training processes
2024-08-19 13:34:39,145 [Process: 0] Evaluating...
2024-08-19 13:34:40,130 [Process: 0] EPOCH 152:
2024-08-19 13:34:40,137 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9873, 0.0113, 0.0182,  ..., 0.9598, 0.8102, 0.0162],
         [0.0059, 0.0113, 0.0182,  ..., 0.0187, 0.0475, 0.0162],
         [0.0034, 0.0113, 0.0182,  ..., 0.0108, 0.0577, 0.0162],
         [0.0034, 0.9661, 0.9454,  ..., 0.0108, 0.0845, 0.9515]],
        [[0.0974, 0.1331, 0.0298,  ..., 0.0395, 0.0097, 0.0170],
         [0.0212, 0.1308, 0.0298,  ..., 0.0395, 0.0097, 0.0170],
         [0.8601, 0.1401, 0.0331,  ..., 0.0550, 0.9709, 0.9490],
         [0.0212, 0.5960, 0.9073,  ..., 0.8661, 0.0097, 0.0170]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3479e-01, 2.7995e-01, 9.8458e-01,  ..., 9.6013e-01,
          2.7070e-02, 1.7558e-02],
         [4.4267e-01, 4.7767e-01, 6.5594e-03,  ..., 9.3735e-03,
          2.7070e-02, 1.7558e-02],
         [1.5290e-01, 6.4263e-02, 4.4319e-03,  ..., 9.1976e-03,
          9.1828e-01, 9.4733e-01],
         [1.6963e-01, 1.7811e-01, 4.4319e-03,  ..., 2.1294e-02,
          2.7580e-02, 1.7558e-02]],
        [[6.8510e-01, 5.0541e-04, 9.4291e-01,  ..., 9.4879e-01,
          7.1340e-03, 1.2026e-02],
         [1.7516e-01, 5.0541e-04, 4.0155e-02,  ..., 2.4348e-02,
          9.8950e-04, 1.2026e-02],
         [4.4970e-02, 5.0541e-04, 8.4660e-03,  ..., 1.3429e-02,
          9.8950e-04, 9.6392e-01],
         [9.4770e-02, 9.9848e-01, 8.4660e-03,  ..., 1.3429e-02,
          9.9089e-01, 1.2026e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9736e-01, 1.2113e-02, 3.5472e-03,  ..., 9.4157e-01,
          9.0501e-01, 2.5903e-02],
         [8.7859e-04, 1.2113e-02, 3.5472e-03,  ..., 2.2898e-02,
          3.6231e-02, 2.5903e-02],
         [8.7859e-04, 1.2113e-02, 3.5472e-03,  ..., 1.7764e-02,
          2.7608e-02, 2.5903e-02],
         [8.7859e-04, 9.6366e-01, 9.8936e-01,  ..., 1.7764e-02,
          3.1146e-02, 9.2229e-01]],
        [[1.0162e-01, 1.2142e-02, 2.7604e-02,  ..., 2.7221e-02,
          8.4132e-03, 1.5269e-02],
         [1.2162e-02, 1.2142e-02, 2.7604e-02,  ..., 2.7221e-02,
          8.4132e-03, 1.5269e-02],
         [8.7406e-01, 1.2142e-02, 3.3940e-02,  ..., 3.1166e-02,
          9.7476e-01, 9.5419e-01],
         [1.2162e-02, 9.6357e-01, 9.1085e-01,  ..., 9.1439e-01,
          8.4132e-03, 1.5269e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:34:41,158 [Process: 0] Synchronize training processes
2024-08-19 13:34:41,158 [Process: 0] Evaluating...
2024-08-19 13:34:41,160 [Process: 0] EPOCH 153:
2024-08-19 13:34:41,163 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:42,230 [Process: 0] Synchronize training processes
2024-08-19 13:34:42,231 [Process: 0] Evaluating...
2024-08-19 13:34:42,233 [Process: 0] EPOCH 154:
2024-08-19 13:34:42,234 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0726e-01, 2.2380e-01, 9.9716e-01,  ..., 9.9837e-01,
          9.9598e-03, 1.2921e-02],
         [5.6198e-01, 6.4591e-01, 9.4518e-04,  ..., 5.4240e-04,
          9.9598e-03, 1.2921e-02],
         [8.1163e-02, 4.6463e-02, 9.4518e-04,  ..., 5.4240e-04,
          9.7012e-01, 9.6124e-01],
         [1.4959e-01, 8.3829e-02, 9.4518e-04,  ..., 5.4240e-04,
          9.9598e-03, 1.2921e-02]],
        [[2.6718e-01, 7.9674e-03, 9.0237e-01,  ..., 9.9828e-01,
          6.8872e-05, 1.4434e-02],
         [5.8736e-01, 8.3863e-03, 5.9690e-02,  ..., 6.6772e-04,
          6.8872e-05, 1.4434e-02],
         [5.8642e-02, 7.9674e-03, 1.8969e-02,  ..., 5.2584e-04,
          6.8872e-05, 9.5670e-01],
         [8.6821e-02, 9.7568e-01, 1.8969e-02,  ..., 5.2584e-04,
          9.9979e-01, 1.4434e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9839, 0.0078, 0.0361,  ..., 0.9043, 0.9375, 0.0313],
         [0.0065, 0.0078, 0.0424,  ..., 0.0396, 0.0212, 0.0313],
         [0.0048, 0.0078, 0.0361,  ..., 0.0305, 0.0224, 0.0313],
         [0.0048, 0.9767, 0.8853,  ..., 0.0256, 0.0189, 0.9061]],
        [[0.1667, 0.0143, 0.0837,  ..., 0.0311, 0.0150, 0.0094],
         [0.0209, 0.0143, 0.0848,  ..., 0.0308, 0.0150, 0.0094],
         [0.7914, 0.0143, 0.0782,  ..., 0.0308, 0.9549, 0.9718],
         [0.0209, 0.9571, 0.7533,  ..., 0.9073, 0.0150, 0.0094]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5315e-02, 2.5014e-02, 9.9856e-01,  ..., 9.9548e-01,
          9.0453e-03, 1.1713e-02],
         [9.4264e-01, 4.2201e-02, 4.8139e-04,  ..., 1.5064e-03,
          9.0453e-03, 1.1713e-02],
         [7.8172e-03, 2.5014e-02, 4.8139e-04,  ..., 1.5064e-03,
          9.7286e-01, 9.6486e-01],
         [1.4227e-02, 9.0777e-01, 4.8139e-04,  ..., 1.5064e-03,
          9.0453e-03, 1.1713e-02]],
        [[1.8665e-01, 1.1320e-03, 9.4677e-01,  ..., 9.7039e-01,
          2.0726e-04, 2.1045e-02],
         [4.7226e-01, 1.1320e-03, 2.8228e-02,  ..., 1.4414e-02,
          2.0726e-04, 2.0836e-02],
         [1.2782e-01, 1.1320e-03, 1.2501e-02,  ..., 7.5983e-03,
          2.0726e-04, 9.3728e-01],
         [2.1327e-01, 9.9660e-01, 1.2501e-02,  ..., 7.5983e-03,
          9.9938e-01, 2.0836e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:43,326 [Process: 0] Synchronize training processes
2024-08-19 13:34:43,327 [Process: 0] Evaluating...
2024-08-19 13:34:43,329 [Process: 0] EPOCH 155:
2024-08-19 13:34:43,330 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:44,446 [Process: 0] Synchronize training processes
2024-08-19 13:34:44,446 [Process: 0] Evaluating...
2024-08-19 13:34:44,448 [Process: 0] EPOCH 156:
2024-08-19 13:34:44,450 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9771, 0.0222, 0.0171,  ..., 0.9682, 0.9907, 0.0055],
         [0.0080, 0.0222, 0.0171,  ..., 0.0104, 0.0031, 0.0055],
         [0.0075, 0.0222, 0.0180,  ..., 0.0110, 0.0031, 0.0055],
         [0.0075, 0.9334, 0.9479,  ..., 0.0104, 0.0031, 0.9835]],
        [[0.2654, 0.0211, 0.0194,  ..., 0.0156, 0.0167, 0.0154],
         [0.0454, 0.0211, 0.0194,  ..., 0.0156, 0.0167, 0.0154],
         [0.6438, 0.0216, 0.0194,  ..., 0.0156, 0.9498, 0.9538],
         [0.0454, 0.9363, 0.9417,  ..., 0.9532, 0.0167, 0.0154]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.8908e-02, 8.4199e-03, 9.9449e-01,  ..., 9.9097e-01,
          1.1358e-02, 2.3911e-02],
         [8.2003e-01, 2.2656e-02, 1.7635e-03,  ..., 3.0091e-03,
          1.1358e-02, 2.3911e-02],
         [2.1425e-02, 8.4199e-03, 1.7635e-03,  ..., 3.0091e-03,
          9.6593e-01, 9.2827e-01],
         [6.9634e-02, 9.6050e-01, 1.9821e-03,  ..., 3.0091e-03,
          1.1358e-02, 2.3911e-02]],
        [[1.4989e-01, 1.8699e-03, 9.8774e-01,  ..., 9.8500e-01,
          1.0618e-05, 8.7153e-03],
         [4.3031e-01, 3.2123e-03, 4.0860e-03,  ..., 5.5663e-03,
          1.0618e-05, 8.7153e-03],
         [1.3190e-01, 1.8699e-03, 4.0860e-03,  ..., 4.7188e-03,
          1.0618e-05, 9.7385e-01],
         [2.8790e-01, 9.9305e-01, 4.0860e-03,  ..., 4.7188e-03,
          9.9997e-01, 8.7153e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7447, 0.0087, 0.0154,  ..., 0.9777, 0.9819, 0.0220],
         [0.1452, 0.0087, 0.0154,  ..., 0.0074, 0.0060, 0.0220],
         [0.0529, 0.0087, 0.0154,  ..., 0.0074, 0.0060, 0.0220],
         [0.0572, 0.9738, 0.9538,  ..., 0.0074, 0.0060, 0.9339]],
        [[0.0441, 0.0181, 0.0202,  ..., 0.0249, 0.0197, 0.0040],
         [0.0299, 0.0181, 0.0202,  ..., 0.0249, 0.0197, 0.0040],
         [0.8961, 0.0181, 0.0202,  ..., 0.0279, 0.9408, 0.9880],
         [0.0299, 0.9456, 0.9393,  ..., 0.9223, 0.0197, 0.0040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.2138e-02, 1.3094e-01, 9.7924e-01,  ..., 9.9792e-01,
          4.1629e-02, 1.4173e-02],
         [9.0454e-01, 3.6211e-01, 6.9207e-03,  ..., 6.9226e-04,
          4.1629e-02, 1.4173e-02],
         [1.5416e-02, 7.5205e-02, 6.9207e-03,  ..., 6.9226e-04,
          8.5998e-01, 9.5748e-01],
         [3.7907e-02, 4.3174e-01, 6.9207e-03,  ..., 6.9226e-04,
          5.6757e-02, 1.4173e-02]],
        [[7.2347e-02, 3.2903e-03, 9.9366e-01,  ..., 8.6400e-01,
          3.7051e-04, 1.7806e-02],
         [7.2418e-02, 3.4012e-03, 2.1148e-03,  ..., 6.3295e-02,
          3.7051e-04, 1.7806e-02],
         [6.3992e-01, 3.2903e-03, 2.1148e-03,  ..., 3.4784e-02,
          3.7051e-04, 9.4658e-01],
         [2.1531e-01, 9.9002e-01, 2.1148e-03,  ..., 3.7924e-02,
          9.9889e-01, 1.7806e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:34:45,493 [Process: 0] Synchronize training processes
2024-08-19 13:34:45,494 [Process: 0] Evaluating...
2024-08-19 13:34:45,495 [Process: 0] EPOCH 157:
2024-08-19 13:34:45,497 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:46,537 [Process: 0] Synchronize training processes
2024-08-19 13:34:46,538 [Process: 0] Evaluating...
2024-08-19 13:34:46,539 [Process: 0] EPOCH 158:
2024-08-19 13:34:46,541 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8686, 0.0135, 0.0088,  ..., 0.9765, 0.9571, 0.0141],
         [0.0536, 0.0135, 0.0088,  ..., 0.0078, 0.0167, 0.0141],
         [0.0432, 0.0135, 0.0088,  ..., 0.0078, 0.0131, 0.0141],
         [0.0346, 0.9594, 0.9737,  ..., 0.0078, 0.0131, 0.9576]],
        [[0.2130, 0.0167, 0.0271,  ..., 0.0187, 0.0106, 0.0065],
         [0.0510, 0.0167, 0.0275,  ..., 0.0187, 0.0106, 0.0065],
         [0.6851, 0.0167, 0.0271,  ..., 0.0187, 0.9683, 0.9804],
         [0.0510, 0.9499, 0.9183,  ..., 0.9439, 0.0106, 0.0065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7152e-01, 4.6873e-02, 9.7323e-01,  ..., 9.1698e-01,
          1.5788e-02, 5.6331e-03],
         [3.8408e-01, 1.7270e-01, 8.4101e-03,  ..., 2.4045e-02,
          1.5788e-02, 5.6331e-03],
         [7.3717e-02, 3.6529e-02, 8.4101e-03,  ..., 2.4045e-02,
          9.5263e-01, 9.8310e-01],
         [3.7069e-01, 7.4390e-01, 9.9494e-03,  ..., 3.4935e-02,
          1.5788e-02, 5.6331e-03]],
        [[6.9174e-02, 2.7365e-03, 9.9784e-01,  ..., 9.8557e-01,
          1.0407e-03, 2.5064e-02],
         [6.9174e-02, 6.0701e-03, 7.1915e-04,  ..., 4.8087e-03,
          1.0407e-03, 2.4622e-02],
         [5.1902e-01, 2.7365e-03, 7.1915e-04,  ..., 4.8087e-03,
          1.0407e-03, 9.2569e-01],
         [3.4263e-01, 9.8846e-01, 7.1915e-04,  ..., 4.8087e-03,
          9.9688e-01, 2.4622e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0853, 0.0198, 0.0207,  ..., 0.9847, 0.9087, 0.0164],
         [0.0791, 0.0199, 0.0241,  ..., 0.0051, 0.0263, 0.0164],
         [0.7811, 0.0198, 0.0207,  ..., 0.0051, 0.0387, 0.0164],
         [0.0544, 0.9405, 0.9346,  ..., 0.0051, 0.0263, 0.9507]],
        [[0.8587, 0.0168, 0.0084,  ..., 0.0591, 0.0652, 0.0093],
         [0.0333, 0.0168, 0.0084,  ..., 0.0772, 0.0744, 0.0093],
         [0.0746, 0.0168, 0.0084,  ..., 0.0791, 0.7737, 0.9720],
         [0.0333, 0.9495, 0.9749,  ..., 0.7846, 0.0867, 0.0093]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1006e-01, 4.4856e-02, 9.9514e-01,  ..., 9.7521e-01,
          2.1399e-02, 1.5995e-02],
         [2.3109e-01, 4.1620e-01, 1.6205e-03,  ..., 6.2040e-03,
          2.1399e-02, 1.5995e-02],
         [8.3901e-02, 3.6658e-02, 1.6205e-03,  ..., 6.2040e-03,
          9.3580e-01, 9.5202e-01],
         [5.7494e-01, 5.0229e-01, 1.6205e-03,  ..., 1.2386e-02,
          2.1399e-02, 1.5995e-02]],
        [[6.5108e-02, 4.1239e-03, 9.9724e-01,  ..., 9.7509e-01,
          7.6930e-04, 1.2272e-02],
         [6.2136e-02, 5.2248e-03, 9.1856e-04,  ..., 9.1516e-03,
          7.6930e-04, 1.2272e-02],
         [7.6364e-01, 4.1239e-03, 9.1856e-04,  ..., 7.8781e-03,
          7.6930e-04, 9.6318e-01],
         [1.0911e-01, 9.8653e-01, 9.1856e-04,  ..., 7.8781e-03,
          9.9769e-01, 1.2272e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:34:47,580 [Process: 0] Synchronize training processes
2024-08-19 13:34:47,580 [Process: 0] Evaluating...
2024-08-19 13:34:47,582 [Process: 0] EPOCH 159:
2024-08-19 13:34:47,584 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:48,612 [Process: 0] Synchronize training processes
2024-08-19 13:34:48,613 [Process: 0] Evaluating...
2024-08-19 13:34:48,614 [Process: 0] EPOCH 160:
2024-08-19 13:34:48,616 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2003, 0.0227, 0.0097,  ..., 0.9572, 0.9868, 0.0269],
         [0.4806, 0.0227, 0.0099,  ..., 0.0133, 0.0044, 0.0337],
         [0.1317, 0.0227, 0.0097,  ..., 0.0162, 0.0044, 0.0269],
         [0.1874, 0.9318, 0.9706,  ..., 0.0133, 0.0044, 0.9126]],
        [[0.6533, 0.0367, 0.0092,  ..., 0.0404, 0.0054, 0.0015],
         [0.0464, 0.0463, 0.0092,  ..., 0.0399, 0.0054, 0.0015],
         [0.2540, 0.0401, 0.0092,  ..., 0.0399, 0.9839, 0.9956],
         [0.0464, 0.8769, 0.9723,  ..., 0.8797, 0.0054, 0.0015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.0150e-02, 2.0488e-02, 9.9318e-01,  ..., 9.7927e-01,
          1.4249e-02, 2.8105e-02],
         [1.8685e-01, 5.5737e-02, 2.2285e-03,  ..., 6.9112e-03,
          1.4249e-02, 2.7200e-02],
         [8.0150e-02, 2.0488e-02, 2.2285e-03,  ..., 6.9112e-03,
          9.5725e-01, 9.1749e-01],
         [6.5285e-01, 9.0329e-01, 2.3586e-03,  ..., 6.9112e-03,
          1.4249e-02, 2.7200e-02]],
        [[7.1643e-02, 1.0798e-03, 9.9960e-01,  ..., 9.8197e-01,
          5.7393e-04, 7.7774e-03],
         [7.1643e-02, 1.0798e-03, 1.3457e-04,  ..., 6.0102e-03,
          5.7393e-04, 7.7774e-03],
         [6.6207e-01, 1.0798e-03, 1.3457e-04,  ..., 6.0102e-03,
          5.7393e-04, 9.7667e-01],
         [1.9464e-01, 9.9676e-01, 1.3457e-04,  ..., 6.0102e-03,
          9.9828e-01, 7.7774e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 160:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5135, 0.0202, 0.0263,  ..., 0.9708, 0.9643, 0.0303],
         [0.2631, 0.0202, 0.0263,  ..., 0.0093, 0.0099, 0.0303],
         [0.0712, 0.0202, 0.0263,  ..., 0.0106, 0.0158, 0.0320],
         [0.1522, 0.9393, 0.9212,  ..., 0.0093, 0.0099, 0.9074]],
        [[0.2440, 0.0130, 0.0304,  ..., 0.0552, 0.0043, 0.0073],
         [0.0306, 0.0134, 0.0254,  ..., 0.0552, 0.0043, 0.0073],
         [0.6948, 0.0130, 0.0254,  ..., 0.0652, 0.9872, 0.9782],
         [0.0306, 0.9606, 0.9188,  ..., 0.8243, 0.0043, 0.0073]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:34:49,661 [Process: 0] Synchronize training processes
2024-08-19 13:34:49,661 [Process: 0] Evaluating...
2024-08-19 13:34:49,663 [Process: 0] EPOCH 161:
2024-08-19 13:34:49,665 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:50,710 [Process: 0] Synchronize training processes
2024-08-19 13:34:50,710 [Process: 0] Evaluating...
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2820e-01, 1.3811e-01, 9.9705e-01,  ..., 9.9197e-01,
          1.7936e-02, 1.3178e-02],
         [1.9255e-01, 4.9018e-01, 9.8213e-04,  ..., 2.6761e-03,
          1.7936e-02, 1.3178e-02],
         [2.0821e-01, 6.1489e-02, 9.8213e-04,  ..., 2.6761e-03,
          9.4619e-01, 9.6046e-01],
         [4.7103e-01, 3.1022e-01, 9.8213e-04,  ..., 2.6761e-03,
          1.7936e-02, 1.3178e-02]],
        [[2.4102e-02, 5.6039e-04, 9.9424e-01,  ..., 9.5796e-01,
          2.4624e-03, 1.8728e-02],
         [2.3842e-02, 5.6039e-04, 1.9211e-03,  ..., 1.2586e-02,
          2.4624e-03, 1.8728e-02],
         [9.2804e-01, 5.6039e-04, 1.9211e-03,  ..., 1.2586e-02,
          2.4624e-03, 9.4382e-01],
         [2.4020e-02, 9.9832e-01, 1.9211e-03,  ..., 1.6865e-02,
          9.9261e-01, 1.8728e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 161:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9776, 0.0158, 0.0229,  ..., 0.9101, 0.9604, 0.0285],
         [0.0068, 0.0193, 0.0272,  ..., 0.0255, 0.0128, 0.0285],
         [0.0087, 0.0158, 0.0229,  ..., 0.0363, 0.0135, 0.0285],
         [0.0068, 0.9490, 0.9270,  ..., 0.0281, 0.0132, 0.9146]],
        [[0.3296, 0.0077, 0.0239,  ..., 0.1319, 0.0134, 0.0035],
         [0.0369, 0.0077, 0.0285,  ..., 0.1313, 0.0134, 0.0035],
         [0.5967, 0.0077, 0.0239,  ..., 0.1620, 0.9598, 0.9895],
         [0.0369, 0.9770, 0.9236,  ..., 0.5748, 0.0134, 0.0035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0065e-01, 6.3287e-02, 9.8910e-01,  ..., 9.9910e-01,
          1.3141e-02, 5.9433e-03],
         [3.7808e-01, 6.6215e-01, 3.6345e-03,  ..., 3.0124e-04,
          1.3141e-02, 5.9433e-03],
         [1.1637e-01, 3.9819e-02, 3.6345e-03,  ..., 3.0124e-04,
          9.6058e-01, 9.8217e-01],
         [4.0490e-01, 2.3475e-01, 3.6345e-03,  ..., 3.0124e-04,
          1.3141e-02, 5.9433e-03]],
        [[2.4171e-02, 2.4075e-03, 9.8742e-01,  ..., 9.8964e-01,
          2.2736e-03, 1.5527e-02],
         [2.4171e-02, 2.4075e-03, 4.1922e-03,  ..., 3.4519e-03,
          1.4144e-03, 1.5527e-02],
         [9.2607e-01, 2.4075e-03, 4.1922e-03,  ..., 3.4519e-03,
          1.4144e-03, 9.5342e-01],
         [2.5589e-02, 9.9278e-01, 4.1922e-03,  ..., 3.4519e-03,
          9.9490e-01, 1.5527e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:34:51,705 [Process: 0] EPOCH 162:
2024-08-19 13:34:51,709 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:52,720 [Process: 0] Synchronize training processes
2024-08-19 13:34:52,720 [Process: 0] Evaluating...
2024-08-19 13:34:52,722 [Process: 0] EPOCH 163:
2024-08-19 13:34:52,724 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 162:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9812e-01, 2.6807e-02, 2.1990e-02,  ..., 9.9115e-01,
          9.7306e-01, 1.0692e-02],
         [6.2590e-04, 4.0118e-02, 2.1990e-02,  ..., 2.9497e-03,
          8.9807e-03, 1.0692e-02],
         [6.2590e-04, 2.6807e-02, 2.1990e-02,  ..., 2.9497e-03,
          8.9807e-03, 1.0692e-02],
         [6.2590e-04, 9.0627e-01, 9.3403e-01,  ..., 2.9497e-03,
          8.9807e-03, 9.6792e-01]],
        [[8.5813e-01, 2.6462e-02, 4.5255e-02,  ..., 6.4833e-02,
          6.8434e-03, 7.4001e-03],
         [2.2703e-02, 2.6462e-02, 4.5255e-02,  ..., 7.4916e-02,
          6.8434e-03, 7.4001e-03],
         [9.6461e-02, 2.6462e-02, 6.5568e-02,  ..., 9.1941e-02,
          9.7947e-01, 9.7780e-01],
         [2.2703e-02, 9.2061e-01, 8.4392e-01,  ..., 7.6831e-01,
          6.8434e-03, 7.4001e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1589, 0.0328, 0.9594,  ..., 0.9864, 0.0196, 0.0211],
         [0.1534, 0.0385, 0.0114,  ..., 0.0044, 0.0196, 0.0211],
         [0.2909, 0.0328, 0.0114,  ..., 0.0044, 0.9411, 0.9321],
         [0.3968, 0.8958, 0.0179,  ..., 0.0048, 0.0197, 0.0256]],
        [[0.0139, 0.0121, 0.9828,  ..., 0.9969, 0.1086, 0.0178],
         [0.0139, 0.0121, 0.0057,  ..., 0.0010, 0.0507, 0.0178],
         [0.9582, 0.0121, 0.0057,  ..., 0.0010, 0.0338, 0.9467],
         [0.0139, 0.9637, 0.0057,  ..., 0.0010, 0.8069, 0.0178]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 163:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9878, 0.0072, 0.0193,  ..., 0.9895, 0.9748, 0.0177],
         [0.0041, 0.0080, 0.0401,  ..., 0.0035, 0.0083, 0.0177],
         [0.0041, 0.0072, 0.0193,  ..., 0.0035, 0.0086, 0.0177],
         [0.0041, 0.9776, 0.9214,  ..., 0.0035, 0.0083, 0.9470]],
        [[0.9217, 0.0136, 0.0300,  ..., 0.0472, 0.0098, 0.0069],
         [0.0166, 0.0136, 0.0300,  ..., 0.0521, 0.0098, 0.0069],
         [0.0452, 0.0136, 0.0303,  ..., 0.0609, 0.9705, 0.9794],
         [0.0166, 0.9593, 0.9097,  ..., 0.8398, 0.0098, 0.0069]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:34:53,772 [Process: 0] Synchronize training processes
2024-08-19 13:34:53,772 [Process: 0] Evaluating...
2024-08-19 13:34:53,774 [Process: 0] EPOCH 164:
2024-08-19 13:34:53,776 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:54,817 [Process: 0] Synchronize training processes
2024-08-19 13:34:54,817 [Process: 0] Evaluating...
2024-08-19 13:34:54,819 [Process: 0] EPOCH 165:
2024-08-19 13:34:54,821 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0414e-01, 4.1299e-03, 9.9782e-01,  ..., 9.9788e-01,
          1.0562e-02, 9.5680e-03],
         [1.7912e-01, 4.1299e-03, 7.2718e-04,  ..., 7.0746e-04,
          1.0562e-02, 9.5680e-03],
         [2.4320e-01, 4.1299e-03, 7.2718e-04,  ..., 7.0746e-04,
          9.6831e-01, 9.7130e-01],
         [4.7354e-01, 9.8761e-01, 7.2718e-04,  ..., 7.0746e-04,
          1.0562e-02, 9.5680e-03]],
        [[2.0332e-02, 1.5605e-02, 9.8254e-01,  ..., 9.9174e-01,
          1.7067e-01, 2.1182e-02],
         [2.0332e-02, 1.5605e-02, 5.8184e-03,  ..., 2.7524e-03,
          1.9524e-02, 2.1182e-02],
         [9.3900e-01, 1.5605e-02, 5.8184e-03,  ..., 2.7524e-03,
          1.9524e-02, 9.3645e-01],
         [2.0332e-02, 9.5318e-01, 5.8184e-03,  ..., 2.7524e-03,
          7.9028e-01, 2.1182e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 164:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9947, 0.0156, 0.0146,  ..., 0.9294, 0.9857, 0.0214],
         [0.0018, 0.0156, 0.0149,  ..., 0.0206, 0.0048, 0.0219],
         [0.0018, 0.0156, 0.0146,  ..., 0.0294, 0.0048, 0.0214],
         [0.0018, 0.9533, 0.9559,  ..., 0.0206, 0.0048, 0.9353]],
        [[0.9606, 0.0099, 0.0136,  ..., 0.0105, 0.0108, 0.0049],
         [0.0082, 0.0099, 0.0136,  ..., 0.0105, 0.0108, 0.0049],
         [0.0230, 0.0099, 0.0136,  ..., 0.0105, 0.9676, 0.9854],
         [0.0082, 0.9704, 0.9591,  ..., 0.9685, 0.0108, 0.0049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2996e-01, 2.6753e-03, 9.9226e-01,  ..., 9.8491e-01,
          1.8453e-02, 2.0292e-02],
         [1.6065e-01, 2.6753e-03, 2.5789e-03,  ..., 5.0300e-03,
          1.8453e-02, 2.0292e-02],
         [4.0330e-01, 2.6753e-03, 2.5789e-03,  ..., 5.0300e-03,
          9.4464e-01, 9.3912e-01],
         [3.0609e-01, 9.9197e-01, 2.5789e-03,  ..., 5.0300e-03,
          1.8453e-02, 2.0292e-02]],
        [[2.6275e-02, 7.8523e-03, 9.9874e-01,  ..., 9.8246e-01,
          1.2295e-03, 2.0640e-02],
         [2.6244e-02, 7.8523e-03, 4.2136e-04,  ..., 5.8469e-03,
          1.2295e-03, 2.0640e-02],
         [9.2124e-01, 7.8523e-03, 4.2136e-04,  ..., 5.8469e-03,
          1.2295e-03, 9.3744e-01],
         [2.6244e-02, 9.7644e-01, 4.2136e-04,  ..., 5.8469e-03,
          9.9631e-01, 2.1279e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 165:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9653, 0.0138, 0.0418,  ..., 0.9768, 0.8490, 0.0217],
         [0.0105, 0.0138, 0.0418,  ..., 0.0071, 0.0370, 0.0217],
         [0.0137, 0.0138, 0.0615,  ..., 0.0091, 0.0653, 0.0217],
         [0.0105, 0.9586, 0.8550,  ..., 0.0071, 0.0487, 0.9349]],
        [[0.6813, 0.0106, 0.0164,  ..., 0.0111, 0.0225, 0.0085],
         [0.0354, 0.0106, 0.0164,  ..., 0.0111, 0.0225, 0.0085],
         [0.2480, 0.0106, 0.0181,  ..., 0.0111, 0.9325, 0.9744],
         [0.0354, 0.9681, 0.9492,  ..., 0.9667, 0.0225, 0.0085]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:34:55,861 [Process: 0] Synchronize training processes
2024-08-19 13:34:55,862 [Process: 0] Evaluating...
2024-08-19 13:34:55,864 [Process: 0] EPOCH 166:
2024-08-19 13:34:55,866 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:56,905 [Process: 0] Synchronize training processes
2024-08-19 13:34:56,906 [Process: 0] Evaluating...
2024-08-19 13:34:56,907 [Process: 0] EPOCH 167:
2024-08-19 13:34:56,909 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1167, 0.0070, 0.9923,  ..., 0.9936, 0.0137, 0.0116],
         [0.1207, 0.0070, 0.0025,  ..., 0.0021, 0.0137, 0.0116],
         [0.3842, 0.0070, 0.0025,  ..., 0.0021, 0.9590, 0.9653],
         [0.3784, 0.9789, 0.0026,  ..., 0.0021, 0.0137, 0.0116]],
        [[0.0181, 0.0121, 0.9966,  ..., 0.9970, 0.0018, 0.0191],
         [0.0181, 0.0121, 0.0011,  ..., 0.0010, 0.0018, 0.0191],
         [0.9456, 0.0121, 0.0011,  ..., 0.0010, 0.0018, 0.9428],
         [0.0181, 0.9637, 0.0011,  ..., 0.0010, 0.9946, 0.0191]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 166:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8300, 0.0250, 0.0118,  ..., 0.9819, 0.9813, 0.0292],
         [0.0480, 0.0250, 0.0118,  ..., 0.0060, 0.0062, 0.0292],
         [0.0690, 0.0257, 0.0118,  ..., 0.0060, 0.0062, 0.0311],
         [0.0530, 0.9243, 0.9645,  ..., 0.0060, 0.0062, 0.9105]],
        [[0.5818, 0.0119, 0.0094,  ..., 0.0078, 0.0011, 0.0020],
         [0.0501, 0.0119, 0.0094,  ..., 0.0078, 0.0011, 0.0020],
         [0.3179, 0.0119, 0.0094,  ..., 0.0078, 0.9968, 0.9939],
         [0.0501, 0.9643, 0.9718,  ..., 0.9766, 0.0011, 0.0020]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1388e-01, 1.2132e-02, 9.9521e-01,  ..., 9.9588e-01,
          1.5470e-02, 1.4152e-02],
         [9.1165e-02, 1.2132e-02, 1.4377e-03,  ..., 1.3717e-03,
          1.5470e-02, 1.4152e-02],
         [4.5983e-01, 1.2132e-02, 1.4377e-03,  ..., 1.3717e-03,
          9.5359e-01, 9.5755e-01],
         [3.3512e-01, 9.6360e-01, 1.9098e-03,  ..., 1.3717e-03,
          1.5470e-02, 1.4152e-02]],
        [[3.1796e-02, 4.8143e-03, 9.9908e-01,  ..., 9.7778e-01,
          4.2658e-04, 2.4470e-02],
         [3.0969e-02, 4.8143e-03, 3.0580e-04,  ..., 8.8801e-03,
          4.2658e-04, 2.4470e-02],
         [9.0192e-01, 4.8143e-03, 3.0580e-04,  ..., 6.6700e-03,
          4.2658e-04, 9.2659e-01],
         [3.5317e-02, 9.8556e-01, 3.0580e-04,  ..., 6.6700e-03,
          9.9872e-01, 2.4470e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 167:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9086, 0.0174, 0.0296,  ..., 0.9834, 0.9400, 0.0178],
         [0.0417, 0.0174, 0.0326,  ..., 0.0053, 0.0239, 0.0178],
         [0.0240, 0.0174, 0.0317,  ..., 0.0060, 0.0184, 0.0178],
         [0.0256, 0.9479, 0.9061,  ..., 0.0053, 0.0177, 0.9467]],
        [[0.4345, 0.0300, 0.0191,  ..., 0.0164, 0.0194, 0.0062],
         [0.0453, 0.0300, 0.0191,  ..., 0.0164, 0.0194, 0.0062],
         [0.4749, 0.0370, 0.0191,  ..., 0.0164, 0.9419, 0.9815],
         [0.0453, 0.9030, 0.9428,  ..., 0.9508, 0.0194, 0.0062]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:34:57,951 [Process: 0] Synchronize training processes
2024-08-19 13:34:57,951 [Process: 0] Evaluating...
2024-08-19 13:34:57,953 [Process: 0] EPOCH 168:
2024-08-19 13:34:57,955 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:34:58,995 [Process: 0] Synchronize training processes
2024-08-19 13:34:58,995 [Process: 0] Evaluating...
2024-08-19 13:34:58,997 [Process: 0] EPOCH 169:
2024-08-19 13:34:58,999 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0935e-01, 1.3017e-02, 9.9627e-01,  ..., 9.9336e-01,
          1.2282e-02, 1.6634e-02],
         [9.5490e-02, 1.3017e-02, 1.2443e-03,  ..., 2.2126e-03,
          1.2282e-02, 1.6634e-02],
         [5.4242e-01, 1.3017e-02, 1.2443e-03,  ..., 2.2126e-03,
          9.6315e-01, 9.5010e-01],
         [2.5274e-01, 9.6095e-01, 1.2443e-03,  ..., 2.2126e-03,
          1.2282e-02, 1.6634e-02]],
        [[2.2052e-02, 2.1766e-03, 9.9865e-01,  ..., 9.4420e-01,
          3.2530e-02, 2.2347e-02],
         [2.2052e-02, 2.1766e-03, 4.4978e-04,  ..., 1.8600e-02,
          1.1755e-02, 2.2347e-02],
         [9.3384e-01, 2.1766e-03, 4.4978e-04,  ..., 1.8600e-02,
          1.1755e-02, 9.3278e-01],
         [2.2052e-02, 9.9347e-01, 4.4978e-04,  ..., 1.8600e-02,
          9.4396e-01, 2.2522e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 168:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9528, 0.0141, 0.0200,  ..., 0.9894, 0.9750, 0.0189],
         [0.0145, 0.0141, 0.0200,  ..., 0.0037, 0.0083, 0.0189],
         [0.0183, 0.0141, 0.0200,  ..., 0.0035, 0.0083, 0.0189],
         [0.0145, 0.9577, 0.9400,  ..., 0.0035, 0.0083, 0.9432]],
        [[0.3093, 0.0361, 0.0237,  ..., 0.0081, 0.0019, 0.0069],
         [0.0727, 0.0361, 0.0237,  ..., 0.0081, 0.0019, 0.0069],
         [0.5425, 0.0409, 0.0237,  ..., 0.0081, 0.9944, 0.9793],
         [0.0755, 0.8869, 0.9288,  ..., 0.9758, 0.0019, 0.0069]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.6947e-02, 9.9003e-03, 9.9606e-01,  ..., 9.9605e-01,
          7.0774e-03, 1.0433e-02],
         [7.5726e-02, 9.9003e-03, 1.2089e-03,  ..., 1.3160e-03,
          7.0774e-03, 1.0433e-02],
         [6.3954e-01, 9.9003e-03, 1.2089e-03,  ..., 1.3160e-03,
          9.7877e-01, 9.6870e-01],
         [2.0778e-01, 9.7030e-01, 1.5269e-03,  ..., 1.3160e-03,
          7.0774e-03, 1.0433e-02]],
        [[1.4730e-02, 7.8257e-04, 9.9127e-01,  ..., 9.8896e-01,
          9.4028e-01, 2.3262e-02],
         [1.4730e-02, 7.8257e-04, 2.9104e-03,  ..., 3.6799e-03,
          1.2590e-02, 2.3262e-02],
         [9.5581e-01, 7.8257e-04, 2.9104e-03,  ..., 3.6799e-03,
          1.2590e-02, 9.3022e-01],
         [1.4730e-02, 9.9765e-01, 2.9104e-03,  ..., 3.6799e-03,
          3.4538e-02, 2.3262e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 169:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2584e-01, 1.1740e-02, 5.7329e-02,  ..., 9.9226e-01,
          9.9632e-01, 8.7155e-03],
         [1.9993e-02, 1.1740e-02, 4.2841e-02,  ..., 2.5807e-03,
          1.2268e-03, 8.7155e-03],
         [2.3584e-02, 1.1740e-02, 4.5990e-02,  ..., 2.5807e-03,
          1.2268e-03, 8.7155e-03],
         [3.0583e-02, 9.6478e-01, 8.5384e-01,  ..., 2.5807e-03,
          1.2268e-03, 9.7385e-01]],
        [[5.8959e-01, 8.9183e-03, 4.4255e-02,  ..., 3.9760e-02,
          8.9519e-04, 4.4027e-03],
         [5.1509e-02, 8.9183e-03, 4.4255e-02,  ..., 3.2801e-02,
          8.9519e-04, 4.4027e-03],
         [3.0739e-01, 8.9183e-03, 4.5280e-02,  ..., 3.2801e-02,
          9.9731e-01, 9.8679e-01],
         [5.1509e-02, 9.7325e-01, 8.6621e-01,  ..., 8.9464e-01,
          8.9519e-04, 4.4027e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:35:00,038 [Process: 0] Synchronize training processes
2024-08-19 13:35:00,038 [Process: 0] Evaluating...
2024-08-19 13:35:00,040 [Process: 0] EPOCH 170:
2024-08-19 13:35:00,042 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:01,082 [Process: 0] Synchronize training processes
2024-08-19 13:35:01,082 [Process: 0] Evaluating...
2024-08-19 13:35:01,084 [Process: 0] EPOCH 171:
2024-08-19 13:35:01,086 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1156, 0.0185, 0.9921,  ..., 0.9881, 0.0123, 0.0067],
         [0.1020, 0.0185, 0.0026,  ..., 0.0057, 0.0123, 0.0067],
         [0.4165, 0.0185, 0.0026,  ..., 0.0031, 0.9630, 0.9800],
         [0.3660, 0.9446, 0.0026,  ..., 0.0031, 0.0123, 0.0067]],
        [[0.0264, 0.0112, 0.9914,  ..., 0.9258, 0.9269, 0.0110],
         [0.0264, 0.0112, 0.0029,  ..., 0.0233, 0.0142, 0.0110],
         [0.9208, 0.0112, 0.0029,  ..., 0.0233, 0.0142, 0.9670],
         [0.0264, 0.9665, 0.0029,  ..., 0.0275, 0.0448, 0.0110]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 170:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9682, 0.0168, 0.0501,  ..., 0.9697, 0.9720, 0.0197],
         [0.0105, 0.0168, 0.0379,  ..., 0.0100, 0.0089, 0.0197],
         [0.0105, 0.0168, 0.0402,  ..., 0.0104, 0.0101, 0.0230],
         [0.0107, 0.9496, 0.8718,  ..., 0.0100, 0.0089, 0.9375]],
        [[0.6927, 0.0086, 0.0160,  ..., 0.0157, 0.0028, 0.0020],
         [0.0719, 0.0086, 0.0160,  ..., 0.0157, 0.0028, 0.0020],
         [0.1750, 0.0086, 0.0160,  ..., 0.0157, 0.9917, 0.9941],
         [0.0604, 0.9743, 0.9520,  ..., 0.9530, 0.0028, 0.0020]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4092e-01, 1.9442e-02, 9.8092e-01,  ..., 9.7815e-01,
          7.0627e-03, 1.0249e-02],
         [1.0212e-01, 1.9442e-02, 8.1235e-03,  ..., 6.6640e-03,
          7.0627e-03, 1.0249e-02],
         [4.6054e-01, 2.3096e-02, 5.4803e-03,  ..., 6.6640e-03,
          9.7881e-01, 9.6925e-01],
         [2.9642e-01, 9.3802e-01, 5.4803e-03,  ..., 8.5217e-03,
          7.0627e-03, 1.0249e-02]],
        [[1.4487e-02, 1.9490e-02, 9.9290e-01,  ..., 9.9790e-01,
          2.6416e-03, 4.2121e-02],
         [1.4487e-02, 1.6007e-02, 2.3657e-03,  ..., 6.9991e-04,
          2.6416e-03, 3.8540e-02],
         [9.5654e-01, 1.6007e-02, 2.3657e-03,  ..., 6.9991e-04,
          2.6416e-03, 8.7306e-01],
         [1.4487e-02, 9.4850e-01, 2.3657e-03,  ..., 6.9991e-04,
          9.9208e-01, 4.6275e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 171:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9503, 0.0092, 0.0198,  ..., 0.9510, 0.9941, 0.0313],
         [0.0144, 0.0092, 0.0198,  ..., 0.0159, 0.0020, 0.0290],
         [0.0144, 0.0092, 0.0198,  ..., 0.0168, 0.0020, 0.0306],
         [0.0210, 0.9723, 0.9406,  ..., 0.0162, 0.0020, 0.9090]],
        [[0.8785, 0.0221, 0.0213,  ..., 0.0280, 0.0028, 0.0016],
         [0.0245, 0.0221, 0.0213,  ..., 0.0280, 0.0028, 0.0016],
         [0.0726, 0.0221, 0.0259,  ..., 0.0343, 0.9915, 0.9952],
         [0.0245, 0.9338, 0.9314,  ..., 0.9097, 0.0028, 0.0016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:35:02,127 [Process: 0] Synchronize training processes
2024-08-19 13:35:02,127 [Process: 0] Evaluating...
2024-08-19 13:35:03,113 [Process: 0] EPOCH 172:
2024-08-19 13:35:03,116 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2667e-01, 4.2135e-03, 9.7821e-01,  ..., 9.9721e-01,
          6.9704e-03, 1.1499e-02],
         [1.2470e-01, 4.2135e-03, 7.2621e-03,  ..., 9.3150e-04,
          6.9704e-03, 1.1499e-02],
         [3.8367e-01, 4.2135e-03, 7.2621e-03,  ..., 9.3150e-04,
          9.7909e-01, 9.6550e-01],
         [3.6496e-01, 9.8736e-01, 7.2621e-03,  ..., 9.3150e-04,
          6.9704e-03, 1.1499e-02]],
        [[1.6628e-02, 1.0513e-02, 9.9890e-01,  ..., 9.3719e-01,
          1.0565e-03, 3.1710e-02],
         [1.6628e-02, 1.0513e-02, 3.6815e-04,  ..., 1.6029e-02,
          1.0565e-03, 3.0667e-02],
         [9.5011e-01, 1.0513e-02, 3.6815e-04,  ..., 1.6504e-02,
          1.0565e-03, 9.0140e-01],
         [1.6628e-02, 9.6846e-01, 3.6815e-04,  ..., 3.0278e-02,
          9.9683e-01, 3.6226e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 172:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9925, 0.0091, 0.0110,  ..., 0.9725, 0.9853, 0.0397],
         [0.0025, 0.0091, 0.0110,  ..., 0.0091, 0.0049, 0.0397],
         [0.0025, 0.0091, 0.0110,  ..., 0.0093, 0.0049, 0.0401],
         [0.0025, 0.9728, 0.9671,  ..., 0.0091, 0.0049, 0.8804]],
        [[0.9607, 0.0260, 0.0333,  ..., 0.0239, 0.0056, 0.0038],
         [0.0095, 0.0260, 0.0333,  ..., 0.0239, 0.0056, 0.0038],
         [0.0203, 0.0280, 0.0333,  ..., 0.0242, 0.9833, 0.9885],
         [0.0095, 0.9201, 0.9001,  ..., 0.9279, 0.0056, 0.0038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:35:04,128 [Process: 0] Synchronize training processes
2024-08-19 13:35:04,129 [Process: 0] Evaluating...
2024-08-19 13:35:04,130 [Process: 0] EPOCH 173:
2024-08-19 13:35:04,132 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4857e-01, 3.0878e-03, 9.9341e-01,  ..., 9.9903e-01,
          1.4210e-02, 9.9179e-03],
         [1.6307e-01, 3.0878e-03, 2.1951e-03,  ..., 3.2414e-04,
          1.4210e-02, 9.9179e-03],
         [2.8287e-01, 3.0878e-03, 2.1951e-03,  ..., 3.2414e-04,
          9.5737e-01, 9.7025e-01],
         [4.0550e-01, 9.9074e-01, 2.1951e-03,  ..., 3.2414e-04,
          1.4210e-02, 9.9179e-03]],
        [[1.5279e-02, 2.0267e-02, 9.9947e-01,  ..., 9.7398e-01,
          2.1530e-04, 8.6204e-03],
         [1.5279e-02, 1.3244e-02, 1.7612e-04,  ..., 8.5655e-03,
          2.1530e-04, 8.6204e-03],
         [9.5416e-01, 1.3244e-02, 1.7612e-04,  ..., 8.5655e-03,
          2.1530e-04, 9.7414e-01],
         [1.5279e-02, 9.5324e-01, 1.7612e-04,  ..., 8.8931e-03,
          9.9935e-01, 8.6204e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 173:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9820, 0.0092, 0.0102,  ..., 0.9633, 0.9882, 0.0099],
         [0.0060, 0.0092, 0.0102,  ..., 0.0130, 0.0039, 0.0099],
         [0.0060, 0.0092, 0.0102,  ..., 0.0119, 0.0039, 0.0099],
         [0.0060, 0.9723, 0.9694,  ..., 0.0119, 0.0039, 0.9704]],
        [[0.9861, 0.0220, 0.0236,  ..., 0.0402, 0.0106, 0.0035],
         [0.0035, 0.0212, 0.0281,  ..., 0.0402, 0.0106, 0.0035],
         [0.0069, 0.0212, 0.0236,  ..., 0.0645, 0.9682, 0.9895],
         [0.0035, 0.9355, 0.9247,  ..., 0.8551, 0.0106, 0.0035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7833e-01, 4.8346e-03, 9.9945e-01,  ..., 9.9852e-01,
          1.1597e-02, 6.6113e-03],
         [1.7996e-01, 4.8346e-03, 1.8335e-04,  ..., 4.9470e-04,
          1.1597e-02, 6.6113e-03],
         [2.4898e-01, 4.8346e-03, 1.8335e-04,  ..., 4.9470e-04,
          9.6521e-01, 9.8017e-01],
         [3.9273e-01, 9.8550e-01, 1.8335e-04,  ..., 4.9470e-04,
          1.1597e-02, 6.6113e-03]],
        [[4.5421e-02, 3.8898e-03, 9.8472e-01,  ..., 9.9369e-01,
          3.5846e-03, 3.9915e-02],
         [4.5421e-02, 3.8898e-03, 5.0393e-03,  ..., 1.9916e-03,
          3.5846e-03, 3.9012e-02],
         [8.4870e-01, 3.8898e-03, 5.0393e-03,  ..., 1.9916e-03,
          3.5846e-03, 8.6541e-01],
         [6.0460e-02, 9.8833e-01, 5.2021e-03,  ..., 2.3310e-03,
          9.8925e-01, 5.5662e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 174:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:35:05,179 [Process: 0] Synchronize training processes
2024-08-19 13:35:05,179 [Process: 0] Evaluating...
2024-08-19 13:35:05,181 [Process: 0] EPOCH 174:
2024-08-19 13:35:05,184 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:06,230 [Process: 0] Synchronize training processes
2024-08-19 13:35:06,230 [Process: 0] Evaluating...
2024-08-19 13:35:06,232 [Process: 0] EPOCH 175:
2024-08-19 13:35:06,234 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9506, 0.0177, 0.0332,  ..., 0.9742, 0.8915, 0.0131],
         [0.0134, 0.0177, 0.0356,  ..., 0.0083, 0.0425, 0.0131],
         [0.0165, 0.0177, 0.0315,  ..., 0.0091, 0.0355, 0.0131],
         [0.0195, 0.9468, 0.8997,  ..., 0.0083, 0.0305, 0.9607]],
        [[0.7225, 0.0121, 0.0254,  ..., 0.0132, 0.0027, 0.0059],
         [0.0418, 0.0121, 0.0254,  ..., 0.0132, 0.0027, 0.0059],
         [0.1940, 0.0121, 0.0254,  ..., 0.0137, 0.9920, 0.9822],
         [0.0418, 0.9637, 0.9239,  ..., 0.9599, 0.0027, 0.0059]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7070e-01, 2.0398e-03, 9.5820e-01,  ..., 9.8929e-01,
          6.3222e-03, 5.4471e-03],
         [1.4719e-01, 2.0398e-03, 1.3932e-02,  ..., 3.5705e-03,
          6.3222e-03, 5.4471e-03],
         [3.2164e-01, 2.0398e-03, 1.3932e-02,  ..., 3.5705e-03,
          9.8103e-01, 9.8366e-01],
         [3.6048e-01, 9.9388e-01, 1.3932e-02,  ..., 3.5705e-03,
          6.3222e-03, 5.4471e-03]],
        [[1.5347e-02, 2.3403e-03, 9.9787e-01,  ..., 9.8879e-01,
          3.2163e-04, 1.7000e-02],
         [1.5347e-02, 2.3403e-03, 7.0921e-04,  ..., 3.7382e-03,
          3.2163e-04, 1.6993e-02],
         [9.5396e-01, 2.3403e-03, 7.0921e-04,  ..., 3.7382e-03,
          3.2163e-04, 9.4901e-01],
         [1.5347e-02, 9.9298e-01, 7.0921e-04,  ..., 3.7382e-03,
          9.9904e-01, 1.6993e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 175:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8879, 0.0220, 0.0083,  ..., 0.9532, 0.9822, 0.0389],
         [0.0307, 0.0220, 0.0083,  ..., 0.0126, 0.0059, 0.0382],
         [0.0326, 0.0220, 0.0083,  ..., 0.0215, 0.0059, 0.0368],
         [0.0488, 0.9341, 0.9750,  ..., 0.0126, 0.0059, 0.8861]],
        [[0.2672, 0.0145, 0.0145,  ..., 0.0065, 0.0044, 0.0023],
         [0.0771, 0.0145, 0.0145,  ..., 0.0065, 0.0044, 0.0023],
         [0.5540, 0.0145, 0.0145,  ..., 0.0065, 0.9868, 0.9930],
         [0.1017, 0.9565, 0.9566,  ..., 0.9804, 0.0044, 0.0023]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6325e-01, 5.5062e-03, 9.8552e-01,  ..., 8.6083e-01,
          5.9969e-03, 1.0666e-02],
         [1.2771e-01, 5.5062e-03, 4.8261e-03,  ..., 1.8988e-02,
          5.9969e-03, 1.0666e-02],
         [2.9483e-01, 5.5062e-03, 4.8261e-03,  ..., 1.8988e-02,
          9.8201e-01, 9.6800e-01],
         [4.1421e-01, 9.8348e-01, 4.8261e-03,  ..., 1.0120e-01,
          5.9969e-03, 1.0666e-02]],
        [[2.6590e-02, 1.4911e-02, 9.8564e-01,  ..., 9.9807e-01,
          7.4316e-05, 1.3483e-02],
         [2.6590e-02, 1.6672e-02, 4.6166e-03,  ..., 6.4440e-04,
          7.4316e-05, 1.3483e-02],
         [9.1728e-01, 1.4911e-02, 4.6166e-03,  ..., 6.4440e-04,
          7.4316e-05, 9.5955e-01],
         [2.9537e-02, 9.5351e-01, 5.1284e-03,  ..., 6.4440e-04,
          9.9978e-01, 1.3483e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 176:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:07,267 [Process: 0] Synchronize training processes
2024-08-19 13:35:07,268 [Process: 0] Evaluating...
2024-08-19 13:35:07,269 [Process: 0] EPOCH 176:
2024-08-19 13:35:07,271 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:08,303 [Process: 0] Synchronize training processes
2024-08-19 13:35:08,303 [Process: 0] Evaluating...
2024-08-19 13:35:08,305 [Process: 0] EPOCH 177:
2024-08-19 13:35:08,306 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9861, 0.0083, 0.0101,  ..., 0.9416, 0.9942, 0.0066],
         [0.0045, 0.0083, 0.0101,  ..., 0.0165, 0.0019, 0.0066],
         [0.0050, 0.0083, 0.0101,  ..., 0.0254, 0.0019, 0.0066],
         [0.0045, 0.9750, 0.9697,  ..., 0.0165, 0.0019, 0.9803]],
        [[0.9800, 0.0093, 0.0072,  ..., 0.0366, 0.0052, 0.0039],
         [0.0037, 0.0093, 0.0072,  ..., 0.0404, 0.0052, 0.0039],
         [0.0127, 0.0093, 0.0072,  ..., 0.0462, 0.9845, 0.9882],
         [0.0037, 0.9720, 0.9783,  ..., 0.8768, 0.0052, 0.0039]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3187e-01, 2.6714e-03, 9.9523e-01,  ..., 9.9774e-01,
          1.1921e-02, 1.5142e-02],
         [1.5752e-01, 2.6714e-03, 1.5915e-03,  ..., 7.5199e-04,
          1.1921e-02, 1.5142e-02],
         [3.3018e-01, 2.6714e-03, 1.5915e-03,  ..., 7.5199e-04,
          9.6424e-01, 9.5457e-01],
         [3.8043e-01, 9.9199e-01, 1.5915e-03,  ..., 7.5199e-04,
          1.1921e-02, 1.5142e-02]],
        [[1.2147e-02, 5.1884e-03, 9.9235e-01,  ..., 9.9059e-01,
          7.0209e-04, 8.9702e-03],
         [1.2147e-02, 5.1884e-03, 2.5517e-03,  ..., 3.1354e-03,
          7.0209e-04, 8.9702e-03],
         [9.6356e-01, 5.1884e-03, 2.5517e-03,  ..., 3.1354e-03,
          7.0209e-04, 9.7309e-01],
         [1.2147e-02, 9.8443e-01, 2.5517e-03,  ..., 3.1354e-03,
          9.9789e-01, 8.9702e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 177:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9920, 0.0080, 0.0097,  ..., 0.9939, 0.9812, 0.0152],
         [0.0027, 0.0085, 0.0087,  ..., 0.0020, 0.0061, 0.0152],
         [0.0027, 0.0080, 0.0087,  ..., 0.0021, 0.0061, 0.0152],
         [0.0027, 0.9754, 0.9728,  ..., 0.0020, 0.0066, 0.9543]],
        [[0.6098, 0.0181, 0.0173,  ..., 0.0087, 0.0311, 0.0082],
         [0.0355, 0.0181, 0.0152,  ..., 0.0087, 0.0311, 0.0082],
         [0.3191, 0.0181, 0.0152,  ..., 0.0087, 0.9043, 0.9755],
         [0.0355, 0.9457, 0.9524,  ..., 0.9738, 0.0336, 0.0082]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5897e-01, 4.9783e-03, 9.9920e-01,  ..., 9.8983e-01,
          1.2328e-02, 1.3508e-02],
         [1.0649e-01, 4.9783e-03, 2.6781e-04,  ..., 2.9572e-03,
          1.2328e-02, 1.3508e-02],
         [3.7526e-01, 4.9783e-03, 2.6781e-04,  ..., 2.9572e-03,
          9.6302e-01, 9.5948e-01],
         [3.5928e-01, 9.8507e-01, 2.6781e-04,  ..., 4.2541e-03,
          1.2328e-02, 1.3508e-02]],
        [[3.4464e-02, 2.4527e-03, 9.8349e-01,  ..., 9.9329e-01,
          9.0028e-04, 1.4287e-02],
         [3.0714e-02, 2.4527e-03, 6.0500e-03,  ..., 2.2368e-03,
          9.0028e-04, 1.4287e-02],
         [8.9563e-01, 2.4527e-03, 5.2285e-03,  ..., 2.2368e-03,
          9.0028e-04, 9.5714e-01],
         [3.9196e-02, 9.9264e-01, 5.2285e-03,  ..., 2.2368e-03,
          9.9730e-01, 1.4287e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 178:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:09,356 [Process: 0] Synchronize training processes
2024-08-19 13:35:09,356 [Process: 0] Evaluating...
2024-08-19 13:35:09,358 [Process: 0] EPOCH 178:
2024-08-19 13:35:09,360 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:10,411 [Process: 0] Synchronize training processes
2024-08-19 13:35:10,412 [Process: 0] Evaluating...
2024-08-19 13:35:10,414 [Process: 0] EPOCH 179:
2024-08-19 13:35:10,416 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9771, 0.0157, 0.0076,  ..., 0.9552, 0.9770, 0.0110],
         [0.0076, 0.0183, 0.0076,  ..., 0.0121, 0.0069, 0.0110],
         [0.0076, 0.0157, 0.0076,  ..., 0.0206, 0.0088, 0.0110],
         [0.0076, 0.9503, 0.9772,  ..., 0.0121, 0.0073, 0.9671]],
        [[0.5146, 0.0198, 0.0197,  ..., 0.0029, 0.0081, 0.0031],
         [0.0618, 0.0198, 0.0197,  ..., 0.0029, 0.0081, 0.0031],
         [0.3618, 0.0198, 0.0223,  ..., 0.0029, 0.9756, 0.9906],
         [0.0618, 0.9407, 0.9382,  ..., 0.9914, 0.0081, 0.0031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1741e-01, 2.2374e-03, 8.5878e-01,  ..., 9.8115e-01,
          4.5723e-03, 1.5341e-02],
         [1.0611e-01, 2.2374e-03, 3.5760e-02,  ..., 4.6554e-03,
          4.5723e-03, 1.5341e-02],
         [4.8904e-01, 2.2374e-03, 3.3096e-02,  ..., 4.6554e-03,
          9.8628e-01, 9.5398e-01],
         [2.8744e-01, 9.9329e-01, 7.2368e-02,  ..., 9.5352e-03,
          4.5723e-03, 1.5341e-02]],
        [[4.3833e-02, 5.7825e-04, 9.9278e-01,  ..., 9.9718e-01,
          6.4875e-04, 1.9592e-02],
         [3.9823e-02, 5.7825e-04, 2.4076e-03,  ..., 9.4065e-04,
          6.4875e-04, 1.9592e-02],
         [8.5012e-01, 5.7825e-04, 2.4076e-03,  ..., 9.4065e-04,
          6.4875e-04, 9.4097e-01],
         [6.6221e-02, 9.9827e-01, 2.4076e-03,  ..., 9.4065e-04,
          9.9805e-01, 1.9843e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 179:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8819e-01, 5.1571e-03, 1.8600e-02,  ..., 9.5434e-01,
          9.8848e-01, 7.7841e-03],
         [4.6605e-02, 5.1571e-03, 1.5798e-02,  ..., 1.9987e-02,
          3.7493e-03, 7.7841e-03],
         [5.6242e-02, 5.1571e-03, 1.5798e-02,  ..., 1.2836e-02,
          4.0248e-03, 7.7841e-03],
         [1.0897e-01, 9.8453e-01, 9.4980e-01,  ..., 1.2836e-02,
          3.7493e-03, 9.7665e-01]],
        [[5.3574e-01, 8.3340e-03, 3.7578e-02,  ..., 1.1357e-02,
          3.6333e-04, 3.6648e-03],
         [5.5420e-02, 8.3340e-03, 3.7578e-02,  ..., 1.1357e-02,
          3.6333e-04, 3.6648e-03],
         [3.5342e-01, 8.3340e-03, 5.1084e-02,  ..., 1.1357e-02,
          9.9891e-01, 9.8901e-01],
         [5.5420e-02, 9.7500e-01, 8.7376e-01,  ..., 9.6593e-01,
          3.6333e-04, 3.6648e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2669e-01, 8.8340e-03, 9.7064e-01,  ..., 9.9717e-01,
          2.1752e-02, 3.7735e-03],
         [9.3036e-02, 8.7104e-03, 9.6594e-03,  ..., 9.4170e-04,
          2.0607e-02, 3.7735e-03],
         [5.0131e-01, 8.7104e-03, 9.6594e-03,  ..., 9.4170e-04,
          9.3688e-01, 9.8868e-01],
         [2.7897e-01, 9.7375e-01, 1.0044e-02,  ..., 9.4170e-04,
          2.0763e-02, 3.7735e-03]],
        [[1.2269e-02, 2.0446e-04, 9.8578e-01,  ..., 9.9744e-01,
          6.4525e-03, 8.7390e-03],
         [1.2269e-02, 2.0446e-04, 4.7415e-03,  ..., 8.5274e-04,
          5.6518e-03, 8.7390e-03],
         [9.6319e-01, 2.0446e-04, 4.7415e-03,  ..., 8.5274e-04,
          5.6518e-03, 9.7378e-01],
         [1.2269e-02, 9.9939e-01, 4.7415e-03,  ..., 8.5274e-04,
          9.8224e-01, 8.7390e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 180:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:11,459 [Process: 0] Synchronize training processes
2024-08-19 13:35:11,459 [Process: 0] Evaluating...
2024-08-19 13:35:11,461 [Process: 0] EPOCH 180:
2024-08-19 13:35:11,463 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:12,508 [Process: 0] Synchronize training processes
2024-08-19 13:35:12,509 [Process: 0] Evaluating...
2024-08-19 13:35:12,510 [Process: 0] EPOCH 181:
2024-08-19 13:35:12,512 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9944, 0.0198, 0.0058,  ..., 0.9773, 0.9923, 0.0145],
         [0.0019, 0.0198, 0.0058,  ..., 0.0074, 0.0026, 0.0145],
         [0.0019, 0.0198, 0.0058,  ..., 0.0079, 0.0026, 0.0145],
         [0.0019, 0.9405, 0.9825,  ..., 0.0074, 0.0026, 0.9564]],
        [[0.8910, 0.0165, 0.0252,  ..., 0.0105, 0.0110, 0.0049],
         [0.0168, 0.0165, 0.0252,  ..., 0.0105, 0.0110, 0.0049],
         [0.0754, 0.0165, 0.0262,  ..., 0.0105, 0.9671, 0.9853],
         [0.0168, 0.9504, 0.9234,  ..., 0.9684, 0.0110, 0.0049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.5655e-02, 7.3082e-03, 9.9765e-01,  ..., 9.8835e-01,
          8.6725e-03, 7.2825e-03],
         [8.5655e-02, 7.2951e-03, 7.8343e-04,  ..., 2.5733e-03,
          8.6725e-03, 7.2825e-03],
         [5.8700e-01, 7.2951e-03, 7.8343e-04,  ..., 2.5733e-03,
          9.7398e-01, 9.7815e-01],
         [2.4169e-01, 9.7810e-01, 7.8343e-04,  ..., 6.5039e-03,
          8.6725e-03, 7.2825e-03]],
        [[1.3822e-02, 5.1721e-04, 9.9543e-01,  ..., 9.9804e-01,
          1.4165e-03, 8.7107e-03],
         [1.3822e-02, 5.1721e-04, 1.5224e-03,  ..., 6.5258e-04,
          1.4165e-03, 8.7107e-03],
         [9.5853e-01, 5.1721e-04, 1.5224e-03,  ..., 6.5258e-04,
          1.4165e-03, 9.7387e-01],
         [1.3822e-02, 9.9845e-01, 1.5224e-03,  ..., 6.5258e-04,
          9.9575e-01, 8.7107e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 181:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9874, 0.0135, 0.0192,  ..., 0.8832, 0.9937, 0.0200],
         [0.0042, 0.0135, 0.0180,  ..., 0.0337, 0.0021, 0.0200],
         [0.0042, 0.0135, 0.0180,  ..., 0.0494, 0.0021, 0.0200],
         [0.0042, 0.9596, 0.9448,  ..., 0.0337, 0.0021, 0.9401]],
        [[0.4144, 0.0086, 0.0215,  ..., 0.0425, 0.0053, 0.0021],
         [0.0367, 0.0086, 0.0185,  ..., 0.0425, 0.0053, 0.0021],
         [0.5122, 0.0086, 0.0185,  ..., 0.0591, 0.9841, 0.9936],
         [0.0367, 0.9741, 0.9416,  ..., 0.8559, 0.0053, 0.0021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3130e-02, 9.4618e-03, 9.9591e-01,  ..., 9.9668e-01,
          7.3948e-03, 4.3539e-03],
         [7.6541e-02, 7.7788e-03, 1.3617e-03,  ..., 1.1082e-03,
          7.3948e-03, 4.3539e-03],
         [6.1588e-01, 7.7788e-03, 1.3617e-03,  ..., 1.1082e-03,
          9.7782e-01, 9.8694e-01],
         [2.1444e-01, 9.7498e-01, 1.3617e-03,  ..., 1.1082e-03,
          7.3948e-03, 4.3539e-03]],
        [[2.8129e-02, 1.8525e-03, 9.9772e-01,  ..., 9.5857e-01,
          1.5122e-02, 9.0471e-03],
         [2.8129e-02, 1.8525e-03, 7.6144e-04,  ..., 1.0672e-02,
          7.2593e-03, 9.0471e-03],
         [9.1125e-01, 1.8525e-03, 7.6144e-04,  ..., 1.0672e-02,
          7.2593e-03, 9.7286e-01],
         [3.2488e-02, 9.9444e-01, 7.6144e-04,  ..., 2.0082e-02,
          9.7036e-01, 9.0471e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:35:13,552 [Process: 0] Synchronize training processes
2024-08-19 13:35:13,552 [Process: 0] Evaluating...
2024-08-19 13:35:14,537 [Process: 0] EPOCH 182:
2024-08-19 13:35:14,541 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 182:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9754e-01, 1.4734e-02, 3.2553e-02,  ..., 9.8008e-01,
          9.8360e-01, 1.7119e-02],
         [8.1931e-04, 1.4734e-02, 3.2553e-02,  ..., 6.5665e-03,
          5.4675e-03, 1.7119e-02],
         [8.1931e-04, 1.4734e-02, 3.2553e-02,  ..., 6.7828e-03,
          5.4675e-03, 1.7119e-02],
         [8.1931e-04, 9.5580e-01, 9.0234e-01,  ..., 6.5665e-03,
          5.4675e-03, 9.4864e-01]],
        [[9.5323e-01, 5.1135e-03, 9.4414e-03,  ..., 8.0559e-03,
          6.7825e-03, 8.8871e-03],
         [9.6095e-03, 5.1135e-03, 9.4414e-03,  ..., 8.0559e-03,
          6.7825e-03, 8.8871e-03],
         [2.7549e-02, 5.1135e-03, 9.4414e-03,  ..., 8.0559e-03,
          9.7965e-01, 9.7334e-01],
         [9.6095e-03, 9.8466e-01, 9.7168e-01,  ..., 9.7583e-01,
          6.7825e-03, 8.8871e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.0439e-02, 5.9284e-02, 9.8730e-01,  ..., 9.9508e-01,
          1.0406e-02, 1.9173e-02],
         [5.0439e-02, 3.2441e-02, 3.6062e-03,  ..., 1.4424e-03,
          1.0406e-02, 1.9173e-02],
         [8.0125e-01, 3.2441e-02, 3.6062e-03,  ..., 1.4424e-03,
          9.6878e-01, 9.4018e-01],
         [9.7877e-02, 8.7583e-01, 5.4861e-03,  ..., 2.0373e-03,
          1.0406e-02, 2.1476e-02]],
        [[1.5925e-02, 4.0048e-04, 9.9418e-01,  ..., 9.9982e-01,
          2.0830e-03, 5.1969e-03],
         [1.5925e-02, 4.0048e-04, 1.9397e-03,  ..., 5.8377e-05,
          2.0716e-03, 5.1969e-03],
         [9.5169e-01, 4.0048e-04, 1.9397e-03,  ..., 5.8377e-05,
          2.0716e-03, 9.8441e-01],
         [1.6459e-02, 9.9880e-01, 1.9397e-03,  ..., 5.8377e-05,
          9.9377e-01, 5.1969e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 183:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:15,545 [Process: 0] Synchronize training processes
2024-08-19 13:35:15,545 [Process: 0] Evaluating...
2024-08-19 13:35:15,547 [Process: 0] EPOCH 183:
2024-08-19 13:35:15,549 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:16,592 [Process: 0] Synchronize training processes
2024-08-19 13:35:16,592 [Process: 0] Evaluating...
2024-08-19 13:35:16,594 [Process: 0] EPOCH 184:
2024-08-19 13:35:16,597 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9901e-01, 2.3565e-02, 1.7045e-02,  ..., 9.9529e-01,
          9.6504e-01, 7.2082e-03],
         [3.2864e-04, 2.5356e-02, 1.7045e-02,  ..., 1.5375e-03,
          1.1084e-02, 7.2082e-03],
         [3.2864e-04, 2.3565e-02, 1.7045e-02,  ..., 1.6354e-03,
          1.1084e-02, 7.2082e-03],
         [3.2864e-04, 9.2751e-01, 9.4887e-01,  ..., 1.5375e-03,
          1.2794e-02, 9.7838e-01]],
        [[9.2986e-01, 6.4095e-03, 8.8933e-03,  ..., 1.4167e-02,
          5.2023e-03, 3.0492e-03],
         [2.0317e-02, 6.4095e-03, 8.8933e-03,  ..., 1.4167e-02,
          5.2023e-03, 3.0492e-03],
         [3.2498e-02, 6.4095e-03, 8.8933e-03,  ..., 1.4167e-02,
          9.8439e-01, 9.9085e-01],
         [1.7328e-02, 9.8077e-01, 9.7332e-01,  ..., 9.5750e-01,
          5.2023e-03, 3.0492e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.9771e-02, 2.5920e-02, 9.9689e-01,  ..., 9.9872e-01,
          1.5576e-02, 2.2589e-03],
         [4.7277e-02, 2.1870e-02, 1.0369e-03,  ..., 4.2652e-04,
          1.5576e-02, 2.2589e-03],
         [8.0778e-01, 2.1870e-02, 1.0369e-03,  ..., 4.2652e-04,
          9.5327e-01, 9.9322e-01],
         [9.5168e-02, 9.3034e-01, 1.0369e-03,  ..., 4.2652e-04,
          1.5576e-02, 2.2589e-03]],
        [[1.6080e-02, 1.5298e-04, 9.9696e-01,  ..., 9.9246e-01,
          2.8960e-02, 1.8171e-02],
         [1.6080e-02, 1.5298e-04, 1.0129e-03,  ..., 2.5118e-03,
          1.5438e-02, 1.8171e-02],
         [9.5176e-01, 1.5298e-04, 1.0129e-03,  ..., 2.5118e-03,
          1.5438e-02, 9.4549e-01],
         [1.6080e-02, 9.9954e-01, 1.0129e-03,  ..., 2.5118e-03,
          9.4016e-01, 1.8171e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 184:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9277e-01, 3.7590e-02, 5.0239e-02,  ..., 9.6593e-01,
          9.6505e-01, 3.1824e-02],
         [2.4258e-03, 3.7590e-02, 4.9723e-02,  ..., 1.1356e-02,
          1.0573e-02, 3.1824e-02],
         [2.4015e-03, 5.1684e-02, 7.4035e-02,  ..., 1.1356e-02,
          1.0582e-02, 3.1848e-02],
         [2.4015e-03, 8.7314e-01, 8.2600e-01,  ..., 1.1356e-02,
          1.3799e-02, 9.0450e-01]],
        [[9.5925e-01, 1.9485e-02, 5.6757e-02,  ..., 1.2727e-02,
          9.1129e-04, 1.5752e-03],
         [8.9084e-03, 1.9485e-02, 5.6757e-02,  ..., 1.2727e-02,
          9.1129e-04, 1.5752e-03],
         [2.2931e-02, 2.2758e-02, 9.6370e-02,  ..., 1.2727e-02,
          9.9727e-01, 9.9527e-01],
         [8.9084e-03, 9.3827e-01, 7.9012e-01,  ..., 9.6182e-01,
          9.1129e-04, 1.5752e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0612, 0.0020, 0.9838,  ..., 0.9938, 0.0049, 0.0153],
         [0.0612, 0.0020, 0.0054,  ..., 0.0015, 0.0049, 0.0153],
         [0.7261, 0.0020, 0.0051,  ..., 0.0015, 0.9852, 0.9542],
         [0.1516, 0.9940, 0.0057,  ..., 0.0032, 0.0049, 0.0153]],
        [[0.0214, 0.0046, 0.9936,  ..., 0.9961, 0.0260, 0.0121],
         [0.0214, 0.0046, 0.0021,  ..., 0.0013, 0.0124, 0.0121],
         [0.9358, 0.0046, 0.0021,  ..., 0.0013, 0.0124, 0.9638],
         [0.0214, 0.9863, 0.0021,  ..., 0.0013, 0.9492, 0.0121]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 185:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:17,640 [Process: 0] Synchronize training processes
2024-08-19 13:35:17,641 [Process: 0] Evaluating...
2024-08-19 13:35:17,643 [Process: 0] EPOCH 185:
2024-08-19 13:35:17,644 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:18,687 [Process: 0] Synchronize training processes
2024-08-19 13:35:18,687 [Process: 0] Evaluating...
2024-08-19 13:35:18,689 [Process: 0] EPOCH 186:
2024-08-19 13:35:18,691 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8825e-01, 1.7830e-02, 2.2616e-02,  ..., 9.8655e-01,
          9.9849e-01, 3.6210e-02],
         [3.9183e-03, 1.8173e-02, 2.2616e-02,  ..., 4.4846e-03,
          5.0193e-04, 2.3772e-02],
         [3.9183e-03, 1.7830e-02, 2.4464e-02,  ..., 4.4846e-03,
          5.0193e-04, 2.3772e-02],
         [3.9183e-03, 9.4617e-01, 9.3030e-01,  ..., 4.4846e-03,
          5.0193e-04, 9.1625e-01]],
        [[7.3594e-01, 9.9633e-03, 1.7919e-02,  ..., 2.0497e-02,
          9.3584e-03, 2.6620e-03],
         [4.0681e-02, 9.9633e-03, 1.7919e-02,  ..., 2.0497e-02,
          9.3584e-03, 2.6620e-03],
         [1.8270e-01, 9.9633e-03, 1.7919e-02,  ..., 2.0497e-02,
          9.7192e-01, 9.9201e-01],
         [4.0681e-02, 9.7011e-01, 9.4624e-01,  ..., 9.3851e-01,
          9.3584e-03, 2.6620e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3409e-02, 4.2213e-03, 9.9872e-01,  ..., 9.3022e-01,
          8.2665e-03, 6.8093e-03],
         [7.3409e-02, 4.2213e-03, 4.2779e-04,  ..., 1.2793e-02,
          8.2665e-03, 6.8093e-03],
         [3.8419e-01, 4.2213e-03, 4.2779e-04,  ..., 1.2793e-02,
          9.7520e-01, 9.7957e-01],
         [4.6899e-01, 9.8734e-01, 4.2779e-04,  ..., 4.4193e-02,
          8.2665e-03, 6.8093e-03]],
        [[1.2643e-02, 3.0883e-03, 9.9681e-01,  ..., 9.9919e-01,
          5.0456e-03, 2.4275e-02],
         [1.2643e-02, 3.0883e-03, 1.0627e-03,  ..., 2.7108e-04,
          3.5236e-03, 2.4275e-02],
         [9.6207e-01, 3.0883e-03, 1.0627e-03,  ..., 2.7108e-04,
          3.5236e-03, 9.2502e-01],
         [1.2643e-02, 9.9074e-01, 1.0627e-03,  ..., 2.7108e-04,
          9.8791e-01, 2.6431e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 186:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9902, 0.0297, 0.0240,  ..., 0.9957, 0.9596, 0.0120],
         [0.0033, 0.0297, 0.0240,  ..., 0.0014, 0.0108, 0.0120],
         [0.0033, 0.0341, 0.0245,  ..., 0.0014, 0.0108, 0.0120],
         [0.0033, 0.9064, 0.9275,  ..., 0.0014, 0.0188, 0.9640]],
        [[0.4184, 0.0058, 0.0112,  ..., 0.0207, 0.0089, 0.0030],
         [0.1033, 0.0058, 0.0112,  ..., 0.0207, 0.0089, 0.0030],
         [0.3603, 0.0058, 0.0112,  ..., 0.0207, 0.9732, 0.9911],
         [0.1180, 0.9825, 0.9663,  ..., 0.9378, 0.0089, 0.0030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1726e-02, 1.6667e-02, 9.9454e-01,  ..., 9.9012e-01,
          5.5207e-03, 1.1473e-02],
         [4.1726e-02, 1.8282e-02, 1.8190e-03,  ..., 3.0341e-03,
          5.5207e-03, 1.1473e-02],
         [8.0687e-01, 1.6667e-02, 1.8190e-03,  ..., 3.0341e-03,
          9.8344e-01, 9.6558e-01],
         [1.0967e-01, 9.4838e-01, 1.8190e-03,  ..., 3.8107e-03,
          5.5207e-03, 1.1473e-02]],
        [[1.2615e-02, 3.4557e-03, 9.9700e-01,  ..., 9.9885e-01,
          8.7558e-03, 5.4432e-03],
         [1.2615e-02, 3.4557e-03, 1.0015e-03,  ..., 3.8416e-04,
          8.7558e-03, 5.4432e-03],
         [9.6216e-01, 3.4557e-03, 1.0015e-03,  ..., 3.8416e-04,
          8.7558e-03, 9.8367e-01],
         [1.2615e-02, 9.8963e-01, 1.0015e-03,  ..., 3.8416e-04,
          9.7373e-01, 5.4432e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:35:19,733 [Process: 0] Synchronize training processes
2024-08-19 13:35:19,733 [Process: 0] Evaluating...
2024-08-19 13:35:19,735 [Process: 0] EPOCH 187:
2024-08-19 13:35:19,737 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:20,807 [Process: 0] Synchronize training processes
2024-08-19 13:35:20,808 [Process: 0] Evaluating...
2024-08-19 13:35:20,810 [Process: 0] EPOCH 188:
2024-08-19 13:35:20,812 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 187:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9023e-01, 1.2733e-02, 1.8409e-02,  ..., 9.9375e-01,
          9.9702e-01, 1.1783e-02],
         [3.2363e-03, 1.2733e-02, 1.8409e-02,  ..., 2.0845e-03,
          9.9187e-04, 1.1783e-02],
         [3.3020e-03, 1.2733e-02, 1.8409e-02,  ..., 2.0845e-03,
          9.9187e-04, 1.1783e-02],
         [3.2363e-03, 9.6180e-01, 9.4477e-01,  ..., 2.0845e-03,
          9.9187e-04, 9.6465e-01]],
        [[7.2385e-01, 6.7745e-03, 2.6763e-02,  ..., 9.3887e-03,
          4.1096e-03, 3.2047e-03],
         [3.8262e-02, 6.7745e-03, 2.6763e-02,  ..., 9.3887e-03,
          4.1096e-03, 3.2047e-03],
         [1.9962e-01, 6.7745e-03, 3.0157e-02,  ..., 9.3887e-03,
          9.8767e-01, 9.9039e-01],
         [3.8262e-02, 9.7968e-01, 9.1632e-01,  ..., 9.7183e-01,
          4.1096e-03, 3.2047e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8851e-02, 1.0537e-02, 9.9121e-01,  ..., 9.9073e-01,
          8.7669e-03, 1.6816e-02],
         [1.8851e-02, 1.0537e-02, 2.7541e-03,  ..., 2.7441e-03,
          8.7669e-03, 1.6816e-02],
         [9.3079e-01, 1.0537e-02, 2.7541e-03,  ..., 2.7441e-03,
          9.7370e-01, 9.4739e-01],
         [3.1511e-02, 9.6839e-01, 3.2836e-03,  ..., 3.7831e-03,
          8.7669e-03, 1.8977e-02]],
        [[1.2820e-02, 2.2733e-03, 9.8431e-01,  ..., 9.9820e-01,
          3.0352e-02, 5.6930e-03],
         [1.2820e-02, 2.2733e-03, 6.8246e-03,  ..., 5.9920e-04,
          1.3485e-02, 5.6930e-03],
         [9.6154e-01, 2.2733e-03, 4.4306e-03,  ..., 5.9920e-04,
          1.3485e-02, 9.8292e-01],
         [1.2820e-02, 9.9318e-01, 4.4306e-03,  ..., 5.9920e-04,
          9.4268e-01, 5.6930e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 188:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9910, 0.0357, 0.0416,  ..., 0.9934, 0.9938, 0.0179],
         [0.0030, 0.0214, 0.0283,  ..., 0.0022, 0.0021, 0.0179],
         [0.0031, 0.0231, 0.0291,  ..., 0.0022, 0.0021, 0.0179],
         [0.0030, 0.9198, 0.9010,  ..., 0.0022, 0.0021, 0.9463]],
        [[0.5339, 0.0186, 0.0071,  ..., 0.0146, 0.0022, 0.0020],
         [0.0663, 0.0136, 0.0071,  ..., 0.0146, 0.0022, 0.0020],
         [0.3313, 0.0136, 0.0071,  ..., 0.0146, 0.9934, 0.9940],
         [0.0686, 0.9543, 0.9788,  ..., 0.9562, 0.0022, 0.0020]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:35:21,853 [Process: 0] Synchronize training processes
2024-08-19 13:35:21,853 [Process: 0] Evaluating...
2024-08-19 13:35:21,855 [Process: 0] EPOCH 189:
2024-08-19 13:35:21,857 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:22,898 [Process: 0] Synchronize training processes
2024-08-19 13:35:22,898 [Process: 0] Evaluating...
2024-08-19 13:35:22,900 [Process: 0] EPOCH 190:
2024-08-19 13:35:22,902 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0542, 0.0157, 0.9881,  ..., 0.9959, 0.0051, 0.0083],
         [0.0486, 0.0141, 0.0040,  ..., 0.0014, 0.0051, 0.0083],
         [0.7972, 0.0141, 0.0040,  ..., 0.0014, 0.9847, 0.9751],
         [0.1000, 0.9561, 0.0040,  ..., 0.0014, 0.0051, 0.0083]],
        [[0.0277, 0.0016, 0.9954,  ..., 0.9641, 0.9705, 0.0135],
         [0.0277, 0.0016, 0.0015,  ..., 0.0108, 0.0072, 0.0135],
         [0.9028, 0.0016, 0.0015,  ..., 0.0108, 0.0072, 0.9581],
         [0.0417, 0.9951, 0.0015,  ..., 0.0142, 0.0150, 0.0150]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 189:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8850, 0.0118, 0.0159,  ..., 0.9943, 0.9705, 0.0119],
         [0.0337, 0.0118, 0.0159,  ..., 0.0019, 0.0098, 0.0119],
         [0.0410, 0.0118, 0.0159,  ..., 0.0020, 0.0098, 0.0119],
         [0.0404, 0.9645, 0.9523,  ..., 0.0019, 0.0098, 0.9644]],
        [[0.9447, 0.0240, 0.0196,  ..., 0.0058, 0.0040, 0.0015],
         [0.0117, 0.0240, 0.0196,  ..., 0.0058, 0.0040, 0.0015],
         [0.0318, 0.0271, 0.0216,  ..., 0.0058, 0.9881, 0.9956],
         [0.0117, 0.9250, 0.9391,  ..., 0.9825, 0.0040, 0.0015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1281e-02, 3.0723e-02, 9.9738e-01,  ..., 9.9016e-01,
          6.2119e-03, 1.2369e-02],
         [6.6546e-02, 3.0723e-02, 8.7465e-04,  ..., 3.1420e-03,
          6.2119e-03, 1.2369e-02],
         [7.0410e-01, 3.0723e-02, 8.7465e-04,  ..., 3.1420e-03,
          9.8136e-01, 9.6289e-01],
         [1.4808e-01, 9.0783e-01, 8.7465e-04,  ..., 3.5590e-03,
          6.2119e-03, 1.2369e-02]],
        [[2.3523e-02, 3.0996e-04, 9.9591e-01,  ..., 9.9720e-01,
          9.9297e-01, 1.8340e-02],
         [2.3523e-02, 3.0996e-04, 1.3637e-03,  ..., 9.3458e-04,
          2.3437e-03, 1.8340e-02],
         [9.2091e-01, 3.0996e-04, 1.3637e-03,  ..., 9.3458e-04,
          2.3437e-03, 9.4222e-01],
         [3.2041e-02, 9.9907e-01, 1.3637e-03,  ..., 9.3458e-04,
          2.3437e-03, 2.1105e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 190:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9946, 0.0132, 0.0046,  ..., 0.9941, 0.9818, 0.0159],
         [0.0018, 0.0112, 0.0046,  ..., 0.0020, 0.0061, 0.0159],
         [0.0018, 0.0112, 0.0046,  ..., 0.0020, 0.0061, 0.0159],
         [0.0018, 0.9644, 0.9863,  ..., 0.0020, 0.0061, 0.9524]],
        [[0.9403, 0.0135, 0.0267,  ..., 0.0064, 0.0082, 0.0050],
         [0.0131, 0.0135, 0.0267,  ..., 0.0064, 0.0082, 0.0050],
         [0.0335, 0.0135, 0.0362,  ..., 0.0064, 0.9754, 0.9850],
         [0.0131, 0.9594, 0.9104,  ..., 0.9809, 0.0082, 0.0050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:35:23,945 [Process: 0] Synchronize training processes
2024-08-19 13:35:23,945 [Process: 0] Evaluating...
2024-08-19 13:35:23,947 [Process: 0] EPOCH 191:
2024-08-19 13:35:23,949 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:24,994 [Process: 0] Synchronize training processes
2024-08-19 13:35:24,994 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5689e-02, 3.8352e-02, 9.9047e-01,  ..., 9.9507e-01,
          7.1004e-03, 2.0799e-02],
         [9.5689e-02, 4.6057e-02, 3.1203e-03,  ..., 1.6447e-03,
          7.1004e-03, 2.0799e-02],
         [5.4777e-01, 3.8352e-02, 3.1203e-03,  ..., 1.6447e-03,
          9.7870e-01, 9.3691e-01],
         [2.6085e-01, 8.7724e-01, 3.2928e-03,  ..., 1.6447e-03,
          7.1004e-03, 2.1488e-02]],
        [[2.0834e-02, 5.5444e-04, 9.8712e-01,  ..., 9.9517e-01,
          9.3250e-01, 8.7011e-03],
         [2.0834e-02, 5.5444e-04, 4.2932e-03,  ..., 1.6097e-03,
          1.2037e-02, 8.7011e-03],
         [9.3687e-01, 5.5444e-04, 4.2932e-03,  ..., 1.6097e-03,
          1.2037e-02, 9.7390e-01],
         [2.1460e-02, 9.9834e-01, 4.2932e-03,  ..., 1.6097e-03,
          4.3430e-02, 8.7011e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 191:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9067e-01, 1.0546e-02, 1.1814e-02,  ..., 9.9759e-01,
          9.3663e-01, 1.4615e-02],
         [3.1089e-03, 9.3509e-03, 1.1814e-02,  ..., 8.0369e-04,
          1.8381e-02, 1.4615e-02],
         [3.1089e-03, 9.3509e-03, 1.1814e-02,  ..., 8.0369e-04,
          1.9898e-02, 1.4615e-02],
         [3.1089e-03, 9.7075e-01, 9.6456e-01,  ..., 8.0369e-04,
          2.5087e-02, 9.5616e-01]],
        [[8.5447e-01, 1.6946e-02, 7.4393e-03,  ..., 2.9893e-02,
          5.8524e-03, 9.4378e-04],
         [4.5834e-02, 1.6946e-02, 7.4393e-03,  ..., 2.9893e-02,
          5.8524e-03, 9.4378e-04],
         [7.1401e-02, 1.6946e-02, 7.4393e-03,  ..., 3.8561e-02,
          9.8244e-01, 9.9717e-01],
         [2.8299e-02, 9.4916e-01, 9.7768e-01,  ..., 9.0165e-01,
          5.8524e-03, 9.4378e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1308, 0.0948, 0.9928,  ..., 0.9637, 0.0118, 0.0132],
         [0.1095, 0.0726, 0.0024,  ..., 0.0113, 0.0118, 0.0132],
         [0.5056, 0.0595, 0.0024,  ..., 0.0107, 0.9646, 0.9605],
         [0.2541, 0.7732, 0.0024,  ..., 0.0143, 0.0118, 0.0132]],
        [[0.0346, 0.0020, 0.9894,  ..., 0.9846, 0.9797, 0.0198],
         [0.0298, 0.0020, 0.0036,  ..., 0.0047, 0.0047, 0.0198],
         [0.8947, 0.0020, 0.0035,  ..., 0.0047, 0.0047, 0.9354],
         [0.0409, 0.9941, 0.0035,  ..., 0.0061, 0.0110, 0.0250]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:35:25,989 [Process: 0] EPOCH 192:
2024-08-19 13:35:25,992 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:26,993 [Process: 0] Synchronize training processes
2024-08-19 13:35:26,993 [Process: 0] Evaluating...
2024-08-19 13:35:26,995 [Process: 0] EPOCH 193:
2024-08-19 13:35:26,997 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 192:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9740, 0.0164, 0.0215,  ..., 0.9947, 0.9795, 0.0183],
         [0.0084, 0.0164, 0.0192,  ..., 0.0018, 0.0053, 0.0183],
         [0.0084, 0.0164, 0.0192,  ..., 0.0018, 0.0053, 0.0183],
         [0.0093, 0.9508, 0.9401,  ..., 0.0018, 0.0100, 0.9452]],
        [[0.9230, 0.0079, 0.0118,  ..., 0.0751, 0.0116, 0.0013],
         [0.0186, 0.0079, 0.0118,  ..., 0.0677, 0.0116, 0.0013],
         [0.0398, 0.0079, 0.0118,  ..., 0.2539, 0.9652, 0.9962],
         [0.0186, 0.9763, 0.9647,  ..., 0.6033, 0.0116, 0.0013]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2986e-01, 2.6563e-02, 9.9868e-01,  ..., 9.9888e-01,
          1.3613e-02, 1.9307e-02],
         [1.7019e-01, 2.6563e-02, 4.4020e-04,  ..., 3.7266e-04,
          1.3613e-02, 1.6992e-02],
         [4.0773e-01, 2.6563e-02, 4.4020e-04,  ..., 3.7266e-04,
          9.5916e-01, 9.4671e-01],
         [2.9221e-01, 9.2031e-01, 4.4020e-04,  ..., 3.7266e-04,
          1.3613e-02, 1.6992e-02]],
        [[8.5199e-03, 3.6477e-04, 9.9839e-01,  ..., 9.9350e-01,
          9.9601e-01, 7.9437e-03],
         [8.5199e-03, 3.6477e-04, 5.3777e-04,  ..., 2.1671e-03,
          8.8424e-04, 7.9437e-03],
         [9.7444e-01, 3.6477e-04, 5.3777e-04,  ..., 2.1671e-03,
          8.8424e-04, 9.7617e-01],
         [8.5199e-03, 9.9891e-01, 5.3777e-04,  ..., 2.1671e-03,
          2.2208e-03, 7.9437e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 193:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8962e-01, 2.9095e-03, 9.0709e-03,  ..., 9.2933e-01,
          9.8391e-01, 1.2997e-02],
         [3.4598e-03, 2.9095e-03, 9.0709e-03,  ..., 2.0198e-02,
          5.3627e-03, 1.2997e-02],
         [3.4598e-03, 2.9095e-03, 9.0709e-03,  ..., 2.3857e-02,
          5.3627e-03, 1.2997e-02],
         [3.4598e-03, 9.9127e-01, 9.7279e-01,  ..., 2.6611e-02,
          5.3627e-03, 9.6101e-01]],
        [[9.8006e-01, 1.1132e-02, 1.0909e-02,  ..., 1.7051e-02,
          9.7623e-03, 8.1022e-04],
         [4.8040e-03, 1.1132e-02, 1.0909e-02,  ..., 1.7051e-02,
          9.7623e-03, 8.1022e-04],
         [1.0331e-02, 1.1132e-02, 1.0909e-02,  ..., 1.9507e-02,
          9.7071e-01, 9.9757e-01],
         [4.8040e-03, 9.6661e-01, 9.6727e-01,  ..., 9.4639e-01,
          9.7623e-03, 8.1022e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:35:28,036 [Process: 0] Synchronize training processes
2024-08-19 13:35:28,036 [Process: 0] Evaluating...
2024-08-19 13:35:28,039 [Process: 0] EPOCH 194:
2024-08-19 13:35:28,042 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:29,079 [Process: 0] Synchronize training processes
2024-08-19 13:35:29,079 [Process: 0] Evaluating...
2024-08-19 13:35:29,081 [Process: 0] EPOCH 195:
2024-08-19 13:35:29,083 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1840, 0.1179, 0.9851,  ..., 0.9964, 0.0141, 0.0101],
         [0.1257, 0.0782, 0.0044,  ..., 0.0012, 0.0141, 0.0101],
         [0.2863, 0.0594, 0.0044,  ..., 0.0012, 0.9578, 0.9697],
         [0.4039, 0.7445, 0.0062,  ..., 0.0012, 0.0141, 0.0101]],
        [[0.0181, 0.0011, 0.9934,  ..., 0.9850, 0.0028, 0.0132],
         [0.0167, 0.0011, 0.0022,  ..., 0.0049, 0.0028, 0.0132],
         [0.9485, 0.0011, 0.0022,  ..., 0.0049, 0.0028, 0.9603],
         [0.0167, 0.9967, 0.0022,  ..., 0.0052, 0.9917, 0.0132]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 194:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8809, 0.0155, 0.0182,  ..., 0.9839, 0.9968, 0.0440],
         [0.0314, 0.0155, 0.0182,  ..., 0.0053, 0.0011, 0.0440],
         [0.0339, 0.0155, 0.0182,  ..., 0.0055, 0.0011, 0.0661],
         [0.0538, 0.9535, 0.9454,  ..., 0.0053, 0.0011, 0.8459]],
        [[0.6744, 0.0118, 0.0150,  ..., 0.0112, 0.0031, 0.0017],
         [0.1081, 0.0118, 0.0150,  ..., 0.0112, 0.0031, 0.0017],
         [0.1692, 0.0118, 0.0150,  ..., 0.0112, 0.9907, 0.9950],
         [0.0483, 0.9645, 0.9551,  ..., 0.9664, 0.0031, 0.0017]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4117e-01, 7.1259e-03, 9.9831e-01,  ..., 9.9788e-01,
          1.5496e-02, 2.1889e-02],
         [1.1003e-01, 7.1259e-03, 5.6257e-04,  ..., 6.6756e-04,
          1.4302e-02, 2.1870e-02],
         [3.3898e-01, 7.1259e-03, 5.6257e-04,  ..., 6.6756e-04,
          9.5590e-01, 9.3341e-01],
         [4.0983e-01, 9.7862e-01, 5.6575e-04,  ..., 7.8626e-04,
          1.4302e-02, 2.2831e-02]],
        [[2.1405e-02, 5.2045e-04, 9.9537e-01,  ..., 9.9680e-01,
          6.9986e-03, 1.6869e-02],
         [2.1405e-02, 5.2045e-04, 1.5420e-03,  ..., 1.0655e-03,
          6.9986e-03, 1.6869e-02],
         [9.3293e-01, 5.2045e-04, 1.5420e-03,  ..., 1.0655e-03,
          6.9986e-03, 9.4853e-01],
         [2.4259e-02, 9.9844e-01, 1.5420e-03,  ..., 1.0655e-03,
          9.7900e-01, 1.7736e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 195:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5563e-01, 1.6217e-02, 1.8285e-02,  ..., 9.9167e-01,
          9.8910e-01, 7.7206e-03],
         [1.0392e-02, 1.8579e-02, 1.8285e-02,  ..., 2.7773e-03,
          3.6331e-03, 7.7206e-03],
         [1.1541e-02, 1.6217e-02, 1.8285e-02,  ..., 2.7773e-03,
          3.6331e-03, 7.7206e-03],
         [2.2437e-02, 9.4899e-01, 9.4514e-01,  ..., 2.7773e-03,
          3.6331e-03, 9.7684e-01]],
        [[5.1412e-01, 1.7567e-02, 9.3627e-03,  ..., 8.7152e-02,
          1.9542e-02, 7.2768e-04],
         [4.6043e-02, 1.7567e-02, 9.3627e-03,  ..., 7.6074e-02,
          1.9542e-02, 7.2768e-04],
         [3.9379e-01, 1.7567e-02, 9.3627e-03,  ..., 3.6638e-01,
          9.4137e-01, 9.9782e-01],
         [4.6043e-02, 9.4730e-01, 9.7191e-01,  ..., 4.7039e-01,
          1.9542e-02, 7.2768e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:35:30,121 [Process: 0] Synchronize training processes
2024-08-19 13:35:30,122 [Process: 0] Evaluating...
2024-08-19 13:35:30,123 [Process: 0] EPOCH 196:
2024-08-19 13:35:30,125 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:31,166 [Process: 0] Synchronize training processes
2024-08-19 13:35:31,166 [Process: 0] Evaluating...
2024-08-19 13:35:31,168 [Process: 0] EPOCH 197:
2024-08-19 13:35:31,170 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3867e-01, 4.5697e-02, 9.8529e-01,  ..., 9.9573e-01,
          9.7984e-03, 6.7848e-03],
         [1.0204e-01, 3.1672e-02, 4.0214e-03,  ..., 1.1479e-03,
          9.7984e-03, 6.7848e-03],
         [2.5838e-01, 3.1672e-02, 4.0214e-03,  ..., 1.1479e-03,
          9.7060e-01, 9.7965e-01],
         [5.0091e-01, 8.9096e-01, 6.6659e-03,  ..., 1.9739e-03,
          9.7984e-03, 6.7848e-03]],
        [[3.3098e-02, 9.7821e-04, 9.9784e-01,  ..., 9.8439e-01,
          2.9992e-03, 6.0974e-03],
         [2.7414e-02, 9.7821e-04, 7.2057e-04,  ..., 5.2039e-03,
          2.9992e-03, 6.0974e-03],
         [9.0399e-01, 9.7821e-04, 7.2057e-04,  ..., 5.2039e-03,
          2.9992e-03, 9.8171e-01],
         [3.5499e-02, 9.9707e-01, 7.2057e-04,  ..., 5.2039e-03,
          9.9100e-01, 6.0974e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 196:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9939, 0.0173, 0.0074,  ..., 0.9619, 0.9923, 0.0108],
         [0.0020, 0.0173, 0.0074,  ..., 0.0108, 0.0025, 0.0108],
         [0.0020, 0.0196, 0.0074,  ..., 0.0108, 0.0025, 0.0108],
         [0.0020, 0.9459, 0.9779,  ..., 0.0164, 0.0026, 0.9675]],
        [[0.9229, 0.0229, 0.0088,  ..., 0.0090, 0.0074, 0.0012],
         [0.0148, 0.0229, 0.0088,  ..., 0.0090, 0.0074, 0.0012],
         [0.0474, 0.0229, 0.0088,  ..., 0.0090, 0.9777, 0.9964],
         [0.0148, 0.9313, 0.9735,  ..., 0.9729, 0.0074, 0.0012]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3756e-01, 3.1732e-01, 9.9913e-01,  ..., 9.9684e-01,
          9.5278e-03, 8.5647e-03],
         [1.0778e-01, 2.0985e-01, 2.8894e-04,  ..., 9.5598e-04,
          9.5278e-03, 8.5647e-03],
         [3.7423e-01, 9.2564e-02, 2.8894e-04,  ..., 9.5598e-04,
          9.7142e-01, 9.7431e-01],
         [3.8043e-01, 3.8027e-01, 2.8894e-04,  ..., 1.2485e-03,
          9.5278e-03, 8.5647e-03]],
        [[7.4113e-02, 1.8111e-03, 9.9479e-01,  ..., 9.9886e-01,
          9.1880e-04, 4.3970e-03],
         [6.4676e-02, 1.8111e-03, 1.7365e-03,  ..., 3.8055e-04,
          9.1880e-04, 4.3970e-03],
         [6.9311e-01, 1.8111e-03, 1.7365e-03,  ..., 3.8055e-04,
          9.1880e-04, 9.8681e-01],
         [1.6810e-01, 9.9457e-01, 1.7365e-03,  ..., 3.8055e-04,
          9.9724e-01, 4.3970e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 197:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9520, 0.0118, 0.0197,  ..., 0.9955, 0.9541, 0.0094],
         [0.0136, 0.0118, 0.0197,  ..., 0.0015, 0.0131, 0.0094],
         [0.0149, 0.0118, 0.0197,  ..., 0.0015, 0.0175, 0.0094],
         [0.0195, 0.9647, 0.9410,  ..., 0.0015, 0.0153, 0.9718]],
        [[0.9334, 0.0061, 0.0187,  ..., 0.0082, 0.0033, 0.0017],
         [0.0127, 0.0061, 0.0187,  ..., 0.0082, 0.0033, 0.0017],
         [0.0412, 0.0061, 0.0190,  ..., 0.0082, 0.9902, 0.9950],
         [0.0127, 0.9817, 0.9437,  ..., 0.9755, 0.0033, 0.0017]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:35:32,202 [Process: 0] Synchronize training processes
2024-08-19 13:35:32,202 [Process: 0] Evaluating...
2024-08-19 13:35:32,204 [Process: 0] EPOCH 198:
2024-08-19 13:35:32,206 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:33,242 [Process: 0] Synchronize training processes
2024-08-19 13:35:33,242 [Process: 0] Evaluating...
2024-08-19 13:35:33,244 [Process: 0] EPOCH 199:
2024-08-19 13:35:33,246 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0106e-01, 2.0429e-03, 9.9889e-01,  ..., 9.8657e-01,
          8.1008e-03, 1.1430e-02],
         [9.6323e-02, 2.0429e-03, 3.1073e-04,  ..., 3.6603e-03,
          8.1008e-03, 1.1430e-02],
         [5.8424e-01, 2.0429e-03, 3.1073e-04,  ..., 3.6603e-03,
          9.7570e-01, 9.6571e-01],
         [2.1838e-01, 9.9387e-01, 4.8400e-04,  ..., 6.1090e-03,
          8.1008e-03, 1.1430e-02]],
        [[1.2215e-02, 3.0920e-04, 9.9667e-01,  ..., 9.9888e-01,
          5.2061e-04, 9.7273e-03],
         [1.2215e-02, 3.0920e-04, 1.1095e-03,  ..., 3.7216e-04,
          5.2061e-04, 9.7273e-03],
         [9.6335e-01, 3.0920e-04, 1.1095e-03,  ..., 3.7216e-04,
          5.2061e-04, 9.7082e-01],
         [1.2215e-02, 9.9907e-01, 1.1095e-03,  ..., 3.7216e-04,
          9.9844e-01, 9.7273e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 198:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9929, 0.0140, 0.0089,  ..., 0.9949, 0.9808, 0.0327],
         [0.0023, 0.0140, 0.0089,  ..., 0.0016, 0.0063, 0.0327],
         [0.0023, 0.0140, 0.0089,  ..., 0.0020, 0.0063, 0.0498],
         [0.0026, 0.9579, 0.9734,  ..., 0.0016, 0.0065, 0.8847]],
        [[0.9771, 0.0112, 0.0135,  ..., 0.0095, 0.0040, 0.0031],
         [0.0061, 0.0112, 0.0135,  ..., 0.0095, 0.0040, 0.0031],
         [0.0108, 0.0112, 0.0135,  ..., 0.0095, 0.9880, 0.9908],
         [0.0061, 0.9663, 0.9594,  ..., 0.9716, 0.0040, 0.0031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3735e-01, 3.3335e-03, 9.8357e-01,  ..., 9.9963e-01,
          2.1851e-02, 1.3714e-02],
         [8.3555e-02, 3.3335e-03, 3.6498e-03,  ..., 1.2485e-04,
          2.1851e-02, 1.3714e-02],
         [5.9107e-01, 3.3335e-03, 3.6498e-03,  ..., 1.2485e-04,
          9.3120e-01, 9.5886e-01],
         [1.8803e-01, 9.9000e-01, 9.1313e-03,  ..., 1.2485e-04,
          2.5102e-02, 1.3714e-02]],
        [[1.0621e-02, 6.2941e-04, 9.8896e-01,  ..., 9.8884e-01,
          8.3537e-04, 6.9553e-03],
         [1.0621e-02, 6.2941e-04, 3.5155e-03,  ..., 3.7217e-03,
          8.3537e-04, 6.9553e-03],
         [9.6814e-01, 6.2941e-04, 3.5155e-03,  ..., 3.7217e-03,
          8.3537e-04, 9.7913e-01],
         [1.0621e-02, 9.9811e-01, 4.0057e-03,  ..., 3.7217e-03,
          9.9749e-01, 6.9553e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 199:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9342, 0.0170, 0.0118,  ..., 0.9915, 0.9953, 0.0083],
         [0.0149, 0.0170, 0.0116,  ..., 0.0028, 0.0016, 0.0083],
         [0.0149, 0.0170, 0.0116,  ..., 0.0028, 0.0016, 0.0083],
         [0.0359, 0.9490, 0.9650,  ..., 0.0028, 0.0016, 0.9751]],
        [[0.9838, 0.0090, 0.0135,  ..., 0.0157, 0.0108, 0.0050],
         [0.0046, 0.0090, 0.0135,  ..., 0.0136, 0.0108, 0.0050],
         [0.0070, 0.0090, 0.0135,  ..., 0.0136, 0.9676, 0.9851],
         [0.0046, 0.9730, 0.9596,  ..., 0.9570, 0.0108, 0.0050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:35:34,281 [Process: 0] Synchronize training processes
2024-08-19 13:35:34,282 [Process: 0] Evaluating...
2024-08-19 13:35:34,284 [Process: 0] EPOCH 200:
2024-08-19 13:35:34,285 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4051e-01, 1.1824e-02, 9.8671e-01,  ..., 9.9846e-01,
          1.2314e-02, 5.8522e-03],
         [9.5180e-02, 5.8881e-03, 4.4288e-03,  ..., 5.1185e-04,
          1.2314e-02, 5.8522e-03],
         [4.8233e-01, 5.8881e-03, 4.4288e-03,  ..., 5.1185e-04,
          9.6306e-01, 9.8244e-01],
         [2.8198e-01, 9.7640e-01, 4.4288e-03,  ..., 5.1185e-04,
          1.2314e-02, 5.8522e-03]],
        [[1.4470e-02, 1.8276e-04, 9.9789e-01,  ..., 9.8471e-01,
          4.2065e-04, 8.8388e-03],
         [1.4470e-02, 1.8276e-04, 7.0296e-04,  ..., 5.0127e-03,
          4.2065e-04, 8.8388e-03],
         [9.5659e-01, 1.8276e-04, 7.0296e-04,  ..., 5.0127e-03,
          4.2065e-04, 9.7348e-01],
         [1.4470e-02, 9.9945e-01, 7.0296e-04,  ..., 5.2640e-03,
          9.9874e-01, 8.8388e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 200:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8504, 0.0201, 0.0351,  ..., 0.9882, 0.9965, 0.0060],
         [0.0299, 0.0137, 0.0238,  ..., 0.0039, 0.0012, 0.0060],
         [0.0338, 0.0137, 0.0238,  ..., 0.0039, 0.0012, 0.0060],
         [0.0859, 0.9524, 0.9172,  ..., 0.0039, 0.0012, 0.9821]],
        [[0.8912, 0.0132, 0.0264,  ..., 0.0031, 0.0302, 0.0023],
         [0.0241, 0.0132, 0.0264,  ..., 0.0031, 0.0830, 0.0023],
         [0.0611, 0.0132, 0.0400,  ..., 0.0031, 0.8565, 0.9930],
         [0.0236, 0.9604, 0.9071,  ..., 0.9908, 0.0302, 0.0023]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9018e-01, 1.9275e-02, 9.9545e-01,  ..., 9.9779e-01,
          5.2117e-03, 1.3230e-02],
         [1.0189e-01, 1.8814e-02, 1.5180e-03,  ..., 7.3745e-04,
          5.2117e-03, 1.3230e-02],
         [2.8078e-01, 1.8814e-02, 1.5180e-03,  ..., 7.3745e-04,
          9.8436e-01, 9.6031e-01],
         [4.2715e-01, 9.4310e-01, 1.5180e-03,  ..., 7.3745e-04,
          5.2117e-03, 1.3230e-02]],
        [[1.3306e-02, 1.0884e-04, 9.9802e-01,  ..., 9.9885e-01,
          1.7260e-04, 1.5295e-02],
         [1.3306e-02, 1.0884e-04, 6.5931e-04,  ..., 3.8332e-04,
          1.7260e-04, 1.5295e-02],
         [9.6008e-01, 1.0884e-04, 6.5931e-04,  ..., 3.8332e-04,
          1.7260e-04, 9.5360e-01],
         [1.3306e-02, 9.9967e-01, 6.5931e-04,  ..., 3.8332e-04,
          9.9948e-01, 1.5811e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 201:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9016, 0.0097, 0.0062,  ..., 0.9930, 0.9916, 0.0536],
         [0.0204, 0.0092, 0.0062,  ..., 0.0023, 0.0028, 0.0428],
         [0.0255, 0.0092, 0.0062,  ..., 0.0023, 0.0028, 0.0642],
         [0.0525, 0.9719, 0.9813,  ..., 0.0023, 0.0028, 0.8393]],
        [[0.5368, 0.0086, 0.0270,  ..., 0.0113, 0.0474, 0.0016],
         [0.0549, 0.0086, 0.0270,  ..., 0.0113, 0.1707, 0.0016],
         [0.3436, 0.0086, 0.0376,  ..., 0.0113, 0.7346, 0.9952],
         [0.0647, 0.9741, 0.9084,  ..., 0.9662, 0.0474, 0.0016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:35:35,325 [Process: 0] Synchronize training processes
2024-08-19 13:35:35,325 [Process: 0] Evaluating...
2024-08-19 13:35:35,327 [Process: 0] EPOCH 201:
2024-08-19 13:35:35,328 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:36,366 [Process: 0] Synchronize training processes
2024-08-19 13:35:36,367 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3130e-01, 4.5482e-02, 9.9711e-01,  ..., 9.9431e-01,
          1.4192e-02, 5.0563e-03],
         [9.1616e-02, 1.3216e-02, 9.6338e-04,  ..., 1.8964e-03,
          1.4192e-02, 5.0563e-03],
         [2.3389e-01, 1.3216e-02, 9.6338e-04,  ..., 1.8964e-03,
          9.5610e-01, 9.8483e-01],
         [5.4319e-01, 9.2809e-01, 9.6338e-04,  ..., 1.8964e-03,
          1.5517e-02, 5.0563e-03]],
        [[1.6879e-02, 1.3322e-03, 9.9573e-01,  ..., 9.7935e-01,
          1.4386e-04, 1.5825e-02],
         [1.6879e-02, 1.3322e-03, 1.4236e-03,  ..., 6.6259e-03,
          1.4386e-04, 1.5825e-02],
         [9.4619e-01, 1.3322e-03, 1.4236e-03,  ..., 7.4014e-03,
          1.4386e-04, 9.5051e-01],
         [2.0049e-02, 9.9600e-01, 1.4236e-03,  ..., 6.6259e-03,
          9.9957e-01, 1.7839e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 202:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9644e-01, 1.0209e-02, 8.9823e-03,  ..., 9.9013e-01,
          9.9880e-01, 1.0342e-02],
         [1.1852e-03, 9.2988e-03, 8.9823e-03,  ..., 3.2903e-03,
          3.9906e-04, 1.0342e-02],
         [1.1852e-03, 9.2988e-03, 8.9823e-03,  ..., 3.2903e-03,
          3.9906e-04, 1.0342e-02],
         [1.1852e-03, 9.7119e-01, 9.7305e-01,  ..., 3.2903e-03,
          3.9906e-04, 9.6897e-01]],
        [[8.8597e-01, 1.2959e-02, 5.0546e-02,  ..., 8.2286e-03,
          2.9752e-03, 1.9863e-03],
         [2.2209e-02, 1.2959e-02, 3.3174e-02,  ..., 8.2286e-03,
          2.9752e-03, 1.9863e-03],
         [6.9609e-02, 1.2959e-02, 4.3055e-02,  ..., 8.2286e-03,
          9.9107e-01, 9.9404e-01],
         [2.2209e-02, 9.6112e-01, 8.7322e-01,  ..., 9.7531e-01,
          2.9752e-03, 1.9863e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:35:37,364 [Process: 0] EPOCH 202:
2024-08-19 13:35:37,368 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:38,368 [Process: 0] Synchronize training processes
2024-08-19 13:35:38,368 [Process: 0] Evaluating...
2024-08-19 13:35:38,370 [Process: 0] EPOCH 203:
2024-08-19 13:35:38,372 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5486e-01, 7.3452e-03, 9.8693e-01,  ..., 9.9471e-01,
          8.0819e-03, 7.5472e-03],
         [1.5125e-01, 7.3452e-03, 4.3573e-03,  ..., 1.7638e-03,
          8.0819e-03, 7.5472e-03],
         [3.8224e-01, 7.3452e-03, 4.3573e-03,  ..., 1.7638e-03,
          9.7575e-01, 9.7736e-01],
         [3.1165e-01, 9.7796e-01, 4.3573e-03,  ..., 1.7638e-03,
          8.0819e-03, 7.5472e-03]],
        [[1.9963e-02, 5.6735e-04, 9.9343e-01,  ..., 9.8659e-01,
          1.1114e-03, 1.6040e-02],
         [1.8834e-02, 5.6735e-04, 2.1904e-03,  ..., 4.4697e-03,
          1.1114e-03, 1.4683e-02],
         [9.4078e-01, 5.6735e-04, 2.1904e-03,  ..., 4.4697e-03,
          1.1114e-03, 9.5344e-01],
         [2.0425e-02, 9.9830e-01, 2.1904e-03,  ..., 4.4697e-03,
          9.9667e-01, 1.5834e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 203:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9833, 0.0085, 0.0036,  ..., 0.9858, 0.9667, 0.0264],
         [0.0047, 0.0085, 0.0036,  ..., 0.0044, 0.0095, 0.0264],
         [0.0047, 0.0085, 0.0036,  ..., 0.0044, 0.0095, 0.0280],
         [0.0074, 0.9744, 0.9892,  ..., 0.0054, 0.0144, 0.9191]],
        [[0.9770, 0.0144, 0.0122,  ..., 0.0123, 0.0036, 0.0013],
         [0.0056, 0.0144, 0.0122,  ..., 0.0123, 0.0036, 0.0013],
         [0.0118, 0.0144, 0.0122,  ..., 0.0124, 0.9891, 0.9961],
         [0.0056, 0.9569, 0.9633,  ..., 0.9630, 0.0036, 0.0013]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7537e-01, 3.1982e-03, 9.8218e-01,  ..., 9.4815e-01,
          6.7391e-03, 1.1639e-02],
         [1.0412e-01, 3.1982e-03, 5.9409e-03,  ..., 1.4238e-02,
          6.7391e-03, 1.1639e-02],
         [4.8111e-01, 3.1982e-03, 5.9409e-03,  ..., 1.4238e-02,
          9.7978e-01, 9.6508e-01],
         [2.3939e-01, 9.9041e-01, 5.9409e-03,  ..., 2.3375e-02,
          6.7391e-03, 1.1639e-02]],
        [[2.8985e-02, 1.3205e-03, 9.9388e-01,  ..., 9.9863e-01,
          3.5986e-04, 5.6424e-03],
         [2.4704e-02, 1.3205e-03, 2.0404e-03,  ..., 4.5523e-04,
          3.5986e-04, 5.6424e-03],
         [9.1507e-01, 1.3205e-03, 2.0404e-03,  ..., 4.5523e-04,
          3.5986e-04, 9.8307e-01],
         [3.1242e-02, 9.9604e-01, 2.0404e-03,  ..., 4.5523e-04,
          9.9892e-01, 5.6424e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 204:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:35:39,411 [Process: 0] Synchronize training processes
2024-08-19 13:35:39,412 [Process: 0] Evaluating...
2024-08-19 13:35:39,414 [Process: 0] EPOCH 204:
2024-08-19 13:35:39,415 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:40,457 [Process: 0] Synchronize training processes
2024-08-19 13:35:40,458 [Process: 0] Evaluating...
2024-08-19 13:35:40,460 [Process: 0] EPOCH 205:
2024-08-19 13:35:40,462 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8711e-01, 1.4149e-02, 2.1346e-02,  ..., 9.9719e-01,
          9.8325e-01, 8.3171e-03],
         [4.5042e-03, 1.4149e-02, 2.1346e-02,  ..., 9.3688e-04,
          5.5836e-03, 8.3171e-03],
         [4.1943e-03, 1.4149e-02, 2.6316e-02,  ..., 9.3688e-04,
          5.5836e-03, 8.3171e-03],
         [4.1943e-03, 9.5755e-01, 9.3099e-01,  ..., 9.3688e-04,
          5.5836e-03, 9.7505e-01]],
        [[8.9950e-01, 2.1724e-02, 8.1884e-03,  ..., 3.3264e-03,
          4.6444e-03, 2.5077e-03],
         [2.1706e-02, 2.1724e-02, 8.1884e-03,  ..., 3.3264e-03,
          4.6444e-03, 2.5077e-03],
         [5.7089e-02, 2.1724e-02, 8.1884e-03,  ..., 3.3264e-03,
          9.8607e-01, 9.9248e-01],
         [2.1706e-02, 9.3483e-01, 9.7543e-01,  ..., 9.9002e-01,
          4.6444e-03, 2.5077e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1516e-01, 4.3936e-02, 9.9679e-01,  ..., 9.9913e-01,
          4.3952e-03, 6.2829e-03],
         [9.4115e-02, 1.3031e-02, 9.1326e-04,  ..., 2.8836e-04,
          4.3952e-03, 6.2829e-03],
         [5.1049e-01, 1.3031e-02, 9.1326e-04,  ..., 2.8836e-04,
          9.8681e-01, 9.8115e-01],
         [2.8024e-01, 9.3000e-01, 1.3808e-03,  ..., 2.8836e-04,
          4.3952e-03, 6.2829e-03]],
        [[1.0632e-02, 1.4584e-04, 9.9568e-01,  ..., 9.9164e-01,
          1.5872e-04, 1.6879e-02],
         [1.0632e-02, 1.4584e-04, 1.4397e-03,  ..., 2.7873e-03,
          1.5872e-04, 1.6879e-02],
         [9.6811e-01, 1.4584e-04, 1.4397e-03,  ..., 2.7873e-03,
          1.5872e-04, 9.4710e-01],
         [1.0632e-02, 9.9956e-01, 1.4397e-03,  ..., 2.7873e-03,
          9.9952e-01, 1.9142e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 205:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9829e-01, 1.9616e-02, 3.2910e-02,  ..., 9.9405e-01,
          9.9879e-01, 1.9182e-02],
         [5.6941e-04, 1.9616e-02, 3.1815e-02,  ..., 1.9840e-03,
          4.0333e-04, 1.9182e-02],
         [5.6941e-04, 1.9616e-02, 4.2235e-02,  ..., 1.9840e-03,
          4.0333e-04, 1.9182e-02],
         [5.6941e-04, 9.4115e-01, 8.9304e-01,  ..., 1.9840e-03,
          4.0333e-04, 9.4246e-01]],
        [[9.8279e-01, 1.7781e-02, 8.2636e-03,  ..., 9.1335e-03,
          1.1652e-02, 1.7834e-03],
         [4.3587e-03, 1.7781e-02, 8.2636e-03,  ..., 9.1335e-03,
          1.1652e-02, 1.7834e-03],
         [8.4899e-03, 1.8703e-02, 8.2636e-03,  ..., 9.1335e-03,
          9.6504e-01, 9.9465e-01],
         [4.3587e-03, 9.4574e-01, 9.7521e-01,  ..., 9.7260e-01,
          1.1652e-02, 1.7834e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5304e-01, 1.3255e-03, 9.9614e-01,  ..., 9.9817e-01,
          1.1930e-02, 9.5612e-03],
         [1.2463e-01, 1.3255e-03, 1.1986e-03,  ..., 5.4140e-04,
          1.1930e-02, 9.5612e-03],
         [4.6906e-01, 1.3255e-03, 1.1986e-03,  ..., 5.4140e-04,
          9.6421e-01, 9.7132e-01],
         [2.5327e-01, 9.9602e-01, 1.4626e-03,  ..., 7.4467e-04,
          1.1930e-02, 9.5612e-03]],
        [[2.2113e-02, 1.8073e-04, 9.9889e-01,  ..., 9.9877e-01,
          8.8140e-04, 9.0017e-03],
         [2.2113e-02, 1.8073e-04, 3.7064e-04,  ..., 4.0976e-04,
          8.8140e-04, 9.0017e-03],
         [9.3195e-01, 1.8073e-04, 3.7064e-04,  ..., 4.0976e-04,
          8.8140e-04, 9.7299e-01],
         [2.3824e-02, 9.9946e-01, 3.7064e-04,  ..., 4.0976e-04,
          9.9736e-01, 9.0017e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 206:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:41,502 [Process: 0] Synchronize training processes
2024-08-19 13:35:41,502 [Process: 0] Evaluating...
2024-08-19 13:35:41,504 [Process: 0] EPOCH 206:
2024-08-19 13:35:41,506 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:42,545 [Process: 0] Synchronize training processes
2024-08-19 13:35:42,545 [Process: 0] Evaluating...
2024-08-19 13:35:42,547 [Process: 0] EPOCH 207:
2024-08-19 13:35:42,548 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9960, 0.0076, 0.0066,  ..., 0.9918, 0.9961, 0.0107],
         [0.0013, 0.0076, 0.0066,  ..., 0.0027, 0.0013, 0.0107],
         [0.0013, 0.0076, 0.0066,  ..., 0.0028, 0.0013, 0.0111],
         [0.0013, 0.9773, 0.9803,  ..., 0.0027, 0.0013, 0.9676]],
        [[0.7684, 0.0044, 0.0131,  ..., 0.0036, 0.0075, 0.0023],
         [0.0542, 0.0044, 0.0131,  ..., 0.0036, 0.0075, 0.0023],
         [0.1245, 0.0044, 0.0131,  ..., 0.0036, 0.9776, 0.9931],
         [0.0529, 0.9869, 0.9606,  ..., 0.9893, 0.0075, 0.0023]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4314e-01, 3.8055e-03, 9.9600e-01,  ..., 9.9950e-01,
          1.1610e-02, 7.1325e-03],
         [1.4443e-01, 3.8055e-03, 1.3330e-03,  ..., 1.6584e-04,
          1.1610e-02, 7.1325e-03],
         [5.0351e-01, 3.8055e-03, 1.3330e-03,  ..., 1.6584e-04,
          9.6517e-01, 9.7860e-01],
         [2.0893e-01, 9.8858e-01, 1.3330e-03,  ..., 1.6584e-04,
          1.1610e-02, 7.1325e-03]],
        [[1.6024e-02, 1.4146e-03, 9.9254e-01,  ..., 9.9505e-01,
          8.2711e-05, 1.2102e-02],
         [1.5734e-02, 1.4146e-03, 2.4883e-03,  ..., 1.6495e-03,
          8.2711e-05, 1.2102e-02],
         [9.5251e-01, 1.4146e-03, 2.4883e-03,  ..., 1.6495e-03,
          8.2711e-05, 9.6369e-01],
         [1.5734e-02, 9.9576e-01, 2.4883e-03,  ..., 1.6495e-03,
          9.9975e-01, 1.2102e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 207:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9835e-01, 5.6409e-03, 1.8290e-02,  ..., 9.9493e-01,
          9.9298e-01, 9.3985e-03],
         [5.4880e-04, 5.6409e-03, 1.8290e-02,  ..., 1.6884e-03,
          2.3415e-03, 9.3985e-03],
         [5.4880e-04, 5.6409e-03, 1.8290e-02,  ..., 1.6884e-03,
          2.3415e-03, 9.3985e-03],
         [5.4880e-04, 9.8308e-01, 9.4513e-01,  ..., 1.6884e-03,
          2.3415e-03, 9.7180e-01]],
        [[9.9329e-01, 5.7140e-03, 8.7813e-03,  ..., 7.6004e-03,
          5.6739e-03, 2.7673e-03],
         [1.9709e-03, 5.7140e-03, 8.7813e-03,  ..., 7.6004e-03,
          5.6739e-03, 2.7673e-03],
         [2.7728e-03, 5.7140e-03, 8.7813e-03,  ..., 7.6004e-03,
          9.8298e-01, 9.9170e-01],
         [1.9709e-03, 9.8286e-01, 9.7366e-01,  ..., 9.7720e-01,
          5.6739e-03, 2.7673e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3817e-02, 9.6922e-03, 9.9322e-01,  ..., 9.9395e-01,
          1.4151e-02, 8.8163e-03],
         [5.6080e-02, 8.2080e-03, 1.7881e-03,  ..., 1.7958e-03,
          1.4151e-02, 8.8163e-03],
         [7.2978e-01, 8.2080e-03, 1.7881e-03,  ..., 1.7958e-03,
          9.5755e-01, 9.7355e-01],
         [1.2033e-01, 9.7389e-01, 3.1988e-03,  ..., 2.4534e-03,
          1.4151e-02, 8.8163e-03]],
        [[1.7984e-02, 6.8268e-05, 9.9572e-01,  ..., 8.3261e-01,
          5.5440e-04, 1.6500e-02],
         [1.6328e-02, 6.8268e-05, 1.4279e-03,  ..., 3.7278e-02,
          5.5440e-04, 1.6500e-02],
         [9.4873e-01, 6.8268e-05, 1.4279e-03,  ..., 3.7278e-02,
          5.5440e-04, 9.4983e-01],
         [1.6953e-02, 9.9980e-01, 1.4279e-03,  ..., 9.2833e-02,
          9.9834e-01, 1.7169e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 208:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:43,591 [Process: 0] Synchronize training processes
2024-08-19 13:35:43,591 [Process: 0] Evaluating...
2024-08-19 13:35:43,593 [Process: 0] EPOCH 208:
2024-08-19 13:35:43,594 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:44,641 [Process: 0] Synchronize training processes
2024-08-19 13:35:44,641 [Process: 0] Evaluating...
2024-08-19 13:35:44,643 [Process: 0] EPOCH 209:
2024-08-19 13:35:44,645 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9601e-01, 7.7102e-03, 1.6365e-02,  ..., 9.9483e-01,
          9.9168e-01, 1.9371e-02],
         [1.3304e-03, 7.7102e-03, 1.6365e-02,  ..., 1.7245e-03,
          2.7722e-03, 1.9371e-02],
         [1.3304e-03, 7.7102e-03, 1.6365e-02,  ..., 1.7245e-03,
          2.7722e-03, 1.9371e-02],
         [1.3304e-03, 9.7687e-01, 9.5090e-01,  ..., 1.7245e-03,
          2.7722e-03, 9.4189e-01]],
        [[9.9798e-01, 5.7863e-03, 1.3375e-02,  ..., 3.2901e-03,
          5.9229e-03, 1.3864e-03],
         [6.7437e-04, 5.7863e-03, 1.3375e-02,  ..., 3.2901e-03,
          5.9229e-03, 1.3864e-03],
         [6.7437e-04, 5.7863e-03, 1.4210e-02,  ..., 3.2901e-03,
          9.8223e-01, 9.9584e-01],
         [6.7437e-04, 9.8264e-01, 9.5904e-01,  ..., 9.9013e-01,
          5.9229e-03, 1.3864e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.6103e-02, 5.1439e-02, 9.9819e-01,  ..., 9.9540e-01,
          1.4699e-02, 1.9432e-02],
         [5.7299e-02, 1.8919e-02, 6.0273e-04,  ..., 1.1055e-03,
          1.4569e-02, 1.6841e-02],
         [7.5164e-01, 1.8919e-02, 6.0273e-04,  ..., 1.1055e-03,
          9.5616e-01, 9.4689e-01],
         [1.1496e-01, 9.1072e-01, 6.0273e-04,  ..., 2.3871e-03,
          1.4569e-02, 1.6841e-02]],
        [[1.7165e-02, 9.1136e-05, 9.9761e-01,  ..., 9.6741e-01,
          3.3522e-04, 1.2628e-02],
         [1.5403e-02, 9.1136e-05, 7.9748e-04,  ..., 9.4747e-03,
          3.3522e-04, 1.2628e-02],
         [9.5203e-01, 9.1136e-05, 7.9748e-04,  ..., 9.4747e-03,
          3.3522e-04, 9.6212e-01],
         [1.5403e-02, 9.9973e-01, 7.9748e-04,  ..., 1.3639e-02,
          9.9899e-01, 1.2628e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 209:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9959e-01, 1.3336e-02, 2.6318e-02,  ..., 9.8272e-01,
          9.9675e-01, 7.9121e-03],
         [1.3620e-04, 1.3336e-02, 2.7355e-02,  ..., 5.6360e-03,
          1.0837e-03, 7.9121e-03],
         [1.3620e-04, 1.3336e-02, 2.6318e-02,  ..., 5.6360e-03,
          1.0837e-03, 7.9121e-03],
         [1.3620e-04, 9.5999e-01, 9.2001e-01,  ..., 6.0129e-03,
          1.0837e-03, 9.7626e-01]],
        [[9.9547e-01, 1.6320e-02, 1.0301e-02,  ..., 6.9625e-03,
          6.3629e-03, 1.3163e-03],
         [1.5092e-03, 1.6320e-02, 1.0301e-02,  ..., 6.9625e-03,
          6.3629e-03, 1.3163e-03],
         [1.5092e-03, 1.9741e-02, 1.0301e-02,  ..., 6.9625e-03,
          9.8091e-01, 9.9605e-01],
         [1.5092e-03, 9.4762e-01, 9.6910e-01,  ..., 9.7911e-01,
          6.3629e-03, 1.3163e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1510e-02, 5.7227e-03, 9.9945e-01,  ..., 9.9128e-01,
          3.7860e-03, 1.9480e-02],
         [5.3842e-02, 5.7227e-03, 1.8344e-04,  ..., 2.9083e-03,
          3.7860e-03, 1.7948e-02],
         [7.5783e-01, 5.7227e-03, 1.8344e-04,  ..., 2.9083e-03,
          9.8864e-01, 9.4462e-01],
         [1.0682e-01, 9.8283e-01, 1.8344e-04,  ..., 2.9083e-03,
          3.7860e-03, 1.7948e-02]],
        [[8.6878e-03, 9.1009e-04, 9.9877e-01,  ..., 9.9781e-01,
          3.5594e-04, 7.3387e-03],
         [8.6878e-03, 9.1009e-04, 4.0854e-04,  ..., 7.2899e-04,
          3.5594e-04, 7.3387e-03],
         [9.7394e-01, 9.1009e-04, 4.0854e-04,  ..., 7.2899e-04,
          3.5594e-04, 9.7798e-01],
         [8.6878e-03, 9.9727e-01, 4.0854e-04,  ..., 7.2899e-04,
          9.9893e-01, 7.3387e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 210:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:45,684 [Process: 0] Synchronize training processes
2024-08-19 13:35:45,685 [Process: 0] Evaluating...
2024-08-19 13:35:45,687 [Process: 0] EPOCH 210:
2024-08-19 13:35:45,688 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:46,728 [Process: 0] Synchronize training processes
2024-08-19 13:35:46,728 [Process: 0] Evaluating...
2024-08-19 13:35:46,730 [Process: 0] EPOCH 211:
2024-08-19 13:35:46,732 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8952e-01, 1.7405e-02, 1.1026e-02,  ..., 9.9631e-01,
          9.9710e-01, 1.1214e-02],
         [3.4939e-03, 1.7405e-02, 1.1026e-02,  ..., 1.2301e-03,
          9.6653e-04, 1.1214e-02],
         [3.4939e-03, 1.7405e-02, 1.1026e-02,  ..., 1.2301e-03,
          9.6653e-04, 1.1214e-02],
         [3.4939e-03, 9.4779e-01, 9.6692e-01,  ..., 1.2301e-03,
          9.6653e-04, 9.6636e-01]],
        [[9.9198e-01, 8.5131e-03, 8.4407e-03,  ..., 1.7670e-02,
          1.2503e-03, 1.4785e-03],
         [2.5183e-03, 8.5131e-03, 8.4407e-03,  ..., 1.5341e-02,
          1.2503e-03, 1.4785e-03],
         [2.9796e-03, 8.5131e-03, 8.4407e-03,  ..., 1.5341e-02,
          9.9625e-01, 9.9556e-01],
         [2.5183e-03, 9.7446e-01, 9.7468e-01,  ..., 9.5165e-01,
          1.2503e-03, 1.4785e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.9537e-02, 4.0952e-03, 9.9968e-01,  ..., 9.9624e-01,
          1.0295e-02, 6.1913e-03],
         [4.1917e-02, 4.0952e-03, 1.0611e-04,  ..., 1.1580e-03,
          1.0295e-02, 6.1913e-03],
         [8.4712e-01, 4.0952e-03, 1.0611e-04,  ..., 1.1580e-03,
          9.6911e-01, 9.8143e-01],
         [5.1430e-02, 9.8771e-01, 1.0611e-04,  ..., 1.4436e-03,
          1.0295e-02, 6.1913e-03]],
        [[1.1260e-02, 1.9003e-03, 9.9382e-01,  ..., 9.9447e-01,
          7.1665e-04, 1.8522e-02],
         [1.1260e-02, 1.9003e-03, 2.0592e-03,  ..., 1.8441e-03,
          7.1665e-04, 1.8059e-02],
         [9.6622e-01, 1.9003e-03, 2.0592e-03,  ..., 1.8441e-03,
          7.1665e-04, 9.4379e-01],
         [1.1260e-02, 9.9430e-01, 2.0592e-03,  ..., 1.8441e-03,
          9.9785e-01, 1.9628e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 211:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8801e-01, 2.1056e-02, 4.3307e-03,  ..., 9.7394e-01,
          9.9023e-01, 2.0971e-02],
         [3.9959e-03, 2.1056e-02, 4.3307e-03,  ..., 8.5196e-03,
          2.9320e-03, 1.7518e-02],
         [3.9959e-03, 2.1713e-02, 4.3307e-03,  ..., 9.0189e-03,
          2.9320e-03, 1.8348e-02],
         [3.9959e-03, 9.3618e-01, 9.8701e-01,  ..., 8.5196e-03,
          3.9052e-03, 9.4316e-01]],
        [[9.8930e-01, 7.3917e-03, 2.0639e-02,  ..., 3.4687e-02,
          2.9280e-03, 7.2002e-04],
         [2.5817e-03, 7.3917e-03, 2.0639e-02,  ..., 3.4429e-02,
          2.9280e-03, 7.2002e-04],
         [5.5333e-03, 7.3917e-03, 2.0639e-02,  ..., 5.3451e-02,
          9.9122e-01, 9.9784e-01],
         [2.5817e-03, 9.7782e-01, 9.3808e-01,  ..., 8.7743e-01,
          2.9280e-03, 7.2002e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0811, 0.0058, 0.9867,  ..., 0.9673, 0.0126, 0.0144],
         [0.0507, 0.0036, 0.0032,  ..., 0.0084, 0.0120, 0.0143],
         [0.7828, 0.0036, 0.0032,  ..., 0.0084, 0.9635, 0.9569],
         [0.0854, 0.9870, 0.0069,  ..., 0.0160, 0.0120, 0.0143]],
        [[0.0075, 0.0040, 0.9940,  ..., 0.9965, 0.0015, 0.0111],
         [0.0075, 0.0023, 0.0020,  ..., 0.0012, 0.0015, 0.0111],
         [0.9774, 0.0023, 0.0020,  ..., 0.0012, 0.0015, 0.9667],
         [0.0075, 0.9915, 0.0020,  ..., 0.0012, 0.9954, 0.0111]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:35:47,773 [Process: 0] Synchronize training processes
2024-08-19 13:35:47,773 [Process: 0] Evaluating...
2024-08-19 13:35:48,759 [Process: 0] EPOCH 212:
2024-08-19 13:35:48,762 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 212:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9291e-01, 1.0516e-02, 5.6232e-02,  ..., 9.9727e-01,
          9.9868e-01, 1.4350e-02],
         [2.3472e-03, 1.0516e-02, 4.5977e-02,  ..., 9.0958e-04,
          4.4144e-04, 1.4350e-02],
         [2.3921e-03, 1.0516e-02, 6.5875e-02,  ..., 9.0958e-04,
          4.4144e-04, 1.4350e-02],
         [2.3472e-03, 9.6845e-01, 8.3192e-01,  ..., 9.0958e-04,
          4.4144e-04, 9.5695e-01]],
        [[7.3327e-01, 2.8494e-02, 1.0867e-02,  ..., 3.3535e-03,
          4.3377e-03, 2.3119e-03],
         [4.2532e-02, 2.6262e-02, 1.0867e-02,  ..., 3.3535e-03,
          4.3377e-03, 2.3119e-03],
         [1.8166e-01, 2.8106e-02, 1.0867e-02,  ..., 3.3535e-03,
          9.8699e-01, 9.9306e-01],
         [4.2532e-02, 9.1714e-01, 9.6740e-01,  ..., 9.8994e-01,
          4.3377e-03, 2.3119e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8520e-02, 3.2581e-02, 9.8188e-01,  ..., 9.9510e-01,
          1.4548e-02, 2.8439e-02],
         [6.3445e-02, 1.6487e-02, 7.2975e-03,  ..., 1.6334e-03,
          1.4548e-02, 2.6991e-02],
         [7.3955e-01, 1.6487e-02, 5.4104e-03,  ..., 1.6334e-03,
          9.5625e-01, 9.0594e-01],
         [1.1849e-01, 9.3444e-01, 5.4104e-03,  ..., 1.6334e-03,
          1.4651e-02, 3.8633e-02]],
        [[9.6451e-03, 2.5122e-04, 9.9761e-01,  ..., 9.9558e-01,
          1.9000e-03, 1.1883e-02],
         [9.6451e-03, 2.5122e-04, 7.9561e-04,  ..., 1.4725e-03,
          1.9000e-03, 1.1883e-02],
         [9.7106e-01, 2.5122e-04, 7.9561e-04,  ..., 1.4725e-03,
          1.9000e-03, 9.6435e-01],
         [9.6451e-03, 9.9925e-01, 7.9561e-04,  ..., 1.4725e-03,
          9.9430e-01, 1.1883e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 213:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:49,766 [Process: 0] Synchronize training processes
2024-08-19 13:35:49,766 [Process: 0] Evaluating...
2024-08-19 13:35:49,768 [Process: 0] EPOCH 213:
2024-08-19 13:35:49,770 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:50,812 [Process: 0] Synchronize training processes
2024-08-19 13:35:50,813 [Process: 0] Evaluating...
2024-08-19 13:35:50,814 [Process: 0] EPOCH 214:
2024-08-19 13:35:50,816 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9724e-01, 1.0511e-02, 1.0555e-02,  ..., 9.9686e-01,
          9.7903e-01, 6.0237e-03],
         [9.2110e-04, 1.0511e-02, 1.0555e-02,  ..., 1.0469e-03,
          5.7172e-03, 6.0237e-03],
         [9.2110e-04, 1.0511e-02, 1.0555e-02,  ..., 1.0469e-03,
          9.5320e-03, 6.0237e-03],
         [9.2110e-04, 9.6847e-01, 9.6833e-01,  ..., 1.0469e-03,
          5.7172e-03, 9.8193e-01]],
        [[9.8729e-01, 5.5482e-03, 8.2481e-03,  ..., 1.0869e-02,
          2.4527e-02, 3.0297e-03],
         [3.6786e-03, 5.5482e-03, 8.2481e-03,  ..., 1.0869e-02,
          2.4527e-02, 3.0297e-03],
         [5.3487e-03, 5.5482e-03, 8.2481e-03,  ..., 1.0869e-02,
          9.1816e-01, 9.9091e-01],
         [3.6786e-03, 9.8336e-01, 9.7526e-01,  ..., 9.6739e-01,
          3.2782e-02, 3.0297e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8612e-01, 1.5249e-02, 9.8908e-01,  ..., 9.9742e-01,
          4.5192e-03, 1.1783e-02],
         [1.1934e-01, 8.0797e-03, 3.6395e-03,  ..., 8.5869e-04,
          4.5192e-03, 1.1783e-02],
         [3.9827e-01, 8.0797e-03, 3.6395e-03,  ..., 8.5869e-04,
          9.8644e-01, 9.6459e-01],
         [2.9627e-01, 9.6859e-01, 3.6395e-03,  ..., 8.5869e-04,
          4.5192e-03, 1.1846e-02]],
        [[1.5965e-02, 2.3228e-03, 9.9428e-01,  ..., 9.9906e-01,
          7.2733e-03, 1.4997e-02],
         [1.5965e-02, 2.3228e-03, 1.9070e-03,  ..., 3.1378e-04,
          7.2733e-03, 1.4997e-02],
         [9.5210e-01, 2.3228e-03, 1.9070e-03,  ..., 3.1378e-04,
          7.2733e-03, 9.5288e-01],
         [1.5965e-02, 9.9303e-01, 1.9070e-03,  ..., 3.1378e-04,
          9.7818e-01, 1.7126e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 214:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9782e-01, 2.3597e-02, 7.6032e-03,  ..., 3.4756e-01,
          9.9040e-01, 7.2976e-03],
         [7.2669e-04, 2.3597e-02, 7.6032e-03,  ..., 5.4967e-02,
          3.1673e-03, 7.2976e-03],
         [7.2669e-04, 2.7782e-02, 7.6032e-03,  ..., 6.7460e-02,
          3.2699e-03, 7.2976e-03],
         [7.2669e-04, 9.2502e-01, 9.7719e-01,  ..., 5.3002e-01,
          3.1673e-03, 9.7811e-01]],
        [[9.9138e-01, 8.1505e-03, 1.5754e-02,  ..., 5.4115e-03,
          3.8710e-03, 1.0050e-03],
         [2.0657e-03, 8.1505e-03, 1.5754e-02,  ..., 5.4115e-03,
          3.8710e-03, 1.0050e-03],
         [4.4891e-03, 8.1505e-03, 1.5846e-02,  ..., 5.4115e-03,
          9.8839e-01, 9.9699e-01],
         [2.0657e-03, 9.7555e-01, 9.5264e-01,  ..., 9.8377e-01,
          3.8710e-03, 1.0050e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1574e-01, 4.5267e-02, 9.9608e-01,  ..., 9.9969e-01,
          1.5209e-02, 1.4077e-02],
         [7.0796e-02, 1.3273e-02, 1.3058e-03,  ..., 1.0482e-04,
          1.5209e-02, 1.4077e-02],
         [6.2556e-01, 1.3273e-02, 1.3058e-03,  ..., 1.0482e-04,
          9.5171e-01, 9.5649e-01],
         [1.8791e-01, 9.2819e-01, 1.3058e-03,  ..., 1.0482e-04,
          1.7873e-02, 1.5358e-02]],
        [[2.7756e-02, 5.2010e-03, 9.9609e-01,  ..., 9.9939e-01,
          4.5410e-03, 1.3505e-02],
         [2.7756e-02, 5.2010e-03, 1.3046e-03,  ..., 2.0494e-04,
          2.2808e-03, 1.3505e-02],
         [9.1057e-01, 5.2010e-03, 1.3046e-03,  ..., 2.0494e-04,
          2.2808e-03, 9.5695e-01],
         [3.3917e-02, 9.8440e-01, 1.3046e-03,  ..., 2.0494e-04,
          9.9090e-01, 1.6040e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 215:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:51,860 [Process: 0] Synchronize training processes
2024-08-19 13:35:51,860 [Process: 0] Evaluating...
2024-08-19 13:35:51,862 [Process: 0] EPOCH 215:
2024-08-19 13:35:51,864 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:52,907 [Process: 0] Synchronize training processes
2024-08-19 13:35:52,908 [Process: 0] Evaluating...
2024-08-19 13:35:52,909 [Process: 0] EPOCH 216:
2024-08-19 13:35:52,911 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9968, 0.0069, 0.0157,  ..., 0.9820, 0.9965, 0.0107],
         [0.0011, 0.0069, 0.0157,  ..., 0.0068, 0.0012, 0.0079],
         [0.0011, 0.0069, 0.0160,  ..., 0.0056, 0.0012, 0.0079],
         [0.0011, 0.9793, 0.9527,  ..., 0.0056, 0.0012, 0.9734]],
        [[0.9809, 0.0073, 0.0154,  ..., 0.0040, 0.0014, 0.0027],
         [0.0039, 0.0073, 0.0154,  ..., 0.0040, 0.0014, 0.0027],
         [0.0112, 0.0073, 0.0154,  ..., 0.0040, 0.9959, 0.9918],
         [0.0039, 0.9781, 0.9537,  ..., 0.9879, 0.0014, 0.0027]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1465e-01, 2.5363e-02, 9.9911e-01,  ..., 9.8642e-01,
          1.4704e-02, 9.8043e-03],
         [6.8622e-02, 1.2820e-02, 2.9543e-04,  ..., 3.7906e-03,
          1.4704e-02, 9.8043e-03],
         [6.7817e-01, 1.2820e-02, 2.9543e-04,  ..., 3.7906e-03,
          9.5484e-01, 9.7059e-01],
         [1.3856e-01, 9.4900e-01, 2.9543e-04,  ..., 5.9937e-03,
          1.5754e-02, 9.8043e-03]],
        [[3.2545e-02, 2.7391e-05, 9.9851e-01,  ..., 9.9149e-01,
          6.0895e-02, 1.3139e-02],
         [3.5144e-02, 2.7391e-05, 4.9691e-04,  ..., 2.8358e-03,
          1.2823e-02, 1.3139e-02],
         [8.9714e-01, 2.7391e-05, 4.9691e-04,  ..., 2.8358e-03,
          1.2823e-02, 9.5803e-01],
         [3.5172e-02, 9.9992e-01, 4.9691e-04,  ..., 2.8425e-03,
          9.1346e-01, 1.5689e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 216:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9316, 0.0072, 0.0163,  ..., 0.9851, 0.9912, 0.0179],
         [0.0182, 0.0072, 0.0163,  ..., 0.0050, 0.0029, 0.0169],
         [0.0222, 0.0072, 0.0179,  ..., 0.0049, 0.0029, 0.0169],
         [0.0280, 0.9784, 0.9495,  ..., 0.0049, 0.0029, 0.9483]],
        [[0.9480, 0.0043, 0.0140,  ..., 0.0059, 0.0080, 0.0022],
         [0.0107, 0.0043, 0.0140,  ..., 0.0059, 0.0080, 0.0022],
         [0.0306, 0.0043, 0.0140,  ..., 0.0059, 0.9761, 0.9933],
         [0.0107, 0.9871, 0.9579,  ..., 0.9824, 0.0080, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2774e-02, 1.1571e-03, 9.9914e-01,  ..., 9.9616e-01,
          9.6156e-03, 5.0523e-03],
         [4.7029e-02, 1.1571e-03, 2.8627e-04,  ..., 1.2801e-03,
          9.6156e-03, 5.0523e-03],
         [8.0042e-01, 1.1571e-03, 2.8627e-04,  ..., 1.2801e-03,
          9.7115e-01, 9.8484e-01],
         [7.9774e-02, 9.9653e-01, 2.8627e-04,  ..., 1.2801e-03,
          9.6156e-03, 5.0523e-03]],
        [[5.5662e-02, 2.2676e-05, 9.9865e-01,  ..., 9.9763e-01,
          3.4429e-03, 1.2670e-02],
         [4.2794e-02, 2.2676e-05, 4.5169e-04,  ..., 7.9052e-04,
          3.4429e-03, 1.2670e-02],
         [8.3876e-01, 2.2676e-05, 4.5169e-04,  ..., 7.9052e-04,
          3.4429e-03, 9.5972e-01],
         [6.2779e-02, 9.9993e-01, 4.5169e-04,  ..., 7.9052e-04,
          9.8967e-01, 1.4941e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:35:53,954 [Process: 0] Synchronize training processes
2024-08-19 13:35:53,954 [Process: 0] Evaluating...
2024-08-19 13:35:53,956 [Process: 0] EPOCH 217:
2024-08-19 13:35:53,958 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:54,998 [Process: 0] Synchronize training processes
2024-08-19 13:35:54,999 [Process: 0] Evaluating...
2024-08-19 13:35:55,000 [Process: 0] EPOCH 218:
2024-08-19 13:35:55,002 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 217:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9803e-01, 8.4114e-03, 1.2520e-02,  ..., 9.4766e-01,
          9.8635e-01, 8.8089e-03],
         [6.5730e-04, 8.4114e-03, 1.2520e-02,  ..., 1.8819e-02,
          4.3604e-03, 8.8089e-03],
         [6.5730e-04, 8.4114e-03, 1.2731e-02,  ..., 1.7259e-02,
          4.9247e-03, 8.8089e-03],
         [6.5730e-04, 9.7477e-01, 9.6223e-01,  ..., 1.6264e-02,
          4.3604e-03, 9.7357e-01]],
        [[7.3110e-01, 1.0956e-02, 3.3692e-03,  ..., 6.4063e-03,
          6.0467e-03, 8.3384e-04],
         [3.5672e-02, 1.1530e-02, 3.3692e-03,  ..., 6.4063e-03,
          6.0467e-03, 8.3384e-04],
         [1.9865e-01, 1.0956e-02, 3.3692e-03,  ..., 6.4063e-03,
          9.8186e-01, 9.9750e-01],
         [3.4580e-02, 9.6656e-01, 9.8989e-01,  ..., 9.8078e-01,
          6.0467e-03, 8.3384e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4533e-02, 2.4743e-03, 9.9898e-01,  ..., 8.9939e-01,
          7.6736e-03, 4.4428e-03],
         [5.1785e-02, 2.4743e-03, 3.3898e-04,  ..., 1.5942e-02,
          7.6736e-03, 4.4428e-03],
         [7.6204e-01, 2.4743e-03, 3.3898e-04,  ..., 1.5942e-02,
          9.7698e-01, 9.8667e-01],
         [9.1647e-02, 9.9258e-01, 3.3898e-04,  ..., 6.8730e-02,
          7.6736e-03, 4.4428e-03]],
        [[2.1006e-02, 1.2142e-04, 9.9969e-01,  ..., 9.9771e-01,
          2.6636e-03, 2.4174e-02],
         [1.9817e-02, 1.2142e-04, 1.0244e-04,  ..., 7.6251e-04,
          2.6636e-03, 2.2126e-02],
         [9.3784e-01, 1.2142e-04, 1.0244e-04,  ..., 7.6251e-04,
          2.6636e-03, 9.2650e-01],
         [2.1335e-02, 9.9964e-01, 1.0244e-04,  ..., 7.6251e-04,
          9.9201e-01, 2.7197e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 218:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9708e-01, 1.0754e-02, 3.0222e-02,  ..., 9.9062e-01,
          9.9607e-01, 1.8252e-02],
         [9.4188e-04, 1.0754e-02, 1.9602e-02,  ..., 3.1284e-03,
          1.3110e-03, 1.8252e-02],
         [1.0410e-03, 1.0754e-02, 1.9602e-02,  ..., 3.1284e-03,
          1.3110e-03, 2.4059e-02],
         [9.4188e-04, 9.6774e-01, 9.3057e-01,  ..., 3.1284e-03,
          1.3110e-03, 9.3944e-01]],
        [[9.9506e-01, 6.0863e-03, 7.6763e-03,  ..., 6.5865e-02,
          1.7293e-02, 6.3581e-04],
         [1.3763e-03, 6.0863e-03, 7.6763e-03,  ..., 3.8676e-02,
          9.3674e-01, 6.3581e-04],
         [2.1849e-03, 6.0863e-03, 7.6763e-03,  ..., 6.5992e-02,
          3.0366e-02, 9.9809e-01],
         [1.3763e-03, 9.8174e-01, 9.7697e-01,  ..., 8.2947e-01,
          1.5605e-02, 6.3581e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.2858e-02, 9.0462e-03, 9.9639e-01,  ..., 9.2433e-01,
          1.1958e-02, 7.8332e-03],
         [3.8184e-02, 9.0462e-03, 1.2024e-03,  ..., 2.3246e-02,
          1.1929e-02, 7.8332e-03],
         [8.4041e-01, 9.0462e-03, 1.2024e-03,  ..., 2.7790e-02,
          9.6418e-01, 9.7650e-01],
         [5.8548e-02, 9.7286e-01, 1.2024e-03,  ..., 2.4635e-02,
          1.1929e-02, 7.8332e-03]],
        [[1.3654e-01, 4.5917e-04, 9.9632e-01,  ..., 9.9873e-01,
          4.9420e-01, 6.9917e-03],
         [8.0879e-02, 4.5917e-04, 1.2015e-03,  ..., 4.2316e-04,
          3.1742e-02, 6.9917e-03],
         [6.0849e-01, 4.5917e-04, 1.2015e-03,  ..., 4.2316e-04,
          3.1742e-02, 9.7902e-01],
         [1.7409e-01, 9.9862e-01, 1.2729e-03,  ..., 4.2316e-04,
          4.4232e-01, 6.9917e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:35:56,043 [Process: 0] Synchronize training processes
2024-08-19 13:35:56,043 [Process: 0] Evaluating...
2024-08-19 13:35:56,045 [Process: 0] EPOCH 219:
2024-08-19 13:35:56,047 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:35:57,089 [Process: 0] Synchronize training processes
2024-08-19 13:35:57,089 [Process: 0] Evaluating...
2024-08-19 13:35:57,091 [Process: 0] EPOCH 220:
2024-08-19 13:35:57,092 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 219:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9151e-01, 1.5285e-02, 1.0600e-02,  ..., 6.0931e-02,
          9.8762e-01, 1.1216e-02],
         [2.8300e-03, 1.5285e-02, 1.0600e-02,  ..., 3.4609e-02,
          3.8326e-03, 1.1216e-02],
         [2.8300e-03, 1.5285e-02, 1.0600e-02,  ..., 4.0370e-02,
          3.8326e-03, 1.1216e-02],
         [2.8300e-03, 9.5415e-01, 9.6820e-01,  ..., 8.6409e-01,
          4.7107e-03, 9.6635e-01]],
        [[9.9870e-01, 9.0415e-03, 1.2221e-02,  ..., 7.0419e-03,
          1.3612e-02, 4.4014e-03],
         [4.3221e-04, 9.0415e-03, 1.2221e-02,  ..., 7.0419e-03,
          1.2876e-02, 4.4014e-03],
         [4.3221e-04, 9.0415e-03, 1.2221e-02,  ..., 7.0419e-03,
          9.6064e-01, 9.8680e-01],
         [4.3221e-04, 9.7288e-01, 9.6334e-01,  ..., 9.7887e-01,
          1.2876e-02, 4.4014e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4169e-02, 6.2048e-04, 9.9635e-01,  ..., 9.9704e-01,
          5.6587e-03, 9.2588e-03],
         [5.1344e-02, 6.2048e-04, 9.4060e-04,  ..., 8.0306e-04,
          5.6587e-03, 9.2588e-03],
         [7.4066e-01, 6.2048e-04, 9.4060e-04,  ..., 8.0306e-04,
          9.8302e-01, 9.7222e-01],
         [1.1383e-01, 9.9814e-01, 1.7695e-03,  ..., 1.3491e-03,
          5.6587e-03, 9.2588e-03]],
        [[2.4853e-02, 9.6084e-04, 9.9103e-01,  ..., 9.9871e-01,
          1.1293e-03, 8.4888e-03],
         [2.1669e-02, 9.6084e-04, 2.9901e-03,  ..., 4.3141e-04,
          1.1293e-03, 8.4888e-03],
         [9.2724e-01, 9.6084e-04, 2.9901e-03,  ..., 4.3141e-04,
          1.1293e-03, 9.7453e-01],
         [2.6234e-02, 9.9712e-01, 2.9901e-03,  ..., 4.3141e-04,
          9.9661e-01, 8.4888e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 220:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 179, in train_one_epoch
    for i, batch in enumerate(self.train_loader):
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in __getitem__
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in <listcomp>
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 55, in is_yellow
    return (color[0] > 1 - tolerance and color[1] > 1 - tolerance and color[2] < tolerance)
KeyboardInterrupt