2024-08-16 10:53:40,313 [Worker 0] Is distributed: False
2024-08-16 10:53:40,314 [Process: 0] Starting training
2024-08-16 10:53:40,314 [Process: 0] EPOCH 1:
2024-08-16 10:53:40,316 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2288, 0.2102, 0.2691,  ..., 0.3613, 0.3844, 0.3568],
         [0.2360, 0.3695, 0.2254,  ..., 0.2129, 0.2029, 0.2303],
         [0.3065, 0.2102, 0.2067,  ..., 0.2129, 0.2029, 0.2065],
         [0.2288, 0.2102, 0.2988,  ..., 0.2129, 0.2099, 0.2065]],
        [[0.2659, 0.2759, 0.2439,  ..., 0.2364, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2683,  ..., 0.2658, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2439,  ..., 0.2615, 0.3221, 0.2638],
         [0.2447, 0.2414, 0.2439,  ..., 0.2364, 0.2260, 0.2454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:53:42,886 [Process: 0] Synchronize training processes
2024-08-16 10:53:42,887 [Process: 0] Evaluating...
2024-08-16 10:53:42,889 [Process: 0] EPOCH 2:
2024-08-16 10:53:42,891 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2882, 0.4238, 0.3877,  ..., 0.3149, 0.4435, 0.5030],
         [0.3697, 0.1921, 0.2041,  ..., 0.3509, 0.1834, 0.2029],
         [0.1710, 0.1921, 0.2041,  ..., 0.1671, 0.1897, 0.1471],
         [0.1710, 0.1921, 0.2041,  ..., 0.1671, 0.1834, 0.1471]],
        [[0.1494, 0.1406, 0.1160,  ..., 0.0669, 0.1700, 0.1651],
         [0.1494, 0.1406, 0.1160,  ..., 0.3106, 0.0889, 0.1651],
         [0.4959, 0.5782, 0.3429,  ..., 0.1245, 0.3301, 0.3290],
         [0.2054, 0.1406, 0.4250,  ..., 0.4979, 0.4110, 0.3407]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2747, 0.1226, 0.1605,  ..., 0.2697, 0.2459, 0.8143],
         [0.3113, 0.1253, 0.5186,  ..., 0.3044, 0.2459, 0.0745],
         [0.2200, 0.1226, 0.1605,  ..., 0.1229, 0.2623, 0.0671],
         [0.1941, 0.6296, 0.1605,  ..., 0.3031, 0.2459, 0.0441]],
        [[0.1974, 0.2500, 0.4925,  ..., 0.5630, 0.1780, 0.3885],
         [0.1974, 0.2500, 0.1344,  ..., 0.1457, 0.1780, 0.1959],
         [0.1974, 0.2500, 0.1344,  ..., 0.1457, 0.4661, 0.2196],
         [0.4079, 0.2500, 0.2387,  ..., 0.1457, 0.1780, 0.1959]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:53:44,790 [Process: 0] Synchronize training processes
2024-08-16 10:53:44,791 [Process: 0] Evaluating...
2024-08-16 10:53:44,792 [Process: 0] EPOCH 3:
2024-08-16 10:53:44,794 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5272, 0.2005, 0.2500,  ..., 0.2500, 0.1868, 0.2500],
         [0.1576, 0.3125, 0.2500,  ..., 0.2500, 0.1868, 0.2500],
         [0.1576, 0.2420, 0.2500,  ..., 0.2500, 0.1868, 0.2500],
         [0.1576, 0.2450, 0.2500,  ..., 0.2500, 0.4397, 0.2500]],
        [[0.2165, 0.7773, 0.1094,  ..., 0.0820, 0.2500, 0.1724],
         [0.3505, 0.0536, 0.1281,  ..., 0.4066, 0.2500, 0.5305],
         [0.2165, 0.0345, 0.1634,  ..., 0.3976, 0.2500, 0.1964],
         [0.2165, 0.1346, 0.5991,  ..., 0.1138, 0.2500, 0.1007]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2432, 0.2354, 0.2747,  ..., 0.1795, 0.2497, 0.5771],
         [0.2432, 0.4111, 0.4330,  ..., 0.4616, 0.2812, 0.1919],
         [0.2432, 0.1767, 0.1386,  ..., 0.1795, 0.2346, 0.1155],
         [0.2703, 0.1767, 0.1537,  ..., 0.1795, 0.2346, 0.1155]],
        [[0.1135, 0.1623, 0.1553,  ..., 0.8203, 0.1299, 0.1208],
         [0.0752, 0.1795, 0.1553,  ..., 0.0572, 0.1299, 0.1208],
         [0.5245, 0.1906, 0.5341,  ..., 0.0652, 0.6103, 0.4957],
         [0.2868, 0.4676, 0.1553,  ..., 0.0572, 0.1299, 0.2626]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:53:46,670 [Process: 0] Synchronize training processes
2024-08-16 10:53:46,671 [Process: 0] Evaluating...
2024-08-16 10:53:46,673 [Process: 0] EPOCH 4:
2024-08-16 10:53:46,675 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3391, 0.0830, 0.1878,  ..., 0.3444, 0.1450, 0.1553],
         [0.1348, 0.0578, 0.1878,  ..., 0.2185, 0.1450, 0.1080],
         [0.0743, 0.8015, 0.4367,  ..., 0.2185, 0.5650, 0.6287],
         [0.4518, 0.0578, 0.1878,  ..., 0.2185, 0.1450, 0.1080]],
        [[0.1270, 0.1024, 0.1352,  ..., 0.0982, 0.2028, 0.1696],
         [0.5888, 0.3489, 0.5945,  ..., 0.3578, 0.4888, 0.3547],
         [0.1270, 0.1321, 0.1352,  ..., 0.4458, 0.1564, 0.3061],
         [0.1572, 0.4166, 0.1352,  ..., 0.0982, 0.1520, 0.1696]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1843, 0.0886, 0.2001,  ..., 0.5452, 0.2500, 0.1333],
         [0.4472, 0.2730, 0.2605,  ..., 0.1159, 0.2500, 0.1333],
         [0.1843, 0.0799, 0.2001,  ..., 0.0575, 0.2500, 0.6001],
         [0.1843, 0.5585, 0.3393,  ..., 0.2813, 0.2500, 0.1333]],
        [[0.2487, 0.1879, 0.2356,  ..., 0.1784, 0.2500, 0.1893],
         [0.2487, 0.1879, 0.2336,  ..., 0.1784, 0.2500, 0.1395],
         [0.2487, 0.1879, 0.2255,  ..., 0.4649, 0.2500, 0.1395],
         [0.2540, 0.4364, 0.3054,  ..., 0.1784, 0.2500, 0.5317]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:53:48,569 [Process: 0] Synchronize training processes
2024-08-16 10:53:48,570 [Process: 0] Evaluating...
2024-08-16 10:53:48,571 [Process: 0] EPOCH 5:
2024-08-16 10:53:48,573 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2095, 0.2326, 0.5628,  ..., 0.4903, 0.2500, 0.3499],
         [0.2120, 0.2326, 0.1457,  ..., 0.1736, 0.2500, 0.2167],
         [0.3691, 0.3022, 0.1457,  ..., 0.1680, 0.2500, 0.2167],
         [0.2095, 0.2326, 0.1457,  ..., 0.1680, 0.2500, 0.2167]],
        [[0.4056, 0.2550, 0.2500,  ..., 0.2285, 0.2356, 0.3231],
         [0.0962, 0.3200, 0.2500,  ..., 0.2979, 0.2356, 0.1697],
         [0.1849, 0.2125, 0.2500,  ..., 0.2452, 0.2356, 0.2275],
         [0.3133, 0.2125, 0.2500,  ..., 0.2285, 0.2931, 0.2797]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2992, 0.1170, 0.2296,  ..., 0.3111, 0.3395, 0.2500],
         [0.4945, 0.5190, 0.4313,  ..., 0.2296, 0.1703, 0.2500],
         [0.1103, 0.1170, 0.1696,  ..., 0.2296, 0.2972, 0.2500],
         [0.0959, 0.2470, 0.1696,  ..., 0.2296, 0.1930, 0.2500]],
        [[0.1985, 0.2711, 0.2164,  ..., 0.4095, 0.2500, 0.1427],
         [0.2002, 0.2553, 0.3507,  ..., 0.1228, 0.2500, 0.0995],
         [0.1675, 0.2368, 0.2164,  ..., 0.3450, 0.2500, 0.2931],
         [0.4338, 0.2368, 0.2164,  ..., 0.1228, 0.2500, 0.4647]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:53:50,488 [Process: 0] Synchronize training processes
2024-08-16 10:53:50,488 [Process: 0] Evaluating...
2024-08-16 10:53:50,490 [Process: 0] EPOCH 6:
2024-08-16 10:53:50,492 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3495, 0.2417, 0.2500,  ..., 0.1246, 0.1878, 0.6903],
         [0.2098, 0.2748, 0.2500,  ..., 0.4343, 0.2527, 0.1205],
         [0.2308, 0.2417, 0.2500,  ..., 0.1028, 0.2209, 0.0835],
         [0.2098, 0.2417, 0.2500,  ..., 0.3383, 0.3386, 0.1057]],
        [[0.1154, 0.2500, 0.1307,  ..., 0.5096, 0.1763, 0.2037],
         [0.1678, 0.2500, 0.0762,  ..., 0.0963, 0.1832, 0.2742],
         [0.0610, 0.2500, 0.5394,  ..., 0.1685, 0.1448, 0.0940],
         [0.6559, 0.2500, 0.2536,  ..., 0.2256, 0.4957, 0.4281]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1248, 0.1332, 0.1067,  ..., 0.0934, 0.1173, 0.4761],
         [0.3333, 0.4729, 0.1067,  ..., 0.4395, 0.5823, 0.2671],
         [0.1248, 0.2606, 0.4580,  ..., 0.1591, 0.1173, 0.1146],
         [0.4172, 0.1332, 0.3287,  ..., 0.3079, 0.1831, 0.1423]],
        [[0.2449, 0.2500, 0.5059,  ..., 0.5969, 0.1240, 0.5130],
         [0.2449, 0.2500, 0.1647,  ..., 0.1076, 0.1240, 0.1409],
         [0.2449, 0.2500, 0.1647,  ..., 0.1076, 0.6281, 0.1409],
         [0.2654, 0.2500, 0.1647,  ..., 0.1879, 0.1240, 0.2052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:53:52,395 [Process: 0] Synchronize training processes
2024-08-16 10:53:52,396 [Process: 0] Evaluating...
2024-08-16 10:53:52,398 [Process: 0] EPOCH 7:
2024-08-16 10:53:52,399 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2448, 0.5764, 0.2616,  ..., 0.2238, 0.6636, 0.0571],
         [0.4548, 0.0462, 0.2596,  ..., 0.1540, 0.1793, 0.1637],
         [0.1502, 0.0462, 0.2394,  ..., 0.4689, 0.0785, 0.7221],
         [0.1502, 0.3312, 0.2394,  ..., 0.1533, 0.0785, 0.0571]],
        [[0.2347, 0.1456, 0.1062,  ..., 0.3096, 0.1468, 0.2699],
         [0.2347, 0.1783, 0.1062,  ..., 0.2301, 0.1563, 0.2434],
         [0.2959, 0.1688, 0.6815,  ..., 0.2301, 0.4901, 0.2434],
         [0.2347, 0.5073, 0.1062,  ..., 0.2301, 0.2067, 0.2434]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1177, 0.0889, 0.0640,  ..., 0.1098, 0.2211, 0.0820],
         [0.4524, 0.5112, 0.4132,  ..., 0.4198, 0.2575, 0.2611],
         [0.3120, 0.2940, 0.4041,  ..., 0.1098, 0.2920, 0.5749],
         [0.1179, 0.1059, 0.1187,  ..., 0.3606, 0.2294, 0.0820]],
        [[0.3552, 0.2261, 0.6848,  ..., 0.2500, 0.2500, 0.1478],
         [0.2149, 0.2261, 0.1051,  ..., 0.2500, 0.2500, 0.1286],
         [0.2149, 0.3216, 0.1051,  ..., 0.2500, 0.2500, 0.1073],
         [0.2149, 0.2261, 0.1051,  ..., 0.2500, 0.2500, 0.6162]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 10:53:54,297 [Process: 0] Synchronize training processes
2024-08-16 10:53:54,297 [Process: 0] Evaluating...
2024-08-16 10:53:54,299 [Process: 0] EPOCH 8:
2024-08-16 10:53:54,301 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2416, 0.1127, 0.1724,  ..., 0.4957, 0.1805, 0.0611],
         [0.4499, 0.0803, 0.1792,  ..., 0.2293, 0.3265, 0.5636],
         [0.0862, 0.0508, 0.4759,  ..., 0.0598, 0.1805, 0.2322],
         [0.2223, 0.7562, 0.1724,  ..., 0.2152, 0.3125, 0.1431]],
        [[0.1987, 0.1612, 0.1508,  ..., 0.1612, 0.2365, 0.2500],
         [0.1840, 0.1612, 0.1229,  ..., 0.1612, 0.2365, 0.2500],
         [0.4086, 0.4713, 0.4848,  ..., 0.5164, 0.2365, 0.2500],
         [0.2087, 0.2063, 0.2415,  ..., 0.1612, 0.2905, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1263, 0.2500, 0.2500,  ..., 0.2348, 0.2500, 0.3732],
         [0.6212, 0.2500, 0.2500,  ..., 0.2956, 0.2500, 0.2623],
         [0.1263, 0.2500, 0.2500,  ..., 0.2348, 0.2500, 0.1823],
         [0.1263, 0.2500, 0.2500,  ..., 0.2348, 0.2500, 0.1823]],
        [[0.3154, 0.0876, 0.2188,  ..., 0.6929, 0.2651, 0.0783],
         [0.2786, 0.2642, 0.1874,  ..., 0.0717, 0.0820, 0.0783],
         [0.2443, 0.2794, 0.3147,  ..., 0.1637, 0.2795, 0.7583],
         [0.1618, 0.3688, 0.2791,  ..., 0.0717, 0.3733, 0.0850]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2076, 0.1648, 0.2776,  ..., 0.2500, 0.2500, 0.1947],
         [0.3771, 0.5055, 0.2694,  ..., 0.2500, 0.2500, 0.4158],
         [0.2076, 0.1648, 0.2265,  ..., 0.2500, 0.2500, 0.1947],
         [0.2076, 0.1648, 0.2265,  ..., 0.2500, 0.2500, 0.1947]],
        [[0.3492, 0.2500, 0.1044,  ..., 0.1703, 0.1113, 0.4015],
         [0.1971, 0.2500, 0.1044,  ..., 0.0826, 0.1113, 0.0795],
         [0.2566, 0.2500, 0.6123,  ..., 0.4159, 0.6660, 0.0314],
         [0.1971, 0.2500, 0.1789,  ..., 0.3311, 0.1113, 0.4876]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:53:56,195 [Process: 0] Synchronize training processes
2024-08-16 10:53:56,196 [Process: 0] Evaluating...
2024-08-16 10:53:56,198 [Process: 0] EPOCH 9:
2024-08-16 10:53:56,199 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4481, 0.0821, 0.1862,  ..., 0.3002, 0.1886, 0.1983],
         [0.1840, 0.3195, 0.2549,  ..., 0.2994, 0.3021, 0.2073],
         [0.1840, 0.5163, 0.1862,  ..., 0.1294, 0.3208, 0.4418],
         [0.1840, 0.0821, 0.3726,  ..., 0.2710, 0.1886, 0.1526]],
        [[0.1850, 0.2410, 0.2361,  ..., 0.3795, 0.2380, 0.1619],
         [0.2048, 0.2410, 0.2220,  ..., 0.1889, 0.2380, 0.4974],
         [0.1017, 0.2770, 0.3198,  ..., 0.1889, 0.2860, 0.1112],
         [0.5085, 0.2410, 0.2220,  ..., 0.2428, 0.2380, 0.2295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2383, 0.3743, 0.1516,  ..., 0.2373, 0.1443, 0.2907],
         [0.3383, 0.2623, 0.2125,  ..., 0.2889, 0.2763, 0.2843],
         [0.2117, 0.2093, 0.3706,  ..., 0.2016, 0.1443, 0.1806],
         [0.2117, 0.1541, 0.2653,  ..., 0.2723, 0.4351, 0.2444]],
        [[0.1425, 0.2405, 0.2015,  ..., 0.2234, 0.4464, 0.2500],
         [0.1425, 0.2405, 0.2380,  ..., 0.1330, 0.1029, 0.2500],
         [0.5476, 0.2785, 0.1873,  ..., 0.1149, 0.3358, 0.2500],
         [0.1674, 0.2405, 0.3732,  ..., 0.5287, 0.1149, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:53:58,095 [Process: 0] Synchronize training processes
2024-08-16 10:53:58,095 [Process: 0] Evaluating...
2024-08-16 10:53:58,097 [Process: 0] EPOCH 10:
2024-08-16 10:53:58,099 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:53:59,999 [Process: 0] Synchronize training processes
2024-08-16 10:54:00,000 [Process: 0] Evaluating...
2024-08-16 10:54:00,002 [Process: 0] EPOCH 11:
2024-08-16 10:54:00,004 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3437, 0.1717, 0.2176,  ..., 0.2298, 0.0953, 0.2168],
         [0.2551, 0.1771, 0.3472,  ..., 0.2546, 0.0953, 0.4224],
         [0.2006, 0.3817, 0.2176,  ..., 0.2857, 0.7142, 0.1109],
         [0.2006, 0.2694, 0.2176,  ..., 0.2298, 0.0953, 0.2499]],
        [[0.2373, 0.2500, 0.5770,  ..., 0.2500, 0.3397, 0.1678],
         [0.2373, 0.2500, 0.1222,  ..., 0.2500, 0.2201, 0.1678],
         [0.2881, 0.2500, 0.1392,  ..., 0.2500, 0.2201, 0.1678],
         [0.2373, 0.2500, 0.1616,  ..., 0.2500, 0.2201, 0.4965]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0694, 0.1503, 0.1646,  ..., 0.0959, 0.1914, 0.2473],
         [0.4470, 0.5492, 0.1646,  ..., 0.2045, 0.1841, 0.3818],
         [0.4141, 0.1503, 0.5063,  ..., 0.6037, 0.3315, 0.1855],
         [0.0694, 0.1503, 0.1646,  ..., 0.0959, 0.2929, 0.1855]],
        [[0.2401, 0.2500, 0.5268,  ..., 0.2500, 0.1907, 0.2500],
         [0.3892, 0.2500, 0.1409,  ..., 0.2500, 0.3498, 0.2500],
         [0.1854, 0.2500, 0.1409,  ..., 0.2500, 0.2995, 0.2500],
         [0.1854, 0.2500, 0.1913,  ..., 0.2500, 0.1599, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:54:01,907 [Process: 0] Synchronize training processes
2024-08-16 10:54:01,907 [Process: 0] Evaluating...
2024-08-16 10:54:01,909 [Process: 0] EPOCH 12:
2024-08-16 10:54:01,911 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2506, 0.1528, 0.1398,  ..., 0.2703, 0.1396, 0.2071],
         [0.1754, 0.3975, 0.1398,  ..., 0.2432, 0.2171, 0.5595],
         [0.3986, 0.1567, 0.3373,  ..., 0.2432, 0.3607, 0.1167],
         [0.1754, 0.2930, 0.3830,  ..., 0.2432, 0.2826, 0.1167]],
        [[0.4797, 0.2720, 0.2413,  ..., 0.4470, 0.2289, 0.2849],
         [0.0956, 0.1546, 0.2413,  ..., 0.2187, 0.1745, 0.3592],
         [0.2187, 0.4187, 0.2760,  ..., 0.1672, 0.3756, 0.1779],
         [0.2060, 0.1546, 0.2413,  ..., 0.1672, 0.2210, 0.1779]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2483, 0.0933, 0.1958,  ..., 0.0787, 0.1288, 0.0802],
         [0.2552, 0.6872, 0.3704,  ..., 0.7439, 0.2676, 0.0988],
         [0.2483, 0.0733, 0.2381,  ..., 0.0987, 0.3325, 0.7408],
         [0.2483, 0.1462, 0.1958,  ..., 0.0787, 0.2711, 0.0802]],
        [[0.3016, 0.3987, 0.1445,  ..., 0.0922, 0.2259, 0.2042],
         [0.1772, 0.1534, 0.1445,  ..., 0.2553, 0.2259, 0.2042],
         [0.1296, 0.2944, 0.5664,  ..., 0.4053, 0.3222, 0.3476],
         [0.3915, 0.1534, 0.1445,  ..., 0.2472, 0.2259, 0.2440]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:54:03,809 [Process: 0] Synchronize training processes
2024-08-16 10:54:03,810 [Process: 0] Evaluating...
2024-08-16 10:54:03,812 [Process: 0] EPOCH 13:
2024-08-16 10:54:03,814 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2742, 0.2335, 0.1153,  ..., 0.1643, 0.2151, 0.1838],
         [0.2622, 0.2996, 0.4187,  ..., 0.2722, 0.2220, 0.1838],
         [0.2318, 0.2335, 0.3507,  ..., 0.1643, 0.3478, 0.4487],
         [0.2318, 0.2335, 0.1153,  ..., 0.3993, 0.2151, 0.1838]],
        [[0.2500, 0.1794, 0.2471,  ..., 0.6026, 0.1428, 0.4137],
         [0.2500, 0.4927, 0.2471,  ..., 0.1227, 0.1428, 0.1059],
         [0.2500, 0.1639, 0.2471,  ..., 0.1434, 0.5716, 0.3745],
         [0.2500, 0.1639, 0.2588,  ..., 0.1313, 0.1428, 0.1059]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1554, 0.1758, 0.1530,  ..., 0.3276, 0.2500, 0.2387],
         [0.7107, 0.2166, 0.2066,  ..., 0.2800, 0.2500, 0.2840],
         [0.0669, 0.1758, 0.3997,  ..., 0.1962, 0.2500, 0.2387],
         [0.0669, 0.4317, 0.2407,  ..., 0.1962, 0.2500, 0.2387]],
        [[0.3159, 0.2054, 0.2268,  ..., 0.1756, 0.3643, 0.2431],
         [0.1958, 0.2054, 0.2283,  ..., 0.1534, 0.2318, 0.2431],
         [0.2925, 0.2054, 0.3181,  ..., 0.3658, 0.1657, 0.2707],
         [0.1958, 0.3838, 0.2268,  ..., 0.3053, 0.2381, 0.2431]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:54:05,711 [Process: 0] Synchronize training processes
2024-08-16 10:54:05,712 [Process: 0] Evaluating...
2024-08-16 10:54:05,714 [Process: 0] EPOCH 14:
2024-08-16 10:54:05,716 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1431, 0.4151, 0.4736,  ..., 0.2216, 0.2186, 0.2084],
         [0.1982, 0.2367, 0.1715,  ..., 0.2216, 0.2386, 0.3748],
         [0.5156, 0.1819, 0.0917,  ..., 0.3351, 0.2186, 0.2084],
         [0.1431, 0.1662, 0.2631,  ..., 0.2216, 0.3242, 0.2084]],
        [[0.5642, 0.2500, 0.1100,  ..., 0.2240, 0.4792, 0.2668],
         [0.1417, 0.2500, 0.0781,  ..., 0.1229, 0.1420, 0.1115],
         [0.1417, 0.2500, 0.0781,  ..., 0.1229, 0.1420, 0.5101],
         [0.1523, 0.2500, 0.7338,  ..., 0.5301, 0.2368, 0.1115]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0990, 0.1755, 0.1428,  ..., 0.5167, 0.2093, 0.1805],
         [0.6531, 0.3890, 0.4239,  ..., 0.1905, 0.3722, 0.2799],
         [0.1490, 0.2600, 0.0906,  ..., 0.1464, 0.2093, 0.2285],
         [0.0990, 0.1755, 0.3426,  ..., 0.1464, 0.2093, 0.3111]],
        [[0.8565, 0.4314, 0.2208,  ..., 0.2996, 0.2247, 0.2385],
         [0.0395, 0.1898, 0.2208,  ..., 0.1709, 0.3259, 0.2385],
         [0.0395, 0.2141, 0.3376,  ..., 0.1934, 0.2247, 0.2846],
         [0.0645, 0.1647, 0.2208,  ..., 0.3361, 0.2247, 0.2385]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:54:07,608 [Process: 0] Synchronize training processes
2024-08-16 10:54:07,608 [Process: 0] Evaluating...
2024-08-16 10:54:07,610 [Process: 0] EPOCH 15:
2024-08-16 10:54:07,612 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4699, 0.1172, 0.3129,  ..., 0.5465, 0.1630, 0.0717],
         [0.0761, 0.4743, 0.2655,  ..., 0.2238, 0.4035, 0.1195],
         [0.3319, 0.2680, 0.0926,  ..., 0.1148, 0.1053, 0.7092],
         [0.1220, 0.1405, 0.3290,  ..., 0.1148, 0.3282, 0.0996]],
        [[0.2500, 0.1676, 0.2773,  ..., 0.2647, 0.0954, 0.2500],
         [0.2500, 0.1676, 0.2098,  ..., 0.2501, 0.0954, 0.2500],
         [0.2500, 0.4973, 0.3031,  ..., 0.2426, 0.6174, 0.2500],
         [0.2500, 0.1676, 0.2098,  ..., 0.2426, 0.1918, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1919, 0.2500, 0.2627,  ..., 0.2107, 0.1818, 0.1553],
         [0.4242, 0.2500, 0.3036,  ..., 0.2006, 0.1773, 0.5342],
         [0.1919, 0.2500, 0.2175,  ..., 0.2006, 0.0716, 0.1553],
         [0.1919, 0.2500, 0.2162,  ..., 0.3881, 0.5692, 0.1553]],
        [[0.2837, 0.1981, 0.3451,  ..., 0.1790, 0.2012, 0.2875],
         [0.2388, 0.1981, 0.2183,  ..., 0.1607, 0.3891, 0.1922],
         [0.2388, 0.1981, 0.2183,  ..., 0.1607, 0.2012, 0.3280],
         [0.2388, 0.4058, 0.2183,  ..., 0.4996, 0.2085, 0.1922]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:54:09,507 [Process: 0] Synchronize training processes
2024-08-16 10:54:09,507 [Process: 0] Evaluating...
2024-08-16 10:54:09,509 [Process: 0] EPOCH 16:
2024-08-16 10:54:09,511 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2139, 0.1447, 0.2635,  ..., 0.2500, 0.1267, 0.2246],
         [0.2797, 0.5250, 0.2098,  ..., 0.2500, 0.2827, 0.4437],
         [0.2925, 0.1233, 0.2216,  ..., 0.2500, 0.1267, 0.1632],
         [0.2139, 0.2070, 0.3051,  ..., 0.2500, 0.4639, 0.1685]],
        [[0.4219, 0.2500, 0.1717,  ..., 0.2500, 0.5825, 0.0878],
         [0.1927, 0.2500, 0.1717,  ..., 0.2500, 0.1392, 0.1161],
         [0.1927, 0.2500, 0.4240,  ..., 0.2500, 0.1392, 0.5909],
         [0.1927, 0.2500, 0.2326,  ..., 0.2500, 0.1392, 0.2052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4404, 0.1913, 0.1947,  ..., 0.1449, 0.2768, 0.2526],
         [0.1068, 0.5180, 0.0973,  ..., 0.4687, 0.2567, 0.2142],
         [0.2034, 0.1177, 0.4666,  ..., 0.2144, 0.2545, 0.2142],
         [0.2495, 0.1731, 0.2414,  ..., 0.1721, 0.2120, 0.3191]],
        [[0.5828, 0.5111, 0.3087,  ..., 0.2500, 0.3518, 0.0687],
         [0.1391, 0.1201, 0.0795,  ..., 0.2500, 0.2969, 0.1164],
         [0.1391, 0.1042, 0.4594,  ..., 0.2500, 0.1757, 0.7462],
         [0.1391, 0.2645, 0.1525,  ..., 0.2500, 0.1757, 0.0687]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:54:11,411 [Process: 0] Synchronize training processes
2024-08-16 10:54:11,411 [Process: 0] Evaluating...
2024-08-16 10:54:11,413 [Process: 0] EPOCH 17:
2024-08-16 10:54:11,415 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2283, 0.2164, 0.2365,  ..., 0.3937, 0.1586, 0.3490],
         [0.3325, 0.3509, 0.2905,  ..., 0.2425, 0.5243, 0.3365],
         [0.1323, 0.2164, 0.2365,  ..., 0.1781, 0.1586, 0.1573],
         [0.3070, 0.2164, 0.2365,  ..., 0.1857, 0.1586, 0.1573]],
        [[0.1738, 0.1764, 0.2500,  ..., 0.1036, 0.1373, 0.4717],
         [0.1738, 0.0983, 0.2500,  ..., 0.2183, 0.1373, 0.1495],
         [0.2323, 0.6322, 0.2500,  ..., 0.5745, 0.5882, 0.1606],
         [0.4200, 0.0931, 0.2500,  ..., 0.1036, 0.1373, 0.2182]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1582, 0.1889, 0.2244,  ..., 0.2413, 0.2353, 0.2089],
         [0.2155, 0.4334, 0.1913,  ..., 0.2761, 0.2940, 0.2644],
         [0.2373, 0.1889, 0.1651,  ..., 0.2413, 0.2353, 0.3446],
         [0.3890, 0.1889, 0.4192,  ..., 0.2413, 0.2353, 0.1821]],
        [[0.1844, 0.2259, 0.2082,  ..., 0.1955, 0.2214, 0.2500],
         [0.1844, 0.1626, 0.2082,  ..., 0.1955, 0.1957, 0.2500],
         [0.4467, 0.4490, 0.3690,  ..., 0.3722, 0.1957, 0.2500],
         [0.1844, 0.1626, 0.2147,  ..., 0.2368, 0.3872, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 10:54:13,324 [Process: 0] Synchronize training processes
2024-08-16 10:54:13,324 [Process: 0] Evaluating...
2024-08-16 10:54:13,326 [Process: 0] EPOCH 18:
2024-08-16 10:54:13,328 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1549, 0.1148, 0.0999,  ..., 0.2037, 0.2609, 0.1485],
         [0.4608, 0.6255, 0.7002,  ..., 0.1781, 0.4079, 0.1485],
         [0.2705, 0.1450, 0.0999,  ..., 0.1229, 0.1656, 0.5546],
         [0.1138, 0.1148, 0.0999,  ..., 0.4953, 0.1656, 0.1485]],
        [[0.4310, 0.3794, 0.1269,  ..., 0.0935, 0.7189, 0.0903],
         [0.1897, 0.1793, 0.1269,  ..., 0.0935, 0.0493, 0.0372],
         [0.1897, 0.1793, 0.5378,  ..., 0.7196, 0.0493, 0.5513],
         [0.1897, 0.2621, 0.2084,  ..., 0.0935, 0.1825, 0.3211]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2368, 0.2005, 0.1425,  ..., 0.1843, 0.2723, 0.1401],
         [0.2368, 0.3985, 0.1425,  ..., 0.1843, 0.3572, 0.5523],
         [0.2897, 0.2005, 0.5726,  ..., 0.3416, 0.1853, 0.1676],
         [0.2368, 0.2005, 0.1425,  ..., 0.2897, 0.1853, 0.1401]],
        [[0.3375, 0.2074, 0.1510,  ..., 0.2500, 0.5014, 0.1330],
         [0.2208, 0.2074, 0.1510,  ..., 0.2500, 0.1662, 0.1307],
         [0.2208, 0.2304, 0.2525,  ..., 0.2500, 0.1662, 0.1316],
         [0.2208, 0.3549, 0.4455,  ..., 0.2500, 0.1662, 0.6047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1910, 0.2386, 0.2117,  ..., 0.7121, 0.2145, 0.1159],
         [0.4270, 0.2537, 0.3648,  ..., 0.0963, 0.3817, 0.1159],
         [0.1910, 0.2692, 0.2117,  ..., 0.0958, 0.2019, 0.1159],
         [0.1910, 0.2386, 0.2117,  ..., 0.0958, 0.2019, 0.6524]],
        [[0.5930, 0.4628, 0.5639,  ..., 0.1581, 0.2161, 0.1652],
         [0.0694, 0.1616, 0.1454,  ..., 0.1581, 0.2161, 0.2781],
         [0.0694, 0.2023, 0.1454,  ..., 0.5257, 0.3517, 0.4062],
         [0.2681, 0.1732, 0.1454,  ..., 0.1581, 0.2161, 0.1505]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:54:15,246 [Process: 0] Synchronize training processes
2024-08-16 10:54:15,247 [Process: 0] Evaluating...
2024-08-16 10:54:15,249 [Process: 0] EPOCH 19:
2024-08-16 10:54:15,251 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1485, 0.2500, 0.2234,  ..., 0.1723, 0.5036, 0.3717],
         [0.4197, 0.2500, 0.2234,  ..., 0.1723, 0.1622, 0.2057],
         [0.2832, 0.2500, 0.3299,  ..., 0.4365, 0.1374, 0.2168],
         [0.1485, 0.2500, 0.2234,  ..., 0.2189, 0.1967, 0.2057]],
        [[0.5576, 0.2378, 0.0716,  ..., 0.2142, 0.1437, 0.2031],
         [0.1303, 0.2141, 0.0455,  ..., 0.1519, 0.1482, 0.2031],
         [0.1071, 0.3339, 0.0611,  ..., 0.4111, 0.1127, 0.2334],
         [0.2049, 0.2141, 0.8217,  ..., 0.2227, 0.5953, 0.3604]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2147, 0.1677, 0.1616,  ..., 0.2722, 0.1520, 0.1976],
         [0.3067, 0.4970, 0.2906,  ..., 0.3766, 0.1602, 0.4073],
         [0.2147, 0.1677, 0.2310,  ..., 0.0501, 0.5513, 0.1976],
         [0.2640, 0.1677, 0.3168,  ..., 0.3010, 0.1366, 0.1976]],
        [[0.2397, 0.2381, 0.1714,  ..., 0.2289, 0.2223, 0.7978],
         [0.2437, 0.1337, 0.2147,  ..., 0.3133, 0.3331, 0.0734],
         [0.2397, 0.3001, 0.1714,  ..., 0.2289, 0.2223, 0.0616],
         [0.2770, 0.3281, 0.4425,  ..., 0.2289, 0.2223, 0.0671]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:54:17,165 [Process: 0] Synchronize training processes
2024-08-16 10:54:17,165 [Process: 0] Evaluating...
2024-08-16 10:54:17,167 [Process: 0] EPOCH 20:
2024-08-16 10:54:17,169 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.7391, 0.1616, 0.1008,  ..., 0.0934, 0.4308, 0.3171],
         [0.1168, 0.2447, 0.6438,  ..., 0.5536, 0.1129, 0.4585],
         [0.0449, 0.4321, 0.1546,  ..., 0.2595, 0.0714, 0.1088],
         [0.0992, 0.1616, 0.1008,  ..., 0.0934, 0.3849, 0.1156]],
        [[0.6729, 0.5405, 0.2238,  ..., 0.5392, 0.3690, 0.2225],
         [0.1258, 0.1376, 0.2037,  ..., 0.1222, 0.2237, 0.2707],
         [0.0667, 0.1376, 0.2262,  ..., 0.2052, 0.2037, 0.1481],
         [0.1347, 0.1843, 0.3463,  ..., 0.1334, 0.2037, 0.3587]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4732, 0.2356, 0.3714,  ..., 0.1656, 0.1166, 0.4749],
         [0.2270, 0.2271, 0.4283,  ..., 0.3421, 0.5029, 0.3275],
         [0.1489, 0.4151, 0.1002,  ..., 0.0968, 0.2638, 0.0988],
         [0.1509, 0.1222, 0.1002,  ..., 0.3956, 0.1166, 0.0988]],
        [[0.5395, 0.2663, 0.2069,  ..., 0.1529, 0.1746, 0.2743],
         [0.0811, 0.1531, 0.3118,  ..., 0.3450, 0.1746, 0.3584],
         [0.0811, 0.1698, 0.2069,  ..., 0.2240, 0.1746, 0.1836],
         [0.2983, 0.4107, 0.2744,  ..., 0.2781, 0.4762, 0.1836]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:54:19,117 [Process: 0] Synchronize training processes
2024-08-16 10:54:19,117 [Process: 0] Evaluating...
2024-08-16 10:54:19,119 [Process: 0] EPOCH 21:
2024-08-16 10:54:19,121 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2338, 0.1121, 0.2500,  ..., 0.2500, 0.1519, 0.2434],
         [0.2985, 0.1424, 0.2500,  ..., 0.2500, 0.5388, 0.1257],
         [0.2338, 0.1121, 0.2500,  ..., 0.2500, 0.1574, 0.3734],
         [0.2338, 0.6334, 0.2500,  ..., 0.2500, 0.1519, 0.2575]],
        [[0.4325, 0.7270, 0.2414,  ..., 0.2500, 0.2633, 0.2436],
         [0.1892, 0.0851, 0.2757,  ..., 0.2500, 0.2474, 0.2053],
         [0.1892, 0.0851, 0.2414,  ..., 0.2500, 0.2980, 0.3458],
         [0.1892, 0.1028, 0.2414,  ..., 0.2500, 0.1913, 0.2053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1493, 0.1660, 0.1921,  ..., 0.2175, 0.1437, 0.1388],
         [0.3545, 0.1660, 0.1425,  ..., 0.3474, 0.3834, 0.3845],
         [0.3470, 0.2306, 0.5229,  ..., 0.2175, 0.3292, 0.0892],
         [0.1493, 0.4374, 0.1425,  ..., 0.2175, 0.1437, 0.3875]],
        [[0.2885, 0.2164, 0.3633,  ..., 0.3649, 0.1616, 0.2500],
         [0.1622, 0.2164, 0.2019,  ..., 0.1405, 0.2246, 0.2500],
         [0.3871, 0.3509, 0.2019,  ..., 0.1405, 0.4522, 0.2500],
         [0.1622, 0.2164, 0.2328,  ..., 0.3541, 0.1616, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:54:21,064 [Process: 0] Synchronize training processes
2024-08-16 10:54:21,064 [Process: 0] Evaluating...
2024-08-16 10:54:21,066 [Process: 0] EPOCH 22:
2024-08-16 10:54:21,068 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1607, 0.2165, 0.0823,  ..., 0.5758, 0.4189, 0.3381],
         [0.1712, 0.3505, 0.1088,  ..., 0.1416, 0.2143, 0.2206],
         [0.4013, 0.2165, 0.2292,  ..., 0.1106, 0.1542, 0.2206],
         [0.2668, 0.2165, 0.5798,  ..., 0.1720, 0.2126, 0.2206]],
        [[0.2040, 0.1695, 0.4044,  ..., 0.2867, 0.1594, 0.6011],
         [0.2040, 0.1695, 0.1985,  ..., 0.2406, 0.1594, 0.1401],
         [0.3881, 0.4916, 0.1985,  ..., 0.2425, 0.5218, 0.1294],
         [0.2040, 0.1695, 0.1985,  ..., 0.2301, 0.1594, 0.1294]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1541, 0.2210, 0.3765,  ..., 0.3494, 0.2180, 0.3759],
         [0.1558, 0.2210, 0.3009,  ..., 0.1522, 0.2180, 0.2587],
         [0.3682, 0.2210, 0.1084,  ..., 0.2762, 0.2238, 0.2437],
         [0.3219, 0.3370, 0.2142,  ..., 0.2222, 0.3402, 0.1217]],
        [[0.6524, 0.4120, 0.1049,  ..., 0.4559, 0.2500, 0.2479],
         [0.1209, 0.1960, 0.1049,  ..., 0.1814, 0.2500, 0.2479],
         [0.0573, 0.1960, 0.4801,  ..., 0.1814, 0.2500, 0.2479],
         [0.1693, 0.1960, 0.3102,  ..., 0.1814, 0.2500, 0.2562]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:54:23,038 [Process: 0] Synchronize training processes
2024-08-16 10:54:23,038 [Process: 0] Evaluating...
2024-08-16 10:54:23,040 [Process: 0] EPOCH 23:
2024-08-16 10:54:23,042 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.1456, 0.1494,  ..., 0.2184, 0.3656, 0.1958],
         [0.2500, 0.2086, 0.1494,  ..., 0.3853, 0.2690, 0.1958],
         [0.2500, 0.3467, 0.4667,  ..., 0.1246, 0.1560, 0.4127],
         [0.2500, 0.2992, 0.2344,  ..., 0.2716, 0.2093, 0.1958]],
        [[0.1462, 0.2500, 0.2357,  ..., 0.5468, 0.2747, 0.2648],
         [0.1125, 0.2500, 0.2928,  ..., 0.1419, 0.2382, 0.1828],
         [0.5262, 0.2500, 0.2357,  ..., 0.1419, 0.2489, 0.1828],
         [0.2151, 0.2500, 0.2357,  ..., 0.1695, 0.2382, 0.3696]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3288, 0.3003, 0.1598,  ..., 0.1005, 0.2058, 0.3146],
         [0.2237, 0.0905, 0.4257,  ..., 0.0782, 0.3825, 0.4225],
         [0.2237, 0.0905, 0.2547,  ..., 0.0630, 0.2058, 0.1314],
         [0.2237, 0.5187, 0.1598,  ..., 0.7583, 0.2058, 0.1314]],
        [[0.0705, 0.2500, 0.2370,  ..., 0.2389, 0.4834, 0.3454],
         [0.0705, 0.2500, 0.1531,  ..., 0.1477, 0.0825, 0.1593],
         [0.6669, 0.2500, 0.1490,  ..., 0.4011, 0.0825, 0.2485],
         [0.1921, 0.2500, 0.4609,  ..., 0.2123, 0.3517, 0.2468]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:54:24,986 [Process: 0] Synchronize training processes
2024-08-16 10:54:24,986 [Process: 0] Evaluating...
2024-08-16 10:54:24,988 [Process: 0] EPOCH 24:
2024-08-16 10:54:24,990 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1008, 0.2694, 0.2335,  ..., 0.1151, 0.2400, 0.4044],
         [0.6976, 0.2676, 0.3770,  ..., 0.6116, 0.2799, 0.1985],
         [0.1008, 0.2315, 0.2430,  ..., 0.0723, 0.2400, 0.1985],
         [0.1008, 0.2315, 0.1465,  ..., 0.2010, 0.2400, 0.1985]],
        [[0.3242, 0.2484, 0.1137,  ..., 0.3554, 0.2500, 0.2944],
         [0.1359, 0.2484, 0.1137,  ..., 0.1186, 0.2500, 0.1764],
         [0.1359, 0.2484, 0.6174,  ..., 0.1186, 0.2500, 0.0840],
         [0.4041, 0.2547, 0.1553,  ..., 0.4073, 0.2500, 0.4453]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1097, 0.0792, 0.2081,  ..., 0.1897, 0.1608, 0.2755],
         [0.2099, 0.5857, 0.2081,  ..., 0.1695, 0.4134, 0.2844],
         [0.5706, 0.1749, 0.3757,  ..., 0.1695, 0.2650, 0.0993],
         [0.1097, 0.1603, 0.2081,  ..., 0.4713, 0.1608, 0.3408]],
        [[0.2103, 0.2146, 0.2172,  ..., 0.3186, 0.4645, 0.1672],
         [0.2103, 0.2146, 0.3483,  ..., 0.0959, 0.1532, 0.1672],
         [0.3692, 0.3562, 0.2172,  ..., 0.4444, 0.2291, 0.4985],
         [0.2103, 0.2146, 0.2172,  ..., 0.1412, 0.1532, 0.1672]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:54:26,963 [Process: 0] Synchronize training processes
2024-08-16 10:54:26,963 [Process: 0] Evaluating...
2024-08-16 10:54:26,965 [Process: 0] EPOCH 25:
2024-08-16 10:54:26,967 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1536, 0.1772, 0.1386,  ..., 0.2529, 0.2669, 0.3027],
         [0.3828, 0.5045, 0.4005,  ..., 0.3535, 0.2549, 0.2528],
         [0.1536, 0.2031, 0.2960,  ..., 0.1267, 0.2391, 0.2215],
         [0.3100, 0.1152, 0.1650,  ..., 0.2669, 0.2391, 0.2230]],
        [[0.3171, 0.2118, 0.2500,  ..., 0.2998, 0.4218, 0.4577],
         [0.2174, 0.2118, 0.2500,  ..., 0.1860, 0.0990, 0.1160],
         [0.2482, 0.2118, 0.2500,  ..., 0.1860, 0.1260, 0.1730],
         [0.2174, 0.3645, 0.2500,  ..., 0.3282, 0.3532, 0.2533]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0806, 0.1666, 0.2500,  ..., 0.1285, 0.1804, 0.1780],
         [0.0806, 0.1666, 0.2500,  ..., 0.4317, 0.3185, 0.1780],
         [0.7581, 0.3385, 0.2500,  ..., 0.1285, 0.3207, 0.2667],
         [0.0806, 0.3283, 0.2500,  ..., 0.3112, 0.1804, 0.3772]],
        [[0.1649, 0.4428, 0.1293,  ..., 0.2597, 0.3800, 0.1580],
         [0.5281, 0.1124, 0.3538,  ..., 0.1322, 0.1179, 0.1580],
         [0.1057, 0.1879, 0.3164,  ..., 0.4133, 0.1659, 0.5235],
         [0.2014, 0.2569, 0.2005,  ..., 0.1947, 0.3363, 0.1605]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:54:28,927 [Process: 0] Synchronize training processes
2024-08-16 10:54:28,927 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1203, 0.1871, 0.2046,  ..., 0.2459, 0.2497, 0.1679],
         [0.6034, 0.1242, 0.2955,  ..., 0.2624, 0.2497, 0.3248],
         [0.1203, 0.0387, 0.1793,  ..., 0.2459, 0.2509, 0.3565],
         [0.1560, 0.6499, 0.3206,  ..., 0.2459, 0.2497, 0.1508]],
        [[0.3129, 0.4548, 0.2566,  ..., 0.1848, 0.3575, 0.2055],
         [0.2311, 0.1381, 0.2184,  ..., 0.0761, 0.2466, 0.2055],
         [0.0686, 0.2661, 0.3065,  ..., 0.3283, 0.1905, 0.2886],
         [0.3875, 0.1410, 0.2184,  ..., 0.4108, 0.2055, 0.3003]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...