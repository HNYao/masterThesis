2024-08-16 10:51:47,930 [Worker 0] Is distributed: False
2024-08-16 10:51:47,931 [Process: 0] Starting training
2024-08-16 10:51:47,931 [Process: 0] EPOCH 1:
2024-08-16 10:51:47,935 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2288, 0.2102, 0.2691,  ..., 0.3613, 0.3844, 0.3568],
         [0.2360, 0.3695, 0.2254,  ..., 0.2129, 0.2029, 0.2303],
         [0.3065, 0.2102, 0.2067,  ..., 0.2129, 0.2029, 0.2065],
         [0.2288, 0.2102, 0.2988,  ..., 0.2129, 0.2099, 0.2065]],
        [[0.2659, 0.2759, 0.2439,  ..., 0.2364, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2683,  ..., 0.2658, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2439,  ..., 0.2615, 0.3221, 0.2638],
         [0.2447, 0.2414, 0.2439,  ..., 0.2364, 0.2260, 0.2454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2882, 0.4238, 0.3877,  ..., 0.3149, 0.4435, 0.5030],
         [0.3697, 0.1921, 0.2041,  ..., 0.3509, 0.1834, 0.2029],
         [0.1710, 0.1921, 0.2041,  ..., 0.1671, 0.1897, 0.1471],
         [0.1710, 0.1921, 0.2041,  ..., 0.1671, 0.1834, 0.1471]],
        [[0.1494, 0.1406, 0.1160,  ..., 0.0669, 0.1700, 0.1651],
         [0.1494, 0.1406, 0.1160,  ..., 0.3106, 0.0889, 0.1651],
         [0.4959, 0.5782, 0.3429,  ..., 0.1245, 0.3301, 0.3290],
         [0.2054, 0.1406, 0.4250,  ..., 0.4979, 0.4110, 0.3407]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2962, 0.2640, 0.2283,  ..., 0.3437, 0.2500, 0.2757],
         [0.2716, 0.2078, 0.3068,  ..., 0.2074, 0.2500, 0.2870],
         [0.2061, 0.2491, 0.2248,  ..., 0.1954, 0.2500, 0.2031],
         [0.2260, 0.2791, 0.2402,  ..., 0.2536, 0.2500, 0.2343]],
        [[0.2249, 0.2245, 0.2500,  ..., 0.2486, 0.2500, 0.2426],
         [0.3252, 0.2919, 0.2500,  ..., 0.2486, 0.2500, 0.2438],
         [0.2249, 0.2591, 0.2500,  ..., 0.2541, 0.2500, 0.2860],
         [0.2249, 0.2245, 0.2500,  ..., 0.2486, 0.2500, 0.2276]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:51:50,498 [Process: 0] Synchronize training processes
2024-08-16 10:51:50,498 [Process: 0] Evaluating...
2024-08-16 10:51:50,500 [Process: 0] EPOCH 2:
2024-08-16 10:51:50,502 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:51:52,408 [Process: 0] Synchronize training processes
2024-08-16 10:51:52,408 [Process: 0] Evaluating...
2024-08-16 10:51:52,410 [Process: 0] EPOCH 3:
2024-08-16 10:51:52,412 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.7086, 0.2328, 0.2500,  ..., 0.3802, 0.2186, 0.4472],
         [0.0971, 0.2330, 0.2500,  ..., 0.2211, 0.3442, 0.3155],
         [0.0971, 0.3014, 0.2500,  ..., 0.1994, 0.2186, 0.1187],
         [0.0971, 0.2328, 0.2500,  ..., 0.1994, 0.2186, 0.1187]],
        [[0.1522, 0.1900, 0.0816,  ..., 0.1096, 0.1685, 0.1257],
         [0.2045, 0.0951, 0.0816,  ..., 0.4357, 0.1685, 0.1257],
         [0.1069, 0.2456, 0.2242,  ..., 0.1796, 0.1793, 0.5983],
         [0.5364, 0.4693, 0.6126,  ..., 0.2751, 0.4836, 0.1502]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2784, 0.3029, 0.1980,  ..., 0.2626, 0.2370, 0.2344],
         [0.2827, 0.2728, 0.3404,  ..., 0.2406, 0.2985, 0.3722],
         [0.2195, 0.2023, 0.2495,  ..., 0.2406, 0.2322, 0.1967],
         [0.2195, 0.2220, 0.2120,  ..., 0.2562, 0.2322, 0.1967]],
        [[0.2378, 0.2500, 0.2360,  ..., 0.2289, 0.2439, 0.2352],
         [0.2378, 0.2500, 0.2854,  ..., 0.2973, 0.2439, 0.2352],
         [0.2865, 0.2500, 0.2426,  ..., 0.2449, 0.2682, 0.2686],
         [0.2378, 0.2500, 0.2360,  ..., 0.2289, 0.2439, 0.2609]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:51:54,296 [Process: 0] Synchronize training processes
2024-08-16 10:51:54,296 [Process: 0] Evaluating...
2024-08-16 10:51:54,298 [Process: 0] EPOCH 4:
2024-08-16 10:51:54,300 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.7181, 0.3015, 0.2347,  ..., 0.2847, 0.1823, 0.2700],
         [0.0988, 0.2019, 0.2959,  ..., 0.2384, 0.5583, 0.4035],
         [0.0915, 0.2946, 0.2347,  ..., 0.2384, 0.1297, 0.1632],
         [0.0915, 0.2019, 0.2347,  ..., 0.2384, 0.1297, 0.1632]],
        [[0.3202, 0.0930, 0.2182,  ..., 0.1436, 0.1034, 0.1438],
         [0.1987, 0.1110, 0.2182,  ..., 0.1953, 0.1801, 0.1438],
         [0.1301, 0.4814, 0.3454,  ..., 0.4054, 0.2895, 0.4962],
         [0.3510, 0.3146, 0.2182,  ..., 0.2557, 0.4270, 0.2161]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2255, 0.2895, 0.3271,  ..., 0.2390, 0.2732, 0.2868],
         [0.3236, 0.2638, 0.2235,  ..., 0.3567, 0.2710, 0.3033],
         [0.2255, 0.1736, 0.2084,  ..., 0.1889, 0.2279, 0.2050],
         [0.2255, 0.2730, 0.2410,  ..., 0.2154, 0.2279, 0.2050]],
        [[0.2374, 0.2127, 0.2873,  ..., 0.2412, 0.2376, 0.2836],
         [0.2775, 0.3477, 0.2424,  ..., 0.2763, 0.2376, 0.3012],
         [0.2478, 0.2270, 0.1973,  ..., 0.2412, 0.2873, 0.2076],
         [0.2374, 0.2127, 0.2730,  ..., 0.2412, 0.2376, 0.2076]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:51:56,193 [Process: 0] Synchronize training processes
2024-08-16 10:51:56,194 [Process: 0] Evaluating...
2024-08-16 10:51:56,195 [Process: 0] EPOCH 5:
2024-08-16 10:51:56,197 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:51:58,107 [Process: 0] Synchronize training processes
2024-08-16 10:51:58,108 [Process: 0] Evaluating...
2024-08-16 10:51:58,110 [Process: 0] EPOCH 6:
2024-08-16 10:51:58,112 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2153, 0.2500, 0.8615,  ..., 0.3146, 0.2699, 0.4836],
         [0.3540, 0.2500, 0.0462,  ..., 0.2285, 0.2434, 0.1721],
         [0.2153, 0.2500, 0.0462,  ..., 0.2285, 0.2434, 0.1721],
         [0.2153, 0.2500, 0.0462,  ..., 0.2285, 0.2434, 0.1721]],
        [[0.3305, 0.1017, 0.0907,  ..., 0.1740, 0.1217, 0.1201],
         [0.1811, 0.1017, 0.6080,  ..., 0.1740, 0.1217, 0.1201],
         [0.2423, 0.5372, 0.1427,  ..., 0.4209, 0.3731, 0.1960],
         [0.2461, 0.2593, 0.1586,  ..., 0.2311, 0.3835, 0.5639]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2192, 0.2163, 0.2584,  ..., 0.2828, 0.3127, 0.3011],
         [0.3195, 0.3512, 0.2472,  ..., 0.2829, 0.2291, 0.2187],
         [0.2437, 0.2163, 0.2472,  ..., 0.2172, 0.2291, 0.2187],
         [0.2176, 0.2163, 0.2472,  ..., 0.2172, 0.2291, 0.2615]],
        [[0.2406, 0.2404, 0.2326,  ..., 0.2162, 0.2490, 0.2469],
         [0.2783, 0.2672, 0.3023,  ..., 0.2162, 0.2531, 0.2384],
         [0.2406, 0.2521, 0.2326,  ..., 0.3515, 0.2490, 0.2431],
         [0.2406, 0.2404, 0.2326,  ..., 0.2162, 0.2490, 0.2716]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:52:00,016 [Process: 0] Synchronize training processes
2024-08-16 10:52:00,017 [Process: 0] Evaluating...
2024-08-16 10:52:00,019 [Process: 0] EPOCH 7:
2024-08-16 10:52:00,021 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2909, 0.2500, 0.4142,  ..., 0.1793, 0.3815, 0.4874],
         [0.2364, 0.2500, 0.1953,  ..., 0.4622, 0.2169, 0.1715],
         [0.2364, 0.2500, 0.1953,  ..., 0.1793, 0.2008, 0.1706],
         [0.2364, 0.2500, 0.1953,  ..., 0.1793, 0.2008, 0.1706]],
        [[0.1147, 0.0814, 0.0669,  ..., 0.1792, 0.1811, 0.0432],
         [0.1631, 0.0814, 0.0669,  ..., 0.0836, 0.1212, 0.5149],
         [0.2951, 0.6521, 0.7163,  ..., 0.1099, 0.1667, 0.0784],
         [0.4271, 0.1850, 0.1500,  ..., 0.6273, 0.5310, 0.3636]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2311, 0.2521, 0.2633,  ..., 0.2545, 0.1911, 0.4000],
         [0.3068, 0.3004, 0.2497,  ..., 0.2615, 0.3100, 0.1976],
         [0.2311, 0.2237, 0.1919,  ..., 0.2109, 0.1911, 0.1800],
         [0.2311, 0.2237, 0.2951,  ..., 0.2731, 0.3079, 0.2225]],
        [[0.2447, 0.2500, 0.3152,  ..., 0.2254, 0.2450, 0.2411],
         [0.2447, 0.2500, 0.2229,  ..., 0.3042, 0.2450, 0.2411],
         [0.2658, 0.2500, 0.2390,  ..., 0.2362, 0.2651, 0.2766],
         [0.2447, 0.2500, 0.2229,  ..., 0.2342, 0.2450, 0.2411]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.5025, 0.0962,  ..., 0.2565, 0.5944, 0.2391],
         [0.2500, 0.1658, 0.7115,  ..., 0.2488, 0.1517, 0.3488],
         [0.2500, 0.1658, 0.0962,  ..., 0.2473, 0.1270, 0.2061],
         [0.2500, 0.1658, 0.0962,  ..., 0.2473, 0.1270, 0.2061]],
        [[0.1297, 0.1872, 0.1315,  ..., 0.1561, 0.0908, 0.1218],
         [0.2341, 0.1872, 0.1315,  ..., 0.2648, 0.2856, 0.1218],
         [0.4310, 0.3516, 0.5381,  ..., 0.4233, 0.2406, 0.3606],
         [0.2052, 0.2739, 0.1989,  ..., 0.1558, 0.3830, 0.3958]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2271, 0.2595, 0.3022,  ..., 0.2082, 0.2509, 0.2435],
         [0.3187, 0.2984, 0.2764,  ..., 0.3755, 0.2412, 0.2435],
         [0.2271, 0.2213, 0.2085,  ..., 0.2082, 0.2355, 0.2694],
         [0.2271, 0.2207, 0.2129,  ..., 0.2082, 0.2723, 0.2435]],
        [[0.2503, 0.2495, 0.2425,  ..., 0.2500, 0.2360, 0.2195],
         [0.2631, 0.2495, 0.2425,  ..., 0.2500, 0.2499, 0.3414],
         [0.2433, 0.2503, 0.2724,  ..., 0.2500, 0.2780, 0.2195],
         [0.2433, 0.2508, 0.2425,  ..., 0.2500, 0.2360, 0.2195]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 10:52:01,910 [Process: 0] Synchronize training processes
2024-08-16 10:52:01,911 [Process: 0] Evaluating...
2024-08-16 10:52:01,913 [Process: 0] EPOCH 8:
2024-08-16 10:52:01,915 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.6570, 0.5952, 0.3976,  ..., 0.5562, 0.4080, 0.2831],
         [0.1609, 0.1317, 0.2008,  ..., 0.2258, 0.2230, 0.5132],
         [0.0911, 0.1414, 0.2008,  ..., 0.1090, 0.1845, 0.1018],
         [0.0911, 0.1317, 0.2008,  ..., 0.1090, 0.1845, 0.1018]],
        [[0.1437, 0.2546, 0.1411,  ..., 0.1053, 0.1254, 0.1550],
         [0.2069, 0.1401, 0.1291,  ..., 0.1053, 0.1254, 0.2786],
         [0.3639, 0.2216, 0.3572,  ..., 0.5916, 0.1566, 0.1550],
         [0.2856, 0.3838, 0.3725,  ..., 0.1977, 0.5927, 0.4115]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2332, 0.2378, 0.2153,  ..., 0.2750, 0.2427, 0.3410],
         [0.2434, 0.2865, 0.3022,  ..., 0.2407, 0.3389, 0.2055],
         [0.2911, 0.2378, 0.2153,  ..., 0.2407, 0.2152, 0.2278],
         [0.2323, 0.2378, 0.2671,  ..., 0.2435, 0.2032, 0.2257]],
        [[0.2336, 0.2469, 0.2441,  ..., 0.2895, 0.2337, 0.2145],
         [0.2747, 0.2572, 0.2441,  ..., 0.2751, 0.2337, 0.2145],
         [0.2580, 0.2147, 0.2678,  ..., 0.2257, 0.2989, 0.3565],
         [0.2336, 0.2813, 0.2441,  ..., 0.2098, 0.2337, 0.2145]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:52:03,813 [Process: 0] Synchronize training processes
2024-08-16 10:52:03,814 [Process: 0] Evaluating...
2024-08-16 10:52:03,816 [Process: 0] EPOCH 9:
2024-08-16 10:52:03,818 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1597, 0.2500, 0.4596,  ..., 0.3093, 0.2500, 0.2500],
         [0.5209, 0.2500, 0.1801,  ..., 0.3358, 0.2500, 0.2500],
         [0.1597, 0.2500, 0.1801,  ..., 0.1775, 0.2500, 0.2500],
         [0.1597, 0.2500, 0.1801,  ..., 0.1775, 0.2500, 0.2500]],
        [[0.1737, 0.2092, 0.1619,  ..., 0.1864, 0.1624, 0.1231],
         [0.1737, 0.2092, 0.0666,  ..., 0.0819, 0.1624, 0.1186],
         [0.4788, 0.2092, 0.4137,  ..., 0.3356, 0.5129, 0.2733],
         [0.1737, 0.3725, 0.3577,  ..., 0.3961, 0.1624, 0.4850]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3450, 0.2180, 0.2483,  ..., 0.2640, 0.3846, 0.3044],
         [0.2019, 0.3011, 0.2185,  ..., 0.2760, 0.1945, 0.2419],
         [0.2019, 0.2617, 0.2185,  ..., 0.2300, 0.1945, 0.2539],
         [0.2511, 0.2193, 0.3147,  ..., 0.2300, 0.2264, 0.1998]],
        [[0.2264, 0.2412, 0.2295,  ..., 0.2407, 0.2469, 0.2857],
         [0.2999, 0.2412, 0.2581,  ..., 0.2407, 0.2469, 0.2298],
         [0.2264, 0.2763, 0.2166,  ..., 0.2470, 0.2593, 0.2298],
         [0.2473, 0.2412, 0.2957,  ..., 0.2716, 0.2469, 0.2547]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.4984, 0.2500,  ..., 0.6956, 0.2095, 0.3418],
         [0.2500, 0.2238, 0.2500,  ..., 0.1209, 0.3714, 0.3105],
         [0.2500, 0.1389, 0.2500,  ..., 0.0894, 0.2095, 0.1738],
         [0.2500, 0.1389, 0.2500,  ..., 0.0940, 0.2095, 0.1738]],
        [[0.4006, 0.1641, 0.1797,  ..., 0.1656, 0.2580, 0.1163],
         [0.1027, 0.1641, 0.1797,  ..., 0.0831, 0.1793, 0.1163],
         [0.2267, 0.5077, 0.1797,  ..., 0.1683, 0.3809, 0.2284],
         [0.2700, 0.1641, 0.4608,  ..., 0.5830, 0.1817, 0.5391]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:52:05,717 [Process: 0] Synchronize training processes
2024-08-16 10:52:05,717 [Process: 0] Evaluating...
2024-08-16 10:52:05,719 [Process: 0] EPOCH 10:
2024-08-16 10:52:05,721 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:52:07,619 [Process: 0] Synchronize training processes
2024-08-16 10:52:07,619 [Process: 0] Evaluating...
2024-08-16 10:52:07,621 [Process: 0] EPOCH 11:
2024-08-16 10:52:07,623 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3384, 0.2698, 0.3034,  ..., 0.2484, 0.2714, 0.2893],
         [0.2084, 0.2155, 0.2137,  ..., 0.2484, 0.2296, 0.2297],
         [0.2084, 0.2414, 0.2137,  ..., 0.2484, 0.2388, 0.2297],
         [0.2447, 0.2733, 0.2691,  ..., 0.2549, 0.2603, 0.2514]],
        [[0.2364, 0.2488, 0.2500,  ..., 0.2500, 0.2574, 0.2072],
         [0.2364, 0.2537, 0.2500,  ..., 0.2500, 0.2555, 0.3054],
         [0.2908, 0.2488, 0.2500,  ..., 0.2500, 0.2435, 0.2088],
         [0.2364, 0.2488, 0.2500,  ..., 0.2500, 0.2435, 0.2786]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3051, 0.2738, 0.2390,  ..., 0.2587, 0.2289, 0.3248],
         [0.2265, 0.2421, 0.2390,  ..., 0.4221, 0.2289, 0.2954],
         [0.2430, 0.2421, 0.2830,  ..., 0.1596, 0.3133, 0.1899],
         [0.2255, 0.2421, 0.2390,  ..., 0.1596, 0.2289, 0.1899]],
        [[0.1870, 0.1765, 0.1868,  ..., 0.1591, 0.1859, 0.2396],
         [0.2466, 0.1765, 0.2736,  ..., 0.1591, 0.3553, 0.2396],
         [0.2213, 0.4704, 0.2368,  ..., 0.3113, 0.2783, 0.2811],
         [0.3451, 0.1765, 0.3027,  ..., 0.3704, 0.1806, 0.2396]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:52:09,520 [Process: 0] Synchronize training processes
2024-08-16 10:52:09,521 [Process: 0] Evaluating...
2024-08-16 10:52:09,523 [Process: 0] EPOCH 12:
2024-08-16 10:52:09,525 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2919, 0.2392, 0.2332,  ..., 0.2447, 0.2434, 0.2441],
         [0.2689, 0.2304, 0.2797,  ..., 0.2658, 0.2552, 0.2678],
         [0.2196, 0.2833, 0.2316,  ..., 0.2447, 0.2288, 0.2441],
         [0.2196, 0.2470, 0.2555,  ..., 0.2447, 0.2727, 0.2441]],
        [[0.2447, 0.2348, 0.2500,  ..., 0.2041, 0.2461, 0.2472],
         [0.2855, 0.2348, 0.2500,  ..., 0.3266, 0.2907, 0.2625],
         [0.2416, 0.2957, 0.2500,  ..., 0.2041, 0.2331, 0.2451],
         [0.2282, 0.2348, 0.2500,  ..., 0.2651, 0.2302, 0.2451]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1913, 0.4810, 0.2500,  ..., 0.4190, 0.2398, 0.3341],
         [0.5582, 0.2510, 0.2500,  ..., 0.2177, 0.4681, 0.2220],
         [0.1253, 0.1340, 0.2500,  ..., 0.1835, 0.1461, 0.2220],
         [0.1253, 0.1340, 0.2500,  ..., 0.1798, 0.1461, 0.2220]],
        [[0.1816, 0.1987, 0.1984,  ..., 0.1114, 0.1868, 0.0947],
         [0.2153, 0.1987, 0.1984,  ..., 0.2480, 0.1896, 0.0947],
         [0.1103, 0.1987, 0.4048,  ..., 0.2424, 0.4368, 0.3318],
         [0.4928, 0.4038, 0.1984,  ..., 0.3982, 0.1868, 0.4789]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:52:11,422 [Process: 0] Synchronize training processes
2024-08-16 10:52:11,423 [Process: 0] Evaluating...
2024-08-16 10:52:11,424 [Process: 0] EPOCH 13:
2024-08-16 10:52:11,426 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2970, 0.3087, 0.2323,  ..., 0.2908, 0.2500, 0.2320],
         [0.2343, 0.2423, 0.3049,  ..., 0.2911, 0.2500, 0.3039],
         [0.2343, 0.2163, 0.2075,  ..., 0.1969, 0.2500, 0.2320],
         [0.2343, 0.2326, 0.2553,  ..., 0.2213, 0.2500, 0.2320]],
        [[0.2500, 0.2202, 0.2500,  ..., 0.2492, 0.2392, 0.2361],
         [0.2500, 0.3006, 0.2500,  ..., 0.2492, 0.2392, 0.2448],
         [0.2500, 0.2215, 0.2500,  ..., 0.2523, 0.2824, 0.2831],
         [0.2500, 0.2577, 0.2500,  ..., 0.2492, 0.2392, 0.2361]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3842, 0.4483, 0.2609,  ..., 0.3046, 0.2936, 0.3215],
         [0.3552, 0.1839, 0.2530,  ..., 0.2318, 0.2355, 0.2262],
         [0.1433, 0.1839, 0.2431,  ..., 0.2318, 0.2355, 0.2262],
         [0.1174, 0.1839, 0.2431,  ..., 0.2318, 0.2355, 0.2262]],
        [[0.1573, 0.2518, 0.1246,  ..., 0.1467, 0.2438, 0.1734],
         [0.1573, 0.1694, 0.1246,  ..., 0.1467, 0.2394, 0.1734],
         [0.4980, 0.3259, 0.4115,  ..., 0.5360, 0.2262, 0.4798],
         [0.1873, 0.2529, 0.3392,  ..., 0.1705, 0.2906, 0.1734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:52:13,331 [Process: 0] Synchronize training processes
2024-08-16 10:52:13,331 [Process: 0] Evaluating...
2024-08-16 10:52:13,333 [Process: 0] EPOCH 14:
2024-08-16 10:52:13,335 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2378, 0.2629, 0.3043,  ..., 0.2348, 0.2511, 0.3055],
         [0.2866, 0.2457, 0.2531,  ..., 0.2819, 0.2377, 0.2315],
         [0.2378, 0.2457, 0.2213,  ..., 0.2348, 0.2118, 0.2315],
         [0.2378, 0.2457, 0.2213,  ..., 0.2485, 0.2994, 0.2315]],
        [[0.2410, 0.2330, 0.2290,  ..., 0.2470, 0.2144, 0.2372],
         [0.2493, 0.3010, 0.2842,  ..., 0.2591, 0.2680, 0.2831],
         [0.2410, 0.2330, 0.2579,  ..., 0.2470, 0.2921, 0.2372],
         [0.2686, 0.2330, 0.2290,  ..., 0.2470, 0.2255, 0.2424]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2475, 0.2183, 0.1600,  ..., 0.1885, 0.5099, 0.3188],
         [0.3765, 0.4528, 0.6505,  ..., 0.4655, 0.1634, 0.3262],
         [0.1880, 0.1644, 0.0948,  ..., 0.1730, 0.1634, 0.1775],
         [0.1880, 0.1644, 0.0948,  ..., 0.1730, 0.1634, 0.1775]],
        [[0.1591, 0.0949, 0.2072,  ..., 0.1211, 0.1582, 0.1104],
         [0.3092, 0.1547, 0.2072,  ..., 0.1211, 0.2109, 0.1104],
         [0.1898, 0.5503, 0.3476,  ..., 0.5304, 0.2058, 0.6501],
         [0.3419, 0.2001, 0.2381,  ..., 0.2273, 0.4251, 0.1290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:52:15,232 [Process: 0] Synchronize training processes
2024-08-16 10:52:15,233 [Process: 0] Evaluating...
2024-08-16 10:52:15,234 [Process: 0] EPOCH 15:
2024-08-16 10:52:15,236 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3122, 0.2781, 0.3176,  ..., 0.2396, 0.3547, 0.2350],
         [0.2400, 0.2406, 0.2231,  ..., 0.3858, 0.2465, 0.2693],
         [0.2228, 0.2406, 0.1975,  ..., 0.1855, 0.1975, 0.2459],
         [0.2250, 0.2406, 0.2619,  ..., 0.1891, 0.2013, 0.2498]],
        [[0.2500, 0.2493, 0.2367,  ..., 0.2500, 0.2302, 0.2054],
         [0.2500, 0.2520, 0.2252,  ..., 0.2500, 0.2302, 0.2992],
         [0.2500, 0.2493, 0.3129,  ..., 0.2500, 0.3094, 0.2542],
         [0.2500, 0.2493, 0.2252,  ..., 0.2500, 0.2302, 0.2413]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1633, 0.3215, 0.2939,  ..., 0.4915, 0.7877, 0.1651],
         [0.5550, 0.2262, 0.3653,  ..., 0.1695, 0.0833, 0.5047],
         [0.1409, 0.2262, 0.1704,  ..., 0.1695, 0.0645, 0.1651],
         [0.1409, 0.2262, 0.1704,  ..., 0.1695, 0.0645, 0.1651]],
        [[0.1571, 0.1669, 0.2293,  ..., 0.1325, 0.1792, 0.1803],
         [0.1571, 0.1669, 0.2293,  ..., 0.1325, 0.3947, 0.2349],
         [0.4622, 0.1878, 0.2904,  ..., 0.2192, 0.2469, 0.3920],
         [0.2235, 0.4784, 0.2510,  ..., 0.5158, 0.1792, 0.1928]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:52:17,134 [Process: 0] Synchronize training processes
2024-08-16 10:52:17,134 [Process: 0] Evaluating...
2024-08-16 10:52:17,136 [Process: 0] EPOCH 16:
2024-08-16 10:52:17,138 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.3227, 0.2362,  ..., 0.3027, 0.2648, 0.2289],
         [0.2500, 0.2368, 0.2345,  ..., 0.2073, 0.2479, 0.3134],
         [0.2500, 0.2114, 0.2345,  ..., 0.2073, 0.2437, 0.2289],
         [0.2500, 0.2290, 0.2947,  ..., 0.2828, 0.2437, 0.2289]],
        [[0.2500, 0.2331, 0.2434,  ..., 0.2431, 0.2500, 0.2200],
         [0.2500, 0.2331, 0.2434,  ..., 0.2431, 0.2500, 0.2966],
         [0.2500, 0.2558, 0.2699,  ..., 0.2708, 0.2500, 0.2635],
         [0.2500, 0.2779, 0.2434,  ..., 0.2431, 0.2500, 0.2200]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4832, 0.2343, 0.3854,  ..., 0.2544, 0.2877, 0.2760],
         [0.1723, 0.5306, 0.2636,  ..., 0.2929, 0.3439, 0.2731],
         [0.1723, 0.1175, 0.1755,  ..., 0.2263, 0.2120, 0.2254],
         [0.1723, 0.1175, 0.1755,  ..., 0.2263, 0.1564, 0.2254]],
        [[0.1691, 0.1930, 0.3270,  ..., 0.1760, 0.1991, 0.1227],
         [0.6376, 0.2354, 0.0736,  ..., 0.2045, 0.3657, 0.1399],
         [0.0655, 0.2461, 0.3718,  ..., 0.2346, 0.2318, 0.4612],
         [0.1278, 0.3255, 0.2276,  ..., 0.3848, 0.2034, 0.2763]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 10:52:19,026 [Process: 0] Synchronize training processes
2024-08-16 10:52:19,026 [Process: 0] Evaluating...
2024-08-16 10:52:19,028 [Process: 0] EPOCH 17:
2024-08-16 10:52:19,030 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2927, 0.2500, 0.2497,  ..., 0.2764, 0.2440, 0.2643],
         [0.2334, 0.2500, 0.2453,  ..., 0.2313, 0.2681, 0.2761],
         [0.2150, 0.2500, 0.2453,  ..., 0.2267, 0.2440, 0.1717],
         [0.2589, 0.2500, 0.2597,  ..., 0.2656, 0.2440, 0.2880]],
        [[0.2415, 0.2445, 0.2407,  ..., 0.2432, 0.2428, 0.2560],
         [0.2755, 0.2445, 0.2407,  ..., 0.2432, 0.2428, 0.2589],
         [0.2415, 0.2665, 0.2780,  ..., 0.2703, 0.2716, 0.2232],
         [0.2415, 0.2445, 0.2407,  ..., 0.2432, 0.2428, 0.2619]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2441, 0.2261, 0.3278,  ..., 0.7822, 0.2634, 0.2473],
         [0.2677, 0.3106, 0.2860,  ..., 0.0882, 0.3666, 0.2659],
         [0.2441, 0.2537, 0.1931,  ..., 0.0648, 0.1850, 0.2434],
         [0.2441, 0.2096, 0.1931,  ..., 0.0648, 0.1850, 0.2434]],
        [[0.2071, 0.1382, 0.1610,  ..., 0.1183, 0.1744, 0.1394],
         [0.2071, 0.1382, 0.1610,  ..., 0.1183, 0.2033, 0.1394],
         [0.3788, 0.5383, 0.5169,  ..., 0.4069, 0.1744, 0.3244],
         [0.2071, 0.1854, 0.1610,  ..., 0.3565, 0.4478, 0.3967]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 10:52:20,928 [Process: 0] Synchronize training processes
2024-08-16 10:52:20,928 [Process: 0] Evaluating...
2024-08-16 10:52:20,930 [Process: 0] EPOCH 18:
2024-08-16 10:52:20,932 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3452, 0.3052, 0.2877,  ..., 0.3342, 0.2704, 0.2238],
         [0.2541, 0.2153, 0.2731,  ..., 0.2089, 0.2488, 0.2238],
         [0.2003, 0.2153, 0.2113,  ..., 0.2089, 0.2404, 0.3286],
         [0.2003, 0.2642, 0.2279,  ..., 0.2481, 0.2404, 0.2238]],
        [[0.2386, 0.2408, 0.2500,  ..., 0.2493, 0.2500, 0.2198],
         [0.2886, 0.2776, 0.2500,  ..., 0.2493, 0.2500, 0.3012],
         [0.2056, 0.2408, 0.2500,  ..., 0.2522, 0.2500, 0.2592],
         [0.2672, 0.2408, 0.2500,  ..., 0.2493, 0.2500, 0.2198]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5429, 0.2318, 0.2133,  ..., 0.2437, 0.7305, 0.3016],
         [0.1524, 0.3644, 0.3601,  ..., 0.2689, 0.0898, 0.3299],
         [0.1524, 0.2019, 0.2133,  ..., 0.2437, 0.0898, 0.1842],
         [0.1524, 0.2019, 0.2133,  ..., 0.2437, 0.0898, 0.1842]],
        [[0.0731, 0.1014, 0.0714,  ..., 0.1350, 0.2595, 0.2236],
         [0.0731, 0.1014, 0.0714,  ..., 0.3864, 0.1693, 0.2232],
         [0.7806, 0.4409, 0.3566,  ..., 0.1350, 0.4019, 0.2232],
         [0.0731, 0.3564, 0.5005,  ..., 0.3436, 0.1693, 0.3299]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1987, 0.2664, 0.3493,  ..., 0.3220, 0.3648, 0.2598],
         [0.3026, 0.2445, 0.1956,  ..., 0.2674, 0.1779, 0.2390],
         [0.1958, 0.2445, 0.1956,  ..., 0.1994, 0.1779, 0.2390],
         [0.3029, 0.2445, 0.2596,  ..., 0.2112, 0.2794, 0.2622]],
        [[0.2418, 0.2367, 0.2500,  ..., 0.2319, 0.2500, 0.2333],
         [0.2745, 0.2873, 0.2500,  ..., 0.2940, 0.2500, 0.3002],
         [0.2418, 0.2392, 0.2500,  ..., 0.2610, 0.2500, 0.2333],
         [0.2418, 0.2367, 0.2500,  ..., 0.2130, 0.2500, 0.2333]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:52:22,818 [Process: 0] Synchronize training processes
2024-08-16 10:52:22,818 [Process: 0] Evaluating...
2024-08-16 10:52:22,820 [Process: 0] EPOCH 19:
2024-08-16 10:52:22,822 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2085, 0.2250, 0.1944,  ..., 0.2794, 0.4546, 0.4432],
         [0.3745, 0.3396, 0.4169,  ..., 0.2402, 0.2695, 0.1856],
         [0.2085, 0.2177, 0.1944,  ..., 0.2402, 0.1379, 0.1856],
         [0.2085, 0.2177, 0.1944,  ..., 0.2402, 0.1379, 0.1856]],
        [[0.1230, 0.2396, 0.2821,  ..., 0.1104, 0.1881, 0.1781],
         [0.1230, 0.2396, 0.0928,  ..., 0.1104, 0.1542, 0.1608],
         [0.5399, 0.2396, 0.2714,  ..., 0.4301, 0.1152, 0.4023],
         [0.2141, 0.2813, 0.3538,  ..., 0.3490, 0.5425, 0.2588]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2510, 0.2447, 0.2946,  ..., 0.3114, 0.3713, 0.2749],
         [0.3106, 0.2447, 0.2563,  ..., 0.2191, 0.2066, 0.3065],
         [0.2192, 0.2658, 0.2104,  ..., 0.2054, 0.2155, 0.2040],
         [0.2192, 0.2447, 0.2388,  ..., 0.2641, 0.2066, 0.2147]],
        [[0.2359, 0.1910, 0.2376,  ..., 0.2423, 0.2372, 0.2247],
         [0.2787, 0.2328, 0.2873,  ..., 0.2731, 0.2883, 0.2247],
         [0.2359, 0.3255, 0.2376,  ..., 0.2423, 0.2372, 0.3258],
         [0.2494, 0.2507, 0.2376,  ..., 0.2423, 0.2372, 0.2247]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:52:24,725 [Process: 0] Synchronize training processes
2024-08-16 10:52:24,725 [Process: 0] Evaluating...
2024-08-16 10:52:24,727 [Process: 0] EPOCH 20:
2024-08-16 10:52:24,729 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.6978, 0.2500, 0.0907,  ..., 0.0872, 0.3826, 0.3027],
         [0.1054, 0.2500, 0.7426,  ..., 0.7385, 0.2058, 0.2324],
         [0.0984, 0.2500, 0.0834,  ..., 0.0872, 0.2058, 0.2324],
         [0.0984, 0.2500, 0.0834,  ..., 0.0872, 0.2058, 0.2324]],
        [[0.0906, 0.1703, 0.1403,  ..., 0.1834, 0.2927, 0.2548],
         [0.2597, 0.1648, 0.1307,  ..., 0.2462, 0.2062, 0.2607],
         [0.5111, 0.1809, 0.2583,  ..., 0.2672, 0.0877, 0.2236],
         [0.1386, 0.4840, 0.4707,  ..., 0.3032, 0.4134, 0.2609]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3177, 0.2253, 0.3008,  ..., 0.2734, 0.2488, 0.3025],
         [0.2753, 0.1967, 0.2788,  ..., 0.2514, 0.2395, 0.2321],
         [0.2035, 0.2787, 0.2102,  ..., 0.2376, 0.2128, 0.2230],
         [0.2035, 0.2993, 0.2102,  ..., 0.2376, 0.2990, 0.2423]],
        [[0.2500, 0.2242, 0.2485,  ..., 0.2500, 0.2443, 0.2174],
         [0.2500, 0.3275, 0.2545,  ..., 0.2500, 0.2308, 0.3462],
         [0.2500, 0.2242, 0.2485,  ..., 0.2500, 0.2308, 0.2174],
         [0.2500, 0.2242, 0.2485,  ..., 0.2500, 0.2942, 0.2190]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:52:26,643 [Process: 0] Synchronize training processes
2024-08-16 10:52:26,644 [Process: 0] Evaluating...
2024-08-16 10:52:26,645 [Process: 0] EPOCH 21:
2024-08-16 10:52:26,647 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3939, 0.4358, 0.4975,  ..., 0.6444, 0.3353, 0.5998],
         [0.2020, 0.1881, 0.2509,  ..., 0.1185, 0.4667, 0.1334],
         [0.2020, 0.1881, 0.1258,  ..., 0.1185, 0.0990, 0.1334],
         [0.2020, 0.1881, 0.1258,  ..., 0.1185, 0.0990, 0.1334]],
        [[0.1968, 0.1480, 0.2025,  ..., 0.2088, 0.2365, 0.1227],
         [0.1968, 0.1184, 0.2203,  ..., 0.2088, 0.1702, 0.1325],
         [0.3664, 0.4684, 0.2931,  ..., 0.3379, 0.2839, 0.6220],
         [0.2399, 0.2652, 0.2841,  ..., 0.2444, 0.3094, 0.1227]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2463, 0.2530, 0.3113,  ..., 0.2645, 0.2735, 0.2562],
         [0.3073, 0.2471, 0.2296,  ..., 0.2452, 0.2641, 0.2893],
         [0.2232, 0.2471, 0.2296,  ..., 0.2452, 0.1922, 0.2101],
         [0.2232, 0.2527, 0.2296,  ..., 0.2452, 0.2702, 0.2444]],
        [[0.2495, 0.2376, 0.2500,  ..., 0.2287, 0.2413, 0.2498],
         [0.2516, 0.2376, 0.2500,  ..., 0.2604, 0.2761, 0.2498],
         [0.2495, 0.2871, 0.2500,  ..., 0.2636, 0.2413, 0.2507],
         [0.2495, 0.2376, 0.2500,  ..., 0.2474, 0.2413, 0.2498]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:52:28,555 [Process: 0] Synchronize training processes
2024-08-16 10:52:28,555 [Process: 0] Evaluating...
2024-08-16 10:52:28,557 [Process: 0] EPOCH 22:
2024-08-16 10:52:28,559 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2422, 0.4458,  ..., 0.2051, 0.2728, 0.6346],
         [0.2500, 0.2733, 0.1847,  ..., 0.4949, 0.2424, 0.1218],
         [0.2500, 0.2422, 0.1847,  ..., 0.1500, 0.2424, 0.1218],
         [0.2500, 0.2422, 0.1847,  ..., 0.1500, 0.2424, 0.1218]],
        [[0.2242, 0.0735, 0.2744,  ..., 0.2363, 0.1726, 0.2096],
         [0.1841, 0.1765, 0.2419,  ..., 0.2363, 0.1726, 0.2096],
         [0.3508, 0.3796, 0.2419,  ..., 0.2711, 0.4821, 0.2770],
         [0.2410, 0.3704, 0.2419,  ..., 0.2564, 0.1726, 0.3038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3101, 0.3061, 0.3049,  ..., 0.3217, 0.2500, 0.2882],
         [0.2164, 0.2267, 0.2255,  ..., 0.2196, 0.2500, 0.2771],
         [0.1956, 0.2267, 0.2255,  ..., 0.2196, 0.2500, 0.1851],
         [0.2779, 0.2406, 0.2441,  ..., 0.2391, 0.2500, 0.2495]],
        [[0.2768, 0.2477, 0.2747,  ..., 0.2500, 0.2500, 0.2726],
         [0.2763, 0.2556, 0.2378,  ..., 0.2500, 0.2500, 0.2544],
         [0.2026, 0.2490, 0.2496,  ..., 0.2500, 0.2500, 0.2365],
         [0.2443, 0.2477, 0.2378,  ..., 0.2500, 0.2500, 0.2365]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:52:30,462 [Process: 0] Synchronize training processes
2024-08-16 10:52:30,463 [Process: 0] Evaluating...
2024-08-16 10:52:30,465 [Process: 0] EPOCH 23:
2024-08-16 10:52:30,467 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2779, 0.2408, 0.5136,  ..., 0.1966, 0.5928, 0.6165],
         [0.2407, 0.2776, 0.1621,  ..., 0.5581, 0.2077, 0.1278],
         [0.2407, 0.2408, 0.1621,  ..., 0.1227, 0.0998, 0.1278],
         [0.2407, 0.2408, 0.1621,  ..., 0.1227, 0.0998, 0.1278]],
        [[0.0779, 0.1841, 0.2273,  ..., 0.0709, 0.1795, 0.1409],
         [0.0779, 0.1841, 0.2562,  ..., 0.0776, 0.1795, 0.3420],
         [0.6461, 0.4478, 0.1622,  ..., 0.3558, 0.4616, 0.0831],
         [0.1981, 0.1841, 0.3543,  ..., 0.4956, 0.1795, 0.4340]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2753, 0.3064, 0.2378,  ..., 0.2492, 0.2169, 0.2424],
         [0.2416, 0.2156, 0.3207,  ..., 0.2663, 0.3204, 0.3327],
         [0.2416, 0.2156, 0.2139,  ..., 0.2422, 0.2169, 0.2124],
         [0.2416, 0.2623, 0.2276,  ..., 0.2422, 0.2458, 0.2124]],
        [[0.2419, 0.2316, 0.2440,  ..., 0.2377, 0.2248, 0.2487],
         [0.2419, 0.2507, 0.2440,  ..., 0.2393, 0.2186, 0.2487],
         [0.2743, 0.2749, 0.2667,  ..., 0.2854, 0.2747, 0.2538],
         [0.2419, 0.2429, 0.2453,  ..., 0.2377, 0.2819, 0.2487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:52:32,368 [Process: 0] Synchronize training processes
2024-08-16 10:52:32,369 [Process: 0] Evaluating...
2024-08-16 10:52:32,370 [Process: 0] EPOCH 24:
2024-08-16 10:52:32,372 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2858, 0.4808, 0.4314,  ..., 0.2002, 0.2375, 0.7354],
         [0.2976, 0.1731, 0.4563,  ..., 0.4715, 0.2876, 0.0882],
         [0.2083, 0.1731, 0.0561,  ..., 0.1642, 0.2375, 0.0882],
         [0.2083, 0.1731, 0.0561,  ..., 0.1642, 0.2375, 0.0882]],
        [[0.2172, 0.1799, 0.1325,  ..., 0.0627, 0.1890, 0.1760],
         [0.1270, 0.1799, 0.1325,  ..., 0.0879, 0.1782, 0.1760],
         [0.1270, 0.2955, 0.4329,  ..., 0.1776, 0.4545, 0.2647],
         [0.5287, 0.3448, 0.3021,  ..., 0.6718, 0.1782, 0.3833]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2332, 0.2364, 0.2147,  ..., 0.2730, 0.3719, 0.2888],
         [0.2892, 0.3059, 0.2755,  ..., 0.2372, 0.1843, 0.2544],
         [0.2443, 0.2419, 0.2951,  ..., 0.2372, 0.1800, 0.2110],
         [0.2332, 0.2157, 0.2147,  ..., 0.2526, 0.2637, 0.2459]],
        [[0.2466, 0.2477, 0.2680,  ..., 0.2909, 0.2460, 0.2500],
         [0.2466, 0.2569, 0.3010,  ..., 0.2248, 0.2460, 0.2500],
         [0.2603, 0.2477, 0.2155,  ..., 0.2634, 0.2619, 0.2500],
         [0.2466, 0.2477, 0.2155,  ..., 0.2209, 0.2460, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:52:34,271 [Process: 0] Synchronize training processes
2024-08-16 10:52:34,272 [Process: 0] Evaluating...
2024-08-16 10:52:34,274 [Process: 0] EPOCH 25:
2024-08-16 10:52:34,276 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1559, 0.1465, 0.4511,  ..., 0.7126, 0.4802, 0.6484],
         [0.5322, 0.5605, 0.2976,  ..., 0.0958, 0.1573, 0.1891],
         [0.1559, 0.1465, 0.1257,  ..., 0.0958, 0.2052, 0.0812],
         [0.1559, 0.1465, 0.1257,  ..., 0.0958, 0.1573, 0.0812]],
        [[0.2955, 0.1493, 0.1025,  ..., 0.2001, 0.2696, 0.1362],
         [0.1270, 0.1493, 0.2202,  ..., 0.2001, 0.1179, 0.2659],
         [0.4123, 0.4654, 0.3734,  ..., 0.3307, 0.2247, 0.3158],
         [0.1652, 0.2360, 0.3039,  ..., 0.2691, 0.3877, 0.2821]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2442, 0.2360, 0.2822,  ..., 0.3027, 0.2795, 0.2547],
         [0.2411, 0.2580, 0.2393,  ..., 0.2127, 0.2402, 0.2484],
         [0.2411, 0.2700, 0.2393,  ..., 0.2076, 0.2402, 0.2484],
         [0.2737, 0.2360, 0.2393,  ..., 0.2770, 0.2402, 0.2484]],
        [[0.2109, 0.2431, 0.2220,  ..., 0.2500, 0.2407, 0.2160],
         [0.3571, 0.2706, 0.2633,  ..., 0.2500, 0.2779, 0.2986],
         [0.2164, 0.2431, 0.2387,  ..., 0.2500, 0.2407, 0.2694],
         [0.2156, 0.2431, 0.2760,  ..., 0.2500, 0.2407, 0.2160]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 10:52:36,165 [Process: 0] Synchronize training processes
2024-08-16 10:52:36,165 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1664, 0.4451, 0.3689,  ..., 0.4740, 0.4936, 0.5310],
         [0.5664, 0.1850, 0.3367,  ..., 0.2055, 0.1688, 0.1797],
         [0.1336, 0.1850, 0.1472,  ..., 0.1602, 0.1688, 0.1450],
         [0.1336, 0.1850, 0.1472,  ..., 0.1602, 0.1688, 0.1443]],
        [[0.1183, 0.0672, 0.1869,  ..., 0.1091, 0.2582, 0.1147],
         [0.2889, 0.0672, 0.1869,  ..., 0.1091, 0.2679, 0.1147],
         [0.1218, 0.6648, 0.4038,  ..., 0.1976, 0.1528, 0.5782],
         [0.4711, 0.2008, 0.2223,  ..., 0.5842, 0.3211, 0.1924]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...