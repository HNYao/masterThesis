2024-08-19 13:15:38,394 [Worker 0] Is distributed: False
2024-08-19 13:15:38,394 [Process: 0] Starting training
2024-08-19 13:15:38,394 [Process: 0] EPOCH 1:
2024-08-19 13:15:38,396 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:15:40,035 [Process: 0] Synchronize training processes
2024-08-19 13:15:40,035 [Process: 0] Evaluating...
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2013, 0.3420, 0.1496,  ..., 0.1481, 0.4452, 0.1980],
         [0.3961, 0.3088, 0.1496,  ..., 0.1420, 0.1849, 0.4061],
         [0.2013, 0.1928, 0.5388,  ..., 0.5084, 0.1849, 0.1980],
         [0.2013, 0.1564, 0.1620,  ..., 0.2015, 0.1849, 0.1980]],
        [[0.3098, 0.1502, 0.6037,  ..., 0.2301, 0.2239, 0.1630],
         [0.1867, 0.4153, 0.0751,  ..., 0.3520, 0.2239, 0.2199],
         [0.1668, 0.2519, 0.0751,  ..., 0.2089, 0.3282, 0.1630],
         [0.3367, 0.1825, 0.2462,  ..., 0.2089, 0.2239, 0.4541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2720, 0.2573, 0.2360,  ..., 0.2941, 0.2132, 0.1509],
         [0.2883, 0.2409, 0.2947,  ..., 0.2870, 0.3022, 0.2809],
         [0.1639, 0.2326, 0.2020,  ..., 0.1772, 0.1469, 0.2410],
         [0.2758, 0.2693, 0.2672,  ..., 0.2417, 0.3377, 0.3272]],
        [[0.2274, 0.2507, 0.2497,  ..., 0.3210, 0.2530, 0.1992],
         [0.2018, 0.3341, 0.2418,  ..., 0.2158, 0.2962, 0.2155],
         [0.2781, 0.1490, 0.2418,  ..., 0.2158, 0.2059, 0.3860],
         [0.2927, 0.2663, 0.2668,  ..., 0.2473, 0.2449, 0.1992]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:15:40,437 [Process: 0] EPOCH 2:
2024-08-19 13:15:40,439 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:15:41,413 [Process: 0] Synchronize training processes
2024-08-19 13:15:41,414 [Process: 0] Evaluating...
2024-08-19 13:15:41,415 [Process: 0] EPOCH 3:
2024-08-19 13:15:41,417 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2726, 0.0333, 0.2678,  ..., 0.2723, 0.2730, 0.2696],
         [0.2537, 0.0333, 0.2629,  ..., 0.2453, 0.2709, 0.2623],
         [0.1940, 0.9001, 0.2050,  ..., 0.2114, 0.1824, 0.2003],
         [0.2797, 0.0333, 0.2643,  ..., 0.2709, 0.2737, 0.2678]],
        [[0.1804, 0.2739, 0.2688,  ..., 0.2692, 0.2500, 0.0772],
         [0.1804, 0.2455, 0.2602,  ..., 0.2529, 0.2500, 0.0772],
         [0.4588, 0.2004, 0.1859,  ..., 0.2040, 0.2500, 0.7684],
         [0.1804, 0.2801, 0.2851,  ..., 0.2739, 0.2500, 0.0772]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2963, 0.2686, 0.2820,  ..., 0.2744, 0.2695, 0.2566],
         [0.2480, 0.2508, 0.2570,  ..., 0.2659, 0.2539, 0.2667],
         [0.1808, 0.1865, 0.1826,  ..., 0.2106, 0.2054, 0.2043],
         [0.2750, 0.2941, 0.2784,  ..., 0.2491, 0.2711, 0.2723]],
        [[0.2805, 0.2698, 0.2687,  ..., 0.2835, 0.2179, 0.1563],
         [0.2443, 0.2511, 0.2606,  ..., 0.2560, 0.2403, 0.1563],
         [0.2376, 0.1872, 0.1941,  ..., 0.1880, 0.3183, 0.5310],
         [0.2376, 0.2919, 0.2766,  ..., 0.2724, 0.2235, 0.1563]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0720, 0.2484, 0.2461,  ..., 0.2619, 0.1722, 0.2549],
         [0.0720, 0.2421, 0.2543,  ..., 0.2534, 0.1722, 0.2564],
         [0.7840, 0.2523, 0.2462,  ..., 0.2108, 0.4833, 0.2308],
         [0.0720, 0.2572, 0.2534,  ..., 0.2739, 0.1722, 0.2579]],
        [[0.0763, 0.2671, 0.2667,  ..., 0.2624, 0.2573, 0.2633],
         [0.0763, 0.2444, 0.2456,  ..., 0.2500, 0.2575, 0.2452],
         [0.7711, 0.2189, 0.2205,  ..., 0.2110, 0.2243, 0.2192],
         [0.0763, 0.2696, 0.2672,  ..., 0.2766, 0.2609, 0.2723]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:15:42,392 [Process: 0] Synchronize training processes
2024-08-19 13:15:42,392 [Process: 0] Evaluating...
2024-08-19 13:15:42,394 [Process: 0] EPOCH 4:
2024-08-19 13:15:42,396 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:15:43,369 [Process: 0] Synchronize training processes
2024-08-19 13:15:43,370 [Process: 0] Evaluating...
2024-08-19 13:15:43,371 [Process: 0] EPOCH 5:
2024-08-19 13:15:43,373 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2830, 0.2753, 0.2788,  ..., 0.2703, 0.2101, 0.2222],
         [0.2480, 0.2492, 0.2498,  ..., 0.2509, 0.2101, 0.2565],
         [0.1879, 0.2042, 0.2011,  ..., 0.1976, 0.3698, 0.2615],
         [0.2811, 0.2713, 0.2703,  ..., 0.2812, 0.2101, 0.2598]],
        [[0.2211, 0.2682, 0.2757,  ..., 0.2660, 0.2750, 0.1542],
         [0.2211, 0.2570, 0.2492,  ..., 0.2564, 0.2483, 0.1542],
         [0.3366, 0.2139, 0.1984,  ..., 0.1958, 0.1969, 0.5374],
         [0.2211, 0.2610, 0.2767,  ..., 0.2817, 0.2798, 0.1542]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2120, 0.2783, 0.2709,  ..., 0.2718, 0.2641, 0.2648],
         [0.2120, 0.2489, 0.2455,  ..., 0.2405, 0.2492, 0.2442],
         [0.3639, 0.2044, 0.2211,  ..., 0.2111, 0.2389, 0.2201],
         [0.2120, 0.2684, 0.2625,  ..., 0.2766, 0.2478, 0.2709]],
        [[0.2473, 0.2746, 0.2801,  ..., 0.2468, 0.2331, 0.2162],
         [0.2483, 0.2475, 0.2423,  ..., 0.2472, 0.2331, 0.2194],
         [0.2475, 0.2108, 0.2182,  ..., 0.2412, 0.3007, 0.3264],
         [0.2568, 0.2671, 0.2594,  ..., 0.2648, 0.2331, 0.2380]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2885, 0.2909, 0.2784,  ..., 0.2857, 0.1707, 0.1919],
         [0.2430, 0.2477, 0.2446,  ..., 0.2429, 0.1707, 0.1919],
         [0.1914, 0.1859, 0.1942,  ..., 0.1939, 0.4880, 0.4244],
         [0.2771, 0.2755, 0.2828,  ..., 0.2775, 0.1707, 0.1919]],
        [[0.2572, 0.2811, 0.2853,  ..., 0.2773, 0.2709, 0.1719],
         [0.2547, 0.2473, 0.2406,  ..., 0.2448, 0.2456, 0.1719],
         [0.2467, 0.2063, 0.1951,  ..., 0.2032, 0.2024, 0.4844],
         [0.2414, 0.2652, 0.2790,  ..., 0.2746, 0.2812, 0.1719]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1390, 0.2822, 0.2738,  ..., 0.2787, 0.2738, 0.2732],
         [0.1390, 0.2374, 0.2325,  ..., 0.2346, 0.2406, 0.2356],
         [0.5830, 0.2116, 0.2189,  ..., 0.2124, 0.2242, 0.2180],
         [0.1390, 0.2688, 0.2748,  ..., 0.2743, 0.2613, 0.2733]],
        [[0.2173, 0.2847, 0.2797,  ..., 0.2803, 0.1445, 0.1611],
         [0.2173, 0.2384, 0.2396,  ..., 0.2387, 0.1445, 0.1611],
         [0.3267, 0.2061, 0.2087,  ..., 0.2039, 0.5666, 0.5166],
         [0.2387, 0.2709, 0.2720,  ..., 0.2770, 0.1445, 0.1611]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:15:44,346 [Process: 0] Synchronize training processes
2024-08-19 13:15:44,346 [Process: 0] Evaluating...
2024-08-19 13:15:44,348 [Process: 0] EPOCH 6:
2024-08-19 13:15:44,350 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:15:45,324 [Process: 0] Synchronize training processes
2024-08-19 13:15:45,324 [Process: 0] Evaluating...
2024-08-19 13:15:45,326 [Process: 0] EPOCH 7:
2024-08-19 13:15:45,328 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2994, 0.2892, 0.2952,  ..., 0.2996, 0.1163, 0.2138],
         [0.2312, 0.2323, 0.2404,  ..., 0.2364, 0.1163, 0.2138],
         [0.1897, 0.1928, 0.1951,  ..., 0.1875, 0.6510, 0.3585],
         [0.2798, 0.2857, 0.2693,  ..., 0.2765, 0.1163, 0.2138]],
        [[0.2202, 0.2826, 0.2850,  ..., 0.3051, 0.2913, 0.2174],
         [0.2517, 0.2313, 0.2344,  ..., 0.2399, 0.2341, 0.2174],
         [0.2983, 0.2171, 0.1920,  ..., 0.1847, 0.1967, 0.3479],
         [0.2299, 0.2689, 0.2886,  ..., 0.2703, 0.2779, 0.2174]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1318, 0.2951, 0.2998,  ..., 0.2800, 0.2854, 0.2850],
         [0.1318, 0.2271, 0.2308,  ..., 0.2296, 0.2312, 0.2270],
         [0.6046, 0.2096, 0.1958,  ..., 0.2080, 0.2190, 0.2134],
         [0.1318, 0.2682, 0.2737,  ..., 0.2823, 0.2644, 0.2745]],
        [[0.2234, 0.2852, 0.2848,  ..., 0.1932, 0.1344, 0.1246],
         [0.2234, 0.2238, 0.2344,  ..., 0.1932, 0.1344, 0.1246],
         [0.3297, 0.2096, 0.2055,  ..., 0.4205, 0.5969, 0.6262],
         [0.2234, 0.2814, 0.2753,  ..., 0.1932, 0.1344, 0.1246]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3113, 0.3035, 0.3278,  ..., 0.3133, 0.1063, 0.1562],
         [0.2257, 0.2222, 0.2187,  ..., 0.2285, 0.1063, 0.1562],
         [0.1865, 0.1775, 0.1742,  ..., 0.1867, 0.6812, 0.5313],
         [0.2765, 0.2968, 0.2794,  ..., 0.2715, 0.1063, 0.1562]],
        [[0.2168, 0.3081, 0.2940,  ..., 0.3034, 0.3074, 0.1715],
         [0.2225, 0.2252, 0.2198,  ..., 0.2317, 0.2218, 0.1715],
         [0.3329, 0.1822, 0.1952,  ..., 0.1825, 0.1854, 0.4854],
         [0.2277, 0.2845, 0.2910,  ..., 0.2824, 0.2855, 0.1715]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0749, 0.2989, 0.3028,  ..., 0.2954, 0.2900, 0.2868],
         [0.0749, 0.2220, 0.2234,  ..., 0.2245, 0.2291, 0.2173],
         [0.7752, 0.2041, 0.1971,  ..., 0.2029, 0.2155, 0.2134],
         [0.0749, 0.2749, 0.2767,  ..., 0.2772, 0.2654, 0.2824]],
        [[0.0488, 0.2972, 0.2985,  ..., 0.2896, 0.1322, 0.0837],
         [0.0488, 0.2192, 0.2218,  ..., 0.2223, 0.1322, 0.0837],
         [0.8537, 0.2112, 0.2061,  ..., 0.2131, 0.6035, 0.7488],
         [0.0488, 0.2724, 0.2736,  ..., 0.2749, 0.1322, 0.0837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:15:46,299 [Process: 0] Synchronize training processes
2024-08-19 13:15:46,299 [Process: 0] Evaluating...
2024-08-19 13:15:46,301 [Process: 0] EPOCH 8:
2024-08-19 13:15:46,303 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:15:47,274 [Process: 0] Synchronize training processes
2024-08-19 13:15:47,275 [Process: 0] Evaluating...
2024-08-19 13:15:47,276 [Process: 0] EPOCH 9:
2024-08-19 13:15:47,278 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3105, 0.3142, 0.3510,  ..., 0.3200, 0.1138, 0.1997],
         [0.2097, 0.2140, 0.2026,  ..., 0.2170, 0.1145, 0.2232],
         [0.1823, 0.1830, 0.1547,  ..., 0.1822, 0.6580, 0.3812],
         [0.2976, 0.2888, 0.2918,  ..., 0.2808, 0.1138, 0.1959]],
        [[0.2936, 0.3021, 0.3181,  ..., 0.2221, 0.3162, 0.1616],
         [0.2232, 0.2289, 0.2059,  ..., 0.2216, 0.2147, 0.1616],
         [0.2066, 0.1919, 0.1782,  ..., 0.3212, 0.1905, 0.5151],
         [0.2765, 0.2771, 0.2978,  ..., 0.2350, 0.2786, 0.1616]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1819, 0.3018, 0.2801,  ..., 0.2975, 0.1877, 0.3127],
         [0.1819, 0.2147, 0.2220,  ..., 0.2215, 0.2065, 0.2135],
         [0.4542, 0.2079, 0.2220,  ..., 0.1987, 0.4182, 0.1981],
         [0.1819, 0.2756, 0.2759,  ..., 0.2823, 0.1877, 0.2757]],
        [[0.1260, 0.3103, 0.2990,  ..., 0.2277, 0.1432, 0.1836],
         [0.1260, 0.2100, 0.2160,  ..., 0.2084, 0.1432, 0.1836],
         [0.6219, 0.1953, 0.2072,  ..., 0.3500, 0.5705, 0.4492],
         [0.1260, 0.2845, 0.2778,  ..., 0.2139, 0.1432, 0.1836]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3173, 0.3248, 0.3132,  ..., 0.3431, 0.0935, 0.1234],
         [0.2077, 0.2095, 0.1956,  ..., 0.1959, 0.0935, 0.1291],
         [0.1838, 0.1791, 0.1936,  ..., 0.1746, 0.7196, 0.6241],
         [0.2912, 0.2866, 0.2976,  ..., 0.2865, 0.0935, 0.1234]],
        [[0.2746, 0.3167, 0.3327,  ..., 0.2989, 0.3355, 0.1830],
         [0.2292, 0.2057, 0.1993,  ..., 0.2127, 0.1878, 0.1876],
         [0.2206, 0.2056, 0.1854,  ..., 0.1955, 0.1808, 0.4464],
         [0.2756, 0.2720, 0.2825,  ..., 0.2929, 0.2960, 0.1830]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1767, 0.3317, 0.3029,  ..., 0.3050, 0.1880, 0.3108],
         [0.1767, 0.2015, 0.2089,  ..., 0.2111, 0.1880, 0.2012],
         [0.4699, 0.1931, 0.2089,  ..., 0.2111, 0.4361, 0.2012],
         [0.1767, 0.2737, 0.2793,  ..., 0.2729, 0.1880, 0.2867]],
        [[0.0064, 0.3008, 0.3022,  ..., 0.1882, 0.0854, 0.3043],
         [0.0064, 0.2133, 0.2120,  ..., 0.2004, 0.0854, 0.2103],
         [0.9807, 0.2133, 0.2120,  ..., 0.4076, 0.7437, 0.2103],
         [0.0064, 0.2726, 0.2738,  ..., 0.2038, 0.0854, 0.2752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-19 13:15:48,249 [Process: 0] Synchronize training processes
2024-08-19 13:15:48,249 [Process: 0] Evaluating...
2024-08-19 13:15:48,251 [Process: 0] EPOCH 10:
2024-08-19 13:15:48,253 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:15:49,224 [Process: 0] Synchronize training processes
2024-08-19 13:15:49,224 [Process: 0] Evaluating...
2024-08-19 13:15:49,226 [Process: 0] EPOCH 11:
2024-08-19 13:15:49,227 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.2536, 0.3569, 0.3460,  ..., 0.3371, 0.1163, 0.1787],
         [0.2263, 0.1853, 0.1929,  ..., 0.1935, 0.1381, 0.1914],
         [0.2745, 0.1757, 0.1778,  ..., 0.1889, 0.6294, 0.4512],
         [0.2456, 0.2821, 0.2833,  ..., 0.2805, 0.1163, 0.1787]],
        [[0.2339, 0.3305, 0.3335,  ..., 0.3048, 0.3168, 0.1702],
         [0.2200, 0.1934, 0.1966,  ..., 0.2004, 0.1961, 0.2071],
         [0.3121, 0.1932, 0.1843,  ..., 0.2002, 0.1961, 0.4526],
         [0.2341, 0.2828, 0.2856,  ..., 0.2946, 0.2911, 0.1702]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1996, 0.2990, 0.2903,  ..., 0.3077, 0.1298, 0.3117],
         [0.1996, 0.2185, 0.2166,  ..., 0.2085, 0.1298, 0.2018],
         [0.4011, 0.2185, 0.2166,  ..., 0.2085, 0.6105, 0.2018],
         [0.1996, 0.2640, 0.2765,  ..., 0.2753, 0.1298, 0.2847]],
        [[0.0804, 0.3082, 0.2951,  ..., 0.3029, 0.1205, 0.3146],
         [0.0804, 0.2075, 0.2091,  ..., 0.2025, 0.1205, 0.1993],
         [0.7589, 0.2075, 0.2091,  ..., 0.2025, 0.6384, 0.1993],
         [0.0804, 0.2769, 0.2868,  ..., 0.2920, 0.1205, 0.2867]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2533, 0.3199, 0.3217,  ..., 0.3359, 0.1146, 0.1711],
         [0.2185, 0.1968, 0.1991,  ..., 0.1937, 0.1199, 0.1936],
         [0.2595, 0.1867, 0.1848,  ..., 0.1813, 0.6508, 0.4643],
         [0.2687, 0.2965, 0.2944,  ..., 0.2891, 0.1146, 0.1711]],
        [[0.3051, 0.3268, 0.3555,  ..., 0.3436, 0.3135, 0.1355],
         [0.1942, 0.1892, 0.1792,  ..., 0.1822, 0.1931, 0.1355],
         [0.1942, 0.1798, 0.1609,  ..., 0.1822, 0.1865, 0.5935],
         [0.3065, 0.3042, 0.3044,  ..., 0.2920, 0.3069, 0.1355]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2366, 0.3240, 0.3017,  ..., 0.3125, 0.1796, 0.2264],
         [0.2366, 0.2015, 0.2064,  ..., 0.2024, 0.1796, 0.2085],
         [0.2903, 0.2015, 0.2064,  ..., 0.2021, 0.4611, 0.3162],
         [0.2366, 0.2730, 0.2856,  ..., 0.2830, 0.1796, 0.2488]],
        [[0.0078, 0.3284, 0.3455,  ..., 0.3533, 0.1778, 0.3341],
         [0.0078, 0.1894, 0.1957,  ..., 0.1878, 0.1778, 0.1924],
         [0.9765, 0.1890, 0.1957,  ..., 0.1838, 0.4665, 0.1924],
         [0.0078, 0.2932, 0.2632,  ..., 0.2750, 0.1778, 0.2811]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2960, 0.3402, 0.3618,  ..., 0.3736, 0.1458, 0.1517],
         [0.2113, 0.1848, 0.1815,  ..., 0.1780, 0.1594, 0.1517],
         [0.2069, 0.1706, 0.1621,  ..., 0.1608, 0.5490, 0.5450],
         [0.2857, 0.3044, 0.2946,  ..., 0.2876, 0.1458, 0.1517]],
        [[0.2315, 0.3410, 0.3874,  ..., 0.3583, 0.3450, 0.2150],
         [0.2005, 0.1807, 0.1747,  ..., 0.1821, 0.1786, 0.2150],
         [0.3064, 0.1807, 0.1676,  ..., 0.1724, 0.1667, 0.3550],
         [0.2616, 0.2976, 0.2703,  ..., 0.2872, 0.3097, 0.2150]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:15:50,198 [Process: 0] Synchronize training processes
2024-08-19 13:15:50,199 [Process: 0] Evaluating...
2024-08-19 13:15:50,596 [Process: 0] EPOCH 12:
2024-08-19 13:15:50,600 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:15:51,579 [Process: 0] Synchronize training processes
2024-08-19 13:15:51,580 [Process: 0] Evaluating...
2024-08-19 13:15:51,581 [Process: 0] EPOCH 13:
2024-08-19 13:15:51,583 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0609, 0.1605, 0.3271,  ..., 0.3004, 0.1781, 0.3080],
         [0.0609, 0.1605, 0.1806,  ..., 0.2026, 0.1781, 0.2051],
         [0.8172, 0.5186, 0.1785,  ..., 0.2026, 0.4656, 0.2051],
         [0.0609, 0.1605, 0.3138,  ..., 0.2943, 0.1781, 0.2818]],
        [[0.1664, 0.2859, 0.3157,  ..., 0.3261, 0.1514, 0.1605],
         [0.1664, 0.2079, 0.1975,  ..., 0.1901, 0.1514, 0.1605],
         [0.5009, 0.2079, 0.1975,  ..., 0.1901, 0.5459, 0.5184],
         [0.1664, 0.2984, 0.2893,  ..., 0.2936, 0.1514, 0.1605]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2112, 0.3624, 0.3629,  ..., 0.3326, 0.1220, 0.1416],
         [0.2094, 0.1817, 0.1809,  ..., 0.1843, 0.1220, 0.1416],
         [0.3465, 0.1610, 0.1635,  ..., 0.1843, 0.6340, 0.5753],
         [0.2330, 0.2949, 0.2927,  ..., 0.2988, 0.1220, 0.1416]],
        [[0.1876, 0.2927, 0.3431,  ..., 0.3376, 0.3395, 0.1146],
         [0.1876, 0.1980, 0.1796,  ..., 0.1787, 0.1783, 0.1146],
         [0.4145, 0.1980, 0.1751,  ..., 0.1683, 0.1665, 0.6561],
         [0.2103, 0.3114, 0.3022,  ..., 0.3154, 0.3157, 0.1146]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0018, 0.3404, 0.3606,  ..., 0.3506, 0.2122, 0.1726],
         [0.0018, 0.1923, 0.1926,  ..., 0.1886, 0.2122, 0.1726],
         [0.9947, 0.1859, 0.1695,  ..., 0.1883, 0.3635, 0.4514],
         [0.0018, 0.2815, 0.2773,  ..., 0.2726, 0.2122, 0.2034]],
        [[0.1581, 0.3505, 0.3275,  ..., 0.3607, 0.1192, 0.3346],
         [0.1581, 0.1698, 0.1846,  ..., 0.1894, 0.1192, 0.1897],
         [0.5256, 0.1631, 0.1846,  ..., 0.1719, 0.6423, 0.1708],
         [0.1581, 0.3166, 0.3033,  ..., 0.2781, 0.1192, 0.3049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:15:52,555 [Process: 0] Synchronize training processes
2024-08-19 13:15:52,555 [Process: 0] Evaluating...
2024-08-19 13:15:52,557 [Process: 0] EPOCH 14:
2024-08-19 13:15:52,559 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:15:53,531 [Process: 0] Synchronize training processes
2024-08-19 13:15:53,532 [Process: 0] Evaluating...
2024-08-19 13:15:53,533 [Process: 0] EPOCH 15:
2024-08-19 13:15:53,535 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2010, 0.3626, 0.3562,  ..., 0.3142, 0.0999, 0.1209],
         [0.2010, 0.1830, 0.1742,  ..., 0.1939, 0.0999, 0.1209],
         [0.3664, 0.1664, 0.1710,  ..., 0.1939, 0.7002, 0.6374],
         [0.2317, 0.2880, 0.2987,  ..., 0.2980, 0.0999, 0.1209]],
        [[0.2019, 0.3848, 0.4256,  ..., 0.4195, 0.3660, 0.0598],
         [0.2019, 0.1607, 0.1608,  ..., 0.1433, 0.1787, 0.0598],
         [0.3944, 0.1487, 0.1402,  ..., 0.1390, 0.1668, 0.8206],
         [0.2019, 0.3058, 0.2734,  ..., 0.2981, 0.2885, 0.0598]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0036, 0.3595, 0.3782,  ..., 0.3802, 0.1947, 0.2131],
         [0.0036, 0.1955, 0.1798,  ..., 0.1820, 0.1947, 0.2131],
         [0.9893, 0.1702, 0.1593,  ..., 0.1640, 0.4160, 0.3194],
         [0.0036, 0.2748, 0.2826,  ..., 0.2737, 0.1947, 0.2544]],
        [[0.1148, 0.3230, 0.3478,  ..., 0.3469, 0.1402, 0.3033],
         [0.1148, 0.1874, 0.1811,  ..., 0.1842, 0.1402, 0.1912],
         [0.6555, 0.1874, 0.1699,  ..., 0.1601, 0.5794, 0.1892],
         [0.1148, 0.3021, 0.3011,  ..., 0.3087, 0.1402, 0.3163]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1337, 0.3831, 0.3512,  ..., 0.3581, 0.1137, 0.0992],
         [0.1337, 0.1701, 0.1808,  ..., 0.1775, 0.1137, 0.0992],
         [0.5988, 0.1701, 0.1683,  ..., 0.1731, 0.6589, 0.7024],
         [0.1337, 0.2767, 0.2997,  ..., 0.2913, 0.1137, 0.0992]],
        [[0.1898, 0.3547, 0.3466,  ..., 0.4627, 0.3993, 0.1460],
         [0.1898, 0.1713, 0.1776,  ..., 0.1346, 0.1568, 0.1460],
         [0.4306, 0.1713, 0.1776,  ..., 0.1284, 0.1446, 0.5620],
         [0.1898, 0.3026, 0.2982,  ..., 0.2744, 0.2993, 0.1460]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1291, 0.3731, 0.3739,  ..., 0.4519, 0.1739, 0.2432],
         [0.1291, 0.1757, 0.1800,  ..., 0.1518, 0.1739, 0.2235],
         [0.6127, 0.1695, 0.1800,  ..., 0.1409, 0.4783, 0.2305],
         [0.1291, 0.2817, 0.2661,  ..., 0.2555, 0.1739, 0.3029]],
        [[0.1084, 0.3238, 0.3382,  ..., 0.3981, 0.0502, 0.2932],
         [0.1084, 0.1930, 0.1833,  ..., 0.1624, 0.0502, 0.2016],
         [0.6747, 0.1930, 0.1828,  ..., 0.1624, 0.8494, 0.2016],
         [0.1084, 0.2901, 0.2958,  ..., 0.2770, 0.0502, 0.3036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:15:54,507 [Process: 0] Synchronize training processes
2024-08-19 13:15:54,507 [Process: 0] Evaluating...
2024-08-19 13:15:54,509 [Process: 0] EPOCH 16:
2024-08-19 13:15:54,511 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:15:55,480 [Process: 0] Synchronize training processes
2024-08-19 13:15:55,480 [Process: 0] Evaluating...
2024-08-19 13:15:55,482 [Process: 0] EPOCH 17:
2024-08-19 13:15:55,484 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1514, 0.3687, 0.3840,  ..., 0.2992, 0.0571, 0.0752],
         [0.1588, 0.1763, 0.1591,  ..., 0.1963, 0.0571, 0.0752],
         [0.5383, 0.1656, 0.1544,  ..., 0.1963, 0.8288, 0.7745],
         [0.1514, 0.2894, 0.3025,  ..., 0.3083, 0.0571, 0.0752]],
        [[0.1746, 0.4287, 0.5406,  ..., 0.4503, 0.4663, 0.0649],
         [0.1746, 0.1472, 0.1129,  ..., 0.1452, 0.1424, 0.0649],
         [0.4761, 0.1472, 0.1045,  ..., 0.1452, 0.1424, 0.8053],
         [0.1746, 0.2769, 0.2421,  ..., 0.2594, 0.2489, 0.0649]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1992, 0.3270, 0.3490,  ..., 0.3557, 0.1090, 0.2429],
         [0.1992, 0.1983, 0.1820,  ..., 0.1784, 0.1090, 0.2096],
         [0.4024, 0.1983, 0.1820,  ..., 0.1784, 0.6729, 0.2298],
         [0.1992, 0.2764, 0.2870,  ..., 0.2875, 0.1090, 0.3177]],
        [[0.0918, 0.3664, 0.3711,  ..., 0.3710, 0.0829, 0.3071],
         [0.0918, 0.1668, 0.1722,  ..., 0.1681, 0.0829, 0.2024],
         [0.7247, 0.1569, 0.1722,  ..., 0.1681, 0.7514, 0.2024],
         [0.0918, 0.3100, 0.2845,  ..., 0.2927, 0.0829, 0.2880]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1333, 0.3915, 0.3803,  ..., 0.3689, 0.1009, 0.1365],
         [0.1333, 0.1758, 0.1731,  ..., 0.1809, 0.1009, 0.1365],
         [0.6002, 0.1758, 0.1646,  ..., 0.1809, 0.6974, 0.5904],
         [0.1333, 0.2569, 0.2819,  ..., 0.2693, 0.1009, 0.1365]],
        [[0.1980, 0.3379, 0.3566,  ..., 0.4081, 0.4908, 0.2133],
         [0.1980, 0.1713, 0.1783,  ..., 0.1330, 0.1189, 0.2133],
         [0.3597, 0.1695, 0.1783,  ..., 0.1330, 0.1161, 0.3602],
         [0.2442, 0.3213, 0.2868,  ..., 0.3260, 0.2743, 0.2133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2037, 0.3420, 0.2848,  ..., 0.2834, 0.1476, 0.1804],
         [0.2037, 0.1834, 0.1911,  ..., 0.2103, 0.1476, 0.1804],
         [0.3889, 0.1834, 0.1911,  ..., 0.2103, 0.5571, 0.4589],
         [0.2037, 0.2911, 0.3331,  ..., 0.2961, 0.1476, 0.1804]],
        [[0.1192, 0.4166, 0.4138,  ..., 0.3523, 0.0888, 0.3420],
         [0.1192, 0.1510, 0.1476,  ..., 0.1840, 0.0888, 0.1916],
         [0.6423, 0.1510, 0.1476,  ..., 0.1840, 0.7337, 0.1916],
         [0.1192, 0.2814, 0.2911,  ..., 0.2797, 0.0888, 0.2747]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:15:56,455 [Process: 0] Synchronize training processes
2024-08-19 13:15:56,456 [Process: 0] Evaluating...
2024-08-19 13:15:56,458 [Process: 0] EPOCH 18:
2024-08-19 13:15:56,460 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:15:57,434 [Process: 0] Synchronize training processes
2024-08-19 13:15:57,435 [Process: 0] Evaluating...
2024-08-19 13:15:57,437 [Process: 0] EPOCH 19:
2024-08-19 13:15:57,438 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1519, 0.3469, 0.3084,  ..., 0.3883, 0.1399, 0.1125],
         [0.1519, 0.1812, 0.1979,  ..., 0.1694, 0.1399, 0.1125],
         [0.5444, 0.1812, 0.1979,  ..., 0.1694, 0.5803, 0.6624],
         [0.1519, 0.2907, 0.2957,  ..., 0.2730, 0.1399, 0.1125]],
        [[0.2151, 0.4340, 0.3686,  ..., 0.4838, 0.4856, 0.1126],
         [0.2010, 0.1358, 0.1462,  ..., 0.1086, 0.1156, 0.1126],
         [0.2614, 0.1179, 0.1462,  ..., 0.0881, 0.1156, 0.6623],
         [0.3225, 0.3123, 0.3390,  ..., 0.3194, 0.2831, 0.1126]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.4325, 0.3747,  ..., 0.4855, 0.1701, 0.2209],
         [0.2500, 0.1193, 0.1584,  ..., 0.1311, 0.1701, 0.2099],
         [0.2500, 0.1179, 0.1584,  ..., 0.1311, 0.4854, 0.2465],
         [0.2500, 0.3304, 0.3085,  ..., 0.2523, 0.1744, 0.3226]],
        [[0.1702, 0.3128, 0.3550,  ..., 0.3994, 0.0840, 0.2674],
         [0.1702, 0.2082, 0.1769,  ..., 0.1791, 0.0840, 0.2067],
         [0.4894, 0.2082, 0.1769,  ..., 0.1791, 0.7479, 0.2360],
         [0.1702, 0.2708, 0.2912,  ..., 0.2424, 0.0840, 0.2899]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1720, 0.3070, 0.1697,  ..., 0.3343, 0.1438, 0.1239],
         [0.1720, 0.2005, 0.1697,  ..., 0.1893, 0.1438, 0.1239],
         [0.4841, 0.2005, 0.4908,  ..., 0.1893, 0.5686, 0.6284],
         [0.1720, 0.2920, 0.1697,  ..., 0.2871, 0.1438, 0.1239]],
        [[0.3172, 0.5927, 0.4691,  ..., 0.5664, 0.3101, 0.1190],
         [0.1719, 0.0957, 0.1256,  ..., 0.1242, 0.1764, 0.1190],
         [0.1592, 0.0764, 0.1256,  ..., 0.1242, 0.1764, 0.6429],
         [0.3517, 0.2352, 0.2797,  ..., 0.1852, 0.3371, 0.1190]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3106, 0.2388, 0.2672,  ..., 0.4675, 0.2037, 0.3282],
         [0.2298, 0.1845, 0.1809,  ..., 0.1291, 0.2037, 0.1547],
         [0.2298, 0.1845, 0.1809,  ..., 0.1291, 0.3889, 0.1547],
         [0.2298, 0.3922, 0.3710,  ..., 0.2743, 0.2037, 0.3624]],
        [[0.1137, 0.3816, 0.3453,  ..., 0.2633, 0.1014, 0.2213],
         [0.1137, 0.1934, 0.1861,  ..., 0.2173, 0.1014, 0.2142],
         [0.6590, 0.1934, 0.1861,  ..., 0.2570, 0.6959, 0.3227],
         [0.1137, 0.2315, 0.2825,  ..., 0.2624, 0.1014, 0.2418]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:15:58,412 [Process: 0] Synchronize training processes
2024-08-19 13:15:58,412 [Process: 0] Evaluating...
2024-08-19 13:15:58,414 [Process: 0] EPOCH 20:
2024-08-19 13:15:58,415 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:15:59,386 [Process: 0] Synchronize training processes
2024-08-19 13:15:59,386 [Process: 0] Evaluating...
2024-08-19 13:15:59,388 [Process: 0] EPOCH 21:
2024-08-19 13:15:59,390 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1543, 0.4762, 0.3774,  ..., 0.4296, 0.1244, 0.1279],
         [0.1543, 0.1438, 0.1740,  ..., 0.1331, 0.1244, 0.1279],
         [0.5371, 0.1438, 0.1740,  ..., 0.1331, 0.6269, 0.6164],
         [0.1543, 0.2361, 0.2745,  ..., 0.3043, 0.1244, 0.1279]],
        [[0.2524, 0.3682, 0.3122,  ..., 0.3034, 0.2173, 0.1624],
         [0.1934, 0.1414, 0.1680,  ..., 0.1372, 0.1681, 0.1624],
         [0.1934, 0.1307, 0.1680,  ..., 0.1327, 0.1681, 0.5128],
         [0.3608, 0.3598, 0.3517,  ..., 0.4268, 0.4465, 0.1624]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8586, 0.1932, 0.1974,  ..., 0.4989, 0.2942, 0.1848],
         [0.0471, 0.1785, 0.1667,  ..., 0.1209, 0.1990, 0.1608],
         [0.0471, 0.1783, 0.1517,  ..., 0.0999, 0.1990, 0.1608],
         [0.0471, 0.4501, 0.4842,  ..., 0.2803, 0.3078, 0.4936]],
        [[0.1199, 0.2915, 0.2221,  ..., 0.5413, 0.1522, 0.3925],
         [0.1199, 0.2037, 0.2099,  ..., 0.1273, 0.1522, 0.1731],
         [0.6404, 0.2288, 0.2411,  ..., 0.1273, 0.5434, 0.1731],
         [0.1199, 0.2760, 0.3269,  ..., 0.2041, 0.1522, 0.2612]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1827, 0.1999, 0.1814,  ..., 0.1894, 0.1197, 0.1555],
         [0.1827, 0.1999, 0.1814,  ..., 0.1894, 0.1227, 0.1555],
         [0.4446, 0.3657, 0.4214,  ..., 0.3576, 0.6378, 0.5336],
         [0.1899, 0.2345, 0.2159,  ..., 0.2636, 0.1197, 0.1555]],
        [[0.3584, 0.5497, 0.7986,  ..., 0.5737, 0.4534, 0.1596],
         [0.1371, 0.1216, 0.0571,  ..., 0.0958, 0.1140, 0.1596],
         [0.1178, 0.1171, 0.0571,  ..., 0.0958, 0.1047, 0.5213],
         [0.3867, 0.2115, 0.0871,  ..., 0.2348, 0.3278, 0.1596]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.1683, 0.1481,  ..., 0.7387, 0.2928, 0.2396],
         [0.2500, 0.1683, 0.1481,  ..., 0.0770, 0.2355, 0.1812],
         [0.2500, 0.1683, 0.5556,  ..., 0.0770, 0.2355, 0.1757],
         [0.2500, 0.4952, 0.1481,  ..., 0.1074, 0.2361, 0.4035]],
        [[0.2412, 0.3227, 0.4030,  ..., 0.2106, 0.0458, 0.1761],
         [0.2412, 0.1948, 0.1638,  ..., 0.2106, 0.0458, 0.1761],
         [0.2764, 0.1948, 0.1543,  ..., 0.3231, 0.8625, 0.4717],
         [0.2412, 0.2877, 0.2788,  ..., 0.2557, 0.0458, 0.1761]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:16:00,359 [Process: 0] Synchronize training processes
2024-08-19 13:16:00,359 [Process: 0] Evaluating...
2024-08-19 13:16:00,758 [Process: 0] EPOCH 22:
2024-08-19 13:16:00,762 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:01,735 [Process: 0] Synchronize training processes
2024-08-19 13:16:01,736 [Process: 0] Evaluating...
2024-08-19 13:16:01,737 [Process: 0] EPOCH 23:
2024-08-19 13:16:01,739 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1438, 0.3613, 0.4153,  ..., 0.4397, 0.1125, 0.1465],
         [0.1438, 0.1695, 0.1613,  ..., 0.1523, 0.1125, 0.1465],
         [0.5686, 0.1527, 0.1613,  ..., 0.1523, 0.6624, 0.5604],
         [0.1438, 0.3165, 0.2620,  ..., 0.2557, 0.1125, 0.1465]],
        [[0.2524, 0.3377, 0.6366,  ..., 0.5106, 0.2361, 0.1153],
         [0.1939, 0.1727, 0.1039,  ..., 0.1466, 0.1592, 0.1153],
         [0.1939, 0.1463, 0.1039,  ..., 0.1340, 0.1592, 0.6540],
         [0.3598, 0.3433, 0.1555,  ..., 0.2088, 0.4455, 0.1153]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1901, 0.1891, 0.1240,  ..., 0.4962, 0.3759, 0.1278],
         [0.1547, 0.1818, 0.1240,  ..., 0.1419, 0.2080, 0.1278],
         [0.5006, 0.1818, 0.1240,  ..., 0.1416, 0.2080, 0.1278],
         [0.1547, 0.4473, 0.6281,  ..., 0.2203, 0.2080, 0.6166]],
        [[0.2500, 0.3583, 0.4863,  ..., 0.2003, 0.1017, 0.1634],
         [0.2500, 0.1973, 0.1550,  ..., 0.2003, 0.1017, 0.1634],
         [0.2500, 0.2016, 0.1515,  ..., 0.3600, 0.6950, 0.5097],
         [0.2500, 0.2429, 0.2073,  ..., 0.2394, 0.1017, 0.1634]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1870, 0.4060, 0.2898,  ..., 0.6489, 0.1157, 0.1731],
         [0.1870, 0.1586, 0.2038,  ..., 0.1170, 0.1157, 0.1731],
         [0.4070, 0.1562, 0.2038,  ..., 0.1170, 0.6528, 0.4370],
         [0.2189, 0.2793, 0.3025,  ..., 0.1170, 0.1157, 0.2168]],
        [[0.5403, 0.1951, 0.6356,  ..., 0.5344, 0.1889, 0.0917],
         [0.1608, 0.1811, 0.1090,  ..., 0.1507, 0.1889, 0.0917],
         [0.1370, 0.1811, 0.1090,  ..., 0.1289, 0.1889, 0.7248],
         [0.1619, 0.4427, 0.1464,  ..., 0.1860, 0.4333, 0.0917]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7623, 0.1216, 0.1648,  ..., 0.4539, 0.3697, 0.1526],
         [0.0792, 0.1216, 0.1648,  ..., 0.1484, 0.2101, 0.1526],
         [0.0792, 0.1216, 0.1648,  ..., 0.1484, 0.2101, 0.1526],
         [0.0792, 0.6351, 0.5055,  ..., 0.2493, 0.2101, 0.5422]],
        [[0.2162, 0.2724, 0.3907,  ..., 0.2147, 0.0667, 0.1793],
         [0.2001, 0.1959, 0.1806,  ..., 0.2147, 0.0667, 0.1793],
         [0.3836, 0.1959, 0.1750,  ..., 0.2817, 0.7999, 0.4368],
         [0.2001, 0.3358, 0.2537,  ..., 0.2890, 0.0667, 0.2047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:16:02,712 [Process: 0] Synchronize training processes
2024-08-19 13:16:02,713 [Process: 0] Evaluating...
2024-08-19 13:16:02,714 [Process: 0] EPOCH 24:
2024-08-19 13:16:02,716 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:03,714 [Process: 0] Synchronize training processes
2024-08-19 13:16:03,714 [Process: 0] Evaluating...
2024-08-19 13:16:03,716 [Process: 0] EPOCH 25:
2024-08-19 13:16:03,718 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1831, 0.7253, 0.2330,  ..., 0.4059, 0.1016, 0.1475],
         [0.1851, 0.0916, 0.1712,  ..., 0.1917, 0.1016, 0.1475],
         [0.4297, 0.0916, 0.1712,  ..., 0.1917, 0.6951, 0.5575],
         [0.2022, 0.0916, 0.4246,  ..., 0.2107, 0.1016, 0.1475]],
        [[0.6750, 0.1988, 0.4607,  ..., 0.1865, 0.0314, 0.1344],
         [0.1176, 0.1675, 0.1896,  ..., 0.1513, 0.0314, 0.1344],
         [0.1001, 0.1675, 0.1273,  ..., 0.1513, 0.0314, 0.5969],
         [0.1073, 0.4661, 0.2224,  ..., 0.5108, 0.9057, 0.1344]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3463, 0.0962, 0.1289,  ..., 0.6076, 0.6598, 0.1360],
         [0.1890, 0.0962, 0.1267,  ..., 0.1417, 0.1120, 0.1360],
         [0.2757, 0.0962, 0.1077,  ..., 0.1254, 0.1120, 0.2000],
         [0.1890, 0.7115, 0.6368,  ..., 0.1254, 0.1162, 0.5280]],
        [[0.8992, 0.2785, 0.3903,  ..., 0.1833, 0.0559, 0.1154],
         [0.0336, 0.2019, 0.1886,  ..., 0.1833, 0.0559, 0.1154],
         [0.0336, 0.2019, 0.1886,  ..., 0.3848, 0.8323, 0.6537],
         [0.0336, 0.3176, 0.2324,  ..., 0.2486, 0.0559, 0.1154]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1613, 0.1848, 0.3301,  ..., 0.6210, 0.0889, 0.1156],
         [0.1613, 0.1848, 0.2115,  ..., 0.1233, 0.0889, 0.1207],
         [0.5162, 0.1848, 0.2139,  ..., 0.1233, 0.7332, 0.6481],
         [0.1613, 0.4456, 0.2446,  ..., 0.1323, 0.0889, 0.1156]],
        [[0.6700, 0.4761, 0.8459,  ..., 0.7278, 0.0449, 0.1179],
         [0.1253, 0.1691, 0.0542,  ..., 0.0901, 0.0449, 0.1179],
         [0.1024, 0.1184, 0.0500,  ..., 0.0901, 0.0449, 0.6321],
         [0.1024, 0.2363, 0.0500,  ..., 0.0920, 0.8652, 0.1322]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1513, 0.0738, 0.1343,  ..., 0.7407, 0.7964, 0.1374],
         [0.0433, 0.0774, 0.1343,  ..., 0.1071, 0.0679, 0.1374],
         [0.7620, 0.0738, 0.1343,  ..., 0.0761, 0.0679, 0.1374],
         [0.0433, 0.7751, 0.5970,  ..., 0.0761, 0.0679, 0.5879]],
        [[0.9381, 0.1720, 0.4567,  ..., 0.1659, 0.0779, 0.0764],
         [0.0206, 0.1720, 0.1844,  ..., 0.1659, 0.0779, 0.0764],
         [0.0206, 0.4839, 0.1584,  ..., 0.5024, 0.7662, 0.7709],
         [0.0206, 0.1720, 0.2004,  ..., 0.1659, 0.0779, 0.0764]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:16:04,685 [Process: 0] Synchronize training processes
2024-08-19 13:16:04,686 [Process: 0] Evaluating...
2024-08-19 13:16:04,687 [Process: 0] EPOCH 26:
2024-08-19 13:16:04,689 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:05,659 [Process: 0] Synchronize training processes
2024-08-19 13:16:05,660 [Process: 0] Evaluating...
2024-08-19 13:16:05,662 [Process: 0] EPOCH 27:
2024-08-19 13:16:05,663 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1579, 0.6616, 0.4053,  ..., 0.6391, 0.0979, 0.1312],
         [0.1579, 0.1106, 0.1958,  ..., 0.1203, 0.0979, 0.1312],
         [0.3161, 0.1106, 0.1958,  ..., 0.1203, 0.7063, 0.6064],
         [0.3682, 0.1172, 0.2032,  ..., 0.1203, 0.0979, 0.1312]],
        [[0.1520, 0.0472, 0.6065,  ..., 0.0347, 0.0774, 0.1394],
         [0.1354, 0.0504, 0.1162,  ..., 0.0347, 0.0774, 0.1394],
         [0.1354, 0.0472, 0.1013,  ..., 0.0347, 0.0774, 0.5818],
         [0.5773, 0.8553, 0.1761,  ..., 0.8959, 0.7677, 0.1394]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6651, 0.1643, 0.1565,  ..., 0.5210, 0.6643, 0.1739],
         [0.1116, 0.1643, 0.1198,  ..., 0.1520, 0.1119, 0.1597],
         [0.1116, 0.5071, 0.1099,  ..., 0.1325, 0.1119, 0.1507],
         [0.1116, 0.1643, 0.6137,  ..., 0.1945, 0.1119, 0.5156]],
        [[0.8682, 0.3693, 0.4065,  ..., 0.2782, 0.0560, 0.1731],
         [0.0439, 0.1931, 0.1893,  ..., 0.2107, 0.0560, 0.1731],
         [0.0439, 0.1931, 0.1804,  ..., 0.2270, 0.8319, 0.4731],
         [0.0439, 0.2445, 0.2238,  ..., 0.2841, 0.0560, 0.1806]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1463, 0.4994, 0.6185,  ..., 0.5931, 0.0730, 0.1032],
         [0.1463, 0.1644, 0.1168,  ..., 0.1340, 0.0730, 0.1032],
         [0.5611, 0.1644, 0.1120,  ..., 0.1340, 0.7810, 0.6903],
         [0.1463, 0.1718, 0.1527,  ..., 0.1389, 0.0730, 0.1032]],
        [[0.1189, 0.0594, 0.6530,  ..., 0.0660, 0.1594, 0.1091],
         [0.1189, 0.0594, 0.1237,  ..., 0.0660, 0.1519, 0.1091],
         [0.6433, 0.0594, 0.1096,  ..., 0.0660, 0.1514, 0.6728],
         [0.1189, 0.8218, 0.1137,  ..., 0.8020, 0.5372, 0.1091]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9703, 0.1460, 0.1014,  ..., 0.5087, 0.5025, 0.1536],
         [0.0096, 0.1460, 0.1054,  ..., 0.1552, 0.1558, 0.1602],
         [0.0096, 0.5620, 0.1014,  ..., 0.1552, 0.1183, 0.1536],
         [0.0105, 0.1460, 0.6919,  ..., 0.1808, 0.2234, 0.5325]],
        [[0.9043, 0.3383, 0.4528,  ..., 0.3431, 0.0408, 0.1767],
         [0.0248, 0.1877, 0.1774,  ..., 0.2042, 0.0408, 0.1767],
         [0.0460, 0.1877, 0.1634,  ..., 0.2042, 0.8776, 0.4698],
         [0.0248, 0.2862, 0.2064,  ..., 0.2484, 0.0408, 0.1767]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:16:06,633 [Process: 0] Synchronize training processes
2024-08-19 13:16:06,633 [Process: 0] Evaluating...
2024-08-19 13:16:06,635 [Process: 0] EPOCH 28:
2024-08-19 13:16:06,637 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:07,614 [Process: 0] Synchronize training processes
2024-08-19 13:16:07,614 [Process: 0] Evaluating...
2024-08-19 13:16:07,616 [Process: 0] EPOCH 29:
2024-08-19 13:16:07,618 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1721, 0.4650, 0.5257,  ..., 0.5350, 0.1496, 0.1116],
         [0.1721, 0.1698, 0.1415,  ..., 0.1380, 0.1496, 0.1116],
         [0.4305, 0.1567, 0.1415,  ..., 0.1285, 0.5422, 0.6651],
         [0.2253, 0.2085, 0.1914,  ..., 0.1985, 0.1586, 0.1116]],
        [[0.0970, 0.0983, 0.6187,  ..., 0.2937, 0.1608, 0.1253],
         [0.0970, 0.0983, 0.1338,  ..., 0.1411, 0.1167, 0.1253],
         [0.7089, 0.0983, 0.1238,  ..., 0.1411, 0.1167, 0.6206],
         [0.0970, 0.7051, 0.1238,  ..., 0.4242, 0.6057, 0.1288]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9876, 0.0996, 0.0991,  ..., 0.7115, 0.3582, 0.0861],
         [0.0041, 0.1069, 0.0991,  ..., 0.0972, 0.1967, 0.0861],
         [0.0041, 0.0956, 0.0991,  ..., 0.0909, 0.2182, 0.0861],
         [0.0041, 0.6979, 0.7026,  ..., 0.1005, 0.2269, 0.7417]],
        [[0.7600, 0.2498, 0.3984,  ..., 0.3006, 0.0387, 0.1875],
         [0.0632, 0.2142, 0.1884,  ..., 0.2076, 0.0387, 0.1875],
         [0.1136, 0.2291, 0.1884,  ..., 0.2076, 0.8840, 0.4151],
         [0.0632, 0.3069, 0.2247,  ..., 0.2842, 0.0387, 0.2100]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1550, 0.5053, 0.5822,  ..., 0.6613, 0.1492, 0.1179],
         [0.1550, 0.1574, 0.1294,  ..., 0.1203, 0.1492, 0.1179],
         [0.5158, 0.1574, 0.1217,  ..., 0.1071, 0.5523, 0.6462],
         [0.1743, 0.1800, 0.1666,  ..., 0.1113, 0.1492, 0.1179]],
        [[0.1132, 0.1344, 0.8509,  ..., 0.5684, 0.1312, 0.1049],
         [0.1350, 0.0806, 0.0497,  ..., 0.1269, 0.0821, 0.1049],
         [0.6386, 0.0729, 0.0497,  ..., 0.1075, 0.0821, 0.6854],
         [0.1132, 0.7121, 0.0497,  ..., 0.1973, 0.7047, 0.1049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9687, 0.2019, 0.1367,  ..., 0.8089, 0.7066, 0.0713],
         [0.0104, 0.1673, 0.1367,  ..., 0.0682, 0.0978, 0.0713],
         [0.0104, 0.1673, 0.1367,  ..., 0.0615, 0.0978, 0.0713],
         [0.0104, 0.4635, 0.5898,  ..., 0.0615, 0.0978, 0.7861]],
        [[0.9225, 0.2409, 0.5619,  ..., 0.2752, 0.0324, 0.1662],
         [0.0237, 0.2180, 0.1407,  ..., 0.2178, 0.0324, 0.1662],
         [0.0301, 0.2691, 0.1407,  ..., 0.2178, 0.9028, 0.4844],
         [0.0237, 0.2719, 0.1567,  ..., 0.2892, 0.0324, 0.1831]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:16:08,593 [Process: 0] Synchronize training processes
2024-08-19 13:16:08,594 [Process: 0] Evaluating...
2024-08-19 13:16:08,596 [Process: 0] EPOCH 30:
2024-08-19 13:16:08,597 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:09,573 [Process: 0] Synchronize training processes
2024-08-19 13:16:09,574 [Process: 0] Evaluating...
2024-08-19 13:16:09,576 [Process: 0] EPOCH 31:
2024-08-19 13:16:09,578 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1314, 0.7047, 0.5956,  ..., 0.7094, 0.1460, 0.1402],
         [0.1314, 0.0984, 0.1298,  ..., 0.0969, 0.1460, 0.1402],
         [0.6057, 0.0984, 0.1298,  ..., 0.0969, 0.5487, 0.5794],
         [0.1314, 0.0984, 0.1447,  ..., 0.0969, 0.1593, 0.1402]],
        [[0.1281, 0.0739, 0.7969,  ..., 0.4847, 0.0194, 0.1268],
         [0.1281, 0.0739, 0.0684,  ..., 0.1378, 0.0194, 0.1268],
         [0.6158, 0.0739, 0.0674,  ..., 0.1378, 0.0194, 0.6197],
         [0.1281, 0.7782, 0.0674,  ..., 0.2397, 0.9417, 0.1268]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8529, 0.1755, 0.1306,  ..., 0.6472, 0.4574, 0.1245],
         [0.0490, 0.1755, 0.1306,  ..., 0.1176, 0.1378, 0.1245],
         [0.0490, 0.2814, 0.1306,  ..., 0.1176, 0.1378, 0.1245],
         [0.0490, 0.3675, 0.6082,  ..., 0.1176, 0.2670, 0.6266]],
        [[0.0278, 0.2084, 0.5053,  ..., 0.2753, 0.0219, 0.1903],
         [0.0278, 0.2084, 0.1630,  ..., 0.2142, 0.0219, 0.1903],
         [0.9167, 0.3555, 0.1630,  ..., 0.2142, 0.9344, 0.3834],
         [0.0278, 0.2278, 0.1688,  ..., 0.2963, 0.0219, 0.2360]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1116, 0.7145, 0.3263,  ..., 0.6235, 0.1273, 0.1217],
         [0.1116, 0.0952, 0.2099,  ..., 0.1255, 0.1324, 0.1217],
         [0.6652, 0.0952, 0.2115,  ..., 0.1255, 0.6129, 0.6348],
         [0.1116, 0.0952, 0.2522,  ..., 0.1255, 0.1273, 0.1217]],
        [[0.0974, 0.0373, 0.5407,  ..., 0.7004, 0.0708, 0.1292],
         [0.0974, 0.0373, 0.1531,  ..., 0.0999, 0.0708, 0.1292],
         [0.7077, 0.0373, 0.1531,  ..., 0.0999, 0.0708, 0.6125],
         [0.0974, 0.8880, 0.1531,  ..., 0.0999, 0.7875, 0.1292]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5354, 0.0511, 0.0784,  ..., 0.7238, 0.7803, 0.1013],
         [0.1514, 0.0511, 0.0784,  ..., 0.0921, 0.0732, 0.1013],
         [0.1514, 0.0511, 0.0784,  ..., 0.0921, 0.0732, 0.1013],
         [0.1619, 0.8468, 0.7647,  ..., 0.0921, 0.0732, 0.6960]],
        [[0.2605, 0.2782, 0.6358,  ..., 0.2563, 0.0454, 0.0918],
         [0.1032, 0.2167, 0.1284,  ..., 0.2051, 0.0454, 0.0994],
         [0.5330, 0.2167, 0.1179,  ..., 0.2093, 0.8637, 0.7171],
         [0.1032, 0.2884, 0.1179,  ..., 0.3292, 0.0454, 0.0918]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:16:10,580 [Process: 0] Synchronize training processes
2024-08-19 13:16:10,580 [Process: 0] Evaluating...
2024-08-19 13:16:10,978 [Process: 0] EPOCH 32:
2024-08-19 13:16:10,982 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:11,953 [Process: 0] Synchronize training processes
2024-08-19 13:16:11,953 [Process: 0] Evaluating...
2024-08-19 13:16:11,955 [Process: 0] EPOCH 33:
2024-08-19 13:16:11,957 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1469, 0.6499, 0.2394,  ..., 0.5820, 0.1184, 0.1379],
         [0.1469, 0.1167, 0.1915,  ..., 0.1386, 0.1184, 0.1379],
         [0.5339, 0.1167, 0.1915,  ..., 0.1386, 0.6447, 0.5863],
         [0.1723, 0.1167, 0.3776,  ..., 0.1408, 0.1184, 0.1379]],
        [[0.1169, 0.0953, 0.7985,  ..., 0.6693, 0.1838, 0.0732],
         [0.1169, 0.0757, 0.0672,  ..., 0.1102, 0.1265, 0.0732],
         [0.6492, 0.0757, 0.0672,  ..., 0.1102, 0.1265, 0.7804],
         [0.1169, 0.7534, 0.0672,  ..., 0.1102, 0.5632, 0.0732]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8014, 0.1249, 0.1160,  ..., 0.7266, 0.8383, 0.0485],
         [0.0662, 0.1249, 0.1160,  ..., 0.0911, 0.0706, 0.0485],
         [0.0662, 0.1249, 0.1160,  ..., 0.0911, 0.0355, 0.0485],
         [0.0662, 0.6254, 0.6519,  ..., 0.0911, 0.0555, 0.8545]],
        [[0.2082, 0.2315, 0.6444,  ..., 0.3098, 0.0808, 0.1249],
         [0.1660, 0.1909, 0.1287,  ..., 0.1856, 0.0808, 0.1249],
         [0.4598, 0.1890, 0.1134,  ..., 0.1856, 0.7577, 0.6252],
         [0.1660, 0.3886, 0.1134,  ..., 0.3189, 0.0808, 0.1249]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1272, 0.6789, 0.2954,  ..., 0.5751, 0.1231, 0.0885],
         [0.1272, 0.1070, 0.1693,  ..., 0.1416, 0.1231, 0.0885],
         [0.6185, 0.1070, 0.1693,  ..., 0.1416, 0.6307, 0.7346],
         [0.1272, 0.1070, 0.3660,  ..., 0.1416, 0.1231, 0.0885]],
        [[0.1670, 0.1790, 0.6896,  ..., 0.8019, 0.0839, 0.0873],
         [0.1670, 0.1614, 0.1035,  ..., 0.0660, 0.0839, 0.0873],
         [0.4989, 0.1614, 0.1035,  ..., 0.0660, 0.0839, 0.7381],
         [0.1670, 0.4983, 0.1035,  ..., 0.0660, 0.7483, 0.0873]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:12,925 [Process: 0] Synchronize training processes
2024-08-19 13:16:12,925 [Process: 0] Evaluating...
2024-08-19 13:16:12,927 [Process: 0] EPOCH 34:
2024-08-19 13:16:12,928 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:13,896 [Process: 0] Synchronize training processes
2024-08-19 13:16:13,896 [Process: 0] Evaluating...
2024-08-19 13:16:13,898 [Process: 0] EPOCH 35:
2024-08-19 13:16:13,899 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8347, 0.1103, 0.1331,  ..., 0.7002, 0.9259, 0.0689],
         [0.0551, 0.1103, 0.1458,  ..., 0.1083, 0.0247, 0.0689],
         [0.0551, 0.1103, 0.1331,  ..., 0.0958, 0.0247, 0.0689],
         [0.0551, 0.6692, 0.5880,  ..., 0.0958, 0.0247, 0.7933]],
        [[0.8694, 0.2416, 0.5353,  ..., 0.3040, 0.0506, 0.1287],
         [0.0361, 0.1803, 0.1549,  ..., 0.1817, 0.0506, 0.1287],
         [0.0584, 0.1780, 0.1549,  ..., 0.1817, 0.8483, 0.6140],
         [0.0361, 0.4001, 0.1549,  ..., 0.3327, 0.0506, 0.1287]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0989, 0.6089, 0.5723,  ..., 0.7917, 0.1121, 0.0792],
         [0.0989, 0.1252, 0.1426,  ..., 0.0694, 0.1137, 0.0792],
         [0.7032, 0.1252, 0.1426,  ..., 0.0694, 0.6620, 0.7625],
         [0.0989, 0.1408, 0.1426,  ..., 0.0694, 0.1121, 0.0792]],
        [[0.1347, 0.0725, 0.7515,  ..., 0.6356, 0.1078, 0.0861],
         [0.1347, 0.0772, 0.0828,  ..., 0.1173, 0.1093, 0.0861],
         [0.5959, 0.0725, 0.0828,  ..., 0.1173, 0.1059, 0.7418],
         [0.1347, 0.7779, 0.0828,  ..., 0.1298, 0.6770, 0.0861]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9773, 0.1106, 0.0452,  ..., 0.6135, 0.6351, 0.1109],
         [0.0076, 0.1106, 0.0452,  ..., 0.1288, 0.1216, 0.1174],
         [0.0076, 0.1106, 0.0452,  ..., 0.1288, 0.1216, 0.1109],
         [0.0076, 0.6683, 0.8643,  ..., 0.1288, 0.1216, 0.6607]],
        [[0.9344, 0.3711, 0.5289,  ..., 0.2577, 0.0139, 0.0691],
         [0.0219, 0.1806, 0.1537,  ..., 0.1948, 0.0139, 0.0691],
         [0.0219, 0.1806, 0.1437,  ..., 0.1948, 0.9583, 0.7928],
         [0.0219, 0.2677, 0.1736,  ..., 0.3526, 0.0139, 0.0691]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1267, 0.5253, 0.7036,  ..., 0.8205, 0.0930, 0.0923],
         [0.1267, 0.1399, 0.0988,  ..., 0.0598, 0.0930, 0.0923],
         [0.6199, 0.1399, 0.0988,  ..., 0.0598, 0.7210, 0.7231],
         [0.1267, 0.1950, 0.0988,  ..., 0.0598, 0.0930, 0.0923]],
        [[0.1816, 0.0431, 0.8533,  ..., 0.6840, 0.1881, 0.0989],
         [0.1620, 0.0431, 0.0489,  ..., 0.1053, 0.1454, 0.0989],
         [0.4944, 0.0431, 0.0489,  ..., 0.1053, 0.1407, 0.7033],
         [0.1620, 0.8706, 0.0489,  ..., 0.1053, 0.5259, 0.0989]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:16:14,906 [Process: 0] Synchronize training processes
2024-08-19 13:16:14,907 [Process: 0] Evaluating...
2024-08-19 13:16:14,908 [Process: 0] EPOCH 36:
2024-08-19 13:16:14,910 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:15,880 [Process: 0] Synchronize training processes
2024-08-19 13:16:15,880 [Process: 0] Evaluating...
2024-08-19 13:16:15,882 [Process: 0] EPOCH 37:
2024-08-19 13:16:15,884 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5896, 0.0845, 0.0826,  ..., 0.8961, 0.3422, 0.0507],
         [0.1263, 0.0845, 0.0826,  ..., 0.0346, 0.1697, 0.0507],
         [0.1577, 0.0845, 0.0826,  ..., 0.0346, 0.1666, 0.0507],
         [0.1263, 0.7466, 0.7522,  ..., 0.0346, 0.3215, 0.8478]],
        [[0.3936, 0.1473, 0.5466,  ..., 0.1163, 0.0417, 0.0685],
         [0.1527, 0.1473, 0.1420,  ..., 0.1163, 0.0417, 0.0685],
         [0.3010, 0.3574, 0.1420,  ..., 0.1163, 0.8749, 0.7945],
         [0.1527, 0.3480, 0.1694,  ..., 0.6512, 0.0417, 0.0685]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1376, 0.5573, 0.7882,  ..., 0.8199, 0.0799, 0.1306],
         [0.1376, 0.1478, 0.0706,  ..., 0.0600, 0.0799, 0.1306],
         [0.2456, 0.1453, 0.0706,  ..., 0.0600, 0.7604, 0.6081],
         [0.4793, 0.1497, 0.0706,  ..., 0.0600, 0.0799, 0.1306]],
        [[0.1525, 0.0292, 0.8384,  ..., 0.5553, 0.0854, 0.0508],
         [0.1519, 0.0292, 0.0539,  ..., 0.1445, 0.0854, 0.0508],
         [0.5436, 0.0292, 0.0539,  ..., 0.1445, 0.0854, 0.8475],
         [0.1519, 0.9125, 0.0539,  ..., 0.1556, 0.7439, 0.0508]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9911, 0.0755, 0.1419,  ..., 0.7925, 0.8856, 0.1328],
         [0.0030, 0.0766, 0.1419,  ..., 0.0692, 0.0381, 0.1328],
         [0.0030, 0.0755, 0.1419,  ..., 0.0692, 0.0381, 0.1328],
         [0.0030, 0.7724, 0.5744,  ..., 0.0692, 0.0381, 0.6016]],
        [[0.1871, 0.3601, 0.3000,  ..., 0.2275, 0.0247, 0.0865],
         [0.1319, 0.1821, 0.1900,  ..., 0.1862, 0.0247, 0.0882],
         [0.5490, 0.1820, 0.1900,  ..., 0.1832, 0.9259, 0.7388],
         [0.1319, 0.2759, 0.3199,  ..., 0.4031, 0.0247, 0.0865]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1362, 0.5976, 0.6562,  ..., 0.8844, 0.0842, 0.0895],
         [0.1362, 0.1341, 0.1146,  ..., 0.0385, 0.0842, 0.0957],
         [0.5123, 0.1341, 0.1146,  ..., 0.0385, 0.7474, 0.7253],
         [0.2153, 0.1341, 0.1146,  ..., 0.0385, 0.0842, 0.0895]],
        [[0.1612, 0.1053, 0.9490,  ..., 0.8136, 0.0107, 0.0642],
         [0.1612, 0.1053, 0.0170,  ..., 0.0621, 0.0107, 0.0642],
         [0.5163, 0.1053, 0.0170,  ..., 0.0621, 0.0107, 0.8075],
         [0.1612, 0.6840, 0.0170,  ..., 0.0621, 0.9678, 0.0642]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8494, 0.0856, 0.0877,  ..., 0.8324, 0.7132, 0.1276],
         [0.0448, 0.0866, 0.0979,  ..., 0.0559, 0.0956, 0.1447],
         [0.0609, 0.0856, 0.0877,  ..., 0.0559, 0.0956, 0.1276],
         [0.0448, 0.7422, 0.7267,  ..., 0.0559, 0.0956, 0.6000]],
        [[0.7962, 0.2166, 0.2961,  ..., 0.1871, 0.0513, 0.0923],
         [0.0453, 0.2050, 0.2027,  ..., 0.1880, 0.0513, 0.0923],
         [0.1133, 0.2050, 0.2027,  ..., 0.2143, 0.8462, 0.7230],
         [0.0453, 0.3734, 0.2985,  ..., 0.4105, 0.0513, 0.0923]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:16:16,855 [Process: 0] Synchronize training processes
2024-08-19 13:16:16,856 [Process: 0] Evaluating...
2024-08-19 13:16:16,857 [Process: 0] EPOCH 38:
2024-08-19 13:16:16,859 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:17,834 [Process: 0] Synchronize training processes
2024-08-19 13:16:17,834 [Process: 0] Evaluating...
2024-08-19 13:16:17,836 [Process: 0] EPOCH 39:
2024-08-19 13:16:17,838 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1172, 0.6851, 0.6509,  ..., 0.7696, 0.1027, 0.0960],
         [0.1172, 0.1050, 0.1164,  ..., 0.0768, 0.1041, 0.1002],
         [0.1380, 0.1050, 0.1164,  ..., 0.0768, 0.6905, 0.7079],
         [0.6275, 0.1050, 0.1164,  ..., 0.0768, 0.1027, 0.0960]],
        [[0.1560, 0.0324, 0.9382,  ..., 0.7007, 0.0280, 0.0941],
         [0.1560, 0.0324, 0.0206,  ..., 0.0998, 0.0280, 0.0941],
         [0.5188, 0.0324, 0.0206,  ..., 0.0998, 0.0280, 0.7176],
         [0.1693, 0.9028, 0.0206,  ..., 0.0998, 0.9160, 0.0941]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9021, 0.0848, 0.0626,  ..., 0.7929, 0.5737, 0.1180],
         [0.0326, 0.0848, 0.0642,  ..., 0.0690, 0.1064, 0.1180],
         [0.0326, 0.0848, 0.0626,  ..., 0.0690, 0.1064, 0.1689],
         [0.0326, 0.7457, 0.8105,  ..., 0.0690, 0.2135, 0.5952]],
        [[0.1327, 0.2358, 0.6924,  ..., 0.1838, 0.0639, 0.1632],
         [0.1327, 0.1962, 0.1025,  ..., 0.1838, 0.0639, 0.1632],
         [0.6018, 0.2053, 0.1025,  ..., 0.2206, 0.8084, 0.2149],
         [0.1327, 0.3627, 0.1025,  ..., 0.4118, 0.0639, 0.4586]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1708, 0.6273, 0.6591,  ..., 0.8711, 0.0972, 0.1248],
         [0.1708, 0.1298, 0.1136,  ..., 0.0430, 0.0972, 0.1248],
         [0.2894, 0.1214, 0.1136,  ..., 0.0430, 0.7084, 0.6256],
         [0.3689, 0.1214, 0.1136,  ..., 0.0430, 0.0972, 0.1248]],
        [[0.1200, 0.0415, 0.8054,  ..., 0.9240, 0.0029, 0.0948],
         [0.1200, 0.0415, 0.0649,  ..., 0.0253, 0.0029, 0.0948],
         [0.6401, 0.0415, 0.0649,  ..., 0.0253, 0.0029, 0.7155],
         [0.1200, 0.8754, 0.0649,  ..., 0.0253, 0.9912, 0.0948]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7936, 0.0695, 0.0679,  ..., 0.7445, 0.3498, 0.1115],
         [0.0646, 0.0695, 0.0679,  ..., 0.0852, 0.1332, 0.1115],
         [0.0771, 0.0695, 0.0695,  ..., 0.0852, 0.1332, 0.1115],
         [0.0646, 0.7914, 0.7947,  ..., 0.0852, 0.3838, 0.6656]],
        [[0.1394, 0.2368, 0.5741,  ..., 0.1858, 0.0265, 0.1605],
         [0.1330, 0.1994, 0.1420,  ..., 0.1858, 0.0265, 0.1605],
         [0.5947, 0.1994, 0.1420,  ..., 0.2636, 0.9205, 0.3392],
         [0.1330, 0.3644, 0.1420,  ..., 0.3649, 0.0265, 0.3399]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:16:18,807 [Process: 0] Synchronize training processes
2024-08-19 13:16:18,807 [Process: 0] Evaluating...
2024-08-19 13:16:18,809 [Process: 0] EPOCH 40:
2024-08-19 13:16:18,810 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:19,778 [Process: 0] Synchronize training processes
2024-08-19 13:16:19,778 [Process: 0] Evaluating...
2024-08-19 13:16:19,780 [Process: 0] EPOCH 41:
2024-08-19 13:16:19,782 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1332, 0.8271, 0.8073,  ..., 0.8320, 0.0686, 0.1167],
         [0.1332, 0.0576, 0.0685,  ..., 0.0560, 0.0686, 0.1167],
         [0.5970, 0.0576, 0.0621,  ..., 0.0560, 0.7941, 0.6498],
         [0.1366, 0.0576, 0.0621,  ..., 0.0560, 0.0686, 0.1167]],
        [[0.0925, 0.0995, 0.8751,  ..., 0.4331, 0.0402, 0.1135],
         [0.0925, 0.0995, 0.0416,  ..., 0.1486, 0.0414, 0.1135],
         [0.7226, 0.0995, 0.0416,  ..., 0.1486, 0.0402, 0.6596],
         [0.0925, 0.7014, 0.0416,  ..., 0.2697, 0.8781, 0.1135]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9670, 0.0697, 0.1148,  ..., 0.9209, 0.5252, 0.0439],
         [0.0110, 0.0697, 0.1148,  ..., 0.0288, 0.1374, 0.0439],
         [0.0110, 0.0697, 0.1148,  ..., 0.0251, 0.1374, 0.0439],
         [0.0110, 0.7910, 0.6556,  ..., 0.0251, 0.2001, 0.8684]],
        [[0.1257, 0.2524, 0.1827,  ..., 0.1902, 0.0401, 0.1664],
         [0.1257, 0.1923, 0.1697,  ..., 0.1902, 0.0401, 0.1664],
         [0.6229, 0.1923, 0.1697,  ..., 0.2689, 0.8798, 0.4414],
         [0.1257, 0.3631, 0.4779,  ..., 0.3508, 0.0401, 0.2259]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1457, 0.9015, 0.9194,  ..., 0.8257, 0.0555, 0.0838],
         [0.1457, 0.0328, 0.0269,  ..., 0.0581, 0.0555, 0.0838],
         [0.4076, 0.0328, 0.0269,  ..., 0.0581, 0.8335, 0.7485],
         [0.3010, 0.0328, 0.0269,  ..., 0.0581, 0.0555, 0.0838]],
        [[0.0324, 0.0790, 0.8105,  ..., 0.8411, 0.0438, 0.0653],
         [0.0324, 0.0790, 0.0700,  ..., 0.0530, 0.0438, 0.0653],
         [0.9029, 0.0790, 0.0598,  ..., 0.0530, 0.0438, 0.8040],
         [0.0324, 0.7629, 0.0598,  ..., 0.0530, 0.8687, 0.0653]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1593, 0.1022, 0.1020,  ..., 0.7263, 0.8219, 0.0882],
         [0.0921, 0.1022, 0.1020,  ..., 0.0912, 0.0594, 0.0882],
         [0.6565, 0.1022, 0.1020,  ..., 0.0912, 0.0594, 0.0882],
         [0.0921, 0.6934, 0.6940,  ..., 0.0912, 0.0594, 0.7353]],
        [[0.8622, 0.2225, 0.2497,  ..., 0.1809, 0.0276, 0.1370],
         [0.0361, 0.1956, 0.1945,  ..., 0.1809, 0.0276, 0.1370],
         [0.0655, 0.1956, 0.1945,  ..., 0.3209, 0.9172, 0.5500],
         [0.0361, 0.3862, 0.3613,  ..., 0.3173, 0.0276, 0.1761]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:16:20,754 [Process: 0] Synchronize training processes
2024-08-19 13:16:20,754 [Process: 0] Evaluating...
2024-08-19 13:16:21,154 [Process: 0] EPOCH 42:
2024-08-19 13:16:21,157 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:22,129 [Process: 0] Synchronize training processes
2024-08-19 13:16:22,129 [Process: 0] Evaluating...
2024-08-19 13:16:22,131 [Process: 0] EPOCH 43:
2024-08-19 13:16:22,133 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1505, 0.7380, 0.7132,  ..., 0.8758, 0.0822, 0.0843],
         [0.1505, 0.0873, 0.0956,  ..., 0.0414, 0.0822, 0.0843],
         [0.3890, 0.0873, 0.0956,  ..., 0.0414, 0.7534, 0.7471],
         [0.3100, 0.0873, 0.0956,  ..., 0.0414, 0.0822, 0.0843]],
        [[0.0624, 0.0370, 0.9095,  ..., 0.6613, 0.6643, 0.1106],
         [0.0624, 0.0370, 0.0302,  ..., 0.1129, 0.1072, 0.1106],
         [0.8127, 0.0370, 0.0302,  ..., 0.1129, 0.1072, 0.6678],
         [0.0624, 0.8891, 0.0302,  ..., 0.1129, 0.1212, 0.1110]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1911, 0.1404, 0.1200,  ..., 0.7350, 0.9259, 0.0977],
         [0.0885, 0.1404, 0.1200,  ..., 0.0883, 0.0247, 0.0977],
         [0.6318, 0.1635, 0.1200,  ..., 0.0883, 0.0247, 0.0977],
         [0.0885, 0.5558, 0.6400,  ..., 0.0883, 0.0247, 0.7069]],
        [[0.8908, 0.2443, 0.1823,  ..., 0.1856, 0.0395, 0.1478],
         [0.0296, 0.1939, 0.1823,  ..., 0.1852, 0.0395, 0.1478],
         [0.0499, 0.2149, 0.2310,  ..., 0.2211, 0.8814, 0.4989],
         [0.0296, 0.3469, 0.4044,  ..., 0.4081, 0.0395, 0.2054]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1123, 0.6662, 0.8295,  ..., 0.8914, 0.0974, 0.1022],
         [0.1123, 0.1108, 0.0568,  ..., 0.0362, 0.0974, 0.1022],
         [0.6286, 0.1108, 0.0568,  ..., 0.0362, 0.7078, 0.6933],
         [0.1467, 0.1122, 0.0568,  ..., 0.0362, 0.0974, 0.1022]],
        [[0.0469, 0.0149, 0.7530,  ..., 0.7552, 0.0268, 0.0763],
         [0.0469, 0.0149, 0.0823,  ..., 0.0816, 0.0268, 0.0763],
         [0.8594, 0.0149, 0.0823,  ..., 0.0816, 0.0268, 0.7628],
         [0.0469, 0.9552, 0.0823,  ..., 0.0816, 0.9195, 0.0847]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:23,104 [Process: 0] Synchronize training processes
2024-08-19 13:16:23,104 [Process: 0] Evaluating...
2024-08-19 13:16:23,106 [Process: 0] EPOCH 44:
2024-08-19 13:16:23,108 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:24,080 [Process: 0] Synchronize training processes
2024-08-19 13:16:24,080 [Process: 0] Evaluating...
2024-08-19 13:16:24,082 [Process: 0] EPOCH 45:
2024-08-19 13:16:24,084 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9811, 0.1004, 0.0631,  ..., 0.7480, 0.9076, 0.0974],
         [0.0063, 0.1004, 0.0631,  ..., 0.0840, 0.0308, 0.0974],
         [0.0063, 0.1004, 0.0631,  ..., 0.0840, 0.0308, 0.0974],
         [0.0063, 0.6989, 0.8108,  ..., 0.0840, 0.0308, 0.7078]],
        [[0.9796, 0.1789, 0.1389,  ..., 0.1731, 0.0285, 0.1615],
         [0.0060, 0.1783, 0.1389,  ..., 0.1731, 0.0285, 0.1615],
         [0.0084, 0.2067, 0.1401,  ..., 0.2565, 0.9145, 0.4669],
         [0.0060, 0.4361, 0.5821,  ..., 0.3974, 0.0285, 0.2102]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1145, 0.2250, 0.6333,  ..., 0.8967, 0.0711, 0.0642],
         [0.1145, 0.1630, 0.1222,  ..., 0.0344, 0.0711, 0.0642],
         [0.6082, 0.1630, 0.1222,  ..., 0.0344, 0.7868, 0.8075],
         [0.1627, 0.4490, 0.1222,  ..., 0.0344, 0.0711, 0.0642]],
        [[0.0539, 0.0233, 0.9013,  ..., 0.8041, 0.0401, 0.0880],
         [0.0539, 0.0233, 0.0329,  ..., 0.0653, 0.0401, 0.0880],
         [0.8383, 0.0233, 0.0329,  ..., 0.0653, 0.0401, 0.7359],
         [0.0539, 0.9300, 0.0329,  ..., 0.0653, 0.8796, 0.0880]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9907, 0.1434, 0.0814,  ..., 0.6108, 0.8829, 0.0522],
         [0.0031, 0.1434, 0.0814,  ..., 0.1297, 0.0390, 0.0522],
         [0.0031, 0.2173, 0.0886,  ..., 0.1297, 0.0390, 0.0522],
         [0.0031, 0.4959, 0.7485,  ..., 0.1297, 0.0390, 0.8434]],
        [[0.8905, 0.1432, 0.1396,  ..., 0.1335, 0.0497, 0.1152],
         [0.0309, 0.1432, 0.1396,  ..., 0.1335, 0.0497, 0.1152],
         [0.0477, 0.1506, 0.1396,  ..., 0.1335, 0.8509, 0.6474],
         [0.0309, 0.5629, 0.5813,  ..., 0.5996, 0.0497, 0.1222]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0808, 0.1312, 0.8452,  ..., 0.9354, 0.0684, 0.1012],
         [0.0808, 0.1312, 0.0516,  ..., 0.0215, 0.0684, 0.1012],
         [0.7576, 0.1312, 0.0516,  ..., 0.0215, 0.7948, 0.6964],
         [0.0808, 0.6064, 0.0516,  ..., 0.0215, 0.0684, 0.1012]],
        [[0.0835, 0.0112, 0.8829,  ..., 0.7573, 0.2293, 0.0618],
         [0.0835, 0.0112, 0.0390,  ..., 0.0830, 0.1239, 0.0618],
         [0.7496, 0.0112, 0.0390,  ..., 0.0798, 0.1239, 0.8147],
         [0.0835, 0.9663, 0.0390,  ..., 0.0798, 0.5228, 0.0618]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:25,060 [Process: 0] Synchronize training processes
2024-08-19 13:16:25,061 [Process: 0] Evaluating...
2024-08-19 13:16:25,063 [Process: 0] EPOCH 46:
2024-08-19 13:16:25,064 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:26,038 [Process: 0] Synchronize training processes
2024-08-19 13:16:26,038 [Process: 0] Evaluating...
2024-08-19 13:16:26,040 [Process: 0] EPOCH 47:
2024-08-19 13:16:26,042 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5726, 0.0958, 0.0881,  ..., 0.6807, 0.6315, 0.0490],
         [0.1150, 0.0958, 0.0881,  ..., 0.1064, 0.1220, 0.0490],
         [0.1973, 0.0976, 0.0881,  ..., 0.1064, 0.1196, 0.0490],
         [0.1150, 0.7109, 0.7357,  ..., 0.1064, 0.1269, 0.8530]],
        [[0.8293, 0.2170, 0.1163,  ..., 0.1519, 0.0500, 0.1299],
         [0.0363, 0.1621, 0.1163,  ..., 0.1519, 0.0500, 0.1299],
         [0.0981, 0.1621, 0.1163,  ..., 0.1519, 0.8501, 0.5937],
         [0.0363, 0.4589, 0.6511,  ..., 0.5443, 0.0500, 0.1464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1365, 0.2381, 0.6350,  ..., 0.9604, 0.0849, 0.1094],
         [0.1365, 0.1678, 0.1059,  ..., 0.0132, 0.0849, 0.1094],
         [0.5075, 0.1678, 0.1059,  ..., 0.0132, 0.7453, 0.6620],
         [0.2196, 0.4262, 0.1532,  ..., 0.0132, 0.0849, 0.1192]],
        [[0.0848, 0.0532, 0.9116,  ..., 0.8739, 0.0236, 0.0960],
         [0.0848, 0.0532, 0.0295,  ..., 0.0420, 0.0236, 0.0960],
         [0.7457, 0.0532, 0.0295,  ..., 0.0420, 0.0236, 0.7119],
         [0.0848, 0.8404, 0.0295,  ..., 0.0420, 0.9292, 0.0960]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8908, 0.1265, 0.0984,  ..., 0.8483, 0.7645, 0.0517],
         [0.0342, 0.1265, 0.0984,  ..., 0.0506, 0.0785, 0.0517],
         [0.0408, 0.2304, 0.0984,  ..., 0.0506, 0.0785, 0.0517],
         [0.0342, 0.5165, 0.7049,  ..., 0.0506, 0.0785, 0.8449]],
        [[0.9897, 0.5880, 0.1248,  ..., 0.1625, 0.0746, 0.1660],
         [0.0033, 0.1373, 0.1248,  ..., 0.1610, 0.0746, 0.1660],
         [0.0037, 0.1373, 0.1248,  ..., 0.1610, 0.7763, 0.3999],
         [0.0033, 0.1373, 0.6255,  ..., 0.5154, 0.0746, 0.2682]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1195, 0.2616, 0.8609,  ..., 0.9541, 0.0640, 0.0601],
         [0.1195, 0.1552, 0.0464,  ..., 0.0153, 0.0640, 0.0601],
         [0.5652, 0.1552, 0.0464,  ..., 0.0153, 0.8080, 0.8196],
         [0.1958, 0.4281, 0.0464,  ..., 0.0153, 0.0640, 0.0601]],
        [[0.0921, 0.0172, 0.8901,  ..., 0.7297, 0.0786, 0.0777],
         [0.0921, 0.0193, 0.0366,  ..., 0.0901, 0.0786, 0.0777],
         [0.7236, 0.0172, 0.0366,  ..., 0.0901, 0.0786, 0.7670],
         [0.0921, 0.9462, 0.0366,  ..., 0.0901, 0.7642, 0.0777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-19 13:16:27,015 [Process: 0] Synchronize training processes
2024-08-19 13:16:27,015 [Process: 0] Evaluating...
2024-08-19 13:16:27,017 [Process: 0] EPOCH 48:
2024-08-19 13:16:27,019 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:27,994 [Process: 0] Synchronize training processes
2024-08-19 13:16:27,995 [Process: 0] Evaluating...
2024-08-19 13:16:27,996 [Process: 0] EPOCH 49:
2024-08-19 13:16:27,998 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9929, 0.0719, 0.0624,  ..., 0.8432, 0.7320, 0.0602],
         [0.0024, 0.0719, 0.0624,  ..., 0.0523, 0.0853, 0.0602],
         [0.0024, 0.0719, 0.0624,  ..., 0.0523, 0.0974, 0.0602],
         [0.0024, 0.7844, 0.8129,  ..., 0.0523, 0.0853, 0.8195]],
        [[0.9968, 0.1399, 0.1474,  ..., 0.1632, 0.0516, 0.0579],
         [0.0011, 0.1399, 0.1474,  ..., 0.1584, 0.0516, 0.0579],
         [0.0011, 0.5443, 0.1474,  ..., 0.1584, 0.8451, 0.8263],
         [0.0011, 0.1760, 0.5578,  ..., 0.5200, 0.0516, 0.0579]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1102, 0.8302, 0.7394,  ..., 0.8919, 0.0812, 0.1153],
         [0.1102, 0.0566, 0.0869,  ..., 0.0360, 0.0812, 0.1153],
         [0.6635, 0.0566, 0.0869,  ..., 0.0360, 0.7565, 0.6542],
         [0.1161, 0.0566, 0.0869,  ..., 0.0360, 0.0812, 0.1153]],
        [[0.0880, 0.0152, 0.8559,  ..., 0.7070, 0.0082, 0.0831],
         [0.0880, 0.0152, 0.0480,  ..., 0.0977, 0.0082, 0.0831],
         [0.7361, 0.0152, 0.0480,  ..., 0.0977, 0.0082, 0.7508],
         [0.0880, 0.9545, 0.0480,  ..., 0.0977, 0.9753, 0.0831]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9827e-01, 5.6115e-02, 7.3425e-02,  ..., 9.2261e-01,
          9.3676e-01, 5.9036e-02],
         [5.7516e-04, 5.7504e-02, 7.8177e-02,  ..., 2.5796e-02,
          2.1081e-02, 5.9036e-02],
         [5.7516e-04, 5.6115e-02, 7.3425e-02,  ..., 2.5796e-02,
          2.1081e-02, 5.9036e-02],
         [5.7516e-04, 8.3027e-01, 7.7497e-01,  ..., 2.5796e-02,
          2.1081e-02, 8.2289e-01]],
        [[9.9618e-01, 2.1726e-01, 1.5327e-01,  ..., 1.2861e-01,
          2.7040e-02, 5.0261e-02],
         [1.2717e-03, 1.8796e-01, 1.5327e-01,  ..., 1.2861e-01,
          2.7040e-02, 5.0261e-02],
         [1.2717e-03, 2.1931e-01, 1.5327e-01,  ..., 1.2861e-01,
          9.1888e-01, 8.4922e-01],
         [1.2717e-03, 3.7547e-01, 5.4019e-01,  ..., 6.1418e-01,
          2.7040e-02, 5.0261e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0917, 0.7078, 0.8091,  ..., 0.8939, 0.1121, 0.0608],
         [0.0917, 0.0974, 0.0636,  ..., 0.0354, 0.1121, 0.0608],
         [0.0917, 0.0974, 0.0636,  ..., 0.0354, 0.6595, 0.8177],
         [0.7249, 0.0974, 0.0636,  ..., 0.0354, 0.1164, 0.0608]],
        [[0.0931, 0.0136, 0.8904,  ..., 0.7522, 0.0115, 0.1069],
         [0.0931, 0.0136, 0.0365,  ..., 0.0826, 0.0115, 0.1069],
         [0.7208, 0.0136, 0.0365,  ..., 0.0826, 0.0115, 0.6792],
         [0.0931, 0.9591, 0.0365,  ..., 0.0826, 0.9656, 0.1070]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:16:28,971 [Process: 0] Synchronize training processes
2024-08-19 13:16:28,972 [Process: 0] Evaluating...
2024-08-19 13:16:28,973 [Process: 0] EPOCH 50:
2024-08-19 13:16:28,975 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:29,949 [Process: 0] Synchronize training processes
2024-08-19 13:16:29,950 [Process: 0] Evaluating...
2024-08-19 13:16:29,951 [Process: 0] EPOCH 51:
2024-08-19 13:16:29,953 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7886e-01, 4.1851e-02, 1.3214e-01,  ..., 7.4844e-01,
          8.7616e-01, 6.8252e-02],
         [7.0472e-03, 4.1851e-02, 1.3214e-01,  ..., 8.3853e-02,
          4.1280e-02, 6.8252e-02],
         [7.0472e-03, 4.1851e-02, 1.3214e-01,  ..., 8.3853e-02,
          4.1280e-02, 6.8252e-02],
         [7.0472e-03, 8.7445e-01, 6.0358e-01,  ..., 8.3853e-02,
          4.1280e-02, 7.9524e-01]],
        [[9.9992e-01, 2.2332e-01, 1.2923e-01,  ..., 1.7000e-01,
          3.8274e-02, 7.4052e-02],
         [2.7214e-05, 1.8164e-01, 1.2923e-01,  ..., 1.7000e-01,
          3.8274e-02, 7.4052e-02],
         [2.7214e-05, 1.8912e-01, 1.2923e-01,  ..., 2.1281e-01,
          8.8518e-01, 7.7784e-01],
         [2.7214e-05, 4.0592e-01, 6.1231e-01,  ..., 4.4718e-01,
          3.8274e-02, 7.4052e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1178, 0.4758, 0.8093,  ..., 0.9459, 0.1294, 0.0968],
         [0.1178, 0.1462, 0.0636,  ..., 0.0180, 0.1294, 0.0968],
         [0.1433, 0.1462, 0.0636,  ..., 0.0180, 0.3550, 0.7096],
         [0.6211, 0.2317, 0.0636,  ..., 0.0180, 0.3861, 0.0968]],
        [[0.0182, 0.0125, 0.8378,  ..., 0.7085, 0.0068, 0.0378],
         [0.0182, 0.0125, 0.0541,  ..., 0.0972, 0.0068, 0.0378],
         [0.9455, 0.0125, 0.0541,  ..., 0.0972, 0.0068, 0.8866],
         [0.0182, 0.9624, 0.0541,  ..., 0.0972, 0.9797, 0.0378]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9270, 0.0335, 0.0900,  ..., 0.6766, 0.5438, 0.1167],
         [0.0243, 0.0339, 0.0900,  ..., 0.1078, 0.1410, 0.1170],
         [0.0243, 0.0335, 0.0900,  ..., 0.1078, 0.1742, 0.1167],
         [0.0243, 0.8992, 0.7299,  ..., 0.1078, 0.1410, 0.6495]],
        [[0.9962, 0.3302, 0.1321,  ..., 0.1639, 0.0343, 0.0853],
         [0.0013, 0.1878, 0.1321,  ..., 0.1639, 0.0343, 0.0827],
         [0.0013, 0.2180, 0.1321,  ..., 0.2001, 0.8971, 0.7492],
         [0.0013, 0.2641, 0.6037,  ..., 0.4721, 0.0343, 0.0827]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1445, 0.1834, 0.8643,  ..., 0.8912, 0.0589, 0.0454],
         [0.1445, 0.1422, 0.0452,  ..., 0.0363, 0.0589, 0.0454],
         [0.5044, 0.1422, 0.0452,  ..., 0.0363, 0.8234, 0.8637],
         [0.2067, 0.5323, 0.0452,  ..., 0.0363, 0.0589, 0.0454]],
        [[0.0656, 0.0344, 0.9076,  ..., 0.8623, 0.2058, 0.0511],
         [0.0656, 0.0344, 0.0308,  ..., 0.0459, 0.1347, 0.0511],
         [0.8033, 0.0344, 0.0308,  ..., 0.0459, 0.1283, 0.8467],
         [0.0656, 0.8968, 0.0308,  ..., 0.0459, 0.5312, 0.0511]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7962, 0.0757, 0.0622,  ..., 0.9219, 0.5610, 0.0393],
         [0.0643, 0.0757, 0.0622,  ..., 0.0260, 0.1259, 0.0393],
         [0.0752, 0.0767, 0.0622,  ..., 0.0260, 0.1259, 0.0393],
         [0.0643, 0.7719, 0.8135,  ..., 0.0260, 0.1871, 0.8822]],
        [[0.9879, 0.4729, 0.0864,  ..., 0.1665, 0.0218, 0.1219],
         [0.0038, 0.1656, 0.0864,  ..., 0.1665, 0.0218, 0.1219],
         [0.0044, 0.1856, 0.0943,  ..., 0.2206, 0.9345, 0.6261],
         [0.0038, 0.1759, 0.7329,  ..., 0.4464, 0.0218, 0.1301]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:16:30,927 [Process: 0] Synchronize training processes
2024-08-19 13:16:30,927 [Process: 0] Evaluating...
2024-08-19 13:16:31,329 [Process: 0] EPOCH 52:
2024-08-19 13:16:31,332 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1283, 0.1840, 0.9020,  ..., 0.9831, 0.0321, 0.0408],
         [0.1283, 0.1579, 0.0327,  ..., 0.0056, 0.0321, 0.0408],
         [0.4770, 0.1579, 0.0327,  ..., 0.0056, 0.9037, 0.8776],
         [0.2663, 0.5002, 0.0327,  ..., 0.0056, 0.0321, 0.0408]],
        [[0.0544, 0.0058, 0.9396,  ..., 0.9013, 0.0523, 0.0462],
         [0.0544, 0.0058, 0.0201,  ..., 0.0329, 0.0523, 0.0462],
         [0.8368, 0.0058, 0.0201,  ..., 0.0329, 0.0523, 0.8614],
         [0.0544, 0.9826, 0.0201,  ..., 0.0329, 0.8431, 0.0462]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8908, 0.0872, 0.0532,  ..., 0.9703, 0.9247, 0.0354],
         [0.0364, 0.0872, 0.0532,  ..., 0.0099, 0.0251, 0.0354],
         [0.0364, 0.0872, 0.0532,  ..., 0.0099, 0.0251, 0.0354],
         [0.0364, 0.7383, 0.8403,  ..., 0.0099, 0.0251, 0.8937]],
        [[0.8971, 0.1878, 0.1140,  ..., 0.1793, 0.0308, 0.1362],
         [0.0285, 0.1878, 0.1140,  ..., 0.1793, 0.0308, 0.1312],
         [0.0459, 0.2732, 0.1217,  ..., 0.3335, 0.9077, 0.6014],
         [0.0285, 0.3512, 0.6504,  ..., 0.3079, 0.0308, 0.1312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1483, 0.2582, 0.8608,  ..., 0.9542, 0.0423, 0.0664],
         [0.1483, 0.1844, 0.0464,  ..., 0.0153, 0.0423, 0.0664],
         [0.3941, 0.1844, 0.0464,  ..., 0.0153, 0.8731, 0.8008],
         [0.3093, 0.3729, 0.0464,  ..., 0.0153, 0.0423, 0.0664]],
        [[0.0823, 0.0078, 0.9035,  ..., 0.8907, 0.0108, 0.0536],
         [0.0810, 0.0078, 0.0322,  ..., 0.0364, 0.0108, 0.0536],
         [0.7557, 0.0078, 0.0322,  ..., 0.0364, 0.0108, 0.8393],
         [0.0810, 0.9765, 0.0322,  ..., 0.0364, 0.9676, 0.0536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:32,303 [Process: 0] Synchronize training processes
2024-08-19 13:16:32,303 [Process: 0] Evaluating...
2024-08-19 13:16:32,305 [Process: 0] EPOCH 53:
2024-08-19 13:16:32,307 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:33,277 [Process: 0] Synchronize training processes
2024-08-19 13:16:33,278 [Process: 0] Evaluating...
2024-08-19 13:16:33,279 [Process: 0] EPOCH 54:
2024-08-19 13:16:33,281 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9246, 0.0515, 0.0363,  ..., 0.7584, 0.8830, 0.0176],
         [0.0251, 0.0515, 0.0363,  ..., 0.0813, 0.0390, 0.0176],
         [0.0251, 0.0515, 0.0363,  ..., 0.0802, 0.0390, 0.0176],
         [0.0251, 0.8454, 0.8912,  ..., 0.0802, 0.0390, 0.9471]],
        [[0.4652, 0.1991, 0.1304,  ..., 0.1885, 0.0218, 0.1049],
         [0.1251, 0.1991, 0.1304,  ..., 0.1885, 0.0218, 0.1049],
         [0.2841, 0.2321, 0.1304,  ..., 0.3154, 0.9345, 0.6854],
         [0.1256, 0.3696, 0.6087,  ..., 0.3076, 0.0218, 0.1049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0704, 0.2724, 0.9579,  ..., 0.9710, 0.0567, 0.0505],
         [0.0704, 0.1597, 0.0140,  ..., 0.0097, 0.0567, 0.0505],
         [0.7888, 0.1597, 0.0140,  ..., 0.0097, 0.8300, 0.8484],
         [0.0704, 0.4082, 0.0140,  ..., 0.0097, 0.0567, 0.0505]],
        [[0.0703, 0.0084, 0.7295,  ..., 0.8805, 0.0106, 0.0834],
         [0.0703, 0.0084, 0.0902,  ..., 0.0398, 0.0106, 0.0834],
         [0.7892, 0.0084, 0.0902,  ..., 0.0398, 0.0106, 0.7497],
         [0.0703, 0.9748, 0.0902,  ..., 0.0398, 0.9683, 0.0834]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9868, 0.0733, 0.0415,  ..., 0.8999, 0.9366, 0.1157],
         [0.0044, 0.0733, 0.0415,  ..., 0.0334, 0.0211, 0.1157],
         [0.0044, 0.7800, 0.0415,  ..., 0.0334, 0.0211, 0.1459],
         [0.0044, 0.0733, 0.8755,  ..., 0.0334, 0.0211, 0.6227]],
        [[0.9953, 0.1916, 0.0871,  ..., 0.1825, 0.0115, 0.0871],
         [0.0016, 0.1916, 0.0871,  ..., 0.1825, 0.0115, 0.0871],
         [0.0016, 0.2450, 0.0871,  ..., 0.2618, 0.9656, 0.7387],
         [0.0016, 0.3717, 0.7387,  ..., 0.3733, 0.0115, 0.0871]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1113, 0.2772, 0.9221,  ..., 0.9685, 0.0378, 0.0484],
         [0.1113, 0.1576, 0.0260,  ..., 0.0105, 0.0378, 0.0484],
         [0.6340, 0.1576, 0.0260,  ..., 0.0105, 0.8866, 0.8547],
         [0.1435, 0.4076, 0.0260,  ..., 0.0105, 0.0378, 0.0484]],
        [[0.0600, 0.0086, 0.9045,  ..., 0.8946, 0.0193, 0.0586],
         [0.0600, 0.0086, 0.0318,  ..., 0.0351, 0.0205, 0.0586],
         [0.8200, 0.0086, 0.0318,  ..., 0.0351, 0.0193, 0.8241],
         [0.0600, 0.9741, 0.0318,  ..., 0.0351, 0.9408, 0.0586]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:34,253 [Process: 0] Synchronize training processes
2024-08-19 13:16:34,253 [Process: 0] Evaluating...
2024-08-19 13:16:34,255 [Process: 0] EPOCH 55:
2024-08-19 13:16:34,257 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:35,228 [Process: 0] Synchronize training processes
2024-08-19 13:16:35,228 [Process: 0] Evaluating...
2024-08-19 13:16:35,230 [Process: 0] EPOCH 56:
2024-08-19 13:16:35,232 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9833, 0.1124, 0.0605,  ..., 0.9282, 0.3131, 0.0897],
         [0.0056, 0.1063, 0.0655,  ..., 0.0239, 0.1144, 0.0897],
         [0.0056, 0.1063, 0.0605,  ..., 0.0239, 0.1108, 0.0897],
         [0.0056, 0.6750, 0.8135,  ..., 0.0239, 0.4616, 0.7309]],
        [[0.9301, 0.2039, 0.1121,  ..., 0.1665, 0.0242, 0.0707],
         [0.0125, 0.1923, 0.1121,  ..., 0.1665, 0.0242, 0.0707],
         [0.0448, 0.2705, 0.1408,  ..., 0.2954, 0.9273, 0.7879],
         [0.0125, 0.3333, 0.6350,  ..., 0.3716, 0.0242, 0.0707]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1197, 0.2933, 0.9136,  ..., 0.8983, 0.0751, 0.0740],
         [0.1197, 0.1680, 0.0288,  ..., 0.0339, 0.0751, 0.0740],
         [0.5628, 0.1680, 0.0288,  ..., 0.0339, 0.7746, 0.7779],
         [0.1977, 0.3707, 0.0288,  ..., 0.0339, 0.0751, 0.0740]],
        [[0.0777, 0.0179, 0.9654,  ..., 0.9120, 0.0042, 0.0377],
         [0.0777, 0.0179, 0.0115,  ..., 0.0293, 0.0044, 0.0377],
         [0.7669, 0.0179, 0.0115,  ..., 0.0293, 0.0042, 0.8869],
         [0.0777, 0.9462, 0.0115,  ..., 0.0293, 0.9871, 0.0377]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7544, 0.0704, 0.0884,  ..., 0.9449, 0.8181, 0.0706],
         [0.0768, 0.0704, 0.0884,  ..., 0.0184, 0.0573, 0.0706],
         [0.0920, 0.0704, 0.0884,  ..., 0.0184, 0.0573, 0.0706],
         [0.0768, 0.7889, 0.7348,  ..., 0.0184, 0.0674, 0.7881]],
        [[0.9872, 0.1932, 0.0600,  ..., 0.1850, 0.0269, 0.1300],
         [0.0020, 0.1932, 0.0600,  ..., 0.1850, 0.0269, 0.1300],
         [0.0088, 0.2943, 0.0600,  ..., 0.1850, 0.9193, 0.5270],
         [0.0020, 0.3192, 0.8199,  ..., 0.4451, 0.0269, 0.2129]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0804, 0.2350, 0.8678,  ..., 0.9259, 0.0287, 0.0680],
         [0.0804, 0.1595, 0.0441,  ..., 0.0247, 0.0288, 0.0680],
         [0.7551, 0.1595, 0.0441,  ..., 0.0247, 0.9137, 0.7959],
         [0.0841, 0.4461, 0.0441,  ..., 0.0247, 0.0287, 0.0680]],
        [[0.0396, 0.0259, 0.9311,  ..., 0.9503, 0.0061, 0.0491],
         [0.0396, 0.0259, 0.0230,  ..., 0.0166, 0.0061, 0.0491],
         [0.8813, 0.0259, 0.0230,  ..., 0.0166, 0.0061, 0.8528],
         [0.0396, 0.9224, 0.0230,  ..., 0.0166, 0.9817, 0.0491]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:36,205 [Process: 0] Synchronize training processes
2024-08-19 13:16:36,206 [Process: 0] Evaluating...
2024-08-19 13:16:36,207 [Process: 0] EPOCH 57:
2024-08-19 13:16:36,209 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:37,182 [Process: 0] Synchronize training processes
2024-08-19 13:16:37,182 [Process: 0] Evaluating...
2024-08-19 13:16:37,184 [Process: 0] EPOCH 58:
2024-08-19 13:16:37,186 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:38,157 [Process: 0] Synchronize training processes
2024-08-19 13:16:38,157 [Process: 0] Evaluating...
2024-08-19 13:16:38,159 [Process: 0] EPOCH 59:
2024-08-19 13:16:38,161 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9711, 0.0361, 0.0496,  ..., 0.8912, 0.9723, 0.0568],
         [0.0096, 0.0361, 0.0439,  ..., 0.0363, 0.0092, 0.0568],
         [0.0096, 0.0361, 0.0439,  ..., 0.0363, 0.0092, 0.0568],
         [0.0096, 0.8918, 0.8627,  ..., 0.0363, 0.0092, 0.8297]],
        [[0.9827, 0.1846, 0.0596,  ..., 0.2212, 0.0349, 0.0790],
         [0.0054, 0.1846, 0.0596,  ..., 0.1999, 0.0349, 0.0790],
         [0.0065, 0.2282, 0.0596,  ..., 0.1999, 0.8954, 0.7631],
         [0.0054, 0.4027, 0.8211,  ..., 0.3791, 0.0349, 0.0790]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0544, 0.2511, 0.8973,  ..., 0.8574, 0.0236, 0.0582],
         [0.0544, 0.1831, 0.0342,  ..., 0.0494, 0.0236, 0.0582],
         [0.8369, 0.1831, 0.0342,  ..., 0.0466, 0.9292, 0.8253],
         [0.0544, 0.3827, 0.0342,  ..., 0.0466, 0.0236, 0.0582]],
        [[0.0253, 0.0292, 0.9239,  ..., 0.9166, 0.0012, 0.0680],
         [0.0253, 0.0292, 0.0254,  ..., 0.0278, 0.0012, 0.0680],
         [0.9241, 0.0292, 0.0254,  ..., 0.0278, 0.0012, 0.7961],
         [0.0253, 0.9125, 0.0254,  ..., 0.0278, 0.9963, 0.0680]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8516, 0.0464, 0.0276,  ..., 0.9692, 0.8136, 0.0593],
         [0.0493, 0.0464, 0.0276,  ..., 0.0103, 0.0621, 0.0593],
         [0.0497, 0.0464, 0.0276,  ..., 0.0103, 0.0621, 0.0593],
         [0.0493, 0.8609, 0.9172,  ..., 0.0103, 0.0621, 0.8222]],
        [[0.8132, 0.1741, 0.0318,  ..., 0.1405, 0.0273, 0.1113],
         [0.0614, 0.1741, 0.0318,  ..., 0.1405, 0.0273, 0.1113],
         [0.0640, 0.1741, 0.0318,  ..., 0.1405, 0.9182, 0.6200],
         [0.0614, 0.4777, 0.9047,  ..., 0.5784, 0.0273, 0.1574]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1055, 0.1572, 0.9608,  ..., 0.9780, 0.0338, 0.0351],
         [0.1055, 0.1572, 0.0131,  ..., 0.0073, 0.0338, 0.0351],
         [0.6752, 0.1572, 0.0131,  ..., 0.0073, 0.8985, 0.8946],
         [0.1139, 0.5283, 0.0131,  ..., 0.0073, 0.0338, 0.0351]],
        [[0.0590, 0.0111, 0.9286,  ..., 0.9216, 0.0042, 0.0592],
         [0.0590, 0.0111, 0.0238,  ..., 0.0261, 0.0042, 0.0592],
         [0.8231, 0.0111, 0.0238,  ..., 0.0261, 0.0042, 0.8225],
         [0.0590, 0.9666, 0.0238,  ..., 0.0261, 0.9874, 0.0592]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:39,122 [Process: 0] Synchronize training processes
2024-08-19 13:16:39,123 [Process: 0] Evaluating...
2024-08-19 13:16:39,124 [Process: 0] EPOCH 60:
2024-08-19 13:16:39,126 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:40,103 [Process: 0] Synchronize training processes
2024-08-19 13:16:40,103 [Process: 0] Evaluating...
2024-08-19 13:16:40,105 [Process: 0] EPOCH 61:
2024-08-19 13:16:40,108 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8798, 0.0631, 0.0661,  ..., 0.9582, 0.8245, 0.1023],
         [0.0397, 0.0597, 0.0661,  ..., 0.0139, 0.0580, 0.1023],
         [0.0409, 0.0597, 0.0661,  ..., 0.0139, 0.0580, 0.1225],
         [0.0397, 0.8176, 0.8018,  ..., 0.0139, 0.0596, 0.6730]],
        [[0.9092, 0.1958, 0.0290,  ..., 0.1460, 0.0215, 0.0557],
         [0.0275, 0.1958, 0.0290,  ..., 0.1460, 0.0215, 0.0557],
         [0.0358, 0.2201, 0.0290,  ..., 0.1460, 0.9354, 0.8330],
         [0.0275, 0.3884, 0.9131,  ..., 0.5621, 0.0215, 0.0557]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0807, 0.1649, 0.9240,  ..., 0.9715, 0.0438, 0.0531],
         [0.0825, 0.1649, 0.0253,  ..., 0.0095, 0.0438, 0.0531],
         [0.7562, 0.1649, 0.0253,  ..., 0.0095, 0.8685, 0.8406],
         [0.0807, 0.5052, 0.0253,  ..., 0.0095, 0.0438, 0.0531]],
        [[0.1005, 0.0404, 0.8946,  ..., 0.8126, 0.0025, 0.0711],
         [0.1005, 0.0404, 0.0351,  ..., 0.0625, 0.0025, 0.0711],
         [0.6985, 0.0404, 0.0351,  ..., 0.0625, 0.0025, 0.7868],
         [0.1005, 0.8788, 0.0351,  ..., 0.0625, 0.9926, 0.0711]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9912, 0.1370, 0.0906,  ..., 0.9604, 0.7383, 0.1198],
         [0.0029, 0.1370, 0.0906,  ..., 0.0132, 0.0872, 0.1198],
         [0.0029, 0.1370, 0.0906,  ..., 0.0132, 0.0872, 0.1198],
         [0.0029, 0.5890, 0.7281,  ..., 0.0132, 0.0872, 0.6407]],
        [[0.8896, 0.1467, 0.0883,  ..., 0.1380, 0.1220, 0.0457],
         [0.0301, 0.1353, 0.0883,  ..., 0.1380, 0.1220, 0.0457],
         [0.0502, 0.1353, 0.0883,  ..., 0.1380, 0.6198, 0.8628],
         [0.0301, 0.5826, 0.7352,  ..., 0.5859, 0.1362, 0.0457]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0830, 0.1560, 0.9552,  ..., 0.9462, 0.0526, 0.0566],
         [0.0830, 0.1560, 0.0149,  ..., 0.0179, 0.0526, 0.0566],
         [0.7509, 0.1560, 0.0149,  ..., 0.0179, 0.8421, 0.8301],
         [0.0830, 0.5321, 0.0149,  ..., 0.0179, 0.0526, 0.0566]],
        [[0.0758, 0.0027, 0.9850,  ..., 0.8811, 0.0223, 0.0846],
         [0.0758, 0.0027, 0.0050,  ..., 0.0396, 0.0223, 0.0846],
         [0.7725, 0.0027, 0.0050,  ..., 0.0396, 0.0223, 0.7462],
         [0.0758, 0.9918, 0.0050,  ..., 0.0396, 0.9332, 0.0846]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:16:41,082 [Process: 0] Synchronize training processes
2024-08-19 13:16:41,082 [Process: 0] Evaluating...
2024-08-19 13:16:41,481 [Process: 0] EPOCH 62:
2024-08-19 13:16:41,485 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7575e-01, 6.5176e-02, 4.9272e-02,  ..., 9.6261e-01,
          9.9764e-01, 7.1445e-02],
         [3.7278e-02, 6.5176e-02, 4.9272e-02,  ..., 1.2464e-02,
          7.8758e-04, 7.1445e-02],
         [4.9700e-02, 6.5176e-02, 4.9272e-02,  ..., 1.2464e-02,
          7.8758e-04, 7.1445e-02],
         [3.7278e-02, 8.0447e-01, 8.5219e-01,  ..., 1.2464e-02,
          7.8758e-04, 7.8567e-01]],
        [[9.5489e-01, 1.1909e-01, 5.0911e-02,  ..., 1.1809e-01,
          2.9848e-02, 8.2154e-02],
         [9.1004e-03, 1.1909e-01, 5.1631e-02,  ..., 1.1809e-01,
          2.9848e-02, 8.2154e-02],
         [2.6907e-02, 1.1909e-01, 5.0911e-02,  ..., 1.1809e-01,
          9.1046e-01, 7.5354e-01],
         [9.1004e-03, 6.4272e-01, 8.4655e-01,  ..., 6.4573e-01,
          2.9848e-02, 8.2154e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0630, 0.4464, 0.9100,  ..., 0.9617, 0.0463, 0.0329],
         [0.0630, 0.1642, 0.0300,  ..., 0.0128, 0.0463, 0.0329],
         [0.8110, 0.1642, 0.0300,  ..., 0.0128, 0.8610, 0.9013],
         [0.0630, 0.2252, 0.0300,  ..., 0.0128, 0.0463, 0.0329]],
        [[0.0764, 0.0562, 0.8971,  ..., 0.8950, 0.0154, 0.0459],
         [0.0698, 0.0562, 0.0343,  ..., 0.0350, 0.0154, 0.0459],
         [0.7839, 0.0562, 0.0343,  ..., 0.0350, 0.0154, 0.8624],
         [0.0698, 0.8313, 0.0343,  ..., 0.0350, 0.9538, 0.0459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0636, 0.0516, 0.0396,  ..., 0.8734, 0.6838, 0.0391],
         [0.0573, 0.0513, 0.0396,  ..., 0.0422, 0.0692, 0.0391],
         [0.8218, 0.0513, 0.0396,  ..., 0.0422, 0.0669, 0.0391],
         [0.0573, 0.8457, 0.8811,  ..., 0.0422, 0.1801, 0.8826]],
        [[0.9436, 0.1740, 0.0266,  ..., 0.1494, 0.0563, 0.0527],
         [0.0108, 0.1740, 0.0266,  ..., 0.1494, 0.0563, 0.0527],
         [0.0348, 0.1740, 0.0266,  ..., 0.1494, 0.8310, 0.8419],
         [0.0108, 0.4781, 0.9203,  ..., 0.5517, 0.0563, 0.0527]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0760, 0.5096, 0.8920,  ..., 0.8446, 0.0510, 0.0856],
         [0.0760, 0.1551, 0.0360,  ..., 0.0518, 0.0510, 0.0856],
         [0.7710, 0.1551, 0.0360,  ..., 0.0518, 0.8471, 0.7433],
         [0.0771, 0.1803, 0.0360,  ..., 0.0518, 0.0510, 0.0856]],
        [[0.0531, 0.0094, 0.8938,  ..., 0.9020, 0.0065, 0.0584],
         [0.0531, 0.0094, 0.0354,  ..., 0.0327, 0.0065, 0.0584],
         [0.8407, 0.0094, 0.0354,  ..., 0.0327, 0.0065, 0.8249],
         [0.0531, 0.9717, 0.0354,  ..., 0.0327, 0.9805, 0.0584]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:42,460 [Process: 0] Synchronize training processes
2024-08-19 13:16:42,461 [Process: 0] Evaluating...
2024-08-19 13:16:42,462 [Process: 0] EPOCH 63:
2024-08-19 13:16:42,464 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:43,439 [Process: 0] Synchronize training processes
2024-08-19 13:16:43,440 [Process: 0] Evaluating...
2024-08-19 13:16:43,442 [Process: 0] EPOCH 64:
2024-08-19 13:16:43,443 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7737, 0.0631, 0.0606,  ..., 0.9842, 0.9474, 0.0280],
         [0.0478, 0.0631, 0.0606,  ..., 0.0053, 0.0195, 0.0280],
         [0.1308, 0.0631, 0.0606,  ..., 0.0053, 0.0166, 0.0280],
         [0.0478, 0.8106, 0.8181,  ..., 0.0053, 0.0166, 0.9160]],
        [[0.4402, 0.1739, 0.0944,  ..., 0.1289, 0.0470, 0.0879],
         [0.0795, 0.1739, 0.0944,  ..., 0.1289, 0.0470, 0.0879],
         [0.4007, 0.2215, 0.0944,  ..., 0.1289, 0.8590, 0.7364],
         [0.0795, 0.4307, 0.7169,  ..., 0.6132, 0.0470, 0.0879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1039, 0.3966, 0.3845,  ..., 0.9798, 0.0572, 0.0469],
         [0.1039, 0.1994, 0.1765,  ..., 0.0067, 0.0572, 0.0469],
         [0.6884, 0.1912, 0.1765,  ..., 0.0067, 0.8284, 0.8592],
         [0.1039, 0.2128, 0.2625,  ..., 0.0067, 0.0572, 0.0469]],
        [[0.0580, 0.0063, 0.9162,  ..., 0.9743, 0.3866, 0.0673],
         [0.0580, 0.0063, 0.0313,  ..., 0.0086, 0.1787, 0.0648],
         [0.8259, 0.0063, 0.0262,  ..., 0.0086, 0.1645, 0.8031],
         [0.0580, 0.9810, 0.0262,  ..., 0.0086, 0.2702, 0.0648]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9653e-01, 2.9370e-02, 2.2671e-02,  ..., 9.0979e-01,
          9.9233e-01, 3.3248e-02],
         [1.1580e-03, 2.9370e-02, 2.2671e-02,  ..., 3.0069e-02,
          2.5552e-03, 3.3248e-02],
         [1.1580e-03, 2.9370e-02, 2.2671e-02,  ..., 3.0069e-02,
          2.5552e-03, 3.3248e-02],
         [1.1580e-03, 9.1189e-01, 9.3199e-01,  ..., 3.0069e-02,
          2.5552e-03, 9.0026e-01]],
        [[9.9749e-01, 1.7889e-01, 6.8220e-02,  ..., 1.3636e-01,
          4.8363e-02, 7.9601e-02],
         [7.7877e-04, 1.7889e-01, 6.8220e-02,  ..., 1.4091e-01,
          4.8363e-02, 7.9601e-02],
         [9.5721e-04, 1.9637e-01, 6.8220e-02,  ..., 1.3636e-01,
          8.5491e-01, 7.6120e-01],
         [7.7877e-04, 4.4585e-01, 7.9534e-01,  ..., 5.8638e-01,
          4.8363e-02, 7.9601e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1537, 0.3426, 0.6064,  ..., 0.9458, 0.0549, 0.0341],
         [0.1537, 0.2286, 0.1312,  ..., 0.0181, 0.0549, 0.0341],
         [0.4897, 0.2124, 0.1312,  ..., 0.0181, 0.8352, 0.8977],
         [0.2029, 0.2164, 0.1312,  ..., 0.0181, 0.0549, 0.0341]],
        [[0.0422, 0.0074, 0.9881,  ..., 0.9360, 0.0023, 0.0579],
         [0.0422, 0.0074, 0.0040,  ..., 0.0213, 0.0023, 0.0561],
         [0.8733, 0.0074, 0.0040,  ..., 0.0213, 0.0023, 0.8298],
         [0.0422, 0.9777, 0.0040,  ..., 0.0213, 0.9930, 0.0561]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:44,415 [Process: 0] Synchronize training processes
2024-08-19 13:16:44,415 [Process: 0] Evaluating...
2024-08-19 13:16:44,417 [Process: 0] EPOCH 65:
2024-08-19 13:16:44,419 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:45,419 [Process: 0] Synchronize training processes
2024-08-19 13:16:45,419 [Process: 0] Evaluating...
2024-08-19 13:16:45,421 [Process: 0] EPOCH 66:
2024-08-19 13:16:45,423 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9999e-01, 4.6226e-02, 1.0006e-01,  ..., 9.5448e-01,
          5.9312e-01, 1.0144e-01],
         [4.0069e-06, 4.6226e-02, 9.3086e-02,  ..., 1.5174e-02,
          7.1251e-02, 1.1196e-01],
         [4.0069e-06, 4.6226e-02, 1.1077e-01,  ..., 1.5174e-02,
          7.1251e-02, 1.0144e-01],
         [4.0069e-06, 8.6132e-01, 6.9608e-01,  ..., 1.5174e-02,
          2.6438e-01, 6.8516e-01]],
        [[9.9906e-01, 2.1807e-01, 1.1560e-01,  ..., 1.5180e-01,
          2.7737e-02, 1.4356e-01],
         [2.7962e-04, 2.3647e-01, 9.3601e-02,  ..., 1.6282e-01,
          2.7737e-02, 1.4356e-01],
         [3.7919e-04, 2.1807e-01, 9.1329e-02,  ..., 1.5180e-01,
          9.1679e-01, 4.8877e-01],
         [2.7962e-04, 3.2739e-01, 6.9947e-01,  ..., 5.3357e-01,
          2.7737e-02, 2.2412e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3723e-01, 3.0874e-01, 8.3536e-01,  ..., 8.9158e-01,
          2.3631e-02, 3.0104e-02],
         [1.3723e-01, 2.6585e-01, 5.7880e-02,  ..., 3.6140e-02,
          2.3631e-02, 3.0104e-02],
         [5.3837e-01, 2.0272e-01, 5.3378e-02,  ..., 3.6140e-02,
          9.2911e-01, 9.0969e-01],
         [1.8717e-01, 2.2270e-01, 5.3378e-02,  ..., 3.6140e-02,
          2.3631e-02, 3.0104e-02]],
        [[4.7120e-02, 8.1313e-03, 9.9300e-01,  ..., 9.5498e-01,
          5.7939e-04, 5.6294e-02],
         [4.7120e-02, 8.1313e-03, 2.3326e-03,  ..., 1.5006e-02,
          5.7939e-04, 5.6294e-02],
         [8.5864e-01, 8.1313e-03, 2.3326e-03,  ..., 1.5006e-02,
          5.7939e-04, 8.3112e-01],
         [4.7120e-02, 9.7561e-01, 2.3326e-03,  ..., 1.5006e-02,
          9.9826e-01, 5.6294e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9995e-01, 6.8301e-03, 3.9412e-02,  ..., 9.0566e-01,
          4.1054e-01, 3.3127e-02],
         [1.5271e-05, 6.8301e-03, 3.9412e-02,  ..., 3.1448e-02,
          9.3955e-02, 3.3127e-02],
         [1.5271e-05, 6.8301e-03, 3.9412e-02,  ..., 3.1448e-02,
          7.8400e-02, 3.3127e-02],
         [1.5271e-05, 9.7951e-01, 8.8176e-01,  ..., 3.1448e-02,
          4.1711e-01, 9.0062e-01]],
        [[9.9708e-01, 1.2565e-01, 3.9280e-02,  ..., 9.9242e-02,
          1.3250e-02, 3.1686e-02],
         [9.7387e-04, 1.6186e-01, 3.9280e-02,  ..., 1.1748e-01,
          1.3250e-02, 3.1686e-02],
         [9.7387e-04, 1.2565e-01, 3.9280e-02,  ..., 9.9242e-02,
          9.6025e-01, 9.0494e-01],
         [9.7387e-04, 5.8685e-01, 8.8216e-01,  ..., 6.8404e-01,
          1.3250e-02, 3.1686e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0760, 0.1942, 0.9548,  ..., 0.9729, 0.0530, 0.0349],
         [0.0760, 0.2385, 0.0151,  ..., 0.0090, 0.0530, 0.0349],
         [0.7720, 0.3731, 0.0151,  ..., 0.0090, 0.8409, 0.8954],
         [0.0760, 0.1942, 0.0151,  ..., 0.0090, 0.0530, 0.0349]],
        [[0.0592, 0.0249, 0.8619,  ..., 0.8688, 0.0656, 0.0400],
         [0.0592, 0.0249, 0.0460,  ..., 0.0437, 0.0709, 0.0400],
         [0.8224, 0.0249, 0.0460,  ..., 0.0437, 0.0656, 0.8801],
         [0.0592, 0.9252, 0.0460,  ..., 0.0437, 0.7980, 0.0400]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:46,396 [Process: 0] Synchronize training processes
2024-08-19 13:16:46,397 [Process: 0] Evaluating...
2024-08-19 13:16:46,398 [Process: 0] EPOCH 67:
2024-08-19 13:16:46,400 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:47,374 [Process: 0] Synchronize training processes
2024-08-19 13:16:47,374 [Process: 0] Evaluating...
2024-08-19 13:16:47,376 [Process: 0] EPOCH 68:
2024-08-19 13:16:47,378 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9992e-01, 2.0222e-02, 7.4239e-02,  ..., 9.5482e-01,
          8.8895e-01, 3.7162e-02],
         [2.6927e-05, 2.0222e-02, 7.4239e-02,  ..., 1.5175e-02,
          3.7015e-02, 3.7162e-02],
         [2.6927e-05, 2.0222e-02, 7.4239e-02,  ..., 1.5003e-02,
          3.7015e-02, 3.7162e-02],
         [2.6927e-05, 9.3933e-01, 7.7728e-01,  ..., 1.5003e-02,
          3.7015e-02, 8.8851e-01]],
        [[8.9582e-01, 1.1425e-01, 4.8740e-02,  ..., 7.8019e-02,
          1.6555e-02, 2.6235e-02],
         [2.2156e-02, 1.3851e-01, 4.8740e-02,  ..., 8.2091e-02,
          1.6555e-02, 2.6235e-02],
         [5.9872e-02, 1.1425e-01, 4.8740e-02,  ..., 7.8019e-02,
          9.5033e-01, 9.2130e-01],
         [2.2156e-02, 6.3300e-01, 8.5378e-01,  ..., 7.6187e-01,
          1.6555e-02, 2.6235e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0877, 0.2131, 0.9682,  ..., 0.9930, 0.0599, 0.0478],
         [0.0877, 0.2555, 0.0106,  ..., 0.0023, 0.0599, 0.0478],
         [0.7368, 0.1995, 0.0106,  ..., 0.0023, 0.8203, 0.8566],
         [0.0877, 0.3319, 0.0106,  ..., 0.0023, 0.0599, 0.0478]],
        [[0.0467, 0.0191, 0.9943,  ..., 0.9741, 0.0441, 0.0745],
         [0.0467, 0.0181, 0.0019,  ..., 0.0086, 0.0441, 0.0745],
         [0.8600, 0.0181, 0.0019,  ..., 0.0086, 0.0441, 0.7766],
         [0.0467, 0.9447, 0.0019,  ..., 0.0086, 0.8676, 0.0745]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8728e-01, 7.7845e-02, 8.6460e-02,  ..., 8.6535e-01,
          8.2159e-01, 1.2357e-01],
         [4.2397e-03, 7.7845e-02, 6.5087e-02,  ..., 4.4884e-02,
          5.5308e-02, 1.4252e-01],
         [4.2397e-03, 7.7845e-02, 7.7334e-02,  ..., 4.4884e-02,
          6.7796e-02, 1.2357e-01],
         [4.2397e-03, 7.6647e-01, 7.7112e-01,  ..., 4.4884e-02,
          5.5308e-02, 6.1034e-01]],
        [[9.9726e-01, 7.9666e-02, 1.0492e-01,  ..., 6.3893e-02,
          2.2891e-02, 1.4839e-01],
         [9.1195e-04, 8.3850e-02, 1.1588e-01,  ..., 6.5780e-02,
          2.2891e-02, 1.4839e-01],
         [9.1195e-04, 7.9666e-02, 1.0492e-01,  ..., 6.3652e-02,
          9.3133e-01, 2.3623e-01],
         [9.1195e-04, 7.5682e-01, 6.7428e-01,  ..., 8.0667e-01,
          2.2891e-02, 4.6699e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1253, 0.2194, 0.8669,  ..., 0.9967, 0.0262, 0.0217],
         [0.1253, 0.3602, 0.0452,  ..., 0.0011, 0.0262, 0.0217],
         [0.5670, 0.1407, 0.0430,  ..., 0.0011, 0.9215, 0.9349],
         [0.1825, 0.2797, 0.0448,  ..., 0.0011, 0.0262, 0.0217]],
        [[0.0488, 0.0110, 0.9834,  ..., 0.8754, 0.1196, 0.0657],
         [0.0488, 0.0110, 0.0055,  ..., 0.0516, 0.1735, 0.0657],
         [0.8537, 0.0110, 0.0055,  ..., 0.0365, 0.1196, 0.8030],
         [0.0488, 0.9670, 0.0055,  ..., 0.0365, 0.5873, 0.0657]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:48,352 [Process: 0] Synchronize training processes
2024-08-19 13:16:48,352 [Process: 0] Evaluating...
2024-08-19 13:16:48,354 [Process: 0] EPOCH 69:
2024-08-19 13:16:48,356 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:49,327 [Process: 0] Synchronize training processes
2024-08-19 13:16:49,327 [Process: 0] Evaluating...
2024-08-19 13:16:49,329 [Process: 0] EPOCH 70:
2024-08-19 13:16:49,331 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9904e-01, 3.7522e-02, 1.0990e-01,  ..., 2.1438e-01,
          9.6860e-01, 3.0668e-02],
         [3.2028e-04, 3.7812e-02, 9.6552e-02,  ..., 3.2766e-01,
          1.0466e-02, 3.0668e-02],
         [3.2028e-04, 3.7522e-02, 1.4329e-01,  ..., 2.3582e-01,
          1.0466e-02, 3.0668e-02],
         [3.2028e-04, 8.8714e-01, 6.5025e-01,  ..., 2.2214e-01,
          1.0466e-02, 9.0800e-01]],
        [[9.5121e-01, 5.0123e-02, 1.7507e-02,  ..., 2.0394e-02,
          4.6720e-02, 3.4693e-02],
         [1.1538e-02, 5.4199e-02, 1.7507e-02,  ..., 2.0394e-02,
          4.6720e-02, 3.4693e-02],
         [2.5715e-02, 5.0123e-02, 1.7507e-02,  ..., 2.0394e-02,
          8.5984e-01, 8.9592e-01],
         [1.1538e-02, 8.4555e-01, 9.4748e-01,  ..., 9.3882e-01,
          4.6720e-02, 3.4693e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1201, 0.1490, 0.9587,  ..., 0.9801, 0.0386, 0.0487],
         [0.1209, 0.4585, 0.0158,  ..., 0.0066, 0.0386, 0.0487],
         [0.6088, 0.1293, 0.0127,  ..., 0.0066, 0.8842, 0.8539],
         [0.1502, 0.2631, 0.0127,  ..., 0.0066, 0.0386, 0.0487]],
        [[0.0290, 0.0176, 0.9723,  ..., 0.8812, 0.0081, 0.0234],
         [0.0290, 0.0176, 0.0092,  ..., 0.0396, 0.0081, 0.0234],
         [0.9130, 0.0176, 0.0092,  ..., 0.0396, 0.0081, 0.9297],
         [0.0290, 0.9471, 0.0092,  ..., 0.0396, 0.9757, 0.0234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8761, 0.0493, 0.0614,  ..., 0.9644, 0.8864, 0.0171],
         [0.0388, 0.0489, 0.0614,  ..., 0.0119, 0.0358, 0.0171],
         [0.0464, 0.0489, 0.0631,  ..., 0.0119, 0.0421, 0.0171],
         [0.0388, 0.8528, 0.8142,  ..., 0.0119, 0.0358, 0.9488]],
        [[0.8048, 0.0446, 0.0405,  ..., 0.0419, 0.0147, 0.0318],
         [0.0508, 0.0446, 0.0415,  ..., 0.0419, 0.0147, 0.0318],
         [0.0937, 0.0446, 0.0405,  ..., 0.0419, 0.9560, 0.9045],
         [0.0508, 0.8663, 0.8775,  ..., 0.8743, 0.0147, 0.0318]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0555, 0.2840, 0.8728,  ..., 0.9872, 0.0410, 0.0730],
         [0.0555, 0.2444, 0.0421,  ..., 0.0041, 0.0410, 0.0730],
         [0.8335, 0.1442, 0.0421,  ..., 0.0041, 0.8771, 0.7810],
         [0.0555, 0.3274, 0.0431,  ..., 0.0046, 0.0410, 0.0730]],
        [[0.0476, 0.0031, 0.8940,  ..., 0.9027, 0.9965, 0.0313],
         [0.0476, 0.0031, 0.0394,  ..., 0.0395, 0.0012, 0.0313],
         [0.8572, 0.0031, 0.0333,  ..., 0.0289, 0.0012, 0.9061],
         [0.0476, 0.9907, 0.0333,  ..., 0.0289, 0.0012, 0.0313]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:50,302 [Process: 0] Synchronize training processes
2024-08-19 13:16:50,303 [Process: 0] Evaluating...
2024-08-19 13:16:50,305 [Process: 0] EPOCH 71:
2024-08-19 13:16:50,306 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:51,278 [Process: 0] Synchronize training processes
2024-08-19 13:16:51,278 [Process: 0] Evaluating...
2024-08-19 13:16:51,683 [Process: 0] EPOCH 72:
2024-08-19 13:16:51,691 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9826e-01, 8.1354e-03, 1.7695e-02,  ..., 9.7735e-01,
          8.3462e-01, 4.6854e-02],
         [5.7885e-04, 7.8874e-03, 1.7695e-02,  ..., 7.5485e-03,
          5.3711e-02, 4.6854e-02],
         [5.7885e-04, 7.8874e-03, 1.7695e-02,  ..., 7.5485e-03,
          5.7959e-02, 4.6854e-02],
         [5.7885e-04, 9.7609e-01, 9.4692e-01,  ..., 7.5485e-03,
          5.3711e-02, 8.5944e-01]],
        [[4.3246e-01, 1.3088e-01, 2.3720e-02,  ..., 4.0888e-02,
          5.8428e-03, 7.9596e-02],
         [9.8489e-02, 1.8765e-01, 2.1077e-02,  ..., 4.0888e-02,
          5.8428e-03, 7.9596e-02],
         [3.7056e-01, 1.1925e-01, 2.1077e-02,  ..., 4.0888e-02,
          9.8247e-01, 7.6121e-01],
         [9.8489e-02, 5.6222e-01, 9.3413e-01,  ..., 8.7734e-01,
          5.8428e-03, 7.9596e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0322, 0.9184, 0.9735,  ..., 0.9796, 0.0268, 0.0730],
         [0.0322, 0.0305, 0.0088,  ..., 0.0068, 0.0268, 0.0730],
         [0.9033, 0.0255, 0.0088,  ..., 0.0068, 0.9197, 0.7809],
         [0.0322, 0.0255, 0.0088,  ..., 0.0068, 0.0268, 0.0730]],
        [[0.0891, 0.1304, 0.9705,  ..., 0.9336, 0.0413, 0.0565],
         [0.0891, 0.2197, 0.0098,  ..., 0.0221, 0.0413, 0.0565],
         [0.7326, 0.1278, 0.0098,  ..., 0.0221, 0.0413, 0.8306],
         [0.0891, 0.5222, 0.0098,  ..., 0.0221, 0.8760, 0.0565]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0290, 0.0472, 0.0770,  ..., 0.9696, 0.9519, 0.1556],
         [0.0290, 0.0472, 0.0770,  ..., 0.0112, 0.0160, 0.3165],
         [0.9130, 0.0472, 0.0770,  ..., 0.0096, 0.0160, 0.1556],
         [0.0290, 0.8585, 0.7689,  ..., 0.0096, 0.0160, 0.3724]],
        [[0.9925, 0.0889, 0.0487,  ..., 0.0596, 0.1295, 0.0710],
         [0.0025, 0.1247, 0.0372,  ..., 0.0668, 0.1402, 0.0710],
         [0.0025, 0.0889, 0.0393,  ..., 0.0596, 0.6009, 0.7871],
         [0.0025, 0.6976, 0.8748,  ..., 0.8140, 0.1295, 0.0710]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
2024-08-19 13:16:52,669 [Process: 0] Synchronize training processes
2024-08-19 13:16:52,670 [Process: 0] Evaluating...
2024-08-19 13:16:52,671 [Process: 0] EPOCH 73:
2024-08-19 13:16:52,673 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:53,647 [Process: 0] Synchronize training processes
2024-08-19 13:16:53,648 [Process: 0] Evaluating...
2024-08-19 13:16:53,649 [Process: 0] EPOCH 74:
2024-08-19 13:16:53,652 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0714, 0.2041, 0.9731,  ..., 0.9846, 0.0217, 0.0451],
         [0.0714, 0.1436, 0.0090,  ..., 0.0051, 0.0217, 0.0451],
         [0.7857, 0.1048, 0.0090,  ..., 0.0051, 0.9348, 0.8648],
         [0.0714, 0.5476, 0.0090,  ..., 0.0051, 0.0217, 0.0451]],
        [[0.0360, 0.1519, 0.9719,  ..., 0.8843, 0.1005, 0.0961],
         [0.0360, 0.5444, 0.0095,  ..., 0.0380, 0.1398, 0.0961],
         [0.8920, 0.1519, 0.0093,  ..., 0.0380, 0.1005, 0.5922],
         [0.0360, 0.1519, 0.0093,  ..., 0.0397, 0.6591, 0.2156]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4483, 0.0348, 0.0490,  ..., 0.9525, 0.0962, 0.0259],
         [0.1126, 0.0348, 0.0490,  ..., 0.0158, 0.0743, 0.0259],
         [0.3266, 0.0533, 0.0490,  ..., 0.0158, 0.7551, 0.0259],
         [0.1126, 0.8772, 0.8531,  ..., 0.0158, 0.0743, 0.9223]],
        [[0.8066, 0.1960, 0.0691,  ..., 0.0848, 0.0048, 0.1116],
         [0.0336, 0.2576, 0.0723,  ..., 0.0990, 0.0048, 0.1116],
         [0.1262, 0.1824, 0.0691,  ..., 0.0848, 0.9856, 0.1689],
         [0.0336, 0.3639, 0.7895,  ..., 0.7314, 0.0048, 0.6079]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0847, 0.1785, 0.9546,  ..., 0.9318, 0.0476, 0.0595],
         [0.0847, 0.3382, 0.0180,  ..., 0.0210, 0.0476, 0.0595],
         [0.7458, 0.2055, 0.0137,  ..., 0.0210, 0.8571, 0.8214],
         [0.0847, 0.2777, 0.0137,  ..., 0.0263, 0.0476, 0.0595]],
        [[0.0318, 0.2213, 0.9880,  ..., 0.9293, 0.0234, 0.0412],
         [0.0318, 0.3631, 0.0040,  ..., 0.0264, 0.0234, 0.0412],
         [0.9047, 0.1900, 0.0040,  ..., 0.0221, 0.0234, 0.8543],
         [0.0318, 0.2257, 0.0040,  ..., 0.0221, 0.9299, 0.0633]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7943, 0.0152, 0.0194,  ..., 0.9869, 0.0509, 0.0231],
         [0.0597, 0.0152, 0.0194,  ..., 0.0044, 0.0509, 0.0231],
         [0.0597, 0.0152, 0.0194,  ..., 0.0044, 0.8473, 0.0231],
         [0.0862, 0.9543, 0.9419,  ..., 0.0044, 0.0509, 0.9308]],
        [[0.9890, 0.0230, 0.0247,  ..., 0.1482, 0.0827, 0.0234],
         [0.0033, 0.0230, 0.0247,  ..., 0.2094, 0.0827, 0.0234],
         [0.0033, 0.0230, 0.0247,  ..., 0.1482, 0.7519, 0.9297],
         [0.0044, 0.9309, 0.9260,  ..., 0.4942, 0.0827, 0.0234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.9461e-02, 1.8087e-01, 8.3530e-01,  ..., 9.9769e-01,
          6.0097e-02, 2.8486e-02],
         [8.9461e-02, 4.0371e-01, 6.4603e-02,  ..., 7.6974e-04,
          6.0097e-02, 2.8486e-02],
         [7.3162e-01, 1.7656e-01, 5.0050e-02,  ..., 7.6974e-04,
          8.1971e-01, 9.1454e-01],
         [8.9461e-02, 2.3886e-01, 5.0050e-02,  ..., 7.6974e-04,
          6.0097e-02, 2.8486e-02]],
        [[1.0363e-01, 1.6656e-01, 9.1800e-01,  ..., 8.9862e-01,
          4.0813e-02, 8.2208e-02],
         [1.0363e-01, 3.5021e-01, 2.9569e-02,  ..., 3.7811e-02,
          4.0813e-02, 8.2208e-02],
         [6.8912e-01, 1.6656e-01, 2.6217e-02,  ..., 3.1782e-02,
          8.7756e-01, 3.1425e-01],
         [1.0363e-01, 3.1667e-01, 2.6217e-02,  ..., 3.1782e-02,
          4.0813e-02, 5.2134e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:16:54,625 [Process: 0] Synchronize training processes
2024-08-19 13:16:54,626 [Process: 0] Evaluating...
2024-08-19 13:16:54,627 [Process: 0] EPOCH 75:
2024-08-19 13:16:54,629 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:55,607 [Process: 0] Synchronize training processes
2024-08-19 13:16:55,607 [Process: 0] Evaluating...
2024-08-19 13:16:55,609 [Process: 0] EPOCH 76:
2024-08-19 13:16:55,611 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1671e-02, 5.1294e-02, 8.2965e-02,  ..., 9.3044e-01,
          2.4466e-02, 1.3771e-01],
         [2.1671e-02, 5.1294e-02, 8.2938e-02,  ..., 2.3185e-02,
          2.4466e-02, 1.3771e-01],
         [2.1671e-02, 8.4612e-01, 7.5116e-01,  ..., 2.3185e-02,
          2.7819e-02, 4.7723e-01],
         [9.3499e-01, 5.1294e-02, 8.2938e-02,  ..., 2.3185e-02,
          9.2325e-01, 2.4735e-01]],
        [[1.0000e+00, 8.5987e-01, 1.1062e-02,  ..., 2.5503e-02,
          1.8672e-01, 4.4493e-02],
         [4.4377e-09, 5.6390e-02, 1.1062e-02,  ..., 2.5503e-02,
          2.3494e-01, 4.4493e-02],
         [4.4377e-09, 4.1869e-02, 1.1062e-02,  ..., 2.5503e-02,
          2.4196e-01, 8.6652e-01],
         [4.4377e-09, 4.1869e-02, 9.6681e-01,  ..., 9.2349e-01,
          3.3639e-01, 4.4493e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5143e-01, 5.3117e-02, 8.7059e-01,  ..., 4.8619e-01,
          1.2571e-02, 1.8612e-02],
         [1.5143e-01, 5.3117e-02, 4.4193e-02,  ..., 7.6122e-02,
          1.2571e-02, 1.8612e-02],
         [5.4571e-01, 5.3117e-02, 4.2607e-02,  ..., 7.6122e-02,
          9.6229e-01, 9.4417e-01],
         [1.5143e-01, 8.4065e-01, 4.2607e-02,  ..., 3.6156e-01,
          1.2571e-02, 1.8612e-02]],
        [[2.0732e-01, 1.9333e-01, 9.9724e-01,  ..., 9.7176e-01,
          9.9380e-01, 2.1009e-02],
         [2.8065e-01, 3.8822e-01, 1.1039e-03,  ..., 9.9032e-03,
          2.0660e-03, 2.1009e-02],
         [2.2378e-01, 1.9333e-01, 8.2927e-04,  ..., 9.1668e-03,
          2.0660e-03, 7.5554e-01],
         [2.8826e-01, 2.2512e-01, 8.2927e-04,  ..., 9.1668e-03,
          2.0660e-03, 2.0245e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1573, 0.7305, 0.7797,  ..., 0.9803, 0.1556, 0.6085],
         [0.1573, 0.0898, 0.0734,  ..., 0.0072, 0.1556, 0.1153],
         [0.3654, 0.0898, 0.0734,  ..., 0.0062, 0.4459, 0.1609],
         [0.3200, 0.0898, 0.0734,  ..., 0.0062, 0.2429, 0.1153]],
        [[0.9600, 0.5023, 0.0266,  ..., 0.0728, 0.1888, 0.1741],
         [0.0011, 0.1981, 0.0266,  ..., 0.0728, 0.1888, 0.1741],
         [0.0059, 0.1498, 0.0357,  ..., 0.0805, 0.4337, 0.3533],
         [0.0330, 0.1498, 0.9111,  ..., 0.7739, 0.1888, 0.2985]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2872, 0.2248, 0.9684,  ..., 0.9921, 0.0708, 0.0585],
         [0.2748, 0.3256, 0.0105,  ..., 0.0026, 0.0535, 0.0509],
         [0.2190, 0.2248, 0.0105,  ..., 0.0026, 0.8044, 0.8069],
         [0.2190, 0.2248, 0.0105,  ..., 0.0026, 0.0712, 0.0837]],
        [[0.0477, 0.0557, 0.2746,  ..., 0.0222, 0.0704, 0.0221],
         [0.0331, 0.0435, 0.2827,  ..., 0.0222, 0.0524, 0.0221],
         [0.8689, 0.6451, 0.2213,  ..., 0.3361, 0.8056, 0.0254],
         [0.0502, 0.2558, 0.2213,  ..., 0.6196, 0.0717, 0.9303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:16:56,583 [Process: 0] Synchronize training processes
2024-08-19 13:16:56,583 [Process: 0] Evaluating...
2024-08-19 13:16:56,585 [Process: 0] EPOCH 77:
2024-08-19 13:16:56,587 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:57,560 [Process: 0] Synchronize training processes
2024-08-19 13:16:57,560 [Process: 0] Evaluating...
2024-08-19 13:16:57,562 [Process: 0] EPOCH 78:
2024-08-19 13:16:57,564 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2885e-02, 7.8294e-02, 9.8230e-02,  ..., 7.4246e-01,
          8.1530e-02, 1.8752e-01],
         [9.2885e-02, 4.4289e-02, 7.2858e-02,  ..., 8.8727e-02,
          8.1530e-02, 1.8752e-01],
         [4.3264e-01, 8.0170e-01, 7.3856e-01,  ..., 8.4405e-02,
          3.1013e-01, 3.9779e-01],
         [3.8159e-01, 7.5715e-02, 9.0348e-02,  ..., 8.4405e-02,
          5.2681e-01, 2.2717e-01]],
        [[5.8034e-02, 8.1674e-01, 1.6605e-01,  ..., 2.3311e-01,
          1.2441e-01, 2.2372e-01],
         [3.6079e-05, 6.1087e-02, 1.6605e-01,  ..., 2.6238e-01,
          1.2441e-01, 2.3073e-01],
         [6.2622e-01, 6.1087e-02, 2.2790e-01,  ..., 2.3311e-01,
          5.9819e-01, 3.0730e-01],
         [3.1571e-01, 6.1087e-02, 4.4000e-01,  ..., 2.7140e-01,
          1.5298e-01, 2.3826e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2409, 0.2315, 0.8489,  ..., 0.9948, 0.1246, 0.1251],
         [0.2774, 0.2465, 0.0504,  ..., 0.0017, 0.1246, 0.1251],
         [0.2409, 0.2663, 0.0504,  ..., 0.0017, 0.5745, 0.5780],
         [0.2409, 0.2557, 0.0504,  ..., 0.0017, 0.1763, 0.1717]],
        [[0.0887, 0.1671, 0.9504,  ..., 0.5224, 0.2004, 0.0796],
         [0.0755, 0.1671, 0.0165,  ..., 0.1619, 0.2004, 0.0313],
         [0.6830, 0.2529, 0.0165,  ..., 0.1579, 0.3081, 0.8002],
         [0.1529, 0.4129, 0.0165,  ..., 0.1579, 0.2911, 0.0889]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1429e-01, 1.8830e-01, 2.0589e-01,  ..., 9.4606e-01,
          2.1341e-01, 1.4149e-01],
         [2.1429e-01, 1.8830e-01, 2.0589e-01,  ..., 1.7980e-02,
          2.1341e-01, 1.4149e-01],
         [3.3891e-01, 4.0413e-01, 3.4508e-01,  ..., 1.7980e-02,
          3.3916e-01, 2.6258e-01],
         [2.3251e-01, 2.1926e-01, 2.4314e-01,  ..., 1.7980e-02,
          2.3402e-01, 4.5444e-01]],
        [[9.4519e-01, 7.9040e-01, 1.9051e-01,  ..., 2.2784e-01,
          1.2234e-01, 1.5514e-01],
         [8.0771e-05, 6.9867e-02, 1.9051e-01,  ..., 2.3372e-01,
          4.2346e-02, 1.5514e-01],
         [6.3054e-03, 6.9867e-02, 2.8663e-01,  ..., 2.8380e-01,
          6.9213e-01, 4.5087e-01],
         [4.8426e-02, 6.9867e-02, 3.3235e-01,  ..., 2.5464e-01,
          1.4318e-01, 2.3884e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2449, 0.2418, 0.6556,  ..., 0.8834, 0.1303, 0.1344],
         [0.2467, 0.2514, 0.1148,  ..., 0.0389, 0.0862, 0.0605],
         [0.2636, 0.2649, 0.1148,  ..., 0.0389, 0.5947, 0.6640],
         [0.2449, 0.2418, 0.1148,  ..., 0.0389, 0.1887, 0.1412]],
        [[0.1292, 0.2418, 0.7589,  ..., 0.6824, 0.1352, 0.1018],
         [0.0841, 0.2542, 0.0804,  ..., 0.1091, 0.1352, 0.0103],
         [0.6006, 0.2418, 0.0804,  ..., 0.1042, 0.1992, 0.7598],
         [0.1860, 0.2622, 0.0804,  ..., 0.1042, 0.5303, 0.1282]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:58,536 [Process: 0] Synchronize training processes
2024-08-19 13:16:58,537 [Process: 0] Evaluating...
2024-08-19 13:16:58,538 [Process: 0] EPOCH 79:
2024-08-19 13:16:58,540 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:16:59,515 [Process: 0] Synchronize training processes
2024-08-19 13:16:59,516 [Process: 0] Evaluating...
2024-08-19 13:16:59,518 [Process: 0] EPOCH 80:
2024-08-19 13:16:59,520 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2865e-01, 1.8761e-01, 1.8277e-01,  ..., 3.5154e-01,
          2.0326e-01, 1.6635e-01],
         [2.2865e-01, 1.8761e-01, 1.8277e-01,  ..., 1.9498e-01,
          2.0326e-01, 1.6635e-01],
         [3.1405e-01, 3.7117e-01, 3.2331e-01,  ..., 2.5851e-01,
          3.3581e-01, 2.4353e-01],
         [2.2865e-01, 2.5362e-01, 3.1114e-01,  ..., 1.9498e-01,
          2.5768e-01, 4.2376e-01]],
        [[9.6342e-01, 8.1198e-01, 1.5888e-01,  ..., 1.7223e-01,
          1.3452e-01, 1.3439e-01],
         [4.8822e-05, 6.2675e-02, 1.5888e-01,  ..., 1.7223e-01,
          4.7166e-02, 3.8255e-02],
         [5.9249e-03, 6.2675e-02, 2.1774e-01,  ..., 3.8859e-01,
          6.7617e-01, 7.0381e-01],
         [3.0611e-02, 6.2675e-02, 4.6450e-01,  ..., 2.6696e-01,
          1.4215e-01, 1.2354e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2375, 0.2253, 0.7194,  ..., 0.8852, 0.1060, 0.0962],
         [0.2472, 0.2538, 0.0994,  ..., 0.0383, 0.0764, 0.0774],
         [0.2709, 0.2253, 0.0906,  ..., 0.0383, 0.6345, 0.6165],
         [0.2444, 0.2955, 0.0906,  ..., 0.0383, 0.1831, 0.2099]],
        [[0.1121, 0.2140, 0.6841,  ..., 0.8083, 0.1338, 0.0910],
         [0.1121, 0.2273, 0.1058,  ..., 0.0685, 0.1338, 0.0371],
         [0.5495, 0.2381, 0.1051,  ..., 0.0616, 0.1500, 0.6881],
         [0.2262, 0.3206, 0.1051,  ..., 0.0616, 0.5824, 0.1839]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0424e-01, 1.4447e-01, 1.5613e-01,  ..., 8.1908e-01,
          1.8420e-01, 1.5933e-01],
         [2.0424e-01, 1.4447e-01, 1.5613e-01,  ..., 6.0306e-02,
          1.8420e-01, 1.5933e-01],
         [3.1747e-01, 3.5950e-01, 2.9078e-01,  ..., 6.0306e-02,
          3.6226e-01, 2.5342e-01],
         [2.7405e-01, 3.5156e-01, 3.9697e-01,  ..., 6.0306e-02,
          2.6935e-01, 4.2792e-01]],
        [[3.3911e-01, 5.0479e-01, 1.4802e-01,  ..., 1.7853e-01,
          7.2124e-02, 6.4779e-02],
         [5.5042e-04, 1.6507e-01, 1.4802e-01,  ..., 1.7853e-01,
          4.2649e-02, 2.8888e-02],
         [3.8186e-02, 1.6507e-01, 1.8673e-01,  ..., 3.5343e-01,
          7.4420e-01, 7.7587e-01],
         [6.2216e-01, 1.6507e-01, 5.1723e-01,  ..., 2.8952e-01,
          1.4102e-01, 1.3046e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2260, 0.1485, 0.9614,  ..., 0.9816, 0.0915, 0.0745],
         [0.2359, 0.1485, 0.0129,  ..., 0.0064, 0.0915, 0.0745],
         [0.2505, 0.1781, 0.0129,  ..., 0.0060, 0.6207, 0.6659],
         [0.2876, 0.5250, 0.0129,  ..., 0.0060, 0.1963, 0.1851]],
        [[0.0911, 0.1259, 0.9545,  ..., 0.9733, 0.0680, 0.0444],
         [0.0911, 0.1259, 0.0167,  ..., 0.0095, 0.0680, 0.0357],
         [0.6215, 0.1422, 0.0144,  ..., 0.0086, 0.1115, 0.7969],
         [0.1963, 0.6060, 0.0144,  ..., 0.0086, 0.7524, 0.1230]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:00,492 [Process: 0] Synchronize training processes
2024-08-19 13:17:00,492 [Process: 0] Evaluating...
2024-08-19 13:17:00,494 [Process: 0] EPOCH 81:
2024-08-19 13:17:00,497 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:01,499 [Process: 0] Synchronize training processes
2024-08-19 13:17:01,499 [Process: 0] Evaluating...
2024-08-19 13:17:01,930 [Process: 0] EPOCH 82:
2024-08-19 13:17:01,932 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9987e-01, 1.5206e-01, 1.2135e-01,  ..., 9.8424e-01,
          1.5384e-01, 1.4026e-01],
         [1.9987e-01, 1.5206e-01, 1.2135e-01,  ..., 5.2538e-03,
          1.5384e-01, 1.4026e-01],
         [3.0320e-01, 3.1849e-01, 2.8145e-01,  ..., 5.2538e-03,
          3.9180e-01, 2.4246e-01],
         [2.9706e-01, 3.7738e-01, 4.7586e-01,  ..., 5.2538e-03,
          3.0051e-01, 4.7703e-01]],
        [[1.4565e-02, 1.8108e-01, 9.8857e-02,  ..., 1.9954e-01,
          7.3000e-02, 3.0979e-02],
         [2.4153e-04, 1.8108e-01, 9.8857e-02,  ..., 1.9954e-01,
          7.3000e-02, 2.6475e-02],
         [3.1505e-02, 2.6101e-01, 1.5109e-01,  ..., 2.9019e-01,
          6.9897e-01, 8.7188e-01],
         [9.5369e-01, 3.7683e-01, 6.5120e-01,  ..., 3.1074e-01,
          1.5503e-01, 7.0664e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1899, 0.2055, 0.9747,  ..., 0.8904, 0.0763, 0.0552],
         [0.2073, 0.2305, 0.0085,  ..., 0.0365, 0.0763, 0.0552],
         [0.2239, 0.2037, 0.0084,  ..., 0.0365, 0.6704, 0.7490],
         [0.3788, 0.3603, 0.0084,  ..., 0.0365, 0.1770, 0.1405]],
        [[0.0869, 0.0750, 0.8813,  ..., 0.9140, 0.0592, 0.0209],
         [0.0869, 0.0750, 0.0422,  ..., 0.0287, 0.0592, 0.0164],
         [0.6513, 0.1383, 0.0383,  ..., 0.0287, 0.0592, 0.8927],
         [0.1749, 0.7118, 0.0383,  ..., 0.0287, 0.8223, 0.0700]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6838e-01, 1.3675e-01, 1.2634e-01,  ..., 9.7154e-01,
          1.3359e-01, 1.2044e-01],
         [1.6838e-01, 1.3675e-01, 1.2634e-01,  ..., 1.1617e-02,
          1.3359e-01, 1.2044e-01],
         [3.7308e-01, 2.5979e-01, 2.3239e-01,  ..., 8.4226e-03,
          4.3235e-01, 1.8160e-01],
         [2.9015e-01, 4.6671e-01, 5.1492e-01,  ..., 8.4226e-03,
          3.0048e-01, 5.7752e-01]],
        [[5.6897e-02, 1.6827e-01, 1.1786e-01,  ..., 1.9892e-01,
          1.4027e-01, 3.2628e-02],
         [2.7081e-04, 1.6926e-01, 1.2919e-01,  ..., 2.1343e-01,
          1.4027e-01, 3.2628e-02],
         [2.8312e-01, 2.2826e-01, 1.1786e-01,  ..., 2.6336e-01,
          2.9842e-01, 8.4609e-01],
         [6.5972e-01, 4.3421e-01, 6.3509e-01,  ..., 3.2429e-01,
          4.2104e-01, 8.8655e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:17:02,965 [Process: 0] Synchronize training processes
2024-08-19 13:17:02,966 [Process: 0] Evaluating...
2024-08-19 13:17:02,968 [Process: 0] EPOCH 83:
2024-08-19 13:17:02,970 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:04,007 [Process: 0] Synchronize training processes
2024-08-19 13:17:04,008 [Process: 0] Evaluating...
2024-08-19 13:17:04,009 [Process: 0] EPOCH 84:
2024-08-19 13:17:04,011 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1451, 0.7990, 0.7307,  ..., 0.9008, 0.0306, 0.0677],
         [0.1451, 0.0764, 0.1007,  ..., 0.0396, 0.0306, 0.0677],
         [0.3014, 0.0623, 0.0843,  ..., 0.0298, 0.8633, 0.6953],
         [0.4083, 0.0623, 0.0843,  ..., 0.0298, 0.0755, 0.1693]],
        [[0.0286, 0.0628, 0.9942,  ..., 0.6989, 0.0756, 0.0444],
         [0.0286, 0.0628, 0.0022,  ..., 0.1078, 0.0756, 0.0444],
         [0.8875, 0.0820, 0.0018,  ..., 0.0966, 0.0957, 0.7866],
         [0.0553, 0.7924, 0.0018,  ..., 0.0966, 0.7531, 0.1247]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5680, 0.1276, 0.1335,  ..., 0.9956, 0.1226, 0.1251],
         [0.1509, 0.1276, 0.1335,  ..., 0.0015, 0.1226, 0.1251],
         [0.1406, 0.1816, 0.1705,  ..., 0.0015, 0.4949, 0.3005],
         [0.1406, 0.5632, 0.5624,  ..., 0.0015, 0.2600, 0.4493]],
        [[0.5963, 0.1275, 0.1723,  ..., 0.1762, 0.0376, 0.0641],
         [0.0038, 0.1275, 0.1932,  ..., 0.1808, 0.0376, 0.0641],
         [0.2592, 0.4426, 0.1723,  ..., 0.2244, 0.8524, 0.7287],
         [0.1407, 0.3024, 0.4622,  ..., 0.4186, 0.0723, 0.1430]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1628, 0.1445, 0.9866,  ..., 0.9938, 0.0489, 0.0420],
         [0.2004, 0.1700, 0.0055,  ..., 0.0022, 0.0489, 0.0420],
         [0.1631, 0.1445, 0.0039,  ..., 0.0020, 0.8029, 0.8443],
         [0.4737, 0.5410, 0.0039,  ..., 0.0020, 0.0993, 0.0717]],
        [[0.0145, 0.0715, 0.9506,  ..., 0.9614, 0.0916, 0.0468],
         [0.0145, 0.0814, 0.0165,  ..., 0.0140, 0.1008, 0.0468],
         [0.9506, 0.0715, 0.0165,  ..., 0.0123, 0.0916, 0.8127],
         [0.0204, 0.7756, 0.0165,  ..., 0.0123, 0.7160, 0.0938]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0023e-01, 1.0549e-01, 6.0760e-02,  ..., 8.7677e-01,
          1.8513e-01, 9.8962e-02],
         [1.0023e-01, 1.0549e-01, 6.0760e-02,  ..., 4.1077e-02,
          1.5884e-01, 9.8962e-02],
         [5.6147e-01, 2.2058e-01, 6.0760e-02,  ..., 4.1077e-02,
          3.6740e-01, 4.8029e-01],
         [2.3807e-01, 5.6845e-01, 8.1772e-01,  ..., 4.1077e-02,
          2.8863e-01, 3.2179e-01]],
        [[9.9680e-01, 1.3069e-01, 2.2716e-01,  ..., 1.5005e-01,
          6.0136e-02, 3.2984e-02],
         [9.6082e-05, 1.3069e-01, 1.9088e-01,  ..., 1.5828e-01,
          6.0136e-02, 3.2984e-02],
         [3.0088e-03, 1.4404e-01, 2.3739e-01,  ..., 1.8073e-01,
          7.5483e-01, 8.6959e-01],
         [9.6082e-05, 5.9458e-01, 3.4457e-01,  ..., 5.1093e-01,
          1.2490e-01, 6.4441e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:17:05,054 [Process: 0] Synchronize training processes
2024-08-19 13:17:05,054 [Process: 0] Evaluating...
2024-08-19 13:17:05,056 [Process: 0] EPOCH 85:
2024-08-19 13:17:05,058 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:06,099 [Process: 0] Synchronize training processes
2024-08-19 13:17:06,099 [Process: 0] Evaluating...
2024-08-19 13:17:06,101 [Process: 0] EPOCH 86:
2024-08-19 13:17:06,103 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5650, 0.2217, 0.9925,  ..., 0.9820, 0.0436, 0.0801],
         [0.1728, 0.1860, 0.0025,  ..., 0.0060, 0.0436, 0.0801],
         [0.1311, 0.1517, 0.0025,  ..., 0.0060, 0.8332, 0.6575],
         [0.1311, 0.4406, 0.0025,  ..., 0.0060, 0.0796, 0.1824]],
        [[0.0246, 0.0927, 0.9359,  ..., 0.9759, 0.0867, 0.0718],
         [0.0246, 0.1111, 0.0214,  ..., 0.0093, 0.0953, 0.0718],
         [0.9070, 0.0927, 0.0214,  ..., 0.0074, 0.0867, 0.6892],
         [0.0438, 0.7036, 0.0214,  ..., 0.0074, 0.7314, 0.1672]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1111, 0.1101, 0.0573,  ..., 0.9609, 0.2856, 0.0947],
         [0.1111, 0.1101, 0.0573,  ..., 0.0136, 0.1714, 0.0947],
         [0.4544, 0.3054, 0.0573,  ..., 0.0127, 0.2535, 0.5655],
         [0.3235, 0.4744, 0.8282,  ..., 0.0127, 0.2895, 0.2451]],
        [[0.5176, 0.1052, 0.1147,  ..., 0.1083, 0.0376, 0.0642],
         [0.0089, 0.1129, 0.1187,  ..., 0.1243, 0.0376, 0.0642],
         [0.4646, 0.1052, 0.1019,  ..., 0.1083, 0.8596, 0.7242],
         [0.0089, 0.6767, 0.6647,  ..., 0.6590, 0.0653, 0.1474]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8234, 0.4587, 0.9769,  ..., 0.9892, 0.0107, 0.0139],
         [0.0729, 0.2065, 0.0077,  ..., 0.0036, 0.0107, 0.0139],
         [0.0519, 0.1296, 0.0077,  ..., 0.0036, 0.9637, 0.9535],
         [0.0519, 0.2052, 0.0077,  ..., 0.0036, 0.0149, 0.0187]],
        [[0.0146, 0.0451, 0.9667,  ..., 0.8991, 0.0534, 0.0441],
         [0.0146, 0.0365, 0.0111,  ..., 0.0386, 0.0761, 0.0441],
         [0.9498, 0.0283, 0.0111,  ..., 0.0312, 0.0534, 0.8023],
         [0.0211, 0.8900, 0.0111,  ..., 0.0312, 0.8172, 0.1096]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4976e-01, 8.9053e-02, 2.8296e-02,  ..., 9.8550e-01,
          6.0522e-01, 9.3861e-02],
         [1.3956e-01, 8.9053e-02, 3.0624e-02,  ..., 4.8340e-03,
          1.2644e-01, 9.3861e-02],
         [1.6311e-01, 1.9680e-01, 2.8296e-02,  ..., 4.8340e-03,
          1.4190e-01, 5.6822e-01],
         [1.4757e-01, 6.2510e-01, 9.1278e-01,  ..., 4.8340e-03,
          1.2644e-01, 2.4406e-01]],
        [[9.9672e-01, 1.2645e-01, 7.9825e-02,  ..., 9.7684e-02,
          2.8591e-02, 5.3232e-02],
         [8.6357e-04, 1.4579e-01, 9.1126e-02,  ..., 1.1537e-01,
          2.8591e-02, 5.3232e-02],
         [1.5523e-03, 1.6507e-01, 7.2501e-02,  ..., 9.7684e-02,
          9.0350e-01, 7.9039e-01],
         [8.6357e-04, 5.6269e-01, 7.5655e-01,  ..., 6.8926e-01,
          3.9314e-02, 1.0315e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:17:07,165 [Process: 0] Synchronize training processes
2024-08-19 13:17:07,165 [Process: 0] Evaluating...
2024-08-19 13:17:07,167 [Process: 0] EPOCH 87:
2024-08-19 13:17:07,169 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:08,207 [Process: 0] Synchronize training processes
2024-08-19 13:17:08,207 [Process: 0] Evaluating...
2024-08-19 13:17:08,209 [Process: 0] EPOCH 88:
2024-08-19 13:17:08,211 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1371, 0.3437, 0.9643,  ..., 0.9610, 0.0270, 0.0373],
         [0.1843, 0.2216, 0.0119,  ..., 0.0130, 0.0270, 0.0373],
         [0.1371, 0.1091, 0.0119,  ..., 0.0130, 0.9032, 0.8593],
         [0.5415, 0.3256, 0.0119,  ..., 0.0130, 0.0428, 0.0662]],
        [[0.0401, 0.1300, 0.9668,  ..., 0.9404, 0.0747, 0.0538],
         [0.0401, 0.0985, 0.0111,  ..., 0.0203, 0.0922, 0.0538],
         [0.8505, 0.0555, 0.0111,  ..., 0.0197, 0.0726, 0.7593],
         [0.0693, 0.7160, 0.0111,  ..., 0.0197, 0.7604, 0.1332]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7350, 0.0569, 0.0530,  ..., 0.9676, 0.6314, 0.1077],
         [0.0774, 0.0583, 0.0688,  ..., 0.0103, 0.1207, 0.1077],
         [0.1102, 0.0569, 0.0445,  ..., 0.0118, 0.1296, 0.1978],
         [0.0774, 0.8279, 0.8338,  ..., 0.0103, 0.1182, 0.5868]],
        [[0.9952, 0.0801, 0.0767,  ..., 0.1069, 0.0389, 0.0166],
         [0.0016, 0.1285, 0.1122,  ..., 0.1151, 0.0389, 0.0166],
         [0.0016, 0.0801, 0.0626,  ..., 0.1297, 0.8617, 0.9469],
         [0.0016, 0.7114, 0.7485,  ..., 0.6484, 0.0606, 0.0199]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0493, 0.5363, 0.9611,  ..., 0.9440, 0.0474, 0.0508],
         [0.0493, 0.1856, 0.0141,  ..., 0.0187, 0.0474, 0.0508],
         [0.8124, 0.1160, 0.0124,  ..., 0.0187, 0.8133, 0.8029],
         [0.0890, 0.1621, 0.0124,  ..., 0.0187, 0.0918, 0.0956]],
        [[0.0260, 0.0462, 0.9464,  ..., 0.9775, 0.0181, 0.0690],
         [0.0260, 0.0929, 0.0177,  ..., 0.0075, 0.0480, 0.0690],
         [0.9092, 0.0301, 0.0182,  ..., 0.0075, 0.0181, 0.6719],
         [0.0388, 0.8308, 0.0177,  ..., 0.0075, 0.9157, 0.1901]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:17:09,249 [Process: 0] Synchronize training processes
2024-08-19 13:17:09,250 [Process: 0] Evaluating...
2024-08-19 13:17:09,251 [Process: 0] EPOCH 89:
2024-08-19 13:17:09,253 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8020, 0.0527, 0.0375,  ..., 0.8322, 0.9147, 0.1150],
         [0.0620, 0.0657, 0.0592,  ..., 0.0460, 0.0281, 0.1150],
         [0.0739, 0.0527, 0.0375,  ..., 0.0759, 0.0291, 0.1922],
         [0.0620, 0.8288, 0.8658,  ..., 0.0460, 0.0281, 0.5779]],
        [[0.9880, 0.1344, 0.0582,  ..., 0.1001, 0.0339, 0.0244],
         [0.0024, 0.1682, 0.0934,  ..., 0.1153, 0.0339, 0.0244],
         [0.0024, 0.1158, 0.0582,  ..., 0.1084, 0.8870, 0.9230],
         [0.0072, 0.5815, 0.7903,  ..., 0.6762, 0.0452, 0.0282]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0448, 0.4937, 0.9892,  ..., 0.9746, 0.0445, 0.0324],
         [0.0448, 0.1823, 0.0036,  ..., 0.0085, 0.0445, 0.0324],
         [0.8385, 0.1176, 0.0036,  ..., 0.0085, 0.8367, 0.8964],
         [0.0719, 0.2064, 0.0036,  ..., 0.0085, 0.0744, 0.0388]],
        [[0.0569, 0.0868, 0.9623,  ..., 0.7561, 0.0066, 0.0569],
         [0.0569, 0.1799, 0.0126,  ..., 0.0907, 0.0122, 0.0569],
         [0.7900, 0.0690, 0.0126,  ..., 0.0766, 0.0066, 0.8011],
         [0.0961, 0.6643, 0.0126,  ..., 0.0766, 0.9747, 0.0852]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8491, 0.0256, 0.0301,  ..., 0.4830, 0.9041, 0.0875],
         [0.0474, 0.0360, 0.0326,  ..., 0.1549, 0.0287, 0.1081],
         [0.0561, 0.0256, 0.0301,  ..., 0.1537, 0.0385, 0.0875],
         [0.0474, 0.9128, 0.9071,  ..., 0.2085, 0.0287, 0.7170]],
        [[0.9782, 0.0998, 0.1035,  ..., 0.0813, 0.0196, 0.0614],
         [0.0056, 0.1415, 0.1217,  ..., 0.1163, 0.0196, 0.0614],
         [0.0056, 0.0998, 0.0984,  ..., 0.0813, 0.9413, 0.7847],
         [0.0106, 0.6589, 0.6764,  ..., 0.7211, 0.0196, 0.0925]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0313, 0.4536, 0.9826,  ..., 0.9694, 0.0554, 0.0442],
         [0.0313, 0.1872, 0.0058,  ..., 0.0102, 0.0554, 0.0442],
         [0.9042, 0.1056, 0.0058,  ..., 0.0102, 0.7980, 0.8496],
         [0.0332, 0.2536, 0.0058,  ..., 0.0102, 0.0912, 0.0619]],
        [[0.0620, 0.0975, 0.9854,  ..., 0.7654, 0.0162, 0.0708],
         [0.0620, 0.1519, 0.0049,  ..., 0.0787, 0.0299, 0.0708],
         [0.7723, 0.0577, 0.0049,  ..., 0.0779, 0.0162, 0.7163],
         [0.1037, 0.6930, 0.0049,  ..., 0.0779, 0.9377, 0.1421]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:10,292 [Process: 0] Synchronize training processes
2024-08-19 13:17:10,292 [Process: 0] Evaluating...
2024-08-19 13:17:10,294 [Process: 0] EPOCH 90:
2024-08-19 13:17:10,295 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:11,334 [Process: 0] Synchronize training processes
2024-08-19 13:17:11,335 [Process: 0] Evaluating...
2024-08-19 13:17:11,337 [Process: 0] EPOCH 91:
2024-08-19 13:17:11,339 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9327, 0.0597, 0.0346,  ..., 0.8240, 0.9589, 0.0901],
         [0.0224, 0.0740, 0.0371,  ..., 0.0571, 0.0137, 0.1248],
         [0.0224, 0.0597, 0.0346,  ..., 0.0617, 0.0137, 0.0901],
         [0.0224, 0.8066, 0.8936,  ..., 0.0571, 0.0137, 0.6950]],
        [[0.9323, 0.1160, 0.1005,  ..., 0.0959, 0.0344, 0.0499],
         [0.0121, 0.1389, 0.1162,  ..., 0.1244, 0.0344, 0.0499],
         [0.0435, 0.1129, 0.1212,  ..., 0.0959, 0.8967, 0.8370],
         [0.0121, 0.6322, 0.6622,  ..., 0.6838, 0.0344, 0.0633]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0199, 0.3742, 0.9648,  ..., 0.9891, 0.0377, 0.0526],
         [0.0199, 0.1972, 0.0117,  ..., 0.0036, 0.0377, 0.0526],
         [0.9402, 0.1219, 0.0117,  ..., 0.0036, 0.8792, 0.8253],
         [0.0199, 0.3067, 0.0117,  ..., 0.0036, 0.0453, 0.0695]],
        [[0.0582, 0.0595, 0.9812,  ..., 0.8651, 0.0048, 0.0441],
         [0.0582, 0.0959, 0.0063,  ..., 0.0450, 0.0083, 0.0441],
         [0.8003, 0.0595, 0.0063,  ..., 0.0450, 0.0048, 0.8568],
         [0.0833, 0.7851, 0.0063,  ..., 0.0450, 0.9820, 0.0549]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9747, 0.0736, 0.0238,  ..., 0.9813, 0.9024, 0.0366],
         [0.0084, 0.0736, 0.0274,  ..., 0.0062, 0.0325, 0.0386],
         [0.0084, 0.1206, 0.0238,  ..., 0.0062, 0.0325, 0.0366],
         [0.0084, 0.7322, 0.9249,  ..., 0.0062, 0.0325, 0.8882]],
        [[0.9420, 0.1057, 0.0425,  ..., 0.1214, 0.0395, 0.0136],
         [0.0151, 0.1366, 0.0475,  ..., 0.1336, 0.0395, 0.0136],
         [0.0277, 0.1057, 0.0425,  ..., 0.1751, 0.8815, 0.9593],
         [0.0151, 0.6521, 0.8676,  ..., 0.5699, 0.0395, 0.0136]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0228, 0.3969, 0.9947,  ..., 0.9798, 0.0382, 0.0327],
         [0.0228, 0.2007, 0.0019,  ..., 0.0067, 0.0382, 0.0327],
         [0.9317, 0.1174, 0.0017,  ..., 0.0067, 0.8855, 0.9018],
         [0.0228, 0.2850, 0.0017,  ..., 0.0067, 0.0382, 0.0327]],
        [[0.0241, 0.0349, 0.9803,  ..., 0.8197, 0.0101, 0.0508],
         [0.0241, 0.0655, 0.0066,  ..., 0.0753, 0.0136, 0.0508],
         [0.9276, 0.0349, 0.0066,  ..., 0.0525, 0.0101, 0.8234],
         [0.0241, 0.8646, 0.0066,  ..., 0.0525, 0.9663, 0.0750]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:17:12,378 [Process: 0] Synchronize training processes
2024-08-19 13:17:12,378 [Process: 0] Evaluating...
2024-08-19 13:17:12,810 [Process: 0] EPOCH 92:
2024-08-19 13:17:12,814 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:13,849 [Process: 0] Synchronize training processes
2024-08-19 13:17:13,849 [Process: 0] Evaluating...
2024-08-19 13:17:13,851 [Process: 0] EPOCH 93:
2024-08-19 13:17:13,853 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9067, 0.0266, 0.0293,  ..., 0.9026, 0.7962, 0.0788],
         [0.0311, 0.0266, 0.0310,  ..., 0.0325, 0.0798, 0.0788],
         [0.0311, 0.0266, 0.0293,  ..., 0.0325, 0.0620, 0.1113],
         [0.0311, 0.9202, 0.9104,  ..., 0.0325, 0.0620, 0.7310]],
        [[0.6992, 0.0795, 0.0434,  ..., 0.1075, 0.0371, 0.0622],
         [0.0505, 0.1022, 0.0607,  ..., 0.1075, 0.0371, 0.0622],
         [0.0505, 0.0795, 0.0434,  ..., 0.2032, 0.8888, 0.8088],
         [0.1997, 0.7388, 0.8525,  ..., 0.5817, 0.0371, 0.0668]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0269, 0.3136, 0.9398,  ..., 0.9496, 0.0358, 0.0462],
         [0.0269, 0.2365, 0.0201,  ..., 0.0256, 0.0358, 0.0462],
         [0.9194, 0.1208, 0.0201,  ..., 0.0124, 0.8925, 0.8614],
         [0.0269, 0.3291, 0.0201,  ..., 0.0124, 0.0358, 0.0462]],
        [[0.0440, 0.0304, 0.9521,  ..., 0.7856, 0.0034, 0.0370],
         [0.0440, 0.0510, 0.0160,  ..., 0.0981, 0.0034, 0.0370],
         [0.8681, 0.0304, 0.0160,  ..., 0.0554, 0.0034, 0.8832],
         [0.0440, 0.8883, 0.0160,  ..., 0.0609, 0.9897, 0.0429]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9706, 0.0557, 0.0437,  ..., 0.8659, 0.9297, 0.0954],
         [0.0098, 0.0557, 0.0437,  ..., 0.0447, 0.0296, 0.1064],
         [0.0098, 0.1181, 0.0663,  ..., 0.0447, 0.0203, 0.1317],
         [0.0098, 0.7706, 0.8462,  ..., 0.0447, 0.0203, 0.6665]],
        [[0.7754, 0.0976, 0.0203,  ..., 0.1149, 0.0125, 0.0074],
         [0.0601, 0.1187, 0.0246,  ..., 0.1149, 0.0125, 0.0074],
         [0.0866, 0.0976, 0.0203,  ..., 0.3268, 0.9626, 0.9779],
         [0.0779, 0.6860, 0.9348,  ..., 0.4434, 0.0125, 0.0074]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:17:14,891 [Process: 0] Synchronize training processes
2024-08-19 13:17:14,892 [Process: 0] Evaluating...
2024-08-19 13:17:14,893 [Process: 0] EPOCH 94:
2024-08-19 13:17:14,895 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:15,936 [Process: 0] Synchronize training processes
2024-08-19 13:17:15,937 [Process: 0] Evaluating...
2024-08-19 13:17:15,939 [Process: 0] EPOCH 95:
2024-08-19 13:17:15,940 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0601, 0.3530, 0.9658,  ..., 0.9038, 0.0475, 0.0435],
         [0.0601, 0.2332, 0.0114,  ..., 0.0446, 0.0475, 0.0435],
         [0.8148, 0.1037, 0.0114,  ..., 0.0258, 0.8576, 0.8696],
         [0.0649, 0.3101, 0.0114,  ..., 0.0258, 0.0475, 0.0435]],
        [[0.0285, 0.0113, 0.9410,  ..., 0.9853, 0.0090, 0.0727],
         [0.0285, 0.0168, 0.0197,  ..., 0.0049, 0.0090, 0.0727],
         [0.9145, 0.0113, 0.0197,  ..., 0.0049, 0.0090, 0.7552],
         [0.0285, 0.9607, 0.0197,  ..., 0.0049, 0.9730, 0.0994]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8251, 0.0636, 0.0516,  ..., 0.9143, 0.9559, 0.0487],
         [0.0627, 0.0636, 0.0516,  ..., 0.0290, 0.0159, 0.0487],
         [0.0561, 0.0672, 0.0813,  ..., 0.0284, 0.0141, 0.0677],
         [0.0561, 0.8055, 0.8155,  ..., 0.0284, 0.0141, 0.8348]],
        [[0.9426, 0.0885, 0.0504,  ..., 0.1241, 0.0244, 0.0505],
         [0.0187, 0.0998, 0.0504,  ..., 0.1519, 0.0244, 0.0505],
         [0.0199, 0.0885, 0.0636,  ..., 0.1485, 0.9268, 0.8485],
         [0.0187, 0.7233, 0.8355,  ..., 0.5756, 0.0244, 0.0505]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0445, 0.3051, 0.9660,  ..., 0.9763, 0.0441, 0.0540],
         [0.0445, 0.2201, 0.0113,  ..., 0.0079, 0.0441, 0.0540],
         [0.8666, 0.1073, 0.0113,  ..., 0.0079, 0.8677, 0.8354],
         [0.0445, 0.3675, 0.0113,  ..., 0.0079, 0.0441, 0.0566]],
        [[0.0194, 0.0578, 0.9831,  ..., 0.9594, 0.0024, 0.0234],
         [0.0194, 0.0699, 0.0069,  ..., 0.0195, 0.0024, 0.0234],
         [0.9418, 0.0578, 0.0050,  ..., 0.0105, 0.0024, 0.9299],
         [0.0194, 0.8145, 0.0050,  ..., 0.0105, 0.9929, 0.0234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9456, 0.0483, 0.0528,  ..., 0.8619, 0.9684, 0.0367],
         [0.0208, 0.0483, 0.0528,  ..., 0.0565, 0.0157, 0.0367],
         [0.0168, 0.0483, 0.0621,  ..., 0.0408, 0.0079, 0.0367],
         [0.0168, 0.8552, 0.8323,  ..., 0.0408, 0.0079, 0.8900]],
        [[0.9354, 0.0537, 0.0306,  ..., 0.1195, 0.0560, 0.0340],
         [0.0208, 0.0537, 0.0306,  ..., 0.1572, 0.0560, 0.0340],
         [0.0230, 0.0537, 0.0306,  ..., 0.1195, 0.8320, 0.8979],
         [0.0208, 0.8390, 0.9082,  ..., 0.6038, 0.0560, 0.0340]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:17:16,981 [Process: 0] Synchronize training processes
2024-08-19 13:17:16,981 [Process: 0] Evaluating...
2024-08-19 13:17:16,983 [Process: 0] EPOCH 96:
2024-08-19 13:17:16,985 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:18,021 [Process: 0] Synchronize training processes
2024-08-19 13:17:18,022 [Process: 0] Evaluating...
2024-08-19 13:17:18,023 [Process: 0] EPOCH 97:
2024-08-19 13:17:18,025 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0546, 0.1847, 0.9710,  ..., 0.9526, 0.0465, 0.0169],
         [0.0546, 0.2653, 0.0097,  ..., 0.0158, 0.0465, 0.0169],
         [0.8353, 0.1102, 0.0097,  ..., 0.0158, 0.8604, 0.9494],
         [0.0555, 0.4399, 0.0097,  ..., 0.0158, 0.0465, 0.0169]],
        [[0.0319, 0.0049, 0.9540,  ..., 0.9832, 0.0084, 0.0653],
         [0.0319, 0.0049, 0.0153,  ..., 0.0056, 0.0084, 0.0631],
         [0.9044, 0.0049, 0.0153,  ..., 0.0056, 0.0084, 0.8084],
         [0.0319, 0.9853, 0.0153,  ..., 0.0056, 0.9749, 0.0631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9769, 0.0513, 0.0504,  ..., 0.9611, 0.9652, 0.1106],
         [0.0088, 0.0513, 0.0504,  ..., 0.0130, 0.0116, 0.1194],
         [0.0072, 0.0513, 0.0504,  ..., 0.0130, 0.0116, 0.1536],
         [0.0072, 0.8460, 0.8488,  ..., 0.0130, 0.0116, 0.6164]],
        [[0.9474, 0.1118, 0.0164,  ..., 0.1069, 0.0148, 0.0113],
         [0.0173, 0.1184, 0.0164,  ..., 0.1234, 0.0148, 0.0113],
         [0.0173, 0.1412, 0.0164,  ..., 0.1136, 0.9555, 0.9662],
         [0.0180, 0.6286, 0.9507,  ..., 0.6561, 0.0148, 0.0113]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0566, 0.1821, 0.9695,  ..., 0.9713, 0.0356, 0.0449],
         [0.0566, 0.3299, 0.0102,  ..., 0.0096, 0.0356, 0.0449],
         [0.8294, 0.1090, 0.0102,  ..., 0.0096, 0.8933, 0.8654],
         [0.0574, 0.3790, 0.0102,  ..., 0.0096, 0.0356, 0.0449]],
        [[0.0266, 0.0150, 0.9894,  ..., 0.9050, 0.0032, 0.0289],
         [0.0266, 0.0150, 0.0035,  ..., 0.0317, 0.0032, 0.0289],
         [0.9203, 0.0150, 0.0035,  ..., 0.0317, 0.0032, 0.9134],
         [0.0266, 0.9551, 0.0035,  ..., 0.0317, 0.9905, 0.0289]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9903, 0.0859, 0.0314,  ..., 0.9487, 0.9698, 0.0472],
         [0.0032, 0.0859, 0.0314,  ..., 0.0171, 0.0101, 0.0472],
         [0.0032, 0.1092, 0.0314,  ..., 0.0171, 0.0101, 0.0472],
         [0.0032, 0.7190, 0.9058,  ..., 0.0171, 0.0101, 0.8585]],
        [[0.8182, 0.0896, 0.0364,  ..., 0.1157, 0.0150, 0.0100],
         [0.0556, 0.1319, 0.0364,  ..., 0.2123, 0.0150, 0.0100],
         [0.0706, 0.0896, 0.0364,  ..., 0.1157, 0.9551, 0.9699],
         [0.0556, 0.6889, 0.8909,  ..., 0.5563, 0.0150, 0.0100]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:17:19,062 [Process: 0] Synchronize training processes
2024-08-19 13:17:19,062 [Process: 0] Evaluating...
2024-08-19 13:17:19,064 [Process: 0] EPOCH 98:
2024-08-19 13:17:19,065 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:20,104 [Process: 0] Synchronize training processes
2024-08-19 13:17:20,104 [Process: 0] Evaluating...
2024-08-19 13:17:20,106 [Process: 0] EPOCH 99:
2024-08-19 13:17:20,108 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0543, 0.2311, 0.9406,  ..., 0.9477, 0.0377, 0.0298],
         [0.0543, 0.3257, 0.0214,  ..., 0.0174, 0.0377, 0.0298],
         [0.8370, 0.1061, 0.0190,  ..., 0.0174, 0.8870, 0.9105],
         [0.0543, 0.3370, 0.0190,  ..., 0.0174, 0.0377, 0.0298]],
        [[0.0155, 0.0291, 0.9638,  ..., 0.9852, 0.0065, 0.0407],
         [0.0155, 0.0371, 0.0121,  ..., 0.0049, 0.0065, 0.0537],
         [0.9535, 0.0291, 0.0121,  ..., 0.0049, 0.0065, 0.8649],
         [0.0155, 0.9046, 0.0121,  ..., 0.0049, 0.9805, 0.0407]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9632, 0.0264, 0.0674,  ..., 0.9539, 0.9196, 0.0747],
         [0.0123, 0.0264, 0.0674,  ..., 0.0146, 0.0265, 0.0747],
         [0.0123, 0.0264, 0.0674,  ..., 0.0168, 0.0274, 0.0747],
         [0.0123, 0.9208, 0.7978,  ..., 0.0146, 0.0265, 0.7760]],
        [[0.9170, 0.0702, 0.0313,  ..., 0.0730, 0.0342, 0.0551],
         [0.0277, 0.0702, 0.0313,  ..., 0.0884, 0.0342, 0.0551],
         [0.0277, 0.0702, 0.0313,  ..., 0.0730, 0.8974, 0.8347],
         [0.0277, 0.7895, 0.9060,  ..., 0.7657, 0.0342, 0.0551]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0390, 0.1908, 0.9393,  ..., 0.9782, 0.0202, 0.0550],
         [0.0390, 0.3364, 0.0202,  ..., 0.0073, 0.0202, 0.0550],
         [0.8831, 0.1127, 0.0202,  ..., 0.0073, 0.9393, 0.8350],
         [0.0390, 0.3600, 0.0202,  ..., 0.0073, 0.0202, 0.0550]],
        [[0.0261, 0.0111, 0.9506,  ..., 0.9522, 0.0022, 0.0374],
         [0.0261, 0.0111, 0.0165,  ..., 0.0159, 0.0022, 0.0374],
         [0.9216, 0.0111, 0.0165,  ..., 0.0159, 0.0022, 0.8878],
         [0.0261, 0.9667, 0.0165,  ..., 0.0159, 0.9933, 0.0374]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9760, 0.0537, 0.0160,  ..., 0.9671, 0.9037, 0.0718],
         [0.0080, 0.0537, 0.0160,  ..., 0.0110, 0.0434, 0.0718],
         [0.0080, 0.0537, 0.0160,  ..., 0.0110, 0.0265, 0.0732],
         [0.0080, 0.8389, 0.9519,  ..., 0.0110, 0.0265, 0.7833]],
        [[0.9278, 0.0618, 0.0372,  ..., 0.0897, 0.0216, 0.0029],
         [0.0237, 0.0618, 0.0721,  ..., 0.1152, 0.0216, 0.0029],
         [0.0248, 0.0618, 0.0372,  ..., 0.0897, 0.9353, 0.9914],
         [0.0237, 0.8147, 0.8536,  ..., 0.7053, 0.0216, 0.0029]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:17:21,145 [Process: 0] Synchronize training processes
2024-08-19 13:17:21,145 [Process: 0] Evaluating...
2024-08-19 13:17:21,147 [Process: 0] EPOCH 100:
2024-08-19 13:17:21,149 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:22,194 [Process: 0] Synchronize training processes
2024-08-19 13:17:22,194 [Process: 0] Evaluating...
2024-08-19 13:17:22,196 [Process: 0] EPOCH 101:
2024-08-19 13:17:22,198 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0683, 0.2339, 0.9605,  ..., 0.9457, 0.0413, 0.0674],
         [0.0775, 0.3958, 0.0132,  ..., 0.0181, 0.0413, 0.0674],
         [0.7707, 0.1103, 0.0132,  ..., 0.0181, 0.8761, 0.7847],
         [0.0835, 0.2600, 0.0132,  ..., 0.0181, 0.0413, 0.0805]],
        [[0.0404, 0.0286, 0.9864,  ..., 0.9783, 0.0413, 0.0342],
         [0.0404, 0.0286, 0.0045,  ..., 0.0092, 0.0413, 0.0342],
         [0.8788, 0.0286, 0.0045,  ..., 0.0063, 0.0413, 0.8973],
         [0.0404, 0.9141, 0.0045,  ..., 0.0063, 0.8761, 0.0342]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9467, 0.0624, 0.0711,  ..., 0.8944, 0.8307, 0.0472],
         [0.0178, 0.0624, 0.0711,  ..., 0.0329, 0.0486, 0.0532],
         [0.0178, 0.0624, 0.0711,  ..., 0.0398, 0.0720, 0.0472],
         [0.0178, 0.8128, 0.7866,  ..., 0.0329, 0.0486, 0.8524]],
        [[0.7657, 0.0885, 0.0708,  ..., 0.0814, 0.0328, 0.0254],
         [0.0530, 0.0885, 0.1269,  ..., 0.1307, 0.0328, 0.0254],
         [0.0530, 0.1087, 0.0708,  ..., 0.0814, 0.9016, 0.9237],
         [0.1284, 0.7143, 0.7316,  ..., 0.7065, 0.0328, 0.0254]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0453, 0.1878, 0.9537,  ..., 0.9327, 0.0365, 0.0173],
         [0.0453, 0.4125, 0.0156,  ..., 0.0224, 0.0365, 0.0173],
         [0.8641, 0.1052, 0.0153,  ..., 0.0224, 0.8904, 0.9482],
         [0.0453, 0.2945, 0.0153,  ..., 0.0225, 0.0365, 0.0173]],
        [[0.0192, 0.0482, 0.7149,  ..., 0.9368, 0.0013, 0.0459],
         [0.0192, 0.0482, 0.1986,  ..., 0.0218, 0.0013, 0.0459],
         [0.9425, 0.0482, 0.0432,  ..., 0.0207, 0.0013, 0.8624],
         [0.0192, 0.8554, 0.0432,  ..., 0.0207, 0.9960, 0.0459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9794, 0.0654, 0.0685,  ..., 0.9640, 0.8396, 0.0462],
         [0.0081, 0.0654, 0.0685,  ..., 0.0120, 0.0837, 0.0462],
         [0.0062, 0.0654, 0.0851,  ..., 0.0120, 0.0384, 0.0542],
         [0.0062, 0.8038, 0.7778,  ..., 0.0120, 0.0384, 0.8535]],
        [[0.9956, 0.0964, 0.0553,  ..., 0.0731, 0.0126, 0.0124],
         [0.0015, 0.0964, 0.0553,  ..., 0.0762, 0.0126, 0.0124],
         [0.0015, 0.1392, 0.0553,  ..., 0.0731, 0.9623, 0.9627],
         [0.0015, 0.6681, 0.8341,  ..., 0.7777, 0.0126, 0.0124]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0639, 0.1500, 0.9647,  ..., 0.9908, 0.0341, 0.0334],
         [0.0639, 0.3545, 0.0167,  ..., 0.0031, 0.0341, 0.0334],
         [0.7648, 0.1113, 0.0093,  ..., 0.0031, 0.8978, 0.8999],
         [0.1073, 0.3842, 0.0093,  ..., 0.0031, 0.0341, 0.0334]],
        [[0.0195, 0.0190, 0.9914,  ..., 0.9458, 0.0122, 0.0295],
         [0.0195, 0.0190, 0.0029,  ..., 0.0364, 0.0122, 0.0295],
         [0.9415, 0.0190, 0.0029,  ..., 0.0089, 0.0122, 0.9115],
         [0.0195, 0.9431, 0.0029,  ..., 0.0089, 0.9634, 0.0295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:23,262 [Process: 0] Synchronize training processes
2024-08-19 13:17:23,262 [Process: 0] Evaluating...
2024-08-19 13:17:23,690 [Process: 0] EPOCH 102:
2024-08-19 13:17:23,695 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9197, 0.0697, 0.0412,  ..., 0.9446, 0.7914, 0.0896],
         [0.0331, 0.0697, 0.0412,  ..., 0.0293, 0.0703, 0.1157],
         [0.0236, 0.0865, 0.0412,  ..., 0.0131, 0.0788, 0.0936],
         [0.0236, 0.7740, 0.8764,  ..., 0.0131, 0.0595, 0.7011]],
        [[0.8719, 0.0844, 0.0387,  ..., 0.1113, 0.0435, 0.0175],
         [0.0215, 0.0871, 0.0387,  ..., 0.1352, 0.0435, 0.0175],
         [0.0215, 0.0844, 0.0387,  ..., 0.1424, 0.8696, 0.9475],
         [0.0850, 0.7441, 0.8839,  ..., 0.6111, 0.0435, 0.0175]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3089e-02, 1.7516e-01, 9.8170e-01,  ..., 9.7375e-01,
          5.1462e-02, 4.3095e-02],
         [3.3089e-02, 4.5523e-01, 7.2697e-03,  ..., 8.7488e-03,
          5.1462e-02, 4.3095e-02],
         [9.0073e-01, 9.4001e-02, 5.5159e-03,  ..., 8.7488e-03,
          8.3677e-01, 8.6304e-01],
         [3.3089e-02, 2.7560e-01, 5.5159e-03,  ..., 8.7488e-03,
          6.0309e-02, 5.0772e-02]],
        [[3.7555e-02, 7.2654e-02, 9.9713e-01,  ..., 9.5708e-01,
          7.6747e-04, 5.0260e-02],
         [3.7555e-02, 8.6407e-02, 9.5547e-04,  ..., 2.0762e-02,
          7.6747e-04, 5.0260e-02],
         [8.8733e-01, 7.2654e-02, 9.5547e-04,  ..., 1.1081e-02,
          7.6747e-04, 8.4922e-01],
         [3.7555e-02, 7.6829e-01, 9.5547e-04,  ..., 1.1081e-02,
          9.9770e-01, 5.0260e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9843, 0.0636, 0.0265,  ..., 0.9820, 0.8241, 0.0642],
         [0.0053, 0.0636, 0.0265,  ..., 0.0060, 0.0546, 0.0642],
         [0.0052, 0.0636, 0.0265,  ..., 0.0060, 0.0668, 0.0783],
         [0.0052, 0.8091, 0.9205,  ..., 0.0060, 0.0546, 0.7933]],
        [[0.9701, 0.0885, 0.0317,  ..., 0.0950, 0.0142, 0.0423],
         [0.0088, 0.1598, 0.0317,  ..., 0.0950, 0.0142, 0.0423],
         [0.0088, 0.0885, 0.0317,  ..., 0.1385, 0.9575, 0.8731],
         [0.0123, 0.6633, 0.9049,  ..., 0.6714, 0.0142, 0.0423]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.7187e-02, 1.2789e-01, 9.7253e-01,  ..., 9.5780e-01,
          3.9044e-02, 3.6874e-02],
         [6.7187e-02, 4.1274e-01, 9.1569e-03,  ..., 1.4067e-02,
          3.9044e-02, 3.6874e-02],
         [7.2026e-01, 8.5853e-02, 9.1569e-03,  ..., 1.4067e-02,
          8.8287e-01, 8.8938e-01],
         [1.4536e-01, 3.7351e-01, 9.1569e-03,  ..., 1.4067e-02,
          3.9044e-02, 3.6874e-02]],
        [[2.3361e-02, 2.4517e-02, 9.2563e-01,  ..., 9.5653e-01,
          6.0380e-04, 3.6218e-02],
         [2.3361e-02, 3.6165e-02, 3.3878e-02,  ..., 1.5374e-02,
          6.0380e-04, 3.6218e-02],
         [9.2992e-01, 2.4517e-02, 2.0246e-02,  ..., 1.4048e-02,
          6.0380e-04, 8.9135e-01],
         [2.3361e-02, 9.1480e-01, 2.0246e-02,  ..., 1.4048e-02,
          9.9819e-01, 3.6218e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:17:24,729 [Process: 0] Synchronize training processes
2024-08-19 13:17:24,730 [Process: 0] Evaluating...
2024-08-19 13:17:24,732 [Process: 0] EPOCH 103:
2024-08-19 13:17:24,734 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:25,771 [Process: 0] Synchronize training processes
2024-08-19 13:17:25,772 [Process: 0] Evaluating...
2024-08-19 13:17:25,774 [Process: 0] EPOCH 104:
2024-08-19 13:17:25,775 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9753, 0.0593, 0.0588,  ..., 0.9681, 0.9655, 0.0535],
         [0.0082, 0.0593, 0.0588,  ..., 0.0106, 0.0115, 0.0535],
         [0.0082, 0.0593, 0.0588,  ..., 0.0106, 0.0115, 0.0535],
         [0.0082, 0.8221, 0.8235,  ..., 0.0106, 0.0115, 0.8396]],
        [[0.0641, 0.0829, 0.0250,  ..., 0.0898, 0.0627, 0.0105],
         [0.0291, 0.0957, 0.0250,  ..., 0.1578, 0.0738, 0.0105],
         [0.0291, 0.0829, 0.0250,  ..., 0.0898, 0.8009, 0.9686],
         [0.8778, 0.7385, 0.9251,  ..., 0.6626, 0.0627, 0.0105]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0528, 0.2748, 0.9756,  ..., 0.9777, 0.0711, 0.0449],
         [0.0528, 0.4167, 0.0081,  ..., 0.0074, 0.0711, 0.0449],
         [0.8289, 0.1119, 0.0081,  ..., 0.0074, 0.7670, 0.8622],
         [0.0655, 0.1966, 0.0081,  ..., 0.0074, 0.0907, 0.0480]],
        [[0.0185, 0.0337, 0.9904,  ..., 0.9820, 0.0021, 0.0353],
         [0.0185, 0.0337, 0.0032,  ..., 0.0060, 0.0021, 0.0353],
         [0.9444, 0.0337, 0.0032,  ..., 0.0060, 0.0021, 0.8942],
         [0.0185, 0.8990, 0.0032,  ..., 0.0060, 0.9938, 0.0353]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9482, 0.0881, 0.0441,  ..., 0.9728, 0.9757, 0.0376],
         [0.0169, 0.0881, 0.0441,  ..., 0.0090, 0.0081, 0.0376],
         [0.0180, 0.1169, 0.0441,  ..., 0.0092, 0.0081, 0.0376],
         [0.0169, 0.7069, 0.8677,  ..., 0.0090, 0.0081, 0.8873]],
        [[0.4664, 0.0462, 0.0246,  ..., 0.0433, 0.0126, 0.1066],
         [0.0874, 0.0462, 0.0246,  ..., 0.0433, 0.0126, 0.1219],
         [0.1181, 0.0462, 0.0246,  ..., 0.0433, 0.9621, 0.5753],
         [0.3281, 0.8615, 0.9263,  ..., 0.8700, 0.0126, 0.1963]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1149e-01, 1.9896e-01, 9.9455e-01,  ..., 9.6946e-01,
          7.8873e-02, 4.0056e-02],
         [1.3004e-01, 5.5786e-01, 1.8151e-03,  ..., 1.0180e-02,
          7.8873e-02, 4.2963e-02],
         [4.9859e-01, 8.0715e-02, 1.8151e-03,  ..., 1.0180e-02,
          7.5419e-01, 8.7692e-01],
         [2.5987e-01, 1.6246e-01, 1.8151e-03,  ..., 1.0180e-02,
          8.8067e-02, 4.0056e-02]],
        [[2.4035e-02, 2.3752e-02, 9.9628e-01,  ..., 9.5823e-01,
          4.8560e-04, 5.5578e-02],
         [2.4035e-02, 2.3752e-02, 1.2386e-03,  ..., 1.3923e-02,
          4.8560e-04, 5.5578e-02],
         [9.2789e-01, 2.3752e-02, 1.2386e-03,  ..., 1.3923e-02,
          4.8560e-04, 8.3146e-01],
         [2.4035e-02, 9.2874e-01, 1.2386e-03,  ..., 1.3923e-02,
          9.9854e-01, 5.7388e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:17:26,811 [Process: 0] Synchronize training processes
2024-08-19 13:17:26,811 [Process: 0] Evaluating...
2024-08-19 13:17:26,813 [Process: 0] EPOCH 105:
2024-08-19 13:17:26,815 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:27,851 [Process: 0] Synchronize training processes
2024-08-19 13:17:27,851 [Process: 0] Evaluating...
2024-08-19 13:17:27,853 [Process: 0] EPOCH 106:
2024-08-19 13:17:27,854 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9859, 0.0556, 0.0574,  ..., 0.9925, 0.9590, 0.0665],
         [0.0052, 0.0556, 0.0574,  ..., 0.0025, 0.0173, 0.0665],
         [0.0044, 0.0810, 0.0574,  ..., 0.0025, 0.0119, 0.0717],
         [0.0044, 0.8078, 0.8279,  ..., 0.0025, 0.0119, 0.7954]],
        [[0.4126, 0.0604, 0.0099,  ..., 0.1032, 0.0216, 0.0295],
         [0.0297, 0.0604, 0.0099,  ..., 0.1051, 0.0216, 0.0295],
         [0.0297, 0.0604, 0.0099,  ..., 0.1107, 0.9352, 0.9116],
         [0.5279, 0.8187, 0.9704,  ..., 0.6810, 0.0216, 0.0295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1668e-01, 1.2921e-01, 9.9319e-01,  ..., 9.8949e-01,
          3.6992e-02, 4.3302e-02],
         [1.2929e-01, 4.4785e-01, 2.2695e-03,  ..., 3.5044e-03,
          3.6992e-02, 4.3302e-02],
         [2.6822e-01, 9.1644e-02, 2.2695e-03,  ..., 3.5044e-03,
          8.8902e-01, 8.7009e-01],
         [4.8582e-01, 3.3130e-01, 2.2695e-03,  ..., 3.5044e-03,
          3.6992e-02, 4.3302e-02]],
        [[5.1491e-02, 5.1349e-03, 9.7132e-01,  ..., 9.8198e-01,
          9.2545e-04, 6.3745e-02],
         [5.5151e-02, 5.1349e-03, 9.5587e-03,  ..., 8.8800e-03,
          9.2545e-04, 7.0858e-02],
         [8.4187e-01, 5.1349e-03, 9.5587e-03,  ..., 4.5681e-03,
          9.2545e-04, 7.9964e-01],
         [5.1491e-02, 9.8460e-01, 9.5587e-03,  ..., 4.5681e-03,
          9.9722e-01, 6.5755e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9374, 0.0647, 0.0460,  ..., 0.9883, 0.8526, 0.0722],
         [0.0194, 0.0657, 0.0499,  ..., 0.0039, 0.0757, 0.0722],
         [0.0239, 0.0647, 0.0460,  ..., 0.0039, 0.0358, 0.0901],
         [0.0194, 0.8048, 0.8581,  ..., 0.0039, 0.0358, 0.7654]],
        [[0.9885, 0.0681, 0.0237,  ..., 0.0990, 0.0114, 0.0307],
         [0.0032, 0.0745, 0.0237,  ..., 0.0990, 0.0114, 0.0307],
         [0.0051, 0.0681, 0.0237,  ..., 0.1495, 0.9657, 0.9080],
         [0.0032, 0.7893, 0.9288,  ..., 0.6526, 0.0114, 0.0307]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:17:28,890 [Process: 0] Synchronize training processes
2024-08-19 13:17:28,891 [Process: 0] Evaluating...
2024-08-19 13:17:28,892 [Process: 0] EPOCH 107:
2024-08-19 13:17:28,894 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:29,931 [Process: 0] Synchronize training processes
2024-08-19 13:17:29,931 [Process: 0] Evaluating...
2024-08-19 13:17:29,933 [Process: 0] EPOCH 108:
2024-08-19 13:17:29,935 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2414e-02, 1.7197e-01, 9.6433e-01,  ..., 9.5447e-01,
          5.6700e-02, 4.5132e-02],
         [5.2414e-02, 6.1251e-01, 1.1890e-02,  ..., 1.5175e-02,
          5.6700e-02, 4.5132e-02],
         [8.4079e-01, 6.9691e-02, 1.1890e-02,  ..., 1.5175e-02,
          8.1934e-01, 8.6160e-01],
         [5.4378e-02, 1.4584e-01, 1.1890e-02,  ..., 1.5175e-02,
          6.7258e-02, 4.8135e-02]],
        [[4.3065e-02, 9.2725e-03, 9.8452e-01,  ..., 9.7588e-01,
          3.4639e-04, 4.6457e-02],
         [4.3065e-02, 9.2725e-03, 5.1584e-03,  ..., 9.3461e-03,
          3.4639e-04, 4.6457e-02],
         [8.7080e-01, 9.2725e-03, 5.1584e-03,  ..., 7.3891e-03,
          3.4639e-04, 8.6063e-01],
         [4.3065e-02, 9.7218e-01, 5.1584e-03,  ..., 7.3891e-03,
          9.9896e-01, 4.6457e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8030e-01, 2.8886e-02, 3.1387e-02,  ..., 9.4057e-01,
          9.0847e-01, 1.9776e-02],
         [6.5659e-03, 2.8886e-02, 3.1387e-02,  ..., 3.7183e-02,
          4.2472e-02, 1.9776e-02],
         [6.5659e-03, 2.8886e-02, 3.1387e-02,  ..., 1.1124e-02,
          2.4530e-02, 1.9776e-02],
         [6.5659e-03, 9.1334e-01, 9.0584e-01,  ..., 1.1124e-02,
          2.4530e-02, 9.4067e-01]],
        [[9.9912e-01, 4.2725e-02, 3.0662e-02,  ..., 3.9142e-02,
          6.5885e-03, 1.2698e-01],
         [2.3022e-04, 4.9888e-02, 3.2176e-02,  ..., 3.9142e-02,
          6.5885e-03, 1.6196e-01],
         [4.2187e-04, 4.2725e-02, 3.0662e-02,  ..., 3.9142e-02,
          9.8023e-01, 3.8704e-01],
         [2.3022e-04, 8.6466e-01, 9.0650e-01,  ..., 8.8257e-01,
          6.5885e-03, 3.2402e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0720, 0.1143, 0.9530,  ..., 0.9685, 0.0201, 0.0415],
         [0.0720, 0.6138, 0.0186,  ..., 0.0105, 0.0201, 0.0415],
         [0.7740, 0.0739, 0.0142,  ..., 0.0105, 0.9398, 0.8755],
         [0.0820, 0.1980, 0.0142,  ..., 0.0105, 0.0201, 0.0415]],
        [[0.0690, 0.0296, 0.9629,  ..., 0.9018, 0.0022, 0.0487],
         [0.0952, 0.0447, 0.0124,  ..., 0.0658, 0.0022, 0.0487],
         [0.7605, 0.0296, 0.0124,  ..., 0.0162, 0.0022, 0.8538],
         [0.0753, 0.8961, 0.0124,  ..., 0.0162, 0.9933, 0.0487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9900, 0.0352, 0.0282,  ..., 0.9316, 0.8460, 0.0155],
         [0.0035, 0.0352, 0.0282,  ..., 0.0218, 0.0602, 0.0155],
         [0.0032, 0.0352, 0.0282,  ..., 0.0249, 0.0489, 0.0155],
         [0.0032, 0.8944, 0.9155,  ..., 0.0218, 0.0449, 0.9535]],
        [[0.9886, 0.1012, 0.0520,  ..., 0.1154, 0.0077, 0.0107],
         [0.0034, 0.1370, 0.0520,  ..., 0.2630, 0.0077, 0.0107],
         [0.0045, 0.1267, 0.0555,  ..., 0.1774, 0.9770, 0.9679],
         [0.0034, 0.6351, 0.8405,  ..., 0.4442, 0.0077, 0.0107]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:17:30,978 [Process: 0] Synchronize training processes
2024-08-19 13:17:30,978 [Process: 0] Evaluating...
2024-08-19 13:17:30,980 [Process: 0] EPOCH 109:
2024-08-19 13:17:30,982 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:32,024 [Process: 0] Synchronize training processes
2024-08-19 13:17:32,025 [Process: 0] Evaluating...
2024-08-19 13:17:32,026 [Process: 0] EPOCH 110:
2024-08-19 13:17:32,028 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1187, 0.0923, 0.9725,  ..., 0.9763, 0.0415, 0.0250],
         [0.2004, 0.3484, 0.0113,  ..., 0.0079, 0.0415, 0.0250],
         [0.3476, 0.0841, 0.0081,  ..., 0.0079, 0.8755, 0.9250],
         [0.3333, 0.4752, 0.0081,  ..., 0.0079, 0.0415, 0.0250]],
        [[0.0382, 0.0033, 0.9597,  ..., 0.9484, 0.0048, 0.0130],
         [0.0382, 0.0033, 0.0134,  ..., 0.0172, 0.0048, 0.0130],
         [0.8854, 0.0033, 0.0134,  ..., 0.0172, 0.0048, 0.9610],
         [0.0382, 0.9901, 0.0134,  ..., 0.0172, 0.9855, 0.0130]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8486e-01, 5.3795e-02, 4.5195e-02,  ..., 9.7958e-01,
          9.4057e-01, 4.1975e-02],
         [5.0466e-03, 5.3795e-02, 4.6192e-02,  ..., 6.8077e-03,
          2.0090e-02, 4.1975e-02],
         [5.0466e-03, 5.3795e-02, 4.5966e-02,  ..., 6.8077e-03,
          1.9669e-02, 4.2002e-02],
         [5.0466e-03, 8.3862e-01, 8.6265e-01,  ..., 6.8077e-03,
          1.9669e-02, 8.7405e-01]],
        [[9.9873e-01, 5.2610e-02, 3.2226e-02,  ..., 7.6252e-02,
          3.2582e-02, 5.8650e-03],
         [3.9053e-04, 5.4077e-02, 3.2226e-02,  ..., 8.0061e-02,
          3.2582e-02, 5.8650e-03],
         [4.8698e-04, 5.2610e-02, 3.2226e-02,  ..., 7.6252e-02,
          9.0225e-01, 9.8241e-01],
         [3.9053e-04, 8.4070e-01, 9.0332e-01,  ..., 7.6744e-01,
          3.2582e-02, 5.8650e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0947, 0.1671, 0.9925,  ..., 0.9853, 0.0410, 0.0627],
         [0.1099, 0.5529, 0.0025,  ..., 0.0049, 0.0410, 0.0627],
         [0.6570, 0.0874, 0.0025,  ..., 0.0049, 0.8769, 0.8037],
         [0.1384, 0.1926, 0.0025,  ..., 0.0049, 0.0410, 0.0709]],
        [[0.0264, 0.0085, 0.9843,  ..., 0.9695, 0.0095, 0.0097],
         [0.0264, 0.0085, 0.0052,  ..., 0.0102, 0.0095, 0.0097],
         [0.9208, 0.0085, 0.0052,  ..., 0.0102, 0.0095, 0.9708],
         [0.0264, 0.9745, 0.0052,  ..., 0.0102, 0.9715, 0.0097]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7621e-01, 5.4584e-02, 4.0707e-02,  ..., 9.5035e-01,
          5.8616e-01, 5.3861e-02],
         [7.9315e-03, 5.4584e-02, 4.0707e-02,  ..., 2.0019e-02,
          2.8464e-01, 5.9695e-02],
         [7.9315e-03, 5.4823e-02, 4.0707e-02,  ..., 1.4817e-02,
          6.4603e-02, 5.5619e-02],
         [7.9315e-03, 8.3601e-01, 8.7788e-01,  ..., 1.4817e-02,
          6.4603e-02, 8.3082e-01]],
        [[9.9847e-01, 4.5497e-02, 1.3450e-02,  ..., 6.3045e-02,
          5.4139e-02, 1.4425e-02],
         [3.3830e-04, 5.1830e-02, 1.3450e-02,  ..., 6.3045e-02,
          5.4139e-02, 1.4425e-02],
         [3.5231e-04, 4.5497e-02, 1.3450e-02,  ..., 6.3045e-02,
          8.3758e-01, 9.5673e-01],
         [8.3481e-04, 8.5718e-01, 9.5965e-01,  ..., 8.1086e-01,
          5.4139e-02, 1.4425e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:17:33,065 [Process: 0] Synchronize training processes
2024-08-19 13:17:33,065 [Process: 0] Evaluating...
2024-08-19 13:17:33,067 [Process: 0] EPOCH 111:
2024-08-19 13:17:33,069 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:34,106 [Process: 0] Synchronize training processes
2024-08-19 13:17:34,107 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0820, 0.1363, 0.9517,  ..., 0.9869, 0.0617, 0.0289],
         [0.0915, 0.6209, 0.0161,  ..., 0.0044, 0.0619, 0.0289],
         [0.7275, 0.0777, 0.0161,  ..., 0.0044, 0.7952, 0.9132],
         [0.0989, 0.1651, 0.0161,  ..., 0.0044, 0.0812, 0.0289]],
        [[0.0392, 0.0055, 0.9899,  ..., 0.9726, 0.0033, 0.0155],
         [0.0392, 0.0055, 0.0034,  ..., 0.0134, 0.0033, 0.0155],
         [0.8825, 0.0055, 0.0034,  ..., 0.0070, 0.0033, 0.9536],
         [0.0392, 0.9835, 0.0034,  ..., 0.0070, 0.9900, 0.0155]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8205e-01, 7.9351e-02, 2.1853e-02,  ..., 9.8292e-01,
          9.2382e-01, 4.6650e-02],
         [5.9848e-03, 7.9351e-02, 2.1853e-02,  ..., 5.6927e-03,
          4.8285e-02, 4.6650e-02],
         [5.9848e-03, 1.0076e-01, 2.1853e-02,  ..., 5.6927e-03,
          1.3947e-02, 4.6650e-02],
         [5.9848e-03, 7.4053e-01, 9.3444e-01,  ..., 5.6927e-03,
          1.3947e-02, 8.6005e-01]],
        [[9.9909e-01, 7.3918e-02, 3.3982e-02,  ..., 9.9761e-02,
          8.0646e-03, 2.6279e-02],
         [2.4561e-04, 7.3918e-02, 3.3982e-02,  ..., 1.7798e-01,
          8.0646e-03, 2.6279e-02],
         [3.5516e-04, 8.3760e-02, 3.3982e-02,  ..., 1.0719e-01,
          9.7581e-01, 9.2116e-01],
         [3.1335e-04, 7.6840e-01, 8.9805e-01,  ..., 6.1507e-01,
          8.0646e-03, 2.6279e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0473, 0.1398, 0.9838,  ..., 0.9899, 0.0277, 0.0310],
         [0.0509, 0.4433, 0.0054,  ..., 0.0034, 0.0277, 0.0310],
         [0.8545, 0.0941, 0.0054,  ..., 0.0034, 0.9170, 0.9070],
         [0.0473, 0.3228, 0.0054,  ..., 0.0034, 0.0277, 0.0310]],
        [[0.0447, 0.0022, 0.9861,  ..., 0.9636, 0.0047, 0.0360],
         [0.0447, 0.0022, 0.0046,  ..., 0.0125, 0.0047, 0.0360],
         [0.8658, 0.0022, 0.0046,  ..., 0.0119, 0.0047, 0.8921],
         [0.0447, 0.9935, 0.0046,  ..., 0.0119, 0.9860, 0.0360]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:34,533 [Process: 0] EPOCH 112:
2024-08-19 13:17:34,535 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:35,570 [Process: 0] Synchronize training processes
2024-08-19 13:17:35,571 [Process: 0] Evaluating...
2024-08-19 13:17:35,572 [Process: 0] EPOCH 113:
2024-08-19 13:17:35,574 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7873e-01, 3.9512e-02, 5.3551e-02,  ..., 9.6878e-01,
          9.8846e-01, 1.8303e-02],
         [7.0914e-03, 3.9512e-02, 5.3551e-02,  ..., 2.1474e-02,
          3.8464e-03, 1.8303e-02],
         [7.0914e-03, 3.9512e-02, 5.3551e-02,  ..., 4.8722e-03,
          3.8464e-03, 1.8303e-02],
         [7.0914e-03, 8.8147e-01, 8.3935e-01,  ..., 4.8722e-03,
          3.8464e-03, 9.4509e-01]],
        [[9.9861e-01, 2.5019e-02, 2.9838e-02,  ..., 9.8316e-02,
          1.0994e-02, 8.9144e-03],
         [4.6356e-04, 2.5019e-02, 2.9838e-02,  ..., 1.4685e-01,
          1.0994e-02, 8.9144e-03],
         [4.6356e-04, 2.5019e-02, 2.9838e-02,  ..., 1.2433e-01,
          9.6702e-01, 9.7326e-01],
         [4.6356e-04, 9.2494e-01, 9.1049e-01,  ..., 6.3051e-01,
          1.0994e-02, 8.9144e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0808, 0.1219, 0.9871,  ..., 0.9265, 0.0177, 0.0298],
         [0.0808, 0.4363, 0.0043,  ..., 0.0185, 0.0177, 0.0298],
         [0.7217, 0.0811, 0.0043,  ..., 0.0185, 0.9470, 0.9105],
         [0.1167, 0.3607, 0.0043,  ..., 0.0365, 0.0177, 0.0298]],
        [[0.0613, 0.0230, 0.9805,  ..., 0.8450, 0.0011, 0.0291],
         [0.0703, 0.0328, 0.0079,  ..., 0.0750, 0.0011, 0.0296],
         [0.8028, 0.0230, 0.0058,  ..., 0.0400, 0.0011, 0.9122],
         [0.0656, 0.9211, 0.0058,  ..., 0.0400, 0.9966, 0.0291]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9760, 0.0368, 0.0657,  ..., 0.9716, 0.9895, 0.0537],
         [0.0106, 0.0368, 0.0657,  ..., 0.0121, 0.0035, 0.0537],
         [0.0067, 0.0368, 0.0657,  ..., 0.0081, 0.0035, 0.0562],
         [0.0067, 0.8895, 0.8030,  ..., 0.0081, 0.0035, 0.8364]],
        [[0.9506, 0.0687, 0.0141,  ..., 0.1034, 0.0070, 0.0133],
         [0.0084, 0.0687, 0.0141,  ..., 0.1175, 0.0070, 0.0133],
         [0.0326, 0.0741, 0.0141,  ..., 0.1439, 0.9789, 0.9602],
         [0.0084, 0.7885, 0.9576,  ..., 0.6351, 0.0070, 0.0133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4207e-02, 1.0487e-01, 9.8784e-01,  ..., 9.8690e-01,
          1.3544e-02, 4.9808e-02],
         [5.4207e-02, 7.4292e-01, 4.0529e-03,  ..., 4.3674e-03,
          1.3544e-02, 4.9808e-02],
         [8.2153e-01, 5.7820e-02, 4.0529e-03,  ..., 4.3674e-03,
          9.5937e-01, 8.4325e-01],
         [7.0054e-02, 9.4389e-02, 4.0529e-03,  ..., 4.3674e-03,
          1.3544e-02, 5.7131e-02]],
        [[1.7771e-02, 6.7330e-03, 9.9193e-01,  ..., 9.8025e-01,
          2.2338e-04, 3.8487e-02],
         [1.7771e-02, 6.7330e-03, 2.6916e-03,  ..., 6.5846e-03,
          2.2338e-04, 4.6663e-02],
         [9.4669e-01, 6.7330e-03, 2.6916e-03,  ..., 6.5846e-03,
          2.2338e-04, 8.7636e-01],
         [1.7771e-02, 9.7980e-01, 2.6916e-03,  ..., 6.5846e-03,
          9.9933e-01, 3.8487e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:36,611 [Process: 0] Synchronize training processes
2024-08-19 13:17:36,611 [Process: 0] Evaluating...
2024-08-19 13:17:36,613 [Process: 0] EPOCH 114:
2024-08-19 13:17:36,615 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:37,654 [Process: 0] Synchronize training processes
2024-08-19 13:17:37,654 [Process: 0] Evaluating...
2024-08-19 13:17:37,656 [Process: 0] EPOCH 115:
2024-08-19 13:17:37,658 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9960, 0.0268, 0.0568,  ..., 0.9859, 0.8111, 0.0606],
         [0.0013, 0.0268, 0.0568,  ..., 0.0047, 0.0887, 0.0606],
         [0.0013, 0.0268, 0.0568,  ..., 0.0047, 0.0539, 0.0956],
         [0.0013, 0.9196, 0.8297,  ..., 0.0047, 0.0464, 0.7832]],
        [[0.8212, 0.0472, 0.0965,  ..., 0.0757, 0.0369, 0.0105],
         [0.0163, 0.0472, 0.1239,  ..., 0.0757, 0.0369, 0.0105],
         [0.1463, 0.0542, 0.1221,  ..., 0.0786, 0.8894, 0.9684],
         [0.0163, 0.8513, 0.6575,  ..., 0.7700, 0.0369, 0.0105]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0609, 0.1055, 0.9741,  ..., 0.9769, 0.0122, 0.0326],
         [0.0609, 0.6321, 0.0144,  ..., 0.0077, 0.0122, 0.0326],
         [0.7950, 0.1056, 0.0058,  ..., 0.0077, 0.9633, 0.9023],
         [0.0833, 0.1568, 0.0058,  ..., 0.0077, 0.0122, 0.0326]],
        [[0.0425, 0.0022, 0.9722,  ..., 0.9705, 0.0037, 0.0336],
         [0.0425, 0.0022, 0.0107,  ..., 0.0098, 0.0037, 0.0368],
         [0.8719, 0.0022, 0.0086,  ..., 0.0098, 0.0037, 0.8961],
         [0.0431, 0.9933, 0.0086,  ..., 0.0098, 0.9888, 0.0336]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9855, 0.0277, 0.0098,  ..., 0.8268, 0.9306, 0.0631],
         [0.0083, 0.0277, 0.0098,  ..., 0.0691, 0.0291, 0.0631],
         [0.0031, 0.0277, 0.0098,  ..., 0.0597, 0.0201, 0.0916],
         [0.0031, 0.9168, 0.9705,  ..., 0.0444, 0.0201, 0.7821]],
        [[0.8509, 0.0343, 0.0459,  ..., 0.0837, 0.0249, 0.0234],
         [0.0206, 0.0343, 0.0459,  ..., 0.1296, 0.0249, 0.0234],
         [0.1079, 0.0343, 0.0459,  ..., 0.0912, 0.9253, 0.9299],
         [0.0206, 0.8970, 0.8624,  ..., 0.6955, 0.0249, 0.0234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4933e-02, 9.6896e-02, 9.4999e-01,  ..., 9.8632e-01,
          1.8947e-02, 2.2533e-02],
         [5.4933e-02, 7.3632e-01, 3.2724e-02,  ..., 4.5597e-03,
          1.8947e-02, 2.2533e-02],
         [8.3159e-01, 6.1289e-02, 8.6439e-03,  ..., 4.5597e-03,
          9.4316e-01, 9.3240e-01],
         [5.8549e-02, 1.0550e-01, 8.6439e-03,  ..., 4.5597e-03,
          1.8947e-02, 2.2533e-02]],
        [[1.9671e-02, 1.1130e-02, 9.9198e-01,  ..., 9.8589e-01,
          4.4937e-05, 2.5151e-02],
         [1.9671e-02, 1.1130e-02, 2.7274e-03,  ..., 6.7033e-03,
          4.4937e-05, 2.5151e-02],
         [9.4099e-01, 1.1130e-02, 2.6468e-03,  ..., 3.7014e-03,
          4.4937e-05, 9.2455e-01],
         [1.9671e-02, 9.6661e-01, 2.6468e-03,  ..., 3.7014e-03,
          9.9987e-01, 2.5151e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:38,697 [Process: 0] Synchronize training processes
2024-08-19 13:17:38,697 [Process: 0] Evaluating...
2024-08-19 13:17:38,699 [Process: 0] EPOCH 116:
2024-08-19 13:17:38,701 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:39,741 [Process: 0] Synchronize training processes
2024-08-19 13:17:39,741 [Process: 0] Evaluating...
2024-08-19 13:17:39,743 [Process: 0] EPOCH 117:
2024-08-19 13:17:39,745 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8743, 0.0283, 0.0322,  ..., 0.9893, 0.9828, 0.0554],
         [0.0781, 0.0283, 0.0322,  ..., 0.0041, 0.0087, 0.0554],
         [0.0238, 0.0283, 0.0322,  ..., 0.0033, 0.0043, 0.0554],
         [0.0238, 0.9151, 0.9034,  ..., 0.0033, 0.0043, 0.8337]],
        [[0.9593, 0.0256, 0.0187,  ..., 0.0772, 0.0067, 0.0241],
         [0.0075, 0.0256, 0.0187,  ..., 0.1066, 0.0067, 0.0241],
         [0.0258, 0.0256, 0.0187,  ..., 0.0772, 0.9799, 0.9278],
         [0.0075, 0.9231, 0.9440,  ..., 0.7391, 0.0067, 0.0241]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9581e-02, 7.6377e-02, 9.9587e-01,  ..., 9.6213e-01,
          2.5980e-02, 2.7352e-02],
         [2.9581e-02, 6.9615e-01, 1.3780e-03,  ..., 1.2625e-02,
          2.5980e-02, 2.7352e-02],
         [9.1126e-01, 6.2385e-02, 1.3780e-03,  ..., 1.2625e-02,
          9.2206e-01, 9.1794e-01],
         [2.9581e-02, 1.6508e-01, 1.3780e-03,  ..., 1.2625e-02,
          2.5980e-02, 2.7352e-02]],
        [[1.9201e-02, 2.0128e-02, 9.8392e-01,  ..., 9.8617e-01,
          6.0102e-04, 3.9673e-02],
         [1.9201e-02, 2.4826e-02, 5.3598e-03,  ..., 4.6112e-03,
          6.0102e-04, 3.9673e-02],
         [9.4240e-01, 2.0128e-02, 5.3598e-03,  ..., 4.6112e-03,
          6.0102e-04, 8.8098e-01],
         [1.9201e-02, 9.3492e-01, 5.3598e-03,  ..., 4.6112e-03,
          9.9820e-01, 3.9673e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8473, 0.0530, 0.0227,  ..., 0.9791, 0.9759, 0.0369],
         [0.0525, 0.0530, 0.0227,  ..., 0.0070, 0.0080, 0.0369],
         [0.0503, 0.0581, 0.0227,  ..., 0.0070, 0.0080, 0.0369],
         [0.0499, 0.8359, 0.9320,  ..., 0.0070, 0.0080, 0.8892]],
        [[0.9919, 0.0497, 0.0299,  ..., 0.0427, 0.0121, 0.0137],
         [0.0017, 0.0443, 0.0299,  ..., 0.0504, 0.0121, 0.0137],
         [0.0048, 0.0443, 0.0299,  ..., 0.0427, 0.9638, 0.9590],
         [0.0017, 0.8618, 0.9104,  ..., 0.8642, 0.0121, 0.0137]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7256e-02, 8.0920e-02, 9.9231e-01,  ..., 9.5319e-01,
          3.0626e-02, 4.4767e-02],
         [4.7256e-02, 7.2172e-01, 2.5630e-03,  ..., 1.9690e-02,
          3.0626e-02, 4.4767e-02],
         [8.5823e-01, 5.7571e-02, 2.5630e-03,  ..., 1.3562e-02,
          9.0812e-01, 8.6570e-01],
         [4.7256e-02, 1.3979e-01, 2.5630e-03,  ..., 1.3562e-02,
          3.0626e-02, 4.4767e-02]],
        [[1.5481e-02, 2.2403e-02, 9.8370e-01,  ..., 9.9667e-01,
          7.5824e-04, 6.0729e-02],
         [1.5481e-02, 2.2507e-02, 5.4327e-03,  ..., 1.1097e-03,
          7.5824e-04, 6.0729e-02],
         [9.5356e-01, 2.2403e-02, 5.4327e-03,  ..., 1.1097e-03,
          7.5824e-04, 8.1020e-01],
         [1.5481e-02, 9.3269e-01, 5.4327e-03,  ..., 1.1097e-03,
          9.9773e-01, 6.8339e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:40,796 [Process: 0] Synchronize training processes
2024-08-19 13:17:40,797 [Process: 0] Evaluating...
2024-08-19 13:17:40,798 [Process: 0] EPOCH 118:
2024-08-19 13:17:40,800 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:41,854 [Process: 0] Synchronize training processes
2024-08-19 13:17:41,854 [Process: 0] Evaluating...
2024-08-19 13:17:41,856 [Process: 0] EPOCH 119:
2024-08-19 13:17:41,858 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9510, 0.0538, 0.0525,  ..., 0.9667, 0.8065, 0.0879],
         [0.0195, 0.0538, 0.0649,  ..., 0.0109, 0.1249, 0.1366],
         [0.0150, 0.0538, 0.0525,  ..., 0.0117, 0.0343, 0.1005],
         [0.0145, 0.8387, 0.8300,  ..., 0.0107, 0.0343, 0.6750]],
        [[0.9886, 0.0192, 0.0820,  ..., 0.0527, 0.0065, 0.0276],
         [0.0024, 0.0192, 0.1634,  ..., 0.0541, 0.0065, 0.0276],
         [0.0065, 0.0192, 0.0820,  ..., 0.0527, 0.9806, 0.9173],
         [0.0024, 0.9425, 0.6727,  ..., 0.8406, 0.0065, 0.0276]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.6699e-02, 9.0242e-02, 9.9534e-01,  ..., 9.8451e-01,
          5.8174e-02, 3.7293e-02],
         [5.0446e-02, 6.5205e-01, 1.5525e-03,  ..., 5.1631e-03,
          7.3093e-02, 3.7293e-02],
         [8.5616e-01, 7.4568e-02, 1.5525e-03,  ..., 5.1631e-03,
          8.0119e-01, 8.8812e-01],
         [4.6699e-02, 1.8314e-01, 1.5525e-03,  ..., 5.1631e-03,
          6.7539e-02, 3.7293e-02]],
        [[2.7287e-02, 3.7496e-03, 9.9330e-01,  ..., 9.9603e-01,
          5.9502e-04, 3.9843e-02],
         [2.7287e-02, 3.7496e-03, 2.2333e-03,  ..., 1.3221e-03,
          5.9502e-04, 4.0457e-02],
         [9.1814e-01, 3.7496e-03, 2.2333e-03,  ..., 1.3221e-03,
          5.9502e-04, 8.7986e-01],
         [2.7287e-02, 9.8875e-01, 2.2333e-03,  ..., 1.3221e-03,
          9.9821e-01, 3.9843e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9289, 0.0484, 0.0303,  ..., 0.9927, 0.9542, 0.0671],
         [0.0213, 0.0484, 0.0303,  ..., 0.0024, 0.0144, 0.0671],
         [0.0285, 0.0484, 0.0303,  ..., 0.0024, 0.0170, 0.0908],
         [0.0213, 0.8548, 0.9092,  ..., 0.0024, 0.0144, 0.7749]],
        [[0.9714, 0.0701, 0.0225,  ..., 0.0404, 0.0059, 0.0344],
         [0.0057, 0.1080, 0.0225,  ..., 0.0404, 0.0059, 0.0344],
         [0.0171, 0.0701, 0.0225,  ..., 0.0404, 0.9824, 0.8969],
         [0.0057, 0.7519, 0.9324,  ..., 0.8788, 0.0059, 0.0344]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0327, 0.1053, 0.9957,  ..., 0.9000, 0.0427, 0.0379],
         [0.0327, 0.7739, 0.0014,  ..., 0.0237, 0.0439, 0.0379],
         [0.9018, 0.0469, 0.0014,  ..., 0.0237, 0.8707, 0.8863],
         [0.0327, 0.0740, 0.0014,  ..., 0.0526, 0.0427, 0.0379]],
        [[0.0377, 0.0067, 0.9942,  ..., 0.9272, 0.0018, 0.0495],
         [0.0377, 0.0067, 0.0019,  ..., 0.0329, 0.0018, 0.0678],
         [0.8868, 0.0067, 0.0019,  ..., 0.0200, 0.0018, 0.8332],
         [0.0377, 0.9799, 0.0019,  ..., 0.0200, 0.9945, 0.0495]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:17:42,903 [Process: 0] Synchronize training processes
2024-08-19 13:17:42,903 [Process: 0] Evaluating...
2024-08-19 13:17:42,905 [Process: 0] EPOCH 120:
2024-08-19 13:17:42,907 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:43,945 [Process: 0] Synchronize training processes
2024-08-19 13:17:43,945 [Process: 0] Evaluating...
2024-08-19 13:17:43,947 [Process: 0] EPOCH 121:
2024-08-19 13:17:43,949 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9027, 0.0388, 0.0316,  ..., 0.9563, 0.9622, 0.0603],
         [0.0690, 0.0388, 0.0316,  ..., 0.0121, 0.0155, 0.0603],
         [0.0142, 0.0388, 0.0316,  ..., 0.0195, 0.0111, 0.0603],
         [0.0142, 0.8835, 0.9051,  ..., 0.0121, 0.0111, 0.8191]],
        [[0.9943, 0.0532, 0.0127,  ..., 0.0217, 0.0049, 0.0108],
         [0.0016, 0.0532, 0.0127,  ..., 0.0217, 0.0049, 0.0108],
         [0.0026, 0.0532, 0.0127,  ..., 0.0217, 0.9853, 0.9676],
         [0.0016, 0.8405, 0.9620,  ..., 0.9350, 0.0049, 0.0108]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0798, 0.1562, 0.9532,  ..., 0.9965, 0.0237, 0.0341],
         [0.0798, 0.6091, 0.0297,  ..., 0.0012, 0.0237, 0.0341],
         [0.6825, 0.0853, 0.0086,  ..., 0.0012, 0.9289, 0.8978],
         [0.1579, 0.1494, 0.0086,  ..., 0.0012, 0.0237, 0.0341]],
        [[0.0154, 0.0048, 0.9902,  ..., 0.9873, 0.0010, 0.0208],
         [0.0154, 0.0048, 0.0041,  ..., 0.0042, 0.0010, 0.0208],
         [0.9539, 0.0048, 0.0028,  ..., 0.0042, 0.0010, 0.9377],
         [0.0154, 0.9855, 0.0028,  ..., 0.0042, 0.9969, 0.0208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8090e-01, 3.6531e-02, 1.4478e-02,  ..., 8.1851e-01,
          9.8197e-01, 4.4243e-02],
         [6.2272e-03, 3.6531e-02, 1.4478e-02,  ..., 5.5151e-02,
          6.3420e-03, 4.4243e-02],
         [6.6500e-03, 3.6531e-02, 1.4478e-02,  ..., 7.2014e-02,
          5.8442e-03, 4.4243e-02],
         [6.2272e-03, 8.9041e-01, 9.5657e-01,  ..., 5.4322e-02,
          5.8442e-03, 8.6727e-01]],
        [[9.9897e-01, 3.8132e-02, 6.1571e-02,  ..., 3.2417e-02,
          5.1809e-03, 2.0281e-02],
         [3.4182e-04, 3.8132e-02, 6.1571e-02,  ..., 3.2417e-02,
          5.1809e-03, 2.0281e-02],
         [3.4182e-04, 3.8132e-02, 6.1571e-02,  ..., 3.2417e-02,
          9.8446e-01, 9.3916e-01],
         [3.4182e-04, 8.8560e-01, 8.1529e-01,  ..., 9.0275e-01,
          5.1809e-03, 2.0281e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:17:44,986 [Process: 0] Synchronize training processes
2024-08-19 13:17:44,987 [Process: 0] Evaluating...
2024-08-19 13:17:45,413 [Process: 0] EPOCH 122:
2024-08-19 13:17:45,416 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0416, 0.0752, 0.8814,  ..., 0.9955, 0.0181, 0.0285],
         [0.0416, 0.6023, 0.0277,  ..., 0.0015, 0.0181, 0.0285],
         [0.8696, 0.0670, 0.0277,  ..., 0.0015, 0.9458, 0.9146],
         [0.0471, 0.2555, 0.0632,  ..., 0.0015, 0.0181, 0.0285]],
        [[0.0256, 0.0124, 0.9889,  ..., 0.9814, 0.0022, 0.0444],
         [0.0256, 0.0160, 0.0037,  ..., 0.0062, 0.0022, 0.0499],
         [0.9231, 0.0124, 0.0037,  ..., 0.0062, 0.0022, 0.8613],
         [0.0256, 0.9592, 0.0037,  ..., 0.0062, 0.9935, 0.0444]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6561e-01, 4.5618e-02, 3.0550e-02,  ..., 9.7686e-01,
          8.3898e-01, 2.7245e-02],
         [1.0577e-02, 4.5618e-02, 3.0550e-02,  ..., 9.6626e-03,
          6.6217e-02, 2.7245e-02],
         [1.3236e-02, 4.5618e-02, 3.0550e-02,  ..., 6.7395e-03,
          5.4934e-02, 2.7245e-02],
         [1.0577e-02, 8.6314e-01, 9.0835e-01,  ..., 6.7395e-03,
          3.9873e-02, 9.1827e-01]],
        [[9.9959e-01, 7.4628e-02, 2.5484e-02,  ..., 2.5867e-02,
          3.8910e-03, 2.0479e-02],
         [1.1545e-04, 1.4533e-01, 2.5484e-02,  ..., 2.5867e-02,
          3.8910e-03, 2.0479e-02],
         [1.7552e-04, 7.4628e-02, 2.5484e-02,  ..., 2.5867e-02,
          9.8833e-01, 9.3856e-01],
         [1.1545e-04, 7.0541e-01, 9.2355e-01,  ..., 9.2240e-01,
          3.8910e-03, 2.0479e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0461, 0.0707, 0.9898,  ..., 0.9928, 0.0290, 0.0125],
         [0.0461, 0.1171, 0.0031,  ..., 0.0024, 0.0290, 0.0125],
         [0.8585, 0.0606, 0.0031,  ..., 0.0024, 0.9129, 0.9624],
         [0.0493, 0.7516, 0.0040,  ..., 0.0024, 0.0290, 0.0125]],
        [[0.0421, 0.0162, 0.9950,  ..., 0.9734, 0.0046, 0.0425],
         [0.0421, 0.0162, 0.0022,  ..., 0.0089, 0.0046, 0.0568],
         [0.8602, 0.0162, 0.0014,  ..., 0.0089, 0.0046, 0.8582],
         [0.0555, 0.9514, 0.0014,  ..., 0.0089, 0.9862, 0.0425]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:17:46,450 [Process: 0] Synchronize training processes
2024-08-19 13:17:46,450 [Process: 0] Evaluating...
2024-08-19 13:17:46,452 [Process: 0] EPOCH 123:
2024-08-19 13:17:46,454 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:47,492 [Process: 0] Synchronize training processes
2024-08-19 13:17:47,492 [Process: 0] Evaluating...
2024-08-19 13:17:47,494 [Process: 0] EPOCH 124:
2024-08-19 13:17:47,496 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9736, 0.0361, 0.0331,  ..., 0.9365, 0.8786, 0.0735],
         [0.0084, 0.0343, 0.0331,  ..., 0.0217, 0.0704, 0.0735],
         [0.0095, 0.0343, 0.0331,  ..., 0.0227, 0.0255, 0.0979],
         [0.0084, 0.8954, 0.9008,  ..., 0.0190, 0.0255, 0.7550]],
        [[0.9885, 0.0282, 0.0142,  ..., 0.0248, 0.0222, 0.0354],
         [0.0031, 0.0282, 0.0142,  ..., 0.0248, 0.0222, 0.0354],
         [0.0052, 0.0282, 0.0142,  ..., 0.0248, 0.9333, 0.8938],
         [0.0031, 0.9155, 0.9575,  ..., 0.9257, 0.0222, 0.0354]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0281, 0.0036, 0.9680,  ..., 0.9958, 0.0255, 0.0175],
         [0.0281, 0.0036, 0.0106,  ..., 0.0014, 0.0255, 0.0175],
         [0.9158, 0.0036, 0.0106,  ..., 0.0014, 0.9235, 0.9475],
         [0.0281, 0.9891, 0.0108,  ..., 0.0014, 0.0255, 0.0175]],
        [[0.0579, 0.0362, 0.9937,  ..., 0.9930, 0.0023, 0.0363],
         [0.0579, 0.0781, 0.0021,  ..., 0.0023, 0.0023, 0.0504],
         [0.8184, 0.0362, 0.0021,  ..., 0.0023, 0.0023, 0.8771],
         [0.0658, 0.8495, 0.0021,  ..., 0.0023, 0.9932, 0.0363]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9711, 0.0391, 0.0155,  ..., 0.9919, 0.9457, 0.0172],
         [0.0115, 0.0391, 0.0155,  ..., 0.0038, 0.0177, 0.0172],
         [0.0087, 0.0391, 0.0155,  ..., 0.0022, 0.0189, 0.0172],
         [0.0087, 0.8828, 0.9536,  ..., 0.0022, 0.0177, 0.9483]],
        [[0.9771, 0.0408, 0.0285,  ..., 0.1015, 0.0035, 0.0113],
         [0.0054, 0.0408, 0.0285,  ..., 0.1424, 0.0035, 0.0113],
         [0.0090, 0.0408, 0.0285,  ..., 0.1628, 0.9895, 0.9661],
         [0.0085, 0.8776, 0.9145,  ..., 0.5932, 0.0035, 0.0113]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3465e-02, 2.6334e-03, 9.9711e-01,  ..., 9.8822e-01,
          1.7578e-02, 2.1928e-02],
         [2.3465e-02, 2.6334e-03, 9.6263e-04,  ..., 3.9280e-03,
          1.7578e-02, 2.1928e-02],
         [9.2960e-01, 2.6334e-03, 9.6263e-04,  ..., 3.9280e-03,
          9.4726e-01, 9.3422e-01],
         [2.3465e-02, 9.9210e-01, 9.6263e-04,  ..., 3.9280e-03,
          1.7578e-02, 2.1928e-02]],
        [[5.0209e-02, 6.3549e-03, 9.8289e-01,  ..., 9.8950e-01,
          6.2022e-03, 1.9761e-02],
         [5.0209e-02, 6.3549e-03, 7.7385e-03,  ..., 4.3030e-03,
          6.2022e-03, 1.9761e-02],
         [8.4687e-01, 6.3549e-03, 4.6843e-03,  ..., 3.0967e-03,
          6.2022e-03, 9.4072e-01],
         [5.2714e-02, 9.8094e-01, 4.6843e-03,  ..., 3.0967e-03,
          9.8139e-01, 1.9761e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:48,540 [Process: 0] Synchronize training processes
2024-08-19 13:17:48,540 [Process: 0] Evaluating...
2024-08-19 13:17:48,542 [Process: 0] EPOCH 125:
2024-08-19 13:17:48,544 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:49,581 [Process: 0] Synchronize training processes
2024-08-19 13:17:49,581 [Process: 0] Evaluating...
2024-08-19 13:17:49,583 [Process: 0] EPOCH 126:
2024-08-19 13:17:49,585 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9712, 0.0423, 0.0579,  ..., 0.9892, 0.9928, 0.0361],
         [0.0158, 0.0423, 0.0695,  ..., 0.0036, 0.0024, 0.0361],
         [0.0065, 0.0423, 0.0579,  ..., 0.0036, 0.0025, 0.0361],
         [0.0065, 0.8730, 0.8147,  ..., 0.0036, 0.0024, 0.8918]],
        [[0.9826, 0.0407, 0.0279,  ..., 0.0644, 0.0059, 0.0098],
         [0.0025, 0.0407, 0.0279,  ..., 0.0716, 0.0059, 0.0098],
         [0.0124, 0.0407, 0.0279,  ..., 0.0644, 0.9822, 0.9706],
         [0.0025, 0.8778, 0.9163,  ..., 0.7996, 0.0059, 0.0098]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0829, 0.0099, 0.9927,  ..., 0.9888, 0.0126, 0.0238],
         [0.0829, 0.0075, 0.0024,  ..., 0.0037, 0.0126, 0.0238],
         [0.6199, 0.0075, 0.0024,  ..., 0.0037, 0.9621, 0.9285],
         [0.2143, 0.9751, 0.0024,  ..., 0.0037, 0.0126, 0.0238]],
        [[0.0405, 0.0029, 0.7866,  ..., 0.9376, 0.0024, 0.0442],
         [0.0405, 0.0029, 0.1431,  ..., 0.0250, 0.0024, 0.0442],
         [0.8786, 0.0029, 0.0351,  ..., 0.0187, 0.0024, 0.8675],
         [0.0405, 0.9914, 0.0351,  ..., 0.0187, 0.9927, 0.0442]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9815e-01, 2.8020e-02, 4.4714e-02,  ..., 9.9359e-01,
          9.6832e-01, 4.2316e-02],
         [6.1796e-04, 2.8020e-02, 4.4714e-02,  ..., 2.1367e-03,
          1.8165e-02, 4.5639e-02],
         [6.1796e-04, 2.8020e-02, 5.6766e-02,  ..., 2.1367e-03,
          6.7597e-03, 4.2316e-02],
         [6.1796e-04, 9.1594e-01, 8.5381e-01,  ..., 2.1367e-03,
          6.7597e-03, 8.6973e-01]],
        [[9.6923e-01, 7.4820e-02, 2.7840e-02,  ..., 3.3524e-02,
          1.0924e-02, 9.8111e-03],
         [7.3245e-03, 7.1021e-02, 2.5396e-02,  ..., 3.3524e-02,
          1.0924e-02, 9.8111e-03],
         [1.5636e-02, 6.4165e-02, 2.5396e-02,  ..., 3.3524e-02,
          9.6723e-01, 9.7057e-01],
         [7.8107e-03, 7.8999e-01, 9.2137e-01,  ..., 8.9943e-01,
          1.0924e-02, 9.8111e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1141, 0.0148, 0.9872,  ..., 0.9922, 0.0313, 0.0126],
         [0.1483, 0.0203, 0.0038,  ..., 0.0026, 0.0313, 0.0126],
         [0.4789, 0.0148, 0.0038,  ..., 0.0026, 0.9061, 0.9622],
         [0.2586, 0.9501, 0.0052,  ..., 0.0026, 0.0313, 0.0126]],
        [[0.0564, 0.0018, 0.9678,  ..., 0.9043, 0.0118, 0.0242],
         [0.0564, 0.0018, 0.0107,  ..., 0.0277, 0.0118, 0.0242],
         [0.8209, 0.0018, 0.0107,  ..., 0.0277, 0.0118, 0.9273],
         [0.0663, 0.9945, 0.0107,  ..., 0.0404, 0.9646, 0.0242]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:50,624 [Process: 0] Synchronize training processes
2024-08-19 13:17:50,624 [Process: 0] Evaluating...
2024-08-19 13:17:50,626 [Process: 0] EPOCH 127:
2024-08-19 13:17:50,628 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:51,668 [Process: 0] Synchronize training processes
2024-08-19 13:17:51,669 [Process: 0] Evaluating...
2024-08-19 13:17:51,670 [Process: 0] EPOCH 128:
2024-08-19 13:17:51,672 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7814e-01, 4.1715e-02, 1.9025e-02,  ..., 9.4135e-01,
          1.7711e-01, 1.6511e-02],
         [7.8093e-03, 4.4700e-02, 1.9025e-02,  ..., 1.9497e-02,
          2.3251e-01, 1.6511e-02],
         [7.0249e-03, 5.3461e-02, 1.9025e-02,  ..., 1.9656e-02,
          1.0152e-01, 1.6511e-02],
         [7.0249e-03, 8.6012e-01, 9.4292e-01,  ..., 1.9497e-02,
          4.8886e-01, 9.5047e-01]],
        [[9.9723e-01, 3.1450e-02, 1.7173e-02,  ..., 1.5543e-02,
          7.1870e-03, 4.7087e-03],
         [5.0107e-04, 3.6779e-02, 1.7173e-02,  ..., 1.5543e-02,
          7.1870e-03, 4.7087e-03],
         [1.7706e-03, 3.1450e-02, 1.7173e-02,  ..., 1.5543e-02,
          9.7844e-01, 9.8587e-01],
         [5.0107e-04, 9.0032e-01, 9.4848e-01,  ..., 9.5337e-01,
          7.1870e-03, 4.7087e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1258e-02, 1.7984e-02, 9.4579e-01,  ..., 8.9594e-01,
          1.9171e-02, 6.7973e-02],
         [8.1258e-02, 2.2204e-02, 1.3275e-02,  ..., 1.9004e-02,
          1.9171e-02, 6.7973e-02],
         [1.8032e-01, 1.5549e-02, 1.3275e-02,  ..., 1.9004e-02,
          9.4249e-01, 7.8548e-01],
         [6.5716e-01, 9.4426e-01, 2.7655e-02,  ..., 6.6047e-02,
          1.9171e-02, 7.8573e-02]],
        [[4.7545e-02, 4.1290e-03, 9.6755e-01,  ..., 9.8795e-01,
          4.6489e-04, 2.7535e-02],
         [5.3079e-02, 4.1290e-03, 9.7260e-03,  ..., 4.0167e-03,
          4.6489e-04, 2.7535e-02],
         [8.5183e-01, 4.1290e-03, 9.7260e-03,  ..., 4.0167e-03,
          4.6489e-04, 9.1740e-01],
         [4.7545e-02, 9.8761e-01, 1.2997e-02,  ..., 4.0167e-03,
          9.9861e-01, 2.7535e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9869, 0.0341, 0.0432,  ..., 0.9965, 0.9921, 0.0571],
         [0.0044, 0.0341, 0.0551,  ..., 0.0012, 0.0036, 0.1197],
         [0.0044, 0.0341, 0.0494,  ..., 0.0012, 0.0022, 0.0579],
         [0.0044, 0.8976, 0.8523,  ..., 0.0012, 0.0022, 0.7653]],
        [[0.8074, 0.0375, 0.0058,  ..., 0.0327, 0.0035, 0.0022],
         [0.0260, 0.0520, 0.0058,  ..., 0.0327, 0.0035, 0.0022],
         [0.1405, 0.0375, 0.0058,  ..., 0.0327, 0.9896, 0.9935],
         [0.0260, 0.8730, 0.9825,  ..., 0.9018, 0.0035, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0813, 0.0222, 0.9668,  ..., 0.9255, 0.0362, 0.0137],
         [0.0838, 0.0209, 0.0068,  ..., 0.0200, 0.0362, 0.0137],
         [0.7071, 0.0209, 0.0068,  ..., 0.0200, 0.8914, 0.9589],
         [0.1278, 0.9359, 0.0197,  ..., 0.0345, 0.0362, 0.0137]],
        [[0.0379, 0.0049, 0.8816,  ..., 0.9726, 0.0025, 0.0250],
         [0.0379, 0.0049, 0.0847,  ..., 0.0091, 0.0025, 0.0250],
         [0.8863, 0.0049, 0.0168,  ..., 0.0091, 0.0025, 0.9251],
         [0.0379, 0.9854, 0.0168,  ..., 0.0091, 0.9925, 0.0250]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:52,736 [Process: 0] Synchronize training processes
2024-08-19 13:17:52,737 [Process: 0] Evaluating...
2024-08-19 13:17:52,738 [Process: 0] EPOCH 129:
2024-08-19 13:17:52,740 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:53,780 [Process: 0] Synchronize training processes
2024-08-19 13:17:53,780 [Process: 0] Evaluating...
2024-08-19 13:17:53,782 [Process: 0] EPOCH 130:
2024-08-19 13:17:53,783 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9912, 0.0272, 0.0308,  ..., 0.9808, 0.9960, 0.0242],
         [0.0039, 0.0272, 0.0308,  ..., 0.0061, 0.0013, 0.0242],
         [0.0025, 0.0272, 0.0308,  ..., 0.0069, 0.0013, 0.0242],
         [0.0025, 0.9184, 0.9076,  ..., 0.0061, 0.0013, 0.9274]],
        [[0.3328, 0.0086, 0.0145,  ..., 0.0837, 0.0027, 0.0135],
         [0.0495, 0.0086, 0.0134,  ..., 0.1308, 0.0027, 0.0135],
         [0.5593, 0.0086, 0.0134,  ..., 0.0932, 0.9919, 0.9594],
         [0.0585, 0.9741, 0.9587,  ..., 0.6924, 0.0027, 0.0135]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4935e-02, 4.4222e-03, 9.9793e-01,  ..., 9.4547e-01,
          2.8015e-02, 2.2439e-02],
         [1.4935e-02, 4.4222e-03, 6.9129e-04,  ..., 1.4718e-02,
          2.8015e-02, 2.2439e-02],
         [9.5520e-01, 4.4222e-03, 6.9129e-04,  ..., 1.4718e-02,
          9.1595e-01, 9.3268e-01],
         [1.4935e-02, 9.8673e-01, 6.9129e-04,  ..., 2.5091e-02,
          2.8015e-02, 2.2439e-02]],
        [[2.1269e-02, 1.5402e-03, 9.7583e-01,  ..., 9.9225e-01,
          1.4616e-03, 4.1175e-02],
         [2.1269e-02, 1.5402e-03, 8.0552e-03,  ..., 2.5824e-03,
          1.4616e-03, 4.1175e-02],
         [9.3619e-01, 1.5402e-03, 8.0552e-03,  ..., 2.5824e-03,
          1.4616e-03, 8.7647e-01],
         [2.1269e-02, 9.9538e-01, 8.0552e-03,  ..., 2.5824e-03,
          9.9562e-01, 4.1175e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9945, 0.0574, 0.0749,  ..., 0.9947, 0.9655, 0.0291],
         [0.0028, 0.0603, 0.1297,  ..., 0.0019, 0.0106, 0.0291],
         [0.0014, 0.0927, 0.0845,  ..., 0.0017, 0.0133, 0.0291],
         [0.0014, 0.7897, 0.7109,  ..., 0.0017, 0.0106, 0.9128]],
        [[0.9426, 0.0546, 0.0165,  ..., 0.0854, 0.0104, 0.0178],
         [0.0100, 0.0546, 0.0165,  ..., 0.0854, 0.0104, 0.0178],
         [0.0312, 0.0579, 0.0165,  ..., 0.1108, 0.9687, 0.9466],
         [0.0163, 0.8329, 0.9506,  ..., 0.7184, 0.0104, 0.0178]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6315e-02, 1.0070e-02, 9.4828e-01,  ..., 9.9641e-01,
          2.8863e-02, 2.1029e-02],
         [3.6315e-02, 1.0070e-02, 1.2859e-02,  ..., 1.1952e-03,
          2.8863e-02, 2.1029e-02],
         [8.9106e-01, 1.0070e-02, 1.2859e-02,  ..., 1.1952e-03,
          9.1341e-01, 9.3691e-01],
         [3.6315e-02, 9.6979e-01, 2.6007e-02,  ..., 1.1952e-03,
          2.8863e-02, 2.1029e-02]],
        [[3.2259e-02, 2.0682e-02, 9.8577e-01,  ..., 9.9013e-01,
          3.1718e-04, 1.4873e-02],
         [3.2259e-02, 2.8858e-02, 4.7434e-03,  ..., 3.2896e-03,
          3.1718e-04, 1.4873e-02],
         [9.0322e-01, 2.0682e-02, 4.7434e-03,  ..., 3.2896e-03,
          3.1718e-04, 9.5538e-01],
         [3.2259e-02, 9.2978e-01, 4.7434e-03,  ..., 3.2896e-03,
          9.9905e-01, 1.4873e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:17:54,823 [Process: 0] Synchronize training processes
2024-08-19 13:17:54,823 [Process: 0] Evaluating...
2024-08-19 13:17:54,825 [Process: 0] EPOCH 131:
2024-08-19 13:17:54,827 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:55,866 [Process: 0] Synchronize training processes
2024-08-19 13:17:55,866 [Process: 0] Evaluating...
2024-08-19 13:17:56,291 [Process: 0] EPOCH 132:
2024-08-19 13:17:56,294 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9791, 0.0165, 0.0549,  ..., 0.9815, 0.9170, 0.0311],
         [0.0102, 0.0165, 0.0549,  ..., 0.0089, 0.0513, 0.0311],
         [0.0054, 0.0165, 0.0549,  ..., 0.0048, 0.0159, 0.0311],
         [0.0054, 0.9504, 0.8354,  ..., 0.0048, 0.0159, 0.9068]],
        [[0.9619, 0.0295, 0.0072,  ..., 0.0284, 0.0046, 0.0249],
         [0.0079, 0.0295, 0.0072,  ..., 0.0284, 0.0046, 0.0249],
         [0.0222, 0.0295, 0.0072,  ..., 0.0284, 0.9863, 0.9253],
         [0.0079, 0.9115, 0.9785,  ..., 0.9147, 0.0046, 0.0249]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9039e-02, 5.1319e-03, 9.9517e-01,  ..., 9.9326e-01,
          1.7434e-02, 2.0499e-02],
         [9.9039e-02, 5.1319e-03, 1.4708e-03,  ..., 2.2464e-03,
          1.7434e-02, 2.0499e-02],
         [5.7671e-01, 5.1319e-03, 1.4708e-03,  ..., 2.2464e-03,
          9.4770e-01, 9.3850e-01],
         [2.2521e-01, 9.8460e-01, 1.8912e-03,  ..., 2.2464e-03,
          1.7434e-02, 2.0499e-02]],
        [[5.2559e-02, 6.5929e-03, 9.9711e-01,  ..., 9.9453e-01,
          6.0486e-04, 2.1711e-02],
         [5.2559e-02, 6.5929e-03, 9.6220e-04,  ..., 1.8220e-03,
          6.0486e-04, 2.1711e-02],
         [8.4232e-01, 6.5929e-03, 9.6220e-04,  ..., 1.8220e-03,
          6.0486e-04, 9.3487e-01],
         [5.2559e-02, 9.8022e-01, 9.6220e-04,  ..., 1.8220e-03,
          9.9819e-01, 2.1711e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7459e-01, 3.0547e-02, 3.2832e-02,  ..., 9.9178e-01,
          7.7582e-01, 4.5445e-02],
         [1.0198e-02, 3.0547e-02, 3.2832e-02,  ..., 3.6331e-03,
          1.4914e-01, 4.5445e-02],
         [7.6039e-03, 3.0547e-02, 3.2832e-02,  ..., 2.2938e-03,
          3.9165e-02, 4.5445e-02],
         [7.6039e-03, 9.0836e-01, 9.0150e-01,  ..., 2.2938e-03,
          3.5873e-02, 8.6366e-01]],
        [[9.0129e-01, 2.3547e-02, 2.4172e-02,  ..., 1.9888e-02,
          9.9283e-04, 6.8925e-02],
         [1.5225e-02, 2.3547e-02, 1.8588e-02,  ..., 1.9888e-02,
          9.9283e-04, 6.8925e-02],
         [6.8264e-02, 2.3547e-02, 1.8588e-02,  ..., 1.9888e-02,
          9.9702e-01, 7.4618e-01],
         [1.5225e-02, 9.2936e-01, 9.3865e-01,  ..., 9.4034e-01,
          9.9283e-04, 1.1597e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:17:57,329 [Process: 0] Synchronize training processes
2024-08-19 13:17:57,330 [Process: 0] Evaluating...
2024-08-19 13:17:57,332 [Process: 0] EPOCH 133:
2024-08-19 13:17:57,333 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1914e-02, 3.4525e-02, 9.8371e-01,  ..., 9.9558e-01,
          2.4112e-02, 1.4128e-02],
         [3.1914e-02, 6.0095e-02, 4.6738e-03,  ..., 1.4724e-03,
          2.4112e-02, 1.4128e-02],
         [9.0426e-01, 3.4525e-02, 4.6738e-03,  ..., 1.4724e-03,
          9.2767e-01, 9.5761e-01],
         [3.1914e-02, 8.7086e-01, 6.9425e-03,  ..., 1.4724e-03,
          2.4112e-02, 1.4128e-02]],
        [[2.8354e-02, 8.4551e-03, 9.6406e-01,  ..., 9.9378e-01,
          8.4320e-04, 2.3365e-02],
         [2.8354e-02, 8.4551e-03, 1.1835e-02,  ..., 2.0748e-03,
          8.4320e-04, 2.3365e-02],
         [9.1494e-01, 8.4551e-03, 1.1835e-02,  ..., 2.0748e-03,
          8.4320e-04, 9.2991e-01],
         [2.8354e-02, 9.7463e-01, 1.2269e-02,  ..., 2.0748e-03,
          9.9747e-01, 2.3365e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8614e-01, 3.2365e-02, 4.8510e-02,  ..., 9.9687e-01,
          8.7166e-01, 2.6023e-02],
         [5.5640e-03, 3.2365e-02, 4.8510e-02,  ..., 1.7752e-03,
          9.5300e-02, 2.6023e-02],
         [4.1484e-03, 3.2365e-02, 6.6215e-02,  ..., 6.7945e-04,
          1.6522e-02, 2.6023e-02],
         [4.1484e-03, 9.0290e-01, 8.3676e-01,  ..., 6.7945e-04,
          1.6522e-02, 9.2193e-01]],
        [[9.5050e-01, 6.1355e-02, 1.6799e-02,  ..., 3.5413e-02,
          4.9820e-03, 1.4661e-02],
         [1.0175e-02, 7.5831e-02, 1.6799e-02,  ..., 3.5413e-02,
          4.9820e-03, 1.4661e-02],
         [2.9151e-02, 6.1355e-02, 1.6799e-02,  ..., 3.5413e-02,
          9.8505e-01, 9.5602e-01],
         [1.0175e-02, 8.0146e-01, 9.4960e-01,  ..., 8.9376e-01,
          4.9820e-03, 1.4661e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1013, 0.0258, 0.9936,  ..., 0.9791, 0.0167, 0.0376],
         [0.1256, 0.0363, 0.0021,  ..., 0.0070, 0.0167, 0.0376],
         [0.4854, 0.0258, 0.0021,  ..., 0.0070, 0.9499, 0.8871],
         [0.2877, 0.9120, 0.0021,  ..., 0.0070, 0.0167, 0.0376]],
        [[0.0429, 0.0316, 0.9881,  ..., 0.9801, 0.0101, 0.0209],
         [0.0429, 0.0249, 0.0040,  ..., 0.0066, 0.0101, 0.0209],
         [0.8714, 0.0249, 0.0040,  ..., 0.0066, 0.0101, 0.9374],
         [0.0429, 0.9187, 0.0040,  ..., 0.0066, 0.9697, 0.0209]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9863, 0.0228, 0.0313,  ..., 0.9818, 0.9477, 0.0207],
         [0.0050, 0.0228, 0.0313,  ..., 0.0068, 0.0205, 0.0207],
         [0.0046, 0.0228, 0.0352,  ..., 0.0062, 0.0193, 0.0207],
         [0.0041, 0.9315, 0.9022,  ..., 0.0051, 0.0125, 0.9378]],
        [[0.9887, 0.0205, 0.0232,  ..., 0.0428, 0.0032, 0.0121],
         [0.0024, 0.0205, 0.0232,  ..., 0.0428, 0.0032, 0.0121],
         [0.0065, 0.0205, 0.0232,  ..., 0.0431, 0.9904, 0.9638],
         [0.0024, 0.9386, 0.9305,  ..., 0.8713, 0.0032, 0.0121]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:17:58,374 [Process: 0] Synchronize training processes
2024-08-19 13:17:58,374 [Process: 0] Evaluating...
2024-08-19 13:17:58,376 [Process: 0] EPOCH 134:
2024-08-19 13:17:58,378 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:17:59,418 [Process: 0] Synchronize training processes
2024-08-19 13:17:59,418 [Process: 0] Evaluating...
2024-08-19 13:17:59,420 [Process: 0] EPOCH 135:
2024-08-19 13:17:59,422 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1704e-01, 2.7952e-02, 8.7734e-01,  ..., 9.9901e-01,
          3.6192e-02, 3.7234e-02],
         [1.6147e-01, 4.2590e-02, 5.1092e-02,  ..., 3.2840e-04,
          3.6192e-02, 3.7234e-02],
         [2.9191e-01, 2.7952e-02, 3.5784e-02,  ..., 3.2840e-04,
          8.9142e-01, 8.8830e-01],
         [4.2957e-01, 9.0151e-01, 3.5784e-02,  ..., 3.2840e-04,
          3.6192e-02, 3.7234e-02]],
        [[2.5710e-02, 2.3342e-03, 9.8829e-01,  ..., 9.9570e-01,
          2.8192e-03, 1.5770e-02],
         [2.5710e-02, 2.3342e-03, 3.9024e-03,  ..., 1.4336e-03,
          2.8192e-03, 1.5770e-02],
         [9.2287e-01, 2.3342e-03, 3.9024e-03,  ..., 1.4336e-03,
          2.8192e-03, 9.5269e-01],
         [2.5710e-02, 9.9300e-01, 3.9024e-03,  ..., 1.4336e-03,
          9.9154e-01, 1.5770e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9810, 0.0454, 0.0263,  ..., 0.8590, 0.9556, 0.0139],
         [0.0063, 0.0465, 0.0263,  ..., 0.0871, 0.0229, 0.0139],
         [0.0063, 0.0454, 0.0263,  ..., 0.0273, 0.0108, 0.0139],
         [0.0063, 0.8626, 0.9210,  ..., 0.0267, 0.0108, 0.9584]],
        [[0.9758, 0.0608, 0.0464,  ..., 0.0564, 0.0046, 0.0038],
         [0.0049, 0.0755, 0.0464,  ..., 0.0564, 0.0046, 0.0038],
         [0.0069, 0.0608, 0.0464,  ..., 0.0580, 0.9861, 0.9887],
         [0.0124, 0.8029, 0.8607,  ..., 0.8291, 0.0046, 0.0038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.6905e-02, 6.8234e-03, 9.9809e-01,  ..., 9.9116e-01,
          2.5164e-02, 3.2602e-02],
         [4.6905e-02, 6.8234e-03, 6.3564e-04,  ..., 2.9475e-03,
          2.5164e-02, 3.2602e-02],
         [8.5225e-01, 6.8234e-03, 6.3564e-04,  ..., 2.9475e-03,
          9.2451e-01, 9.0219e-01],
         [5.3940e-02, 9.7953e-01, 6.3564e-04,  ..., 2.9475e-03,
          2.5164e-02, 3.2602e-02]],
        [[3.5143e-02, 5.4747e-03, 9.4148e-01,  ..., 9.6553e-01,
          3.7669e-03, 1.9718e-02],
         [3.5661e-02, 5.4747e-03, 1.9505e-02,  ..., 1.3242e-02,
          3.7669e-03, 1.9718e-02],
         [8.9405e-01, 5.4747e-03, 1.9505e-02,  ..., 1.0613e-02,
          3.7669e-03, 9.4085e-01],
         [3.5143e-02, 9.8358e-01, 1.9505e-02,  ..., 1.0613e-02,
          9.8870e-01, 1.9718e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9449, 0.0265, 0.0210,  ..., 0.9800, 0.9893, 0.0093],
         [0.0338, 0.0265, 0.0210,  ..., 0.0067, 0.0041, 0.0093],
         [0.0107, 0.0265, 0.0210,  ..., 0.0067, 0.0033, 0.0093],
         [0.0107, 0.9205, 0.9371,  ..., 0.0067, 0.0033, 0.9720]],
        [[0.9942, 0.0626, 0.0208,  ..., 0.0694, 0.0049, 0.0199],
         [0.0013, 0.0762, 0.0208,  ..., 0.0694, 0.0049, 0.0199],
         [0.0016, 0.0626, 0.0208,  ..., 0.0886, 0.9854, 0.9404],
         [0.0029, 0.7986, 0.9375,  ..., 0.7726, 0.0049, 0.0199]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:18:00,464 [Process: 0] Synchronize training processes
2024-08-19 13:18:00,465 [Process: 0] Evaluating...
2024-08-19 13:18:00,467 [Process: 0] EPOCH 136:
2024-08-19 13:18:00,468 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:01,508 [Process: 0] Synchronize training processes
2024-08-19 13:18:01,508 [Process: 0] Evaluating...
2024-08-19 13:18:01,510 [Process: 0] EPOCH 137:
2024-08-19 13:18:01,512 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2677e-02, 6.0754e-03, 9.8344e-01,  ..., 9.2799e-01,
          2.3095e-02, 1.7615e-02],
         [2.2677e-02, 6.0754e-03, 5.5487e-03,  ..., 1.9037e-02,
          2.3095e-02, 1.7615e-02],
         [9.3197e-01, 6.0754e-03, 5.5079e-03,  ..., 1.9037e-02,
          9.3072e-01, 9.4715e-01],
         [2.2677e-02, 9.8177e-01, 5.5079e-03,  ..., 3.3936e-02,
          2.3095e-02, 1.7615e-02]],
        [[5.0380e-02, 8.1606e-04, 9.5960e-01,  ..., 9.1693e-01,
          5.3181e-04, 1.2741e-02],
         [5.0380e-02, 8.1606e-04, 1.3108e-02,  ..., 2.5857e-02,
          5.3181e-04, 1.2741e-02],
         [8.3861e-01, 8.1606e-04, 1.3108e-02,  ..., 2.5857e-02,
          5.3181e-04, 9.6178e-01],
         [6.0629e-02, 9.9755e-01, 1.4185e-02,  ..., 3.1357e-02,
          9.9840e-01, 1.2741e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9856, 0.0112, 0.0318,  ..., 0.9942, 0.7291, 0.0241],
         [0.0046, 0.0112, 0.0318,  ..., 0.0022, 0.1340, 0.0229],
         [0.0052, 0.0112, 0.0365,  ..., 0.0018, 0.0782, 0.0229],
         [0.0046, 0.9664, 0.8999,  ..., 0.0018, 0.0587, 0.9301]],
        [[0.9243, 0.0452, 0.0401,  ..., 0.0584, 0.0049, 0.0179],
         [0.0115, 0.0452, 0.0401,  ..., 0.0584, 0.0049, 0.0179],
         [0.0527, 0.0452, 0.0401,  ..., 0.0584, 0.9852, 0.9463],
         [0.0115, 0.8645, 0.8797,  ..., 0.8247, 0.0049, 0.0179]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1092e-02, 6.4719e-03, 9.9789e-01,  ..., 9.9664e-01,
          3.3806e-02, 2.1995e-02],
         [2.1092e-02, 6.4719e-03, 7.0367e-04,  ..., 1.1207e-03,
          3.3806e-02, 2.1995e-02],
         [9.3672e-01, 6.4719e-03, 7.0367e-04,  ..., 1.1207e-03,
          8.9858e-01, 9.3401e-01],
         [2.1092e-02, 9.8058e-01, 7.0367e-04,  ..., 1.1207e-03,
          3.3806e-02, 2.1995e-02]],
        [[5.8704e-02, 2.6210e-03, 9.8577e-01,  ..., 9.9337e-01,
          4.3568e-03, 1.6323e-02],
         [6.9720e-02, 2.6210e-03, 4.7431e-03,  ..., 2.2091e-03,
          4.3568e-03, 1.6323e-02],
         [8.0279e-01, 2.6210e-03, 4.7431e-03,  ..., 2.2091e-03,
          4.3568e-03, 9.5103e-01],
         [6.8783e-02, 9.9214e-01, 4.7431e-03,  ..., 2.2091e-03,
          9.8693e-01, 1.6323e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:18:02,553 [Process: 0] Synchronize training processes
2024-08-19 13:18:02,554 [Process: 0] Evaluating...
2024-08-19 13:18:02,556 [Process: 0] EPOCH 138:
2024-08-19 13:18:02,557 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:03,600 [Process: 0] Synchronize training processes
2024-08-19 13:18:03,600 [Process: 0] Evaluating...
2024-08-19 13:18:03,602 [Process: 0] EPOCH 139:
2024-08-19 13:18:03,604 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9938, 0.0279, 0.0140,  ..., 0.9814, 0.9769, 0.0566],
         [0.0021, 0.0279, 0.0140,  ..., 0.0078, 0.0077, 0.0566],
         [0.0021, 0.0279, 0.0140,  ..., 0.0054, 0.0077, 0.0819],
         [0.0021, 0.9163, 0.9579,  ..., 0.0054, 0.0077, 0.8050]],
        [[0.9952, 0.0467, 0.0374,  ..., 0.0480, 0.0020, 0.1004],
         [0.0012, 0.0490, 0.0607,  ..., 0.0646, 0.0020, 0.1152],
         [0.0024, 0.0467, 0.0374,  ..., 0.0480, 0.9940, 0.5444],
         [0.0012, 0.8576, 0.8646,  ..., 0.8395, 0.0020, 0.2400]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2678e-02, 6.3674e-04, 9.7857e-01,  ..., 9.9327e-01,
          3.4677e-02, 8.6945e-03],
         [7.9411e-02, 6.3674e-04, 7.1436e-03,  ..., 2.0115e-03,
          3.4677e-02, 8.6945e-03],
         [8.1383e-01, 6.3674e-04, 7.1436e-03,  ..., 2.0115e-03,
          8.9597e-01, 9.7392e-01],
         [5.4080e-02, 9.9809e-01, 7.1436e-03,  ..., 2.7034e-03,
          3.4677e-02, 8.6945e-03]],
        [[5.8339e-02, 4.8350e-03, 9.4298e-01,  ..., 9.5141e-01,
          3.7544e-03, 1.6342e-02],
         [6.3447e-02, 4.8350e-03, 1.8804e-02,  ..., 1.6158e-02,
          3.7544e-03, 1.6342e-02],
         [8.1657e-01, 4.8350e-03, 1.8804e-02,  ..., 1.6158e-02,
          3.7544e-03, 9.5097e-01],
         [6.1643e-02, 9.8549e-01, 1.9414e-02,  ..., 1.6273e-02,
          9.8874e-01, 1.6342e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7760, 0.0746, 0.0368,  ..., 0.9956, 0.9927, 0.0148],
         [0.1289, 0.1330, 0.0368,  ..., 0.0019, 0.0024, 0.0148],
         [0.0475, 0.0746, 0.0548,  ..., 0.0013, 0.0024, 0.0148],
         [0.0475, 0.7179, 0.8716,  ..., 0.0013, 0.0024, 0.9557]],
        [[0.9933, 0.0099, 0.0118,  ..., 0.1083, 0.0053, 0.0145],
         [0.0019, 0.0099, 0.0118,  ..., 0.3061, 0.0053, 0.0145],
         [0.0028, 0.0099, 0.0119,  ..., 0.2112, 0.9842, 0.9565],
         [0.0019, 0.9702, 0.9644,  ..., 0.3745, 0.0053, 0.0145]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:18:04,643 [Process: 0] Synchronize training processes
2024-08-19 13:18:04,644 [Process: 0] Evaluating...
2024-08-19 13:18:04,645 [Process: 0] EPOCH 140:
2024-08-19 13:18:04,647 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:05,692 [Process: 0] Synchronize training processes
2024-08-19 13:18:05,692 [Process: 0] Evaluating...
2024-08-19 13:18:05,694 [Process: 0] EPOCH 141:
2024-08-19 13:18:05,696 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4656e-02, 4.7421e-03, 9.9008e-01,  ..., 9.2093e-01,
          1.5747e-02, 5.5318e-03],
         [9.4656e-02, 4.7421e-03, 3.3075e-03,  ..., 1.8729e-02,
          1.5747e-02, 5.5318e-03],
         [2.5893e-01, 4.7421e-03, 3.3075e-03,  ..., 1.8729e-02,
          9.5276e-01, 9.8340e-01],
         [5.5176e-01, 9.8577e-01, 3.3075e-03,  ..., 4.1611e-02,
          1.5747e-02, 5.5318e-03]],
        [[4.5796e-02, 4.8792e-03, 9.9224e-01,  ..., 9.9833e-01,
          4.1916e-03, 3.1896e-02],
         [4.5796e-02, 4.8792e-03, 2.5861e-03,  ..., 5.5542e-04,
          4.1916e-03, 3.1896e-02],
         [8.5301e-01, 4.8792e-03, 2.5861e-03,  ..., 5.5542e-04,
          4.1916e-03, 9.0431e-01],
         [5.5400e-02, 9.8536e-01, 2.5861e-03,  ..., 5.5542e-04,
          9.8743e-01, 3.1896e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9325e-01, 2.5899e-02, 1.9417e-02,  ..., 9.9637e-01,
          9.5121e-01, 1.0577e-02],
         [2.2503e-03, 2.5899e-02, 1.9417e-02,  ..., 1.2103e-03,
          1.6263e-02, 1.0577e-02],
         [2.2503e-03, 2.6842e-02, 1.9417e-02,  ..., 1.2103e-03,
          1.6263e-02, 1.0577e-02],
         [2.2503e-03, 9.2136e-01, 9.4175e-01,  ..., 1.2103e-03,
          1.6263e-02, 9.6827e-01]],
        [[9.9999e-01, 2.0952e-02, 9.2825e-03,  ..., 7.9104e-02,
          1.1161e-03, 1.5139e-02],
         [4.1566e-06, 2.0952e-02, 9.2825e-03,  ..., 7.9104e-02,
          1.1161e-03, 1.5139e-02],
         [4.1566e-06, 2.0952e-02, 9.2825e-03,  ..., 1.2229e-01,
          9.9665e-01, 9.5458e-01],
         [4.1566e-06, 9.3715e-01, 9.7215e-01,  ..., 7.1951e-01,
          1.1161e-03, 1.5139e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0401, 0.0080, 0.9949,  ..., 0.9953, 0.0158, 0.0129],
         [0.0401, 0.0073, 0.0017,  ..., 0.0015, 0.0158, 0.0131],
         [0.8768, 0.0073, 0.0017,  ..., 0.0015, 0.9525, 0.9610],
         [0.0429, 0.9773, 0.0017,  ..., 0.0016, 0.0158, 0.0129]],
        [[0.0635, 0.0020, 0.9781,  ..., 0.9599, 0.0060, 0.0395],
         [0.0804, 0.0020, 0.0068,  ..., 0.0143, 0.0059, 0.0461],
         [0.7814, 0.0020, 0.0068,  ..., 0.0129, 0.0059, 0.8748],
         [0.0747, 0.9940, 0.0084,  ..., 0.0129, 0.9821, 0.0395]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:18:06,758 [Process: 0] Synchronize training processes
2024-08-19 13:18:06,758 [Process: 0] Evaluating...
2024-08-19 13:18:07,184 [Process: 0] EPOCH 142:
2024-08-19 13:18:07,187 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:08,220 [Process: 0] Synchronize training processes
2024-08-19 13:18:08,220 [Process: 0] Evaluating...
2024-08-19 13:18:08,222 [Process: 0] EPOCH 143:
2024-08-19 13:18:08,224 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4988e-01, 1.6941e-02, 4.5765e-02,  ..., 9.8298e-01,
          9.8093e-01, 1.2556e-02],
         [1.4462e-02, 1.6941e-02, 4.5765e-02,  ..., 5.3121e-03,
          6.3571e-03, 1.2556e-02],
         [2.1197e-02, 1.6941e-02, 4.6594e-02,  ..., 6.3953e-03,
          6.3571e-03, 1.2556e-02],
         [1.4462e-02, 9.4918e-01, 8.6188e-01,  ..., 5.3121e-03,
          6.3571e-03, 9.6233e-01]],
        [[9.9989e-01, 4.2895e-02, 7.0909e-02,  ..., 7.0615e-02,
          6.4745e-03, 2.7560e-02],
         [3.2650e-05, 4.2895e-02, 1.0722e-01,  ..., 7.0615e-02,
          6.4745e-03, 2.7560e-02],
         [4.3369e-05, 4.2895e-02, 7.0909e-02,  ..., 9.0626e-02,
          9.8058e-01, 9.1732e-01],
         [3.2650e-05, 8.7132e-01, 7.5096e-01,  ..., 7.6814e-01,
          6.4745e-03, 2.7560e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1018, 0.0137, 0.9936,  ..., 0.9647, 0.0095, 0.0089],
         [0.1099, 0.0137, 0.0021,  ..., 0.0116, 0.0095, 0.0089],
         [0.5002, 0.0137, 0.0021,  ..., 0.0116, 0.9714, 0.9733],
         [0.2880, 0.9588, 0.0021,  ..., 0.0120, 0.0095, 0.0089]],
        [[0.0629, 0.0204, 0.9884,  ..., 0.9964, 0.0023, 0.0184],
         [0.0648, 0.0204, 0.0039,  ..., 0.0012, 0.0023, 0.0184],
         [0.8018, 0.0204, 0.0039,  ..., 0.0012, 0.0023, 0.9447],
         [0.0705, 0.9388, 0.0039,  ..., 0.0012, 0.9932, 0.0184]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9239e-01, 4.0337e-03, 1.5379e-02,  ..., 9.8912e-01,
          9.6993e-01, 4.2011e-02],
         [2.5356e-03, 4.0337e-03, 1.5379e-02,  ..., 4.0232e-03,
          9.0917e-03, 4.2011e-02],
         [2.5356e-03, 4.0337e-03, 1.5379e-02,  ..., 3.4283e-03,
          1.1889e-02, 4.2011e-02],
         [2.5356e-03, 9.8790e-01, 9.5386e-01,  ..., 3.4283e-03,
          9.0917e-03, 8.7397e-01]],
        [[9.9858e-01, 7.6661e-02, 1.1841e-02,  ..., 8.9816e-02,
          2.7183e-03, 5.2127e-03],
         [3.6918e-04, 7.6661e-02, 1.1841e-02,  ..., 8.9816e-02,
          2.7183e-03, 5.2127e-03],
         [6.8378e-04, 9.3166e-02, 1.1841e-02,  ..., 1.5689e-01,
          9.9185e-01, 9.8436e-01],
         [3.6918e-04, 7.5351e-01, 9.6448e-01,  ..., 6.6348e-01,
          2.7183e-03, 5.2127e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7260e-02, 1.0129e-02, 9.7551e-01,  ..., 9.8116e-01,
          2.0903e-02, 2.1699e-02],
         [1.0120e-01, 1.0129e-02, 5.8524e-03,  ..., 4.4551e-03,
          2.0903e-02, 2.1699e-02],
         [5.4945e-01, 1.0129e-02, 5.8524e-03,  ..., 4.4551e-03,
          9.3729e-01, 9.3490e-01],
         [2.5209e-01, 9.6961e-01, 1.2788e-02,  ..., 9.9283e-03,
          2.0903e-02, 2.1699e-02]],
        [[2.4786e-02, 7.7613e-03, 9.8927e-01,  ..., 9.7987e-01,
          1.0835e-04, 2.4137e-02],
         [2.4786e-02, 7.7613e-03, 4.3523e-03,  ..., 6.4281e-03,
          1.0835e-04, 2.4137e-02],
         [9.2564e-01, 7.7613e-03, 3.1891e-03,  ..., 6.4281e-03,
          1.0835e-04, 9.2759e-01],
         [2.4786e-02, 9.7672e-01, 3.1891e-03,  ..., 7.2703e-03,
          9.9967e-01, 2.4137e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:09,264 [Process: 0] Synchronize training processes
2024-08-19 13:18:09,264 [Process: 0] Evaluating...
2024-08-19 13:18:09,266 [Process: 0] EPOCH 144:
2024-08-19 13:18:09,267 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:10,307 [Process: 0] Synchronize training processes
2024-08-19 13:18:10,307 [Process: 0] Evaluating...
2024-08-19 13:18:10,309 [Process: 0] EPOCH 145:
2024-08-19 13:18:10,311 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9937, 0.0121, 0.0125,  ..., 0.9963, 0.9927, 0.0434],
         [0.0021, 0.0121, 0.0125,  ..., 0.0012, 0.0025, 0.0434],
         [0.0021, 0.0121, 0.0125,  ..., 0.0013, 0.0024, 0.0560],
         [0.0021, 0.9638, 0.9624,  ..., 0.0012, 0.0024, 0.8571]],
        [[0.8973, 0.0105, 0.0272,  ..., 0.0356, 0.0021, 0.0046],
         [0.0216, 0.0105, 0.0272,  ..., 0.0356, 0.0021, 0.0046],
         [0.0595, 0.0105, 0.0272,  ..., 0.0356, 0.9936, 0.9863],
         [0.0216, 0.9686, 0.9185,  ..., 0.8931, 0.0021, 0.0046]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.3798e-02, 1.5000e-01, 9.9144e-01,  ..., 9.7555e-01,
          1.8805e-02, 2.3229e-02],
         [6.3798e-02, 3.9035e-01, 2.8544e-03,  ..., 8.1497e-03,
          1.8805e-02, 2.3229e-02],
         [7.7405e-01, 9.2161e-02, 2.8544e-03,  ..., 8.1497e-03,
          9.4358e-01, 9.3031e-01],
         [9.8356e-02, 3.6749e-01, 2.8544e-03,  ..., 8.1497e-03,
          1.8805e-02, 2.3229e-02]],
        [[1.8047e-02, 1.7680e-02, 9.8941e-01,  ..., 9.8086e-01,
          7.3231e-04, 1.9102e-02],
         [1.8047e-02, 1.7680e-02, 3.5311e-03,  ..., 6.3786e-03,
          5.6725e-04, 1.9102e-02],
         [9.4586e-01, 1.7680e-02, 3.5311e-03,  ..., 6.3786e-03,
          5.6725e-04, 9.4269e-01],
         [1.8047e-02, 9.4696e-01, 3.5311e-03,  ..., 6.3786e-03,
          9.9813e-01, 1.9102e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7990e-01, 5.3466e-02, 1.5758e-02,  ..., 9.8198e-01,
          9.9630e-01, 2.0221e-02],
         [1.3589e-02, 5.3466e-02, 1.5758e-02,  ..., 7.5880e-03,
          1.1189e-03, 2.0221e-02],
         [3.2537e-03, 5.3466e-02, 1.5758e-02,  ..., 5.3156e-03,
          1.4577e-03, 2.0221e-02],
         [3.2537e-03, 8.3960e-01, 9.5273e-01,  ..., 5.1125e-03,
          1.1189e-03, 9.3934e-01]],
        [[9.8251e-01, 2.3128e-02, 4.2842e-02,  ..., 3.5143e-02,
          1.4386e-03, 6.7742e-04],
         [3.2661e-03, 2.3128e-02, 4.2842e-02,  ..., 3.5143e-02,
          1.4386e-03, 6.7742e-04],
         [1.0959e-02, 2.3128e-02, 4.2842e-02,  ..., 3.5143e-02,
          9.9568e-01, 9.9797e-01],
         [3.2661e-03, 9.3062e-01, 8.7147e-01,  ..., 8.9457e-01,
          1.4386e-03, 6.7742e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2185e-02, 3.8071e-03, 9.8329e-01,  ..., 9.6363e-01,
          1.4164e-02, 1.9679e-02],
         [7.2185e-02, 3.8071e-03, 4.4755e-03,  ..., 9.5701e-03,
          1.4164e-02, 1.9679e-02],
         [7.6039e-01, 3.8071e-03, 4.4755e-03,  ..., 9.5701e-03,
          9.5751e-01, 9.4096e-01],
         [9.5243e-02, 9.8858e-01, 7.7609e-03,  ..., 1.7228e-02,
          1.4164e-02, 1.9679e-02]],
        [[3.0484e-02, 8.5942e-03, 9.5070e-01,  ..., 9.8053e-01,
          3.5994e-04, 2.0646e-02],
         [3.0484e-02, 6.5477e-03, 2.0184e-02,  ..., 5.2295e-03,
          3.5994e-04, 2.0646e-02],
         [9.0855e-01, 6.5477e-03, 1.4559e-02,  ..., 5.2295e-03,
          3.5994e-04, 9.3806e-01],
         [3.0484e-02, 9.7831e-01, 1.4559e-02,  ..., 9.0061e-03,
          9.9892e-01, 2.0646e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:11,352 [Process: 0] Synchronize training processes
2024-08-19 13:18:11,352 [Process: 0] Evaluating...
2024-08-19 13:18:11,354 [Process: 0] EPOCH 146:
2024-08-19 13:18:11,356 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9918e-01, 7.4345e-02, 2.9100e-02,  ..., 9.7239e-01,
          9.8769e-01, 2.7116e-02],
         [2.7440e-04, 6.5124e-02, 2.9100e-02,  ..., 1.3501e-02,
          3.7750e-03, 2.7116e-02],
         [2.7440e-04, 9.1800e-02, 2.9100e-02,  ..., 7.7285e-03,
          4.7580e-03, 2.7116e-02],
         [2.7440e-04, 7.6873e-01, 9.1270e-01,  ..., 6.3817e-03,
          3.7750e-03, 9.1865e-01]],
        [[7.4446e-01, 3.7914e-02, 1.0037e-02,  ..., 2.9840e-02,
          3.9752e-03, 2.7966e-03],
         [3.0656e-02, 3.7914e-02, 1.0037e-02,  ..., 2.9840e-02,
          3.9752e-03, 2.7966e-03],
         [1.6885e-01, 3.7914e-02, 1.0037e-02,  ..., 2.9840e-02,
          9.8807e-01, 9.9161e-01],
         [5.6033e-02, 8.8626e-01, 9.6989e-01,  ..., 9.1048e-01,
          3.9752e-03, 2.7966e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3264e-02, 3.2711e-03, 9.9129e-01,  ..., 7.4072e-01,
          1.1548e-02, 2.2578e-02],
         [4.3264e-02, 3.1289e-03, 2.9036e-03,  ..., 1.0527e-01,
          1.1548e-02, 2.2578e-02],
         [8.7021e-01, 3.1289e-03, 2.9036e-03,  ..., 5.2855e-02,
          9.6536e-01, 9.3227e-01],
         [4.3264e-02, 9.9047e-01, 2.9036e-03,  ..., 1.0115e-01,
          1.1548e-02, 2.2578e-02]],
        [[8.6869e-02, 3.2224e-03, 9.6731e-01,  ..., 9.9068e-01,
          7.2709e-04, 2.4220e-02],
         [1.2868e-01, 3.2224e-03, 8.7827e-03,  ..., 3.1071e-03,
          7.2709e-04, 2.4220e-02],
         [6.7623e-01, 3.2224e-03, 8.7827e-03,  ..., 3.1071e-03,
          7.2709e-04, 9.2734e-01],
         [1.0822e-01, 9.9033e-01, 1.5123e-02,  ..., 3.1071e-03,
          9.9782e-01, 2.4220e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8119, 0.0512, 0.0297,  ..., 0.9669, 0.9854, 0.0870],
         [0.1317, 0.0677, 0.0297,  ..., 0.0133, 0.0048, 0.0870],
         [0.0315, 0.0512, 0.0297,  ..., 0.0117, 0.0053, 0.1277],
         [0.0248, 0.8299, 0.9108,  ..., 0.0080, 0.0045, 0.6984]],
        [[0.5798, 0.0261, 0.0409,  ..., 0.0638, 0.0054, 0.0117],
         [0.0452, 0.0261, 0.0465,  ..., 0.0652, 0.0054, 0.0117],
         [0.2872, 0.0261, 0.0409,  ..., 0.0651, 0.9839, 0.9648],
         [0.0878, 0.9216, 0.8717,  ..., 0.8059, 0.0054, 0.0117]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0985e-01, 5.5220e-02, 9.8225e-01,  ..., 9.9208e-01,
          7.3282e-03, 1.2287e-02],
         [1.2783e-01, 3.4451e-02, 6.8518e-03,  ..., 2.6402e-03,
          7.3282e-03, 1.2287e-02],
         [3.0742e-01, 3.4451e-02, 5.3564e-03,  ..., 2.6402e-03,
          9.7802e-01, 9.6314e-01],
         [4.5490e-01, 8.7588e-01, 5.5467e-03,  ..., 2.6402e-03,
          7.3282e-03, 1.2287e-02]],
        [[4.5593e-02, 4.2820e-02, 9.3961e-01,  ..., 9.8565e-01,
          2.2841e-04, 4.4776e-02],
         [4.5593e-02, 6.9087e-02, 1.9256e-02,  ..., 8.5841e-03,
          2.2841e-04, 4.7571e-02],
         [8.6322e-01, 4.2820e-02, 1.9256e-02,  ..., 2.8827e-03,
          2.2841e-04, 8.5563e-01],
         [4.5593e-02, 8.4527e-01, 2.1875e-02,  ..., 2.8827e-03,
          9.9931e-01, 5.2024e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:12,397 [Process: 0] Synchronize training processes
2024-08-19 13:18:12,397 [Process: 0] Evaluating...
2024-08-19 13:18:12,399 [Process: 0] EPOCH 147:
2024-08-19 13:18:12,401 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:13,440 [Process: 0] Synchronize training processes
2024-08-19 13:18:13,440 [Process: 0] Evaluating...
2024-08-19 13:18:13,442 [Process: 0] EPOCH 148:
2024-08-19 13:18:13,444 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9946, 0.0310, 0.0268,  ..., 0.9843, 0.9406, 0.0604],
         [0.0016, 0.0310, 0.0268,  ..., 0.0057, 0.0250, 0.0604],
         [0.0021, 0.0310, 0.0268,  ..., 0.0055, 0.0209, 0.0715],
         [0.0016, 0.9069, 0.9195,  ..., 0.0046, 0.0136, 0.8077]],
        [[0.9919, 0.0185, 0.0063,  ..., 0.0114, 0.0038, 0.0134],
         [0.0023, 0.0228, 0.0063,  ..., 0.0114, 0.0038, 0.0134],
         [0.0035, 0.0185, 0.0063,  ..., 0.0114, 0.9886, 0.9597],
         [0.0023, 0.9401, 0.9812,  ..., 0.9657, 0.0038, 0.0134]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2517e-02, 3.0283e-03, 9.5045e-01,  ..., 9.9800e-01,
          2.2822e-02, 1.3467e-02],
         [2.2517e-02, 2.8505e-03, 9.5818e-03,  ..., 4.2019e-04,
          2.2822e-02, 1.3467e-02],
         [9.3245e-01, 2.8505e-03, 9.5818e-03,  ..., 4.2019e-04,
          9.3153e-01, 9.5960e-01],
         [2.2517e-02, 9.9127e-01, 3.0387e-02,  ..., 1.1620e-03,
          2.2822e-02, 1.3467e-02]],
        [[2.8926e-02, 4.1595e-03, 9.8974e-01,  ..., 9.9292e-01,
          7.2495e-05, 2.2914e-02],
         [2.8926e-02, 4.1595e-03, 3.4196e-03,  ..., 2.3602e-03,
          7.2495e-05, 2.2914e-02],
         [9.1322e-01, 4.1595e-03, 3.4196e-03,  ..., 2.3602e-03,
          7.2495e-05, 9.3126e-01],
         [2.8926e-02, 9.8752e-01, 3.4196e-03,  ..., 2.3602e-03,
          9.9978e-01, 2.2914e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9915, 0.0316, 0.0194,  ..., 0.9842, 0.9718, 0.0468],
         [0.0028, 0.0316, 0.0194,  ..., 0.0049, 0.0091, 0.0468],
         [0.0029, 0.0316, 0.0194,  ..., 0.0060, 0.0108, 0.0569],
         [0.0028, 0.9053, 0.9419,  ..., 0.0049, 0.0083, 0.8494]],
        [[0.9327, 0.0285, 0.0151,  ..., 0.0217, 0.0021, 0.0059],
         [0.0141, 0.0257, 0.0125,  ..., 0.0217, 0.0021, 0.0059],
         [0.0371, 0.0257, 0.0125,  ..., 0.0217, 0.9938, 0.9822],
         [0.0162, 0.9200, 0.9598,  ..., 0.9349, 0.0021, 0.0059]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.1604e-02, 3.0182e-03, 9.8771e-01,  ..., 9.9156e-01,
          2.4787e-02, 2.7122e-02],
         [8.1604e-02, 1.1516e-03, 4.0961e-03,  ..., 2.6488e-03,
          2.4787e-02, 2.7122e-02],
         [1.2542e-01, 1.1516e-03, 4.0961e-03,  ..., 2.6488e-03,
          9.2564e-01, 9.1863e-01],
         [7.1137e-01, 9.9468e-01, 4.0961e-03,  ..., 3.1373e-03,
          2.4787e-02, 2.7122e-02]],
        [[1.7448e-02, 5.6232e-03, 9.6984e-01,  ..., 9.9323e-01,
          3.5702e-04, 2.9290e-02],
         [1.7448e-02, 5.6232e-03, 1.0055e-02,  ..., 2.2562e-03,
          3.5702e-04, 2.9290e-02],
         [9.4766e-01, 5.6232e-03, 1.0055e-02,  ..., 2.2562e-03,
          3.5702e-04, 9.1213e-01],
         [1.7448e-02, 9.8313e-01, 1.0055e-02,  ..., 2.2562e-03,
          9.9893e-01, 2.9290e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:14,485 [Process: 0] Synchronize training processes
2024-08-19 13:18:14,486 [Process: 0] Evaluating...
2024-08-19 13:18:14,488 [Process: 0] EPOCH 149:
2024-08-19 13:18:14,489 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:15,526 [Process: 0] Synchronize training processes
2024-08-19 13:18:15,526 [Process: 0] Evaluating...
2024-08-19 13:18:15,528 [Process: 0] EPOCH 150:
2024-08-19 13:18:15,529 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9887, 0.0168, 0.0098,  ..., 0.9355, 0.3015, 0.0050],
         [0.0036, 0.0168, 0.0098,  ..., 0.0314, 0.1740, 0.0050],
         [0.0040, 0.0168, 0.0098,  ..., 0.0194, 0.4525, 0.0050],
         [0.0036, 0.9497, 0.9707,  ..., 0.0137, 0.0720, 0.9850]],
        [[0.9319, 0.0110, 0.0125,  ..., 0.0482, 0.0069, 0.0129],
         [0.0169, 0.0110, 0.0125,  ..., 0.0482, 0.0069, 0.0129],
         [0.0296, 0.0110, 0.0125,  ..., 0.0482, 0.9793, 0.9612],
         [0.0215, 0.9670, 0.9624,  ..., 0.8555, 0.0069, 0.0129]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.7535e-02, 2.3383e-03, 9.9556e-01,  ..., 9.6164e-01,
          1.3832e-02, 3.3794e-02],
         [7.7535e-02, 2.1737e-03, 1.4793e-03,  ..., 9.0232e-03,
          1.3832e-02, 3.3794e-02],
         [1.5718e-01, 2.1737e-03, 1.4793e-03,  ..., 9.0232e-03,
          9.5850e-01, 8.9862e-01],
         [6.8775e-01, 9.9331e-01, 1.4793e-03,  ..., 2.0313e-02,
          1.3832e-02, 3.3794e-02]],
        [[6.0289e-02, 2.3203e-02, 9.3736e-01,  ..., 9.9434e-01,
          1.7239e-04, 1.7147e-02],
         [6.0289e-02, 2.3203e-02, 3.1317e-02,  ..., 1.8854e-03,
          1.7239e-04, 1.7147e-02],
         [8.1913e-01, 2.3203e-02, 1.3709e-02,  ..., 1.8854e-03,
          1.7239e-04, 9.4856e-01],
         [6.0289e-02, 9.3039e-01, 1.7616e-02,  ..., 1.8854e-03,
          9.9948e-01, 1.7147e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.3498e-01, 2.4451e-02, 3.3228e-02,  ..., 9.3503e-01,
          1.9735e-01, 7.7026e-03],
         [1.2605e-01, 2.4451e-02, 3.3228e-02,  ..., 2.2060e-02,
          6.6783e-02, 7.7026e-03],
         [2.0779e-02, 2.4451e-02, 3.3437e-02,  ..., 2.5330e-02,
          6.4872e-02, 7.7026e-03],
         [1.8196e-02, 9.2665e-01, 9.0011e-01,  ..., 1.7578e-02,
          6.7099e-01, 9.7689e-01]],
        [[9.9999e-01, 5.9056e-02, 2.2186e-02,  ..., 6.1538e-02,
          3.3796e-03, 1.2242e-02],
         [1.7874e-06, 6.9032e-02, 1.9255e-02,  ..., 6.1538e-02,
          3.3796e-03, 1.2242e-02],
         [1.8401e-06, 8.4541e-02, 1.9255e-02,  ..., 7.7257e-02,
          9.8986e-01, 9.6327e-01],
         [1.7874e-06, 7.8737e-01, 9.3930e-01,  ..., 7.9967e-01,
          3.3796e-03, 1.2242e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8016e-02, 2.9478e-02, 9.7999e-01,  ..., 9.8429e-01,
          1.4293e-02, 4.7318e-02],
         [9.8016e-02, 9.9796e-03, 5.3336e-03,  ..., 5.2380e-03,
          1.4293e-02, 4.7318e-02],
         [5.0255e-01, 9.9796e-03, 5.3336e-03,  ..., 5.2380e-03,
          9.5712e-01, 8.5344e-01],
         [3.0142e-01, 9.5056e-01, 9.3447e-03,  ..., 5.2380e-03,
          1.4293e-02, 5.1920e-02]],
        [[4.4064e-02, 6.4952e-03, 9.8217e-01,  ..., 9.6563e-01,
          7.4426e-04, 3.0070e-02],
         [4.6763e-02, 6.4952e-03, 5.9420e-03,  ..., 1.1456e-02,
          7.4426e-04, 3.0070e-02],
         [8.6511e-01, 6.4952e-03, 5.9420e-03,  ..., 1.1456e-02,
          7.4426e-04, 9.0979e-01],
         [4.4064e-02, 9.8051e-01, 5.9420e-03,  ..., 1.1456e-02,
          9.9777e-01, 3.0070e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:18:16,567 [Process: 0] Synchronize training processes
2024-08-19 13:18:16,567 [Process: 0] Evaluating...
2024-08-19 13:18:16,569 [Process: 0] EPOCH 151:
2024-08-19 13:18:16,571 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:17,610 [Process: 0] Synchronize training processes
2024-08-19 13:18:17,610 [Process: 0] Evaluating...
2024-08-19 13:18:18,038 [Process: 0] EPOCH 152:
2024-08-19 13:18:18,041 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8776, 0.0202, 0.0235,  ..., 0.9620, 0.1141, 0.0145],
         [0.0483, 0.0202, 0.0235,  ..., 0.0105, 0.0973, 0.0145],
         [0.0418, 0.0202, 0.0235,  ..., 0.0170, 0.0912, 0.0145],
         [0.0323, 0.9394, 0.9296,  ..., 0.0105, 0.6974, 0.9566]],
        [[0.9765, 0.0242, 0.0246,  ..., 0.0618, 0.0017, 0.0223],
         [0.0038, 0.0242, 0.0246,  ..., 0.0618, 0.0017, 0.0223],
         [0.0159, 0.0242, 0.0290,  ..., 0.0684, 0.9950, 0.9331],
         [0.0038, 0.9274, 0.9218,  ..., 0.8081, 0.0017, 0.0223]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2455e-02, 2.2952e-01, 9.7066e-01,  ..., 8.5831e-01,
          1.6406e-02, 1.9237e-02],
         [9.2613e-02, 5.9074e-01, 9.6653e-03,  ..., 8.8710e-02,
          1.6406e-02, 1.9237e-02],
         [2.2968e-01, 6.4399e-02, 9.6653e-03,  ..., 2.6490e-02,
          9.5078e-01, 9.4229e-01],
         [5.8525e-01, 1.1533e-01, 1.0007e-02,  ..., 2.6490e-02,
          1.6406e-02, 1.9237e-02]],
        [[2.9387e-02, 1.0631e-03, 9.9798e-01,  ..., 9.8455e-01,
          1.2063e-03, 1.3722e-02],
         [2.9387e-02, 1.0631e-03, 6.7173e-04,  ..., 4.8579e-03,
          5.6271e-04, 1.3722e-02],
         [9.1184e-01, 1.0631e-03, 6.7173e-04,  ..., 4.8579e-03,
          5.6271e-04, 9.5883e-01],
         [2.9387e-02, 9.9681e-01, 6.7173e-04,  ..., 5.7315e-03,
          9.9767e-01, 1.3722e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5929e-01, 2.1012e-02, 7.7668e-03,  ..., 9.7171e-01,
          9.4968e-01, 2.5787e-02],
         [1.2150e-02, 2.1012e-02, 7.7668e-03,  ..., 9.6758e-03,
          1.4253e-02, 2.5787e-02],
         [1.6409e-02, 2.1012e-02, 7.7668e-03,  ..., 1.0463e-02,
          2.2257e-02, 2.5787e-02],
         [1.2150e-02, 9.3696e-01, 9.7670e-01,  ..., 8.1468e-03,
          1.3812e-02, 9.2264e-01]],
        [[9.9881e-01, 9.9300e-03, 1.8973e-02,  ..., 3.8499e-02,
          1.3878e-03, 1.1244e-02],
         [2.2654e-04, 9.9300e-03, 1.8973e-02,  ..., 3.8499e-02,
          1.3878e-03, 1.1244e-02],
         [7.3608e-04, 9.9300e-03, 1.8973e-02,  ..., 3.8499e-02,
          9.9584e-01, 9.6627e-01],
         [2.2654e-04, 9.7021e-01, 9.4308e-01,  ..., 8.8450e-01,
          1.3878e-03, 1.1244e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:18:19,072 [Process: 0] Synchronize training processes
2024-08-19 13:18:19,073 [Process: 0] Evaluating...
2024-08-19 13:18:19,074 [Process: 0] EPOCH 153:
2024-08-19 13:18:19,076 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:20,119 [Process: 0] Synchronize training processes
2024-08-19 13:18:20,120 [Process: 0] Evaluating...
2024-08-19 13:18:20,121 [Process: 0] EPOCH 154:
2024-08-19 13:18:20,123 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.7735e-02, 8.1857e-03, 9.9396e-01,  ..., 9.9532e-01,
          1.0246e-02, 3.1511e-02],
         [7.8906e-02, 4.5943e-03, 2.0140e-03,  ..., 1.5608e-03,
          1.0246e-02, 3.1511e-02],
         [1.3244e-01, 4.5943e-03, 2.0140e-03,  ..., 1.5608e-03,
          9.6926e-01, 9.0547e-01],
         [7.1092e-01, 9.8263e-01, 2.0140e-03,  ..., 1.5608e-03,
          1.0246e-02, 3.1511e-02]],
        [[1.8130e-02, 1.8923e-03, 9.4176e-01,  ..., 9.9856e-01,
          2.9474e-04, 2.2132e-02],
         [1.8130e-02, 1.8923e-03, 2.1611e-02,  ..., 4.8067e-04,
          2.9474e-04, 2.2132e-02],
         [9.4561e-01, 1.8923e-03, 1.8290e-02,  ..., 4.8067e-04,
          2.9474e-04, 9.3360e-01],
         [1.8130e-02, 9.9432e-01, 1.8339e-02,  ..., 4.8067e-04,
          9.9912e-01, 2.2132e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5793e-01, 1.0071e-02, 3.5197e-02,  ..., 9.8984e-01,
          9.7343e-01, 1.2212e-02],
         [1.3728e-02, 1.0071e-02, 3.2135e-02,  ..., 3.3864e-03,
          7.9025e-03, 9.4652e-03],
         [1.4617e-02, 1.0071e-02, 3.2135e-02,  ..., 3.3864e-03,
          1.0764e-02, 9.4652e-03],
         [1.3728e-02, 9.6979e-01, 9.0053e-01,  ..., 3.3864e-03,
          7.9025e-03, 9.6886e-01]],
        [[9.9934e-01, 1.4905e-02, 6.7767e-02,  ..., 3.3771e-02,
          3.1050e-03, 4.3071e-03],
         [1.7753e-04, 1.4905e-02, 8.2592e-02,  ..., 3.3771e-02,
          3.1050e-03, 4.3071e-03],
         [3.0924e-04, 1.4905e-02, 6.7767e-02,  ..., 3.3771e-02,
          9.9069e-01, 9.8708e-01],
         [1.7753e-04, 9.5529e-01, 7.8187e-01,  ..., 8.9869e-01,
          3.1050e-03, 4.3071e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4787e-02, 2.0025e-03, 9.9641e-01,  ..., 9.7902e-01,
          1.0267e-02, 9.4398e-03],
         [2.2204e-01, 2.0025e-03, 1.1958e-03,  ..., 6.9950e-03,
          1.0267e-02, 9.4398e-03],
         [1.6196e-01, 2.0025e-03, 1.1958e-03,  ..., 6.9950e-03,
          9.6920e-01, 9.7168e-01],
         [5.2122e-01, 9.9399e-01, 1.2001e-03,  ..., 6.9950e-03,
          1.0267e-02, 9.4398e-03]],
        [[3.4207e-02, 1.6200e-04, 9.9840e-01,  ..., 9.9559e-01,
          4.6423e-04, 2.8012e-02],
         [3.4207e-02, 1.6200e-04, 5.3349e-04,  ..., 1.4697e-03,
          4.6423e-04, 2.8012e-02],
         [8.9738e-01, 1.6200e-04, 5.3349e-04,  ..., 1.4697e-03,
          4.6423e-04, 9.1596e-01],
         [3.4207e-02, 9.9951e-01, 5.3349e-04,  ..., 1.4697e-03,
          9.9861e-01, 2.8012e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8944, 0.0154, 0.0200,  ..., 0.9472, 0.9874, 0.0039],
         [0.0331, 0.0141, 0.0200,  ..., 0.0201, 0.0043, 0.0039],
         [0.0362, 0.0141, 0.0203,  ..., 0.0167, 0.0043, 0.0039],
         [0.0364, 0.9564, 0.9397,  ..., 0.0159, 0.0040, 0.9884]],
        [[0.9943, 0.0258, 0.0175,  ..., 0.0475, 0.0025, 0.0058],
         [0.0014, 0.0258, 0.0175,  ..., 0.0475, 0.0025, 0.0058],
         [0.0014, 0.0258, 0.0175,  ..., 0.0475, 0.9925, 0.9827],
         [0.0029, 0.9227, 0.9474,  ..., 0.8575, 0.0025, 0.0058]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:18:21,160 [Process: 0] Synchronize training processes
2024-08-19 13:18:21,160 [Process: 0] Evaluating...
2024-08-19 13:18:21,162 [Process: 0] EPOCH 155:
2024-08-19 13:18:21,164 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:22,206 [Process: 0] Synchronize training processes
2024-08-19 13:18:22,206 [Process: 0] Evaluating...
2024-08-19 13:18:22,208 [Process: 0] EPOCH 156:
2024-08-19 13:18:22,210 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0544e-01, 1.0684e-02, 9.9389e-01,  ..., 9.9479e-01,
          1.5113e-02, 2.0726e-02],
         [1.4214e-01, 1.0684e-02, 2.0370e-03,  ..., 1.7382e-03,
          1.5113e-02, 2.0726e-02],
         [5.4690e-01, 1.0684e-02, 2.0370e-03,  ..., 1.7382e-03,
          9.5466e-01, 9.3782e-01],
         [2.0552e-01, 9.6795e-01, 2.0370e-03,  ..., 1.7382e-03,
          1.5113e-02, 2.0726e-02]],
        [[1.2676e-02, 3.0589e-04, 9.9652e-01,  ..., 9.9635e-01,
          4.7289e-04, 1.2728e-02],
         [1.2676e-02, 3.0589e-04, 1.1613e-03,  ..., 1.2174e-03,
          4.7289e-04, 1.2728e-02],
         [9.6197e-01, 3.0589e-04, 1.1613e-03,  ..., 1.2174e-03,
          4.7289e-04, 9.6182e-01],
         [1.2676e-02, 9.9908e-01, 1.1613e-03,  ..., 1.2174e-03,
          9.9858e-01, 1.2728e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6232, 0.0066, 0.0359,  ..., 0.9827, 0.0670, 0.0295],
         [0.1873, 0.0054, 0.0359,  ..., 0.0063, 0.1652, 0.0295],
         [0.0941, 0.0054, 0.0403,  ..., 0.0059, 0.7027, 0.0326],
         [0.0954, 0.9825, 0.8879,  ..., 0.0051, 0.0652, 0.9083]],
        [[0.4042, 0.0115, 0.0224,  ..., 0.0229, 0.0057, 0.0032],
         [0.0804, 0.0115, 0.0224,  ..., 0.0229, 0.0057, 0.0032],
         [0.1979, 0.0115, 0.0224,  ..., 0.0230, 0.9830, 0.9905],
         [0.3174, 0.9654, 0.9328,  ..., 0.9311, 0.0057, 0.0032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3410e-02, 3.5607e-02, 9.7957e-01,  ..., 9.9582e-01,
          4.2417e-02, 3.3053e-02],
         [9.3410e-02, 3.5607e-02, 6.8085e-03,  ..., 1.1474e-03,
          4.2417e-02, 3.3053e-02],
         [3.4713e-01, 5.6107e-02, 6.8085e-03,  ..., 1.1474e-03,
          8.6298e-01, 8.9805e-01],
         [4.6605e-01, 8.7268e-01, 6.8085e-03,  ..., 1.8851e-03,
          5.2190e-02, 3.5845e-02]],
        [[2.0220e-02, 1.1430e-04, 9.9765e-01,  ..., 9.5764e-01,
          4.2943e-04, 3.3884e-02],
         [2.0220e-02, 1.1430e-04, 7.8225e-04,  ..., 1.4120e-02,
          4.2943e-04, 3.3884e-02],
         [9.3934e-01, 1.1430e-04, 7.8225e-04,  ..., 1.4120e-02,
          4.2943e-04, 8.9835e-01],
         [2.0220e-02, 9.9966e-01, 7.8225e-04,  ..., 1.4120e-02,
          9.9871e-01, 3.3884e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:18:23,252 [Process: 0] Synchronize training processes
2024-08-19 13:18:23,252 [Process: 0] Evaluating...
2024-08-19 13:18:23,254 [Process: 0] EPOCH 157:
2024-08-19 13:18:23,256 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:24,298 [Process: 0] Synchronize training processes
2024-08-19 13:18:24,299 [Process: 0] Evaluating...
2024-08-19 13:18:24,300 [Process: 0] EPOCH 158:
2024-08-19 13:18:24,302 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9791, 0.0132, 0.0259,  ..., 0.9890, 0.0869, 0.0065],
         [0.0070, 0.0131, 0.0259,  ..., 0.0037, 0.3622, 0.0065],
         [0.0070, 0.0131, 0.0259,  ..., 0.0037, 0.0869, 0.0065],
         [0.0070, 0.9606, 0.9222,  ..., 0.0037, 0.4639, 0.9804]],
        [[0.7766, 0.0175, 0.0159,  ..., 0.0225, 0.0027, 0.0032],
         [0.0296, 0.0175, 0.0159,  ..., 0.0225, 0.0027, 0.0032],
         [0.1642, 0.0175, 0.0159,  ..., 0.0225, 0.9919, 0.9905],
         [0.0296, 0.9476, 0.9522,  ..., 0.9324, 0.0027, 0.0032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7727e-02, 7.4165e-03, 9.9010e-01,  ..., 9.6992e-01,
          2.5065e-02, 1.5153e-02],
         [1.7727e-02, 7.4165e-03, 3.2179e-03,  ..., 1.0026e-02,
          2.5065e-02, 1.5153e-02],
         [9.4682e-01, 7.4165e-03, 3.2179e-03,  ..., 1.0026e-02,
          9.2480e-01, 9.5454e-01],
         [1.7727e-02, 9.7775e-01, 3.4660e-03,  ..., 1.0026e-02,
          2.5065e-02, 1.5153e-02]],
        [[9.8859e-02, 1.1291e-03, 9.9901e-01,  ..., 9.6365e-01,
          3.0152e-03, 2.5674e-02],
         [2.4944e-01, 1.1272e-03, 3.2902e-04,  ..., 1.2635e-02,
          3.0152e-03, 2.5674e-02],
         [5.5238e-01, 1.1272e-03, 3.2902e-04,  ..., 1.1857e-02,
          3.0152e-03, 9.2298e-01],
         [9.9319e-02, 9.9662e-01, 3.2902e-04,  ..., 1.1857e-02,
          9.9095e-01, 2.5674e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8331e-01, 3.0654e-02, 3.3527e-02,  ..., 9.9716e-01,
          3.8918e-01, 7.7343e-03],
         [5.5620e-03, 3.0654e-02, 3.9340e-02,  ..., 9.2808e-04,
          3.8437e-01, 7.7343e-03],
         [5.5620e-03, 3.0654e-02, 3.3527e-02,  ..., 9.8587e-04,
          1.1097e-01, 7.7343e-03],
         [5.5620e-03, 9.0804e-01, 8.9361e-01,  ..., 9.2808e-04,
          1.1548e-01, 9.7680e-01]],
        [[4.7305e-01, 1.9829e-02, 1.9290e-02,  ..., 3.9952e-02,
          2.8134e-03, 8.9607e-03],
         [6.5328e-02, 1.8232e-02, 2.6145e-02,  ..., 3.9952e-02,
          2.8134e-03, 8.9607e-03],
         [3.9630e-01, 1.8232e-02, 1.9290e-02,  ..., 5.0391e-02,
          9.9156e-01, 9.7312e-01],
         [6.5328e-02, 9.4371e-01, 9.3528e-01,  ..., 8.6970e-01,
          2.8134e-03, 8.9607e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7435e-02, 8.8038e-02, 9.9779e-01,  ..., 9.9182e-01,
          1.5676e-02, 2.5578e-02],
         [4.9373e-02, 1.2743e-01, 7.3687e-04,  ..., 2.7273e-03,
          1.5676e-02, 2.5578e-02],
         [8.5482e-01, 6.2466e-02, 7.3687e-04,  ..., 2.7273e-03,
          9.5297e-01, 9.2327e-01],
         [4.8370e-02, 7.2207e-01, 7.3687e-04,  ..., 2.7273e-03,
          1.5676e-02, 2.5578e-02]],
        [[9.4415e-02, 1.3298e-03, 9.9510e-01,  ..., 9.6671e-01,
          1.0582e-03, 6.8170e-03],
         [2.3707e-01, 1.3298e-03, 1.6345e-03,  ..., 1.1096e-02,
          1.0582e-03, 6.8170e-03],
         [5.8362e-01, 1.3298e-03, 1.6345e-03,  ..., 1.1096e-02,
          1.0582e-03, 9.7955e-01],
         [8.4900e-02, 9.9601e-01, 1.6345e-03,  ..., 1.1096e-02,
          9.9683e-01, 6.8170e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:25,341 [Process: 0] Synchronize training processes
2024-08-19 13:18:25,341 [Process: 0] Evaluating...
2024-08-19 13:18:25,343 [Process: 0] EPOCH 159:
2024-08-19 13:18:25,345 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8948, 0.0392, 0.0129,  ..., 0.9891, 0.9718, 0.0190],
         [0.0543, 0.0420, 0.0129,  ..., 0.0048, 0.0082, 0.0190],
         [0.0298, 0.0392, 0.0129,  ..., 0.0030, 0.0118, 0.0190],
         [0.0212, 0.8795, 0.9612,  ..., 0.0030, 0.0082, 0.9429]],
        [[0.8544, 0.0405, 0.0094,  ..., 0.0307, 0.0016, 0.0052],
         [0.0307, 0.0405, 0.0094,  ..., 0.0307, 0.0016, 0.0052],
         [0.0842, 0.0405, 0.0094,  ..., 0.0307, 0.9952, 0.9844],
         [0.0307, 0.8784, 0.9717,  ..., 0.9079, 0.0016, 0.0052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.9513e-02, 1.4189e-02, 9.9034e-01,  ..., 9.8229e-01,
          1.7365e-02, 5.4984e-02],
         [4.9513e-02, 1.3463e-02, 3.2213e-03,  ..., 5.9030e-03,
          1.7365e-02, 5.4984e-02],
         [8.3129e-01, 1.3463e-02, 3.2213e-03,  ..., 5.9030e-03,
          9.4791e-01, 8.2475e-01],
         [6.9683e-02, 9.5889e-01, 3.2213e-03,  ..., 5.9030e-03,
          1.7365e-02, 6.5280e-02]],
        [[9.2226e-02, 1.0308e-03, 9.9776e-01,  ..., 9.8435e-01,
          1.0208e-03, 9.0916e-03],
         [1.2463e-01, 1.0308e-03, 7.4512e-04,  ..., 4.2910e-03,
          1.0208e-03, 9.0916e-03],
         [6.3291e-01, 1.0308e-03, 7.4512e-04,  ..., 4.2910e-03,
          1.0208e-03, 9.7273e-01],
         [1.5024e-01, 9.9691e-01, 7.4512e-04,  ..., 7.0695e-03,
          9.9694e-01, 9.0916e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 160:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1792e-01, 3.7797e-02, 3.9369e-02,  ..., 9.9744e-01,
          9.7827e-01, 1.2384e-02],
         [2.5238e-02, 3.9841e-02, 3.9369e-02,  ..., 8.4315e-04,
          7.2428e-03, 1.2384e-02],
         [3.1625e-02, 3.7797e-02, 5.3504e-02,  ..., 8.7158e-04,
          7.2428e-03, 1.2384e-02],
         [2.5217e-02, 8.8456e-01, 8.6776e-01,  ..., 8.4315e-04,
          7.2428e-03, 9.6285e-01]],
        [[9.9870e-01, 1.1438e-02, 2.5433e-02,  ..., 4.2907e-02,
          3.5676e-03, 6.6920e-03],
         [3.7773e-04, 1.1438e-02, 2.5433e-02,  ..., 4.2907e-02,
          3.5676e-03, 6.6920e-03],
         [5.4116e-04, 1.1438e-02, 2.5433e-02,  ..., 4.3806e-02,
          9.8930e-01, 9.7992e-01],
         [3.7773e-04, 9.6569e-01, 9.2370e-01,  ..., 8.7038e-01,
          3.5676e-03, 6.6920e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.6707e-02, 1.8437e-03, 9.9801e-01,  ..., 9.7719e-01,
          1.3098e-02, 1.6315e-02],
         [5.6707e-02, 1.8437e-03, 6.0064e-04,  ..., 5.4242e-03,
          1.3098e-02, 1.6315e-02],
         [8.0830e-01, 1.8437e-03, 6.0064e-04,  ..., 5.4242e-03,
          9.6071e-01, 9.5106e-01],
         [7.8288e-02, 9.9447e-01, 7.8471e-04,  ..., 1.1966e-02,
          1.3098e-02, 1.6315e-02]],
        [[1.0416e-01, 2.6685e-04, 9.9237e-01,  ..., 9.4480e-01,
          2.2084e-03, 2.7192e-02],
         [4.7334e-01, 2.6685e-04, 2.5381e-03,  ..., 1.8398e-02,
          1.2922e-03, 2.7192e-02],
         [3.1834e-01, 2.6685e-04, 2.5381e-03,  ..., 1.8398e-02,
          1.2922e-03, 9.1842e-01],
         [1.0416e-01, 9.9920e-01, 2.5587e-03,  ..., 1.8398e-02,
          9.9521e-01, 2.7192e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 161:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:26,412 [Process: 0] Synchronize training processes
2024-08-19 13:18:26,412 [Process: 0] Evaluating...
2024-08-19 13:18:26,414 [Process: 0] EPOCH 160:
2024-08-19 13:18:26,416 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:27,451 [Process: 0] Synchronize training processes
2024-08-19 13:18:27,451 [Process: 0] Evaluating...
2024-08-19 13:18:27,453 [Process: 0] EPOCH 161:
2024-08-19 13:18:27,455 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6388e-01, 1.5179e-02, 5.1928e-02,  ..., 8.9516e-01,
          9.6460e-01, 2.0798e-02],
         [8.1964e-02, 1.5179e-02, 5.1928e-02,  ..., 5.6640e-02,
          9.7463e-03, 2.0798e-02],
         [3.0203e-02, 1.5179e-02, 6.0911e-02,  ..., 2.9855e-02,
          1.5908e-02, 2.0798e-02],
         [2.3957e-02, 9.5446e-01, 8.3523e-01,  ..., 1.8346e-02,
          9.7463e-03, 9.3761e-01]],
        [[9.9958e-01, 9.8890e-03, 1.5923e-02,  ..., 2.1790e-02,
          9.3455e-04, 2.2033e-03],
         [1.3715e-04, 9.8890e-03, 1.5923e-02,  ..., 2.1790e-02,
          9.3455e-04, 2.2033e-03],
         [1.4232e-04, 9.8890e-03, 1.5923e-02,  ..., 2.1790e-02,
          9.9720e-01, 9.9339e-01],
         [1.3715e-04, 9.7033e-01, 9.5223e-01,  ..., 9.3463e-01,
          9.3455e-04, 2.2033e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2830e-02, 1.6650e-02, 9.9843e-01,  ..., 9.9641e-01,
          1.1086e-02, 1.1195e-02],
         [5.2830e-02, 5.0930e-03, 5.2333e-04,  ..., 1.1976e-03,
          1.1086e-02, 1.1195e-02],
         [8.2367e-01, 5.0930e-03, 5.2333e-04,  ..., 1.1976e-03,
          9.6674e-01, 9.6641e-01],
         [7.0669e-02, 9.7316e-01, 5.2333e-04,  ..., 1.1976e-03,
          1.1086e-02, 1.1195e-02]],
        [[7.7497e-02, 5.2214e-04, 9.9044e-01,  ..., 9.9635e-01,
          6.0739e-04, 1.3786e-02],
         [2.0450e-01, 5.2214e-04, 3.1867e-03,  ..., 1.2157e-03,
          6.0739e-04, 1.3786e-02],
         [6.4050e-01, 5.2214e-04, 3.1867e-03,  ..., 1.2157e-03,
          6.0739e-04, 9.5864e-01],
         [7.7497e-02, 9.9843e-01, 3.1867e-03,  ..., 1.2157e-03,
          9.9818e-01, 1.3786e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 162:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8799e-01, 7.1422e-02, 2.6191e-02,  ..., 9.9174e-01,
          9.1992e-01, 8.1331e-03],
         [3.9623e-03, 1.1960e-01, 2.6191e-02,  ..., 2.3654e-03,
          2.9268e-02, 8.1331e-03],
         [4.0850e-03, 8.1722e-02, 2.6191e-02,  ..., 3.5307e-03,
          3.2829e-02, 8.1331e-03],
         [3.9623e-03, 7.2726e-01, 9.2143e-01,  ..., 2.3654e-03,
          1.7988e-02, 9.7560e-01]],
        [[9.9979e-01, 3.3634e-02, 6.9179e-03,  ..., 2.9720e-02,
          3.3452e-03, 8.2430e-03],
         [6.9935e-05, 3.3634e-02, 6.9179e-03,  ..., 2.9720e-02,
          3.3452e-03, 8.2430e-03],
         [6.9935e-05, 3.3634e-02, 6.9179e-03,  ..., 2.9720e-02,
          9.8996e-01, 9.7527e-01],
         [6.9935e-05, 8.9910e-01, 9.7925e-01,  ..., 9.1084e-01,
          3.3452e-03, 8.2430e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:18:28,493 [Process: 0] Synchronize training processes
2024-08-19 13:18:28,493 [Process: 0] Evaluating...
2024-08-19 13:18:28,917 [Process: 0] EPOCH 162:
2024-08-19 13:18:28,921 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:29,954 [Process: 0] Synchronize training processes
2024-08-19 13:18:29,955 [Process: 0] Evaluating...
2024-08-19 13:18:29,956 [Process: 0] EPOCH 163:
2024-08-19 13:18:29,958 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7351e-02, 3.6980e-02, 9.9368e-01,  ..., 9.8708e-01,
          1.6527e-02, 3.0606e-02],
         [2.7351e-02, 1.5930e-02, 2.1051e-03,  ..., 4.2459e-03,
          1.6527e-02, 3.0606e-02],
         [9.1795e-01, 1.5930e-02, 2.1051e-03,  ..., 4.2459e-03,
          9.5042e-01, 9.0818e-01],
         [2.7351e-02, 9.3116e-01, 2.1051e-03,  ..., 4.4280e-03,
          1.6527e-02, 3.0606e-02]],
        [[7.2951e-02, 5.5637e-03, 9.9060e-01,  ..., 9.8894e-01,
          2.9514e-04, 1.3908e-02],
         [7.3636e-02, 5.5637e-03, 3.1327e-03,  ..., 4.1971e-03,
          2.9514e-04, 1.3908e-02],
         [7.4630e-01, 5.5637e-03, 3.1327e-03,  ..., 3.4305e-03,
          2.9514e-04, 9.5827e-01],
         [1.0712e-01, 9.8331e-01, 3.1327e-03,  ..., 3.4305e-03,
          9.9911e-01, 1.3908e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 163:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6717e-01, 7.1455e-03, 1.7527e-02,  ..., 9.9631e-01,
          9.6671e-01, 2.6261e-02],
         [9.6540e-03, 7.1455e-03, 1.7527e-02,  ..., 1.2289e-03,
          8.5131e-03, 2.6261e-02],
         [1.3520e-02, 7.1455e-03, 1.7527e-02,  ..., 1.2289e-03,
          1.6264e-02, 2.6261e-02],
         [9.6540e-03, 9.7856e-01, 9.4742e-01,  ..., 1.2289e-03,
          8.5131e-03, 9.2122e-01]],
        [[9.9958e-01, 1.7112e-02, 6.7215e-03,  ..., 3.8674e-02,
          2.1660e-03, 4.4341e-03],
         [1.3291e-04, 1.7112e-02, 6.7215e-03,  ..., 3.8674e-02,
          2.1660e-03, 4.4341e-03],
         [1.5003e-04, 1.7112e-02, 6.7215e-03,  ..., 4.0861e-02,
          9.9350e-01, 9.8670e-01],
         [1.3291e-04, 9.4866e-01, 9.7984e-01,  ..., 8.8179e-01,
          2.1660e-03, 4.4341e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3288e-02, 3.7170e-03, 9.9656e-01,  ..., 9.9943e-01,
          1.3290e-02, 1.6993e-02],
         [4.3288e-02, 3.2115e-03, 1.0184e-03,  ..., 1.7679e-04,
          1.3290e-02, 1.6993e-02],
         [8.7014e-01, 3.2115e-03, 1.0184e-03,  ..., 1.7679e-04,
          9.6013e-01, 9.4902e-01],
         [4.3288e-02, 9.8986e-01, 1.4077e-03,  ..., 2.1164e-04,
          1.3290e-02, 1.6993e-02]],
        [[7.6385e-02, 1.2291e-02, 9.8590e-01,  ..., 9.9648e-01,
          4.1714e-04, 1.6154e-02],
         [1.4618e-01, 6.4026e-03, 3.8690e-03,  ..., 1.1724e-03,
          4.1714e-04, 1.6154e-02],
         [7.0733e-01, 6.4026e-03, 3.8690e-03,  ..., 1.1724e-03,
          4.1714e-04, 9.5154e-01],
         [7.0112e-02, 9.7490e-01, 6.3577e-03,  ..., 1.1724e-03,
          9.9875e-01, 1.6154e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 164:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8480e-01, 1.6385e-02, 1.1091e-02,  ..., 9.8288e-01,
          9.0049e-01, 2.0785e-02],
         [4.7509e-03, 1.6385e-02, 1.0030e-02,  ..., 4.9710e-03,
          2.3345e-02, 2.0785e-02],
         [5.6986e-03, 1.6385e-02, 1.0030e-02,  ..., 7.1801e-03,
          5.2821e-02, 2.1215e-02],
         [4.7509e-03, 9.5085e-01, 9.6885e-01,  ..., 4.9710e-03,
          2.3345e-02, 9.3722e-01]],
        [[9.9861e-01, 7.6731e-03, 1.3371e-02,  ..., 8.7494e-03,
          3.6710e-03, 6.5549e-03],
         [3.9773e-04, 7.6731e-03, 1.3371e-02,  ..., 8.7494e-03,
          3.6710e-03, 6.5549e-03],
         [5.9474e-04, 7.6731e-03, 1.3371e-02,  ..., 8.7494e-03,
          9.8899e-01, 9.8034e-01],
         [3.9773e-04, 9.7698e-01, 9.5989e-01,  ..., 9.7375e-01,
          3.6710e-03, 6.5549e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:18:30,999 [Process: 0] Synchronize training processes
2024-08-19 13:18:30,999 [Process: 0] Evaluating...
2024-08-19 13:18:31,001 [Process: 0] EPOCH 164:
2024-08-19 13:18:31,003 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:32,041 [Process: 0] Synchronize training processes
2024-08-19 13:18:32,042 [Process: 0] Evaluating...
2024-08-19 13:18:32,043 [Process: 0] EPOCH 165:
2024-08-19 13:18:32,045 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7459e-02, 2.4887e-02, 9.9842e-01,  ..., 9.9229e-01,
          1.1961e-02, 3.7650e-02],
         [4.7459e-02, 8.8890e-03, 5.2703e-04,  ..., 2.5689e-03,
          1.1961e-02, 3.6939e-02],
         [8.4392e-01, 8.8890e-03, 5.2703e-04,  ..., 2.5689e-03,
          9.6412e-01, 8.8847e-01],
         [6.1163e-02, 9.5733e-01, 5.2703e-04,  ..., 2.5689e-03,
          1.1961e-02, 3.6939e-02]],
        [[8.3157e-02, 5.6619e-03, 9.9561e-01,  ..., 9.9382e-01,
          2.9906e-04, 1.1721e-02],
         [9.3658e-02, 4.4083e-03, 1.4643e-03,  ..., 2.0592e-03,
          2.9906e-04, 1.1721e-02],
         [7.1341e-01, 4.4083e-03, 1.4643e-03,  ..., 2.0592e-03,
          2.9906e-04, 9.6484e-01],
         [1.0977e-01, 9.8552e-01, 1.4643e-03,  ..., 2.0592e-03,
          9.9910e-01, 1.1721e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 165:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9759, 0.0195, 0.0270,  ..., 0.9942, 0.8484, 0.0430],
         [0.0079, 0.0195, 0.0270,  ..., 0.0019, 0.0290, 0.0432],
         [0.0094, 0.0195, 0.0270,  ..., 0.0019, 0.0936, 0.0430],
         [0.0069, 0.9415, 0.9189,  ..., 0.0019, 0.0290, 0.8708]],
        [[0.9900, 0.0220, 0.0142,  ..., 0.0072, 0.0048, 0.0511],
         [0.0027, 0.0220, 0.0142,  ..., 0.0072, 0.0048, 0.0511],
         [0.0047, 0.0220, 0.0142,  ..., 0.0072, 0.9855, 0.8378],
         [0.0027, 0.9339, 0.9575,  ..., 0.9783, 0.0048, 0.0600]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.8355e-02, 5.5486e-03, 9.9718e-01,  ..., 9.9767e-01,
          1.9455e-02, 4.3164e-02],
         [8.8355e-02, 2.4617e-03, 9.4111e-04,  ..., 7.7721e-04,
          1.9455e-02, 4.3164e-02],
         [6.4791e-01, 2.4617e-03, 9.4111e-04,  ..., 7.7721e-04,
          9.4163e-01, 8.6636e-01],
         [1.7538e-01, 9.8953e-01, 9.4111e-04,  ..., 7.7721e-04,
          1.9455e-02, 4.7313e-02]],
        [[5.5437e-02, 3.0821e-03, 9.9592e-01,  ..., 9.9737e-01,
          5.6162e-03, 1.6922e-02],
         [6.5893e-02, 3.0821e-03, 1.3596e-03,  ..., 8.7671e-04,
          5.6162e-03, 1.6922e-02],
         [8.2323e-01, 3.0821e-03, 1.3596e-03,  ..., 8.7671e-04,
          5.6162e-03, 9.4923e-01],
         [5.5437e-02, 9.9075e-01, 1.3596e-03,  ..., 8.7671e-04,
          9.8315e-01, 1.6922e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 166:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9780, 0.0179, 0.0114,  ..., 0.9682, 0.9608, 0.0279],
         [0.0073, 0.0179, 0.0114,  ..., 0.0114, 0.0101, 0.0226],
         [0.0073, 0.0179, 0.0114,  ..., 0.0115, 0.0189, 0.0256],
         [0.0073, 0.9463, 0.9657,  ..., 0.0088, 0.0101, 0.9239]],
        [[0.9639, 0.0126, 0.0099,  ..., 0.0096, 0.0027, 0.0024],
         [0.0082, 0.0126, 0.0099,  ..., 0.0096, 0.0027, 0.0024],
         [0.0111, 0.0126, 0.0099,  ..., 0.0096, 0.9918, 0.9929],
         [0.0167, 0.9623, 0.9702,  ..., 0.9711, 0.0027, 0.0024]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:18:33,083 [Process: 0] Synchronize training processes
2024-08-19 13:18:33,083 [Process: 0] Evaluating...
2024-08-19 13:18:33,085 [Process: 0] EPOCH 166:
2024-08-19 13:18:33,087 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:34,125 [Process: 0] Synchronize training processes
2024-08-19 13:18:34,126 [Process: 0] Evaluating...
2024-08-19 13:18:34,128 [Process: 0] EPOCH 167:
2024-08-19 13:18:34,130 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8392e-02, 9.2217e-01, 9.9895e-01,  ..., 9.9136e-01,
          1.3132e-02, 2.7924e-02],
         [2.8392e-02, 2.8686e-02, 3.4839e-04,  ..., 2.8792e-03,
          1.3132e-02, 2.7924e-02],
         [9.1482e-01, 2.0555e-02, 3.4839e-04,  ..., 2.8792e-03,
          9.6060e-01, 9.1623e-01],
         [2.8392e-02, 2.8584e-02, 3.4839e-04,  ..., 2.8792e-03,
          1.3132e-02, 2.7924e-02]],
        [[6.5029e-02, 2.1156e-03, 9.9921e-01,  ..., 9.9413e-01,
          2.3382e-04, 1.5817e-02],
         [8.9113e-02, 2.1156e-03, 2.6462e-04,  ..., 2.1076e-03,
          2.3382e-04, 1.5817e-02],
         [7.7455e-01, 2.1156e-03, 2.6462e-04,  ..., 1.8802e-03,
          2.3382e-04, 9.5255e-01],
         [7.1308e-02, 9.9365e-01, 2.6462e-04,  ..., 1.8802e-03,
          9.9930e-01, 1.5817e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 167:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9734, 0.0104, 0.0320,  ..., 0.9871, 0.9094, 0.0214],
         [0.0113, 0.0104, 0.0320,  ..., 0.0038, 0.0264, 0.0187],
         [0.0081, 0.0104, 0.0376,  ..., 0.0052, 0.0433, 0.0187],
         [0.0072, 0.9688, 0.8983,  ..., 0.0038, 0.0209, 0.9412]],
        [[0.9031, 0.0566, 0.0183,  ..., 0.0165, 0.0040, 0.0063],
         [0.0152, 0.0566, 0.0183,  ..., 0.0165, 0.0040, 0.0063],
         [0.0264, 0.0719, 0.0183,  ..., 0.0165, 0.9880, 0.9811],
         [0.0552, 0.8148, 0.9451,  ..., 0.9506, 0.0040, 0.0063]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2215e-02, 1.4219e-01, 9.8810e-01,  ..., 9.9106e-01,
          2.0835e-02, 3.6692e-02],
         [1.2215e-02, 5.7205e-01, 3.9662e-03,  ..., 2.6362e-03,
          2.0835e-02, 3.6692e-02],
         [9.6336e-01, 1.1833e-01, 3.9662e-03,  ..., 2.6362e-03,
          9.3750e-01, 8.8992e-01],
         [1.2215e-02, 1.6743e-01, 3.9662e-03,  ..., 3.6711e-03,
          2.0835e-02, 3.6692e-02]],
        [[2.8669e-02, 2.9061e-03, 9.9873e-01,  ..., 9.5053e-01,
          1.9952e-04, 1.2316e-02],
         [2.8669e-02, 2.9061e-03, 4.2491e-04,  ..., 1.8016e-02,
          1.9952e-04, 1.2316e-02],
         [9.1253e-01, 2.9061e-03, 4.2491e-04,  ..., 1.5727e-02,
          1.9952e-04, 9.6305e-01],
         [3.0135e-02, 9.9128e-01, 4.2491e-04,  ..., 1.5727e-02,
          9.9940e-01, 1.2316e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 168:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2361e-01, 1.6831e-02, 3.3165e-02,  ..., 9.8387e-01,
          8.8192e-01, 1.5424e-02],
         [2.4045e-02, 1.6831e-02, 3.3165e-02,  ..., 5.3203e-03,
          5.3273e-02, 1.5424e-02],
         [3.3566e-02, 1.6831e-02, 3.3165e-02,  ..., 5.4857e-03,
          4.1159e-02, 1.5424e-02],
         [1.8777e-02, 9.4951e-01, 9.0050e-01,  ..., 5.3203e-03,
          2.3646e-02, 9.5373e-01]],
        [[9.9989e-01, 4.4540e-02, 3.6330e-02,  ..., 1.6184e-02,
          2.1534e-03, 2.9786e-03],
         [3.5306e-05, 4.4540e-02, 3.6330e-02,  ..., 1.6184e-02,
          2.1534e-03, 2.9786e-03],
         [3.8403e-05, 4.6771e-02, 3.6330e-02,  ..., 1.6184e-02,
          9.9354e-01, 9.9106e-01],
         [3.5306e-05, 8.6415e-01, 8.9101e-01,  ..., 9.5145e-01,
          2.1534e-03, 2.9786e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:18:35,169 [Process: 0] Synchronize training processes
2024-08-19 13:18:35,169 [Process: 0] Evaluating...
2024-08-19 13:18:35,171 [Process: 0] EPOCH 168:
2024-08-19 13:18:35,172 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:36,212 [Process: 0] Synchronize training processes
2024-08-19 13:18:36,212 [Process: 0] Evaluating...
2024-08-19 13:18:36,214 [Process: 0] EPOCH 169:
2024-08-19 13:18:36,216 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5045e-02, 3.3236e-02, 9.9180e-01,  ..., 9.9650e-01,
          1.1816e-02, 2.1077e-02],
         [2.5045e-02, 7.6872e-03, 2.2989e-03,  ..., 1.0335e-03,
          1.1816e-02, 2.1077e-02],
         [9.2486e-01, 7.6872e-03, 2.2989e-03,  ..., 1.0335e-03,
          9.6455e-01, 9.3677e-01],
         [2.5045e-02, 9.5139e-01, 3.5978e-03,  ..., 1.4296e-03,
          1.1816e-02, 2.1077e-02]],
        [[1.2193e-01, 7.2778e-04, 9.5696e-01,  ..., 9.9251e-01,
          2.4114e-04, 1.8304e-02],
         [2.7686e-01, 7.2778e-04, 2.9950e-02,  ..., 4.4057e-03,
          2.4114e-04, 1.8304e-02],
         [4.7927e-01, 7.2778e-04, 6.5440e-03,  ..., 1.5435e-03,
          2.4114e-04, 9.4509e-01],
         [1.2193e-01, 9.9782e-01, 6.5440e-03,  ..., 1.5435e-03,
          9.9928e-01, 1.8304e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 169:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.0296e-01, 2.4953e-02, 4.4098e-02,  ..., 9.9200e-01,
          9.3948e-01, 7.8165e-03],
         [1.8477e-01, 2.4953e-02, 6.3593e-02,  ..., 2.3118e-03,
          2.9679e-02, 7.8165e-03],
         [7.6443e-02, 2.4953e-02, 4.4098e-02,  ..., 3.3756e-03,
          2.1015e-02, 7.8165e-03],
         [3.5829e-02, 9.2514e-01, 8.4821e-01,  ..., 2.3118e-03,
          9.8231e-03, 9.7655e-01]],
        [[9.9992e-01, 1.3738e-02, 3.6232e-02,  ..., 4.4653e-02,
          4.4191e-04, 3.5366e-03],
         [2.6520e-05, 1.3738e-02, 3.6232e-02,  ..., 4.4653e-02,
          4.4191e-04, 3.5366e-03],
         [2.6520e-05, 1.3738e-02, 3.6232e-02,  ..., 4.4653e-02,
          9.9867e-01, 9.8939e-01],
         [2.6520e-05, 9.5879e-01, 8.9130e-01,  ..., 8.6604e-01,
          4.4191e-04, 3.5366e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3221e-02, 5.6428e-03, 9.9506e-01,  ..., 9.9191e-01,
          1.1333e-02, 1.1676e-02],
         [3.3221e-02, 5.6428e-03, 1.4790e-03,  ..., 2.6971e-03,
          1.1333e-02, 1.1676e-02],
         [8.9981e-01, 5.6428e-03, 1.4790e-03,  ..., 2.6971e-03,
          9.6600e-01, 9.6497e-01],
         [3.3748e-02, 9.8307e-01, 1.9822e-03,  ..., 2.6971e-03,
          1.1333e-02, 1.1676e-02]],
        [[1.0830e-01, 1.5482e-02, 9.7147e-01,  ..., 9.5097e-01,
          1.0527e-05, 1.0733e-02],
         [2.1637e-01, 1.5482e-02, 1.0650e-02,  ..., 1.6343e-02,
          1.0527e-05, 1.0733e-02],
         [5.5508e-01, 1.5482e-02, 8.9391e-03,  ..., 1.6343e-02,
          1.0527e-05, 9.6780e-01],
         [1.2024e-01, 9.5355e-01, 8.9391e-03,  ..., 1.6343e-02,
          9.9997e-01, 1.0733e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 170:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.9637e-01, 1.6988e-02, 3.1822e-02,  ..., 9.8717e-01,
          8.4805e-01, 1.7448e-02],
         [4.2672e-02, 1.6988e-02, 3.1001e-02,  ..., 3.6830e-03,
          2.5748e-02, 1.7448e-02],
         [1.1828e-01, 1.6988e-02, 3.1001e-02,  ..., 5.4642e-03,
          1.0046e-01, 1.7448e-02],
         [4.2672e-02, 9.4903e-01, 9.0618e-01,  ..., 3.6830e-03,
          2.5748e-02, 9.4765e-01]],
        [[9.9974e-01, 8.3088e-03, 2.1156e-02,  ..., 4.1515e-03,
          1.3783e-03, 2.4758e-03],
         [8.5651e-05, 8.3088e-03, 2.8349e-02,  ..., 4.1515e-03,
          1.3783e-03, 2.4758e-03],
         [8.5651e-05, 8.3088e-03, 2.1156e-02,  ..., 4.1515e-03,
          9.9587e-01, 9.9257e-01],
         [8.5651e-05, 9.7507e-01, 9.2934e-01,  ..., 9.8755e-01,
          1.3783e-03, 2.4758e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:18:37,256 [Process: 0] Synchronize training processes
2024-08-19 13:18:37,257 [Process: 0] Evaluating...
2024-08-19 13:18:37,258 [Process: 0] EPOCH 170:
2024-08-19 13:18:37,260 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:38,299 [Process: 0] Synchronize training processes
2024-08-19 13:18:38,299 [Process: 0] Evaluating...
2024-08-19 13:18:38,301 [Process: 0] EPOCH 171:
2024-08-19 13:18:38,303 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4265e-02, 5.1252e-01, 9.9365e-01,  ..., 9.8440e-01,
          1.0271e-02, 2.4597e-02],
         [1.4265e-02, 5.1564e-02, 2.0040e-03,  ..., 3.7138e-03,
          1.0271e-02, 2.4597e-02],
         [9.5721e-01, 5.1564e-02, 2.0040e-03,  ..., 3.7138e-03,
          9.6919e-01, 9.2621e-01],
         [1.4265e-02, 3.8435e-01, 2.3405e-03,  ..., 8.1719e-03,
          1.0271e-02, 2.4597e-02]],
        [[8.0216e-02, 4.8897e-03, 9.8920e-01,  ..., 9.9767e-01,
          6.9038e-03, 2.7347e-02],
         [8.0216e-02, 4.8897e-03, 3.5984e-03,  ..., 7.7761e-04,
          3.2448e-03, 2.7347e-02],
         [7.3629e-01, 4.8897e-03, 3.5984e-03,  ..., 7.7761e-04,
          3.2448e-03, 9.1796e-01],
         [1.0328e-01, 9.8533e-01, 3.5984e-03,  ..., 7.7761e-04,
          9.8661e-01, 2.7347e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 171:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7149e-01, 1.0624e-02, 1.4515e-02,  ..., 9.5278e-01,
          9.0045e-01, 1.6588e-02],
         [9.0577e-03, 1.0624e-02, 1.4515e-02,  ..., 1.4023e-02,
          3.3503e-02, 1.6588e-02],
         [1.0396e-02, 1.0624e-02, 1.4515e-02,  ..., 1.9177e-02,
          3.9686e-02, 1.6588e-02],
         [9.0577e-03, 9.6813e-01, 9.5646e-01,  ..., 1.4023e-02,
          2.6362e-02, 9.5023e-01]],
        [[9.9916e-01, 1.9620e-02, 1.9605e-02,  ..., 3.0138e-02,
          1.1072e-03, 4.8230e-03],
         [2.7845e-04, 1.9620e-02, 1.9605e-02,  ..., 2.8265e-02,
          1.1072e-03, 4.8230e-03],
         [2.7845e-04, 1.9620e-02, 1.9605e-02,  ..., 2.8265e-02,
          9.9668e-01, 9.8553e-01],
         [2.7845e-04, 9.4114e-01, 9.4118e-01,  ..., 9.1333e-01,
          1.1072e-03, 4.8230e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5731e-02, 9.9766e-01, 9.6851e-01,  ..., 9.9316e-01,
          1.0738e-02, 2.4127e-02],
         [2.5000e-02, 6.2588e-04, 7.2325e-03,  ..., 2.2805e-03,
          1.0738e-02, 2.4127e-02],
         [9.2427e-01, 6.2588e-04, 7.2325e-03,  ..., 2.2805e-03,
          9.6778e-01, 9.2762e-01],
         [2.5000e-02, 1.0847e-03, 1.7025e-02,  ..., 2.2805e-03,
          1.0738e-02, 2.4127e-02]],
        [[4.5916e-02, 4.2940e-03, 9.9739e-01,  ..., 9.8087e-01,
          1.3717e-03, 2.1029e-02],
         [4.5916e-02, 4.2940e-03, 8.6963e-04,  ..., 5.7941e-03,
          1.3717e-03, 2.1029e-02],
         [8.5604e-01, 4.2940e-03, 8.6963e-04,  ..., 5.7941e-03,
          1.3717e-03, 9.3691e-01],
         [5.2125e-02, 9.8712e-01, 8.6963e-04,  ..., 7.5418e-03,
          9.9588e-01, 2.1029e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 172:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:39,346 [Process: 0] Synchronize training processes
2024-08-19 13:18:39,346 [Process: 0] Evaluating...
2024-08-19 13:18:39,772 [Process: 0] EPOCH 172:
2024-08-19 13:18:39,774 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9176e-01, 1.4953e-02, 1.5611e-02,  ..., 9.8438e-01,
          9.0866e-01, 2.4271e-02],
         [2.7469e-03, 1.9832e-02, 1.5611e-02,  ..., 5.1625e-03,
          2.2799e-02, 2.4271e-02],
         [2.7469e-03, 1.4953e-02, 1.5611e-02,  ..., 5.2932e-03,
          3.9751e-02, 2.4271e-02],
         [2.7469e-03, 9.5026e-01, 9.5317e-01,  ..., 5.1625e-03,
          2.8791e-02, 9.2719e-01]],
        [[9.9997e-01, 1.8505e-02, 1.4431e-02,  ..., 4.2775e-02,
          1.9791e-03, 5.9061e-03],
         [8.7958e-06, 1.8505e-02, 1.4431e-02,  ..., 4.2775e-02,
          1.9791e-03, 5.9061e-03],
         [8.7958e-06, 2.1821e-02, 1.4431e-02,  ..., 5.0607e-02,
          9.9406e-01, 9.8228e-01],
         [8.7958e-06, 9.4117e-01, 9.5671e-01,  ..., 8.6384e-01,
          1.9791e-03, 5.9061e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0763e-01, 9.7740e-01, 9.9551e-01,  ..., 9.9819e-01,
          3.1553e-02, 7.5025e-03],
         [1.0486e-01, 6.9025e-03, 1.4969e-03,  ..., 6.0246e-04,
          3.1553e-02, 7.5025e-03],
         [4.9767e-01, 6.9025e-03, 1.4969e-03,  ..., 6.0246e-04,
          9.0534e-01, 9.7749e-01],
         [2.8984e-01, 8.7997e-03, 1.4969e-03,  ..., 6.0246e-04,
          3.1553e-02, 7.5025e-03]],
        [[4.3518e-02, 3.6355e-03, 9.9579e-01,  ..., 9.9351e-01,
          4.7586e-04, 8.0422e-03],
         [4.3518e-02, 4.8990e-03, 1.4019e-03,  ..., 2.1647e-03,
          4.7586e-04, 8.0422e-03],
         [8.5219e-01, 3.6355e-03, 1.4019e-03,  ..., 2.1647e-03,
          4.7586e-04, 9.7587e-01],
         [6.0776e-02, 9.8783e-01, 1.4019e-03,  ..., 2.1647e-03,
          9.9857e-01, 8.0422e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 173:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8917e-01, 1.4618e-02, 9.9485e-03,  ..., 9.7987e-01,
          8.9263e-01, 9.7173e-03],
         [3.4554e-03, 1.4618e-02, 9.9485e-03,  ..., 6.7315e-03,
          2.7051e-02, 9.7173e-03],
         [3.9171e-03, 1.4618e-02, 9.9485e-03,  ..., 6.8110e-03,
          5.3266e-02, 1.1066e-02],
         [3.4554e-03, 9.5615e-01, 9.7015e-01,  ..., 6.5871e-03,
          2.7051e-02, 9.6950e-01]],
        [[9.9999e-01, 1.8178e-02, 3.6491e-02,  ..., 1.1907e-02,
          4.2590e-03, 5.4841e-03],
         [4.2357e-06, 1.8178e-02, 3.6491e-02,  ..., 1.1907e-02,
          4.2590e-03, 5.4841e-03],
         [4.2357e-06, 1.8178e-02, 3.6491e-02,  ..., 1.2531e-02,
          9.8722e-01, 9.8355e-01],
         [4.2357e-06, 9.4547e-01, 8.9053e-01,  ..., 9.6366e-01,
          4.2590e-03, 5.4841e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6603e-02, 9.9316e-01, 9.9826e-01,  ..., 9.9932e-01,
          2.4175e-02, 1.7939e-02],
         [2.6603e-02, 2.2793e-03, 5.7928e-04,  ..., 2.2605e-04,
          2.4175e-02, 1.7939e-02],
         [9.2019e-01, 2.2793e-03, 5.7928e-04,  ..., 2.2605e-04,
          9.2747e-01, 9.4618e-01],
         [2.6603e-02, 2.2793e-03, 5.7928e-04,  ..., 2.2605e-04,
          2.4175e-02, 1.7939e-02]],
        [[4.4018e-02, 3.3985e-04, 9.8500e-01,  ..., 9.6648e-01,
          1.4784e-02, 1.9272e-02],
         [4.4018e-02, 2.4009e-04, 4.9987e-03,  ..., 1.2602e-02,
          1.4784e-02, 1.9272e-02],
         [8.5903e-01, 2.4009e-04, 4.9987e-03,  ..., 1.0460e-02,
          1.4784e-02, 9.4218e-01],
         [5.2934e-02, 9.9918e-01, 4.9987e-03,  ..., 1.0460e-02,
          9.5565e-01, 1.9272e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:18:40,807 [Process: 0] Synchronize training processes
2024-08-19 13:18:40,807 [Process: 0] Evaluating...
2024-08-19 13:18:40,809 [Process: 0] EPOCH 173:
2024-08-19 13:18:40,811 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:41,850 [Process: 0] Synchronize training processes
2024-08-19 13:18:41,850 [Process: 0] Evaluating...
2024-08-19 13:18:41,852 [Process: 0] EPOCH 174:
2024-08-19 13:18:41,854 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 174:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9490, 0.0254, 0.0248,  ..., 0.9571, 0.8316, 0.0114],
         [0.0134, 0.0254, 0.0248,  ..., 0.0170, 0.0594, 0.0114],
         [0.0241, 0.0254, 0.0292,  ..., 0.0156, 0.0583, 0.0114],
         [0.0134, 0.9238, 0.9211,  ..., 0.0103, 0.0507, 0.9658]],
        [[0.9310, 0.0180, 0.0213,  ..., 0.0249, 0.0040, 0.0090],
         [0.0198, 0.0180, 0.0213,  ..., 0.0249, 0.0040, 0.0090],
         [0.0200, 0.0180, 0.0213,  ..., 0.0249, 0.9881, 0.9729],
         [0.0291, 0.9461, 0.9360,  ..., 0.9254, 0.0040, 0.0090]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3624e-01, 9.7287e-01, 9.9231e-01,  ..., 9.9602e-01,
          8.2371e-03, 8.4876e-03],
         [1.1437e-01, 4.0805e-03, 2.5631e-03,  ..., 1.3268e-03,
          8.2371e-03, 8.4876e-03],
         [5.0257e-01, 4.0805e-03, 2.5631e-03,  ..., 1.3268e-03,
          9.7529e-01, 9.7454e-01],
         [2.4682e-01, 1.8968e-02, 2.5631e-03,  ..., 1.3268e-03,
          8.2371e-03, 8.4876e-03]],
        [[2.7174e-02, 5.7550e-04, 9.9569e-01,  ..., 9.6232e-01,
          1.0434e-03, 8.9163e-03],
         [2.7174e-02, 5.7550e-04, 1.4382e-03,  ..., 2.2680e-02,
          1.0434e-03, 8.9163e-03],
         [9.0976e-01, 5.7550e-04, 1.4382e-03,  ..., 7.4993e-03,
          1.0434e-03, 9.7325e-01],
         [3.5891e-02, 9.9827e-01, 1.4382e-03,  ..., 7.4993e-03,
          9.9687e-01, 8.9163e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 175:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7952e-01, 4.7426e-02, 2.4775e-02,  ..., 9.9552e-01,
          6.2689e-01, 4.7195e-02],
         [5.8943e-03, 3.2919e-02, 1.9947e-02,  ..., 1.2981e-03,
          8.0554e-02, 3.6718e-02],
         [8.6927e-03, 3.2919e-02, 1.9947e-02,  ..., 1.8787e-03,
          1.2227e-01, 3.9999e-02],
         [5.8943e-03, 8.8674e-01, 9.3533e-01,  ..., 1.2981e-03,
          1.7028e-01, 8.7609e-01]],
        [[9.9750e-01, 1.6342e-02, 3.9694e-03,  ..., 4.9815e-03,
          2.3875e-03, 1.6742e-02],
         [8.3439e-04, 1.6342e-02, 3.9694e-03,  ..., 4.9815e-03,
          2.3875e-03, 1.6742e-02],
         [8.3439e-04, 1.6859e-02, 3.9694e-03,  ..., 4.9815e-03,
          9.9284e-01, 9.4977e-01],
         [8.3439e-04, 9.5046e-01, 9.8809e-01,  ..., 9.8506e-01,
          2.3875e-03, 1.6742e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0662e-02, 9.9121e-01, 9.6294e-01,  ..., 9.6641e-01,
          1.1213e-02, 1.7649e-02],
         [4.0615e-02, 2.9001e-03, 7.1854e-03,  ..., 9.9943e-03,
          1.1213e-02, 1.7649e-02],
         [8.7589e-01, 2.9001e-03, 7.1854e-03,  ..., 9.9943e-03,
          9.6636e-01, 9.4705e-01],
         [4.2836e-02, 2.9877e-03, 2.2690e-02,  ..., 1.3606e-02,
          1.1213e-02, 1.7649e-02]],
        [[1.9380e-01, 1.6680e-02, 9.9080e-01,  ..., 9.9785e-01,
          1.4803e-04, 1.8322e-02],
         [7.0308e-01, 1.0727e-02, 2.7850e-03,  ..., 7.1576e-04,
          9.9369e-05, 1.8322e-02],
         [5.0982e-02, 1.0727e-02, 2.7850e-03,  ..., 7.1576e-04,
          9.9369e-05, 9.4273e-01],
         [5.2138e-02, 9.6187e-01, 3.6257e-03,  ..., 7.1576e-04,
          9.9965e-01, 2.0628e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:18:42,897 [Process: 0] Synchronize training processes
2024-08-19 13:18:42,897 [Process: 0] Evaluating...
2024-08-19 13:18:42,899 [Process: 0] EPOCH 175:
2024-08-19 13:18:42,900 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:43,938 [Process: 0] Synchronize training processes
2024-08-19 13:18:43,938 [Process: 0] Evaluating...
2024-08-19 13:18:43,940 [Process: 0] EPOCH 176:
2024-08-19 13:18:43,941 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 176:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9879, 0.0134, 0.0133,  ..., 0.9795, 0.6666, 0.0142],
         [0.0040, 0.0134, 0.0133,  ..., 0.0059, 0.0794, 0.0129],
         [0.0041, 0.0134, 0.0141,  ..., 0.0087, 0.1172, 0.0129],
         [0.0040, 0.9597, 0.9593,  ..., 0.0059, 0.1368, 0.9599]],
        [[0.9930, 0.0060, 0.0120,  ..., 0.0458, 0.0012, 0.0098],
         [0.0023, 0.0060, 0.0120,  ..., 0.0458, 0.0012, 0.0098],
         [0.0023, 0.0060, 0.0120,  ..., 0.0584, 0.9965, 0.9707],
         [0.0023, 0.9820, 0.9639,  ..., 0.8501, 0.0012, 0.0098]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9167e-02, 9.4330e-01, 9.9550e-01,  ..., 9.9491e-01,
          2.5526e-02, 3.5562e-02],
         [1.9167e-02, 1.4874e-02, 1.4998e-03,  ..., 2.1670e-03,
          2.5526e-02, 3.5562e-02],
         [9.4250e-01, 1.4874e-02, 1.4998e-03,  ..., 1.4603e-03,
          9.2342e-01, 8.9331e-01],
         [1.9167e-02, 2.6949e-02, 1.4998e-03,  ..., 1.4603e-03,
          2.5526e-02, 3.5562e-02]],
        [[2.7744e-02, 1.0182e-03, 9.8753e-01,  ..., 9.7267e-01,
          3.8927e-04, 8.0259e-03],
         [2.7744e-02, 1.0182e-03, 4.1575e-03,  ..., 9.6451e-03,
          3.8927e-04, 8.0259e-03],
         [9.1488e-01, 1.0182e-03, 4.1575e-03,  ..., 8.8418e-03,
          3.8927e-04, 9.7592e-01],
         [2.9631e-02, 9.9695e-01, 4.1575e-03,  ..., 8.8418e-03,
          9.9883e-01, 8.0259e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 177:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8889e-01, 9.9582e-03, 1.2749e-02,  ..., 9.9054e-01,
          4.7327e-01, 1.1517e-02],
         [3.5283e-03, 9.9582e-03, 1.2749e-02,  ..., 3.1539e-03,
          8.9804e-02, 1.1517e-02],
         [4.0499e-03, 9.9582e-03, 1.2749e-02,  ..., 3.1539e-03,
          1.0281e-01, 1.1517e-02],
         [3.5283e-03, 9.7013e-01, 9.6175e-01,  ..., 3.1539e-03,
          3.3412e-01, 9.6545e-01]],
        [[9.9832e-01, 2.4212e-02, 5.6236e-03,  ..., 2.7407e-02,
          2.6013e-03, 1.2988e-02],
         [4.8193e-04, 2.4212e-02, 5.6236e-03,  ..., 2.7407e-02,
          2.6013e-03, 1.2988e-02],
         [7.1860e-04, 2.4212e-02, 5.6236e-03,  ..., 2.7407e-02,
          9.9220e-01, 9.6104e-01],
         [4.8193e-04, 9.2736e-01, 9.8313e-01,  ..., 9.1778e-01,
          2.6013e-03, 1.2988e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:18:44,983 [Process: 0] Synchronize training processes
2024-08-19 13:18:44,984 [Process: 0] Evaluating...
2024-08-19 13:18:44,985 [Process: 0] EPOCH 177:
2024-08-19 13:18:44,987 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:46,025 [Process: 0] Synchronize training processes
2024-08-19 13:18:46,025 [Process: 0] Evaluating...
2024-08-19 13:18:46,027 [Process: 0] EPOCH 178:
2024-08-19 13:18:46,029 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3901e-02, 9.0529e-01, 9.9806e-01,  ..., 9.9007e-01,
          2.5924e-02, 2.5492e-02],
         [2.3901e-02, 6.1891e-02, 6.4623e-04,  ..., 3.3099e-03,
          2.5924e-02, 2.5492e-02],
         [9.2823e-01, 1.6407e-02, 6.4623e-04,  ..., 3.3099e-03,
          9.2130e-01, 9.2352e-01],
         [2.3964e-02, 1.6407e-02, 6.4623e-04,  ..., 3.3099e-03,
          2.6851e-02, 2.5492e-02]],
        [[3.5769e-02, 3.4627e-03, 9.7192e-01,  ..., 9.7479e-01,
          9.7976e-04, 1.0353e-02],
         [3.5769e-02, 3.4627e-03, 8.9028e-03,  ..., 8.4031e-03,
          9.7976e-04, 1.0353e-02],
         [8.9217e-01, 3.4627e-03, 8.9028e-03,  ..., 8.4031e-03,
          9.7976e-04, 9.6894e-01],
         [3.6296e-02, 9.8961e-01, 1.0277e-02,  ..., 8.4031e-03,
          9.9706e-01, 1.0353e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 178:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8431, 0.0124, 0.0094,  ..., 0.9803, 0.9073, 0.0097],
         [0.1052, 0.0124, 0.0086,  ..., 0.0061, 0.0233, 0.0097],
         [0.0296, 0.0124, 0.0086,  ..., 0.0075, 0.0461, 0.0097],
         [0.0221, 0.9629, 0.9734,  ..., 0.0061, 0.0233, 0.9709]],
        [[0.7173, 0.0101, 0.0155,  ..., 0.0045, 0.0014, 0.0085],
         [0.0348, 0.0101, 0.0155,  ..., 0.0045, 0.0014, 0.0085],
         [0.1581, 0.0101, 0.0155,  ..., 0.0045, 0.9957, 0.9746],
         [0.0898, 0.9697, 0.9535,  ..., 0.9865, 0.0014, 0.0085]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6022e-02, 8.0592e-02, 9.4727e-01,  ..., 9.3820e-01,
          3.9610e-03, 3.6638e-02],
         [1.6022e-02, 1.6654e-02, 1.6015e-02,  ..., 1.8992e-02,
          3.9610e-03, 3.6638e-02],
         [9.5193e-01, 1.6654e-02, 1.6015e-02,  ..., 1.8992e-02,
          9.8812e-01, 8.8078e-01],
         [1.6022e-02, 8.8610e-01, 2.0699e-02,  ..., 2.3814e-02,
          3.9610e-03, 4.5941e-02]],
        [[3.5807e-02, 6.2567e-04, 9.9778e-01,  ..., 9.9338e-01,
          1.5703e-04, 2.5904e-02],
         [3.5807e-02, 6.2567e-04, 7.4155e-04,  ..., 2.2067e-03,
          1.5703e-04, 2.5904e-02],
         [8.8253e-01, 6.2567e-04, 7.4155e-04,  ..., 2.2067e-03,
          1.5703e-04, 9.2184e-01],
         [4.5861e-02, 9.9812e-01, 7.4155e-04,  ..., 2.2067e-03,
          9.9953e-01, 2.6351e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 179:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9065e-01, 8.2661e-03, 1.4759e-02,  ..., 9.7030e-01,
          9.5169e-01, 8.5121e-03],
         [3.5759e-03, 8.2661e-03, 1.4759e-02,  ..., 8.1067e-03,
          1.3695e-02, 8.5121e-03],
         [2.9907e-03, 8.2661e-03, 1.4759e-02,  ..., 1.3492e-02,
          2.0919e-02, 8.5121e-03],
         [2.7831e-03, 9.7520e-01, 9.5572e-01,  ..., 8.1067e-03,
          1.3695e-02, 9.7446e-01]],
        [[7.3175e-01, 1.1566e-02, 4.4344e-02,  ..., 1.1614e-02,
          2.7853e-04, 3.6624e-03],
         [1.2657e-01, 1.1566e-02, 4.4344e-02,  ..., 1.1614e-02,
          2.7853e-04, 3.6624e-03],
         [7.3401e-02, 1.1566e-02, 4.4344e-02,  ..., 1.1614e-02,
          9.9916e-01, 9.8901e-01],
         [6.8272e-02, 9.6530e-01, 8.6697e-01,  ..., 9.6516e-01,
          2.7853e-04, 3.6624e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:18:47,071 [Process: 0] Synchronize training processes
2024-08-19 13:18:47,071 [Process: 0] Evaluating...
2024-08-19 13:18:47,073 [Process: 0] EPOCH 179:
2024-08-19 13:18:47,075 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:48,117 [Process: 0] Synchronize training processes
2024-08-19 13:18:48,117 [Process: 0] Evaluating...
2024-08-19 13:18:48,119 [Process: 0] EPOCH 180:
2024-08-19 13:18:48,121 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1902e-02, 1.0479e-01, 9.7961e-01,  ..., 9.9896e-01,
          2.5183e-02, 6.9076e-03],
         [2.1902e-02, 1.3273e-02, 6.7967e-03,  ..., 3.4728e-04,
          2.5183e-02, 6.9076e-03],
         [9.3342e-01, 1.3273e-02, 6.7967e-03,  ..., 3.4728e-04,
          9.2445e-01, 9.7928e-01],
         [2.2776e-02, 8.6866e-01, 6.7967e-03,  ..., 3.4728e-04,
          2.5183e-02, 6.9076e-03]],
        [[1.7114e-02, 4.5233e-04, 9.8027e-01,  ..., 9.9567e-01,
          5.7186e-03, 1.6511e-02],
         [1.7114e-02, 4.5233e-04, 6.5313e-03,  ..., 1.4418e-03,
          5.4796e-03, 1.6511e-02],
         [9.4866e-01, 4.5233e-04, 6.5313e-03,  ..., 1.4418e-03,
          5.4796e-03, 9.5047e-01],
         [1.7114e-02, 9.9864e-01, 6.6713e-03,  ..., 1.4418e-03,
          9.8332e-01, 1.6511e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 180:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9916, 0.0150, 0.0118,  ..., 0.9721, 0.9774, 0.0191],
         [0.0025, 0.0150, 0.0118,  ..., 0.0077, 0.0065, 0.0191],
         [0.0035, 0.0150, 0.0118,  ..., 0.0126, 0.0096, 0.0191],
         [0.0025, 0.9550, 0.9647,  ..., 0.0077, 0.0065, 0.9426]],
        [[0.9132, 0.0123, 0.0250,  ..., 0.0148, 0.0045, 0.0055],
         [0.0151, 0.0123, 0.0250,  ..., 0.0148, 0.0045, 0.0055],
         [0.0566, 0.0123, 0.0250,  ..., 0.0148, 0.9864, 0.9836],
         [0.0151, 0.9632, 0.9250,  ..., 0.9557, 0.0045, 0.0055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8709e-02, 6.2365e-03, 9.9909e-01,  ..., 9.5692e-01,
          2.1294e-02, 1.0001e-02],
         [2.6320e-02, 3.9508e-03, 3.0439e-04,  ..., 8.8483e-03,
          2.1294e-02, 1.0001e-02],
         [9.1865e-01, 3.9508e-03, 3.0439e-04,  ..., 8.8483e-03,
          9.3612e-01, 9.7000e-01],
         [2.6320e-02, 9.8586e-01, 3.0439e-04,  ..., 2.5388e-02,
          2.1294e-02, 1.0001e-02]],
        [[2.1219e-02, 1.0327e-03, 9.9295e-01,  ..., 9.9406e-01,
          1.3319e-04, 9.6596e-03],
         [2.1219e-02, 1.0327e-03, 2.2012e-03,  ..., 1.9806e-03,
          1.3319e-04, 9.6596e-03],
         [9.3634e-01, 1.0327e-03, 2.2012e-03,  ..., 1.9806e-03,
          1.3319e-04, 9.7102e-01],
         [2.1219e-02, 9.9690e-01, 2.6455e-03,  ..., 1.9806e-03,
          9.9960e-01, 9.6596e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 181:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9682, 0.0382, 0.0339,  ..., 0.9697, 0.9767, 0.0386],
         [0.0094, 0.0382, 0.0333,  ..., 0.0077, 0.0072, 0.0265],
         [0.0129, 0.0382, 0.0333,  ..., 0.0150, 0.0094, 0.0265],
         [0.0094, 0.8853, 0.8995,  ..., 0.0077, 0.0068, 0.9084]],
        [[0.9253, 0.0103, 0.0356,  ..., 0.0848, 0.0023, 0.0021],
         [0.0150, 0.0103, 0.0540,  ..., 0.0615, 0.0023, 0.0021],
         [0.0448, 0.0103, 0.0356,  ..., 0.0896, 0.9931, 0.9936],
         [0.0150, 0.9690, 0.8749,  ..., 0.7641, 0.0023, 0.0021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:18:49,162 [Process: 0] Synchronize training processes
2024-08-19 13:18:49,162 [Process: 0] Evaluating...
2024-08-19 13:18:49,164 [Process: 0] EPOCH 181:
2024-08-19 13:18:49,166 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:50,206 [Process: 0] Synchronize training processes
2024-08-19 13:18:50,206 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7149e-02, 6.2780e-03, 9.9578e-01,  ..., 9.9514e-01,
          1.0872e-02, 9.6598e-03],
         [2.7149e-02, 3.5004e-03, 1.1564e-03,  ..., 1.6186e-03,
          1.0872e-02, 9.6598e-03],
         [9.1599e-01, 3.5004e-03, 1.1564e-03,  ..., 1.6186e-03,
          9.6738e-01, 9.7102e-01],
         [2.9712e-02, 9.8672e-01, 1.9045e-03,  ..., 1.6186e-03,
          1.0872e-02, 9.6598e-03]],
        [[1.3289e-02, 3.8578e-03, 9.9390e-01,  ..., 9.8866e-01,
          2.2433e-04, 2.0611e-02],
         [1.3289e-02, 3.8578e-03, 2.0329e-03,  ..., 3.7800e-03,
          2.2433e-04, 2.0611e-02],
         [9.6013e-01, 3.8578e-03, 2.0329e-03,  ..., 3.7800e-03,
          2.2433e-04, 9.3817e-01],
         [1.3289e-02, 9.8843e-01, 2.0329e-03,  ..., 3.7800e-03,
          9.9933e-01, 2.0611e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 182:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9097e-01, 2.0827e-02, 2.7465e-02,  ..., 9.8600e-01,
          9.8630e-01, 1.3882e-02],
         [2.9164e-03, 1.9123e-02, 2.7465e-02,  ..., 3.9728e-03,
          3.7162e-03, 1.3882e-02],
         [3.1980e-03, 1.9123e-02, 2.7465e-02,  ..., 6.0504e-03,
          6.2687e-03, 1.3882e-02],
         [2.9164e-03, 9.4093e-01, 9.1760e-01,  ..., 3.9728e-03,
          3.7162e-03, 9.5835e-01]],
        [[9.9988e-01, 1.0420e-02, 2.2309e-02,  ..., 1.1154e-02,
          2.7243e-03, 8.5365e-03],
         [3.9690e-05, 1.0420e-02, 2.2309e-02,  ..., 1.1154e-02,
          2.7243e-03, 8.5365e-03],
         [3.9690e-05, 1.0420e-02, 2.2309e-02,  ..., 1.1154e-02,
          9.9183e-01, 9.7439e-01],
         [3.9690e-05, 9.6874e-01, 9.3307e-01,  ..., 9.6654e-01,
          2.7243e-03, 8.5365e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4735e-02, 3.0105e-02, 9.9188e-01,  ..., 9.9320e-01,
          9.9595e-03, 2.4277e-02],
         [3.4735e-02, 1.6921e-02, 2.5453e-03,  ..., 2.1869e-03,
          9.9595e-03, 2.4277e-02],
         [8.9097e-01, 1.6921e-02, 2.5453e-03,  ..., 2.1869e-03,
          9.7012e-01, 9.2717e-01],
         [3.9561e-02, 9.3605e-01, 3.0298e-03,  ..., 2.4287e-03,
          9.9595e-03, 2.4277e-02]],
        [[1.0469e-02, 1.0102e-03, 9.8658e-01,  ..., 9.9762e-01,
          3.6510e-04, 1.1993e-02],
         [1.0469e-02, 1.0102e-03, 4.4745e-03,  ..., 7.9324e-04,
          3.6510e-04, 1.1993e-02],
         [9.6859e-01, 1.0102e-03, 4.4745e-03,  ..., 7.9324e-04,
          3.6510e-04, 9.6402e-01],
         [1.0469e-02, 9.9697e-01, 4.4745e-03,  ..., 7.9324e-04,
          9.9890e-01, 1.1993e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 183:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:50,633 [Process: 0] EPOCH 182:
2024-08-19 13:18:50,637 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:51,673 [Process: 0] Synchronize training processes
2024-08-19 13:18:51,673 [Process: 0] Evaluating...
2024-08-19 13:18:51,675 [Process: 0] EPOCH 183:
2024-08-19 13:18:51,677 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9446e-01, 1.9745e-02, 1.2168e-02,  ..., 9.8412e-01,
          9.7442e-01, 1.8008e-02],
         [1.8479e-03, 1.9745e-02, 1.2168e-02,  ..., 4.0731e-03,
          7.9101e-03, 1.8008e-02],
         [1.8479e-03, 1.9745e-02, 1.2168e-02,  ..., 7.7374e-03,
          9.7579e-03, 1.8008e-02],
         [1.8479e-03, 9.4076e-01, 9.6350e-01,  ..., 4.0731e-03,
          7.9101e-03, 9.4598e-01]],
        [[9.9872e-01, 5.6748e-03, 3.0668e-02,  ..., 4.6509e-02,
          2.2443e-03, 2.9273e-03],
         [4.2656e-04, 5.6748e-03, 3.8087e-02,  ..., 4.3013e-02,
          2.2443e-03, 2.9273e-03],
         [4.2656e-04, 5.6748e-03, 3.0668e-02,  ..., 4.5570e-02,
          9.9327e-01, 9.9122e-01],
         [4.2656e-04, 9.8298e-01, 9.0058e-01,  ..., 8.6491e-01,
          2.2443e-03, 2.9273e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7580e-02, 2.0861e-03, 9.9011e-01,  ..., 9.9873e-01,
          2.3126e-02, 6.3913e-03],
         [1.7580e-02, 2.0861e-03, 2.8256e-03,  ..., 4.2243e-04,
          2.1412e-02, 6.3913e-03],
         [9.4726e-01, 2.0861e-03, 2.8256e-03,  ..., 4.2243e-04,
          9.3405e-01, 9.8083e-01],
         [1.7580e-02, 9.9374e-01, 4.2337e-03,  ..., 4.2243e-04,
          2.1412e-02, 6.3913e-03]],
        [[1.2213e-02, 6.3688e-04, 9.9552e-01,  ..., 9.8402e-01,
          1.0122e-03, 2.3640e-02],
         [1.2213e-02, 6.3688e-04, 1.4926e-03,  ..., 5.3265e-03,
          1.0122e-03, 2.3640e-02],
         [9.6336e-01, 6.3688e-04, 1.4926e-03,  ..., 5.3265e-03,
          1.0122e-03, 9.2908e-01],
         [1.2213e-02, 9.9809e-01, 1.4926e-03,  ..., 5.3265e-03,
          9.9696e-01, 2.3640e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 184:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9412e-01, 1.2104e-02, 2.7024e-02,  ..., 9.5423e-01,
          8.9810e-01, 2.5892e-02],
         [1.9019e-03, 1.2104e-02, 2.6622e-02,  ..., 1.8532e-02,
          2.5898e-02, 2.5892e-02],
         [2.0758e-03, 1.2104e-02, 2.6622e-02,  ..., 1.4254e-02,
          5.0106e-02, 2.5892e-02],
         [1.9019e-03, 9.6369e-01, 9.1973e-01,  ..., 1.2983e-02,
          2.5898e-02, 9.2232e-01]],
        [[9.9964e-01, 2.9951e-02, 5.5553e-02,  ..., 6.9062e-03,
          7.8821e-04, 2.0342e-02],
         [1.2096e-04, 2.9951e-02, 3.9341e-02,  ..., 6.9062e-03,
          7.8821e-04, 2.0342e-02],
         [1.2096e-04, 3.7056e-02, 6.0490e-02,  ..., 6.9062e-03,
          9.9764e-01, 9.3897e-01],
         [1.2096e-04, 9.0304e-01, 8.4462e-01,  ..., 9.7928e-01,
          7.8821e-04, 2.0342e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0660, 0.0019, 0.9888,  ..., 0.9948, 0.0102, 0.0401],
         [0.0554, 0.0019, 0.0032,  ..., 0.0017, 0.0102, 0.0401],
         [0.7991, 0.0019, 0.0032,  ..., 0.0017, 0.9694, 0.8741],
         [0.0795, 0.9943, 0.0047,  ..., 0.0017, 0.0102, 0.0457]],
        [[0.0117, 0.0087, 0.9943,  ..., 0.9949, 0.0011, 0.0183],
         [0.0117, 0.0087, 0.0019,  ..., 0.0017, 0.0011, 0.0183],
         [0.9650, 0.0087, 0.0019,  ..., 0.0017, 0.0011, 0.9452],
         [0.0117, 0.9740, 0.0020,  ..., 0.0017, 0.9967, 0.0183]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 185:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:52,718 [Process: 0] Synchronize training processes
2024-08-19 13:18:52,718 [Process: 0] Evaluating...
2024-08-19 13:18:52,720 [Process: 0] EPOCH 184:
2024-08-19 13:18:52,722 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:53,764 [Process: 0] Synchronize training processes
2024-08-19 13:18:53,765 [Process: 0] Evaluating...
2024-08-19 13:18:53,766 [Process: 0] EPOCH 185:
2024-08-19 13:18:53,768 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9925, 0.0149, 0.0112,  ..., 0.9692, 0.9584, 0.0147],
         [0.0025, 0.0149, 0.0112,  ..., 0.0087, 0.0147, 0.0147],
         [0.0026, 0.0149, 0.0112,  ..., 0.0134, 0.0151, 0.0147],
         [0.0025, 0.9552, 0.9665,  ..., 0.0087, 0.0118, 0.9560]],
        [[0.9170, 0.0085, 0.0116,  ..., 0.0295, 0.0027, 0.0063],
         [0.0187, 0.0085, 0.0114,  ..., 0.0295, 0.0027, 0.0063],
         [0.0439, 0.0085, 0.0119,  ..., 0.0362, 0.9918, 0.9812],
         [0.0204, 0.9744, 0.9651,  ..., 0.9047, 0.0027, 0.0063]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2380e-02, 1.6556e-03, 9.9582e-01,  ..., 9.1445e-01,
          1.0318e-02, 9.7550e-03],
         [7.6371e-02, 1.6556e-03, 1.3929e-03,  ..., 2.6868e-02,
          1.0318e-02, 9.7550e-03],
         [6.6058e-01, 1.6556e-03, 1.3929e-03,  ..., 2.6868e-02,
          9.6905e-01, 9.7074e-01],
         [1.7067e-01, 9.9503e-01, 1.3929e-03,  ..., 3.1819e-02,
          1.0318e-02, 9.7550e-03]],
        [[2.8246e-02, 5.4007e-04, 9.9730e-01,  ..., 9.9678e-01,
          4.9829e-05, 2.1050e-02],
         [2.8246e-02, 5.4007e-04, 8.9852e-04,  ..., 1.0724e-03,
          4.9829e-05, 2.1050e-02],
         [9.1271e-01, 5.4007e-04, 8.9852e-04,  ..., 1.0724e-03,
          4.9829e-05, 9.3685e-01],
         [3.0802e-02, 9.9838e-01, 8.9852e-04,  ..., 1.0724e-03,
          9.9985e-01, 2.1050e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 186:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9955, 0.0120, 0.0125,  ..., 0.9958, 0.6419, 0.0059],
         [0.0015, 0.0120, 0.0125,  ..., 0.0014, 0.1101, 0.0059],
         [0.0015, 0.0120, 0.0125,  ..., 0.0014, 0.1131, 0.0059],
         [0.0015, 0.9641, 0.9626,  ..., 0.0014, 0.1349, 0.9824]],
        [[0.6741, 0.0065, 0.0212,  ..., 0.0214, 0.0104, 0.0045],
         [0.0608, 0.0065, 0.0212,  ..., 0.0214, 0.0104, 0.0045],
         [0.1449, 0.0065, 0.0212,  ..., 0.0214, 0.9687, 0.9865],
         [0.1202, 0.9806, 0.9365,  ..., 0.9359, 0.0104, 0.0045]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0743e-01, 7.8368e-01, 9.9631e-01,  ..., 9.9606e-01,
          6.8867e-03, 9.5527e-03],
         [9.2275e-02, 1.7967e-01, 1.2308e-03,  ..., 1.2637e-03,
          6.8867e-03, 9.5527e-03],
         [3.7363e-01, 1.8322e-02, 1.2308e-03,  ..., 1.2637e-03,
          9.7934e-01, 9.7134e-01],
         [4.2667e-01, 1.8322e-02, 1.2308e-03,  ..., 1.4122e-03,
          6.8867e-03, 9.5527e-03]],
        [[1.4731e-02, 5.2431e-03, 9.9682e-01,  ..., 9.9786e-01,
          8.2430e-03, 7.1026e-03],
         [1.4731e-02, 5.2431e-03, 1.0606e-03,  ..., 7.1384e-04,
          6.1627e-03, 7.1026e-03],
         [9.5581e-01, 5.2431e-03, 1.0606e-03,  ..., 7.1384e-04,
          6.1627e-03, 9.7869e-01],
         [1.4731e-02, 9.8427e-01, 1.0606e-03,  ..., 7.1384e-04,
          9.7943e-01, 7.1026e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 187:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:54,808 [Process: 0] Synchronize training processes
2024-08-19 13:18:54,809 [Process: 0] Evaluating...
2024-08-19 13:18:54,810 [Process: 0] EPOCH 186:
2024-08-19 13:18:54,812 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:55,855 [Process: 0] Synchronize training processes
2024-08-19 13:18:55,855 [Process: 0] Evaluating...
2024-08-19 13:18:55,857 [Process: 0] EPOCH 187:
2024-08-19 13:18:55,859 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9658, 0.0482, 0.0239,  ..., 0.9410, 0.5932, 0.0152],
         [0.0097, 0.0321, 0.0163,  ..., 0.0250, 0.0939, 0.0155],
         [0.0147, 0.0321, 0.0163,  ..., 0.0203, 0.1860, 0.0152],
         [0.0097, 0.8877, 0.9435,  ..., 0.0136, 0.1269, 0.9541]],
        [[0.9828, 0.0168, 0.0346,  ..., 0.0131, 0.0013, 0.0042],
         [0.0053, 0.0199, 0.0346,  ..., 0.0131, 0.0013, 0.0042],
         [0.0066, 0.0168, 0.0381,  ..., 0.0145, 0.9961, 0.9874],
         [0.0053, 0.9466, 0.8928,  ..., 0.9592, 0.0013, 0.0042]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2591e-01, 3.9438e-01, 9.8806e-01,  ..., 9.8446e-01,
          1.6960e-02, 2.6243e-02],
         [9.5816e-02, 4.9046e-01, 3.9814e-03,  ..., 5.1801e-03,
          1.6960e-02, 2.6243e-02],
         [2.3533e-01, 5.7579e-02, 3.9814e-03,  ..., 5.1801e-03,
          9.4912e-01, 9.1821e-01],
         [5.4295e-01, 5.7579e-02, 3.9814e-03,  ..., 5.1801e-03,
          1.6960e-02, 2.9300e-02]],
        [[1.2449e-02, 8.4431e-04, 9.9740e-01,  ..., 9.9645e-01,
          3.7071e-04, 4.1603e-03],
         [1.2449e-02, 8.4431e-04, 8.6548e-04,  ..., 1.1850e-03,
          3.7071e-04, 4.1603e-03],
         [9.6265e-01, 8.4431e-04, 8.6548e-04,  ..., 1.1850e-03,
          3.7071e-04, 9.8752e-01],
         [1.2449e-02, 9.9747e-01, 8.6548e-04,  ..., 1.1850e-03,
          9.9889e-01, 4.1603e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 188:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9922, 0.0315, 0.0176,  ..., 0.9885, 0.9850, 0.0379],
         [0.0026, 0.0315, 0.0167,  ..., 0.0036, 0.0042, 0.0305],
         [0.0026, 0.0315, 0.0167,  ..., 0.0044, 0.0067, 0.0305],
         [0.0026, 0.9055, 0.9489,  ..., 0.0036, 0.0042, 0.9012]],
        [[0.9915, 0.0047, 0.0090,  ..., 0.0201, 0.0018, 0.0037],
         [0.0028, 0.0047, 0.0090,  ..., 0.0193, 0.0018, 0.0037],
         [0.0028, 0.0047, 0.0090,  ..., 0.0193, 0.9945, 0.9888],
         [0.0028, 0.9858, 0.9729,  ..., 0.9413, 0.0018, 0.0037]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1126e-03, 1.6453e-03, 9.7954e-01,  ..., 9.9591e-01,
          7.0419e-03, 7.6004e-03],
         [4.1126e-03, 1.6453e-03, 6.8211e-03,  ..., 1.3636e-03,
          7.0419e-03, 7.6004e-03],
         [9.8766e-01, 1.6453e-03, 6.8211e-03,  ..., 1.3636e-03,
          9.7887e-01, 9.7720e-01],
         [4.1126e-03, 9.9506e-01, 6.8211e-03,  ..., 1.3636e-03,
          7.0419e-03, 7.6004e-03]],
        [[1.9155e-02, 2.7169e-03, 9.9862e-01,  ..., 9.6606e-01,
          2.1509e-03, 2.0702e-02],
         [1.9155e-02, 2.7169e-03, 4.5932e-04,  ..., 8.7957e-03,
          2.1509e-03, 2.0702e-02],
         [9.4254e-01, 2.7169e-03, 4.5932e-04,  ..., 8.7957e-03,
          2.1509e-03, 9.3790e-01],
         [1.9155e-02, 9.9185e-01, 4.5932e-04,  ..., 1.6344e-02,
          9.9355e-01, 2.0702e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 189:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:56,900 [Process: 0] Synchronize training processes
2024-08-19 13:18:56,901 [Process: 0] Evaluating...
2024-08-19 13:18:56,902 [Process: 0] EPOCH 188:
2024-08-19 13:18:56,904 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:18:57,942 [Process: 0] Synchronize training processes
2024-08-19 13:18:57,942 [Process: 0] Evaluating...
2024-08-19 13:18:57,944 [Process: 0] EPOCH 189:
2024-08-19 13:18:57,946 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9500, 0.0232, 0.0082,  ..., 0.9835, 0.9174, 0.0126],
         [0.0156, 0.0232, 0.0082,  ..., 0.0054, 0.0212, 0.0126],
         [0.0188, 0.0289, 0.0082,  ..., 0.0057, 0.0401, 0.0126],
         [0.0156, 0.9248, 0.9753,  ..., 0.0054, 0.0212, 0.9622]],
        [[0.9969, 0.0237, 0.0112,  ..., 0.0197, 0.0016, 0.0116],
         [0.0010, 0.0256, 0.0112,  ..., 0.0197, 0.0016, 0.0116],
         [0.0010, 0.0237, 0.0112,  ..., 0.0257, 0.9951, 0.9653],
         [0.0010, 0.9270, 0.9664,  ..., 0.9349, 0.0016, 0.0116]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.0067e-02, 5.7181e-03, 9.9340e-01,  ..., 9.9712e-01,
          1.5701e-02, 2.0726e-02],
         [4.0677e-02, 5.7181e-03, 2.1987e-03,  ..., 9.6002e-04,
          1.5701e-02, 2.0726e-02],
         [8.5759e-01, 5.7181e-03, 2.1987e-03,  ..., 9.6002e-04,
          9.5290e-01, 9.3782e-01],
         [5.1671e-02, 9.8285e-01, 2.1987e-03,  ..., 9.6002e-04,
          1.5701e-02, 2.0726e-02]],
        [[1.0051e-02, 2.7071e-04, 9.9685e-01,  ..., 9.9222e-01,
          1.1087e-02, 1.9661e-02],
         [1.0051e-02, 2.7071e-04, 1.0511e-03,  ..., 2.5945e-03,
          1.1087e-02, 1.9661e-02],
         [9.6985e-01, 2.7071e-04, 1.0511e-03,  ..., 2.5945e-03,
          1.1087e-02, 9.4102e-01],
         [1.0051e-02, 9.9919e-01, 1.0511e-03,  ..., 2.5945e-03,
          9.6674e-01, 1.9661e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 190:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9933, 0.0061, 0.0056,  ..., 0.9952, 0.9798, 0.0099],
         [0.0022, 0.0061, 0.0056,  ..., 0.0016, 0.0063, 0.0099],
         [0.0022, 0.0061, 0.0056,  ..., 0.0017, 0.0077, 0.0111],
         [0.0022, 0.9816, 0.9833,  ..., 0.0016, 0.0063, 0.9691]],
        [[0.9928, 0.0089, 0.0280,  ..., 0.0093, 0.0038, 0.0091],
         [0.0020, 0.0078, 0.0280,  ..., 0.0093, 0.0038, 0.0091],
         [0.0031, 0.0078, 0.0280,  ..., 0.0093, 0.9885, 0.9727],
         [0.0022, 0.9754, 0.9159,  ..., 0.9721, 0.0038, 0.0091]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6311e-01, 1.1773e-03, 9.4495e-01,  ..., 9.9191e-01,
          7.5344e-03, 2.0785e-02],
         [1.3601e-01, 1.1773e-03, 1.2301e-02,  ..., 2.6953e-03,
          7.5344e-03, 2.0639e-02],
         [3.1368e-01, 1.1773e-03, 1.2301e-02,  ..., 2.6953e-03,
          9.7740e-01, 9.3794e-01],
         [2.8720e-01, 9.9647e-01, 3.0449e-02,  ..., 2.6953e-03,
          7.5344e-03, 2.0639e-02]],
        [[2.2146e-02, 3.5907e-04, 9.9051e-01,  ..., 9.8351e-01,
          2.0067e-03, 5.8562e-03],
         [2.2146e-02, 3.5907e-04, 3.0185e-03,  ..., 5.2096e-03,
          1.8219e-03, 5.8562e-03],
         [9.3356e-01, 3.5907e-04, 3.0185e-03,  ..., 5.2096e-03,
          1.8219e-03, 9.8243e-01],
         [2.2146e-02, 9.9892e-01, 3.4510e-03,  ..., 6.0664e-03,
          9.9435e-01, 5.8562e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:18:58,986 [Process: 0] Synchronize training processes
2024-08-19 13:18:58,987 [Process: 0] Evaluating...
2024-08-19 13:18:58,988 [Process: 0] EPOCH 190:
2024-08-19 13:18:58,990 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:00,031 [Process: 0] Synchronize training processes
2024-08-19 13:19:00,032 [Process: 0] Evaluating...
2024-08-19 13:19:00,033 [Process: 0] EPOCH 191:
2024-08-19 13:19:00,035 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 191:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7046e-01, 1.4528e-02, 5.6061e-03,  ..., 9.9287e-01,
          9.1337e-01, 1.1323e-02],
         [1.3036e-02, 1.4528e-02, 5.6061e-03,  ..., 2.3055e-03,
          2.0822e-02, 1.1300e-02],
         [8.4686e-03, 1.4528e-02, 5.6061e-03,  ..., 2.5220e-03,
          4.4986e-02, 1.1300e-02],
         [8.0359e-03, 9.5642e-01, 9.8318e-01,  ..., 2.3055e-03,
          2.0823e-02, 9.6608e-01]],
        [[9.9502e-01, 3.4552e-02, 6.6874e-03,  ..., 4.5732e-02,
          6.0671e-04, 2.6193e-03],
         [1.5154e-03, 3.4552e-02, 6.6874e-03,  ..., 4.0142e-02,
          6.0671e-04, 2.6193e-03],
         [1.5747e-03, 4.0204e-02, 6.6874e-03,  ..., 5.5988e-02,
          9.9818e-01, 9.9214e-01],
         [1.8860e-03, 8.9069e-01, 9.7994e-01,  ..., 8.5814e-01,
          6.0671e-04, 2.6193e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7966e-01, 3.6596e-03, 9.8201e-01,  ..., 9.9530e-01,
          1.3025e-02, 1.1205e-02],
         [1.1138e-01, 3.6596e-03, 5.9980e-03,  ..., 1.5653e-03,
          1.3025e-02, 1.1205e-02],
         [5.0025e-01, 3.6596e-03, 5.9980e-03,  ..., 1.5653e-03,
          9.6092e-01, 9.6639e-01],
         [2.0872e-01, 9.8902e-01, 5.9980e-03,  ..., 1.5653e-03,
          1.3025e-02, 1.1205e-02]],
        [[3.3971e-02, 1.0410e-03, 9.9484e-01,  ..., 9.9639e-01,
          8.2152e-04, 1.7408e-02],
         [2.8338e-02, 1.0410e-03, 1.7199e-03,  ..., 1.1194e-03,
          8.2152e-04, 1.7408e-02],
         [9.0935e-01, 1.0410e-03, 1.7199e-03,  ..., 1.1194e-03,
          8.2152e-04, 9.4778e-01],
         [2.8338e-02, 9.9688e-01, 1.7199e-03,  ..., 1.3759e-03,
          9.9754e-01, 1.7408e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 192:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8380e-01, 1.0152e-02, 2.5120e-02,  ..., 9.9290e-01,
          5.6800e-01, 7.0828e-03],
         [5.2300e-03, 1.0152e-02, 1.9552e-02,  ..., 2.2642e-03,
          1.2796e-01, 7.0828e-03],
         [5.7385e-03, 1.1806e-02, 1.9552e-02,  ..., 2.5709e-03,
          1.7650e-01, 7.0828e-03],
         [5.2300e-03, 9.6789e-01, 9.3578e-01,  ..., 2.2642e-03,
          1.2755e-01, 9.7875e-01]],
        [[9.9950e-01, 3.0911e-03, 6.1842e-03,  ..., 3.0881e-02,
          2.7937e-03, 2.2057e-03],
         [1.6509e-04, 3.0911e-03, 6.1842e-03,  ..., 2.1203e-02,
          2.7937e-03, 2.2057e-03],
         [1.6509e-04, 3.0911e-03, 6.1842e-03,  ..., 2.1203e-02,
          9.9162e-01, 9.9338e-01],
         [1.6509e-04, 9.9073e-01, 9.8145e-01,  ..., 9.2671e-01,
          2.7937e-03, 2.2057e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:19:01,075 [Process: 0] Synchronize training processes
2024-08-19 13:19:01,075 [Process: 0] Evaluating...
2024-08-19 13:19:01,501 [Process: 0] EPOCH 192:
2024-08-19 13:19:01,504 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8656e-01, 1.8916e-03, 9.9850e-01,  ..., 9.9740e-01,
          2.4573e-02, 1.5925e-02],
         [1.3478e-01, 1.8916e-03, 5.0115e-04,  ..., 8.6650e-04,
          2.3254e-02, 1.5925e-02],
         [5.1543e-01, 1.8916e-03, 5.0115e-04,  ..., 8.6650e-04,
          9.2798e-01, 9.5223e-01],
         [1.6322e-01, 9.9433e-01, 5.0115e-04,  ..., 8.6650e-04,
          2.4197e-02, 1.5925e-02]],
        [[1.0599e-02, 2.2309e-04, 9.9818e-01,  ..., 9.9474e-01,
          1.8339e-05, 5.9278e-03],
         [1.0599e-02, 2.2309e-04, 6.0602e-04,  ..., 1.7544e-03,
          1.8339e-05, 5.9278e-03],
         [9.6820e-01, 2.2309e-04, 6.0602e-04,  ..., 1.7544e-03,
          1.8339e-05, 9.8222e-01],
         [1.0599e-02, 9.9933e-01, 6.0602e-04,  ..., 1.7544e-03,
          9.9994e-01, 5.9278e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 193:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9684e-01, 3.8220e-03, 1.4791e-02,  ..., 9.9042e-01,
          6.2263e-01, 1.5450e-02],
         [1.0541e-03, 3.8220e-03, 1.1316e-02,  ..., 3.1925e-03,
          7.6984e-02, 1.5450e-02],
         [1.0541e-03, 3.8220e-03, 1.1316e-02,  ..., 3.1925e-03,
          1.1337e-01, 1.6717e-02],
         [1.0541e-03, 9.8853e-01, 9.6258e-01,  ..., 3.1925e-03,
          1.8702e-01, 9.5238e-01]],
        [[9.9992e-01, 8.4773e-03, 1.3662e-02,  ..., 1.8727e-02,
          2.6649e-03, 1.5195e-03],
         [2.5423e-05, 8.4773e-03, 1.3280e-02,  ..., 1.8727e-02,
          2.6649e-03, 1.5195e-03],
         [2.5423e-05, 8.4773e-03, 1.3280e-02,  ..., 1.8727e-02,
          9.9201e-01, 9.9544e-01],
         [2.5423e-05, 9.7457e-01, 9.5978e-01,  ..., 9.4382e-01,
          2.6649e-03, 1.5195e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5782e-02, 6.3435e-04, 9.7638e-01,  ..., 9.9743e-01,
          1.3945e-02, 4.5146e-02],
         [2.2345e-02, 6.3435e-04, 6.5616e-03,  ..., 8.4734e-04,
          1.3945e-02, 2.9859e-02],
         [9.2953e-01, 6.3435e-04, 6.5616e-03,  ..., 8.4734e-04,
          9.5817e-01, 8.9514e-01],
         [2.2345e-02, 9.9810e-01, 1.0495e-02,  ..., 8.7081e-04,
          1.3945e-02, 2.9859e-02]],
        [[1.7836e-02, 2.3935e-03, 9.9007e-01,  ..., 9.9414e-01,
          1.4176e-03, 1.1047e-02],
         [1.7836e-02, 2.3935e-03, 3.2954e-03,  ..., 1.9542e-03,
          1.4176e-03, 1.1047e-02],
         [9.4649e-01, 2.3935e-03, 3.2954e-03,  ..., 1.9542e-03,
          1.4176e-03, 9.6686e-01],
         [1.7836e-02, 9.9282e-01, 3.3437e-03,  ..., 1.9542e-03,
          9.9575e-01, 1.1047e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 194:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:19:02,537 [Process: 0] Synchronize training processes
2024-08-19 13:19:02,538 [Process: 0] Evaluating...
2024-08-19 13:19:02,539 [Process: 0] EPOCH 193:
2024-08-19 13:19:02,541 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:03,573 [Process: 0] Synchronize training processes
2024-08-19 13:19:03,573 [Process: 0] Evaluating...
2024-08-19 13:19:03,575 [Process: 0] EPOCH 194:
2024-08-19 13:19:03,577 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9701, 0.0084, 0.0231,  ..., 0.9865, 0.9674, 0.0444],
         [0.0089, 0.0084, 0.0197,  ..., 0.0040, 0.0098, 0.0238],
         [0.0121, 0.0084, 0.0215,  ..., 0.0054, 0.0129, 0.0323],
         [0.0089, 0.9748, 0.9357,  ..., 0.0040, 0.0098, 0.8995]],
        [[0.9918, 0.0113, 0.0120,  ..., 0.0065, 0.0029, 0.0029],
         [0.0020, 0.0113, 0.0120,  ..., 0.0065, 0.0029, 0.0029],
         [0.0042, 0.0113, 0.0120,  ..., 0.0065, 0.9914, 0.9913],
         [0.0020, 0.9661, 0.9639,  ..., 0.9806, 0.0029, 0.0029]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.5406e-02, 8.5367e-04, 9.9753e-01,  ..., 9.9904e-01,
          2.3051e-02, 3.3238e-02],
         [3.4362e-02, 8.5367e-04, 8.2493e-04,  ..., 3.2099e-04,
          2.3051e-02, 3.3238e-02],
         [8.8522e-01, 8.5367e-04, 8.2493e-04,  ..., 3.2099e-04,
          9.3085e-01, 8.9407e-01],
         [3.5007e-02, 9.9744e-01, 8.2493e-04,  ..., 3.2099e-04,
          2.3051e-02, 3.9451e-02]],
        [[1.9162e-02, 7.4956e-04, 9.9778e-01,  ..., 9.8886e-01,
          6.0059e-03, 1.9289e-02],
         [1.9162e-02, 7.4956e-04, 7.3887e-04,  ..., 3.7148e-03,
          6.0059e-03, 1.9289e-02],
         [9.4251e-01, 7.4956e-04, 7.3887e-04,  ..., 3.7148e-03,
          6.0059e-03, 9.4213e-01],
         [1.9162e-02, 9.9775e-01, 7.3887e-04,  ..., 3.7148e-03,
          9.8198e-01, 1.9289e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 195:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9347, 0.0099, 0.0341,  ..., 0.9968, 0.9870, 0.0072],
         [0.0366, 0.0099, 0.0530,  ..., 0.0011, 0.0037, 0.0072],
         [0.0156, 0.0099, 0.0341,  ..., 0.0011, 0.0056, 0.0072],
         [0.0131, 0.9702, 0.8788,  ..., 0.0011, 0.0037, 0.9783]],
        [[0.8726, 0.0102, 0.0095,  ..., 0.0139, 0.0128, 0.0016],
         [0.0196, 0.0102, 0.0080,  ..., 0.0139, 0.0128, 0.0016],
         [0.0881, 0.0102, 0.0080,  ..., 0.0139, 0.9616, 0.9953],
         [0.0196, 0.9693, 0.9745,  ..., 0.9582, 0.0128, 0.0016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1787, 0.0018, 0.9920,  ..., 0.9937, 0.0259, 0.0074],
         [0.0781, 0.0015, 0.0027,  ..., 0.0021, 0.0241, 0.0074],
         [0.6344, 0.0015, 0.0027,  ..., 0.0021, 0.9258, 0.9778],
         [0.1088, 0.9952, 0.0027,  ..., 0.0021, 0.0241, 0.0074]],
        [[0.0094, 0.0011, 0.9924,  ..., 0.8993, 0.0021, 0.0060],
         [0.0094, 0.0011, 0.0022,  ..., 0.0245, 0.0021, 0.0060],
         [0.9719, 0.0011, 0.0022,  ..., 0.0245, 0.0021, 0.9820],
         [0.0094, 0.9968, 0.0032,  ..., 0.0517, 0.9937, 0.0060]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 196:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:04,615 [Process: 0] Synchronize training processes
2024-08-19 13:19:04,615 [Process: 0] Evaluating...
2024-08-19 13:19:04,617 [Process: 0] EPOCH 195:
2024-08-19 13:19:04,619 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:05,659 [Process: 0] Synchronize training processes
2024-08-19 13:19:05,660 [Process: 0] Evaluating...
2024-08-19 13:19:05,661 [Process: 0] EPOCH 196:
2024-08-19 13:19:05,663 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9915, 0.0323, 0.0049,  ..., 0.8360, 0.9707, 0.0146],
         [0.0026, 0.0210, 0.0049,  ..., 0.1127, 0.0077, 0.0146],
         [0.0033, 0.0210, 0.0049,  ..., 0.0313, 0.0139, 0.0146],
         [0.0026, 0.9257, 0.9852,  ..., 0.0200, 0.0077, 0.9563]],
        [[0.9829, 0.0211, 0.0089,  ..., 0.0055, 0.0019, 0.0024],
         [0.0039, 0.0211, 0.0089,  ..., 0.0055, 0.0019, 0.0024],
         [0.0093, 0.0211, 0.0089,  ..., 0.0055, 0.9944, 0.9927],
         [0.0039, 0.9368, 0.9732,  ..., 0.9835, 0.0019, 0.0024]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4081e-01, 4.3164e-04, 9.9908e-01,  ..., 9.7499e-01,
          1.2619e-02, 1.6105e-02],
         [8.5756e-02, 4.3164e-04, 3.0657e-04,  ..., 8.3355e-03,
          1.2619e-02, 1.6105e-02],
         [6.1639e-01, 4.3164e-04, 3.0657e-04,  ..., 8.3355e-03,
          9.6214e-01, 9.5168e-01],
         [1.5704e-01, 9.9871e-01, 3.0657e-04,  ..., 8.3355e-03,
          1.2619e-02, 1.6105e-02]],
        [[2.5585e-02, 1.8907e-03, 9.9266e-01,  ..., 9.8599e-01,
          1.1964e-03, 5.4783e-03],
         [2.3395e-02, 1.8907e-03, 2.4451e-03,  ..., 5.3295e-03,
          1.1964e-03, 5.4783e-03],
         [9.2762e-01, 1.8907e-03, 2.4451e-03,  ..., 4.3389e-03,
          1.1964e-03, 9.8357e-01],
         [2.3395e-02, 9.9433e-01, 2.4451e-03,  ..., 4.3389e-03,
          9.9641e-01, 5.4783e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 197:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8035e-01, 1.0870e-02, 1.1042e-02,  ..., 9.8646e-01,
          9.2483e-01, 7.0132e-03],
         [6.3476e-03, 1.0870e-02, 1.1042e-02,  ..., 3.9215e-03,
          1.9971e-02, 7.0132e-03],
         [6.9570e-03, 1.0870e-02, 1.1042e-02,  ..., 5.6975e-03,
          3.5230e-02, 7.0132e-03],
         [6.3476e-03, 9.6739e-01, 9.6688e-01,  ..., 3.9215e-03,
          1.9971e-02, 9.7896e-01]],
        [[9.9932e-01, 9.1714e-03, 1.7145e-02,  ..., 4.3080e-03,
          1.1828e-03, 4.1389e-03],
         [1.9043e-04, 9.1714e-03, 1.7145e-02,  ..., 4.3080e-03,
          1.1828e-03, 4.1389e-03],
         [2.9845e-04, 9.1714e-03, 1.7741e-02,  ..., 4.3080e-03,
          9.9645e-01, 9.8758e-01],
         [1.9043e-04, 9.7249e-01, 9.4797e-01,  ..., 9.8708e-01,
          1.1828e-03, 4.1389e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8452e-02, 4.1512e-04, 9.9956e-01,  ..., 9.6172e-01,
          1.4585e-02, 1.8655e-02],
         [1.8452e-02, 4.1512e-04, 1.4584e-04,  ..., 1.1062e-02,
          1.4585e-02, 1.8655e-02],
         [9.4464e-01, 4.1512e-04, 1.4584e-04,  ..., 1.1062e-02,
          9.5625e-01, 9.4403e-01],
         [1.8452e-02, 9.9875e-01, 1.4584e-04,  ..., 1.6158e-02,
          1.4585e-02, 1.8655e-02]],
        [[1.0917e-02, 8.6261e-03, 9.9737e-01,  ..., 9.9387e-01,
          1.8279e-05, 1.3429e-02],
         [1.0917e-02, 1.3908e-02, 8.7671e-04,  ..., 2.5714e-03,
          1.8279e-05, 1.3429e-02],
         [9.6725e-01, 8.6261e-03, 8.7671e-04,  ..., 1.7809e-03,
          1.8279e-05, 9.5971e-01],
         [1.0917e-02, 9.6884e-01, 8.7671e-04,  ..., 1.7809e-03,
          9.9995e-01, 1.3429e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 198:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:06,704 [Process: 0] Synchronize training processes
2024-08-19 13:19:06,704 [Process: 0] Evaluating...
2024-08-19 13:19:06,706 [Process: 0] EPOCH 197:
2024-08-19 13:19:06,707 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:07,749 [Process: 0] Synchronize training processes
2024-08-19 13:19:07,750 [Process: 0] Evaluating...
2024-08-19 13:19:07,751 [Process: 0] EPOCH 198:
2024-08-19 13:19:07,753 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9969, 0.0146, 0.0072,  ..., 0.9908, 0.6896, 0.0288],
         [0.0010, 0.0146, 0.0072,  ..., 0.0031, 0.0666, 0.0288],
         [0.0010, 0.0146, 0.0072,  ..., 0.0031, 0.1127, 0.0312],
         [0.0010, 0.9563, 0.9785,  ..., 0.0031, 0.1311, 0.9113]],
        [[0.9919, 0.0138, 0.0323,  ..., 0.0073, 0.0040, 0.0070],
         [0.0023, 0.0111, 0.0318,  ..., 0.0073, 0.0040, 0.0070],
         [0.0035, 0.0111, 0.0318,  ..., 0.0073, 0.9879, 0.9791],
         [0.0023, 0.9641, 0.9041,  ..., 0.9780, 0.0040, 0.0070]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8087e-01, 4.3180e-04, 9.3443e-01,  ..., 9.9908e-01,
          2.1682e-02, 1.9372e-02],
         [1.0849e-01, 4.0318e-04, 1.5843e-02,  ..., 3.0545e-04,
          2.1682e-02, 1.9372e-02],
         [1.8388e-01, 4.0318e-04, 1.5843e-02,  ..., 3.0545e-04,
          9.3496e-01, 9.4188e-01],
         [4.2676e-01, 9.9876e-01, 3.3887e-02,  ..., 3.0545e-04,
          2.1682e-02, 1.9372e-02]],
        [[9.8220e-03, 4.6358e-02, 9.9763e-01,  ..., 9.9032e-01,
          1.3877e-04, 8.4285e-03],
         [9.8220e-03, 4.8100e-01, 7.9023e-04,  ..., 3.2263e-03,
          1.3877e-04, 8.4285e-03],
         [9.7053e-01, 4.6358e-02, 7.9023e-04,  ..., 3.2263e-03,
          1.3877e-04, 9.7471e-01],
         [9.8220e-03, 4.2628e-01, 7.9023e-04,  ..., 3.2263e-03,
          9.9958e-01, 8.4285e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 199:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9865, 0.0100, 0.0052,  ..., 0.9892, 0.7526, 0.0151],
         [0.0043, 0.0100, 0.0052,  ..., 0.0036, 0.0528, 0.0113],
         [0.0049, 0.0100, 0.0052,  ..., 0.0039, 0.1001, 0.0113],
         [0.0043, 0.9701, 0.9845,  ..., 0.0033, 0.0945, 0.9624]],
        [[0.8619, 0.0148, 0.0271,  ..., 0.0167, 0.0042, 0.0077],
         [0.0244, 0.0148, 0.0271,  ..., 0.0140, 0.0042, 0.0077],
         [0.0892, 0.0148, 0.0271,  ..., 0.0140, 0.9875, 0.9769],
         [0.0244, 0.9556, 0.9188,  ..., 0.9554, 0.0042, 0.0077]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0892e-01, 1.0020e-04, 9.5968e-01,  ..., 9.9923e-01,
          1.6944e-02, 1.3094e-02],
         [1.0148e-01, 1.0020e-04, 1.5506e-02,  ..., 2.5761e-04,
          1.6944e-02, 1.3094e-02],
         [1.9570e-01, 1.0020e-04, 1.2409e-02,  ..., 2.5761e-04,
          9.4917e-01, 9.6072e-01],
         [2.9390e-01, 9.9970e-01, 1.2409e-02,  ..., 2.5761e-04,
          1.6944e-02, 1.3094e-02]],
        [[1.8104e-02, 6.7931e-04, 9.9172e-01,  ..., 9.8902e-01,
          2.5901e-04, 1.2346e-02],
         [1.8104e-02, 6.7931e-04, 2.7589e-03,  ..., 4.5933e-03,
          2.5901e-04, 1.2346e-02],
         [9.4569e-01, 6.7931e-04, 2.7589e-03,  ..., 3.1953e-03,
          2.5901e-04, 9.6296e-01],
         [1.8104e-02, 9.9796e-01, 2.7589e-03,  ..., 3.1953e-03,
          9.9922e-01, 1.2346e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 200:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:08,792 [Process: 0] Synchronize training processes
2024-08-19 13:19:08,792 [Process: 0] Evaluating...
2024-08-19 13:19:08,794 [Process: 0] EPOCH 199:
2024-08-19 13:19:08,796 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:09,839 [Process: 0] Synchronize training processes
2024-08-19 13:19:09,839 [Process: 0] Evaluating...
2024-08-19 13:19:09,841 [Process: 0] EPOCH 200:
2024-08-19 13:19:09,843 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9903, 0.0135, 0.0377,  ..., 0.9882, 0.7855, 0.0096],
         [0.0031, 0.0135, 0.0377,  ..., 0.0039, 0.0298, 0.0096],
         [0.0034, 0.0135, 0.0377,  ..., 0.0040, 0.1548, 0.0096],
         [0.0031, 0.9596, 0.8870,  ..., 0.0039, 0.0298, 0.9712]],
        [[0.9763, 0.0198, 0.0237,  ..., 0.0068, 0.0048, 0.0048],
         [0.0039, 0.0198, 0.0237,  ..., 0.0068, 0.0048, 0.0048],
         [0.0158, 0.0198, 0.0317,  ..., 0.0068, 0.9856, 0.9856],
         [0.0039, 0.9407, 0.9209,  ..., 0.9795, 0.0048, 0.0048]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1917e-01, 6.1468e-03, 9.8911e-01,  ..., 9.9725e-01,
          1.0669e-02, 2.3318e-02],
         [1.0735e-01, 5.9260e-03, 4.1078e-03,  ..., 9.1565e-04,
          1.0669e-02, 2.3318e-02],
         [2.7154e-01, 5.9260e-03, 3.3904e-03,  ..., 9.1565e-04,
          9.6799e-01, 9.3005e-01],
         [2.0194e-01, 9.8200e-01, 3.3904e-03,  ..., 9.1565e-04,
          1.0669e-02, 2.3318e-02]],
        [[1.5617e-02, 5.6714e-04, 9.9338e-01,  ..., 9.9688e-01,
          8.7283e-05, 8.6789e-03],
         [1.5617e-02, 5.6714e-04, 2.8311e-03,  ..., 1.3980e-03,
          8.7283e-05, 8.6789e-03],
         [9.5315e-01, 5.6714e-04, 1.8961e-03,  ..., 8.6015e-04,
          8.7283e-05, 9.7396e-01],
         [1.5617e-02, 9.9830e-01, 1.8961e-03,  ..., 8.6015e-04,
          9.9974e-01, 8.6789e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 201:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9766, 0.0075, 0.0070,  ..., 0.9779, 0.9820, 0.0498],
         [0.0078, 0.0075, 0.0070,  ..., 0.0066, 0.0045, 0.0311],
         [0.0078, 0.0075, 0.0070,  ..., 0.0089, 0.0090, 0.0362],
         [0.0078, 0.9774, 0.9791,  ..., 0.0066, 0.0045, 0.8829]],
        [[0.9847, 0.0092, 0.0378,  ..., 0.0201, 0.0023, 0.0041],
         [0.0026, 0.0092, 0.0361,  ..., 0.0201, 0.0023, 0.0041],
         [0.0102, 0.0092, 0.0443,  ..., 0.0213, 0.9932, 0.9877],
         [0.0026, 0.9725, 0.8818,  ..., 0.9386, 0.0023, 0.0041]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.6652e-01, 7.6642e-03, 9.9259e-01,  ..., 9.7924e-01,
          2.6388e-02, 2.0439e-02],
         [1.0397e-01, 5.2863e-03, 2.3556e-03,  ..., 9.3503e-03,
          2.6338e-02, 2.0439e-02],
         [2.3492e-01, 5.2863e-03, 2.3556e-03,  ..., 5.7054e-03,
          9.1768e-01, 9.3868e-01],
         [1.9458e-01, 9.8176e-01, 2.6997e-03,  ..., 5.7054e-03,
          2.9590e-02, 2.0439e-02]],
        [[1.4699e-02, 2.3225e-03, 9.9953e-01,  ..., 9.8249e-01,
          3.6657e-04, 1.7453e-02],
         [1.4699e-02, 2.3225e-03, 1.5523e-04,  ..., 7.0490e-03,
          3.6657e-04, 1.7453e-02],
         [9.5590e-01, 2.3225e-03, 1.5523e-04,  ..., 5.2306e-03,
          3.6657e-04, 9.4764e-01],
         [1.4699e-02, 9.9303e-01, 1.5523e-04,  ..., 5.2306e-03,
          9.9890e-01, 1.7453e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:19:10,898 [Process: 0] Synchronize training processes
2024-08-19 13:19:10,898 [Process: 0] Evaluating...
2024-08-19 13:19:10,900 [Process: 0] EPOCH 201:
2024-08-19 13:19:10,902 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:11,943 [Process: 0] Synchronize training processes
2024-08-19 13:19:11,944 [Process: 0] Evaluating...
2024-08-19 13:19:12,370 [Process: 0] EPOCH 202:
2024-08-19 13:19:12,373 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 202:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9859, 0.0101, 0.0075,  ..., 0.9856, 0.9944, 0.0075],
         [0.0047, 0.0101, 0.0075,  ..., 0.0048, 0.0018, 0.0075],
         [0.0047, 0.0101, 0.0075,  ..., 0.0048, 0.0021, 0.0075],
         [0.0047, 0.9698, 0.9774,  ..., 0.0048, 0.0018, 0.9776]],
        [[0.9918, 0.0045, 0.0201,  ..., 0.0129, 0.0011, 0.0057],
         [0.0018, 0.0045, 0.0201,  ..., 0.0118, 0.0011, 0.0057],
         [0.0046, 0.0045, 0.0216,  ..., 0.0118, 0.9968, 0.9828],
         [0.0018, 0.9865, 0.9382,  ..., 0.9635, 0.0011, 0.0057]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8205e-01, 3.6501e-03, 9.9743e-01,  ..., 9.9876e-01,
          1.2261e-02, 3.4600e-02],
         [1.0923e-01, 3.6501e-03, 8.5642e-04,  ..., 4.1430e-04,
          1.2261e-02, 2.7067e-02],
         [6.2099e-01, 3.6501e-03, 8.5642e-04,  ..., 4.1430e-04,
          9.6322e-01, 9.1127e-01],
         [8.7735e-02, 9.8905e-01, 8.5642e-04,  ..., 4.1430e-04,
          1.2261e-02, 2.7067e-02]],
        [[2.3178e-02, 3.9166e-03, 9.9295e-01,  ..., 9.7650e-01,
          1.0288e-03, 1.5902e-02],
         [1.9838e-02, 3.9166e-03, 2.3512e-03,  ..., 6.5418e-03,
          1.0288e-03, 1.5902e-02],
         [9.3715e-01, 3.9166e-03, 2.3512e-03,  ..., 6.5418e-03,
          1.0288e-03, 9.5229e-01],
         [1.9838e-02, 9.8825e-01, 2.3512e-03,  ..., 1.0418e-02,
          9.9691e-01, 1.5902e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 203:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9840, 0.0077, 0.0092,  ..., 0.9690, 0.9790, 0.0068],
         [0.0050, 0.0077, 0.0092,  ..., 0.0096, 0.0055, 0.0068],
         [0.0059, 0.0077, 0.0092,  ..., 0.0118, 0.0100, 0.0068],
         [0.0050, 0.9769, 0.9723,  ..., 0.0096, 0.0055, 0.9796]],
        [[0.9111, 0.0060, 0.0047,  ..., 0.0451, 0.0075, 0.0030],
         [0.0180, 0.0060, 0.0047,  ..., 0.0345, 0.0075, 0.0030],
         [0.0529, 0.0060, 0.0047,  ..., 0.0495, 0.9774, 0.9910],
         [0.0180, 0.9819, 0.9860,  ..., 0.8710, 0.0075, 0.0030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:19:13,409 [Process: 0] Synchronize training processes
2024-08-19 13:19:13,410 [Process: 0] Evaluating...
2024-08-19 13:19:13,411 [Process: 0] EPOCH 203:
2024-08-19 13:19:13,413 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:14,454 [Process: 0] Synchronize training processes
2024-08-19 13:19:14,454 [Process: 0] Evaluating...
2024-08-19 13:19:14,456 [Process: 0] EPOCH 204:
2024-08-19 13:19:14,458 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2775e-02, 1.7604e-02, 9.9481e-01,  ..., 9.3165e-01,
          7.7027e-03, 3.3931e-02],
         [3.3218e-02, 8.3770e-03, 1.7298e-03,  ..., 1.8600e-02,
          7.7027e-03, 2.7344e-02],
         [8.8079e-01, 8.3770e-03, 1.7298e-03,  ..., 1.8600e-02,
          9.7689e-01, 9.1138e-01],
         [3.3218e-02, 9.6564e-01, 1.7298e-03,  ..., 3.1153e-02,
          7.7027e-03, 2.7344e-02]],
        [[1.9873e-02, 6.9038e-04, 9.6544e-01,  ..., 9.7902e-01,
          5.8780e-05, 1.2987e-02],
         [1.8898e-02, 6.9038e-04, 8.3758e-03,  ..., 5.9719e-03,
          5.8780e-05, 1.2987e-02],
         [9.4233e-01, 6.9038e-04, 8.3758e-03,  ..., 5.9719e-03,
          5.8780e-05, 9.6104e-01],
         [1.8898e-02, 9.9793e-01, 1.7809e-02,  ..., 9.0375e-03,
          9.9982e-01, 1.2987e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 204:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9823e-01, 1.7571e-02, 2.0205e-02,  ..., 9.6584e-01,
          9.6958e-01, 3.4814e-03],
         [5.8895e-04, 2.2322e-02, 2.0205e-02,  ..., 9.2470e-03,
          9.1519e-03, 3.4814e-03],
         [5.8895e-04, 1.7571e-02, 2.0205e-02,  ..., 1.5668e-02,
          1.2113e-02, 3.4814e-03],
         [5.8895e-04, 9.4254e-01, 9.3939e-01,  ..., 9.2470e-03,
          9.1519e-03, 9.8956e-01]],
        [[9.7424e-01, 1.5110e-02, 1.5547e-02,  ..., 1.0870e-02,
          2.1031e-03, 4.9317e-03],
         [6.1474e-03, 1.5110e-02, 1.5547e-02,  ..., 1.0870e-02,
          2.1031e-03, 4.9317e-03],
         [1.3462e-02, 1.5110e-02, 1.5547e-02,  ..., 1.1440e-02,
          9.9369e-01, 9.8521e-01],
         [6.1474e-03, 9.5467e-01, 9.5336e-01,  ..., 9.6682e-01,
          2.1031e-03, 4.9317e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3024e-01, 1.6779e-02, 9.9520e-01,  ..., 9.9692e-01,
          1.0490e-02, 6.5600e-03],
         [1.1312e-01, 6.2616e-03, 1.5994e-03,  ..., 1.0282e-03,
          1.0490e-02, 6.5600e-03],
         [2.8646e-01, 6.2616e-03, 1.5994e-03,  ..., 1.0282e-03,
          9.6853e-01, 9.8032e-01],
         [2.7018e-01, 9.7070e-01, 1.5994e-03,  ..., 1.0282e-03,
          1.0490e-02, 6.5600e-03]],
        [[9.8834e-03, 1.6308e-03, 9.9457e-01,  ..., 8.9906e-01,
          5.2170e-05, 3.2643e-02],
         [9.8834e-03, 1.6308e-03, 1.8097e-03,  ..., 2.3685e-02,
          5.2170e-05, 3.0888e-02],
         [9.7035e-01, 1.6308e-03, 1.8097e-03,  ..., 2.3685e-02,
          5.2170e-05, 9.0499e-01],
         [9.8834e-03, 9.9511e-01, 1.8097e-03,  ..., 5.3565e-02,
          9.9984e-01, 3.1477e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 205:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9863, 0.0135, 0.0184,  ..., 0.9850, 0.4871, 0.0129],
         [0.0046, 0.0135, 0.0165,  ..., 0.0045, 0.0676, 0.0129],
         [0.0046, 0.0135, 0.0165,  ..., 0.0059, 0.0868, 0.0145],
         [0.0046, 0.9596, 0.9486,  ..., 0.0045, 0.3585, 0.9596]],
        [[0.9876, 0.0061, 0.0094,  ..., 0.0548, 0.0046, 0.0022],
         [0.0033, 0.0061, 0.0094,  ..., 0.0416, 0.0046, 0.0022],
         [0.0059, 0.0061, 0.0094,  ..., 0.0416, 0.9862, 0.9935],
         [0.0033, 0.9818, 0.9718,  ..., 0.8619, 0.0046, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:19:15,500 [Process: 0] Synchronize training processes
2024-08-19 13:19:15,500 [Process: 0] Evaluating...
2024-08-19 13:19:15,502 [Process: 0] EPOCH 205:
2024-08-19 13:19:15,504 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8262e-01, 3.6721e-04, 9.9544e-01,  ..., 9.9192e-01,
          6.2679e-03, 1.3247e-02],
         [7.8237e-02, 3.2249e-04, 1.5215e-03,  ..., 2.6938e-03,
          6.2679e-03, 1.3247e-02],
         [9.8561e-02, 3.2249e-04, 1.5215e-03,  ..., 2.6938e-03,
          9.8120e-01, 9.6026e-01],
         [6.4058e-01, 9.9899e-01, 1.5215e-03,  ..., 2.6938e-03,
          6.2679e-03, 1.3247e-02]],
        [[2.4652e-02, 1.3631e-04, 9.9928e-01,  ..., 9.8585e-01,
          8.5549e-04, 1.1833e-02],
         [2.0421e-02, 1.3631e-04, 2.3948e-04,  ..., 3.9348e-03,
          8.5549e-04, 1.1833e-02],
         [9.3451e-01, 1.3631e-04, 2.3948e-04,  ..., 3.9348e-03,
          8.5549e-04, 9.6450e-01],
         [2.0421e-02, 9.9959e-01, 2.3948e-04,  ..., 6.2792e-03,
          9.9743e-01, 1.1833e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 206:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9960, 0.0080, 0.0059,  ..., 0.9756, 0.9280, 0.0127],
         [0.0013, 0.0080, 0.0059,  ..., 0.0079, 0.0165, 0.0108],
         [0.0013, 0.0080, 0.0059,  ..., 0.0086, 0.0390, 0.0108],
         [0.0013, 0.9759, 0.9824,  ..., 0.0079, 0.0165, 0.9657]],
        [[0.9910, 0.0052, 0.0171,  ..., 0.0049, 0.0059, 0.0028],
         [0.0026, 0.0052, 0.0202,  ..., 0.0049, 0.0062, 0.0028],
         [0.0026, 0.0052, 0.0171,  ..., 0.0049, 0.9820, 0.9915],
         [0.0038, 0.9844, 0.9457,  ..., 0.9853, 0.0059, 0.0028]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9997e-02, 3.6950e-03, 9.9453e-01,  ..., 9.9893e-01,
          8.6676e-03, 2.1138e-02],
         [2.1597e-02, 3.6950e-03, 1.8234e-03,  ..., 3.5532e-04,
          8.6676e-03, 2.1138e-02],
         [9.2681e-01, 3.6950e-03, 1.8234e-03,  ..., 3.5532e-04,
          9.7400e-01, 9.3231e-01],
         [2.1597e-02, 9.8892e-01, 1.8234e-03,  ..., 3.5532e-04,
          8.6676e-03, 2.5411e-02]],
        [[1.5645e-02, 1.0514e-03, 9.9276e-01,  ..., 9.9458e-01,
          1.9628e-04, 1.9316e-02],
         [1.5218e-02, 1.0514e-03, 2.4127e-03,  ..., 1.8063e-03,
          1.9628e-04, 1.9316e-02],
         [9.5392e-01, 1.0514e-03, 2.4127e-03,  ..., 1.8063e-03,
          1.9628e-04, 9.4132e-01],
         [1.5218e-02, 9.9685e-01, 2.4127e-03,  ..., 1.8063e-03,
          9.9941e-01, 2.0045e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 207:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9648, 0.0101, 0.0061,  ..., 0.9774, 0.9880, 0.0090],
         [0.0085, 0.0101, 0.0061,  ..., 0.0075, 0.0033, 0.0097],
         [0.0182, 0.0101, 0.0061,  ..., 0.0075, 0.0055, 0.0090],
         [0.0085, 0.9698, 0.9818,  ..., 0.0075, 0.0033, 0.9722]],
        [[0.9843, 0.0057, 0.0122,  ..., 0.0129, 0.0047, 0.0027],
         [0.0033, 0.0057, 0.0122,  ..., 0.0129, 0.0047, 0.0027],
         [0.0033, 0.0057, 0.0122,  ..., 0.0156, 0.9860, 0.9920],
         [0.0092, 0.9829, 0.9634,  ..., 0.9585, 0.0047, 0.0027]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:19:16,535 [Process: 0] Synchronize training processes
2024-08-19 13:19:16,536 [Process: 0] Evaluating...
2024-08-19 13:19:16,538 [Process: 0] EPOCH 206:
2024-08-19 13:19:16,540 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:17,583 [Process: 0] Synchronize training processes
2024-08-19 13:19:17,583 [Process: 0] Evaluating...
2024-08-19 13:19:17,585 [Process: 0] EPOCH 207:
2024-08-19 13:19:17,587 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5709e-03, 4.4324e-03, 9.7335e-01,  ..., 9.9476e-01,
          1.6628e-02, 1.5395e-02],
         [9.5709e-03, 4.2679e-03, 6.4044e-03,  ..., 1.7453e-03,
          1.6628e-02, 1.5395e-02],
         [9.7129e-01, 4.2679e-03, 6.4044e-03,  ..., 1.7453e-03,
          9.5012e-01, 9.5381e-01],
         [9.5709e-03, 9.8703e-01, 1.3840e-02,  ..., 1.7453e-03,
          1.6628e-02, 1.5395e-02]],
        [[2.4425e-02, 1.5317e-04, 9.9323e-01,  ..., 9.7437e-01,
          1.1409e-03, 8.9876e-03],
         [2.1909e-02, 1.5317e-04, 2.2553e-03,  ..., 6.5671e-03,
          7.4652e-04, 8.9876e-03],
         [9.3176e-01, 1.5317e-04, 2.2553e-03,  ..., 6.5671e-03,
          7.4652e-04, 9.7304e-01],
         [2.1909e-02, 9.9954e-01, 2.2553e-03,  ..., 1.2495e-02,
          9.9737e-01, 8.9876e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 208:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9577e-01, 7.1949e-03, 1.5723e-02,  ..., 9.9506e-01,
          9.8211e-01, 1.0398e-02],
         [1.4114e-03, 7.1949e-03, 1.5723e-02,  ..., 1.6479e-03,
          5.6696e-03, 1.0398e-02],
         [1.4114e-03, 7.1949e-03, 1.8811e-02,  ..., 1.6479e-03,
          6.5477e-03, 1.0398e-02],
         [1.4114e-03, 9.7842e-01, 9.4974e-01,  ..., 1.6479e-03,
          5.6696e-03, 9.6881e-01]],
        [[1.0000e+00, 6.8890e-03, 1.8798e-02,  ..., 9.5064e-03,
          1.0708e-02, 1.7220e-03],
         [1.4192e-06, 6.8890e-03, 3.1310e-02,  ..., 9.7565e-03,
          1.0708e-02, 1.7220e-03],
         [1.4192e-06, 6.8890e-03, 1.8813e-02,  ..., 9.5064e-03,
          9.6788e-01, 9.9483e-01],
         [1.4192e-06, 9.7933e-01, 9.3108e-01,  ..., 9.7123e-01,
          1.0708e-02, 1.7220e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1060e-02, 1.3603e-01, 9.9928e-01,  ..., 9.9729e-01,
          1.4815e-02, 1.1497e-02],
         [2.0449e-02, 8.2147e-01, 2.4026e-04,  ..., 8.4985e-04,
          1.4815e-02, 1.1497e-02],
         [9.3804e-01, 2.1250e-02, 2.4026e-04,  ..., 8.4985e-04,
          9.5555e-01, 9.6551e-01],
         [2.0449e-02, 2.1250e-02, 2.4026e-04,  ..., 1.0071e-03,
          1.4815e-02, 1.1497e-02]],
        [[2.0698e-02, 1.7411e-04, 9.9708e-01,  ..., 9.7513e-01,
          1.0393e-04, 7.6036e-03],
         [1.7911e-02, 1.7411e-04, 9.7463e-04,  ..., 7.0856e-03,
          1.0393e-04, 7.6036e-03],
         [9.4348e-01, 1.7411e-04, 9.7463e-04,  ..., 7.0856e-03,
          1.0393e-04, 9.7719e-01],
         [1.7911e-02, 9.9948e-01, 9.7463e-04,  ..., 1.0697e-02,
          9.9969e-01, 7.6036e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 209:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-19 13:19:18,628 [Process: 0] Synchronize training processes
2024-08-19 13:19:18,628 [Process: 0] Evaluating...
2024-08-19 13:19:18,630 [Process: 0] EPOCH 208:
2024-08-19 13:19:18,632 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:19,673 [Process: 0] Synchronize training processes
2024-08-19 13:19:19,673 [Process: 0] Evaluating...
2024-08-19 13:19:19,675 [Process: 0] EPOCH 209:
2024-08-19 13:19:19,677 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[9.8625e-01, 1.0397e-02, 4.3871e-02,  ..., 9.9536e-01,
          9.9485e-01, 4.1975e-03],
         [4.5821e-03, 1.0397e-02, 4.3871e-02,  ..., 1.5040e-03,
          1.6065e-03, 4.1975e-03],
         [4.5821e-03, 1.0397e-02, 6.1821e-02,  ..., 1.6345e-03,
          1.9394e-03, 4.1975e-03],
         [4.5821e-03, 9.6881e-01, 8.5044e-01,  ..., 1.5040e-03,
          1.6065e-03, 9.8741e-01]],
        [[9.9986e-01, 3.1741e-02, 1.5352e-02,  ..., 1.8577e-02,
          3.4696e-03, 1.0411e-02],
         [4.6346e-05, 2.6579e-02, 1.5352e-02,  ..., 1.5799e-02,
          3.4696e-03, 1.0411e-02],
         [4.6346e-05, 2.7177e-02, 1.5352e-02,  ..., 1.7218e-02,
          9.8959e-01, 9.6877e-01],
         [4.6346e-05, 9.1450e-01, 9.5394e-01,  ..., 9.4841e-01,
          3.4696e-03, 1.0411e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8800e-02, 6.4503e-01, 9.9790e-01,  ..., 9.8798e-01,
          4.9885e-03, 9.7336e-03],
         [2.5351e-02, 2.0014e-01, 7.0079e-04,  ..., 4.0055e-03,
          4.9885e-03, 9.7336e-03],
         [9.2050e-01, 5.2011e-02, 7.0079e-04,  ..., 4.0055e-03,
          9.8503e-01, 9.7080e-01],
         [2.5351e-02, 1.0282e-01, 7.0079e-04,  ..., 4.0055e-03,
          4.9885e-03, 9.7336e-03]],
        [[1.9779e-02, 3.7910e-03, 9.7950e-01,  ..., 9.9367e-01,
          6.9852e-04, 1.2254e-02],
         [1.8515e-02, 4.5538e-03, 6.1505e-03,  ..., 1.9936e-03,
          6.9852e-04, 1.2254e-02],
         [9.4319e-01, 3.7910e-03, 6.1505e-03,  ..., 1.9936e-03,
          6.9852e-04, 9.6324e-01],
         [1.8515e-02, 9.8786e-01, 8.1973e-03,  ..., 2.3409e-03,
          9.9790e-01, 1.2254e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 210:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7420e-01, 2.0437e-02, 8.4945e-03,  ..., 9.9402e-01,
          9.9153e-01, 2.0054e-02],
         [7.8186e-03, 1.6283e-02, 8.4945e-03,  ..., 1.9924e-03,
          2.8218e-03, 1.3814e-02],
         [1.0164e-02, 1.6283e-02, 8.4945e-03,  ..., 1.9924e-03,
          2.8218e-03, 1.3814e-02],
         [7.8186e-03, 9.4700e-01, 9.7452e-01,  ..., 1.9924e-03,
          2.8218e-03, 9.5232e-01]],
        [[1.0000e+00, 1.1419e-02, 1.4806e-02,  ..., 1.3203e-02,
          9.4643e-04, 2.2072e-03],
         [2.3994e-07, 1.1419e-02, 1.4806e-02,  ..., 1.3203e-02,
          9.4643e-04, 2.2072e-03],
         [2.3994e-07, 1.1419e-02, 1.4806e-02,  ..., 1.3203e-02,
          9.9716e-01, 9.9338e-01],
         [2.3994e-07, 9.6574e-01, 9.5558e-01,  ..., 9.6039e-01,
          9.4643e-04, 2.2072e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4574e-02, 5.2556e-01, 9.9093e-01,  ..., 9.9906e-01,
          5.1178e-03, 4.0495e-03],
         [1.3946e-02, 3.0045e-02, 3.0240e-03,  ..., 3.1263e-04,
          5.1178e-03, 4.0495e-03],
         [9.5753e-01, 3.0045e-02, 3.0240e-03,  ..., 3.1263e-04,
          9.8465e-01, 9.8785e-01],
         [1.3946e-02, 4.1435e-01, 3.0240e-03,  ..., 3.1263e-04,
          5.1178e-03, 4.0495e-03]],
        [[2.1498e-02, 2.3401e-03, 9.7889e-01,  ..., 9.8095e-01,
          8.3096e-05, 2.3619e-02],
         [2.1498e-02, 2.3401e-03, 7.3493e-03,  ..., 5.5707e-03,
          8.3096e-05, 2.3619e-02],
         [9.3551e-01, 2.3401e-03, 6.8801e-03,  ..., 5.5707e-03,
          8.3096e-05, 9.2914e-01],
         [2.1498e-02, 9.9298e-01, 6.8801e-03,  ..., 7.9132e-03,
          9.9975e-01, 2.3619e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 211:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:20,716 [Process: 0] Synchronize training processes
2024-08-19 13:19:20,717 [Process: 0] Evaluating...
2024-08-19 13:19:20,718 [Process: 0] EPOCH 210:
2024-08-19 13:19:20,720 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:21,769 [Process: 0] Synchronize training processes
2024-08-19 13:19:21,769 [Process: 0] Evaluating...
2024-08-19 13:19:21,771 [Process: 0] EPOCH 211:
2024-08-19 13:19:21,773 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9336e-01, 2.4574e-02, 5.4104e-03,  ..., 9.8626e-01,
          2.3993e-01, 2.2506e-02],
         [2.2119e-03, 3.4320e-02, 5.4104e-03,  ..., 4.5806e-03,
          8.0642e-02, 1.8147e-02],
         [2.2119e-03, 3.4892e-02, 5.4104e-03,  ..., 4.5806e-03,
          1.1022e-01, 1.8147e-02],
         [2.2119e-03, 9.0621e-01, 9.8377e-01,  ..., 4.5806e-03,
          5.6921e-01, 9.4120e-01]],
        [[9.9916e-01, 1.0688e-02, 1.1731e-02,  ..., 3.9378e-02,
          1.5149e-03, 9.0367e-04],
         [2.8094e-04, 1.0688e-02, 1.1731e-02,  ..., 4.9458e-02,
          1.5149e-03, 9.0367e-04],
         [2.8094e-04, 1.0688e-02, 1.1731e-02,  ..., 5.4008e-02,
          9.9546e-01, 9.9729e-01],
         [2.8094e-04, 9.6794e-01, 9.6481e-01,  ..., 8.5716e-01,
          1.5149e-03, 9.0367e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.6472e-03, 8.8453e-03, 9.9046e-01,  ..., 9.8832e-01,
          4.8697e-03, 1.2906e-02],
         [7.6472e-03, 3.7673e-03, 4.5183e-03,  ..., 3.6077e-03,
          4.8697e-03, 1.2906e-02],
         [9.7706e-01, 3.7673e-03, 2.5120e-03,  ..., 3.6077e-03,
          9.8539e-01, 9.6128e-01],
         [7.6472e-03, 9.8362e-01, 2.5120e-03,  ..., 4.4691e-03,
          4.8697e-03, 1.2906e-02]],
        [[1.1801e-02, 5.7536e-04, 9.9830e-01,  ..., 9.9651e-01,
          1.8286e-04, 1.2741e-02],
         [1.1801e-02, 5.7536e-04, 5.6630e-04,  ..., 1.1645e-03,
          1.8286e-04, 1.2741e-02],
         [9.6460e-01, 5.7536e-04, 5.6630e-04,  ..., 1.1645e-03,
          1.8286e-04, 9.6178e-01],
         [1.1801e-02, 9.9827e-01, 5.6630e-04,  ..., 1.1645e-03,
          9.9945e-01, 1.2741e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 212:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7846e-01, 1.0961e-02, 5.1476e-02,  ..., 9.9908e-01,
          9.7567e-01, 1.2304e-02],
         [7.1808e-03, 1.0961e-02, 3.7387e-02,  ..., 3.0823e-04,
          7.8267e-03, 1.1831e-02],
         [7.1808e-03, 1.0961e-02, 3.9287e-02,  ..., 3.0823e-04,
          8.6717e-03, 1.1955e-02],
         [7.1808e-03, 9.6712e-01, 8.7185e-01,  ..., 3.0823e-04,
          7.8267e-03, 9.6391e-01]],
        [[9.9997e-01, 7.1924e-02, 1.1096e-02,  ..., 1.2080e-02,
          3.3738e-03, 1.9182e-03],
         [8.4691e-06, 3.9454e-02, 1.1096e-02,  ..., 1.2080e-02,
          3.3738e-03, 1.9182e-03],
         [8.4691e-06, 3.9454e-02, 1.1096e-02,  ..., 1.2080e-02,
          9.8988e-01, 9.9425e-01],
         [8.4691e-06, 8.4917e-01, 9.6671e-01,  ..., 9.6376e-01,
          3.3738e-03, 1.9182e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-19 13:19:22,816 [Process: 0] Synchronize training processes
2024-08-19 13:19:22,816 [Process: 0] Evaluating...
2024-08-19 13:19:23,240 [Process: 0] EPOCH 212:
2024-08-19 13:19:23,243 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:24,277 [Process: 0] Synchronize training processes
2024-08-19 13:19:24,277 [Process: 0] Evaluating...
2024-08-19 13:19:24,279 [Process: 0] EPOCH 213:
2024-08-19 13:19:24,281 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[4.7965e-02, 2.3874e-03, 9.8903e-01,  ..., 9.9561e-01,
          1.9200e-02, 8.6986e-02],
         [3.7055e-02, 1.6699e-03, 5.9556e-03,  ..., 1.7539e-03,
          1.9200e-02, 3.9946e-02],
         [8.6683e-01, 1.6699e-03, 2.5060e-03,  ..., 1.3158e-03,
          9.4240e-01, 8.2868e-01],
         [4.8154e-02, 9.9427e-01, 2.5060e-03,  ..., 1.3158e-03,
          1.9200e-02, 4.4392e-02]],
        [[1.4753e-02, 3.8691e-04, 9.8985e-01,  ..., 9.9673e-01,
          4.0048e-04, 9.7028e-03],
         [1.4753e-02, 3.8691e-04, 5.3487e-03,  ..., 1.1999e-03,
          4.0048e-04, 9.7028e-03],
         [9.5574e-01, 3.8691e-04, 2.4029e-03,  ..., 1.0348e-03,
          4.0048e-04, 9.7089e-01],
         [1.4753e-02, 9.9884e-01, 2.4029e-03,  ..., 1.0348e-03,
          9.9880e-01, 9.7028e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 213:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9494e-01, 9.9696e-03, 5.1809e-03,  ..., 9.9865e-01,
          9.9248e-01, 4.4650e-03],
         [1.6860e-03, 9.9696e-03, 5.1809e-03,  ..., 4.4918e-04,
          2.1303e-03, 4.4650e-03],
         [1.6860e-03, 9.9696e-03, 5.1809e-03,  ..., 4.4918e-04,
          3.2607e-03, 4.4650e-03],
         [1.6860e-03, 9.7009e-01, 9.8446e-01,  ..., 4.4918e-04,
          2.1303e-03, 9.8660e-01]],
        [[9.9622e-01, 5.3475e-03, 5.9503e-03,  ..., 2.0961e-02,
          2.3046e-02, 1.8531e-03],
         [1.2583e-03, 5.3475e-03, 5.9503e-03,  ..., 2.7787e-02,
          2.3046e-02, 1.8531e-03],
         [1.2583e-03, 5.3475e-03, 5.9503e-03,  ..., 2.0961e-02,
          9.3086e-01, 9.9444e-01],
         [1.2583e-03, 9.8396e-01, 9.8215e-01,  ..., 9.3029e-01,
          2.3046e-02, 1.8531e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1841e-02, 2.3317e-03, 9.9499e-01,  ..., 9.9732e-01,
          2.8355e-03, 2.5769e-02],
         [2.7433e-02, 2.3317e-03, 1.6698e-03,  ..., 9.7350e-04,
          2.8355e-03, 2.4950e-02],
         [9.1329e-01, 2.3317e-03, 1.6698e-03,  ..., 8.5090e-04,
          9.9149e-01, 9.2433e-01],
         [2.7433e-02, 9.9300e-01, 1.6698e-03,  ..., 8.5090e-04,
          2.8355e-03, 2.4950e-02]],
        [[9.0178e-03, 1.6374e-03, 9.7520e-01,  ..., 9.9150e-01,
          9.6015e-04, 2.4273e-02],
         [9.0178e-03, 1.6374e-03, 1.2979e-02,  ..., 2.8097e-03,
          9.6015e-04, 2.4273e-02],
         [9.7295e-01, 1.6374e-03, 5.9085e-03,  ..., 2.8097e-03,
          9.6015e-04, 9.2475e-01],
         [9.0178e-03, 9.9509e-01, 5.9085e-03,  ..., 2.8825e-03,
          9.9712e-01, 2.6708e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 214:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9877e-01, 1.4693e-02, 1.8062e-02,  ..., 9.9922e-01,
          9.8772e-01, 5.8066e-03],
         [4.0886e-04, 1.4693e-02, 1.8062e-02,  ..., 2.5948e-04,
          3.5808e-03, 5.8066e-03],
         [4.0886e-04, 1.7940e-02, 1.8062e-02,  ..., 2.5948e-04,
          5.1135e-03, 5.8066e-03],
         [4.0886e-04, 9.5267e-01, 9.4581e-01,  ..., 2.5948e-04,
          3.5808e-03, 9.8258e-01]],
        [[9.9996e-01, 1.1314e-02, 2.6546e-02,  ..., 1.2624e-02,
          6.0580e-03, 2.8011e-03],
         [1.2685e-05, 9.6867e-03, 2.0068e-02,  ..., 1.1018e-02,
          6.0580e-03, 2.8011e-03],
         [1.2685e-05, 9.6867e-03, 2.4256e-02,  ..., 1.1018e-02,
          9.8183e-01, 9.9160e-01],
         [1.2685e-05, 9.6931e-01, 9.2913e-01,  ..., 9.6534e-01,
          6.0580e-03, 2.8011e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:19:25,322 [Process: 0] Synchronize training processes
2024-08-19 13:19:25,322 [Process: 0] Evaluating...
2024-08-19 13:19:25,324 [Process: 0] EPOCH 214:
2024-08-19 13:19:25,326 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:26,364 [Process: 0] Synchronize training processes
2024-08-19 13:19:26,365 [Process: 0] Evaluating...
2024-08-19 13:19:26,366 [Process: 0] EPOCH 215:
2024-08-19 13:19:26,369 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7062e-01, 1.0170e-03, 9.8844e-01,  ..., 9.9848e-01,
          2.5195e-02, 2.4879e-02],
         [7.2220e-02, 8.7589e-04, 2.6766e-03,  ..., 5.0777e-04,
          2.3858e-02, 2.4879e-02],
         [5.8494e-01, 8.7589e-04, 2.6766e-03,  ..., 5.0777e-04,
          9.2709e-01, 9.2331e-01],
         [7.2220e-02, 9.9723e-01, 6.2023e-03,  ..., 5.0777e-04,
          2.3858e-02, 2.6928e-02]],
        [[1.1951e-02, 6.4816e-03, 9.9839e-01,  ..., 9.9968e-01,
          4.6254e-05, 1.2741e-02],
         [1.1951e-02, 6.4816e-03, 5.3695e-04,  ..., 1.0657e-04,
          4.6254e-05, 1.2741e-02],
         [9.6415e-01, 6.4816e-03, 5.3695e-04,  ..., 1.0657e-04,
          4.6254e-05, 9.6178e-01],
         [1.1951e-02, 9.8056e-01, 5.3695e-04,  ..., 1.0657e-04,
          9.9986e-01, 1.2741e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 215:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8228e-01, 5.3984e-03, 1.3445e-02,  ..., 9.9788e-01,
          9.9550e-01, 9.0068e-03],
         [7.2522e-03, 5.3984e-03, 1.3445e-02,  ..., 7.0787e-04,
          1.5016e-03, 9.0068e-03],
         [5.2320e-03, 5.3984e-03, 1.3445e-02,  ..., 7.0787e-04,
          1.5016e-03, 9.0068e-03],
         [5.2320e-03, 9.8381e-01, 9.5966e-01,  ..., 7.0787e-04,
          1.5016e-03, 9.7298e-01]],
        [[9.9998e-01, 7.1712e-03, 1.7886e-02,  ..., 1.1795e-02,
          1.0158e-03, 4.0582e-03],
         [6.2091e-06, 7.1712e-03, 1.7886e-02,  ..., 1.2340e-02,
          1.0158e-03, 4.0582e-03],
         [6.2091e-06, 7.1712e-03, 1.7886e-02,  ..., 1.1795e-02,
          9.9695e-01, 9.8783e-01],
         [6.2091e-06, 9.7849e-01, 9.4634e-01,  ..., 9.6407e-01,
          1.0158e-03, 4.0582e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1807e-01, 3.8721e-03, 9.9945e-01,  ..., 9.6130e-01,
          1.5018e-02, 1.2914e-02],
         [6.4506e-02, 2.2167e-03, 1.8264e-04,  ..., 7.9703e-03,
          1.5018e-02, 1.2914e-02],
         [6.5291e-01, 2.2167e-03, 1.8264e-04,  ..., 7.9703e-03,
          9.5494e-01, 9.6126e-01],
         [6.4506e-02, 9.9169e-01, 1.8264e-04,  ..., 2.2762e-02,
          1.5018e-02, 1.2914e-02]],
        [[1.2600e-02, 4.9258e-04, 9.9458e-01,  ..., 9.9509e-01,
          8.7198e-04, 1.2072e-02],
         [1.2600e-02, 4.9258e-04, 1.5622e-03,  ..., 1.6363e-03,
          8.7198e-04, 1.2072e-02],
         [9.6220e-01, 4.9258e-04, 1.5622e-03,  ..., 1.6363e-03,
          8.7198e-04, 9.6378e-01],
         [1.2600e-02, 9.9852e-01, 2.2978e-03,  ..., 1.6363e-03,
          9.9738e-01, 1.2072e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 216:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4038e-01, 1.4490e-02, 1.8181e-02,  ..., 9.8658e-01,
          9.4898e-01, 1.2758e-02],
         [1.5399e-02, 2.3630e-02, 1.8181e-02,  ..., 3.7840e-03,
          1.2803e-02, 1.0408e-02],
         [2.8824e-02, 1.4490e-02, 2.0297e-02,  ..., 5.8528e-03,
          2.5411e-02, 1.0408e-02],
         [1.5399e-02, 9.4739e-01, 9.4334e-01,  ..., 3.7840e-03,
          1.2803e-02, 9.6643e-01]],
        [[9.9845e-01, 1.6637e-02, 2.1305e-02,  ..., 2.4339e-02,
          1.2952e-03, 8.7612e-03],
         [4.6065e-04, 1.6637e-02, 3.2723e-02,  ..., 2.4339e-02,
          1.2952e-03, 8.7612e-03],
         [6.3202e-04, 1.6637e-02, 2.1305e-02,  ..., 2.7611e-02,
          9.9611e-01, 9.7372e-01],
         [4.6065e-04, 9.5009e-01, 9.2467e-01,  ..., 9.2371e-01,
          1.2952e-03, 8.7612e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:19:27,411 [Process: 0] Synchronize training processes
2024-08-19 13:19:27,411 [Process: 0] Evaluating...
2024-08-19 13:19:27,413 [Process: 0] EPOCH 216:
2024-08-19 13:19:27,415 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:28,455 [Process: 0] Synchronize training processes
2024-08-19 13:19:28,455 [Process: 0] Evaluating...
2024-08-19 13:19:28,457 [Process: 0] EPOCH 217:
2024-08-19 13:19:28,459 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8569e-02, 4.5084e-02, 9.9479e-01,  ..., 9.9255e-01,
          2.3595e-02, 1.3840e-02],
         [2.7220e-02, 4.4748e-03, 1.5703e-03,  ..., 2.4830e-03,
          2.3595e-02, 1.3840e-02],
         [9.0699e-01, 4.4748e-03, 1.5703e-03,  ..., 2.4830e-03,
          9.2532e-01, 9.5848e-01],
         [2.7220e-02, 9.4597e-01, 2.0705e-03,  ..., 2.4830e-03,
          2.7492e-02, 1.3840e-02]],
        [[3.1052e-02, 4.2819e-05, 9.9523e-01,  ..., 9.9583e-01,
          3.6786e-04, 1.5657e-02],
         [2.8191e-02, 4.2819e-05, 1.5914e-03,  ..., 1.3906e-03,
          3.6786e-04, 1.5657e-02],
         [9.1145e-01, 4.2819e-05, 1.5914e-03,  ..., 1.3906e-03,
          3.6786e-04, 9.5303e-01],
         [2.9302e-02, 9.9987e-01, 1.5914e-03,  ..., 1.3906e-03,
          9.9890e-01, 1.5657e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 217:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9534e-01, 3.3391e-03, 1.7005e-02,  ..., 9.8818e-01,
          8.8294e-01, 1.4024e-02],
         [1.5530e-03, 3.3391e-03, 1.7005e-02,  ..., 3.6680e-03,
          2.9220e-02, 2.3030e-02],
         [1.5530e-03, 3.3391e-03, 1.7005e-02,  ..., 4.4875e-03,
          6.6788e-02, 1.4024e-02],
         [1.5530e-03, 9.8998e-01, 9.4898e-01,  ..., 3.6680e-03,
          2.1052e-02, 9.4892e-01]],
        [[9.9947e-01, 1.0179e-02, 2.7740e-03,  ..., 3.2374e-02,
          1.4913e-03, 3.1969e-03],
         [1.1419e-04, 8.5584e-03, 4.0908e-03,  ..., 3.0202e-02,
          1.4913e-03, 3.1969e-03],
         [3.0625e-04, 8.5584e-03, 2.7740e-03,  ..., 4.1540e-02,
          9.9553e-01, 9.9041e-01],
         [1.1419e-04, 9.7270e-01, 9.9036e-01,  ..., 8.9589e-01,
          1.4913e-03, 3.1969e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1112e-02, 3.3881e-03, 9.9710e-01,  ..., 9.7773e-01,
          8.2821e-03, 1.8005e-02],
         [2.0910e-02, 1.3670e-03, 9.6570e-04,  ..., 5.9413e-03,
          8.2821e-03, 1.8005e-02],
         [9.3707e-01, 1.3670e-03, 9.6570e-04,  ..., 5.9413e-03,
          9.7515e-01, 9.4549e-01],
         [2.0910e-02, 9.9388e-01, 9.6570e-04,  ..., 1.0385e-02,
          8.2821e-03, 1.8501e-02]],
        [[1.4416e-02, 2.9506e-04, 9.9549e-01,  ..., 9.8474e-01,
          1.2247e-04, 1.1635e-02],
         [1.4416e-02, 2.9506e-04, 1.5017e-03,  ..., 3.2747e-03,
          1.2247e-04, 1.1635e-02],
         [9.5675e-01, 2.9506e-04, 1.5017e-03,  ..., 3.2747e-03,
          1.2247e-04, 9.6510e-01],
         [1.4416e-02, 9.9911e-01, 1.5017e-03,  ..., 8.7137e-03,
          9.9963e-01, 1.1635e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 218:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5208e-01, 1.4507e-02, 2.9498e-02,  ..., 9.9312e-01,
          9.7194e-01, 5.2161e-02],
         [1.2715e-02, 1.8451e-02, 2.7397e-02,  ..., 2.2889e-03,
          5.1998e-03, 3.6745e-02],
         [2.2494e-02, 1.4507e-02, 2.6754e-02,  ..., 2.3036e-03,
          1.7662e-02, 5.1284e-02],
         [1.2715e-02, 9.5254e-01, 9.1635e-01,  ..., 2.2889e-03,
          5.1998e-03, 8.5981e-01]],
        [[9.9977e-01, 6.6740e-03, 8.5984e-03,  ..., 1.2669e-02,
          7.7500e-04, 3.2776e-03],
         [7.1791e-05, 6.4560e-03, 1.1622e-02,  ..., 1.2669e-02,
          7.7500e-04, 3.2776e-03],
         [8.8410e-05, 6.4560e-03, 8.5984e-03,  ..., 1.2669e-02,
          9.9768e-01, 9.9017e-01],
         [7.1791e-05, 9.8041e-01, 9.7118e-01,  ..., 9.6199e-01,
          7.7500e-04, 3.2776e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:19:29,498 [Process: 0] Synchronize training processes
2024-08-19 13:19:29,498 [Process: 0] Evaluating...
2024-08-19 13:19:29,500 [Process: 0] EPOCH 218:
2024-08-19 13:19:29,502 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2113e-03, 3.9279e-02, 9.9660e-01,  ..., 9.8670e-01,
          1.2833e-02, 1.4899e-02],
         [7.2113e-03, 7.4774e-03, 1.1334e-03,  ..., 4.4276e-03,
          1.2833e-02, 1.4899e-02],
         [9.7837e-01, 7.4774e-03, 1.1334e-03,  ..., 4.4276e-03,
          9.6150e-01, 9.5530e-01],
         [7.2113e-03, 9.4577e-01, 1.1334e-03,  ..., 4.4431e-03,
          1.2833e-02, 1.4899e-02]],
        [[1.7698e-02, 2.2298e-03, 9.9484e-01,  ..., 9.9695e-01,
          3.4875e-04, 6.3165e-03],
         [1.7698e-02, 2.2298e-03, 1.7203e-03,  ..., 1.0174e-03,
          2.6613e-04, 6.3165e-03],
         [9.4691e-01, 2.2298e-03, 1.7203e-03,  ..., 1.0174e-03,
          2.6613e-04, 9.8105e-01],
         [1.7698e-02, 9.9331e-01, 1.7203e-03,  ..., 1.0174e-03,
          9.9912e-01, 6.3165e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 219:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6601e-01, 1.4971e-02, 8.9400e-03,  ..., 9.9965e-01,
          9.6497e-01, 1.9775e-02],
         [8.4015e-03, 1.4971e-02, 8.9400e-03,  ..., 1.1675e-04,
          7.7549e-03, 1.9775e-02],
         [1.7189e-02, 1.4971e-02, 8.9400e-03,  ..., 1.1675e-04,
          1.9515e-02, 1.9775e-02],
         [8.4015e-03, 9.5509e-01, 9.7318e-01,  ..., 1.1675e-04,
          7.7549e-03, 9.4067e-01]],
        [[9.9604e-01, 1.1449e-02, 1.3245e-02,  ..., 1.1114e-02,
          1.6031e-03, 1.9910e-02],
         [8.1887e-04, 1.1449e-02, 1.4876e-02,  ..., 1.1794e-02,
          1.6031e-03, 1.9910e-02],
         [2.3232e-03, 1.1449e-02, 1.3245e-02,  ..., 1.1114e-02,
          9.9519e-01, 9.4027e-01],
         [8.1887e-04, 9.6565e-01, 9.5863e-01,  ..., 9.6598e-01,
          1.6031e-03, 1.9910e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8139e-02, 3.3078e-03, 9.9737e-01,  ..., 9.9528e-01,
          5.5887e-03, 1.2883e-02],
         [1.8139e-02, 3.3078e-03, 7.4468e-04,  ..., 1.5739e-03,
          5.5887e-03, 1.2883e-02],
         [9.4558e-01, 3.3078e-03, 7.4468e-04,  ..., 1.5739e-03,
          9.8323e-01, 9.6135e-01],
         [1.8139e-02, 9.9008e-01, 1.1426e-03,  ..., 1.5739e-03,
          5.5887e-03, 1.2883e-02]],
        [[1.6180e-02, 1.2871e-03, 9.9651e-01,  ..., 9.9697e-01,
          1.9891e-04, 8.1735e-03],
         [1.6180e-02, 1.2871e-03, 1.1644e-03,  ..., 1.0096e-03,
          1.9891e-04, 8.1735e-03],
         [9.5146e-01, 1.2871e-03, 1.1644e-03,  ..., 1.0096e-03,
          1.9891e-04, 9.7548e-01],
         [1.6180e-02, 9.9614e-01, 1.1644e-03,  ..., 1.0096e-03,
          9.9940e-01, 8.1735e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 220:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9573, 0.0091, 0.0134,  ..., 0.9865, 0.9136, 0.0094],
         [0.0219, 0.0091, 0.0134,  ..., 0.0043, 0.0263, 0.0094],
         [0.0116, 0.0091, 0.0136,  ..., 0.0049, 0.0373, 0.0094],
         [0.0093, 0.9728, 0.9595,  ..., 0.0043, 0.0228, 0.9718]],
        [[0.9706, 0.0193, 0.0053,  ..., 0.0199, 0.0023, 0.0035],
         [0.0069, 0.0127, 0.0053,  ..., 0.0233, 0.0023, 0.0035],
         [0.0157, 0.0127, 0.0053,  ..., 0.0199, 0.9932, 0.9895],
         [0.0069, 0.9553, 0.9841,  ..., 0.9368, 0.0023, 0.0035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:19:30,542 [Process: 0] Synchronize training processes
2024-08-19 13:19:30,542 [Process: 0] Evaluating...
2024-08-19 13:19:30,544 [Process: 0] EPOCH 219:
2024-08-19 13:19:30,545 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:31,584 [Process: 0] Synchronize training processes
2024-08-19 13:19:31,584 [Process: 0] Evaluating...
2024-08-19 13:19:31,586 [Process: 0] EPOCH 220:
2024-08-19 13:19:31,588 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2643e-01, 4.9624e-04, 9.9667e-01,  ..., 9.9853e-01,
          9.9379e-03, 1.1097e-02],
         [9.1046e-02, 4.9624e-04, 1.0555e-03,  ..., 4.8928e-04,
          9.9379e-03, 1.1097e-02],
         [5.6893e-01, 4.9624e-04, 1.0555e-03,  ..., 4.8928e-04,
          9.7019e-01, 9.6671e-01],
         [1.1359e-01, 9.9851e-01, 1.2164e-03,  ..., 4.8928e-04,
          9.9379e-03, 1.1097e-02]],
        [[8.2565e-03, 1.6781e-03, 9.9615e-01,  ..., 9.9862e-01,
          2.8865e-04, 1.3487e-02],
         [8.2565e-03, 1.6781e-03, 1.2837e-03,  ..., 4.6096e-04,
          2.8865e-04, 1.3487e-02],
         [9.7523e-01, 1.6781e-03, 1.2837e-03,  ..., 4.6096e-04,
          2.8865e-04, 9.5954e-01],
         [8.2565e-03, 9.9497e-01, 1.2837e-03,  ..., 4.6096e-04,
          9.9913e-01, 1.3487e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 221:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9820e-01, 1.8952e-02, 1.8886e-02,  ..., 9.6211e-01,
          9.8419e-01, 6.8326e-03],
         [6.0048e-04, 1.8952e-02, 1.8886e-02,  ..., 1.0865e-02,
          4.6882e-03, 6.8326e-03],
         [6.0048e-04, 1.8952e-02, 1.8886e-02,  ..., 1.6159e-02,
          6.4340e-03, 6.8326e-03],
         [6.0048e-04, 9.4314e-01, 9.4334e-01,  ..., 1.0865e-02,
          4.6882e-03, 9.7950e-01]],
        [[9.7699e-01, 2.1997e-02, 9.0936e-03,  ..., 1.1448e-02,
          1.6380e-03, 2.9380e-03],
         [3.0254e-03, 1.0838e-02, 9.0936e-03,  ..., 1.1448e-02,
          1.6380e-03, 2.9380e-03],
         [1.6959e-02, 1.0838e-02, 9.4490e-03,  ..., 1.1448e-02,
          9.9509e-01, 9.9119e-01],
         [3.0254e-03, 9.5633e-01, 9.7236e-01,  ..., 9.6566e-01,
          1.6380e-03, 2.9380e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0927e-01, 9.8775e-04, 9.9496e-01,  ..., 9.9968e-01,
          1.7734e-02, 2.4355e-02],
         [8.9173e-02, 7.4759e-04, 1.6794e-03,  ..., 1.0516e-04,
          1.7734e-02, 1.9946e-02],
         [5.2733e-01, 7.4759e-04, 1.6794e-03,  ..., 1.0516e-04,
          9.4680e-01, 9.3575e-01],
         [1.7422e-01, 9.9752e-01, 1.6794e-03,  ..., 1.0516e-04,
          1.7734e-02, 1.9946e-02]],
        [[8.2337e-03, 2.2421e-03, 9.9753e-01,  ..., 9.8864e-01,
          1.3590e-04, 1.9005e-02],
         [8.2337e-03, 2.2421e-03, 8.2463e-04,  ..., 3.7141e-03,
          1.3590e-04, 1.5528e-02],
         [9.7530e-01, 2.2421e-03, 8.2463e-04,  ..., 3.7141e-03,
          1.3590e-04, 9.4994e-01],
         [8.2337e-03, 9.9327e-01, 8.2463e-04,  ..., 3.9336e-03,
          9.9959e-01, 1.5528e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 222:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:32,628 [Process: 0] Synchronize training processes
2024-08-19 13:19:32,628 [Process: 0] Evaluating...
2024-08-19 13:19:32,630 [Process: 0] EPOCH 221:
2024-08-19 13:19:32,632 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:33,670 [Process: 0] Synchronize training processes
2024-08-19 13:19:33,671 [Process: 0] Evaluating...
2024-08-19 13:19:34,095 [Process: 0] EPOCH 222:
2024-08-19 13:19:34,097 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8419e-01, 8.2226e-03, 8.3102e-03,  ..., 9.9862e-01,
          9.6645e-01, 5.7250e-03],
         [5.2500e-03, 8.2226e-03, 8.3102e-03,  ..., 4.5844e-04,
          9.5958e-03, 5.7250e-03],
         [5.3114e-03, 8.2226e-03, 8.3102e-03,  ..., 4.5844e-04,
          1.4358e-02, 5.7250e-03],
         [5.2500e-03, 9.7533e-01, 9.7507e-01,  ..., 4.5844e-04,
          9.5958e-03, 9.8282e-01]],
        [[9.9553e-01, 2.6719e-03, 2.1245e-02,  ..., 4.3093e-02,
          9.1201e-04, 8.3099e-03],
         [6.0953e-04, 2.6719e-03, 2.1245e-02,  ..., 3.6256e-02,
          9.1201e-04, 8.3099e-03],
         [3.2489e-03, 2.6719e-03, 2.4175e-02,  ..., 4.1974e-02,
          9.9726e-01, 9.7507e-01],
         [6.0953e-04, 9.9198e-01, 9.3333e-01,  ..., 8.7868e-01,
          9.1201e-04, 8.3099e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3142e-02, 8.7807e-04, 9.9057e-01,  ..., 9.9379e-01,
          4.4117e-03, 3.3221e-02],
         [1.3142e-02, 8.3178e-04, 3.1427e-03,  ..., 1.5095e-03,
          4.4117e-03, 2.3912e-02],
         [9.6057e-01, 8.3178e-04, 3.1427e-03,  ..., 1.5095e-03,
          9.8676e-01, 9.1896e-01],
         [1.3142e-02, 9.9746e-01, 3.1427e-03,  ..., 3.1872e-03,
          4.4117e-03, 2.3912e-02]],
        [[2.6901e-02, 1.2966e-02, 9.8954e-01,  ..., 9.9721e-01,
          3.5073e-05, 1.3849e-02],
         [2.4540e-02, 1.2966e-02, 3.4879e-03,  ..., 9.2910e-04,
          3.5073e-05, 1.3849e-02],
         [9.2118e-01, 1.2966e-02, 3.4879e-03,  ..., 9.2910e-04,
          3.5073e-05, 9.5845e-01],
         [2.7383e-02, 9.6110e-01, 3.4879e-03,  ..., 9.2910e-04,
          9.9989e-01, 1.3849e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 223:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3180e-01, 1.4857e-02, 9.6218e-03,  ..., 9.9398e-01,
          5.0801e-01, 1.1311e-02],
         [2.8655e-02, 1.2008e-02, 9.6218e-03,  ..., 2.0059e-03,
          7.5126e-02, 1.1311e-02],
         [2.3247e-02, 1.2008e-02, 9.6218e-03,  ..., 2.0059e-03,
          9.0990e-02, 1.1445e-02],
         [1.6295e-02, 9.6113e-01, 9.7113e-01,  ..., 2.0059e-03,
          3.2587e-01, 9.6593e-01]],
        [[9.0291e-01, 1.2409e-02, 3.5742e-03,  ..., 5.3144e-02,
          3.2482e-04, 2.5616e-02],
         [8.2469e-03, 1.2409e-02, 3.5742e-03,  ..., 3.9138e-02,
          3.2482e-04, 1.6635e-02],
         [8.0598e-02, 1.2409e-02, 3.5742e-03,  ..., 6.6685e-02,
          9.9903e-01, 9.4112e-01],
         [8.2469e-03, 9.6277e-01, 9.8928e-01,  ..., 8.4103e-01,
          3.2482e-04, 1.6635e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6191e-03, 7.8308e-03, 9.9179e-01,  ..., 9.9933e-01,
          1.7391e-02, 1.1638e-02],
         [8.6191e-03, 3.3803e-03, 2.7380e-03,  ..., 2.2484e-04,
          1.7391e-02, 1.1638e-02],
         [9.7414e-01, 3.3803e-03, 2.7380e-03,  ..., 2.2484e-04,
          9.4633e-01, 9.6509e-01],
         [8.6191e-03, 9.8541e-01, 2.7380e-03,  ..., 2.2484e-04,
          1.8889e-02, 1.1638e-02]],
        [[9.5928e-01, 9.7569e-05, 9.7841e-01,  ..., 9.9616e-01,
          1.0852e-04, 1.3068e-02],
         [1.2927e-02, 9.7569e-05, 5.2813e-03,  ..., 1.2802e-03,
          1.0852e-04, 1.1972e-02],
         [1.2927e-02, 9.7569e-05, 5.2813e-03,  ..., 1.2802e-03,
          1.0852e-04, 9.6299e-01],
         [1.4869e-02, 9.9971e-01, 1.1023e-02,  ..., 1.2802e-03,
          9.9967e-01, 1.1972e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 224:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:35,131 [Process: 0] Synchronize training processes
2024-08-19 13:19:35,131 [Process: 0] Evaluating...
2024-08-19 13:19:35,133 [Process: 0] EPOCH 223:
2024-08-19 13:19:35,135 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:36,180 [Process: 0] Synchronize training processes
2024-08-19 13:19:36,180 [Process: 0] Evaluating...
2024-08-19 13:19:36,182 [Process: 0] EPOCH 224:
2024-08-19 13:19:36,184 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9068e-01, 1.4490e-02, 1.9817e-02,  ..., 9.9315e-01,
          7.2066e-01, 7.2052e-03],
         [3.1066e-03, 1.4490e-02, 1.9817e-02,  ..., 2.2830e-03,
          3.7484e-02, 7.2052e-03],
         [3.1066e-03, 1.4490e-02, 1.9817e-02,  ..., 2.2830e-03,
          2.0437e-01, 7.2052e-03],
         [3.1066e-03, 9.5653e-01, 9.4055e-01,  ..., 2.2830e-03,
          3.7484e-02, 9.7838e-01]],
        [[3.3134e-01, 1.5121e-02, 1.4765e-03,  ..., 1.7203e-02,
          4.8915e-04, 3.8474e-01],
         [4.6343e-02, 1.5121e-02, 1.4765e-03,  ..., 1.7203e-02,
          4.8915e-04, 7.7658e-02],
         [5.7598e-01, 1.6408e-02, 1.4765e-03,  ..., 2.0741e-02,
          9.9853e-01, 4.1049e-01],
         [4.6343e-02, 9.5335e-01, 9.9557e-01,  ..., 9.4485e-01,
          4.8915e-04, 1.2712e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3529e-03, 7.2559e-03, 9.9854e-01,  ..., 9.9946e-01,
          1.9058e-02, 7.3231e-03],
         [3.3529e-03, 4.1738e-03, 4.8512e-04,  ..., 1.8018e-04,
          1.6981e-02, 7.3231e-03],
         [9.8994e-01, 4.1738e-03, 4.8512e-04,  ..., 1.8018e-04,
          9.4698e-01, 9.7803e-01],
         [3.3529e-03, 9.8440e-01, 4.8512e-04,  ..., 1.8018e-04,
          1.6981e-02, 7.3231e-03]],
        [[9.4561e-01, 6.9496e-05, 9.9537e-01,  ..., 9.9850e-01,
          2.3215e-03, 1.5657e-02],
         [1.5220e-02, 6.9496e-05, 1.5435e-03,  ..., 4.9844e-04,
          1.5549e-03, 1.5657e-02],
         [1.5220e-02, 6.9496e-05, 1.5435e-03,  ..., 4.9844e-04,
          1.5549e-03, 9.5303e-01],
         [2.3950e-02, 9.9979e-01, 1.5435e-03,  ..., 4.9844e-04,
          9.9457e-01, 1.5657e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 225:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9663e-01, 1.5472e-03, 9.2032e-03,  ..., 9.8744e-01,
          9.9684e-01, 6.5321e-03],
         [1.1235e-03, 1.5472e-03, 9.2032e-03,  ..., 4.1874e-03,
          1.0541e-03, 6.5321e-03],
         [1.1235e-03, 1.5472e-03, 9.2032e-03,  ..., 4.1874e-03,
          1.0541e-03, 6.5321e-03],
         [1.1235e-03, 9.9536e-01, 9.7239e-01,  ..., 4.1874e-03,
          1.0541e-03, 9.8040e-01]],
        [[9.9930e-01, 8.7544e-03, 3.0685e-02,  ..., 3.0439e-02,
          5.6067e-04, 6.3848e-03],
         [2.3228e-04, 8.7544e-03, 3.0125e-02,  ..., 2.0890e-02,
          5.6067e-04, 6.3848e-03],
         [2.3798e-04, 8.7544e-03, 3.5309e-02,  ..., 2.4011e-02,
          9.9832e-01, 9.8085e-01],
         [2.3228e-04, 9.7374e-01, 9.0388e-01,  ..., 9.2466e-01,
          5.6067e-04, 6.3848e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6097e-02, 2.4449e-01, 9.9532e-01,  ..., 9.9495e-01,
          7.2298e-03, 1.4571e-02],
         [1.8710e-02, 3.2796e-02, 1.5592e-03,  ..., 1.6833e-03,
          7.2298e-03, 1.4571e-02],
         [9.3648e-01, 3.2796e-02, 1.5592e-03,  ..., 1.6833e-03,
          9.7831e-01, 9.5629e-01],
         [1.8710e-02, 6.8992e-01, 1.5592e-03,  ..., 1.6833e-03,
          7.2298e-03, 1.4571e-02]],
        [[8.6603e-01, 6.7814e-05, 9.9886e-01,  ..., 9.9756e-01,
          3.6890e-04, 6.8472e-03],
         [5.4527e-02, 6.7814e-05, 3.8085e-04,  ..., 8.1352e-04,
          3.6890e-04, 6.8472e-03],
         [4.0667e-02, 6.7814e-05, 3.8085e-04,  ..., 8.1352e-04,
          3.6890e-04, 9.7946e-01],
         [3.8772e-02, 9.9980e-01, 3.8085e-04,  ..., 8.1352e-04,
          9.9889e-01, 6.8472e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-19 13:19:37,226 [Process: 0] Synchronize training processes
2024-08-19 13:19:37,227 [Process: 0] Evaluating...
2024-08-19 13:19:37,229 [Process: 0] EPOCH 225:
2024-08-19 13:19:37,231 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:38,272 [Process: 0] Synchronize training processes
2024-08-19 13:19:38,272 [Process: 0] Evaluating...
2024-08-19 13:19:38,274 [Process: 0] EPOCH 226:
2024-08-19 13:19:38,276 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 226:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9666e-01, 1.0090e-02, 1.7835e-02,  ..., 9.9815e-01,
          9.9469e-01, 6.4254e-03],
         [1.1123e-03, 1.0090e-02, 1.7835e-02,  ..., 6.1611e-04,
          1.7704e-03, 6.4254e-03],
         [1.1123e-03, 1.2369e-02, 1.8902e-02,  ..., 6.1611e-04,
          1.7704e-03, 6.4254e-03],
         [1.1123e-03, 9.6745e-01, 9.4543e-01,  ..., 6.1611e-04,
          1.7704e-03, 9.8072e-01]],
        [[9.9607e-01, 6.5214e-03, 1.3020e-02,  ..., 7.8058e-03,
          1.9012e-03, 1.6602e-03],
         [8.8455e-04, 6.5214e-03, 1.3020e-02,  ..., 7.5709e-03,
          1.9012e-03, 1.6602e-03],
         [2.1652e-03, 6.5214e-03, 1.3020e-02,  ..., 7.5709e-03,
          9.9430e-01, 9.9502e-01],
         [8.8455e-04, 9.8044e-01, 9.6094e-01,  ..., 9.7705e-01,
          1.9012e-03, 1.6602e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3984e-02, 1.0829e-01, 9.9787e-01,  ..., 9.9579e-01,
          3.7439e-03, 1.5490e-02],
         [3.1560e-02, 1.0241e-02, 7.0939e-04,  ..., 1.1819e-03,
          3.7439e-03, 1.5490e-02],
         [8.9290e-01, 1.0241e-02, 7.0939e-04,  ..., 1.1819e-03,
          9.8877e-01, 9.5348e-01],
         [3.1560e-02, 8.7123e-01, 7.0939e-04,  ..., 1.8424e-03,
          3.7439e-03, 1.5538e-02]],
        [[3.8444e-01, 4.7146e-05, 9.9751e-01,  ..., 9.2816e-01,
          4.5502e-03, 9.4475e-03],
         [1.5307e-01, 4.7146e-05, 8.2989e-04,  ..., 2.0441e-02,
          4.5502e-03, 9.4475e-03],
         [3.4904e-01, 4.7146e-05, 8.2989e-04,  ..., 2.0441e-02,
          4.5502e-03, 9.7166e-01],
         [1.1345e-01, 9.9986e-01, 8.2989e-04,  ..., 3.0957e-02,
          9.8635e-01, 9.4475e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 227:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9618e-01, 3.8940e-02, 1.0766e-02,  ..., 9.9086e-01,
          9.9271e-01, 8.1328e-03],
         [1.2734e-03, 2.7910e-02, 1.0766e-02,  ..., 2.9490e-03,
          2.2505e-03, 7.7594e-03],
         [1.2734e-03, 5.0577e-02, 1.0766e-02,  ..., 3.2395e-03,
          2.7841e-03, 7.7594e-03],
         [1.2734e-03, 8.8257e-01, 9.6770e-01,  ..., 2.9490e-03,
          2.2505e-03, 9.7635e-01]],
        [[9.9995e-01, 9.1972e-03, 2.7767e-03,  ..., 4.5530e-03,
          4.7259e-03, 2.4913e-03],
         [1.7869e-05, 7.6480e-03, 2.7767e-03,  ..., 4.5530e-03,
          4.7259e-03, 2.4913e-03],
         [1.7869e-05, 7.6480e-03, 2.7767e-03,  ..., 4.5530e-03,
          9.8582e-01, 9.9253e-01],
         [1.7869e-05, 9.7551e-01, 9.9167e-01,  ..., 9.8634e-01,
          4.7259e-03, 2.4913e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6229e-01, 3.1854e-03, 9.9581e-01,  ..., 9.9550e-01,
          1.1863e-02, 4.2533e-03],
         [8.3371e-02, 1.7017e-03, 1.1195e-03,  ..., 9.8924e-04,
          1.1863e-02, 4.2533e-03],
         [6.0018e-01, 1.7017e-03, 1.1195e-03,  ..., 9.8924e-04,
          9.6441e-01, 9.8724e-01],
         [1.5416e-01, 9.9341e-01, 1.9561e-03,  ..., 2.5205e-03,
          1.1863e-02, 4.2533e-03]],
        [[1.4299e-01, 2.4951e-04, 9.9021e-01,  ..., 9.8822e-01,
          3.9361e-04, 2.2752e-02],
         [8.3855e-02, 2.4951e-04, 3.2624e-03,  ..., 3.2000e-03,
          3.9361e-04, 2.2752e-02],
         [5.8672e-01, 2.4951e-04, 3.2624e-03,  ..., 3.2000e-03,
          3.9361e-04, 9.2405e-01],
         [1.8643e-01, 9.9925e-01, 3.2624e-03,  ..., 5.3813e-03,
          9.9882e-01, 3.0441e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:19:39,319 [Process: 0] Synchronize training processes
2024-08-19 13:19:39,319 [Process: 0] Evaluating...
2024-08-19 13:19:39,321 [Process: 0] EPOCH 227:
2024-08-19 13:19:39,323 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:40,361 [Process: 0] Synchronize training processes
2024-08-19 13:19:40,361 [Process: 0] Evaluating...
2024-08-19 13:19:40,363 [Process: 0] EPOCH 228:
2024-08-19 13:19:40,365 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 228:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8200e-01, 8.9511e-03, 5.2246e-02,  ..., 9.9458e-01,
          9.9770e-01, 1.1653e-02],
         [5.6299e-03, 8.9511e-03, 3.8597e-02,  ..., 1.8070e-03,
          7.6572e-04, 1.1653e-02],
         [6.7450e-03, 8.9511e-03, 7.0311e-02,  ..., 1.8070e-03,
          7.6572e-04, 1.1653e-02],
         [5.6299e-03, 9.7315e-01, 8.3885e-01,  ..., 1.8070e-03,
          7.6572e-04, 9.6504e-01]],
        [[9.9997e-01, 1.0940e-01, 1.1105e-02,  ..., 5.7485e-02,
          7.3688e-03, 5.8199e-03],
         [9.6487e-06, 4.7839e-02, 1.1105e-02,  ..., 4.8470e-02,
          7.3688e-03, 5.8199e-03],
         [9.6487e-06, 6.8360e-02, 1.6310e-02,  ..., 8.5385e-02,
          9.7789e-01, 9.8254e-01],
         [9.6487e-06, 7.7440e-01, 9.6148e-01,  ..., 8.0866e-01,
          7.3688e-03, 5.8199e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2017e-01, 3.3333e-03, 9.9962e-01,  ..., 9.9957e-01,
          6.6949e-03, 9.4205e-03],
         [5.6124e-02, 3.3333e-03, 1.2681e-04,  ..., 1.4476e-04,
          6.6949e-03, 9.4205e-03],
         [7.5076e-01, 3.3333e-03, 1.2681e-04,  ..., 1.4476e-04,
          9.7992e-01, 9.7174e-01],
         [7.2947e-02, 9.9000e-01, 1.2681e-04,  ..., 1.4476e-04,
          6.6949e-03, 9.4205e-03]],
        [[1.9424e-01, 2.2887e-04, 9.9159e-01,  ..., 9.8349e-01,
          8.2380e-04, 6.7969e-03],
         [8.5141e-02, 2.2887e-04, 2.6416e-03,  ..., 5.0883e-03,
          8.2380e-04, 6.7969e-03],
         [5.0714e-01, 2.2887e-04, 2.6416e-03,  ..., 5.0883e-03,
          8.2380e-04, 9.7961e-01],
         [2.1348e-01, 9.9931e-01, 3.1304e-03,  ..., 6.3329e-03,
          9.9753e-01, 6.7969e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 229:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9964, 0.0100, 0.0162,  ..., 0.9932, 0.9952, 0.0061],
         [0.0012, 0.0100, 0.0162,  ..., 0.0023, 0.0016, 0.0061],
         [0.0012, 0.0100, 0.0162,  ..., 0.0023, 0.0016, 0.0061],
         [0.0012, 0.9700, 0.9515,  ..., 0.0023, 0.0016, 0.9818]],
        [[0.9952, 0.0175, 0.0035,  ..., 0.0061, 0.0033, 0.0084],
         [0.0016, 0.0175, 0.0035,  ..., 0.0068, 0.0033, 0.0084],
         [0.0017, 0.0175, 0.0035,  ..., 0.0062, 0.9901, 0.9748],
         [0.0016, 0.9476, 0.9895,  ..., 0.9809, 0.0033, 0.0084]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:19:41,411 [Process: 0] Synchronize training processes
2024-08-19 13:19:41,411 [Process: 0] Evaluating...
2024-08-19 13:19:41,413 [Process: 0] EPOCH 229:
2024-08-19 13:19:41,415 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:42,451 [Process: 0] Synchronize training processes
2024-08-19 13:19:42,452 [Process: 0] Evaluating...
2024-08-19 13:19:42,454 [Process: 0] EPOCH 230:
2024-08-19 13:19:42,455 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1006, 0.2791, 0.9835,  ..., 0.9886, 0.0109, 0.0148],
         [0.0470, 0.0143, 0.0040,  ..., 0.0029, 0.0109, 0.0148],
         [0.8073, 0.0143, 0.0040,  ..., 0.0029, 0.9667, 0.9557],
         [0.0451, 0.6924, 0.0086,  ..., 0.0056, 0.0115, 0.0148]],
        [[0.1387, 0.0027, 0.9970,  ..., 0.8910, 0.0030, 0.0046],
         [0.0776, 0.0027, 0.0010,  ..., 0.0250, 0.0030, 0.0046],
         [0.5728, 0.0027, 0.0010,  ..., 0.0250, 0.0030, 0.9863],
         [0.2109, 0.9919, 0.0010,  ..., 0.0589, 0.9910, 0.0046]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 230:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9279e-01, 6.6694e-03, 6.4289e-03,  ..., 9.9142e-01,
          9.6816e-01, 6.8941e-03],
         [2.4036e-03, 6.6694e-03, 6.4289e-03,  ..., 2.8589e-03,
          1.0186e-02, 6.8941e-03],
         [2.4036e-03, 6.6694e-03, 6.4289e-03,  ..., 2.8589e-03,
          1.1463e-02, 6.8941e-03],
         [2.4036e-03, 9.7999e-01, 9.8071e-01,  ..., 2.8589e-03,
          1.0186e-02, 9.7932e-01]],
        [[9.9914e-01, 1.5555e-02, 1.1301e-02,  ..., 4.8907e-03,
          3.4455e-03, 7.5055e-04],
         [2.8522e-04, 1.5980e-02, 1.5456e-02,  ..., 4.8907e-03,
          3.4455e-03, 7.5055e-04],
         [2.8522e-04, 1.5984e-02, 1.1301e-02,  ..., 4.8907e-03,
          9.8966e-01, 9.9775e-01],
         [2.8522e-04, 9.5248e-01, 9.6194e-01,  ..., 9.8533e-01,
          3.4455e-03, 7.5055e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2025e-01, 5.9139e-01, 9.8914e-01,  ..., 9.9608e-01,
          4.2957e-02, 7.6829e-03],
         [6.2137e-02, 3.0790e-02, 3.3929e-03,  ..., 1.3073e-03,
          3.1365e-02, 7.6829e-03],
         [7.2242e-01, 3.0790e-02, 3.3929e-03,  ..., 1.3073e-03,
          8.8325e-01, 9.7695e-01],
         [9.5193e-02, 3.4703e-01, 4.0739e-03,  ..., 1.3073e-03,
          4.2424e-02, 7.6829e-03]],
        [[1.4139e-01, 1.3239e-04, 9.9411e-01,  ..., 9.9943e-01,
          1.0029e-05, 1.3762e-02],
         [8.5868e-02, 1.3239e-04, 1.9627e-03,  ..., 1.9051e-04,
          1.0029e-05, 1.3762e-02],
         [3.7476e-01, 1.3239e-04, 1.9627e-03,  ..., 1.9051e-04,
          1.0029e-05, 9.5868e-01],
         [3.9798e-01, 9.9960e-01, 1.9627e-03,  ..., 1.9051e-04,
          9.9997e-01, 1.3797e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 231:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9576e-01, 1.2969e-02, 1.5682e-02,  ..., 9.9536e-01,
          8.9828e-01, 1.0888e-02],
         [1.4143e-03, 1.2969e-02, 1.5682e-02,  ..., 1.5475e-03,
          2.5299e-02, 1.0888e-02],
         [1.4143e-03, 1.2969e-02, 1.8199e-02,  ..., 1.5475e-03,
          4.6770e-02, 1.0888e-02],
         [1.4143e-03, 9.6109e-01, 9.5044e-01,  ..., 1.5475e-03,
          2.9654e-02, 9.6733e-01]],
        [[9.9990e-01, 2.9843e-02, 8.5066e-03,  ..., 2.7070e-03,
          1.1482e-03, 3.3902e-03],
         [3.4453e-05, 2.9843e-02, 8.5066e-03,  ..., 2.7070e-03,
          1.1482e-03, 3.3902e-03],
         [3.4453e-05, 4.0928e-02, 8.5066e-03,  ..., 2.7070e-03,
          9.9656e-01, 9.8983e-01],
         [3.4453e-05, 8.9939e-01, 9.7448e-01,  ..., 9.9188e-01,
          1.1482e-03, 3.3902e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:19:43,494 [Process: 0] Synchronize training processes
2024-08-19 13:19:43,494 [Process: 0] Evaluating...
2024-08-19 13:19:43,496 [Process: 0] EPOCH 231:
2024-08-19 13:19:43,498 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.3253e-02, 2.5527e-03, 9.9831e-01,  ..., 9.9791e-01,
          3.3612e-02, 7.0352e-03],
         [3.4094e-02, 2.5527e-03, 5.6232e-04,  ..., 6.9778e-04,
          2.8067e-02, 7.0352e-03],
         [8.6577e-01, 2.5527e-03, 5.6232e-04,  ..., 6.9778e-04,
          8.9223e-01, 9.7889e-01],
         [4.6883e-02, 9.9234e-01, 5.6232e-04,  ..., 6.9778e-04,
          4.6089e-02, 7.0352e-03]],
        [[1.1588e-01, 6.4359e-05, 9.9631e-01,  ..., 9.9220e-01,
          5.6682e-05, 6.8708e-03],
         [7.3032e-02, 6.4359e-05, 1.2306e-03,  ..., 2.4395e-03,
          5.6682e-05, 6.8708e-03],
         [3.1509e-01, 6.4359e-05, 1.2306e-03,  ..., 2.4395e-03,
          5.6682e-05, 9.7939e-01],
         [4.9600e-01, 9.9981e-01, 1.2306e-03,  ..., 2.9178e-03,
          9.9983e-01, 6.8708e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 232:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8294e-01, 1.0341e-02, 7.8910e-03,  ..., 9.8742e-01,
          8.9453e-01, 6.0255e-03],
         [5.6853e-03, 1.0341e-02, 7.8910e-03,  ..., 3.9574e-03,
          2.7534e-02, 6.0255e-03],
         [5.6921e-03, 1.0341e-02, 7.8910e-03,  ..., 4.6613e-03,
          4.8363e-02, 6.0255e-03],
         [5.6853e-03, 9.6898e-01, 9.7633e-01,  ..., 3.9574e-03,
          2.9570e-02, 9.8192e-01]],
        [[9.9999e-01, 1.2531e-02, 5.3734e-03,  ..., 1.5033e-02,
          5.1265e-03, 3.4923e-03],
         [4.3734e-06, 1.2531e-02, 5.3734e-03,  ..., 1.9698e-02,
          5.1265e-03, 3.4923e-03],
         [4.3734e-06, 1.5303e-02, 5.3734e-03,  ..., 1.8254e-02,
          9.8462e-01, 9.8952e-01],
         [4.3734e-06, 9.5963e-01, 9.8388e-01,  ..., 9.4701e-01,
          5.1265e-03, 3.4923e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.3969e-02, 1.9185e-04, 9.9762e-01,  ..., 9.9901e-01,
          4.4090e-03, 8.2424e-03],
         [3.8667e-02, 1.9185e-04, 7.9325e-04,  ..., 3.2839e-04,
          4.4090e-03, 8.2424e-03],
         [8.4427e-01, 1.9185e-04, 7.9325e-04,  ..., 3.2839e-04,
          9.8677e-01, 9.7527e-01],
         [6.3095e-02, 9.9942e-01, 7.9325e-04,  ..., 3.2839e-04,
          4.4090e-03, 8.2424e-03]],
        [[9.4355e-02, 1.8193e-04, 9.9342e-01,  ..., 9.9644e-01,
          1.7723e-04, 8.4173e-03],
         [6.5913e-02, 1.8193e-04, 2.1928e-03,  ..., 1.1884e-03,
          1.7723e-04, 8.4173e-03],
         [6.4304e-01, 1.8193e-04, 2.1928e-03,  ..., 1.1884e-03,
          1.7723e-04, 9.7475e-01],
         [1.9669e-01, 9.9945e-01, 2.1928e-03,  ..., 1.1884e-03,
          9.9947e-01, 8.4173e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 233:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:44,537 [Process: 0] Synchronize training processes
2024-08-19 13:19:44,537 [Process: 0] Evaluating...
2024-08-19 13:19:44,965 [Process: 0] EPOCH 232:
2024-08-19 13:19:44,969 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:46,001 [Process: 0] Synchronize training processes
2024-08-19 13:19:46,001 [Process: 0] Evaluating...
2024-08-19 13:19:46,003 [Process: 0] EPOCH 233:
2024-08-19 13:19:46,005 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9408e-01, 2.7733e-03, 6.3415e-03,  ..., 9.7781e-01,
          9.7056e-01, 4.6503e-02],
         [1.9623e-03, 2.7733e-03, 6.3415e-03,  ..., 8.3904e-03,
          8.5399e-03, 2.1571e-02],
         [1.9978e-03, 2.7733e-03, 6.3415e-03,  ..., 8.4346e-03,
          1.2364e-02, 2.1571e-02],
         [1.9623e-03, 9.9168e-01, 9.8098e-01,  ..., 5.3613e-03,
          8.5399e-03, 9.1036e-01]],
        [[9.9975e-01, 1.1605e-02, 4.4459e-03,  ..., 1.6540e-02,
          7.4284e-03, 4.4292e-03],
         [8.3674e-05, 1.1605e-02, 4.4459e-03,  ..., 1.6540e-02,
          7.4284e-03, 4.4292e-03],
         [8.3674e-05, 1.1605e-02, 4.4459e-03,  ..., 1.6540e-02,
          9.7771e-01, 9.8671e-01],
         [8.3674e-05, 9.6518e-01, 9.8666e-01,  ..., 9.5038e-01,
          7.4284e-03, 4.4292e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.6227e-02, 6.0145e-04, 9.9909e-01,  ..., 9.6744e-01,
          8.7536e-03, 4.2395e-03],
         [3.1946e-02, 6.0145e-04, 3.0284e-04,  ..., 1.3459e-02,
          8.7536e-03, 4.2395e-03],
         [8.7584e-01, 6.0145e-04, 3.0284e-04,  ..., 9.5518e-03,
          9.7374e-01, 9.8728e-01],
         [4.5984e-02, 9.9820e-01, 3.0284e-04,  ..., 9.5518e-03,
          8.7536e-03, 4.2395e-03]],
        [[1.0144e-01, 9.5654e-05, 9.9774e-01,  ..., 9.9268e-01,
          1.6956e-02, 8.7096e-03],
         [6.3632e-02, 9.5654e-05, 7.5473e-04,  ..., 2.4390e-03,
          4.0808e-03, 8.7096e-03],
         [6.4292e-01, 9.5654e-05, 7.5473e-04,  ..., 2.4390e-03,
          4.0808e-03, 9.7387e-01],
         [1.9201e-01, 9.9971e-01, 7.5473e-04,  ..., 2.4390e-03,
          9.7488e-01, 8.7096e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 234:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9572e-01, 2.1490e-02, 5.4186e-03,  ..., 9.9259e-01,
          9.8577e-01, 8.7166e-03],
         [1.4252e-03, 1.2549e-02, 6.9437e-03,  ..., 2.4033e-03,
          4.4349e-03, 8.7166e-03],
         [1.4252e-03, 1.2549e-02, 5.4186e-03,  ..., 2.6018e-03,
          5.3626e-03, 8.7166e-03],
         [1.4252e-03, 9.5341e-01, 9.8222e-01,  ..., 2.4033e-03,
          4.4349e-03, 9.7385e-01]],
        [[9.9989e-01, 3.9624e-02, 7.8700e-03,  ..., 1.0253e-02,
          6.5308e-03, 1.2285e-03],
         [3.6119e-05, 2.7166e-02, 7.8700e-03,  ..., 1.0253e-02,
          6.5308e-03, 1.2285e-03],
         [3.6119e-05, 3.4465e-02, 7.8700e-03,  ..., 1.0253e-02,
          9.8041e-01, 9.9631e-01],
         [3.6119e-05, 8.9874e-01, 9.7639e-01,  ..., 9.6924e-01,
          6.5308e-03, 1.2285e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6459e-02, 1.0048e-03, 9.8467e-01,  ..., 9.9688e-01,
          1.1975e-02, 1.2466e-02],
         [5.4827e-02, 1.0048e-03, 4.8739e-03,  ..., 9.8095e-04,
          1.1975e-02, 1.2466e-02],
         [7.0263e-01, 1.0048e-03, 4.8739e-03,  ..., 9.8095e-04,
          9.6400e-01, 9.6260e-01],
         [1.5608e-01, 9.9699e-01, 5.5826e-03,  ..., 1.1534e-03,
          1.2046e-02, 1.2466e-02]],
        [[9.4833e-02, 1.3350e-03, 9.9167e-01,  ..., 9.9479e-01,
          5.5989e-02, 1.1569e-02],
         [7.0887e-02, 1.3350e-03, 2.7759e-03,  ..., 1.7379e-03,
          5.5268e-03, 1.1569e-02],
         [4.4665e-01, 1.3350e-03, 2.7759e-03,  ..., 1.7379e-03,
          5.5268e-03, 9.6206e-01],
         [3.8763e-01, 9.9599e-01, 2.7759e-03,  ..., 1.7379e-03,
          9.3296e-01, 1.4798e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 235:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:47,043 [Process: 0] Synchronize training processes
2024-08-19 13:19:47,043 [Process: 0] Evaluating...
2024-08-19 13:19:47,045 [Process: 0] EPOCH 234:
2024-08-19 13:19:47,047 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:48,085 [Process: 0] Synchronize training processes
2024-08-19 13:19:48,085 [Process: 0] Evaluating...
2024-08-19 13:19:48,087 [Process: 0] EPOCH 235:
2024-08-19 13:19:48,089 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7127e-01, 4.8583e-03, 4.9553e-03,  ..., 9.9279e-01,
          9.6712e-01, 2.6796e-02],
         [9.1786e-03, 4.8583e-03, 4.9553e-03,  ..., 2.2399e-03,
          9.1927e-03, 3.4017e-02],
         [1.0374e-02, 4.8583e-03, 4.9553e-03,  ..., 2.7306e-03,
          1.4492e-02, 3.3846e-02],
         [9.1786e-03, 9.8543e-01, 9.8513e-01,  ..., 2.2399e-03,
          9.1927e-03, 9.0534e-01]],
        [[9.9992e-01, 1.0391e-02, 5.7108e-03,  ..., 1.9032e-02,
          9.3897e-03, 3.1258e-04],
         [2.7333e-05, 1.0391e-02, 5.7108e-03,  ..., 1.9032e-02,
          9.3897e-03, 3.1258e-04],
         [2.7333e-05, 1.0391e-02, 5.7108e-03,  ..., 1.9032e-02,
          9.7183e-01, 9.9906e-01],
         [2.7333e-05, 9.6883e-01, 9.8287e-01,  ..., 9.4291e-01,
          9.3897e-03, 3.1258e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2893e-02, 1.9039e-04, 9.7437e-01,  ..., 9.9732e-01,
          1.3872e-02, 7.4720e-03],
         [3.3824e-02, 1.9039e-04, 6.0193e-03,  ..., 8.9414e-04,
          1.3872e-02, 7.4720e-03],
         [8.6260e-01, 1.9039e-04, 6.0193e-03,  ..., 8.9414e-04,
          9.5623e-01, 9.7758e-01],
         [5.0681e-02, 9.9943e-01, 1.3591e-02,  ..., 8.9414e-04,
          1.6020e-02, 7.4720e-03]],
        [[5.7346e-02, 7.0586e-04, 9.9662e-01,  ..., 9.9635e-01,
          7.0090e-02, 1.0786e-02],
         [3.9439e-02, 7.0586e-04, 1.1268e-03,  ..., 1.1663e-03,
          8.1412e-03, 1.0786e-02],
         [8.4533e-01, 7.0586e-04, 1.1268e-03,  ..., 1.1663e-03,
          8.1412e-03, 9.6764e-01],
         [5.7888e-02, 9.9788e-01, 1.1268e-03,  ..., 1.3182e-03,
          9.1363e-01, 1.0786e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 236:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6651e-01, 5.7619e-03, 1.2818e-02,  ..., 9.9696e-01,
          8.9462e-01, 1.0939e-02],
         [9.8813e-03, 5.7619e-03, 1.2818e-02,  ..., 9.8409e-04,
          2.0844e-02, 1.0939e-02],
         [1.3728e-02, 5.7619e-03, 1.3921e-02,  ..., 1.0693e-03,
          6.1923e-02, 1.0939e-02],
         [9.8813e-03, 9.8271e-01, 9.6044e-01,  ..., 9.8409e-04,
          2.2614e-02, 9.6718e-01]],
        [[9.9935e-01, 3.5758e-02, 2.6090e-02,  ..., 1.3672e-02,
          1.0372e-03, 1.1143e-03],
         [2.1774e-04, 3.3981e-02, 3.0883e-02,  ..., 1.3672e-02,
          1.0372e-03, 1.1143e-03],
         [2.1774e-04, 4.6393e-02, 2.6090e-02,  ..., 1.3672e-02,
          9.9689e-01, 9.9666e-01],
         [2.1774e-04, 8.8387e-01, 9.1694e-01,  ..., 9.5898e-01,
          1.0372e-03, 1.1143e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.9353e-02, 1.0182e-04, 9.8777e-01,  ..., 9.9672e-01,
          2.7211e-02, 1.0635e-02],
         [4.0435e-02, 1.0182e-04, 4.0779e-03,  ..., 1.0941e-03,
          2.4659e-02, 1.0635e-02],
         [8.4057e-01, 1.0182e-04, 4.0779e-03,  ..., 1.0941e-03,
          9.1924e-01, 9.6809e-01],
         [5.9646e-02, 9.9969e-01, 4.0779e-03,  ..., 1.0941e-03,
          2.8892e-02, 1.0635e-02]],
        [[1.6986e-02, 9.8613e-05, 9.9695e-01,  ..., 9.9582e-01,
          9.8544e-02, 2.0125e-02],
         [1.6986e-02, 9.8613e-05, 9.1990e-04,  ..., 1.3924e-03,
          1.6087e-02, 2.0125e-02],
         [9.4904e-01, 9.8613e-05, 9.1990e-04,  ..., 1.3924e-03,
          1.6087e-02, 9.2650e-01],
         [1.6986e-02, 9.9970e-01, 1.2096e-03,  ..., 1.3924e-03,
          8.6928e-01, 3.3249e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 237:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:49,126 [Process: 0] Synchronize training processes
2024-08-19 13:19:49,126 [Process: 0] Evaluating...
2024-08-19 13:19:49,128 [Process: 0] EPOCH 236:
2024-08-19 13:19:49,130 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:50,170 [Process: 0] Synchronize training processes
2024-08-19 13:19:50,170 [Process: 0] Evaluating...
2024-08-19 13:19:50,172 [Process: 0] EPOCH 237:
2024-08-19 13:19:50,174 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7316e-01, 4.1447e-03, 5.6141e-03,  ..., 9.9957e-01,
          9.1656e-01, 1.1437e-02],
         [7.5111e-03, 4.1447e-03, 5.6141e-03,  ..., 1.4392e-04,
          2.1357e-02, 1.1939e-02],
         [1.1814e-02, 4.1447e-03, 5.6141e-03,  ..., 1.4392e-04,
          3.9278e-02, 1.1437e-02],
         [7.5111e-03, 9.8757e-01, 9.8316e-01,  ..., 1.4392e-04,
          2.2804e-02, 9.6519e-01]],
        [[9.9784e-01, 2.4767e-03, 2.6346e-02,  ..., 2.8270e-03,
          3.6304e-03, 4.1068e-03],
         [7.2076e-04, 2.4767e-03, 2.6346e-02,  ..., 2.8270e-03,
          3.6304e-03, 4.1068e-03],
         [7.2076e-04, 2.4767e-03, 3.7063e-02,  ..., 2.8270e-03,
          9.8911e-01, 9.8768e-01],
         [7.2076e-04, 9.9257e-01, 9.1024e-01,  ..., 9.9152e-01,
          3.6304e-03, 4.1068e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.9005e-02, 3.0123e-04, 9.9972e-01,  ..., 9.9784e-01,
          3.1694e-03, 1.3684e-02],
         [3.4191e-02, 3.0123e-04, 9.1911e-05,  ..., 7.1884e-04,
          3.1694e-03, 1.3684e-02],
         [8.6808e-01, 3.0123e-04, 9.1911e-05,  ..., 7.1884e-04,
          9.9049e-01, 9.5895e-01],
         [4.8720e-02, 9.9910e-01, 9.1911e-05,  ..., 7.1884e-04,
          3.1694e-03, 1.3684e-02]],
        [[4.9793e-03, 3.4184e-04, 9.7298e-01,  ..., 9.9870e-01,
          1.4758e-03, 1.8622e-02],
         [4.9793e-03, 2.4662e-04, 9.0009e-03,  ..., 4.3412e-04,
          1.2563e-03, 1.8622e-02],
         [9.8506e-01, 2.4662e-04, 9.0009e-03,  ..., 4.3412e-04,
          1.2563e-03, 9.3984e-01],
         [4.9793e-03, 9.9916e-01, 9.0195e-03,  ..., 4.3412e-04,
          9.9601e-01, 2.2914e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 238:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8317e-01, 9.6956e-03, 5.0745e-03,  ..., 9.9524e-01,
          8.9263e-01, 9.4067e-03],
         [4.8101e-03, 6.8321e-03, 5.0745e-03,  ..., 1.5793e-03,
          2.5340e-02, 9.4067e-03],
         [7.2092e-03, 6.8321e-03, 5.0745e-03,  ..., 1.5983e-03,
          4.5909e-02, 9.4067e-03],
         [4.8101e-03, 9.7664e-01, 9.8478e-01,  ..., 1.5793e-03,
          3.6121e-02, 9.7178e-01]],
        [[9.9788e-01, 6.3220e-03, 3.2220e-02,  ..., 3.0541e-03,
          1.5078e-03, 9.4971e-03],
         [7.0708e-04, 5.0721e-03, 2.3844e-02,  ..., 3.0541e-03,
          1.5078e-03, 8.1784e-03],
         [7.0708e-04, 5.0721e-03, 3.4138e-02,  ..., 3.0541e-03,
          9.9548e-01, 9.7415e-01],
         [7.0708e-04, 9.8353e-01, 9.0980e-01,  ..., 9.9084e-01,
          1.5078e-03, 8.1784e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.7885e-02, 9.7686e-04, 9.9406e-01,  ..., 9.9619e-01,
          2.9020e-02, 1.1082e-02],
         [4.1764e-02, 9.7686e-04, 1.9800e-03,  ..., 1.1999e-03,
          2.4030e-02, 1.1082e-02],
         [8.2893e-01, 9.7686e-04, 1.9800e-03,  ..., 1.1999e-03,
          9.1115e-01, 9.6675e-01],
         [7.1419e-02, 9.9707e-01, 1.9800e-03,  ..., 1.4081e-03,
          3.5805e-02, 1.1082e-02]],
        [[8.4449e-03, 3.6388e-05, 9.9779e-01,  ..., 9.9603e-01,
          2.1597e-03, 1.6313e-02],
         [8.4449e-03, 3.6388e-05, 7.3682e-04,  ..., 1.3248e-03,
          1.9236e-03, 1.6313e-02],
         [9.7467e-01, 3.6388e-05, 7.3682e-04,  ..., 1.3248e-03,
          1.9236e-03, 9.5094e-01],
         [8.4449e-03, 9.9989e-01, 7.3682e-04,  ..., 1.3248e-03,
          9.9399e-01, 1.6436e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 239:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:51,213 [Process: 0] Synchronize training processes
2024-08-19 13:19:51,214 [Process: 0] Evaluating...
2024-08-19 13:19:51,215 [Process: 0] EPOCH 238:
2024-08-19 13:19:51,217 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:52,257 [Process: 0] Synchronize training processes
2024-08-19 13:19:52,257 [Process: 0] Evaluating...
2024-08-19 13:19:52,259 [Process: 0] EPOCH 239:
2024-08-19 13:19:52,261 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8400e-01, 6.5726e-03, 1.3568e-02,  ..., 9.9807e-01,
          9.7903e-01, 2.0408e-03],
         [7.2189e-03, 6.5726e-03, 1.3568e-02,  ..., 6.2058e-04,
          6.1243e-03, 2.0408e-03],
         [4.5888e-03, 6.5726e-03, 1.8177e-02,  ..., 6.8637e-04,
          8.7257e-03, 2.0408e-03],
         [4.1970e-03, 9.8028e-01, 9.5469e-01,  ..., 6.2058e-04,
          6.1243e-03, 9.9388e-01]],
        [[9.9956e-01, 8.4262e-03, 6.2466e-03,  ..., 3.2711e-02,
          1.3726e-03, 7.6411e-04],
         [1.4610e-04, 8.4262e-03, 6.2466e-03,  ..., 3.0884e-02,
          1.3726e-03, 7.6411e-04],
         [1.4610e-04, 8.4262e-03, 6.2466e-03,  ..., 3.6669e-02,
          9.9588e-01, 9.9771e-01],
         [1.4610e-04, 9.7472e-01, 9.8126e-01,  ..., 8.9974e-01,
          1.3726e-03, 7.6411e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3065e-02, 2.9021e-04, 9.8025e-01,  ..., 9.9786e-01,
          5.3438e-02, 2.7840e-02],
         [2.3132e-02, 2.9021e-04, 6.4602e-03,  ..., 7.1360e-04,
          3.9812e-02, 2.7840e-02],
         [9.1659e-01, 2.9021e-04, 6.4602e-03,  ..., 7.1360e-04,
          8.2523e-01, 8.9860e-01],
         [2.7214e-02, 9.9913e-01, 6.8342e-03,  ..., 7.1360e-04,
          8.1521e-02, 4.5723e-02]],
        [[8.4504e-03, 4.6634e-04, 9.9560e-01,  ..., 9.9647e-01,
          2.3104e-04, 8.6519e-03],
         [8.4504e-03, 4.6634e-04, 1.4679e-03,  ..., 1.1545e-03,
          2.3104e-04, 8.6519e-03],
         [9.7465e-01, 4.6634e-04, 1.4679e-03,  ..., 1.1545e-03,
          2.3104e-04, 9.7404e-01],
         [8.4504e-03, 9.9860e-01, 1.4679e-03,  ..., 1.2228e-03,
          9.9931e-01, 8.6519e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 240:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9213, 0.0079, 0.0368,  ..., 0.9966, 0.9481, 0.0028],
         [0.0179, 0.0079, 0.0188,  ..., 0.0011, 0.0120, 0.0028],
         [0.0430, 0.0079, 0.0188,  ..., 0.0011, 0.0279, 0.0028],
         [0.0179, 0.9763, 0.9256,  ..., 0.0011, 0.0120, 0.9917]],
        [[0.8954, 0.0071, 0.0316,  ..., 0.0057, 0.0032, 0.0012],
         [0.0191, 0.0071, 0.0265,  ..., 0.0064, 0.0032, 0.0012],
         [0.0665, 0.0071, 0.0265,  ..., 0.0057, 0.9903, 0.9964],
         [0.0191, 0.9788, 0.9153,  ..., 0.9823, 0.0032, 0.0012]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2091e-02, 2.5388e-04, 9.8970e-01,  ..., 9.9811e-01,
          2.0807e-02, 2.7978e-03],
         [2.2091e-02, 2.5388e-04, 3.4333e-03,  ..., 6.2876e-04,
          2.0807e-02, 2.7978e-03],
         [9.2852e-01, 2.5388e-04, 3.4333e-03,  ..., 6.2876e-04,
          9.2886e-01, 9.9161e-01],
         [2.7298e-02, 9.9924e-01, 3.4333e-03,  ..., 6.2876e-04,
          2.9522e-02, 2.7978e-03]],
        [[2.8147e-03, 1.4662e-03, 9.9515e-01,  ..., 9.9893e-01,
          3.9790e-04, 1.6922e-02],
         [2.8147e-03, 1.4662e-03, 1.6171e-03,  ..., 3.5646e-04,
          3.9790e-04, 1.6922e-02],
         [9.9156e-01, 1.4662e-03, 1.6171e-03,  ..., 3.5646e-04,
          3.9790e-04, 9.4731e-01],
         [2.8147e-03, 9.9560e-01, 1.6171e-03,  ..., 3.5646e-04,
          9.9881e-01, 1.8847e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 241:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:53,298 [Process: 0] Synchronize training processes
2024-08-19 13:19:53,298 [Process: 0] Evaluating...
2024-08-19 13:19:53,300 [Process: 0] EPOCH 240:
2024-08-19 13:19:53,302 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:54,342 [Process: 0] Synchronize training processes
2024-08-19 13:19:54,343 [Process: 0] Evaluating...
2024-08-19 13:19:54,344 [Process: 0] EPOCH 241:
2024-08-19 13:19:54,346 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9912, 0.0032, 0.0379,  ..., 0.9942, 0.9585, 0.0045],
         [0.0026, 0.0032, 0.0229,  ..., 0.0017, 0.0101, 0.0045],
         [0.0035, 0.0032, 0.0229,  ..., 0.0024, 0.0214, 0.0045],
         [0.0026, 0.9904, 0.9163,  ..., 0.0017, 0.0101, 0.9866]],
        [[0.8804, 0.0158, 0.0154,  ..., 0.0029, 0.0017, 0.0017],
         [0.0226, 0.0145, 0.0133,  ..., 0.0029, 0.0017, 0.0017],
         [0.0404, 0.0145, 0.0152,  ..., 0.0029, 0.9949, 0.9949],
         [0.0567, 0.9552, 0.9562,  ..., 0.9912, 0.0017, 0.0017]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7567e-03, 4.5827e-03, 9.9427e-01,  ..., 9.9555e-01,
          1.4018e-02, 1.0250e-02],
         [9.6760e-03, 1.7428e-03, 1.9085e-03,  ..., 1.4258e-03,
          1.4018e-02, 1.0250e-02],
         [9.7089e-01, 1.7428e-03, 1.9085e-03,  ..., 1.4258e-03,
          9.5767e-01, 9.6925e-01],
         [9.6760e-03, 9.9193e-01, 1.9085e-03,  ..., 1.6000e-03,
          1.4293e-02, 1.0250e-02]],
        [[5.7087e-03, 4.1019e-04, 9.9918e-01,  ..., 9.9150e-01,
          1.3158e-03, 7.6227e-03],
         [5.7087e-03, 4.1019e-04, 2.7181e-04,  ..., 2.8073e-03,
          1.3158e-03, 7.6227e-03],
         [9.8287e-01, 4.1019e-04, 2.7181e-04,  ..., 2.8073e-03,
          1.3158e-03, 9.7713e-01],
         [5.7087e-03, 9.9877e-01, 2.7181e-04,  ..., 2.8867e-03,
          9.9605e-01, 7.6227e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 242:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9836, 0.0156, 0.0162,  ..., 0.9951, 0.9712, 0.0039],
         [0.0043, 0.0156, 0.0159,  ..., 0.0016, 0.0078, 0.0039],
         [0.0077, 0.0159, 0.0159,  ..., 0.0017, 0.0133, 0.0039],
         [0.0043, 0.9529, 0.9521,  ..., 0.0016, 0.0078, 0.9882]],
        [[0.6825, 0.0024, 0.0166,  ..., 0.0021, 0.0018, 0.0019],
         [0.0483, 0.0024, 0.0166,  ..., 0.0021, 0.0018, 0.0019],
         [0.1164, 0.0024, 0.0166,  ..., 0.0021, 0.9945, 0.9944],
         [0.1529, 0.9927, 0.9503,  ..., 0.9937, 0.0018, 0.0019]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:19:55,388 [Process: 0] Synchronize training processes
2024-08-19 13:19:55,389 [Process: 0] Evaluating...
2024-08-19 13:19:55,812 [Process: 0] EPOCH 242:
2024-08-19 13:19:55,816 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9550e-03, 1.6839e-03, 9.9975e-01,  ..., 9.8911e-01,
          2.5447e-02, 1.1951e-02],
         [9.9550e-03, 1.0545e-03, 8.4206e-05,  ..., 3.6286e-03,
          2.1997e-02, 1.1951e-02],
         [9.7013e-01, 1.0545e-03, 8.4206e-05,  ..., 3.6286e-03,
          9.2633e-01, 9.6415e-01],
         [9.9550e-03, 9.9621e-01, 8.4206e-05,  ..., 3.6286e-03,
          2.6224e-02, 1.1951e-02]],
        [[1.6557e-02, 1.1879e-03, 9.9778e-01,  ..., 9.7568e-01,
          1.2423e-04, 1.1446e-02],
         [1.5038e-02, 1.1879e-03, 7.4103e-04,  ..., 7.3638e-03,
          1.2423e-04, 1.1446e-02],
         [9.5337e-01, 1.1879e-03, 7.4103e-04,  ..., 7.3638e-03,
          1.2423e-04, 9.6566e-01],
         [1.5038e-02, 9.9644e-01, 7.4103e-04,  ..., 9.5912e-03,
          9.9963e-01, 1.1446e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 243:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0371e-01, 4.9684e-03, 8.8222e-03,  ..., 9.9768e-01,
          9.6797e-01, 1.4370e-02],
         [2.4899e-02, 4.9684e-03, 8.1945e-03,  ..., 7.7338e-04,
          7.0445e-03, 1.4566e-02],
         [4.6490e-02, 4.9684e-03, 8.1945e-03,  ..., 7.7338e-04,
          1.7942e-02, 1.4370e-02],
         [2.4899e-02, 9.8509e-01, 9.7479e-01,  ..., 7.7338e-04,
          7.0445e-03, 9.5669e-01]],
        [[8.8826e-01, 4.3133e-03, 1.4846e-02,  ..., 9.8340e-03,
          1.0828e-03, 1.3849e-03],
         [1.6198e-02, 4.3133e-03, 1.5065e-02,  ..., 9.8340e-03,
          1.0828e-03, 1.3849e-03],
         [2.5577e-02, 4.3133e-03, 1.4846e-02,  ..., 9.8340e-03,
          9.9675e-01, 9.9585e-01],
         [6.9964e-02, 9.8706e-01, 9.5524e-01,  ..., 9.7050e-01,
          1.0828e-03, 1.3849e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9127e-02, 4.7473e-03, 9.9790e-01,  ..., 9.9943e-01,
          2.0781e-02, 1.6273e-02],
         [1.8204e-02, 3.3852e-03, 7.0081e-04,  ..., 1.8958e-04,
          2.0781e-02, 1.4445e-02],
         [9.4446e-01, 3.3852e-03, 7.0081e-04,  ..., 1.8958e-04,
          9.2892e-01, 9.5484e-01],
         [1.8204e-02, 9.8848e-01, 7.0081e-04,  ..., 1.8958e-04,
          2.9518e-02, 1.4445e-02]],
        [[1.6694e-02, 3.6489e-04, 9.9925e-01,  ..., 9.8938e-01,
          8.2985e-04, 1.0266e-02],
         [1.6694e-02, 3.6489e-04, 2.5013e-04,  ..., 3.5407e-03,
          7.3334e-04, 1.0266e-02],
         [9.4513e-01, 3.6489e-04, 2.5013e-04,  ..., 3.5407e-03,
          7.3334e-04, 9.6920e-01],
         [2.1486e-02, 9.9891e-01, 2.5013e-04,  ..., 3.5407e-03,
          9.9770e-01, 1.0266e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 244:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9913, 0.0118, 0.0201,  ..., 0.9952, 0.9554, 0.0043],
         [0.0026, 0.0118, 0.0175,  ..., 0.0015, 0.0125, 0.0043],
         [0.0035, 0.0118, 0.0250,  ..., 0.0018, 0.0195, 0.0043],
         [0.0026, 0.9645, 0.9374,  ..., 0.0015, 0.0125, 0.9870]],
        [[0.9763, 0.0073, 0.0012,  ..., 0.0054, 0.0015, 0.0044],
         [0.0056, 0.0073, 0.0012,  ..., 0.0054, 0.0015, 0.0044],
         [0.0068, 0.0077, 0.0012,  ..., 0.0054, 0.9954, 0.9868],
         [0.0113, 0.9777, 0.9963,  ..., 0.9839, 0.0015, 0.0044]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:19:56,852 [Process: 0] Synchronize training processes
2024-08-19 13:19:56,852 [Process: 0] Evaluating...
2024-08-19 13:19:56,854 [Process: 0] EPOCH 243:
2024-08-19 13:19:56,855 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:57,888 [Process: 0] Synchronize training processes
2024-08-19 13:19:57,888 [Process: 0] Evaluating...
2024-08-19 13:19:57,890 [Process: 0] EPOCH 244:
2024-08-19 13:19:57,892 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6097e-02, 1.4077e-01, 9.9849e-01,  ..., 9.8185e-01,
          2.6546e-02, 3.9887e-02],
         [1.5025e-02, 1.3004e-02, 5.0293e-04,  ..., 6.0511e-03,
          2.6546e-02, 3.7575e-02],
         [9.5385e-01, 1.3004e-02, 5.0293e-04,  ..., 6.0511e-03,
          9.0218e-01, 8.5540e-01],
         [1.5025e-02, 8.3322e-01, 5.0293e-04,  ..., 6.0511e-03,
          4.4730e-02, 6.7139e-02]],
        [[3.4828e-02, 1.5271e-03, 9.9346e-01,  ..., 9.9582e-01,
          1.7738e-02, 2.6060e-03],
         [3.4828e-02, 1.4121e-03, 2.1791e-03,  ..., 1.3921e-03,
          3.7684e-03, 2.6060e-03],
         [7.9683e-02, 1.4121e-03, 2.1791e-03,  ..., 1.3921e-03,
          3.7684e-03, 9.9218e-01],
         [8.5066e-01, 9.9565e-01, 2.1791e-03,  ..., 1.3921e-03,
          9.7472e-01, 2.6060e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 245:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9968, 0.0090, 0.0235,  ..., 0.9839, 0.9883, 0.0177],
         [0.0011, 0.0090, 0.0186,  ..., 0.0054, 0.0039, 0.0177],
         [0.0011, 0.0091, 0.0276,  ..., 0.0054, 0.0039, 0.0238],
         [0.0011, 0.9730, 0.9303,  ..., 0.0054, 0.0039, 0.9409]],
        [[0.9349, 0.0083, 0.0067,  ..., 0.0074, 0.0012, 0.0016],
         [0.0131, 0.0083, 0.0067,  ..., 0.0074, 0.0012, 0.0016],
         [0.0304, 0.0083, 0.0067,  ..., 0.0074, 0.9963, 0.9952],
         [0.0216, 0.9752, 0.9800,  ..., 0.9779, 0.0012, 0.0016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3170e-02, 2.8399e-02, 9.9653e-01,  ..., 9.9879e-01,
          9.0146e-02, 1.1224e-02],
         [5.2422e-02, 4.9508e-03, 1.1435e-03,  ..., 4.0394e-04,
          6.7428e-02, 1.0749e-02],
         [7.7362e-01, 4.9508e-03, 1.1435e-03,  ..., 4.0394e-04,
          6.1645e-01, 9.6728e-01],
         [8.0784e-02, 9.6170e-01, 1.1866e-03,  ..., 4.0394e-04,
          2.2597e-01, 1.0749e-02]],
        [[7.9538e-03, 5.5961e-04, 9.9669e-01,  ..., 9.9957e-01,
          7.9001e-01, 1.3419e-02],
         [7.9538e-03, 3.6123e-04, 1.1047e-03,  ..., 1.4409e-04,
          2.5779e-02, 1.3419e-02],
         [9.7614e-01, 3.6123e-04, 1.1047e-03,  ..., 1.4409e-04,
          2.5779e-02, 9.5974e-01],
         [7.9538e-03, 9.9872e-01, 1.1047e-03,  ..., 1.4409e-04,
          1.5843e-01, 1.3419e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 246:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-19 13:19:58,938 [Process: 0] Synchronize training processes
2024-08-19 13:19:58,938 [Process: 0] Evaluating...
2024-08-19 13:19:58,940 [Process: 0] EPOCH 245:
2024-08-19 13:19:58,942 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:19:59,982 [Process: 0] Synchronize training processes
2024-08-19 13:19:59,982 [Process: 0] Evaluating...
2024-08-19 13:19:59,984 [Process: 0] EPOCH 246:
2024-08-19 13:19:59,986 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[9.5943e-01, 4.2361e-03, 9.4148e-03,  ..., 9.9897e-01,
          5.8428e-01, 7.4291e-03],
         [1.2433e-02, 4.2361e-03, 9.4148e-03,  ..., 3.4275e-04,
          5.7502e-02, 7.4291e-03],
         [1.5704e-02, 4.2361e-03, 9.4148e-03,  ..., 3.4275e-04,
          8.1288e-02, 7.4291e-03],
         [1.2433e-02, 9.8729e-01, 9.7176e-01,  ..., 3.4275e-04,
          2.7693e-01, 9.7771e-01]],
        [[9.8510e-01, 1.1617e-02, 2.3839e-02,  ..., 3.3301e-02,
          1.3851e-03, 3.5136e-02],
         [4.3304e-03, 1.1617e-02, 2.1425e-02,  ..., 2.1444e-02,
          1.3851e-03, 1.7886e-02],
         [6.2405e-03, 1.1617e-02, 3.3768e-02,  ..., 2.1444e-02,
          9.9584e-01, 9.2909e-01],
         [4.3304e-03, 9.6515e-01, 9.2097e-01,  ..., 9.2381e-01,
          1.3851e-03, 1.7886e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3095e-01, 5.9617e-03, 9.7593e-01,  ..., 9.9343e-01,
          2.0462e-02, 1.9118e-02],
         [6.6394e-02, 1.9151e-03, 6.6039e-03,  ..., 1.9108e-03,
          2.0462e-02, 1.9118e-02],
         [7.7310e-02, 1.9151e-03, 6.6039e-03,  ..., 1.9108e-03,
          9.3796e-01, 9.4240e-01],
         [5.2534e-01, 9.9021e-01, 1.0858e-02,  ..., 2.7489e-03,
          2.1113e-02, 1.9361e-02]],
        [[8.1973e-03, 7.3376e-04, 9.9234e-01,  ..., 9.8673e-01,
          5.9067e-05, 1.0285e-02],
         [8.1973e-03, 4.0999e-04, 1.9891e-03,  ..., 3.6871e-03,
          5.9067e-05, 1.0285e-02],
         [9.7541e-01, 4.0999e-04, 1.9891e-03,  ..., 3.6871e-03,
          5.9067e-05, 9.6914e-01],
         [8.1973e-03, 9.9845e-01, 3.6825e-03,  ..., 5.9002e-03,
          9.9982e-01, 1.0285e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 247:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8763e-01, 1.5564e-02, 1.1527e-02,  ..., 9.8413e-01,
          9.3365e-01, 5.9461e-03],
         [4.1224e-03, 1.5564e-02, 1.0418e-02,  ..., 5.2525e-03,
          1.3535e-02, 5.9461e-03],
         [4.1224e-03, 1.8036e-02, 1.0418e-02,  ..., 5.3655e-03,
          3.9276e-02, 6.0873e-03],
         [4.1224e-03, 9.5084e-01, 9.6764e-01,  ..., 5.2525e-03,
          1.3535e-02, 9.8202e-01]],
        [[9.9993e-01, 4.9392e-03, 1.6199e-02,  ..., 6.9818e-03,
          8.1513e-04, 8.8104e-04],
         [2.3837e-05, 4.9392e-03, 1.6199e-02,  ..., 6.9818e-03,
          8.1513e-04, 8.8104e-04],
         [2.3837e-05, 4.9392e-03, 1.6199e-02,  ..., 6.9818e-03,
          9.9755e-01, 9.9736e-01],
         [2.3837e-05, 9.8518e-01, 9.5140e-01,  ..., 9.7905e-01,
          8.1513e-04, 8.8104e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.1277e-02, 1.8766e-01, 9.9846e-01,  ..., 9.9952e-01,
          1.1507e-02, 5.5431e-02],
         [2.7506e-02, 1.0414e-02, 5.1494e-04,  ..., 1.5851e-04,
          1.1507e-02, 2.4022e-02],
         [8.9371e-01, 1.0414e-02, 5.1494e-04,  ..., 1.5851e-04,
          9.6548e-01, 8.9653e-01],
         [2.7506e-02, 7.9151e-01, 5.1494e-04,  ..., 1.5851e-04,
          1.1507e-02, 2.4022e-02]],
        [[3.0723e-03, 9.0281e-04, 9.9273e-01,  ..., 9.8899e-01,
          2.2145e-03, 6.0855e-03],
         [3.0723e-03, 5.4922e-04, 2.4225e-03,  ..., 3.4746e-03,
          1.3266e-03, 6.0855e-03],
         [9.9078e-01, 5.4922e-04, 2.4225e-03,  ..., 3.4746e-03,
          1.3266e-03, 9.8174e-01],
         [3.0723e-03, 9.9800e-01, 2.4225e-03,  ..., 4.0611e-03,
          9.9513e-01, 6.0855e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 248:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:01,028 [Process: 0] Synchronize training processes
2024-08-19 13:20:01,028 [Process: 0] Evaluating...
2024-08-19 13:20:01,030 [Process: 0] EPOCH 247:
2024-08-19 13:20:01,032 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:02,078 [Process: 0] Synchronize training processes
2024-08-19 13:20:02,079 [Process: 0] Evaluating...
2024-08-19 13:20:02,080 [Process: 0] EPOCH 248:
2024-08-19 13:20:02,082 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8963e-01, 1.7954e-03, 1.7450e-02,  ..., 9.9784e-01,
          9.8472e-01, 6.6950e-03],
         [3.3117e-03, 1.7954e-03, 1.7450e-02,  ..., 7.2014e-04,
          4.7422e-03, 6.6950e-03],
         [3.7480e-03, 1.7954e-03, 1.7828e-02,  ..., 7.2014e-04,
          5.7968e-03, 6.6950e-03],
         [3.3117e-03, 9.9461e-01, 9.4727e-01,  ..., 7.2014e-04,
          4.7422e-03, 9.7991e-01]],
        [[9.9888e-01, 1.1507e-02, 2.1686e-03,  ..., 8.6112e-03,
          1.0932e-03, 4.2758e-03],
         [3.7221e-04, 7.0376e-03, 2.1686e-03,  ..., 8.6112e-03,
          1.0932e-03, 4.2758e-03],
         [3.7221e-04, 7.0376e-03, 2.1686e-03,  ..., 8.6112e-03,
          9.9672e-01, 9.8717e-01],
         [3.7221e-04, 9.7442e-01, 9.9349e-01,  ..., 9.7417e-01,
          1.0932e-03, 4.2758e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3653e-01, 9.9387e-01, 9.9931e-01,  ..., 9.9765e-01,
          1.3765e-02, 1.1405e-02],
         [8.9491e-02, 1.3658e-03, 2.2888e-04,  ..., 7.4361e-04,
          1.3765e-02, 1.1405e-02],
         [3.2026e-01, 1.3658e-03, 2.2888e-04,  ..., 7.4361e-04,
          9.5870e-01, 9.6578e-01],
         [3.5372e-01, 3.4019e-03, 2.2888e-04,  ..., 8.5917e-04,
          1.3765e-02, 1.1405e-02]],
        [[5.6843e-02, 6.5893e-03, 9.9596e-01,  ..., 9.7462e-01,
          3.0839e-03, 8.3012e-03],
         [4.3343e-02, 6.5893e-03, 1.2593e-03,  ..., 4.6061e-03,
          2.4769e-03, 8.3012e-03],
         [8.4671e-01, 6.5893e-03, 1.2593e-03,  ..., 4.6061e-03,
          2.4769e-03, 9.7510e-01],
         [5.3103e-02, 9.8023e-01, 1.5258e-03,  ..., 1.6164e-02,
          9.9196e-01, 8.3012e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 249:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9903, 0.0076, 0.0160,  ..., 0.9961, 0.9689, 0.0262],
         [0.0032, 0.0076, 0.0160,  ..., 0.0013, 0.0087, 0.0331],
         [0.0032, 0.0076, 0.0166,  ..., 0.0013, 0.0137, 0.0375],
         [0.0032, 0.9773, 0.9514,  ..., 0.0013, 0.0087, 0.9033]],
        [[0.9237, 0.0205, 0.0087,  ..., 0.0382, 0.0013, 0.0036],
         [0.0133, 0.0148, 0.0084,  ..., 0.0495, 0.0013, 0.0036],
         [0.0497, 0.0150, 0.0084,  ..., 0.0411, 0.9961, 0.9892],
         [0.0133, 0.9498, 0.9746,  ..., 0.8711, 0.0013, 0.0036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7410e-01, 1.6010e-03, 9.9949e-01,  ..., 9.9739e-01,
          3.1613e-03, 1.1749e-02],
         [8.5201e-02, 7.9083e-04, 1.7125e-04,  ..., 6.9127e-04,
          3.1613e-03, 1.0667e-02],
         [1.7566e-01, 7.9083e-04, 1.7125e-04,  ..., 6.9127e-04,
          9.9052e-01, 9.6692e-01],
         [4.6504e-01, 9.9682e-01, 1.7125e-04,  ..., 1.2239e-03,
          3.1613e-03, 1.0667e-02]],
        [[1.4940e-02, 9.4742e-05, 9.8956e-01,  ..., 9.9385e-01,
          5.0281e-05, 1.2984e-02],
         [1.9407e-02, 9.4742e-05, 3.4787e-03,  ..., 1.8849e-03,
          5.0281e-05, 1.2984e-02],
         [9.5071e-01, 9.4742e-05, 3.4787e-03,  ..., 1.8849e-03,
          5.0281e-05, 9.6105e-01],
         [1.4940e-02, 9.9972e-01, 3.4787e-03,  ..., 2.3792e-03,
          9.9985e-01, 1.2984e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 250:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:03,127 [Process: 0] Synchronize training processes
2024-08-19 13:20:03,127 [Process: 0] Evaluating...
2024-08-19 13:20:03,129 [Process: 0] EPOCH 249:
2024-08-19 13:20:03,131 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:04,162 [Process: 0] Synchronize training processes
2024-08-19 13:20:04,162 [Process: 0] Evaluating...
2024-08-19 13:20:04,164 [Process: 0] EPOCH 250:
2024-08-19 13:20:04,166 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9199e-01, 3.4266e-03, 7.4021e-03,  ..., 9.9802e-01,
          9.9740e-01, 5.4382e-03],
         [2.6695e-03, 3.4266e-03, 7.4021e-03,  ..., 6.6072e-04,
          8.6540e-04, 5.4382e-03],
         [2.6695e-03, 3.4266e-03, 7.4021e-03,  ..., 6.6072e-04,
          8.6540e-04, 5.4382e-03],
         [2.6695e-03, 9.8972e-01, 9.7779e-01,  ..., 6.6072e-04,
          8.6540e-04, 9.8369e-01]],
        [[9.9332e-01, 6.6687e-03, 1.8626e-03,  ..., 4.5558e-03,
          3.8923e-03, 1.1403e-03],
         [1.9291e-03, 6.6687e-03, 1.8626e-03,  ..., 4.5558e-03,
          3.8923e-03, 1.1403e-03],
         [2.8216e-03, 6.6687e-03, 1.8626e-03,  ..., 4.5558e-03,
          9.8832e-01, 9.9658e-01],
         [1.9291e-03, 9.7999e-01, 9.9441e-01,  ..., 9.8633e-01,
          3.8923e-03, 1.1403e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1903e-01, 4.3499e-02, 9.9952e-01,  ..., 9.9567e-01,
          1.3351e-02, 1.3042e-02],
         [8.9233e-02, 5.7457e-03, 1.6141e-04,  ..., 1.4428e-03,
          1.1691e-02, 9.9820e-03],
         [2.5190e-01, 5.7457e-03, 1.6141e-04,  ..., 1.4428e-03,
          9.6327e-01, 9.6699e-01],
         [4.3984e-01, 9.4501e-01, 1.6141e-04,  ..., 1.4428e-03,
          1.1691e-02, 9.9820e-03]],
        [[4.5955e-02, 4.6042e-05, 9.9179e-01,  ..., 9.8992e-01,
          3.9347e-04, 9.4279e-03],
         [1.1257e-01, 4.6042e-05, 2.6498e-03,  ..., 3.3613e-03,
          3.9347e-04, 9.4279e-03],
         [7.9552e-01, 4.6042e-05, 2.6498e-03,  ..., 3.3613e-03,
          3.9347e-04, 9.7172e-01],
         [4.5955e-02, 9.9986e-01, 2.9096e-03,  ..., 3.3613e-03,
          9.9882e-01, 9.4279e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 251:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9884e-01, 3.2680e-03, 1.8893e-03,  ..., 9.9737e-01,
          9.7488e-01, 4.7678e-03],
         [3.8616e-04, 3.2680e-03, 1.8893e-03,  ..., 8.7721e-04,
          7.3173e-03, 4.7678e-03],
         [3.8616e-04, 3.2680e-03, 1.8893e-03,  ..., 8.7721e-04,
          1.0282e-02, 4.9484e-03],
         [3.8616e-04, 9.9020e-01, 9.9433e-01,  ..., 8.7721e-04,
          7.5214e-03, 9.8552e-01]],
        [[3.5343e-01, 2.1487e-02, 1.0448e-02,  ..., 1.8077e-01,
          7.1626e-03, 1.3148e-03],
         [5.1829e-02, 3.7553e-02, 1.0448e-02,  ..., 7.7372e-02,
          7.1626e-03, 1.3148e-03],
         [5.3804e-01, 2.3497e-02, 1.6011e-02,  ..., 2.9976e-01,
          9.7851e-01, 9.9606e-01],
         [5.6707e-02, 9.1746e-01, 9.6309e-01,  ..., 4.4210e-01,
          7.1626e-03, 1.3148e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.8845e-01, 5.3304e-03, 9.8418e-01,  ..., 9.8224e-01,
          4.0833e-03, 1.2815e-02],
         [8.0957e-02, 9.0048e-04, 3.1505e-03,  ..., 4.2361e-03,
          4.0833e-03, 1.1633e-02],
         [1.4158e-01, 9.0048e-04, 3.1505e-03,  ..., 4.2361e-03,
          9.8775e-01, 9.6392e-01],
         [1.8902e-01, 9.9287e-01, 9.5236e-03,  ..., 9.2926e-03,
          4.0833e-03, 1.1633e-02]],
        [[1.8292e-02, 4.3644e-04, 9.5512e-01,  ..., 9.8011e-01,
          9.0562e-03, 6.9721e-03],
         [1.8292e-02, 4.3644e-04, 1.0039e-02,  ..., 5.7825e-03,
          8.8523e-03, 6.9721e-03],
         [9.4512e-01, 4.3644e-04, 1.0039e-02,  ..., 5.7825e-03,
          8.8523e-03, 9.7908e-01],
         [1.8292e-02, 9.9869e-01, 2.4804e-02,  ..., 8.3289e-03,
          9.7324e-01, 6.9721e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:20:05,213 [Process: 0] Synchronize training processes
2024-08-19 13:20:05,213 [Process: 0] Evaluating...
2024-08-19 13:20:05,215 [Process: 0] EPOCH 251:
2024-08-19 13:20:05,217 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:06,257 [Process: 0] Synchronize training processes
2024-08-19 13:20:06,258 [Process: 0] Evaluating...
[Process: 0] EPOCH 252:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9394e-01, 8.5537e-03, 1.1717e-02,  ..., 9.9709e-01,
          9.8147e-01, 6.2235e-03],
         [1.9424e-03, 8.5537e-03, 2.1701e-02,  ..., 9.7064e-04,
          5.6166e-03, 6.2235e-03],
         [1.9424e-03, 9.0827e-03, 1.1717e-02,  ..., 9.7064e-04,
          7.2958e-03, 6.2235e-03],
         [2.1779e-03, 9.7381e-01, 9.5486e-01,  ..., 9.7064e-04,
          5.6166e-03, 9.8133e-01]],
        [[3.3056e-01, 3.6851e-03, 6.2368e-03,  ..., 3.1554e-02,
          1.6462e-02, 1.2619e-03],
         [6.8800e-02, 3.6851e-03, 6.2368e-03,  ..., 2.2098e-02,
          1.5294e-02, 1.2619e-03],
         [4.7337e-01, 3.6851e-03, 7.3567e-03,  ..., 3.5845e-02,
          9.5295e-01, 9.9621e-01],
         [1.2728e-01, 9.8894e-01, 9.8017e-01,  ..., 9.1050e-01,
          1.5294e-02, 1.2619e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3081e-01, 1.9112e-03, 9.8679e-01,  ..., 9.9875e-01,
          6.1087e-03, 7.6038e-03],
         [8.3643e-02, 3.0999e-04, 2.9012e-03,  ..., 4.1561e-04,
          6.1087e-03, 7.6038e-03],
         [3.0555e-01, 3.0999e-04, 2.9012e-03,  ..., 4.1561e-04,
          9.8167e-01, 9.7719e-01],
         [3.7999e-01, 9.9747e-01, 7.4109e-03,  ..., 4.1561e-04,
          6.1087e-03, 7.6038e-03]],
        [[1.5798e-02, 1.4542e-04, 9.9425e-01,  ..., 9.9138e-01,
          1.3982e-04, 4.0640e-03],
         [1.5798e-02, 1.4542e-04, 1.7562e-03,  ..., 2.8652e-03,
          1.3982e-04, 4.0640e-03],
         [9.5261e-01, 1.4542e-04, 1.7562e-03,  ..., 2.8652e-03,
          1.3982e-04, 9.8781e-01],
         [1.5798e-02, 9.9956e-01, 2.2338e-03,  ..., 2.8846e-03,
          9.9958e-01, 4.0640e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 253:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9395e-01, 4.4297e-03, 1.3511e-02,  ..., 9.9953e-01,
          9.6270e-01, 1.0510e-02],
         [2.0178e-03, 4.4297e-03, 1.3511e-02,  ..., 1.5570e-04,
          1.2126e-02, 1.0510e-02],
         [2.0178e-03, 4.4297e-03, 1.6271e-02,  ..., 1.5570e-04,
          1.3054e-02, 1.3538e-02],
         [2.0178e-03, 9.8671e-01, 9.5671e-01,  ..., 1.5570e-04,
          1.2126e-02, 9.6544e-01]],
        [[9.7959e-01, 5.3380e-03, 2.2154e-02,  ..., 8.1649e-03,
          7.1503e-03, 3.7562e-03],
         [6.2579e-03, 5.3380e-03, 2.2154e-02,  ..., 8.1649e-03,
          7.1503e-03, 3.7562e-03],
         [7.8900e-03, 6.0567e-03, 3.5943e-02,  ..., 1.0636e-02,
          9.7855e-01, 9.8873e-01],
         [6.2579e-03, 9.8327e-01, 9.1975e-01,  ..., 9.7303e-01,
          7.1503e-03, 3.7562e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:20:06,686 [Process: 0] EPOCH 252:
2024-08-19 13:20:06,690 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:07,731 [Process: 0] Synchronize training processes
2024-08-19 13:20:07,731 [Process: 0] Evaluating...
2024-08-19 13:20:07,733 [Process: 0] EPOCH 253:
2024-08-19 13:20:07,735 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2953e-01, 8.7937e-03, 9.9628e-01,  ..., 9.9470e-01,
          6.4746e-03, 2.4547e-03],
         [5.1538e-02, 1.2621e-03, 1.2397e-03,  ..., 1.2756e-03,
          6.4746e-03, 2.4547e-03],
         [9.2746e-02, 1.2621e-03, 1.2397e-03,  ..., 1.2756e-03,
          9.8058e-01, 9.9264e-01],
         [7.2618e-01, 9.8868e-01, 1.2397e-03,  ..., 2.7468e-03,
          6.4746e-03, 2.4547e-03]],
        [[6.9670e-03, 5.9343e-04, 9.9783e-01,  ..., 9.9433e-01,
          1.4424e-04, 1.6300e-02],
         [6.9670e-03, 5.9343e-04, 7.2265e-04,  ..., 1.3470e-03,
          1.4424e-04, 1.6300e-02],
         [9.7910e-01, 5.9343e-04, 7.2265e-04,  ..., 1.3470e-03,
          1.4424e-04, 9.5110e-01],
         [6.9670e-03, 9.9822e-01, 7.2265e-04,  ..., 2.9719e-03,
          9.9957e-01, 1.6300e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 254:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9164e-01, 5.6591e-03, 7.3048e-03,  ..., 9.9036e-01,
          9.6129e-01, 3.1274e-03],
         [2.7864e-03, 5.6591e-03, 5.6484e-03,  ..., 4.1063e-03,
          1.6188e-02, 3.1274e-03],
         [2.7864e-03, 5.6591e-03, 5.6484e-03,  ..., 2.7644e-03,
          1.1259e-02, 3.1274e-03],
         [2.7864e-03, 9.8302e-01, 9.8140e-01,  ..., 2.7644e-03,
          1.1259e-02, 9.9062e-01]],
        [[9.9942e-01, 1.3275e-02, 3.3843e-03,  ..., 1.3144e-02,
          2.7440e-03, 1.5705e-02],
         [1.9409e-04, 1.0612e-02, 3.3843e-03,  ..., 1.3144e-02,
          2.7440e-03, 1.3682e-02],
         [1.9409e-04, 1.0612e-02, 3.7819e-03,  ..., 1.9906e-02,
          9.9177e-01, 9.5693e-01],
         [1.9409e-04, 9.6550e-01, 9.8945e-01,  ..., 9.5381e-01,
          2.7440e-03, 1.3682e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9695e-01, 1.2559e-03, 9.9746e-01,  ..., 9.8858e-01,
          1.5686e-02, 6.0444e-03],
         [5.2847e-02, 5.4339e-04, 8.4683e-04,  ..., 2.5828e-03,
          1.5686e-02, 6.0444e-03],
         [8.8545e-02, 5.4339e-04, 8.4683e-04,  ..., 2.5828e-03,
          9.5020e-01, 9.8187e-01],
         [6.6166e-01, 9.9766e-01, 8.4683e-04,  ..., 6.2579e-03,
          1.8428e-02, 6.0444e-03]],
        [[1.5022e-02, 1.3703e-03, 9.9902e-01,  ..., 9.9334e-01,
          2.0487e-04, 2.1226e-02],
         [1.5022e-02, 1.3703e-03, 3.2601e-04,  ..., 2.2213e-03,
          2.0487e-04, 2.1226e-02],
         [9.5392e-01, 1.3703e-03, 3.2601e-04,  ..., 2.2213e-03,
          2.0487e-04, 9.2843e-01],
         [1.6037e-02, 9.9589e-01, 3.2601e-04,  ..., 2.2213e-03,
          9.9939e-01, 2.9116e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 255:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9712e-01, 1.0576e-02, 5.8797e-03,  ..., 9.9847e-01,
          9.7219e-01, 8.2984e-03],
         [9.6073e-04, 1.4382e-02, 5.8797e-03,  ..., 6.6462e-04,
          7.9616e-03, 8.2984e-03],
         [9.6073e-04, 1.2930e-02, 5.8797e-03,  ..., 4.3409e-04,
          8.8668e-03, 1.2077e-02],
         [9.6073e-04, 9.6211e-01, 9.8236e-01,  ..., 4.3409e-04,
          1.0982e-02, 9.7133e-01]],
        [[9.9803e-01, 5.8596e-03, 9.1354e-03,  ..., 8.6741e-03,
          4.9046e-03, 1.4009e-03],
         [6.5807e-04, 5.8596e-03, 1.0620e-02,  ..., 8.6741e-03,
          4.9046e-03, 1.4009e-03],
         [6.5807e-04, 5.8596e-03, 9.5771e-03,  ..., 9.7516e-03,
          9.8529e-01, 9.9580e-01],
         [6.5807e-04, 9.8242e-01, 9.7067e-01,  ..., 9.7290e-01,
          4.9046e-03, 1.4009e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:20:08,774 [Process: 0] Synchronize training processes
2024-08-19 13:20:08,775 [Process: 0] Evaluating...
2024-08-19 13:20:08,776 [Process: 0] EPOCH 254:
2024-08-19 13:20:08,778 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:09,819 [Process: 0] Synchronize training processes
2024-08-19 13:20:09,819 [Process: 0] Evaluating...
2024-08-19 13:20:09,821 [Process: 0] EPOCH 255:
2024-08-19 13:20:09,823 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2993e-01, 4.6208e-04, 9.9870e-01,  ..., 9.9541e-01,
          1.1951e-02, 4.8516e-03],
         [5.3188e-02, 4.6208e-04, 3.2053e-04,  ..., 1.5293e-03,
          1.1951e-02, 4.8516e-03],
         [8.1596e-02, 4.6208e-04, 3.2053e-04,  ..., 1.5293e-03,
          9.6415e-01, 9.8545e-01],
         [6.3528e-01, 9.9861e-01, 6.6318e-04,  ..., 1.5293e-03,
          1.1951e-02, 4.8516e-03]],
        [[3.3815e-02, 3.3919e-05, 9.9097e-01,  ..., 9.8430e-01,
          1.9247e-05, 1.3454e-02],
         [2.6257e-02, 3.3919e-05, 2.5550e-03,  ..., 4.4332e-03,
          1.9247e-05, 1.3454e-02],
         [9.0411e-01, 3.3919e-05, 2.5550e-03,  ..., 4.4332e-03,
          1.9247e-05, 9.5767e-01],
         [3.5817e-02, 9.9990e-01, 3.9188e-03,  ..., 6.8355e-03,
          9.9994e-01, 1.5423e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 256:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8526e-01, 1.0352e-02, 2.0748e-03,  ..., 9.9562e-01,
          9.9771e-01, 3.3383e-03],
         [7.0262e-03, 1.0352e-02, 2.0748e-03,  ..., 1.6309e-03,
          7.6332e-04, 3.3383e-03],
         [3.8584e-03, 1.3058e-02, 2.0748e-03,  ..., 1.3746e-03,
          7.6332e-04, 3.3383e-03],
         [3.8584e-03, 9.6624e-01, 9.9378e-01,  ..., 1.3746e-03,
          7.6332e-04, 9.8998e-01]],
        [[9.8741e-01, 5.7652e-03, 1.6860e-02,  ..., 1.1182e-02,
          7.3969e-03, 1.1045e-02],
         [3.2263e-03, 5.7652e-03, 1.3571e-02,  ..., 1.0064e-02,
          7.3969e-03, 1.1045e-02],
         [5.6872e-03, 5.9254e-03, 1.3788e-02,  ..., 1.3024e-02,
          9.7781e-01, 9.6687e-01],
         [3.6764e-03, 9.8254e-01, 9.5578e-01,  ..., 9.6573e-01,
          7.3969e-03, 1.1045e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0942e-01, 4.0225e-03, 9.9540e-01,  ..., 9.9835e-01,
          3.0685e-03, 2.7162e-02],
         [3.1802e-02, 6.6731e-04, 1.5324e-03,  ..., 5.4987e-04,
          3.0685e-03, 2.2512e-02],
         [3.4350e-02, 6.6731e-04, 1.5324e-03,  ..., 5.4987e-04,
          9.9079e-01, 9.1961e-01],
         [8.2443e-01, 9.9464e-01, 1.5377e-03,  ..., 5.4987e-04,
          3.0685e-03, 3.0718e-02]],
        [[4.8701e-02, 1.3135e-03, 9.9959e-01,  ..., 9.9431e-01,
          3.1645e-06, 7.8854e-03],
         [3.9624e-02, 1.3135e-03, 1.3553e-04,  ..., 1.8920e-03,
          3.1645e-06, 7.8854e-03],
         [8.3436e-01, 1.3135e-03, 1.3553e-04,  ..., 1.8920e-03,
          3.1645e-06, 9.7634e-01],
         [7.7317e-02, 9.9606e-01, 1.3553e-04,  ..., 1.9074e-03,
          9.9999e-01, 7.8854e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 257:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9759e-01, 1.1712e-02, 7.0195e-03,  ..., 9.9696e-01,
          9.8807e-01, 5.5456e-03],
         [8.0259e-04, 1.1712e-02, 7.0195e-03,  ..., 1.0137e-03,
          3.9761e-03, 6.5410e-03],
         [8.0259e-04, 1.1712e-02, 8.1645e-03,  ..., 1.0137e-03,
          3.9761e-03, 5.5456e-03],
         [8.0259e-04, 9.6486e-01, 9.7780e-01,  ..., 1.0137e-03,
          3.9761e-03, 9.8237e-01]],
        [[9.7661e-01, 4.5621e-03, 6.7013e-02,  ..., 8.5374e-03,
          2.1484e-03, 2.1018e-03],
         [5.5468e-03, 4.5621e-03, 4.2107e-02,  ..., 8.5374e-03,
          2.1484e-03, 2.1018e-03],
         [1.2299e-02, 4.5621e-03, 5.5396e-02,  ..., 8.6139e-03,
          9.9355e-01, 9.9369e-01],
         [5.5468e-03, 9.8631e-01, 8.3548e-01,  ..., 9.7431e-01,
          2.1484e-03, 2.1018e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:20:10,864 [Process: 0] Synchronize training processes
2024-08-19 13:20:10,864 [Process: 0] Evaluating...
2024-08-19 13:20:10,866 [Process: 0] EPOCH 256:
2024-08-19 13:20:10,868 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:11,913 [Process: 0] Synchronize training processes
2024-08-19 13:20:11,914 [Process: 0] Evaluating...
2024-08-19 13:20:11,915 [Process: 0] EPOCH 257:
2024-08-19 13:20:11,917 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4941e-02, 1.1185e-03, 9.9589e-01,  ..., 9.9824e-01,
          3.7440e-03, 3.1012e-03],
         [2.2519e-02, 6.8466e-04, 1.4776e-03,  ..., 5.8818e-04,
          3.7440e-03, 3.1012e-03],
         [2.4192e-02, 6.8466e-04, 1.3179e-03,  ..., 5.8818e-04,
          9.8877e-01, 9.9070e-01],
         [9.0835e-01, 9.9751e-01, 1.3179e-03,  ..., 5.8818e-04,
          3.7440e-03, 3.1012e-03]],
        [[5.5633e-02, 5.3159e-04, 9.9932e-01,  ..., 9.6375e-01,
          6.6078e-06, 7.7128e-03],
         [3.8514e-02, 5.3159e-04, 2.2578e-04,  ..., 1.0739e-02,
          6.6078e-06, 7.7128e-03],
         [8.3222e-01, 5.3159e-04, 2.2578e-04,  ..., 1.0739e-02,
          6.6078e-06, 9.7686e-01],
         [7.3638e-02, 9.9841e-01, 2.2578e-04,  ..., 1.4776e-02,
          9.9998e-01, 7.7128e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 258:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9969, 0.0160, 0.0058,  ..., 0.9875, 0.9595, 0.0078],
         [0.0010, 0.0160, 0.0058,  ..., 0.0090, 0.0153, 0.0078],
         [0.0010, 0.0198, 0.0058,  ..., 0.0018, 0.0132, 0.0078],
         [0.0010, 0.9482, 0.9827,  ..., 0.0018, 0.0120, 0.9766]],
        [[0.8648, 0.0097, 0.0069,  ..., 0.0097, 0.0048, 0.0050],
         [0.0216, 0.0105, 0.0069,  ..., 0.0076, 0.0048, 0.0050],
         [0.0920, 0.0097, 0.0069,  ..., 0.0076, 0.9857, 0.9850],
         [0.0216, 0.9702, 0.9793,  ..., 0.9751, 0.0048, 0.0050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.8536e-03, 7.0769e-03, 9.9753e-01,  ..., 9.9685e-01,
          1.5509e-02, 1.9119e-02],
         [8.8536e-03, 2.6238e-03, 8.2290e-04,  ..., 1.0501e-03,
          1.3580e-02, 1.2284e-02],
         [8.8536e-03, 2.6238e-03, 8.2290e-04,  ..., 1.0501e-03,
          9.5733e-01, 9.5631e-01],
         [9.7344e-01, 9.8768e-01, 8.2290e-04,  ..., 1.0501e-03,
          1.3580e-02, 1.2284e-02]],
        [[2.7784e-02, 1.9026e-04, 9.9314e-01,  ..., 9.8870e-01,
          9.3519e-05, 7.1964e-03],
         [2.1325e-02, 1.9026e-04, 2.2863e-03,  ..., 3.4044e-03,
          9.3519e-05, 7.1964e-03],
         [9.2280e-01, 1.9026e-04, 2.2863e-03,  ..., 3.4044e-03,
          9.3519e-05, 9.7841e-01],
         [2.8096e-02, 9.9943e-01, 2.2863e-03,  ..., 4.4950e-03,
          9.9972e-01, 7.1964e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 259:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9522e-01, 6.8946e-03, 9.4445e-03,  ..., 9.9913e-01,
          9.6057e-01, 1.2470e-02],
         [1.7592e-03, 6.8946e-03, 9.4445e-03,  ..., 2.8966e-04,
          1.8820e-02, 1.3318e-02],
         [1.5122e-03, 6.8946e-03, 9.4445e-03,  ..., 2.8966e-04,
          1.2092e-02, 1.2470e-02],
         [1.5122e-03, 9.7932e-01, 9.7167e-01,  ..., 2.8966e-04,
          8.5213e-03, 9.6174e-01]],
        [[9.9785e-01, 1.2014e-02, 7.4293e-03,  ..., 2.8567e-02,
          2.3725e-03, 3.2299e-03],
         [7.1821e-04, 1.0979e-02, 7.2020e-03,  ..., 3.4318e-02,
          2.3725e-03, 3.2299e-03],
         [7.1821e-04, 1.1980e-02, 7.2020e-03,  ..., 3.8146e-02,
          9.9288e-01, 9.9031e-01],
         [7.1821e-04, 9.6503e-01, 9.7817e-01,  ..., 8.9897e-01,
          2.3725e-03, 3.2299e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:20:12,949 [Process: 0] Synchronize training processes
2024-08-19 13:20:12,950 [Process: 0] Evaluating...
2024-08-19 13:20:12,952 [Process: 0] EPOCH 258:
2024-08-19 13:20:12,953 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:13,984 [Process: 0] Synchronize training processes
2024-08-19 13:20:13,984 [Process: 0] Evaluating...
2024-08-19 13:20:13,986 [Process: 0] EPOCH 259:
2024-08-19 13:20:13,988 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4467e-02, 5.1872e-03, 9.8939e-01,  ..., 9.9300e-01,
          1.7327e-02, 2.9073e-02],
         [2.0688e-02, 1.6523e-03, 3.5383e-03,  ..., 2.3344e-03,
          1.6435e-02, 1.4103e-02],
         [2.0688e-02, 1.6523e-03, 3.5383e-03,  ..., 2.3344e-03,
          9.4510e-01, 9.4272e-01],
         [9.3416e-01, 9.9151e-01, 3.5383e-03,  ..., 2.3344e-03,
          2.1139e-02, 1.4103e-02]],
        [[1.0078e-01, 2.7825e-04, 9.9790e-01,  ..., 9.9682e-01,
          3.0821e-04, 1.3534e-02],
         [5.3421e-02, 2.7825e-04, 6.9973e-04,  ..., 1.0606e-03,
          3.0821e-04, 1.3534e-02],
         [7.3291e-01, 2.7825e-04, 6.9973e-04,  ..., 1.0606e-03,
          3.0821e-04, 9.5812e-01],
         [1.1289e-01, 9.9917e-01, 6.9973e-04,  ..., 1.0606e-03,
          9.9908e-01, 1.4814e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 260:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9379e-01, 1.0795e-02, 9.7891e-03,  ..., 9.9533e-01,
          9.8829e-01, 8.7890e-03],
         [2.0697e-03, 1.0795e-02, 9.7891e-03,  ..., 1.5557e-03,
          4.7238e-03, 8.7890e-03],
         [2.0697e-03, 1.0795e-02, 9.7891e-03,  ..., 1.5557e-03,
          3.4920e-03, 8.7890e-03],
         [2.0697e-03, 9.6762e-01, 9.7063e-01,  ..., 1.5557e-03,
          3.4920e-03, 9.7363e-01]],
        [[9.9946e-01, 4.0217e-02, 1.8800e-02,  ..., 4.0053e-02,
          9.7497e-04, 6.7681e-03],
         [1.6801e-04, 2.4232e-02, 1.8110e-02,  ..., 3.1791e-02,
          9.7497e-04, 6.7681e-03],
         [1.6801e-04, 2.4232e-02, 1.8110e-02,  ..., 4.9445e-02,
          9.9708e-01, 9.7970e-01],
         [2.0011e-04, 9.1132e-01, 9.4498e-01,  ..., 8.7871e-01,
          9.7497e-04, 6.7681e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2492e-01, 3.2749e-03, 9.9372e-01,  ..., 9.9521e-01,
          8.5594e-03, 9.6710e-02],
         [7.8415e-02, 7.7446e-04, 2.0944e-03,  ..., 1.3436e-03,
          8.5594e-03, 3.5175e-02],
         [2.1995e-01, 7.7446e-04, 2.0944e-03,  ..., 1.3436e-03,
          9.7432e-01, 8.2857e-01],
         [4.7671e-01, 9.9518e-01, 2.0944e-03,  ..., 2.1068e-03,
          8.5594e-03, 3.9545e-02]],
        [[1.2411e-01, 2.8478e-03, 9.9942e-01,  ..., 9.9317e-01,
          6.1326e-04, 1.2814e-02],
         [7.3234e-02, 2.8478e-03, 1.9444e-04,  ..., 1.9993e-03,
          6.1326e-04, 1.2814e-02],
         [6.0436e-01, 2.8478e-03, 1.9444e-04,  ..., 1.9993e-03,
          6.1326e-04, 9.6156e-01],
         [1.9829e-01, 9.9146e-01, 1.9444e-04,  ..., 2.8328e-03,
          9.9816e-01, 1.2814e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 261:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7813e-01, 7.4521e-03, 3.6137e-03,  ..., 9.9602e-01,
          9.9290e-01, 9.4269e-03],
         [7.2808e-03, 7.4521e-03, 3.6137e-03,  ..., 1.2209e-03,
          2.3661e-03, 1.0658e-02],
         [7.3127e-03, 8.7074e-03, 3.6137e-03,  ..., 1.5425e-03,
          2.3661e-03, 9.4269e-03],
         [7.2808e-03, 9.7639e-01, 9.8916e-01,  ..., 1.2209e-03,
          2.3661e-03, 9.7049e-01]],
        [[1.0000e+00, 2.2841e-02, 1.1709e-02,  ..., 3.0213e-02,
          2.0484e-03, 2.2023e-03],
         [9.2330e-08, 2.2049e-02, 9.7337e-03,  ..., 2.2240e-02,
          2.0484e-03, 2.2023e-03],
         [9.2330e-08, 2.5796e-02, 9.7337e-03,  ..., 2.3724e-02,
          9.9385e-01, 9.9339e-01],
         [9.2330e-08, 9.2931e-01, 9.6882e-01,  ..., 9.2382e-01,
          2.0484e-03, 2.2023e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:20:15,021 [Process: 0] Synchronize training processes
2024-08-19 13:20:15,022 [Process: 0] Evaluating...
2024-08-19 13:20:15,024 [Process: 0] EPOCH 260:
2024-08-19 13:20:15,025 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:16,054 [Process: 0] Synchronize training processes
2024-08-19 13:20:16,054 [Process: 0] Evaluating...
2024-08-19 13:20:16,056 [Process: 0] EPOCH 261:
2024-08-19 13:20:16,058 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1616e-01, 1.2704e-03, 9.9280e-01,  ..., 9.9807e-01,
          1.3509e-02, 2.8025e-02],
         [8.6766e-02, 6.4154e-04, 1.7754e-03,  ..., 6.4315e-04,
          1.3509e-02, 2.2523e-02],
         [2.9481e-01, 6.4154e-04, 1.7754e-03,  ..., 6.4315e-04,
          9.5849e-01, 9.2377e-01],
         [4.0227e-01, 9.9745e-01, 3.6494e-03,  ..., 6.4315e-04,
          1.4490e-02, 2.5684e-02]],
        [[1.7754e-01, 1.7516e-04, 9.9226e-01,  ..., 9.9370e-01,
          4.4121e-05, 1.2445e-02],
         [8.1777e-02, 1.7516e-04, 2.5789e-03,  ..., 2.1015e-03,
          4.4121e-05, 1.2445e-02],
         [5.5444e-01, 1.7516e-04, 2.5789e-03,  ..., 2.1015e-03,
          4.4121e-05, 9.6266e-01],
         [1.8624e-01, 9.9947e-01, 2.5789e-03,  ..., 2.1015e-03,
          9.9987e-01, 1.2445e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 262:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6706e-01, 6.9814e-03, 2.7265e-03,  ..., 9.9863e-01,
          9.6824e-01, 2.8560e-03],
         [9.1659e-03, 6.9814e-03, 2.7265e-03,  ..., 4.5724e-04,
          9.8491e-03, 2.8560e-03],
         [1.4611e-02, 6.9814e-03, 2.7265e-03,  ..., 4.5724e-04,
          1.2057e-02, 2.8560e-03],
         [9.1659e-03, 9.7906e-01, 9.9182e-01,  ..., 4.5724e-04,
          9.8491e-03, 9.9143e-01]],
        [[9.9974e-01, 4.5130e-03, 9.6107e-03,  ..., 3.1812e-02,
          8.3190e-04, 1.1290e-02],
         [8.0494e-05, 4.5130e-03, 9.6107e-03,  ..., 1.9988e-02,
          8.3190e-04, 1.1290e-02],
         [8.0494e-05, 4.5130e-03, 9.6107e-03,  ..., 2.2681e-02,
          9.9750e-01, 9.6613e-01],
         [9.7425e-05, 9.8646e-01, 9.7117e-01,  ..., 9.2552e-01,
          8.3190e-04, 1.1290e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9506e-01, 1.3380e-03, 9.8855e-01,  ..., 9.9897e-01,
          1.0467e-02, 1.3836e-02],
         [8.5541e-02, 1.1531e-03, 2.9667e-03,  ..., 3.4437e-04,
          1.0337e-02, 1.1501e-02],
         [1.9067e-01, 1.1531e-03, 2.9667e-03,  ..., 3.4437e-04,
          9.6886e-01, 9.6316e-01],
         [4.2873e-01, 9.9636e-01, 5.5163e-03,  ..., 3.4437e-04,
          1.0337e-02, 1.1501e-02]],
        [[2.0909e-01, 8.4014e-05, 9.9815e-01,  ..., 9.9548e-01,
          1.5273e-03, 7.9121e-03],
         [8.3920e-02, 8.4014e-05, 6.1631e-04,  ..., 1.5060e-03,
          1.5273e-03, 7.9121e-03],
         [4.7430e-01, 8.4014e-05, 6.1631e-04,  ..., 1.5060e-03,
          1.5273e-03, 9.7626e-01],
         [2.3270e-01, 9.9975e-01, 6.1631e-04,  ..., 1.5060e-03,
          9.9542e-01, 7.9121e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 263:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:17,104 [Process: 0] Synchronize training processes
2024-08-19 13:20:17,104 [Process: 0] Evaluating...
2024-08-19 13:20:17,532 [Process: 0] EPOCH 262:
2024-08-19 13:20:17,535 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:18,559 [Process: 0] Synchronize training processes
2024-08-19 13:20:18,559 [Process: 0] Evaluating...
2024-08-19 13:20:18,561 [Process: 0] EPOCH 263:
2024-08-19 13:20:18,563 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4168e-01, 1.1366e-02, 5.6701e-03,  ..., 9.9706e-01,
          8.8893e-01, 4.6122e-03],
         [2.2879e-02, 9.6217e-03, 5.6701e-03,  ..., 9.8163e-04,
          2.6652e-02, 4.6122e-03],
         [2.0967e-02, 9.6217e-03, 5.6701e-03,  ..., 9.8163e-04,
          5.5160e-02, 4.6122e-03],
         [1.4471e-02, 9.6939e-01, 9.8299e-01,  ..., 9.8163e-04,
          2.9259e-02, 9.8616e-01]],
        [[9.9963e-01, 3.0912e-02, 2.5866e-02,  ..., 3.1141e-02,
          1.2773e-03, 5.2191e-03],
         [1.2420e-04, 2.9487e-02, 3.6461e-02,  ..., 3.1141e-02,
          1.2773e-03, 5.2191e-03],
         [1.2420e-04, 3.8569e-02, 3.2300e-02,  ..., 5.3935e-02,
          9.9617e-01, 9.8434e-01],
         [1.2420e-04, 9.0103e-01, 9.0537e-01,  ..., 8.8378e-01,
          1.2773e-03, 5.2191e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2833e-01, 1.8253e-04, 9.9714e-01,  ..., 9.6603e-01,
          1.2960e-02, 1.0750e-02],
         [7.6315e-02, 9.6771e-05, 9.5424e-04,  ..., 9.5198e-03,
          1.2960e-02, 1.0750e-02],
         [1.5968e-01, 9.6771e-05, 9.5424e-04,  ..., 9.5198e-03,
          9.6112e-01, 9.6775e-01],
         [5.3568e-01, 9.9962e-01, 9.5424e-04,  ..., 1.4932e-02,
          1.2960e-02, 1.0750e-02]],
        [[8.2111e-02, 1.6442e-04, 9.9525e-01,  ..., 9.9552e-01,
          1.3154e-03, 4.7547e-03],
         [5.3411e-02, 1.6442e-04, 1.5833e-03,  ..., 1.2427e-03,
          1.3154e-03, 4.7547e-03],
         [7.4757e-01, 1.6442e-04, 1.5833e-03,  ..., 1.2427e-03,
          1.3154e-03, 9.8574e-01],
         [1.1691e-01, 9.9951e-01, 1.5833e-03,  ..., 1.9918e-03,
          9.9605e-01, 4.7547e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 264:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9939, 0.0019, 0.0053,  ..., 0.9934, 0.9391, 0.0080],
         [0.0020, 0.0019, 0.0053,  ..., 0.0021, 0.0170, 0.0080],
         [0.0021, 0.0019, 0.0053,  ..., 0.0023, 0.0253, 0.0080],
         [0.0020, 0.9942, 0.9840,  ..., 0.0021, 0.0187, 0.9759]],
        [[0.9920, 0.0208, 0.0119,  ..., 0.0151, 0.0018, 0.0095],
         [0.0022, 0.0143, 0.0119,  ..., 0.0151, 0.0018, 0.0095],
         [0.0022, 0.0154, 0.0119,  ..., 0.0151, 0.9947, 0.9715],
         [0.0036, 0.9494, 0.9644,  ..., 0.9547, 0.0018, 0.0095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.7916e-01, 4.0638e-03, 9.9047e-01,  ..., 9.8660e-01,
          1.1986e-02, 7.9317e-03],
         [8.7275e-02, 1.1901e-03, 3.1756e-03,  ..., 3.6346e-03,
          1.1986e-02, 7.9317e-03],
         [1.4289e-01, 1.1901e-03, 3.1756e-03,  ..., 3.6346e-03,
          9.6384e-01, 9.7620e-01],
         [2.9067e-01, 9.9356e-01, 3.1756e-03,  ..., 6.1346e-03,
          1.2190e-02, 7.9317e-03]],
        [[1.0859e-01, 2.7308e-03, 9.9726e-01,  ..., 9.8061e-01,
          4.3893e-04, 7.2580e-03],
         [5.9749e-02, 2.7308e-03, 9.1317e-04,  ..., 5.8715e-03,
          4.3893e-04, 7.2580e-03],
         [7.2309e-01, 2.7308e-03, 9.1317e-04,  ..., 5.8715e-03,
          4.3893e-04, 9.7823e-01],
         [1.0857e-01, 9.9181e-01, 9.1317e-04,  ..., 7.6452e-03,
          9.9868e-01, 7.2580e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:20:19,594 [Process: 0] Synchronize training processes
2024-08-19 13:20:19,595 [Process: 0] Evaluating...
2024-08-19 13:20:19,596 [Process: 0] EPOCH 264:
2024-08-19 13:20:19,598 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 265:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9145e-01, 4.4859e-03, 1.4734e-02,  ..., 9.9814e-01,
          9.7749e-01, 2.9188e-03],
         [2.7111e-03, 4.4859e-03, 3.0080e-02,  ..., 6.2118e-04,
          6.6679e-03, 2.9188e-03],
         [3.1275e-03, 4.4859e-03, 1.4734e-02,  ..., 6.2118e-04,
          9.1699e-03, 2.9188e-03],
         [2.7111e-03, 9.8654e-01, 9.4045e-01,  ..., 6.2118e-04,
          6.6679e-03, 9.9124e-01]],
        [[9.7101e-01, 7.2365e-03, 5.3817e-02,  ..., 2.3020e-02,
          1.4856e-03, 3.9036e-03],
         [5.5738e-03, 6.7367e-03, 5.4660e-02,  ..., 1.4223e-02,
          1.5595e-03, 3.9036e-03],
         [5.5883e-03, 6.7367e-03, 6.2824e-02,  ..., 1.4223e-02,
          9.9547e-01, 9.8829e-01],
         [1.7830e-02, 9.7929e-01, 8.2870e-01,  ..., 9.4853e-01,
          1.4856e-03, 3.9036e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7356e-01, 7.1664e-04, 9.9870e-01,  ..., 9.9962e-01,
          1.6656e-02, 1.3278e-02],
         [8.7480e-02, 7.1664e-04, 4.3406e-04,  ..., 1.2731e-04,
          1.5724e-02, 1.3278e-02],
         [1.7704e-01, 7.1664e-04, 4.3406e-04,  ..., 1.2731e-04,
          9.5190e-01, 9.6017e-01],
         [3.6192e-01, 9.9785e-01, 4.3406e-04,  ..., 1.2731e-04,
          1.5724e-02, 1.3278e-02]],
        [[1.4643e-02, 6.4157e-04, 9.9642e-01,  ..., 9.9831e-01,
          1.1544e-05, 8.6791e-03],
         [1.4643e-02, 6.4157e-04, 1.0662e-03,  ..., 5.6377e-04,
          1.1544e-05, 8.6791e-03],
         [9.5461e-01, 6.4157e-04, 1.0662e-03,  ..., 5.6377e-04,
          1.1544e-05, 9.7396e-01],
         [1.6101e-02, 9.9808e-01, 1.4482e-03,  ..., 5.6377e-04,
          9.9997e-01, 8.6791e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 266:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9966, 0.0074, 0.0062,  ..., 0.9851, 0.9654, 0.0034],
         [0.0011, 0.0083, 0.0062,  ..., 0.0041, 0.0087, 0.0034],
         [0.0011, 0.0074, 0.0062,  ..., 0.0068, 0.0139, 0.0034],
         [0.0011, 0.9769, 0.9814,  ..., 0.0041, 0.0120, 0.9897]],
        [[0.9854, 0.0283, 0.0098,  ..., 0.0244, 0.0018, 0.0174],
         [0.0035, 0.0283, 0.0098,  ..., 0.0244, 0.0019, 0.0159],
         [0.0054, 0.0444, 0.0098,  ..., 0.0351, 0.9946, 0.9508],
         [0.0058, 0.8989, 0.9705,  ..., 0.9160, 0.0018, 0.0159]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8906e-01, 5.7882e-04, 9.9923e-01,  ..., 9.9133e-01,
          9.6749e-03, 8.9054e-03],
         [4.8861e-02, 4.3629e-04, 2.5675e-04,  ..., 2.5351e-03,
          9.6749e-03, 8.9054e-03],
         [4.8861e-02, 4.3629e-04, 2.5675e-04,  ..., 2.5351e-03,
          9.7098e-01, 9.7328e-01],
         [7.1321e-01, 9.9855e-01, 2.5675e-04,  ..., 3.5984e-03,
          9.6749e-03, 8.9054e-03]],
        [[6.8567e-03, 1.3129e-03, 9.9110e-01,  ..., 9.9640e-01,
          2.5420e-03, 4.8968e-03],
         [6.8567e-03, 1.3129e-03, 2.9654e-03,  ..., 1.1993e-03,
          7.9759e-04, 4.8968e-03],
         [9.7943e-01, 1.3129e-03, 2.9654e-03,  ..., 1.1993e-03,
          7.9759e-04, 9.8531e-01],
         [6.8567e-03, 9.9606e-01, 2.9654e-03,  ..., 1.1993e-03,
          9.9586e-01, 4.8968e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:20:20,631 [Process: 0] Synchronize training processes
2024-08-19 13:20:20,631 [Process: 0] Evaluating...
2024-08-19 13:20:20,633 [Process: 0] EPOCH 265:
2024-08-19 13:20:20,635 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:21,666 [Process: 0] Synchronize training processes
2024-08-19 13:20:21,666 [Process: 0] Evaluating...
2024-08-19 13:20:21,668 [Process: 0] EPOCH 266:
2024-08-19 13:20:21,670 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 267:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8349e-01, 9.1091e-03, 6.7170e-03,  ..., 9.9900e-01,
          9.9235e-01, 6.7431e-03],
         [5.5038e-03, 9.1091e-03, 1.0097e-02,  ..., 3.3378e-04,
          2.5486e-03, 6.7431e-03],
         [5.5038e-03, 9.1091e-03, 6.7170e-03,  ..., 3.3378e-04,
          2.5486e-03, 6.7431e-03],
         [5.5038e-03, 9.7267e-01, 9.7647e-01,  ..., 3.3378e-04,
          2.5486e-03, 9.7977e-01]],
        [[9.9236e-01, 9.4551e-03, 4.1112e-03,  ..., 8.1278e-03,
          1.6996e-03, 1.9213e-03],
         [2.4771e-03, 9.4551e-03, 4.1112e-03,  ..., 8.1278e-03,
          1.6996e-03, 1.9213e-03],
         [2.6887e-03, 9.4551e-03, 4.1112e-03,  ..., 8.1278e-03,
          9.9490e-01, 9.9424e-01],
         [2.4771e-03, 9.7163e-01, 9.8767e-01,  ..., 9.7562e-01,
          1.6996e-03, 1.9213e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5387e-01, 5.5879e-03, 9.9211e-01,  ..., 9.9916e-01,
          1.6131e-02, 1.7767e-02],
         [7.6342e-02, 1.9483e-03, 2.6312e-03,  ..., 2.8097e-04,
          1.6131e-02, 1.3888e-02],
         [1.8060e-01, 1.9483e-03, 2.6312e-03,  ..., 2.8097e-04,
          9.5024e-01, 9.5446e-01],
         [4.8919e-01, 9.9052e-01, 2.6312e-03,  ..., 2.8097e-04,
          1.7497e-02, 1.3888e-02]],
        [[3.9954e-03, 4.4204e-03, 9.7754e-01,  ..., 9.9238e-01,
          2.5248e-02, 7.8497e-03],
         [3.9954e-03, 4.4204e-03, 6.8864e-03,  ..., 2.5413e-03,
          4.9879e-03, 7.8497e-03],
         [9.8801e-01, 4.4204e-03, 6.8864e-03,  ..., 2.5413e-03,
          4.9879e-03, 9.7645e-01],
         [3.9954e-03, 9.8674e-01, 8.6882e-03,  ..., 2.5413e-03,
          9.6478e-01, 7.8497e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 268:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9947, 0.0081, 0.0066,  ..., 0.9816, 0.9665, 0.0132],
         [0.0018, 0.0135, 0.0066,  ..., 0.0056, 0.0096, 0.0122],
         [0.0018, 0.0081, 0.0066,  ..., 0.0072, 0.0123, 0.0122],
         [0.0018, 0.9703, 0.9803,  ..., 0.0056, 0.0116, 0.9624]],
        [[0.9854, 0.0236, 0.0197,  ..., 0.0683, 0.0025, 0.0026],
         [0.0036, 0.0236, 0.0197,  ..., 0.0383, 0.0025, 0.0026],
         [0.0066, 0.0326, 0.0212,  ..., 0.0427, 0.9926, 0.9923],
         [0.0044, 0.9203, 0.9395,  ..., 0.8508, 0.0025, 0.0026]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:20:22,698 [Process: 0] Synchronize training processes
2024-08-19 13:20:22,699 [Process: 0] Evaluating...
2024-08-19 13:20:22,700 [Process: 0] EPOCH 267:
2024-08-19 13:20:22,702 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:23,741 [Process: 0] Synchronize training processes
2024-08-19 13:20:23,741 [Process: 0] Evaluating...
2024-08-19 13:20:23,743 [Process: 0] EPOCH 268:
2024-08-19 13:20:23,745 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4034e-01, 3.7472e-04, 9.9184e-01,  ..., 9.9917e-01,
          5.9369e-03, 2.7822e-02],
         [8.0781e-02, 1.5593e-04, 2.0628e-03,  ..., 2.7725e-04,
          5.9369e-03, 1.4454e-02],
         [2.4834e-01, 1.5593e-04, 2.0628e-03,  ..., 2.7725e-04,
          9.8219e-01, 9.4327e-01],
         [4.3054e-01, 9.9931e-01, 4.0330e-03,  ..., 2.7725e-04,
          5.9369e-03, 1.4454e-02]],
        [[1.4892e-02, 4.8757e-04, 9.8838e-01,  ..., 9.9886e-01,
          8.9377e-04, 6.4181e-03],
         [1.4892e-02, 4.8757e-04, 3.7081e-03,  ..., 3.7559e-04,
          4.3008e-04, 6.4181e-03],
         [9.5294e-01, 4.8757e-04, 3.7081e-03,  ..., 3.7559e-04,
          4.3008e-04, 9.8075e-01],
         [1.7278e-02, 9.9854e-01, 4.2030e-03,  ..., 3.8989e-04,
          9.9825e-01, 6.4181e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 269:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9618e-01, 2.7049e-02, 2.9271e-02,  ..., 9.9989e-01,
          9.9567e-01, 5.2621e-03],
         [1.2739e-03, 2.3055e-02, 2.3017e-02,  ..., 3.7581e-05,
          1.4422e-03, 5.2621e-03],
         [1.2739e-03, 3.5192e-02, 3.7844e-02,  ..., 3.7581e-05,
          1.4422e-03, 5.2621e-03],
         [1.2739e-03, 9.1470e-01, 9.0987e-01,  ..., 3.7581e-05,
          1.4422e-03, 9.8421e-01]],
        [[9.9999e-01, 4.2736e-03, 8.3934e-03,  ..., 4.3330e-03,
          1.8054e-03, 6.1012e-03],
         [3.6382e-06, 4.2736e-03, 8.3934e-03,  ..., 4.3330e-03,
          1.8054e-03, 5.1784e-03],
         [3.6382e-06, 4.2736e-03, 8.4673e-03,  ..., 4.3330e-03,
          9.9458e-01, 9.8354e-01],
         [3.6382e-06, 9.8718e-01, 9.7475e-01,  ..., 9.8700e-01,
          1.8054e-03, 5.1784e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.5307e-01, 1.6722e-03, 9.9852e-01,  ..., 9.9957e-01,
          3.3484e-03, 1.1417e-02],
         [6.6428e-02, 7.5570e-04, 4.9316e-04,  ..., 1.3230e-04,
          3.3484e-03, 1.1417e-02],
         [1.1972e-01, 7.5570e-04, 4.9316e-04,  ..., 1.3230e-04,
          9.8995e-01, 9.6575e-01],
         [3.6078e-01, 9.9682e-01, 4.9316e-04,  ..., 1.6570e-04,
          3.3484e-03, 1.1417e-02]],
        [[1.8076e-02, 2.5164e-04, 9.9308e-01,  ..., 9.9598e-01,
          1.1518e-04, 4.0577e-03],
         [1.7895e-02, 2.5164e-04, 2.3075e-03,  ..., 1.3402e-03,
          1.1518e-04, 4.0577e-03],
         [9.4490e-01, 2.5164e-04, 2.3075e-03,  ..., 1.3402e-03,
          1.1518e-04, 9.8783e-01],
         [1.9134e-02, 9.9925e-01, 2.3075e-03,  ..., 1.3402e-03,
          9.9965e-01, 4.0577e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 270:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:24,780 [Process: 0] Synchronize training processes
2024-08-19 13:20:24,781 [Process: 0] Evaluating...
2024-08-19 13:20:24,782 [Process: 0] EPOCH 269:
2024-08-19 13:20:24,784 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:25,816 [Process: 0] Synchronize training processes
2024-08-19 13:20:25,817 [Process: 0] Evaluating...
2024-08-19 13:20:25,818 [Process: 0] EPOCH 270:
2024-08-19 13:20:25,820 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9204e-01, 1.6001e-02, 2.9993e-02,  ..., 9.9840e-01,
          9.3650e-01, 3.2065e-02],
         [2.6528e-03, 9.7351e-03, 1.9165e-02,  ..., 5.3350e-04,
          1.6402e-02, 3.2065e-02],
         [2.6528e-03, 9.7351e-03, 1.9547e-02,  ..., 5.3350e-04,
          2.8855e-02, 5.2800e-02],
         [2.6528e-03, 9.6453e-01, 9.3130e-01,  ..., 5.3350e-04,
          1.8247e-02, 8.8307e-01]],
        [[9.9844e-01, 1.9893e-02, 3.8033e-03,  ..., 3.3057e-03,
          1.4750e-03, 6.1062e-03],
         [3.6923e-04, 1.9893e-02, 3.8033e-03,  ..., 3.3057e-03,
          1.4750e-03, 4.7461e-03],
         [3.6923e-04, 2.4328e-02, 3.8033e-03,  ..., 3.3057e-03,
          9.9557e-01, 9.8440e-01],
         [8.2347e-04, 9.3588e-01, 9.8859e-01,  ..., 9.9008e-01,
          1.4750e-03, 4.7461e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4204e-01, 1.5701e-04, 9.9306e-01,  ..., 9.9370e-01,
          3.9941e-03, 2.7382e-02],
         [7.1129e-02, 1.5701e-04, 2.3139e-03,  ..., 1.9148e-03,
          3.9941e-03, 1.8980e-02],
         [1.2763e-01, 1.5701e-04, 2.3139e-03,  ..., 1.9148e-03,
          9.8802e-01, 9.3458e-01],
         [4.5920e-01, 9.9953e-01, 2.3139e-03,  ..., 2.4717e-03,
          3.9941e-03, 1.9056e-02]],
        [[1.9480e-02, 6.3480e-04, 9.9817e-01,  ..., 9.9758e-01,
          1.9331e-05, 7.9448e-03],
         [1.7626e-02, 6.3480e-04, 6.0865e-04,  ..., 8.0817e-04,
          1.9331e-05, 7.9448e-03],
         [9.4527e-01, 6.3480e-04, 6.0865e-04,  ..., 8.0817e-04,
          1.9331e-05, 9.7617e-01],
         [1.7626e-02, 9.9810e-01, 6.0865e-04,  ..., 8.0817e-04,
          9.9994e-01, 7.9448e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 271:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9508e-01, 6.4149e-03, 1.3436e-02,  ..., 9.9622e-01,
          8.6142e-01, 8.0645e-03],
         [1.6416e-03, 6.4149e-03, 1.3436e-02,  ..., 1.2589e-03,
          3.1902e-02, 8.0645e-03],
         [1.6416e-03, 6.4149e-03, 1.6088e-02,  ..., 1.2589e-03,
          5.8556e-02, 8.0645e-03],
         [1.6416e-03, 9.8076e-01, 9.5704e-01,  ..., 1.2589e-03,
          4.8125e-02, 9.7581e-01]],
        [[9.9943e-01, 2.2293e-02, 6.1996e-03,  ..., 4.4334e-02,
          4.4571e-03, 5.3136e-03],
         [1.9068e-04, 4.4872e-02, 6.1996e-03,  ..., 2.6973e-02,
          4.4571e-03, 2.8038e-03],
         [1.9068e-04, 2.3827e-02, 6.1996e-03,  ..., 3.1660e-02,
          9.8663e-01, 9.8908e-01],
         [1.9068e-04, 9.0901e-01, 9.8140e-01,  ..., 8.9703e-01,
          4.4571e-03, 2.8038e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.5536e-01, 5.1733e-04, 9.9971e-01,  ..., 9.7973e-01,
          1.4488e-02, 1.2968e-02],
         [7.5042e-02, 5.1733e-04, 9.7829e-05,  ..., 5.8503e-03,
          1.4488e-02, 1.2968e-02],
         [1.2331e-01, 5.1733e-04, 9.7829e-05,  ..., 5.8503e-03,
          9.5654e-01, 9.6073e-01],
         [3.4629e-01, 9.9845e-01, 9.7829e-05,  ..., 8.5713e-03,
          1.4488e-02, 1.3337e-02]],
        [[1.0975e-02, 1.7410e-04, 9.9684e-01,  ..., 9.9436e-01,
          1.8224e-03, 1.1565e-02],
         [1.0975e-02, 1.7410e-04, 1.0524e-03,  ..., 1.6536e-03,
          1.8224e-03, 1.1565e-02],
         [9.6708e-01, 1.7410e-04, 1.0524e-03,  ..., 1.6536e-03,
          1.8224e-03, 9.6531e-01],
         [1.0975e-02, 9.9948e-01, 1.0524e-03,  ..., 2.3295e-03,
          9.9453e-01, 1.1565e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:20:26,851 [Process: 0] Synchronize training processes
2024-08-19 13:20:26,851 [Process: 0] Evaluating...
2024-08-19 13:20:26,853 [Process: 0] EPOCH 271:
2024-08-19 13:20:26,855 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:27,896 [Process: 0] Synchronize training processes
2024-08-19 13:20:27,897 [Process: 0] Evaluating...
2024-08-19 13:20:28,320 [Process: 0] EPOCH 272:
2024-08-19 13:20:28,324 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 272:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9079e-01, 5.0860e-03, 6.2300e-03,  ..., 9.5482e-01,
          6.7988e-01, 2.0814e-02],
         [3.0605e-03, 5.0860e-03, 6.2300e-03,  ..., 1.3017e-02,
          7.2434e-02, 5.1236e-02],
         [3.0933e-03, 5.0860e-03, 6.2300e-03,  ..., 1.9142e-02,
          7.6682e-02, 2.2739e-02],
         [3.0605e-03, 9.8474e-01, 9.8131e-01,  ..., 1.3017e-02,
          1.7101e-01, 9.0521e-01]],
        [[9.9951e-01, 3.1127e-03, 5.8108e-03,  ..., 1.7200e-02,
          4.8909e-03, 1.0968e-03],
         [1.5945e-04, 3.1127e-03, 8.8910e-03,  ..., 1.7200e-02,
          4.8909e-03, 1.0968e-03],
         [1.5945e-04, 3.1127e-03, 5.8108e-03,  ..., 2.4483e-02,
          9.8533e-01, 9.9671e-01],
         [1.6925e-04, 9.9066e-01, 9.7949e-01,  ..., 9.4112e-01,
          4.8909e-03, 1.0968e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3077e-01, 9.5520e-03, 9.9852e-01,  ..., 9.9868e-01,
          4.4356e-03, 1.6581e-02],
         [5.4577e-02, 3.5843e-03, 4.9260e-04,  ..., 4.3881e-04,
          4.4356e-03, 1.4254e-02],
         [7.5264e-02, 3.5843e-03, 4.9260e-04,  ..., 4.3881e-04,
          9.8669e-01, 9.5491e-01],
         [7.3938e-01, 9.8328e-01, 4.9260e-04,  ..., 4.3881e-04,
          4.4356e-03, 1.4254e-02]],
        [[6.2142e-03, 2.4455e-04, 9.9015e-01,  ..., 9.9303e-01,
          2.7311e-05, 7.2127e-03],
         [6.2142e-03, 2.4455e-04, 3.2844e-03,  ..., 2.3249e-03,
          2.7311e-05, 7.2127e-03],
         [9.8136e-01, 2.4455e-04, 3.2844e-03,  ..., 2.3249e-03,
          2.7311e-05, 9.7836e-01],
         [6.2142e-03, 9.9927e-01, 3.2844e-03,  ..., 2.3249e-03,
          9.9992e-01, 7.2127e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 273:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9839, 0.0036, 0.0098,  ..., 0.9950, 0.9470, 0.0081],
         [0.0048, 0.0036, 0.0098,  ..., 0.0019, 0.0149, 0.0081],
         [0.0064, 0.0036, 0.0113,  ..., 0.0015, 0.0232, 0.0081],
         [0.0048, 0.9892, 0.9691,  ..., 0.0015, 0.0149, 0.9756]],
        [[0.9893, 0.0072, 0.0126,  ..., 0.0039, 0.0824, 0.0019],
         [0.0046, 0.0072, 0.0126,  ..., 0.0039, 0.4623, 0.0019],
         [0.0030, 0.0072, 0.0126,  ..., 0.0039, 0.4120, 0.9943],
         [0.0030, 0.9785, 0.9621,  ..., 0.9884, 0.0433, 0.0019]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:20:29,349 [Process: 0] Synchronize training processes
2024-08-19 13:20:29,350 [Process: 0] Evaluating...
2024-08-19 13:20:29,351 [Process: 0] EPOCH 273:
2024-08-19 13:20:29,353 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:20:30,414 [Process: 0] Synchronize training processes
2024-08-19 13:20:30,414 [Process: 0] Evaluating...
2024-08-19 13:20:30,416 [Process: 0] EPOCH 274:
2024-08-19 13:20:30,418 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4484e-01, 1.0052e-03, 9.9162e-01,  ..., 9.9223e-01,
          9.3168e-03, 8.0148e-03],
         [7.0276e-02, 1.0052e-03, 2.7945e-03,  ..., 2.1996e-03,
          7.2234e-03, 6.7327e-03],
         [1.1071e-01, 1.0052e-03, 2.7945e-03,  ..., 2.1996e-03,
          9.7624e-01, 9.7852e-01],
         [5.7417e-01, 9.9698e-01, 2.7945e-03,  ..., 3.3678e-03,
          7.2234e-03, 6.7327e-03]],
        [[5.4745e-03, 3.1750e-04, 9.9418e-01,  ..., 9.9296e-01,
          7.8007e-04, 7.1120e-03],
         [5.4745e-03, 3.1750e-04, 1.9416e-03,  ..., 2.3452e-03,
          7.8007e-04, 7.1120e-03],
         [9.8358e-01, 3.1750e-04, 1.9416e-03,  ..., 2.3452e-03,
          7.8007e-04, 9.7866e-01],
         [5.4745e-03, 9.9905e-01, 1.9416e-03,  ..., 2.3452e-03,
          9.9766e-01, 7.1120e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 274:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9276e-01, 1.1990e-02, 1.1916e-02,  ..., 9.9735e-01,
          9.8958e-01, 4.3640e-03],
         [2.2285e-03, 1.1990e-02, 1.1916e-02,  ..., 1.2060e-03,
          6.4695e-03, 4.3640e-03],
         [2.7818e-03, 1.1990e-02, 1.4194e-02,  ..., 7.2263e-04,
          1.9728e-03, 4.3640e-03],
         [2.2285e-03, 9.6403e-01, 9.6197e-01,  ..., 7.2263e-04,
          1.9728e-03, 9.8691e-01]],
        [[9.9998e-01, 1.4240e-02, 1.3242e-02,  ..., 3.0210e-02,
          2.4251e-03, 5.4388e-03],
         [4.9694e-06, 1.4240e-02, 1.4663e-02,  ..., 2.3637e-02,
          2.4251e-03, 5.4388e-03],
         [4.9694e-06, 1.4240e-02, 1.3529e-02,  ..., 2.3637e-02,
          9.9272e-01, 9.8368e-01],
         [4.9694e-06, 9.5728e-01, 9.5857e-01,  ..., 9.2252e-01,
          2.4251e-03, 5.4388e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 179, in train_one_epoch
    for i, batch in enumerate(self.train_loader):
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in __getitem__
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in <listcomp>
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
KeyboardInterrupt