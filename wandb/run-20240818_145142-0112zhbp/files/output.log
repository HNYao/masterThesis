2024-08-18 14:51:46,482 [Worker 0] Is distributed: False
2024-08-18 14:51:46,482 [Process: 0] Starting training
2024-08-18 14:51:46,482 [Process: 0] EPOCH 1:
2024-08-18 14:51:46,485 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:51:48,295 [Process: 0] Synchronize training processes
2024-08-18 14:51:48,295 [Process: 0] Evaluating...
2024-08-18 14:51:48,302 [Process: 0] EPOCH 2:
2024-08-18 14:51:48,304 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5347, 0.5000, 0.4130,  ..., 0.5000, 0.4932, 0.3184],
         [0.4653, 0.5000, 0.5870,  ..., 0.5000, 0.5068, 0.6816]],
        [[0.2485, 0.3593, 0.8897,  ..., 0.5266, 0.1497, 0.3132],
         [0.7515, 0.6407, 0.1103,  ..., 0.4734, 0.8503, 0.6868]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.6094, 0.5021, 0.4943,  ..., 0.4893, 0.4898, 0.5225],
         [0.3906, 0.4979, 0.5057,  ..., 0.5107, 0.5102, 0.4775]],
        [[0.4633, 0.4814, 0.5000,  ..., 0.4636, 0.5000, 0.6299],
         [0.5367, 0.5186, 0.5000,  ..., 0.5364, 0.5000, 0.3701]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:51:49,518 [Process: 0] Synchronize training processes
2024-08-18 14:51:49,519 [Process: 0] Evaluating...
2024-08-18 14:51:49,521 [Process: 0] EPOCH 3:
2024-08-18 14:51:49,523 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:51:50,702 [Process: 0] Synchronize training processes
2024-08-18 14:51:50,702 [Process: 0] Evaluating...
2024-08-18 14:51:50,704 [Process: 0] EPOCH 4:
2024-08-18 14:51:50,706 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.6308, 0.5681,  ..., 0.5000, 0.6949, 0.6554],
         [0.5000, 0.3692, 0.4319,  ..., 0.5000, 0.3051, 0.3446]],
        [[0.5000, 0.5256, 0.5000,  ..., 0.5088, 0.5266, 0.5420],
         [0.5000, 0.4744, 0.5000,  ..., 0.4912, 0.4734, 0.4580]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.6877, 0.6791, 0.5213,  ..., 0.7034, 0.6475, 0.6767],
         [0.3123, 0.3209, 0.4787,  ..., 0.2966, 0.3525, 0.3233]],
        [[0.7168, 0.0320, 0.4575,  ..., 0.5254, 0.5000, 0.0565],
         [0.2832, 0.9680, 0.5425,  ..., 0.4746, 0.5000, 0.9435]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.7305, 0.7201, 0.6537,  ..., 0.7047, 0.7572, 0.7441],
         [0.2695, 0.2799, 0.3463,  ..., 0.2953, 0.2428, 0.2559]],
        [[0.5000, 0.5165, 0.5000,  ..., 0.6803, 0.7303, 0.6424],
         [0.5000, 0.4835, 0.5000,  ..., 0.3197, 0.2697, 0.3576]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:51:51,881 [Process: 0] Synchronize training processes
2024-08-18 14:51:51,881 [Process: 0] Evaluating...
2024-08-18 14:51:51,883 [Process: 0] EPOCH 5:
2024-08-18 14:51:51,885 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.7276, 0.7285, 0.6445,  ..., 0.6268, 0.6624, 0.5000],
         [0.2724, 0.2715, 0.3555,  ..., 0.3732, 0.3376, 0.5000]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.7085, 0.0975, 0.0145],
         [0.5000, 0.5000, 0.5000,  ..., 0.2915, 0.9025, 0.9855]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.0185,  ..., 0.5000, 0.7167, 0.5000],
         [0.5000, 0.5000, 0.9815,  ..., 0.5000, 0.2833, 0.5000]],
        [[0.7224, 0.7251, 0.7769,  ..., 0.7371, 0.6309, 0.7479],
         [0.2776, 0.2749, 0.2231,  ..., 0.2629, 0.3691, 0.2521]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.6886, 0.6961, 0.7337,  ..., 0.7113, 0.7082, 0.6075],
         [0.3114, 0.3039, 0.2663,  ..., 0.2887, 0.2918, 0.3925]],
        [[0.7466, 0.5000, 0.5000,  ..., 0.5000, 0.0037, 0.6792],
         [0.2534, 0.5000, 0.5000,  ..., 0.5000, 0.9963, 0.3208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:51:53,087 [Process: 0] Synchronize training processes
2024-08-18 14:51:53,087 [Process: 0] Evaluating...
2024-08-18 14:51:53,089 [Process: 0] EPOCH 6:
2024-08-18 14:51:53,091 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:51:54,267 [Process: 0] Synchronize training processes
2024-08-18 14:51:54,267 [Process: 0] Evaluating...
2024-08-18 14:51:54,269 [Process: 0] EPOCH 7:
2024-08-18 14:51:54,271 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.0642, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.9358, 0.5000, 0.5000]],
        [[0.6810, 0.5000, 0.7052,  ..., 0.7317, 0.5000, 0.7312],
         [0.3190, 0.5000, 0.2948,  ..., 0.2683, 0.5000, 0.2688]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.6808, 0.7213, 0.7245,  ..., 0.7539, 0.6606, 0.6570],
         [0.3192, 0.2787, 0.2755,  ..., 0.2461, 0.3394, 0.3430]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.0011, 0.6815],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.9989, 0.3185]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000]],
        [[0.6562, 0.3540, 0.7187,  ..., 0.7364, 0.6559, 0.7796],
         [0.3438, 0.6460, 0.2813,  ..., 0.2636, 0.3441, 0.2204]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.7725, 0.7289, 0.7381,  ..., 0.7147, 0.7542, 0.6809],
         [0.2275, 0.2711, 0.2619,  ..., 0.2853, 0.2458, 0.3191]],
        [[0.7698, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.6943],
         [0.2302, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.3057]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:51:55,449 [Process: 0] Synchronize training processes
2024-08-18 14:51:55,450 [Process: 0] Evaluating...
2024-08-18 14:51:55,451 [Process: 0] EPOCH 8:
2024-08-18 14:51:55,453 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:51:56,629 [Process: 0] Synchronize training processes
2024-08-18 14:51:56,629 [Process: 0] Evaluating...
2024-08-18 14:51:56,631 [Process: 0] EPOCH 9:
2024-08-18 14:51:56,632 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000]],
        [[0.6781, 0.5000, 0.5000,  ..., 0.7029, 0.6940, 0.7525],
         [0.3219, 0.5000, 0.5000,  ..., 0.2971, 0.3060, 0.2475]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.6992, 0.7813, 0.7210,  ..., 0.7081, 0.7267, 0.7094],
         [0.3008, 0.2187, 0.2790,  ..., 0.2919, 0.2733, 0.2906]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8032, 0.7804],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1968, 0.2196]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8023, 0.5518],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1977, 0.4482]],
        [[0.5000, 0.5000, 0.7013,  ..., 0.7139, 0.6346, 0.7078],
         [0.5000, 0.5000, 0.2987,  ..., 0.2861, 0.3654, 0.2922]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:51:57,810 [Process: 0] Synchronize training processes
2024-08-18 14:51:57,810 [Process: 0] Evaluating...
2024-08-18 14:51:57,812 [Process: 0] EPOCH 10:
2024-08-18 14:51:57,814 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.6898, 0.7073, 0.6840,  ..., 0.7898, 0.5000, 0.7299],
         [0.3102, 0.2927, 0.3160,  ..., 0.2102, 0.5000, 0.2701]],
        [[0.5998, 0.5000, 0.5000,  ..., 0.7685, 0.7457, 0.6630],
         [0.4002, 0.5000, 0.5000,  ..., 0.2315, 0.2543, 0.3370]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7805, 0.7645, 0.7869],
         [0.5000, 0.5000, 0.5000,  ..., 0.2195, 0.2355, 0.2131]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.7769, 0.5000, 0.7866],
         [0.5000, 0.5000, 0.5000,  ..., 0.2231, 0.5000, 0.2134]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.7159, 0.5000,  ..., 0.6636, 0.7841, 0.5000],
         [0.5000, 0.2841, 0.5000,  ..., 0.3364, 0.2159, 0.5000]],
        [[0.7492, 0.5000, 0.5000,  ..., 0.7448, 0.7375, 0.8062],
         [0.2508, 0.5000, 0.5000,  ..., 0.2552, 0.2625, 0.1938]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.7221, 0.7239, 0.5000,  ..., 0.7902, 0.7767, 0.7222],
         [0.2779, 0.2761, 0.5000,  ..., 0.2098, 0.2233, 0.2778]],
        [[0.6908, 0.5000, 0.7363,  ..., 0.7092, 0.5000, 0.7406],
         [0.3092, 0.5000, 0.2637,  ..., 0.2908, 0.5000, 0.2594]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:51:58,992 [Process: 0] Synchronize training processes
2024-08-18 14:51:58,992 [Process: 0] Evaluating...
2024-08-18 14:51:58,994 [Process: 0] EPOCH 11:
2024-08-18 14:51:58,996 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:00,175 [Process: 0] Synchronize training processes
2024-08-18 14:52:00,176 [Process: 0] Evaluating...
2024-08-18 14:52:00,182 [Process: 0] EPOCH 12:
2024-08-18 14:52:00,184 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.6844, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.7434],
         [0.3156, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.2566]],
        [[0.7859, 0.5000, 0.5000,  ..., 0.7837, 0.7364, 0.7614],
         [0.2141, 0.5000, 0.5000,  ..., 0.2163, 0.2636, 0.2386]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.7508, 0.7308,  ..., 0.6975, 0.7330, 0.7362],
         [0.5000, 0.2492, 0.2692,  ..., 0.3025, 0.2670, 0.2638]],
        [[0.5000, 0.5000, 0.8272,  ..., 0.7717, 0.5000, 0.7740],
         [0.5000, 0.5000, 0.1728,  ..., 0.2283, 0.5000, 0.2260]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.7322, 0.5000, 0.7449,  ..., 0.7193, 0.7066, 0.7742],
         [0.2678, 0.5000, 0.2551,  ..., 0.2807, 0.2934, 0.2258]],
        [[0.6762, 0.4848, 0.5000,  ..., 0.7298, 0.7771, 0.7273],
         [0.3238, 0.5152, 0.5000,  ..., 0.2702, 0.2229, 0.2727]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:01,362 [Process: 0] Synchronize training processes
2024-08-18 14:52:01,362 [Process: 0] Evaluating...
2024-08-18 14:52:01,364 [Process: 0] EPOCH 13:
2024-08-18 14:52:01,365 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:02,545 [Process: 0] Synchronize training processes
2024-08-18 14:52:02,545 [Process: 0] Evaluating...
2024-08-18 14:52:02,547 [Process: 0] EPOCH 14:
2024-08-18 14:52:02,549 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.7420, 0.7644,  ..., 0.7588, 0.7351, 0.7308],
         [0.5000, 0.2580, 0.2356,  ..., 0.2412, 0.2649, 0.2692]],
        [[0.5000, 0.5000, 0.7309,  ..., 0.7841, 0.5000, 0.7626],
         [0.5000, 0.5000, 0.2691,  ..., 0.2159, 0.5000, 0.2374]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.7283, 0.7192,  ..., 0.6675, 0.7203, 0.7373],
         [0.5000, 0.2717, 0.2808,  ..., 0.3325, 0.2797, 0.2627]],
        [[0.7456, 0.5000, 0.5000,  ..., 0.7436, 0.7355, 0.7153],
         [0.2544, 0.5000, 0.5000,  ..., 0.2564, 0.2645, 0.2847]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.7728, 0.7991, 0.5000,  ..., 0.7767, 0.7539, 0.8011],
         [0.2272, 0.2009, 0.5000,  ..., 0.2233, 0.2461, 0.1989]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8116, 0.7749],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1884, 0.2251]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:03,728 [Process: 0] Synchronize training processes
2024-08-18 14:52:03,729 [Process: 0] Evaluating...
2024-08-18 14:52:03,731 [Process: 0] EPOCH 15:
2024-08-18 14:52:03,732 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.7617, 0.7925,  ..., 0.7732, 0.7407, 0.7839],
         [0.5000, 0.2383, 0.2075,  ..., 0.2268, 0.2593, 0.2161]],
        [[0.8036, 0.5000, 0.5000,  ..., 0.7665, 0.7749, 0.7757],
         [0.1964, 0.5000, 0.5000,  ..., 0.2335, 0.2251, 0.2243]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.7469, 0.5000, 0.5000,  ..., 0.7992, 0.7865, 0.7983],
         [0.2531, 0.5000, 0.5000,  ..., 0.2008, 0.2135, 0.2017]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.7574, 0.7169, 0.7316],
         [0.5000, 0.5000, 0.5000,  ..., 0.2426, 0.2831, 0.2684]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.7809, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.2191, 0.5000]],
        [[0.7700, 0.7563, 0.5000,  ..., 0.7664, 0.7707, 0.8186],
         [0.2300, 0.2437, 0.5000,  ..., 0.2336, 0.2293, 0.1814]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7978, 0.7744, 0.7515],
         [0.5000, 0.5000, 0.5000,  ..., 0.2022, 0.2256, 0.2485]],
        [[0.7738, 0.7790, 0.7762,  ..., 0.8002, 0.7691, 0.7570],
         [0.2262, 0.2210, 0.2238,  ..., 0.1998, 0.2309, 0.2430]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:04,908 [Process: 0] Synchronize training processes
2024-08-18 14:52:04,908 [Process: 0] Evaluating...
2024-08-18 14:52:04,910 [Process: 0] EPOCH 16:
2024-08-18 14:52:04,912 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:06,089 [Process: 0] Synchronize training processes
2024-08-18 14:52:06,089 [Process: 0] Evaluating...
2024-08-18 14:52:06,091 [Process: 0] EPOCH 17:
2024-08-18 14:52:06,093 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.7040, 0.7430,  ..., 0.5000, 0.7682, 0.8070],
         [0.5000, 0.2960, 0.2570,  ..., 0.5000, 0.2318, 0.1930]],
        [[0.4178, 0.5000, 0.5000,  ..., 0.7792, 0.7396, 0.7702],
         [0.5822, 0.5000, 0.5000,  ..., 0.2208, 0.2604, 0.2298]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.4608, 0.5000, 0.5000,  ..., 0.7349, 0.7579, 0.7182],
         [0.5392, 0.5000, 0.5000,  ..., 0.2651, 0.2421, 0.2818]],
        [[0.7936, 0.7308, 0.7538,  ..., 0.7703, 0.7317, 0.7497],
         [0.2064, 0.2692, 0.2462,  ..., 0.2297, 0.2683, 0.2503]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.7222, 0.7788,  ..., 0.5000, 0.7465, 0.5000],
         [0.5000, 0.2778, 0.2212,  ..., 0.5000, 0.2535, 0.5000]],
        [[0.5000, 0.7236, 0.5000,  ..., 0.7790, 0.7163, 0.7942],
         [0.5000, 0.2764, 0.5000,  ..., 0.2210, 0.2837, 0.2058]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:07,270 [Process: 0] Synchronize training processes
2024-08-18 14:52:07,270 [Process: 0] Evaluating...
2024-08-18 14:52:07,272 [Process: 0] EPOCH 18:
2024-08-18 14:52:07,273 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:08,455 [Process: 0] Synchronize training processes
2024-08-18 14:52:08,455 [Process: 0] Evaluating...
2024-08-18 14:52:08,457 [Process: 0] EPOCH 19:
2024-08-18 14:52:08,459 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7668, 0.7455, 0.7569],
         [0.5000, 0.5000, 0.5000,  ..., 0.2332, 0.2545, 0.2431]],
        [[0.5000, 0.7468, 0.7540,  ..., 0.7869, 0.7367, 0.7732],
         [0.5000, 0.2532, 0.2460,  ..., 0.2131, 0.2633, 0.2268]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.7215, 0.7503,  ..., 0.5000, 0.7829, 0.5000],
         [0.5000, 0.2785, 0.2497,  ..., 0.5000, 0.2171, 0.5000]],
        [[0.5000, 0.7386, 0.5000,  ..., 0.7793, 0.7213, 0.7463],
         [0.5000, 0.2614, 0.5000,  ..., 0.2207, 0.2787, 0.2537]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7771, 0.7507, 0.7117],
         [0.5000, 0.5000, 0.5000,  ..., 0.2229, 0.2493, 0.2883]],
        [[0.5000, 0.7548, 0.7990,  ..., 0.7766, 0.7334, 0.7416],
         [0.5000, 0.2452, 0.2010,  ..., 0.2234, 0.2666, 0.2584]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.7735, 0.7615,  ..., 0.5000, 0.7340, 0.5000],
         [0.5000, 0.2265, 0.2385,  ..., 0.5000, 0.2660, 0.5000]],
        [[0.5000, 0.7661, 0.5000,  ..., 0.7326, 0.7665, 0.7741],
         [0.5000, 0.2339, 0.5000,  ..., 0.2674, 0.2335, 0.2259]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:09,634 [Process: 0] Synchronize training processes
2024-08-18 14:52:09,634 [Process: 0] Evaluating...
2024-08-18 14:52:09,636 [Process: 0] EPOCH 20:
2024-08-18 14:52:09,638 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7738, 0.7311, 0.7543],
         [0.5000, 0.5000, 0.5000,  ..., 0.2262, 0.2689, 0.2457]],
        [[0.7645, 0.5000, 0.7834,  ..., 0.7736, 0.7533, 0.7777],
         [0.2355, 0.5000, 0.2166,  ..., 0.2264, 0.2467, 0.2223]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.7416, 0.7666,  ..., 0.5000, 0.7496, 0.5000],
         [0.5000, 0.2584, 0.2334,  ..., 0.5000, 0.2504, 0.5000]],
        [[0.5000, 0.7556, 0.7754,  ..., 0.8007, 0.7635, 0.7563],
         [0.5000, 0.2444, 0.2246,  ..., 0.1993, 0.2365, 0.2437]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7507, 0.7788, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.2493, 0.2212, 0.5000]],
        [[0.7193, 0.5000, 0.7807,  ..., 0.7421, 0.7273, 0.7372],
         [0.2807, 0.5000, 0.2193,  ..., 0.2579, 0.2727, 0.2628]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:10,817 [Process: 0] Synchronize training processes
2024-08-18 14:52:10,818 [Process: 0] Evaluating...
2024-08-18 14:52:10,819 [Process: 0] EPOCH 21:
2024-08-18 14:52:10,821 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:11,998 [Process: 0] Synchronize training processes
2024-08-18 14:52:11,999 [Process: 0] Evaluating...
2024-08-18 14:52:12,005 [Process: 0] EPOCH 22:
2024-08-18 14:52:12,007 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.7670, 0.8012,  ..., 0.5000, 0.7439, 0.5000],
         [0.5000, 0.2330, 0.1988,  ..., 0.5000, 0.2561, 0.5000]],
        [[0.5000, 0.7714, 0.7541,  ..., 0.7466, 0.7624, 0.7838],
         [0.5000, 0.2286, 0.2459,  ..., 0.2534, 0.2376, 0.2162]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7599, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.2401, 0.5000, 0.5000]],
        [[0.7536, 0.7416, 0.7697,  ..., 0.7760, 0.7552, 0.7432],
         [0.2464, 0.2584, 0.2303,  ..., 0.2240, 0.2448, 0.2568]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.8022, 0.7859,  ..., 0.5000, 0.7891, 0.7968],
         [0.5000, 0.1978, 0.2141,  ..., 0.5000, 0.2109, 0.2032]],
        [[0.5000, 0.8089, 0.7906,  ..., 0.7770, 0.7986, 0.8010],
         [0.5000, 0.1911, 0.2094,  ..., 0.2230, 0.2014, 0.1990]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:13,187 [Process: 0] Synchronize training processes
2024-08-18 14:52:13,187 [Process: 0] Evaluating...
2024-08-18 14:52:13,189 [Process: 0] EPOCH 23:
2024-08-18 14:52:13,191 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:14,370 [Process: 0] Synchronize training processes
2024-08-18 14:52:14,370 [Process: 0] Evaluating...
2024-08-18 14:52:14,372 [Process: 0] EPOCH 24:
2024-08-18 14:52:14,374 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7734, 0.7542, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.2266, 0.2458, 0.5000]],
        [[0.7604, 0.7209, 0.7441,  ..., 0.7890, 0.7068, 0.7638],
         [0.2396, 0.2791, 0.2559,  ..., 0.2110, 0.2932, 0.2362]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.7792,  ..., 0.5000, 0.7715, 0.7547],
         [0.5000, 0.5000, 0.2208,  ..., 0.5000, 0.2285, 0.2453]],
        [[0.5000, 0.7498, 0.7707,  ..., 0.7650, 0.5000, 0.7974],
         [0.5000, 0.2502, 0.2293,  ..., 0.2350, 0.5000, 0.2026]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.7783, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.2217, 0.5000]],
        [[0.7607, 0.7837, 0.7675,  ..., 0.7889, 0.7729, 0.7737],
         [0.2393, 0.2163, 0.2325,  ..., 0.2111, 0.2271, 0.2263]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.7478,  ..., 0.5000, 0.7932, 0.7898],
         [0.5000, 0.5000, 0.2522,  ..., 0.5000, 0.2068, 0.2102]],
        [[0.5000, 0.7425, 0.7517,  ..., 0.7730, 0.7454, 0.8132],
         [0.5000, 0.2575, 0.2483,  ..., 0.2270, 0.2546, 0.1868]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:15,552 [Process: 0] Synchronize training processes
2024-08-18 14:52:15,552 [Process: 0] Evaluating...
2024-08-18 14:52:15,554 [Process: 0] EPOCH 25:
2024-08-18 14:52:15,556 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:16,735 [Process: 0] Synchronize training processes
2024-08-18 14:52:16,735 [Process: 0] Evaluating...
2024-08-18 14:52:16,737 [Process: 0] EPOCH 26:
2024-08-18 14:52:16,739 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.7613, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.2387, 0.5000]],
        [[0.7485, 0.7812, 0.7675,  ..., 0.7779, 0.7450, 0.7420],
         [0.2515, 0.2188, 0.2325,  ..., 0.2221, 0.2550, 0.2580]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[5.0000e-01, 5.0000e-01, 7.6443e-01,  ..., 5.0000e-01,
          8.0188e-01, 7.8453e-01],
         [5.0000e-01, 5.0000e-01, 2.3557e-01,  ..., 5.0000e-01,
          1.9812e-01, 2.1547e-01]],
        [[5.0000e-01, 7.4785e-01, 7.1115e-01,  ..., 7.9601e-01,
          6.8536e-08, 8.0148e-01],
         [5.0000e-01, 2.5215e-01, 2.8885e-01,  ..., 2.0399e-01,
          1.0000e+00, 1.9852e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.7774, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.2226, 0.5000]],
        [[0.8039, 0.7880, 0.7760,  ..., 0.8047, 0.7787, 0.7884],
         [0.1961, 0.2120, 0.2240,  ..., 0.1953, 0.2213, 0.2116]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:17,923 [Process: 0] Synchronize training processes
2024-08-18 14:52:17,923 [Process: 0] Evaluating...
2024-08-18 14:52:17,925 [Process: 0] EPOCH 27:
2024-08-18 14:52:17,927 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.7761,  ..., 0.5000, 0.7929, 0.8051],
         [0.5000, 0.5000, 0.2239,  ..., 0.5000, 0.2071, 0.1949]],
        [[0.5000, 0.7722, 0.7177,  ..., 0.8076, 0.8107, 0.8462],
         [0.5000, 0.2278, 0.2823,  ..., 0.1924, 0.1893, 0.1538]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.7908, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.2092, 0.5000]],
        [[0.7756, 0.7705, 0.8096,  ..., 0.7919, 0.7994, 0.7692],
         [0.2244, 0.2295, 0.1904,  ..., 0.2081, 0.2006, 0.2308]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.8016,  ..., 0.5000, 0.7849, 0.8033],
         [0.5000, 0.5000, 0.1984,  ..., 0.5000, 0.2151, 0.1967]],
        [[0.7868, 0.7309, 0.7770,  ..., 0.8042, 0.7893, 0.8076],
         [0.2132, 0.2691, 0.2230,  ..., 0.1958, 0.2107, 0.1924]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8182, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1818, 0.5000]],
        [[0.7791, 0.7770, 0.7829,  ..., 0.7931, 0.7929, 0.8070],
         [0.2209, 0.2230, 0.2171,  ..., 0.2069, 0.2071, 0.1930]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:19,106 [Process: 0] Synchronize training processes
2024-08-18 14:52:19,106 [Process: 0] Evaluating...
2024-08-18 14:52:19,108 [Process: 0] EPOCH 28:
2024-08-18 14:52:19,109 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:20,286 [Process: 0] Synchronize training processes
2024-08-18 14:52:20,286 [Process: 0] Evaluating...
2024-08-18 14:52:20,288 [Process: 0] EPOCH 29:
2024-08-18 14:52:20,290 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.8043,  ..., 0.5000, 0.8231, 0.8291],
         [0.5000, 0.5000, 0.1957,  ..., 0.5000, 0.1769, 0.1709]],
        [[0.7882, 0.6941, 0.7997,  ..., 0.8135, 0.8013, 0.8257],
         [0.2118, 0.3059, 0.2003,  ..., 0.1865, 0.1987, 0.1743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.8162, 0.8056, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.1838, 0.1944, 0.5000]],
        [[0.8251, 0.6841, 0.7015,  ..., 0.8034, 0.8057, 0.8054],
         [0.1749, 0.3159, 0.2985,  ..., 0.1966, 0.1943, 0.1946]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.8108,  ..., 0.5000, 0.8007, 0.7906],
         [0.5000, 0.5000, 0.1892,  ..., 0.5000, 0.1993, 0.2094]],
        [[0.7660, 0.7952, 0.7857,  ..., 0.8238, 0.8094, 0.7897],
         [0.2340, 0.2048, 0.2143,  ..., 0.1762, 0.1906, 0.2103]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:21,466 [Process: 0] Synchronize training processes
2024-08-18 14:52:21,467 [Process: 0] Evaluating...
2024-08-18 14:52:21,468 [Process: 0] EPOCH 30:
2024-08-18 14:52:21,470 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:22,645 [Process: 0] Synchronize training processes
2024-08-18 14:52:22,646 [Process: 0] Evaluating...
2024-08-18 14:52:22,647 [Process: 0] EPOCH 31:
2024-08-18 14:52:22,649 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8039, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1961, 0.5000]],
        [[0.8460, 0.7910, 0.8102,  ..., 0.8173, 0.7989, 0.8034],
         [0.1540, 0.2090, 0.1898,  ..., 0.1827, 0.2011, 0.1966]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8094, 0.7984],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1906, 0.2016]],
        [[0.7803, 0.8039, 0.7796,  ..., 0.8020, 0.7982, 0.7973],
         [0.2197, 0.1961, 0.2204,  ..., 0.1980, 0.2018, 0.2027]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8420, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1580, 0.5000]],
        [[0.7752, 0.8202, 0.8018,  ..., 0.8202, 0.8116, 0.7917],
         [0.2248, 0.1798, 0.1982,  ..., 0.1798, 0.1884, 0.2083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:23,823 [Process: 0] Synchronize training processes
2024-08-18 14:52:23,823 [Process: 0] Evaluating...
2024-08-18 14:52:23,829 [Process: 0] EPOCH 32:
2024-08-18 14:52:23,831 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.7985, 0.8037],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.2015, 0.1963]],
        [[0.7729, 0.7692, 0.7873,  ..., 0.8077, 0.7903, 0.7970],
         [0.2271, 0.2308, 0.2127,  ..., 0.1923, 0.2097, 0.2030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8149, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1851, 0.5000]],
        [[0.8561, 0.8061, 0.7827,  ..., 0.7996, 0.8172, 0.8385],
         [0.1439, 0.1939, 0.2173,  ..., 0.2004, 0.1828, 0.1615]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.7812, 0.7806],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.2188, 0.2194]],
        [[0.7502, 0.7700, 0.7786,  ..., 0.8003, 0.7839, 0.7858],
         [0.2498, 0.2300, 0.2214,  ..., 0.1997, 0.2161, 0.2142]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8268, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1732, 0.5000]],
        [[0.8412, 0.8151, 0.8058,  ..., 0.8158, 0.8147, 0.8104],
         [0.1588, 0.1849, 0.1942,  ..., 0.1842, 0.1853, 0.1896]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:25,044 [Process: 0] Synchronize training processes
2024-08-18 14:52:25,044 [Process: 0] Evaluating...
2024-08-18 14:52:25,046 [Process: 0] EPOCH 33:
2024-08-18 14:52:25,048 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:26,224 [Process: 0] Synchronize training processes
2024-08-18 14:52:26,225 [Process: 0] Evaluating...
2024-08-18 14:52:26,226 [Process: 0] EPOCH 34:
2024-08-18 14:52:26,228 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8063, 0.7897],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1937, 0.2103]],
        [[0.7737, 0.7726, 0.7845,  ..., 0.8083, 0.7754, 0.7990],
         [0.2263, 0.2274, 0.2155,  ..., 0.1917, 0.2246, 0.2010]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.7820, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.2180, 0.5000]],
        [[0.8206, 0.8039, 0.8103,  ..., 0.8384, 0.8146, 0.8052],
         [0.1794, 0.1961, 0.1897,  ..., 0.1616, 0.1854, 0.1948]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.4767,  ..., 0.5000, 0.7850, 0.7871],
         [0.5000, 0.5000, 0.5233,  ..., 0.5000, 0.2150, 0.2129]],
        [[0.7777, 0.7722, 0.7871,  ..., 0.5000, 0.7835, 0.8071],
         [0.2223, 0.2278, 0.2129,  ..., 0.5000, 0.2165, 0.1929]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:27,406 [Process: 0] Synchronize training processes
2024-08-18 14:52:27,406 [Process: 0] Evaluating...
2024-08-18 14:52:27,408 [Process: 0] EPOCH 35:
2024-08-18 14:52:27,410 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:28,587 [Process: 0] Synchronize training processes
2024-08-18 14:52:28,587 [Process: 0] Evaluating...
2024-08-18 14:52:28,589 [Process: 0] EPOCH 36:
2024-08-18 14:52:28,591 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8302, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1698, 0.5000]],
        [[0.8105, 0.8140, 0.8102,  ..., 0.8323, 0.8120, 0.8091],
         [0.1895, 0.1860, 0.1898,  ..., 0.1677, 0.1880, 0.1909]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.7850, 0.7803],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.2150, 0.2197]],
        [[0.7920, 0.7674, 0.7892,  ..., 0.5000, 0.7787, 0.8103],
         [0.2080, 0.2326, 0.2108,  ..., 0.5000, 0.2213, 0.1897]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8265, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1735, 0.5000]],
        [[0.8134, 0.8266, 0.8225,  ..., 0.8518, 0.8027, 0.8188],
         [0.1866, 0.1734, 0.1775,  ..., 0.1482, 0.1973, 0.1812]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
2024-08-18 14:52:29,768 [Process: 0] Synchronize training processes
2024-08-18 14:52:29,769 [Process: 0] Evaluating...
2024-08-18 14:52:29,770 [Process: 0] EPOCH 37:
2024-08-18 14:52:29,772 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.7925, 0.5000, 0.5000,  ..., 0.5000, 0.8052, 0.8084],
         [0.2075, 0.5000, 0.5000,  ..., 0.5000, 0.1948, 0.1916]],
        [[0.7831, 0.7755, 0.8087,  ..., 0.5000, 0.8028, 0.8051],
         [0.2169, 0.2245, 0.1913,  ..., 0.5000, 0.1972, 0.1949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8264, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1736, 0.5000]],
        [[0.8200, 0.8241, 0.8307,  ..., 0.8373, 0.8265, 0.8288],
         [0.1800, 0.1759, 0.1693,  ..., 0.1627, 0.1735, 0.1712]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8009, 0.5000, 0.4107,  ..., 0.5000, 0.8080, 0.8206],
         [0.1991, 0.5000, 0.5893,  ..., 0.5000, 0.1920, 0.1794]],
        [[0.7915, 0.8075, 0.7985,  ..., 0.5000, 0.7886, 0.8131],
         [0.2085, 0.1925, 0.2015,  ..., 0.5000, 0.2114, 0.1869]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8373, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1627, 0.5000]],
        [[0.8353, 0.8136, 0.8310,  ..., 0.8306, 0.8299, 0.8444],
         [0.1647, 0.1864, 0.1690,  ..., 0.1694, 0.1701, 0.1556]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:30,946 [Process: 0] Synchronize training processes
2024-08-18 14:52:30,946 [Process: 0] Evaluating...
2024-08-18 14:52:30,948 [Process: 0] EPOCH 38:
2024-08-18 14:52:30,949 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:32,125 [Process: 0] Synchronize training processes
2024-08-18 14:52:32,125 [Process: 0] Evaluating...
2024-08-18 14:52:32,127 [Process: 0] EPOCH 39:
2024-08-18 14:52:32,129 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8068, 0.5000, 0.7875,  ..., 0.5000, 0.8113, 0.8160],
         [0.1932, 0.5000, 0.2125,  ..., 0.5000, 0.1887, 0.1840]],
        [[0.8019, 0.7898, 0.8058,  ..., 0.5000, 0.8038, 0.8351],
         [0.1981, 0.2102, 0.1942,  ..., 0.5000, 0.1962, 0.1649]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8415, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1585, 0.5000]],
        [[0.8426, 0.8518, 0.8355,  ..., 0.8451, 0.8467, 0.8382],
         [0.1574, 0.1482, 0.1645,  ..., 0.1549, 0.1533, 0.1618]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8200, 0.8042, 0.8057,  ..., 0.5000, 0.8279, 0.8274],
         [0.1800, 0.1958, 0.1943,  ..., 0.5000, 0.1721, 0.1726]],
        [[0.7988, 0.8013, 0.5000,  ..., 0.5000, 0.7987, 0.8385],
         [0.2012, 0.1987, 0.5000,  ..., 0.5000, 0.2013, 0.1615]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:33,304 [Process: 0] Synchronize training processes
2024-08-18 14:52:33,304 [Process: 0] Evaluating...
2024-08-18 14:52:33,306 [Process: 0] EPOCH 40:
2024-08-18 14:52:33,308 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:34,482 [Process: 0] Synchronize training processes
2024-08-18 14:52:34,483 [Process: 0] Evaluating...
2024-08-18 14:52:34,484 [Process: 0] EPOCH 41:
2024-08-18 14:52:34,486 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8258, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1742, 0.5000]],
        [[0.8268, 0.8332, 0.8304,  ..., 0.8529, 0.8367, 0.8319],
         [0.1732, 0.1668, 0.1696,  ..., 0.1471, 0.1633, 0.1681]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8309, 0.8146, 0.8111,  ..., 0.5000, 0.8267, 0.8347],
         [0.1691, 0.1854, 0.1889,  ..., 0.5000, 0.1733, 0.1653]],
        [[0.8123, 0.5000, 0.8275,  ..., 0.5000, 0.8076, 0.8240],
         [0.1877, 0.5000, 0.1725,  ..., 0.5000, 0.1924, 0.1760]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8293, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1707, 0.5000]],
        [[0.8381, 0.8285, 0.8247,  ..., 0.8507, 0.8341, 0.8340],
         [0.1619, 0.1715, 0.1753,  ..., 0.1493, 0.1659, 0.1660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8428, 0.8238, 0.8261,  ..., 0.5000, 0.8392, 0.8383],
         [0.1572, 0.1762, 0.1739,  ..., 0.5000, 0.1608, 0.1617]],
        [[0.8165, 0.5000, 0.5000,  ..., 0.5000, 0.8348, 0.8329],
         [0.1835, 0.5000, 0.5000,  ..., 0.5000, 0.1652, 0.1671]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:35,663 [Process: 0] Synchronize training processes
2024-08-18 14:52:35,664 [Process: 0] Evaluating...
2024-08-18 14:52:35,670 [Process: 0] EPOCH 42:
2024-08-18 14:52:35,672 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8509, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1491, 0.5000]],
        [[0.8484, 0.8401, 0.8499,  ..., 0.8520, 0.8458, 0.8483],
         [0.1516, 0.1599, 0.1501,  ..., 0.1480, 0.1542, 0.1517]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8431, 0.8329, 0.8290,  ..., 0.5000, 0.8519, 0.8464],
         [0.1569, 0.1671, 0.1710,  ..., 0.5000, 0.1481, 0.1536]],
        [[0.8243, 0.5000, 0.5000,  ..., 0.5000, 0.8350, 0.8290],
         [0.1757, 0.5000, 0.5000,  ..., 0.5000, 0.1650, 0.1710]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000]],
        [[0.8537, 0.8542, 0.5000,  ..., 0.8507, 0.8424, 0.8547],
         [0.1463, 0.1458, 0.5000,  ..., 0.1493, 0.1576, 0.1453]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:36,847 [Process: 0] Synchronize training processes
2024-08-18 14:52:36,847 [Process: 0] Evaluating...
2024-08-18 14:52:36,849 [Process: 0] EPOCH 43:
2024-08-18 14:52:36,851 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:38,028 [Process: 0] Synchronize training processes
2024-08-18 14:52:38,028 [Process: 0] Evaluating...
2024-08-18 14:52:38,030 [Process: 0] EPOCH 44:
2024-08-18 14:52:38,032 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8318, 0.8250, 0.8320,  ..., 0.5000, 0.8358, 0.8521],
         [0.1682, 0.1750, 0.1680,  ..., 0.5000, 0.1642, 0.1479]],
        [[0.8150, 0.5000, 0.8381,  ..., 0.5000, 0.8273, 0.8314],
         [0.1850, 0.5000, 0.1619,  ..., 0.5000, 0.1727, 0.1686]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5000]],
        [[0.8597, 0.8625, 0.8412,  ..., 0.8585, 0.8596, 0.8728],
         [0.1403, 0.1375, 0.1588,  ..., 0.1415, 0.1404, 0.1272]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8311, 0.8106, 0.5000,  ..., 0.5000, 0.8378, 0.8364],
         [0.1689, 0.1894, 0.5000,  ..., 0.5000, 0.1622, 0.1636]],
        [[0.8114, 0.5000, 0.8147,  ..., 0.5000, 0.8197, 0.8390],
         [0.1886, 0.5000, 0.1853,  ..., 0.5000, 0.1803, 0.1610]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
2024-08-18 14:52:39,206 [Process: 0] Synchronize training processes
2024-08-18 14:52:39,207 [Process: 0] Evaluating...
2024-08-18 14:52:39,208 [Process: 0] EPOCH 45:
2024-08-18 14:52:39,210 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:40,385 [Process: 0] Synchronize training processes
2024-08-18 14:52:40,385 [Process: 0] Evaluating...
2024-08-18 14:52:40,387 [Process: 0] EPOCH 46:
2024-08-18 14:52:40,389 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.6311, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.3689, 0.5000, 0.5000]],
        [[0.8513, 0.8650, 0.8529,  ..., 0.8565, 0.8399, 0.8592],
         [0.1487, 0.1350, 0.1471,  ..., 0.1435, 0.1601, 0.1408]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8111, 0.8308, 0.5000,  ..., 0.5000, 0.8397, 0.8040],
         [0.1889, 0.1692, 0.5000,  ..., 0.5000, 0.1603, 0.1960]],
        [[0.8379, 0.5000, 0.8334,  ..., 0.8328, 0.8296, 0.8345],
         [0.1621, 0.5000, 0.1666,  ..., 0.1672, 0.1704, 0.1655]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.8646, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.1354, 0.5000, 0.5000]],
        [[0.8412, 0.8429, 0.8457,  ..., 0.8525, 0.8315, 0.8498],
         [0.1588, 0.1571, 0.1543,  ..., 0.1475, 0.1685, 0.1502]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8355, 0.8242, 0.5000,  ..., 0.5000, 0.8387, 0.8388],
         [0.1645, 0.1758, 0.5000,  ..., 0.5000, 0.1613, 0.1612]],
        [[0.8445, 0.5000, 0.8171,  ..., 0.8198, 0.8268, 0.8252],
         [0.1555, 0.5000, 0.1829,  ..., 0.1802, 0.1732, 0.1748]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:41,565 [Process: 0] Synchronize training processes
2024-08-18 14:52:41,565 [Process: 0] Evaluating...
2024-08-18 14:52:41,567 [Process: 0] EPOCH 47:
2024-08-18 14:52:41,569 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:42,744 [Process: 0] Synchronize training processes
2024-08-18 14:52:42,744 [Process: 0] Evaluating...
2024-08-18 14:52:42,746 [Process: 0] EPOCH 48:
2024-08-18 14:52:42,748 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.8495, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.1505, 0.5000, 0.5000]],
        [[0.8420, 0.8347, 0.8500,  ..., 0.8456, 0.8385, 0.8600],
         [0.1580, 0.1653, 0.1500,  ..., 0.1544, 0.1615, 0.1400]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8463, 0.8475, 0.5000,  ..., 0.5000, 0.8468, 0.8402],
         [0.1537, 0.1525, 0.5000,  ..., 0.5000, 0.1532, 0.1598]],
        [[0.8432, 0.5000, 0.8470,  ..., 0.8176, 0.8380, 0.8359],
         [0.1568, 0.5000, 0.1530,  ..., 0.1824, 0.1620, 0.1641]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.8343, 0.8368, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.1657, 0.1632, 0.5000]],
        [[0.8419, 0.8397, 0.8424,  ..., 0.8507, 0.8259, 0.8416],
         [0.1581, 0.1603, 0.1576,  ..., 0.1493, 0.1741, 0.1584]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:43,930 [Process: 0] Synchronize training processes
2024-08-18 14:52:43,930 [Process: 0] Evaluating...
2024-08-18 14:52:43,932 [Process: 0] EPOCH 49:
2024-08-18 14:52:43,934 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8703, 0.8649, 0.8640,  ..., 0.8623, 0.5000, 0.8726],
         [0.1297, 0.1351, 0.1360,  ..., 0.1377, 0.5000, 0.1274]],
        [[0.8688, 0.4961, 0.8597,  ..., 0.8591, 0.8637, 0.8561],
         [0.1312, 0.5039, 0.1403,  ..., 0.1409, 0.1363, 0.1439]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.8588, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.1412, 0.5000, 0.5000]],
        [[0.8488, 0.8566, 0.8584,  ..., 0.8702, 0.8526, 0.8618],
         [0.1512, 0.1434, 0.1416,  ..., 0.1298, 0.1474, 0.1382]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8295, 0.8045, 0.8316,  ..., 0.8200, 0.8331, 0.8184],
         [0.1705, 0.1955, 0.1684,  ..., 0.1800, 0.1669, 0.1816]],
        [[0.8087, 0.5000, 0.8264,  ..., 0.8206, 0.8227, 0.8214],
         [0.1913, 0.5000, 0.1736,  ..., 0.1794, 0.1773, 0.1786]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.8636, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.1364, 0.5000, 0.5000]],
        [[0.8537, 0.8623, 0.8610,  ..., 0.8609, 0.8583, 0.8598],
         [0.1463, 0.1377, 0.1390,  ..., 0.1391, 0.1417, 0.1402]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:45,107 [Process: 0] Synchronize training processes
2024-08-18 14:52:45,107 [Process: 0] Evaluating...
2024-08-18 14:52:45,109 [Process: 0] EPOCH 50:
2024-08-18 14:52:45,111 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:46,285 [Process: 0] Synchronize training processes
2024-08-18 14:52:46,286 [Process: 0] Evaluating...
2024-08-18 14:52:46,287 [Process: 0] EPOCH 51:
2024-08-18 14:52:46,289 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8197, 0.8281, 0.8242,  ..., 0.8179, 0.8307, 0.8143],
         [0.1803, 0.1719, 0.1758,  ..., 0.1821, 0.1693, 0.1857]],
        [[0.8279, 0.5000, 0.8270,  ..., 0.8288, 0.8128, 0.8176],
         [0.1721, 0.5000, 0.1730,  ..., 0.1712, 0.1872, 0.1824]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.8626, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.1374, 0.5000, 0.5000]],
        [[0.8611, 0.8645, 0.8699,  ..., 0.8671, 0.8633, 0.8659],
         [0.1389, 0.1355, 0.1301,  ..., 0.1329, 0.1367, 0.1341]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.7666, 0.7832, 0.7768,  ..., 0.7662, 0.8401, 0.8276],
         [0.2334, 0.2168, 0.2232,  ..., 0.2338, 0.1599, 0.1724]],
        [[0.8344, 0.5000, 0.8330,  ..., 0.8253, 0.8218, 0.8415],
         [0.1656, 0.5000, 0.1670,  ..., 0.1747, 0.1782, 0.1585]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:47,464 [Process: 0] Synchronize training processes
2024-08-18 14:52:47,465 [Process: 0] Evaluating...
2024-08-18 14:52:47,470 [Process: 0] EPOCH 52:
2024-08-18 14:52:47,472 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:48,650 [Process: 0] Synchronize training processes
2024-08-18 14:52:48,650 [Process: 0] Evaluating...
2024-08-18 14:52:48,652 [Process: 0] EPOCH 53:
2024-08-18 14:52:48,654 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.8617, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.1383, 0.5000, 0.5000]],
        [[0.8673, 0.8630, 0.8610,  ..., 0.8688, 0.8654, 0.8672],
         [0.1327, 0.1370, 0.1390,  ..., 0.1312, 0.1346, 0.1328]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.6614, 0.6306, 0.7178,  ..., 0.6518, 0.8424, 0.8423],
         [0.3386, 0.3694, 0.2822,  ..., 0.3482, 0.1576, 0.1577]],
        [[0.8295, 0.5000, 0.8390,  ..., 0.8380, 0.8456, 0.8506],
         [0.1705, 0.5000, 0.1610,  ..., 0.1620, 0.1544, 0.1494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.8678, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.1322, 0.5000, 0.5000]],
        [[0.8667, 0.8662, 0.8653,  ..., 0.8715, 0.8574, 0.8750],
         [0.1333, 0.1338, 0.1347,  ..., 0.1285, 0.1426, 0.1250]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8053, 0.7718, 0.7977,  ..., 0.7831, 0.8415, 0.8428],
         [0.1947, 0.2282, 0.2023,  ..., 0.2169, 0.1585, 0.1572]],
        [[0.8433, 0.5000, 0.8447,  ..., 0.8390, 0.8379, 0.8451],
         [0.1567, 0.5000, 0.1553,  ..., 0.1610, 0.1621, 0.1549]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:49,828 [Process: 0] Synchronize training processes
2024-08-18 14:52:49,828 [Process: 0] Evaluating...
2024-08-18 14:52:49,830 [Process: 0] EPOCH 54:
2024-08-18 14:52:49,832 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.8657,  ..., 0.8699, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.1343,  ..., 0.1301, 0.5000, 0.5000]],
        [[0.8572, 0.8655, 0.8626,  ..., 0.8659, 0.8664, 0.8721],
         [0.1428, 0.1345, 0.1374,  ..., 0.1341, 0.1336, 0.1279]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8466, 0.7483, 0.8206,  ..., 0.8108, 0.8394, 0.8395],
         [0.1534, 0.2517, 0.1794,  ..., 0.1892, 0.1606, 0.1605]],
        [[0.8411, 0.5000, 0.8475,  ..., 0.8504, 0.8412, 0.8456],
         [0.1589, 0.5000, 0.1525,  ..., 0.1496, 0.1588, 0.1544]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.8647,  ..., 0.8686, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.1353,  ..., 0.1314, 0.5000, 0.5000]],
        [[0.8556, 0.8711, 0.8678,  ..., 0.8764, 0.8616, 0.8759],
         [0.1444, 0.1289, 0.1322,  ..., 0.1236, 0.1384, 0.1241]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:51,006 [Process: 0] Synchronize training processes
2024-08-18 14:52:51,007 [Process: 0] Evaluating...
2024-08-18 14:52:51,010 [Process: 0] EPOCH 55:
2024-08-18 14:52:51,013 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:52,189 [Process: 0] Synchronize training processes
2024-08-18 14:52:52,189 [Process: 0] Evaluating...
2024-08-18 14:52:52,191 [Process: 0] EPOCH 56:
2024-08-18 14:52:52,192 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8367, 0.8088, 0.8423,  ..., 0.8212, 0.8480, 0.8509],
         [0.1633, 0.1912, 0.1577,  ..., 0.1788, 0.1520, 0.1491]],
        [[0.8505, 0.5000, 0.8463,  ..., 0.8507, 0.8545, 0.8551],
         [0.1495, 0.5000, 0.1537,  ..., 0.1493, 0.1455, 0.1449]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.8797,  ..., 0.8789, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.1203,  ..., 0.1211, 0.5000, 0.5000]],
        [[0.8705, 0.8772, 0.8741,  ..., 0.8789, 0.8651, 0.8867],
         [0.1295, 0.1228, 0.1259,  ..., 0.1211, 0.1349, 0.1133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8424, 0.8519, 0.8505,  ..., 0.8571, 0.8511, 0.8479],
         [0.1576, 0.1481, 0.1495,  ..., 0.1429, 0.1489, 0.1521]],
        [[0.8506, 0.5000, 0.8462,  ..., 0.8505, 0.8519, 0.8510],
         [0.1494, 0.5000, 0.1538,  ..., 0.1495, 0.1481, 0.1490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
2024-08-18 14:52:53,371 [Process: 0] Synchronize training processes
2024-08-18 14:52:53,371 [Process: 0] Evaluating...
2024-08-18 14:52:53,373 [Process: 0] EPOCH 57:
2024-08-18 14:52:53,374 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.8677,  ..., 0.8664, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.1323,  ..., 0.1336, 0.5000, 0.5000]],
        [[0.8663, 0.8642, 0.8699,  ..., 0.8761, 0.8512, 0.8643],
         [0.1337, 0.1358, 0.1301,  ..., 0.1239, 0.1488, 0.1357]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8642, 0.5000, 0.5000,  ..., 0.5000, 0.8565, 0.8670],
         [0.1358, 0.5000, 0.5000,  ..., 0.5000, 0.1435, 0.1330]],
        [[0.8570, 0.5000, 0.8626,  ..., 0.8614, 0.8659, 0.8548],
         [0.1430, 0.5000, 0.1374,  ..., 0.1386, 0.1341, 0.1452]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.8868,  ..., 0.8769, 0.8797, 0.5000],
         [0.5000, 0.5000, 0.1132,  ..., 0.1231, 0.1203, 0.5000]],
        [[0.8278, 0.8757, 0.8740,  ..., 0.8844, 0.8541, 0.8759],
         [0.1722, 0.1243, 0.1260,  ..., 0.1156, 0.1459, 0.1241]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8688, 0.5000, 0.6828,  ..., 0.5253, 0.8598, 0.8640],
         [0.1312, 0.5000, 0.3172,  ..., 0.4747, 0.1402, 0.1360]],
        [[0.8458, 0.5000, 0.8667,  ..., 0.8589, 0.8706, 0.8728],
         [0.1542, 0.5000, 0.1333,  ..., 0.1411, 0.1294, 0.1272]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:54,550 [Process: 0] Synchronize training processes
2024-08-18 14:52:54,550 [Process: 0] Evaluating...
2024-08-18 14:52:54,552 [Process: 0] EPOCH 58:
2024-08-18 14:52:54,553 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:55,730 [Process: 0] Synchronize training processes
2024-08-18 14:52:55,730 [Process: 0] Evaluating...
2024-08-18 14:52:55,732 [Process: 0] EPOCH 59:
2024-08-18 14:52:55,734 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.8816,  ..., 0.8798, 0.8764, 0.5000],
         [0.5000, 0.5000, 0.1184,  ..., 0.1202, 0.1236, 0.5000]],
        [[0.8742, 0.8798, 0.8647,  ..., 0.8725, 0.8331, 0.8719],
         [0.1258, 0.1202, 0.1353,  ..., 0.1275, 0.1669, 0.1281]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8657, 0.6538, 0.8643,  ..., 0.8461, 0.8570, 0.8653],
         [0.1343, 0.3462, 0.1357,  ..., 0.1539, 0.1430, 0.1347]],
        [[0.8636, 0.5000, 0.8679,  ..., 0.8618, 0.8573, 0.8658],
         [0.1364, 0.5000, 0.1321,  ..., 0.1382, 0.1427, 0.1342]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.8758,  ..., 0.8696, 0.8750, 0.5000],
         [0.5000, 0.5000, 0.1242,  ..., 0.1304, 0.1250, 0.5000]],
        [[0.8462, 0.8713, 0.8708,  ..., 0.8712, 0.8680, 0.8784],
         [0.1538, 0.1287, 0.1292,  ..., 0.1288, 0.1320, 0.1216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:56,907 [Process: 0] Synchronize training processes
2024-08-18 14:52:56,908 [Process: 0] Evaluating...
2024-08-18 14:52:56,909 [Process: 0] EPOCH 60:
2024-08-18 14:52:56,911 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:52:58,085 [Process: 0] Synchronize training processes
2024-08-18 14:52:58,085 [Process: 0] Evaluating...
2024-08-18 14:52:58,087 [Process: 0] EPOCH 61:
2024-08-18 14:52:58,089 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8688, 0.5000, 0.8626,  ..., 0.8629, 0.8670, 0.8608],
         [0.1312, 0.5000, 0.1374,  ..., 0.1371, 0.1330, 0.1392]],
        [[0.8735, 0.5000, 0.8732,  ..., 0.8743, 0.8666, 0.8703],
         [0.1265, 0.5000, 0.1268,  ..., 0.1257, 0.1334, 0.1297]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8640, 0.5000, 0.8751,  ..., 0.8714, 0.8757, 0.5000],
         [0.1360, 0.5000, 0.1249,  ..., 0.1286, 0.1243, 0.5000]],
        [[0.8649, 0.8771, 0.8700,  ..., 0.8718, 0.8611, 0.8745],
         [0.1351, 0.1229, 0.1300,  ..., 0.1282, 0.1389, 0.1255]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8623, 0.5000, 0.8737,  ..., 0.8672, 0.8672, 0.8691],
         [0.1377, 0.5000, 0.1263,  ..., 0.1328, 0.1328, 0.1309]],
        [[0.8673, 0.5000, 0.8745,  ..., 0.8687, 0.8683, 0.8722],
         [0.1327, 0.5000, 0.1255,  ..., 0.1313, 0.1317, 0.1278]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8723, 0.5000, 0.8741,  ..., 0.8743, 0.8712, 0.5000],
         [0.1277, 0.5000, 0.1259,  ..., 0.1257, 0.1288, 0.5000]],
        [[0.8737, 0.8782, 0.8717,  ..., 0.8710, 0.8706, 0.8754],
         [0.1263, 0.1218, 0.1283,  ..., 0.1290, 0.1294, 0.1246]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:52:59,267 [Process: 0] Synchronize training processes
2024-08-18 14:52:59,267 [Process: 0] Evaluating...
2024-08-18 14:52:59,273 [Process: 0] EPOCH 62:
2024-08-18 14:52:59,275 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8715, 0.5000, 0.8693,  ..., 0.8283, 0.8736, 0.8621],
         [0.1285, 0.5000, 0.1307,  ..., 0.1717, 0.1264, 0.1379]],
        [[0.8719, 0.5000, 0.8696,  ..., 0.8784, 0.8745, 0.8708],
         [0.1281, 0.5000, 0.1304,  ..., 0.1216, 0.1255, 0.1292]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.8774,  ..., 0.8827, 0.8786, 0.5000],
         [0.5000, 0.5000, 0.1226,  ..., 0.1173, 0.1214, 0.5000]],
        [[0.8718, 0.8776, 0.8775,  ..., 0.8766, 0.8746, 0.8745],
         [0.1282, 0.1224, 0.1225,  ..., 0.1234, 0.1254, 0.1255]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8772, 0.5000, 0.8777,  ..., 0.7944, 0.8792, 0.8663],
         [0.1228, 0.5000, 0.1223,  ..., 0.2056, 0.1208, 0.1337]],
        [[0.8783, 0.5000, 0.8783,  ..., 0.8788, 0.8787, 0.8762],
         [0.1217, 0.5000, 0.1217,  ..., 0.1212, 0.1213, 0.1238]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:00,451 [Process: 0] Synchronize training processes
2024-08-18 14:53:00,451 [Process: 0] Evaluating...
2024-08-18 14:53:00,453 [Process: 0] EPOCH 63:
2024-08-18 14:53:00,455 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:01,629 [Process: 0] Synchronize training processes
2024-08-18 14:53:01,629 [Process: 0] Evaluating...
2024-08-18 14:53:01,631 [Process: 0] EPOCH 64:
2024-08-18 14:53:01,633 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.8776,  ..., 0.8816, 0.8788, 0.5000],
         [0.5000, 0.5000, 0.1224,  ..., 0.1184, 0.1212, 0.5000]],
        [[0.8752, 0.8833, 0.8766,  ..., 0.8777, 0.8775, 0.8754],
         [0.1248, 0.1167, 0.1234,  ..., 0.1223, 0.1225, 0.1246]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8652, 0.5000, 0.8663,  ..., 0.8747, 0.8678, 0.8670],
         [0.1348, 0.5000, 0.1337,  ..., 0.1253, 0.1322, 0.1330]],
        [[0.8707, 0.5000, 0.8661,  ..., 0.8690, 0.8717, 0.8679],
         [0.1293, 0.5000, 0.1339,  ..., 0.1310, 0.1283, 0.1321]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.8822,  ..., 0.8803, 0.8790, 0.5000],
         [0.5000, 0.5000, 0.1178,  ..., 0.1197, 0.1210, 0.5000]],
        [[0.8794, 0.8805, 0.8781,  ..., 0.8827, 0.8828, 0.8804],
         [0.1206, 0.1195, 0.1219,  ..., 0.1173, 0.1172, 0.1196]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
2024-08-18 14:53:02,810 [Process: 0] Synchronize training processes
2024-08-18 14:53:02,810 [Process: 0] Evaluating...
2024-08-18 14:53:02,812 [Process: 0] EPOCH 65:
2024-08-18 14:53:02,814 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:03,989 [Process: 0] Synchronize training processes
2024-08-18 14:53:03,990 [Process: 0] Evaluating...
2024-08-18 14:53:03,991 [Process: 0] EPOCH 66:
2024-08-18 14:53:03,993 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8660, 0.5000, 0.8658,  ..., 0.8631, 0.8668, 0.8675],
         [0.1340, 0.5000, 0.1342,  ..., 0.1369, 0.1332, 0.1325]],
        [[0.8652, 0.5000, 0.8666,  ..., 0.8665, 0.8655, 0.8622],
         [0.1348, 0.5000, 0.1334,  ..., 0.1335, 0.1345, 0.1378]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.8807,  ..., 0.8843, 0.8831, 0.5000],
         [0.5000, 0.5000, 0.1193,  ..., 0.1157, 0.1169, 0.5000]],
        [[0.8743, 0.8834, 0.8810,  ..., 0.8790, 0.8774, 0.8762],
         [0.1257, 0.1166, 0.1190,  ..., 0.1210, 0.1226, 0.1238]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8682, 0.5000, 0.8677,  ..., 0.8673, 0.8680, 0.8723],
         [0.1318, 0.5000, 0.1323,  ..., 0.1327, 0.1320, 0.1277]],
        [[0.8682, 0.8693, 0.8674,  ..., 0.8651, 0.8730, 0.8667],
         [0.1318, 0.1307, 0.1326,  ..., 0.1349, 0.1270, 0.1333]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.5000, 0.5000, 0.8821,  ..., 0.8867, 0.8849, 0.5000],
         [0.5000, 0.5000, 0.1179,  ..., 0.1133, 0.1151, 0.5000]],
        [[0.8758, 0.8850, 0.8814,  ..., 0.8871, 0.8774, 0.8806],
         [0.1242, 0.1150, 0.1186,  ..., 0.1129, 0.1226, 0.1194]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:05,170 [Process: 0] Synchronize training processes
2024-08-18 14:53:05,170 [Process: 0] Evaluating...
2024-08-18 14:53:05,172 [Process: 0] EPOCH 67:
2024-08-18 14:53:05,174 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:06,350 [Process: 0] Synchronize training processes
2024-08-18 14:53:06,350 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8775, 0.5000, 0.8718,  ..., 0.8768, 0.8778, 0.8757],
         [0.1225, 0.5000, 0.1282,  ..., 0.1232, 0.1222, 0.1243]],
        [[0.8744, 0.5000, 0.8751,  ..., 0.8810, 0.8769, 0.8787],
         [0.1256, 0.5000, 0.1249,  ..., 0.1190, 0.1231, 0.1213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8890, 0.5000, 0.8869,  ..., 0.8810, 0.8862, 0.5000],
         [0.1110, 0.5000, 0.1131,  ..., 0.1190, 0.1138, 0.5000]],
        [[0.8672, 0.8817, 0.8865,  ..., 0.8889, 0.8795, 0.8838],
         [0.1328, 0.1183, 0.1135,  ..., 0.1111, 0.1205, 0.1162]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8790, 0.5000, 0.8795,  ..., 0.8825, 0.8811, 0.8768],
         [0.1210, 0.5000, 0.1205,  ..., 0.1175, 0.1189, 0.1232]],
        [[0.8842, 0.5000, 0.8818,  ..., 0.8795, 0.8758, 0.8829],
         [0.1158, 0.5000, 0.1182,  ..., 0.1205, 0.1242, 0.1171]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:06,352 [Process: 0] EPOCH 68:
2024-08-18 14:53:06,354 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:07,531 [Process: 0] Synchronize training processes
2024-08-18 14:53:07,531 [Process: 0] Evaluating...
2024-08-18 14:53:07,533 [Process: 0] EPOCH 69:
2024-08-18 14:53:07,534 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8837, 0.5000, 0.8862,  ..., 0.8816, 0.8821, 0.5000],
         [0.1163, 0.5000, 0.1138,  ..., 0.1184, 0.1179, 0.5000]],
        [[0.8736, 0.8842, 0.8827,  ..., 0.8844, 0.8811, 0.8848],
         [0.1264, 0.1158, 0.1173,  ..., 0.1156, 0.1189, 0.1152]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8832, 0.5000, 0.8870,  ..., 0.8828, 0.8798, 0.8874],
         [0.1168, 0.5000, 0.1130,  ..., 0.1172, 0.1202, 0.1126]],
        [[0.8839, 0.5000, 0.8892,  ..., 0.8869, 0.8831, 0.8820],
         [0.1161, 0.5000, 0.1108,  ..., 0.1131, 0.1169, 0.1180]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8775, 0.5000, 0.8855,  ..., 0.8823, 0.8801, 0.5000],
         [0.1225, 0.5000, 0.1145,  ..., 0.1177, 0.1199, 0.5000]],
        [[0.8737, 0.8800, 0.8776,  ..., 0.8812, 0.8781, 0.8785],
         [0.1263, 0.1200, 0.1224,  ..., 0.1188, 0.1219, 0.1215]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8889, 0.5000, 0.8861,  ..., 0.8896, 0.8801, 0.8803],
         [0.1111, 0.5000, 0.1139,  ..., 0.1104, 0.1199, 0.1197]],
        [[0.8874, 0.5000, 0.8846,  ..., 0.8862, 0.8834, 0.8807],
         [0.1126, 0.5000, 0.1154,  ..., 0.1138, 0.1166, 0.1193]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:08,712 [Process: 0] Synchronize training processes
2024-08-18 14:53:08,712 [Process: 0] Evaluating...
2024-08-18 14:53:08,714 [Process: 0] EPOCH 70:
2024-08-18 14:53:08,716 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:09,935 [Process: 0] Synchronize training processes
2024-08-18 14:53:09,935 [Process: 0] Evaluating...
2024-08-18 14:53:09,937 [Process: 0] EPOCH 71:
2024-08-18 14:53:09,939 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8799, 0.5000, 0.8797,  ..., 0.8784, 0.8776, 0.8820],
         [0.1201, 0.5000, 0.1203,  ..., 0.1216, 0.1224, 0.1180]],
        [[0.8710, 0.8725, 0.8748,  ..., 0.8792, 0.8747, 0.8792],
         [0.1290, 0.1275, 0.1252,  ..., 0.1208, 0.1253, 0.1208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8898, 0.5000, 0.8914,  ..., 0.8897, 0.8892, 0.8876],
         [0.1102, 0.5000, 0.1086,  ..., 0.1103, 0.1108, 0.1124]],
        [[0.8928, 0.5000, 0.8867,  ..., 0.8932, 0.8919, 0.8881],
         [0.1072, 0.5000, 0.1133,  ..., 0.1068, 0.1081, 0.1119]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8770, 0.5000, 0.8782,  ..., 0.8746, 0.8778, 0.8774],
         [0.1230, 0.5000, 0.1218,  ..., 0.1254, 0.1222, 0.1226]],
        [[0.8625, 0.8750, 0.8717,  ..., 0.8769, 0.8673, 0.8726],
         [0.1375, 0.1250, 0.1283,  ..., 0.1231, 0.1327, 0.1274]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:11,116 [Process: 0] Synchronize training processes
2024-08-18 14:53:11,116 [Process: 0] Evaluating...
2024-08-18 14:53:11,122 [Process: 0] EPOCH 72:
2024-08-18 14:53:11,124 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:12,320 [Process: 0] Synchronize training processes
2024-08-18 14:53:12,320 [Process: 0] Evaluating...
2024-08-18 14:53:12,322 [Process: 0] EPOCH 73:
2024-08-18 14:53:12,324 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8894, 0.5000, 0.8927,  ..., 0.8879, 0.8932, 0.8911],
         [0.1106, 0.5000, 0.1073,  ..., 0.1121, 0.1068, 0.1089]],
        [[0.8990, 0.5000, 0.8957,  ..., 0.8967, 0.8934, 0.8868],
         [0.1010, 0.5000, 0.1043,  ..., 0.1033, 0.1066, 0.1132]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8854, 0.5000, 0.8781,  ..., 0.8836, 0.8857, 0.8788],
         [0.1146, 0.5000, 0.1219,  ..., 0.1164, 0.1143, 0.1212]],
        [[0.8806, 0.8815, 0.8837,  ..., 0.8846, 0.8755, 0.8787],
         [0.1194, 0.1185, 0.1163,  ..., 0.1154, 0.1245, 0.1213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8938, 0.5000, 0.8934,  ..., 0.9012, 0.8953, 0.8905],
         [0.1062, 0.5000, 0.1066,  ..., 0.0988, 0.1047, 0.1095]],
        [[0.8986, 0.5000, 0.8983,  ..., 0.8949, 0.8961, 0.8948],
         [0.1014, 0.5000, 0.1017,  ..., 0.1051, 0.1039, 0.1052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:13,500 [Process: 0] Synchronize training processes
2024-08-18 14:53:13,501 [Process: 0] Evaluating...
2024-08-18 14:53:13,503 [Process: 0] EPOCH 74:
2024-08-18 14:53:13,504 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8937, 0.5000, 0.8933,  ..., 0.8933, 0.8979, 0.8860],
         [0.1063, 0.5000, 0.1067,  ..., 0.1067, 0.1021, 0.1140]],
        [[0.8803, 0.8876, 0.8911,  ..., 0.8893, 0.8833, 0.8868],
         [0.1197, 0.1124, 0.1089,  ..., 0.1107, 0.1167, 0.1132]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8989, 0.5000, 0.8966,  ..., 0.8930, 0.8934, 0.8954],
         [0.1011, 0.5000, 0.1034,  ..., 0.1070, 0.1066, 0.1046]],
        [[0.8939, 0.5000, 0.8964,  ..., 0.8952, 0.8953, 0.8966],
         [0.1061, 0.5000, 0.1036,  ..., 0.1048, 0.1047, 0.1034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8929, 0.5000, 0.8954,  ..., 0.8863, 0.8962, 0.8847],
         [0.1071, 0.5000, 0.1046,  ..., 0.1137, 0.1038, 0.1153]],
        [[0.8854, 0.8832, 0.8923,  ..., 0.8908, 0.8858, 0.8849],
         [0.1146, 0.1168, 0.1077,  ..., 0.1092, 0.1142, 0.1151]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8962, 0.5000, 0.8994,  ..., 0.8965, 0.8990, 0.8950],
         [0.1038, 0.5000, 0.1006,  ..., 0.1035, 0.1010, 0.1050]],
        [[0.9006, 0.5000, 0.8934,  ..., 0.8930, 0.8943, 0.9010],
         [0.0994, 0.5000, 0.1066,  ..., 0.1070, 0.1057, 0.0990]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:14,723 [Process: 0] Synchronize training processes
2024-08-18 14:53:14,724 [Process: 0] Evaluating...
2024-08-18 14:53:14,725 [Process: 0] EPOCH 75:
2024-08-18 14:53:14,727 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:15,904 [Process: 0] Synchronize training processes
2024-08-18 14:53:15,905 [Process: 0] Evaluating...
2024-08-18 14:53:15,906 [Process: 0] EPOCH 76:
2024-08-18 14:53:15,908 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8971, 0.5000, 0.8934,  ..., 0.8886, 0.8925, 0.8891],
         [0.1029, 0.5000, 0.1066,  ..., 0.1114, 0.1075, 0.1109]],
        [[0.8884, 0.8884, 0.8826,  ..., 0.8921, 0.8866, 0.8890],
         [0.1116, 0.1116, 0.1174,  ..., 0.1079, 0.1134, 0.1110]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9021, 0.5000, 0.9063,  ..., 0.9071, 0.9058, 0.9053],
         [0.0979, 0.5000, 0.0937,  ..., 0.0929, 0.0942, 0.0947]],
        [[0.9040, 0.5000, 0.9040,  ..., 0.9027, 0.8983, 0.8986],
         [0.0960, 0.5000, 0.0960,  ..., 0.0973, 0.1017, 0.1014]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8967, 0.5000, 0.8969,  ..., 0.8916, 0.8988, 0.8927],
         [0.1033, 0.5000, 0.1031,  ..., 0.1084, 0.1012, 0.1073]],
        [[0.8899, 0.8862, 0.8850,  ..., 0.8945, 0.8817, 0.8929],
         [0.1101, 0.1138, 0.1150,  ..., 0.1055, 0.1183, 0.1071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:17,156 [Process: 0] Synchronize training processes
2024-08-18 14:53:17,157 [Process: 0] Evaluating...
2024-08-18 14:53:17,159 [Process: 0] EPOCH 77:
2024-08-18 14:53:17,160 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:18,344 [Process: 0] Synchronize training processes
2024-08-18 14:53:18,345 [Process: 0] Evaluating...
2024-08-18 14:53:18,347 [Process: 0] EPOCH 78:
2024-08-18 14:53:18,349 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9031, 0.5000, 0.9028,  ..., 0.9123, 0.9092, 0.9029],
         [0.0969, 0.5000, 0.0972,  ..., 0.0877, 0.0908, 0.0971]],
        [[0.9038, 0.5000, 0.9040,  ..., 0.9052, 0.8927, 0.9052],
         [0.0962, 0.5000, 0.0960,  ..., 0.0948, 0.1073, 0.0948]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8986, 0.5000, 0.8975,  ..., 0.9000, 0.8993, 0.8956],
         [0.1014, 0.5000, 0.1025,  ..., 0.1000, 0.1007, 0.1044]],
        [[0.8886, 0.8884, 0.8883,  ..., 0.8978, 0.8922, 0.8947],
         [0.1114, 0.1116, 0.1117,  ..., 0.1022, 0.1078, 0.1053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9085, 0.5000, 0.9044,  ..., 0.9015, 0.9012, 0.9049],
         [0.0915, 0.5000, 0.0956,  ..., 0.0985, 0.0988, 0.0951]],
        [[0.9030, 0.5000, 0.9126,  ..., 0.9073, 0.5000, 0.9017],
         [0.0970, 0.5000, 0.0874,  ..., 0.0927, 0.5000, 0.0983]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:19,566 [Process: 0] Synchronize training processes
2024-08-18 14:53:19,567 [Process: 0] Evaluating...
2024-08-18 14:53:19,568 [Process: 0] EPOCH 79:
2024-08-18 14:53:19,571 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8974, 0.5000, 0.9020,  ..., 0.8947, 0.9010, 0.8912],
         [0.1026, 0.5000, 0.0980,  ..., 0.1053, 0.0990, 0.1088]],
        [[0.8920, 0.8880, 0.8867,  ..., 0.8991, 0.8927, 0.8948],
         [0.1080, 0.1120, 0.1133,  ..., 0.1009, 0.1073, 0.1052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9006, 0.5000, 0.9041,  ..., 0.9134, 0.9037, 0.9012],
         [0.0994, 0.5000, 0.0959,  ..., 0.0866, 0.0963, 0.0988]],
        [[0.9022, 0.5000, 0.5000,  ..., 0.9012, 0.5000, 0.9035],
         [0.0978, 0.5000, 0.5000,  ..., 0.0988, 0.5000, 0.0965]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8946, 0.5000, 0.8984,  ..., 0.8948, 0.8962, 0.8990],
         [0.1054, 0.5000, 0.1016,  ..., 0.1052, 0.1038, 0.1010]],
        [[0.8962, 0.8957, 0.8915,  ..., 0.8935, 0.8910, 0.8929],
         [0.1038, 0.1043, 0.1085,  ..., 0.1065, 0.1090, 0.1071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9032, 0.5000, 0.9044,  ..., 0.9037, 0.9029, 0.9027],
         [0.0968, 0.5000, 0.0956,  ..., 0.0963, 0.0971, 0.0973]],
        [[0.9047, 0.5000, 0.5000,  ..., 0.9004, 0.5000, 0.9030],
         [0.0953, 0.5000, 0.5000,  ..., 0.0996, 0.5000, 0.0970]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:20,751 [Process: 0] Synchronize training processes
2024-08-18 14:53:20,751 [Process: 0] Evaluating...
2024-08-18 14:53:20,753 [Process: 0] EPOCH 80:
2024-08-18 14:53:20,755 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:21,931 [Process: 0] Synchronize training processes
2024-08-18 14:53:21,931 [Process: 0] Evaluating...
2024-08-18 14:53:21,933 [Process: 0] EPOCH 81:
2024-08-18 14:53:21,935 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8943, 0.5000, 0.8941,  ..., 0.8965, 0.8987, 0.8957],
         [0.1057, 0.5000, 0.1059,  ..., 0.1035, 0.1013, 0.1043]],
        [[0.8958, 0.8956, 0.8958,  ..., 0.8950, 0.8951, 0.8940],
         [0.1042, 0.1044, 0.1042,  ..., 0.1050, 0.1049, 0.1060]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8996, 0.9031, 0.8988,  ..., 0.9015, 0.9006, 0.9014],
         [0.1004, 0.0969, 0.1012,  ..., 0.0985, 0.0994, 0.0986]],
        [[0.9015, 0.5000, 0.5000,  ..., 0.9008, 0.5000, 0.8971],
         [0.0985, 0.5000, 0.5000,  ..., 0.0992, 0.5000, 0.1029]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8964, 0.5000, 0.8971,  ..., 0.8972, 0.9027, 0.8973],
         [0.1036, 0.5000, 0.1029,  ..., 0.1028, 0.0973, 0.1027]],
        [[0.8975, 0.8976, 0.8974,  ..., 0.8979, 0.8961, 0.8969],
         [0.1025, 0.1024, 0.1026,  ..., 0.1021, 0.1039, 0.1031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:23,114 [Process: 0] Synchronize training processes
2024-08-18 14:53:23,114 [Process: 0] Evaluating...
2024-08-18 14:53:23,120 [Process: 0] EPOCH 82:
2024-08-18 14:53:23,122 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:24,297 [Process: 0] Synchronize training processes
2024-08-18 14:53:24,297 [Process: 0] Evaluating...
2024-08-18 14:53:24,299 [Process: 0] EPOCH 83:
2024-08-18 14:53:24,300 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9033, 0.9006, 0.8997,  ..., 0.9024, 0.9013, 0.9004],
         [0.0967, 0.0994, 0.1003,  ..., 0.0976, 0.0987, 0.0996]],
        [[0.9026, 0.8993, 0.5000,  ..., 0.8998, 0.5000, 0.8995],
         [0.0974, 0.1007, 0.5000,  ..., 0.1002, 0.5000, 0.1005]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8998, 0.5000, 0.9034,  ..., 0.9013, 0.9020, 0.9005],
         [0.1002, 0.5000, 0.0966,  ..., 0.0987, 0.0980, 0.0995]],
        [[0.8991, 0.9000, 0.8995,  ..., 0.8986, 0.9025, 0.9018],
         [0.1009, 0.1000, 0.1005,  ..., 0.1014, 0.0975, 0.0982]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8958, 0.8964, 0.8963,  ..., 0.8959, 0.8941, 0.8951],
         [0.1042, 0.1036, 0.1037,  ..., 0.1041, 0.1059, 0.1049]],
        [[0.8960, 0.8944, 0.8940,  ..., 0.8924, 0.8932, 0.8953],
         [0.1040, 0.1056, 0.1060,  ..., 0.1076, 0.1068, 0.1047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
2024-08-18 14:53:25,481 [Process: 0] Synchronize training processes
2024-08-18 14:53:25,481 [Process: 0] Evaluating...
2024-08-18 14:53:25,483 [Process: 0] EPOCH 84:
2024-08-18 14:53:25,485 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9037, 0.5000, 0.9032,  ..., 0.9021, 0.9028, 0.9006],
         [0.0963, 0.5000, 0.0968,  ..., 0.0979, 0.0972, 0.0994]],
        [[0.9016, 0.8985, 0.9013,  ..., 0.8993, 0.9026, 0.8968],
         [0.0984, 0.1015, 0.0987,  ..., 0.1007, 0.0974, 0.1032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8968, 0.8990, 0.8989,  ..., 0.8964, 0.8948, 0.8985],
         [0.1032, 0.1010, 0.1011,  ..., 0.1036, 0.1052, 0.1015]],
        [[0.8972, 0.9004, 0.8968,  ..., 0.8979, 0.8984, 0.9014],
         [0.1028, 0.0996, 0.1032,  ..., 0.1021, 0.1016, 0.0986]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9051, 0.5000, 0.9040,  ..., 0.9021, 0.9051, 0.9016],
         [0.0949, 0.5000, 0.0960,  ..., 0.0979, 0.0949, 0.0984]],
        [[0.8985, 0.8923, 0.8971,  ..., 0.8955, 0.9028, 0.9021],
         [0.1015, 0.1077, 0.1029,  ..., 0.1045, 0.0972, 0.0979]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9020, 0.9011, 0.9023,  ..., 0.9014, 0.9041, 0.8990],
         [0.0980, 0.0989, 0.0977,  ..., 0.0986, 0.0959, 0.1010]],
        [[0.8994, 0.9049, 0.5000,  ..., 0.8998, 0.9002, 0.9025],
         [0.1006, 0.0951, 0.5000,  ..., 0.1002, 0.0998, 0.0975]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:26,668 [Process: 0] Synchronize training processes
2024-08-18 14:53:26,668 [Process: 0] Evaluating...
2024-08-18 14:53:26,670 [Process: 0] EPOCH 85:
2024-08-18 14:53:26,672 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:27,848 [Process: 0] Synchronize training processes
2024-08-18 14:53:27,848 [Process: 0] Evaluating...
2024-08-18 14:53:27,850 [Process: 0] EPOCH 86:
2024-08-18 14:53:27,852 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9045, 0.5000, 0.9107,  ..., 0.9067, 0.9112, 0.9068],
         [0.0955, 0.5000, 0.0893,  ..., 0.0933, 0.0888, 0.0932]],
        [[0.9006, 0.9048, 0.8972,  ..., 0.9035, 0.9078, 0.9065],
         [0.0994, 0.0952, 0.1028,  ..., 0.0965, 0.0922, 0.0935]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9063, 0.9043, 0.9032,  ..., 0.9058, 0.9059, 0.9037],
         [0.0937, 0.0957, 0.0968,  ..., 0.0942, 0.0941, 0.0963]],
        [[0.5000, 0.9068, 0.5000,  ..., 0.9024, 0.9046, 0.9026],
         [0.5000, 0.0932, 0.5000,  ..., 0.0976, 0.0954, 0.0974]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9039, 0.5000, 0.9012,  ..., 0.9046, 0.9061, 0.9033],
         [0.0961, 0.5000, 0.0988,  ..., 0.0954, 0.0939, 0.0967]],
        [[0.8995, 0.9037, 0.9075,  ..., 0.8986, 0.9072, 0.9070],
         [0.1005, 0.0963, 0.0925,  ..., 0.1014, 0.0928, 0.0930]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:29,025 [Process: 0] Synchronize training processes
2024-08-18 14:53:29,026 [Process: 0] Evaluating...
2024-08-18 14:53:29,027 [Process: 0] EPOCH 87:
2024-08-18 14:53:29,029 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:30,207 [Process: 0] Synchronize training processes
2024-08-18 14:53:30,207 [Process: 0] Evaluating...
2024-08-18 14:53:30,209 [Process: 0] EPOCH 88:
2024-08-18 14:53:30,211 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9020, 0.8999, 0.9017,  ..., 0.9028, 0.9047, 0.9009],
         [0.0980, 0.1001, 0.0983,  ..., 0.0972, 0.0953, 0.0991]],
        [[0.8901, 0.9064, 0.5000,  ..., 0.8992, 0.9039, 0.9102],
         [0.1099, 0.0936, 0.5000,  ..., 0.1008, 0.0961, 0.0898]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9101, 0.5000, 0.9092,  ..., 0.9040, 0.9098, 0.9076],
         [0.0899, 0.5000, 0.0908,  ..., 0.0960, 0.0902, 0.0924]],
        [[0.8984, 0.9091, 0.9074,  ..., 0.9037, 0.9103, 0.9109],
         [0.1016, 0.0909, 0.0926,  ..., 0.0963, 0.0897, 0.0891]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9005, 0.8984, 0.8910,  ..., 0.8970, 0.8988, 0.9010],
         [0.0995, 0.1016, 0.1090,  ..., 0.1030, 0.1012, 0.0990]],
        [[0.9089, 0.9086, 0.8433,  ..., 0.9047, 0.9055, 0.9047],
         [0.0911, 0.0914, 0.1567,  ..., 0.0953, 0.0945, 0.0953]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9075, 0.5000, 0.9105,  ..., 0.9032, 0.9094, 0.9111],
         [0.0925, 0.5000, 0.0895,  ..., 0.0968, 0.0906, 0.0889]],
        [[0.9069, 0.9099, 0.9115,  ..., 0.9007, 0.9083, 0.9146],
         [0.0931, 0.0901, 0.0885,  ..., 0.0993, 0.0917, 0.0854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:31,388 [Process: 0] Synchronize training processes
2024-08-18 14:53:31,389 [Process: 0] Evaluating...
2024-08-18 14:53:31,391 [Process: 0] EPOCH 89:
2024-08-18 14:53:31,392 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9004, 0.8949, 0.8973,  ..., 0.8981, 0.8980, 0.8980],
         [0.0996, 0.1051, 0.1027,  ..., 0.1019, 0.1020, 0.1020]],
        [[0.9024, 0.9034, 0.9020,  ..., 0.9025, 0.9038, 0.9022],
         [0.0976, 0.0966, 0.0980,  ..., 0.0975, 0.0962, 0.0978]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9040, 0.5000, 0.9057,  ..., 0.9039, 0.9073, 0.9037],
         [0.0960, 0.5000, 0.0943,  ..., 0.0961, 0.0927, 0.0963]],
        [[0.9002, 0.9051, 0.9069,  ..., 0.8995, 0.9032, 0.9089],
         [0.0998, 0.0949, 0.0931,  ..., 0.1005, 0.0968, 0.0911]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8997, 0.9021, 0.8967,  ..., 0.9004, 0.9007, 0.9009],
         [0.1003, 0.0979, 0.1033,  ..., 0.0996, 0.0993, 0.0991]],
        [[0.9023, 0.9036, 0.9043,  ..., 0.9064, 0.9016, 0.9051],
         [0.0977, 0.0964, 0.0957,  ..., 0.0936, 0.0984, 0.0949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:32,569 [Process: 0] Synchronize training processes
2024-08-18 14:53:32,570 [Process: 0] Evaluating...
2024-08-18 14:53:32,571 [Process: 0] EPOCH 90:
2024-08-18 14:53:32,573 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:33,751 [Process: 0] Synchronize training processes
2024-08-18 14:53:33,751 [Process: 0] Evaluating...
2024-08-18 14:53:33,753 [Process: 0] EPOCH 91:
2024-08-18 14:53:33,755 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9015, 0.5000, 0.9002,  ..., 0.8973, 0.9006, 0.9014],
         [0.0985, 0.5000, 0.0998,  ..., 0.1027, 0.0994, 0.0986]],
        [[0.8966, 0.9040, 0.9002,  ..., 0.8986, 0.9023, 0.9028],
         [0.1034, 0.0960, 0.0998,  ..., 0.1014, 0.0977, 0.0972]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9020, 0.9028, 0.9051,  ..., 0.9031, 0.9035, 0.9015],
         [0.0980, 0.0972, 0.0949,  ..., 0.0969, 0.0965, 0.0985]],
        [[0.6016, 0.8755, 0.9052,  ..., 0.9063, 0.9052, 0.9057],
         [0.3984, 0.1245, 0.0948,  ..., 0.0937, 0.0948, 0.0943]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8962, 0.8899, 0.8964,  ..., 0.8965, 0.8949, 0.8952],
         [0.1038, 0.1101, 0.1036,  ..., 0.1035, 0.1051, 0.1048]],
        [[0.8732, 0.8931, 0.8899,  ..., 0.8948, 0.8971, 0.8985],
         [0.1268, 0.1069, 0.1101,  ..., 0.1052, 0.1029, 0.1015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
2024-08-18 14:53:34,933 [Process: 0] Synchronize training processes
2024-08-18 14:53:34,933 [Process: 0] Evaluating...
2024-08-18 14:53:34,940 [Process: 0] EPOCH 92:
2024-08-18 14:53:34,941 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:36,120 [Process: 0] Synchronize training processes
2024-08-18 14:53:36,121 [Process: 0] Evaluating...
2024-08-18 14:53:36,122 [Process: 0] EPOCH 93:
2024-08-18 14:53:36,124 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9035, 0.9065, 0.9054,  ..., 0.9039, 0.9044, 0.9032],
         [0.0965, 0.0935, 0.0946,  ..., 0.0961, 0.0956, 0.0968]],
        [[0.9050, 0.9051, 0.9057,  ..., 0.9069, 0.9045, 0.9050],
         [0.0950, 0.0949, 0.0943,  ..., 0.0931, 0.0955, 0.0950]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9024, 0.9014, 0.9048,  ..., 0.9035, 0.9049, 0.9044],
         [0.0976, 0.0986, 0.0952,  ..., 0.0965, 0.0951, 0.0956]],
        [[0.9045, 0.9009, 0.9021,  ..., 0.9029, 0.9041, 0.9054],
         [0.0955, 0.0991, 0.0979,  ..., 0.0971, 0.0959, 0.0946]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8930, 0.8947, 0.8946,  ..., 0.8959, 0.8940, 0.8921],
         [0.1070, 0.1053, 0.1054,  ..., 0.1041, 0.1060, 0.1079]],
        [[0.8937, 0.8937, 0.8945,  ..., 0.8945, 0.8947, 0.8927],
         [0.1063, 0.1063, 0.1055,  ..., 0.1055, 0.1053, 0.1073]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9061, 0.9064, 0.9061,  ..., 0.9047, 0.9051, 0.9057],
         [0.0939, 0.0936, 0.0939,  ..., 0.0953, 0.0949, 0.0943]],
        [[0.9106, 0.9048, 0.9073,  ..., 0.9053, 0.9056, 0.9065],
         [0.0894, 0.0952, 0.0927,  ..., 0.0947, 0.0944, 0.0935]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:37,302 [Process: 0] Synchronize training processes
2024-08-18 14:53:37,303 [Process: 0] Evaluating...
2024-08-18 14:53:37,304 [Process: 0] EPOCH 94:
2024-08-18 14:53:37,306 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9144, 0.9126, 0.9143,  ..., 0.9148, 0.9165, 0.9150],
         [0.0856, 0.0874, 0.0857,  ..., 0.0852, 0.0835, 0.0850]],
        [[0.9152, 0.9137, 0.9138,  ..., 0.5000, 0.9125, 0.9151],
         [0.0848, 0.0863, 0.0862,  ..., 0.5000, 0.0875, 0.0849]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9173, 0.5000, 0.9172,  ..., 0.9173, 0.9160, 0.9191],
         [0.0827, 0.5000, 0.0828,  ..., 0.0827, 0.0840, 0.0809]],
        [[0.9207, 0.9198, 0.9178,  ..., 0.9221, 0.9207, 0.9190],
         [0.0793, 0.0802, 0.0822,  ..., 0.0779, 0.0793, 0.0810]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9148, 0.9156, 0.9147,  ..., 0.9167, 0.9130, 0.9179],
         [0.0852, 0.0844, 0.0853,  ..., 0.0833, 0.0870, 0.0821]],
        [[0.9154, 0.9172, 0.9165,  ..., 0.9151, 0.9162, 0.9166],
         [0.0846, 0.0828, 0.0835,  ..., 0.0849, 0.0838, 0.0834]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:38,484 [Process: 0] Synchronize training processes
2024-08-18 14:53:38,485 [Process: 0] Evaluating...
2024-08-18 14:53:38,486 [Process: 0] EPOCH 95:
2024-08-18 14:53:38,488 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:39,666 [Process: 0] Synchronize training processes
2024-08-18 14:53:39,666 [Process: 0] Evaluating...
2024-08-18 14:53:39,668 [Process: 0] EPOCH 96:
2024-08-18 14:53:39,670 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9087, 0.9048, 0.9090,  ..., 0.9065, 0.9062, 0.9066],
         [0.0913, 0.0952, 0.0910,  ..., 0.0935, 0.0938, 0.0934]],
        [[0.9069, 0.9090, 0.9068,  ..., 0.8938, 0.9121, 0.9079],
         [0.0931, 0.0910, 0.0932,  ..., 0.1062, 0.0879, 0.0921]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9263, 0.9230, 0.9214,  ..., 0.9221, 0.9193, 0.9195],
         [0.0737, 0.0770, 0.0786,  ..., 0.0779, 0.0807, 0.0805]],
        [[0.5000, 0.9194, 0.9205,  ..., 0.5000, 0.9195, 0.5000],
         [0.5000, 0.0806, 0.0795,  ..., 0.5000, 0.0805, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9137, 0.9123, 0.9138,  ..., 0.9106, 0.9141, 0.9138],
         [0.0863, 0.0877, 0.0862,  ..., 0.0894, 0.0859, 0.0862]],
        [[0.9075, 0.9140, 0.9120,  ..., 0.9146, 0.9145, 0.9139],
         [0.0925, 0.0860, 0.0880,  ..., 0.0854, 0.0855, 0.0861]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9176, 0.9163, 0.9177,  ..., 0.9210, 0.9187, 0.9194],
         [0.0824, 0.0837, 0.0823,  ..., 0.0790, 0.0813, 0.0806]],
        [[0.9182, 0.9140, 0.9169,  ..., 0.5000, 0.9184, 0.5000],
         [0.0818, 0.0860, 0.0831,  ..., 0.5000, 0.0816, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:40,850 [Process: 0] Synchronize training processes
2024-08-18 14:53:40,851 [Process: 0] Evaluating...
2024-08-18 14:53:40,853 [Process: 0] EPOCH 97:
2024-08-18 14:53:40,854 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:42,038 [Process: 0] Synchronize training processes
2024-08-18 14:53:42,038 [Process: 0] Evaluating...
2024-08-18 14:53:42,040 [Process: 0] EPOCH 98:
2024-08-18 14:53:42,042 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9121, 0.9102, 0.9103,  ..., 0.9140, 0.9102, 0.9100],
         [0.0879, 0.0898, 0.0897,  ..., 0.0860, 0.0898, 0.0900]],
        [[0.8552, 0.9104, 0.9099,  ..., 0.9090, 0.9111, 0.9099],
         [0.1448, 0.0896, 0.0901,  ..., 0.0910, 0.0889, 0.0901]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9003, 0.9027, 0.9023,  ..., 0.9008, 0.8992, 0.9016],
         [0.0997, 0.0973, 0.0977,  ..., 0.0992, 0.1008, 0.0984]],
        [[0.9012, 0.8998, 0.8991,  ..., 0.5000, 0.8980, 0.9031],
         [0.0988, 0.1002, 0.1009,  ..., 0.5000, 0.1020, 0.0969]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9262, 0.9235, 0.9256,  ..., 0.9243, 0.9244, 0.9268],
         [0.0738, 0.0765, 0.0744,  ..., 0.0757, 0.0756, 0.0732]],
        [[0.5000, 0.9242, 0.9197,  ..., 0.9248, 0.9232, 0.9261],
         [0.5000, 0.0758, 0.0803,  ..., 0.0752, 0.0768, 0.0739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:43,220 [Process: 0] Synchronize training processes
2024-08-18 14:53:43,220 [Process: 0] Evaluating...
2024-08-18 14:53:43,222 [Process: 0] EPOCH 99:
2024-08-18 14:53:43,224 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:44,401 [Process: 0] Synchronize training processes
2024-08-18 14:53:44,402 [Process: 0] Evaluating...
2024-08-18 14:53:44,404 [Process: 0] EPOCH 100:
2024-08-18 14:53:44,406 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8916, 0.8941, 0.8900,  ..., 0.8926, 0.8910, 0.8957],
         [0.1084, 0.1059, 0.1100,  ..., 0.1074, 0.1090, 0.1043]],
        [[0.8934, 0.8919, 0.8944,  ..., 0.5000, 0.8950, 0.8945],
         [0.1066, 0.1081, 0.1056,  ..., 0.5000, 0.1050, 0.1055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9110, 0.9090, 0.9126,  ..., 0.9140, 0.9097, 0.9091],
         [0.0890, 0.0910, 0.0874,  ..., 0.0860, 0.0903, 0.0909]],
        [[0.9090, 0.0173, 0.9091,  ..., 0.9078, 0.9086, 0.9091],
         [0.0910, 0.9827, 0.0909,  ..., 0.0922, 0.0914, 0.0909]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9065, 0.9050, 0.9081,  ..., 0.9099, 0.9079, 0.9116],
         [0.0935, 0.0950, 0.0919,  ..., 0.0901, 0.0921, 0.0884]],
        [[0.9064, 0.9035, 0.9069,  ..., 0.5000, 0.9078, 0.5000],
         [0.0936, 0.0965, 0.0931,  ..., 0.5000, 0.0922, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
2024-08-18 14:53:45,584 [Process: 0] Synchronize training processes
2024-08-18 14:53:45,584 [Process: 0] Evaluating...
2024-08-18 14:53:45,586 [Process: 0] EPOCH 101:
2024-08-18 14:53:45,588 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9010, 0.8973, 0.9002,  ..., 0.9010, 0.9009, 0.9005],
         [0.0990, 0.1027, 0.0998,  ..., 0.0990, 0.0991, 0.0995]],
        [[0.8999, 0.8998, 0.8978,  ..., 0.8986, 0.8986, 0.9000],
         [0.1001, 0.1002, 0.1022,  ..., 0.1014, 0.1014, 0.1000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8848, 0.8838, 0.8863,  ..., 0.8882, 0.8879, 0.8881],
         [0.1152, 0.1162, 0.1137,  ..., 0.1118, 0.1121, 0.1119]],
        [[0.8893, 0.8881, 0.8881,  ..., 0.8891, 0.8885, 0.8890],
         [0.1107, 0.1119, 0.1119,  ..., 0.1109, 0.1115, 0.1110]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9021, 0.8981, 0.9024,  ..., 0.9028, 0.9019, 0.9021],
         [0.0979, 0.1019, 0.0976,  ..., 0.0972, 0.0981, 0.0979]],
        [[0.5000, 0.9004, 0.9006,  ..., 0.9009, 0.8984, 0.9001],
         [0.5000, 0.0996, 0.0994,  ..., 0.0991, 0.1016, 0.0999]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8947, 0.8904, 0.8921,  ..., 0.8949, 0.8955, 0.8950],
         [0.1053, 0.1096, 0.1079,  ..., 0.1051, 0.1045, 0.1050]],
        [[0.8942, 0.8930, 0.8948,  ..., 0.8932, 0.8942, 0.8940],
         [0.1058, 0.1070, 0.1052,  ..., 0.1068, 0.1058, 0.1060]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:46,827 [Process: 0] Synchronize training processes
2024-08-18 14:53:46,828 [Process: 0] Evaluating...
2024-08-18 14:53:46,834 [Process: 0] EPOCH 102:
2024-08-18 14:53:46,835 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:48,090 [Process: 0] Synchronize training processes
2024-08-18 14:53:48,090 [Process: 0] Evaluating...
2024-08-18 14:53:48,092 [Process: 0] EPOCH 103:
2024-08-18 14:53:48,094 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9023, 0.8998, 0.9030,  ..., 0.9029, 0.9025, 0.9032],
         [0.0977, 0.1002, 0.0970,  ..., 0.0971, 0.0975, 0.0968]],
        [[0.5000, 0.8993, 0.9027,  ..., 0.9014, 0.9010, 0.9005],
         [0.5000, 0.1007, 0.0973,  ..., 0.0986, 0.0990, 0.0995]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9005, 0.8982, 0.9049,  ..., 0.9043, 0.9032, 0.9012],
         [0.0995, 0.1018, 0.0951,  ..., 0.0957, 0.0968, 0.0988]],
        [[0.9019, 0.9022, 0.9003,  ..., 0.8994, 0.9007, 0.8991],
         [0.0981, 0.0978, 0.0997,  ..., 0.1006, 0.0993, 0.1009]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9062, 0.9054, 0.9079,  ..., 0.9048, 0.9074, 0.9072],
         [0.0938, 0.0946, 0.0921,  ..., 0.0952, 0.0926, 0.0928]],
        [[0.5000, 0.9059, 0.9043,  ..., 0.9050, 0.9066, 0.9067],
         [0.5000, 0.0941, 0.0957,  ..., 0.0950, 0.0934, 0.0933]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:49,348 [Process: 0] Synchronize training processes
2024-08-18 14:53:49,348 [Process: 0] Evaluating...
2024-08-18 14:53:49,350 [Process: 0] EPOCH 104:
2024-08-18 14:53:49,352 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9050, 0.8986, 0.9052,  ..., 0.9025, 0.9023, 0.9016],
         [0.0950, 0.1014, 0.0948,  ..., 0.0975, 0.0977, 0.0984]],
        [[0.9020, 0.9017, 0.9019,  ..., 0.9055, 0.9021, 0.9023],
         [0.0980, 0.0983, 0.0981,  ..., 0.0945, 0.0979, 0.0977]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9071, 0.9051, 0.9067,  ..., 0.9053, 0.9073, 0.9062],
         [0.0929, 0.0949, 0.0933,  ..., 0.0947, 0.0927, 0.0938]],
        [[0.9075, 0.9048, 0.9071,  ..., 0.9043, 0.9066, 0.9060],
         [0.0925, 0.0952, 0.0929,  ..., 0.0957, 0.0934, 0.0940]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9048, 0.9001, 0.9074,  ..., 0.9074, 0.9077, 0.9060],
         [0.0952, 0.0999, 0.0926,  ..., 0.0926, 0.0923, 0.0940]],
        [[0.9035, 0.9036, 0.9064,  ..., 0.9047, 0.9051, 0.9051],
         [0.0965, 0.0964, 0.0936,  ..., 0.0953, 0.0949, 0.0949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:50,605 [Process: 0] Synchronize training processes
2024-08-18 14:53:50,606 [Process: 0] Evaluating...
2024-08-18 14:53:50,607 [Process: 0] EPOCH 105:
2024-08-18 14:53:50,609 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:51,863 [Process: 0] Synchronize training processes
2024-08-18 14:53:51,863 [Process: 0] Evaluating...
2024-08-18 14:53:51,865 [Process: 0] EPOCH 106:
2024-08-18 14:53:51,867 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9024, 0.8979, 0.9017,  ..., 0.9024, 0.9005, 0.9028],
         [0.0976, 0.1021, 0.0983,  ..., 0.0976, 0.0995, 0.0972]],
        [[0.9005, 0.9018, 0.9021,  ..., 0.8998, 0.8995, 0.8998],
         [0.0995, 0.0982, 0.0979,  ..., 0.1002, 0.1005, 0.1002]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9092, 0.8957, 0.9116,  ..., 0.9091, 0.9068, 0.9078],
         [0.0908, 0.1043, 0.0884,  ..., 0.0909, 0.0932, 0.0922]],
        [[0.9051, 0.9055, 0.9048,  ..., 0.9040, 0.9065, 0.9058],
         [0.0949, 0.0945, 0.0952,  ..., 0.0960, 0.0935, 0.0942]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.8996, 0.8955, 0.9002,  ..., 0.9017, 0.8998, 0.8995],
         [0.1004, 0.1045, 0.0998,  ..., 0.0983, 0.1002, 0.1005]],
        [[0.8972, 0.8952, 0.8957,  ..., 0.8972, 0.8980, 0.8969],
         [0.1028, 0.1048, 0.1043,  ..., 0.1028, 0.1020, 0.1031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:53,122 [Process: 0] Synchronize training processes
2024-08-18 14:53:53,122 [Process: 0] Evaluating...
2024-08-18 14:53:53,124 [Process: 0] EPOCH 107:
2024-08-18 14:53:53,125 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:54,423 [Process: 0] Synchronize training processes
2024-08-18 14:53:54,424 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9127, 0.9071, 0.9141,  ..., 0.9134, 0.9141, 0.9123],
         [0.0873, 0.0929, 0.0859,  ..., 0.0866, 0.0859, 0.0877]],
        [[0.9073, 0.9079, 0.9070,  ..., 0.9071, 0.9093, 0.9063],
         [0.0927, 0.0921, 0.0930,  ..., 0.0929, 0.0907, 0.0937]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9059, 0.9003, 0.9060,  ..., 0.9051, 0.9047, 0.9083],
         [0.0941, 0.0997, 0.0940,  ..., 0.0949, 0.0953, 0.0917]],
        [[0.9007, 0.9040, 0.9064,  ..., 0.9033, 0.9017, 0.9035],
         [0.0993, 0.0960, 0.0936,  ..., 0.0967, 0.0983, 0.0965]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9079, 0.9094, 0.9079,  ..., 0.9113, 0.9081, 0.9090],
         [0.0921, 0.0906, 0.0921,  ..., 0.0887, 0.0919, 0.0910]],
        [[0.9054, 0.9072, 0.9075,  ..., 0.9070, 0.9040, 0.9071],
         [0.0946, 0.0928, 0.0925,  ..., 0.0930, 0.0960, 0.0929]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
2024-08-18 14:53:54,426 [Process: 0] EPOCH 108:
2024-08-18 14:53:54,427 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:55,681 [Process: 0] Synchronize training processes
2024-08-18 14:53:55,681 [Process: 0] Evaluating...
2024-08-18 14:53:55,683 [Process: 0] EPOCH 109:
2024-08-18 14:53:55,684 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9078, 0.9000, 0.9107,  ..., 0.9111, 0.9119, 0.9112],
         [0.0922, 0.1000, 0.0893,  ..., 0.0889, 0.0881, 0.0888]],
        [[0.9039, 0.9057, 0.9067,  ..., 0.9051, 0.9064, 0.9036],
         [0.0961, 0.0943, 0.0933,  ..., 0.0949, 0.0936, 0.0964]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9169, 0.9126, 0.9098,  ..., 0.9153, 0.9120, 0.9097],
         [0.0831, 0.0874, 0.0902,  ..., 0.0847, 0.0880, 0.0903]],
        [[0.9104, 0.9124, 0.9099,  ..., 0.9114, 0.9110, 0.9096],
         [0.0896, 0.0876, 0.0901,  ..., 0.0886, 0.0890, 0.0904]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9123, 0.9071, 0.9165,  ..., 0.9148, 0.9119, 0.9149],
         [0.0877, 0.0929, 0.0835,  ..., 0.0852, 0.0881, 0.0851]],
        [[0.9103, 0.9113, 0.9137,  ..., 0.9129, 0.9114, 0.9122],
         [0.0897, 0.0887, 0.0863,  ..., 0.0871, 0.0886, 0.0878]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9202, 0.9156, 0.9168,  ..., 0.9131, 0.9181, 0.9156],
         [0.0798, 0.0844, 0.0832,  ..., 0.0869, 0.0819, 0.0844]],
        [[0.9113, 0.9108, 0.9088,  ..., 0.9125, 0.9093, 0.9091],
         [0.0887, 0.0892, 0.0912,  ..., 0.0875, 0.0907, 0.0909]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:56,936 [Process: 0] Synchronize training processes
2024-08-18 14:53:56,937 [Process: 0] Evaluating...
2024-08-18 14:53:56,939 [Process: 0] EPOCH 110:
2024-08-18 14:53:56,940 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:53:58,190 [Process: 0] Synchronize training processes
2024-08-18 14:53:58,191 [Process: 0] Evaluating...
2024-08-18 14:53:58,192 [Process: 0] EPOCH 111:
2024-08-18 14:53:58,194 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9278, 0.9213, 0.9260,  ..., 0.9243, 0.9254, 0.9271],
         [0.0722, 0.0787, 0.0740,  ..., 0.0757, 0.0746, 0.0729]],
        [[0.5000, 0.9234, 0.9245,  ..., 0.9248, 0.9248, 0.9273],
         [0.5000, 0.0766, 0.0755,  ..., 0.0752, 0.0752, 0.0727]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9178, 0.9135, 0.9166,  ..., 0.9197, 0.9181, 0.9140],
         [0.0822, 0.0865, 0.0834,  ..., 0.0803, 0.0819, 0.0860]],
        [[0.9100, 0.9136, 0.9107,  ..., 0.9108, 0.9133, 0.9120],
         [0.0900, 0.0864, 0.0893,  ..., 0.0892, 0.0867, 0.0880]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9339, 0.9229, 0.9352,  ..., 0.9385, 0.9303, 0.9368],
         [0.0661, 0.0771, 0.0648,  ..., 0.0615, 0.0697, 0.0632]],
        [[0.5000, 0.9305, 0.9298,  ..., 0.9374, 0.9332, 0.9282],
         [0.5000, 0.0695, 0.0702,  ..., 0.0626, 0.0668, 0.0718]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:53:59,445 [Process: 0] Synchronize training processes
2024-08-18 14:53:59,445 [Process: 0] Evaluating...
2024-08-18 14:53:59,451 [Process: 0] EPOCH 112:
2024-08-18 14:53:59,453 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9187, 0.9077, 0.9157,  ..., 0.9161, 0.9157, 0.9136],
         [0.0813, 0.0923, 0.0843,  ..., 0.0839, 0.0843, 0.0864]],
        [[0.9094, 0.9114, 0.9103,  ..., 0.9122, 0.9086, 0.9091],
         [0.0906, 0.0886, 0.0897,  ..., 0.0878, 0.0914, 0.0909]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9328, 0.9250, 0.9370,  ..., 0.9375, 0.9344, 0.9340],
         [0.0672, 0.0750, 0.0630,  ..., 0.0625, 0.0656, 0.0660]],
        [[0.5000, 0.9357, 0.9355,  ..., 0.9374, 0.9356, 0.9400],
         [0.5000, 0.0643, 0.0645,  ..., 0.0626, 0.0644, 0.0600]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9183, 0.9227, 0.9133,  ..., 0.9159, 0.9188, 0.9191],
         [0.0817, 0.0773, 0.0867,  ..., 0.0841, 0.0812, 0.0809]],
        [[0.9096, 0.9120, 0.9148,  ..., 0.9114, 0.9116, 0.9082],
         [0.0904, 0.0880, 0.0852,  ..., 0.0886, 0.0884, 0.0918]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:54:00,705 [Process: 0] Synchronize training processes
2024-08-18 14:54:00,705 [Process: 0] Evaluating...
2024-08-18 14:54:00,707 [Process: 0] EPOCH 113:
2024-08-18 14:54:00,708 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:54:01,961 [Process: 0] Synchronize training processes
2024-08-18 14:54:01,961 [Process: 0] Evaluating...
2024-08-18 14:54:01,963 [Process: 0] EPOCH 114:
2024-08-18 14:54:01,965 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9264, 0.9144, 0.9286,  ..., 0.9311, 0.9306, 0.9315],
         [0.0736, 0.0856, 0.0714,  ..., 0.0689, 0.0694, 0.0685]],
        [[0.5000, 0.9271, 0.9271,  ..., 0.9273, 0.9267, 0.9280],
         [0.5000, 0.0729, 0.0729,  ..., 0.0727, 0.0733, 0.0720]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9182, 0.9160, 0.9151,  ..., 0.9175, 0.9149, 0.9173],
         [0.0818, 0.0840, 0.0849,  ..., 0.0825, 0.0851, 0.0827]],
        [[0.9155, 0.9147, 0.9160,  ..., 0.9160, 0.9150, 0.9180],
         [0.0845, 0.0853, 0.0840,  ..., 0.0840, 0.0850, 0.0820]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9325, 0.9100, 0.9285,  ..., 0.9322, 0.9265, 0.9321],
         [0.0675, 0.0900, 0.0715,  ..., 0.0678, 0.0735, 0.0679]],
        [[0.9200, 0.9292, 0.9230,  ..., 0.9247, 0.9267, 0.9301],
         [0.0800, 0.0708, 0.0770,  ..., 0.0753, 0.0733, 0.0699]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:54:03,218 [Process: 0] Synchronize training processes
2024-08-18 14:54:03,218 [Process: 0] Evaluating...
2024-08-18 14:54:03,220 [Process: 0] EPOCH 115:
2024-08-18 14:54:03,222 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9255, 0.9187, 0.9166,  ..., 0.9224, 0.9244, 0.9248],
         [0.0745, 0.0813, 0.0834,  ..., 0.0776, 0.0756, 0.0752]],
        [[0.9163, 0.9201, 0.9186,  ..., 0.9186, 0.9142, 0.9199],
         [0.0837, 0.0799, 0.0814,  ..., 0.0814, 0.0858, 0.0801]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9242, 0.9063, 0.9227,  ..., 0.9232, 0.9245, 0.9255],
         [0.0758, 0.0937, 0.0773,  ..., 0.0768, 0.0755, 0.0745]],
        [[0.9180, 0.9188, 0.9218,  ..., 0.9235, 0.9231, 0.9250],
         [0.0820, 0.0812, 0.0782,  ..., 0.0765, 0.0769, 0.0750]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9206, 0.9163, 0.9250,  ..., 0.9217, 0.9280, 0.9232],
         [0.0794, 0.0837, 0.0750,  ..., 0.0783, 0.0720, 0.0768]],
        [[0.9186, 0.9221, 0.9183,  ..., 0.9171, 0.9213, 0.9219],
         [0.0814, 0.0779, 0.0817,  ..., 0.0829, 0.0787, 0.0781]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
2024-08-18 14:54:04,476 [Process: 0] Synchronize training processes
2024-08-18 14:54:04,476 [Process: 0] Evaluating...
2024-08-18 14:54:04,478 [Process: 0] EPOCH 116:
2024-08-18 14:54:04,480 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:54:05,732 [Process: 0] Synchronize training processes
2024-08-18 14:54:05,732 [Process: 0] Evaluating...
2024-08-18 14:54:05,734 [Process: 0] EPOCH 117:
2024-08-18 14:54:05,736 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9257, 0.8996, 0.9293,  ..., 0.9217, 0.9270, 0.9237],
         [0.0743, 0.1004, 0.0707,  ..., 0.0783, 0.0730, 0.0763]],
        [[0.9192, 0.9231, 0.9259,  ..., 0.9262, 0.9249, 0.9215],
         [0.0808, 0.0769, 0.0741,  ..., 0.0738, 0.0751, 0.0785]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9228, 0.9214, 0.9225,  ..., 0.9218, 0.9236, 0.9247],
         [0.0772, 0.0786, 0.0775,  ..., 0.0782, 0.0764, 0.0753]],
        [[0.9181, 0.9263, 0.9221,  ..., 0.9223, 0.9207, 0.9194],
         [0.0819, 0.0737, 0.0779,  ..., 0.0777, 0.0793, 0.0806]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9274, 0.9032, 0.9252,  ..., 0.9241, 0.9285, 0.9253],
         [0.0726, 0.0968, 0.0748,  ..., 0.0759, 0.0715, 0.0747]],
        [[0.7752, 0.9222, 0.9288,  ..., 0.9251, 0.9311, 0.9285],
         [0.2248, 0.0778, 0.0712,  ..., 0.0749, 0.0689, 0.0715]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9255, 0.9299, 0.9211,  ..., 0.9268, 0.9201, 0.9267],
         [0.0745, 0.0701, 0.0789,  ..., 0.0732, 0.0799, 0.0733]],
        [[0.9194, 0.9244, 0.9216,  ..., 0.9249, 0.9212, 0.9248],
         [0.0806, 0.0756, 0.0784,  ..., 0.0751, 0.0788, 0.0752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:54:06,987 [Process: 0] Synchronize training processes
2024-08-18 14:54:06,987 [Process: 0] Evaluating...
2024-08-18 14:54:06,989 [Process: 0] EPOCH 118:
2024-08-18 14:54:06,991 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:54:08,241 [Process: 0] Synchronize training processes
2024-08-18 14:54:08,241 [Process: 0] Evaluating...
2024-08-18 14:54:08,243 [Process: 0] EPOCH 119:
2024-08-18 14:54:08,245 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9229, 0.8953, 0.9249,  ..., 0.9256, 0.9263, 0.9317],
         [0.0771, 0.1047, 0.0751,  ..., 0.0744, 0.0737, 0.0683]],
        [[0.9112, 0.9222, 0.9273,  ..., 0.9217, 0.9264, 0.9255],
         [0.0888, 0.0778, 0.0727,  ..., 0.0783, 0.0736, 0.0745]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9276, 0.9279, 0.9222,  ..., 0.9250, 0.9240, 0.9233],
         [0.0724, 0.0721, 0.0778,  ..., 0.0750, 0.0760, 0.0767]],
        [[0.9262, 0.9293, 0.9238,  ..., 0.9217, 0.9236, 0.9276],
         [0.0738, 0.0707, 0.0762,  ..., 0.0783, 0.0764, 0.0724]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9300, 0.8947, 0.9240,  ..., 0.9267, 0.9295, 0.9258],
         [0.0700, 0.1053, 0.0760,  ..., 0.0733, 0.0705, 0.0742]],
        [[0.9099, 0.9267, 0.9250,  ..., 0.9215, 0.9267, 0.9277],
         [0.0901, 0.0733, 0.0750,  ..., 0.0785, 0.0733, 0.0723]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:54:09,496 [Process: 0] Synchronize training processes
2024-08-18 14:54:09,496 [Process: 0] Evaluating...
2024-08-18 14:54:09,498 [Process: 0] EPOCH 120:
2024-08-18 14:54:09,500 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9210, 0.9085, 0.9237,  ..., 0.9234, 0.9216, 0.9204],
         [0.0790, 0.0915, 0.0763,  ..., 0.0766, 0.0784, 0.0796]],
        [[0.9181, 0.9281, 0.9251,  ..., 0.9183, 0.9231, 0.9261],
         [0.0819, 0.0719, 0.0749,  ..., 0.0817, 0.0769, 0.0739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9387, 0.8972, 0.9409,  ..., 0.9383, 0.9403, 0.9395],
         [0.0613, 0.1028, 0.0591,  ..., 0.0617, 0.0597, 0.0605]],
        [[0.9252, 0.9376, 0.9334,  ..., 0.9362, 0.9304, 0.9357],
         [0.0748, 0.0624, 0.0666,  ..., 0.0638, 0.0696, 0.0643]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9265, 0.9152, 0.9210,  ..., 0.9283, 0.9255, 0.9198],
         [0.0735, 0.0848, 0.0790,  ..., 0.0717, 0.0745, 0.0802]],
        [[0.9204, 0.9251, 0.9161,  ..., 0.9177, 0.9211, 0.9199],
         [0.0796, 0.0749, 0.0839,  ..., 0.0823, 0.0789, 0.0801]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:54:10,751 [Process: 0] Synchronize training processes
2024-08-18 14:54:10,751 [Process: 0] Evaluating...
2024-08-18 14:54:10,753 [Process: 0] EPOCH 121:
2024-08-18 14:54:10,755 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:54:12,008 [Process: 0] Synchronize training processes
2024-08-18 14:54:12,008 [Process: 0] Evaluating...
2024-08-18 14:54:12,016 [Process: 0] EPOCH 122:
2024-08-18 14:54:12,017 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9349, 0.8864, 0.9411,  ..., 0.9392, 0.9491, 0.9439],
         [0.0651, 0.1136, 0.0589,  ..., 0.0608, 0.0509, 0.0561]],
        [[0.9325, 0.9430, 0.9482,  ..., 0.9435, 0.9469, 0.9485],
         [0.0675, 0.0570, 0.0518,  ..., 0.0565, 0.0531, 0.0515]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9189, 0.9087, 0.9198,  ..., 0.9224, 0.9252, 0.9167],
         [0.0811, 0.0913, 0.0802,  ..., 0.0776, 0.0748, 0.0833]],
        [[0.9268, 0.9195, 0.9222,  ..., 0.9214, 0.9235, 0.9218],
         [0.0732, 0.0805, 0.0778,  ..., 0.0786, 0.0765, 0.0782]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9466, 0.9039, 0.9447,  ..., 0.9393, 0.9410, 0.9284],
         [0.0534, 0.0961, 0.0553,  ..., 0.0607, 0.0590, 0.0716]],
        [[0.5000, 0.9281, 0.9465,  ..., 0.9412, 0.9436, 0.9372],
         [0.5000, 0.0719, 0.0535,  ..., 0.0588, 0.0564, 0.0628]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:54:13,270 [Process: 0] Synchronize training processes
2024-08-18 14:54:13,271 [Process: 0] Evaluating...
2024-08-18 14:54:13,274 [Process: 0] EPOCH 123:
2024-08-18 14:54:13,277 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9207, 0.8934, 0.9120,  ..., 0.9200, 0.9202, 0.9245],
         [0.0793, 0.1066, 0.0880,  ..., 0.0800, 0.0798, 0.0755]],
        [[0.9188, 0.9233, 0.9255,  ..., 0.9174, 0.9222, 0.9277],
         [0.0812, 0.0767, 0.0745,  ..., 0.0826, 0.0778, 0.0723]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9405, 0.9175, 0.9465,  ..., 0.9385, 0.9396, 0.9366],
         [0.0595, 0.0825, 0.0535,  ..., 0.0615, 0.0604, 0.0634]],
        [[0.5000, 0.9295, 0.9332,  ..., 0.9502, 0.9306, 0.9378],
         [0.5000, 0.0705, 0.0668,  ..., 0.0498, 0.0694, 0.0622]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9285, 0.8849, 0.9260,  ..., 0.9211, 0.9157, 0.9275],
         [0.0715, 0.1151, 0.0740,  ..., 0.0789, 0.0843, 0.0725]],
        [[0.9189, 0.9194, 0.9231,  ..., 0.9253, 0.9210, 0.9198],
         [0.0811, 0.0806, 0.0769,  ..., 0.0747, 0.0790, 0.0802]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
2024-08-18 14:54:14,529 [Process: 0] Synchronize training processes
2024-08-18 14:54:14,530 [Process: 0] Evaluating...
2024-08-18 14:54:14,533 [Process: 0] EPOCH 124:
2024-08-18 14:54:14,536 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:54:15,788 [Process: 0] Synchronize training processes
2024-08-18 14:54:15,788 [Process: 0] Evaluating...
2024-08-18 14:54:15,790 [Process: 0] EPOCH 125:
2024-08-18 14:54:15,792 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9521, 0.9100, 0.9350,  ..., 0.9463, 0.9346, 0.9495],
         [0.0479, 0.0900, 0.0650,  ..., 0.0537, 0.0654, 0.0505]],
        [[0.9495, 0.9365, 0.9395,  ..., 0.9357, 0.9246, 0.9330],
         [0.0505, 0.0635, 0.0605,  ..., 0.0643, 0.0754, 0.0670]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9257, 0.9154, 0.9339,  ..., 0.9279, 0.9365, 0.9316],
         [0.0743, 0.0846, 0.0661,  ..., 0.0721, 0.0635, 0.0684]],
        [[0.9223, 0.9089, 0.9251,  ..., 0.9169, 0.9180, 0.9288],
         [0.0777, 0.0911, 0.0749,  ..., 0.0831, 0.0820, 0.0712]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9448, 0.9163, 0.9375,  ..., 0.9352, 0.9365, 0.9441],
         [0.0552, 0.0837, 0.0625,  ..., 0.0648, 0.0635, 0.0559]],
        [[0.9381, 0.9411, 0.9415,  ..., 0.9440, 0.9407, 0.9417],
         [0.0619, 0.0589, 0.0585,  ..., 0.0560, 0.0593, 0.0583]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9264, 0.9268, 0.9373,  ..., 0.9295, 0.9297, 0.9261],
         [0.0736, 0.0732, 0.0627,  ..., 0.0705, 0.0703, 0.0739]],
        [[0.9228, 0.9284, 0.9202,  ..., 0.9217, 0.9226, 0.9224],
         [0.0772, 0.0716, 0.0798,  ..., 0.0783, 0.0774, 0.0776]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:54:17,043 [Process: 0] Synchronize training processes
2024-08-18 14:54:17,043 [Process: 0] Evaluating...
2024-08-18 14:54:17,045 [Process: 0] EPOCH 126:
2024-08-18 14:54:17,047 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:54:18,298 [Process: 0] Synchronize training processes
2024-08-18 14:54:18,298 [Process: 0] Evaluating...
2024-08-18 14:54:18,300 [Process: 0] EPOCH 127:
2024-08-18 14:54:18,302 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9383, 0.9163, 0.9488,  ..., 0.9370, 0.9487, 0.9417],
         [0.0617, 0.0837, 0.0512,  ..., 0.0630, 0.0513, 0.0583]],
        [[0.9292, 0.9443, 0.9459,  ..., 0.9415, 0.9390, 0.9393],
         [0.0708, 0.0557, 0.0541,  ..., 0.0585, 0.0610, 0.0607]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9230, 0.9287, 0.9258,  ..., 0.9274, 0.9326, 0.9314],
         [0.0770, 0.0713, 0.0742,  ..., 0.0726, 0.0674, 0.0686]],
        [[0.9199, 0.9270, 0.9242,  ..., 0.9240, 0.9294, 0.9264],
         [0.0801, 0.0730, 0.0758,  ..., 0.0760, 0.0706, 0.0736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9382, 0.9091, 0.9334,  ..., 0.9367, 0.9440, 0.9390],
         [0.0618, 0.0909, 0.0666,  ..., 0.0633, 0.0560, 0.0610]],
        [[0.9416, 0.9334, 0.9445,  ..., 0.9469, 0.9439, 0.9377],
         [0.0584, 0.0666, 0.0555,  ..., 0.0531, 0.0561, 0.0623]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:54:19,553 [Process: 0] Synchronize training processes
2024-08-18 14:54:19,554 [Process: 0] Evaluating...
2024-08-18 14:54:19,555 [Process: 0] EPOCH 128:
2024-08-18 14:54:19,557 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9225, 0.9261, 0.9242,  ..., 0.9345, 0.9296, 0.9298],
         [0.0775, 0.0739, 0.0758,  ..., 0.0655, 0.0704, 0.0702]],
        [[0.9282, 0.9294, 0.9274,  ..., 0.9278, 0.9300, 0.9258],
         [0.0718, 0.0706, 0.0726,  ..., 0.0722, 0.0700, 0.0742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9416, 0.8987, 0.9418,  ..., 0.9446, 0.9316, 0.9446],
         [0.0584, 0.1013, 0.0582,  ..., 0.0554, 0.0684, 0.0554]],
        [[0.9401, 0.9440, 0.9450,  ..., 0.9468, 0.9472, 0.9488],
         [0.0599, 0.0560, 0.0550,  ..., 0.0532, 0.0528, 0.0512]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9266, 0.9329, 0.9277,  ..., 0.9338, 0.9335, 0.9294],
         [0.0734, 0.0671, 0.0723,  ..., 0.0662, 0.0665, 0.0706]],
        [[0.9288, 0.9308, 0.9303,  ..., 0.9339, 0.9332, 0.9314],
         [0.0712, 0.0692, 0.0697,  ..., 0.0661, 0.0668, 0.0686]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:54:20,807 [Process: 0] Synchronize training processes
2024-08-18 14:54:20,807 [Process: 0] Evaluating...
2024-08-18 14:54:20,809 [Process: 0] EPOCH 129:
2024-08-18 14:54:20,811 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:54:22,063 [Process: 0] Synchronize training processes
2024-08-18 14:54:22,064 [Process: 0] Evaluating...
2024-08-18 14:54:22,065 [Process: 0] EPOCH 130:
2024-08-18 14:54:22,067 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9400, 0.9310, 0.9429,  ..., 0.9435, 0.9478, 0.9444],
         [0.0600, 0.0690, 0.0571,  ..., 0.0565, 0.0522, 0.0556]],
        [[0.9401, 0.9377, 0.9451,  ..., 0.9502, 0.9419, 0.9449],
         [0.0599, 0.0623, 0.0549,  ..., 0.0498, 0.0581, 0.0551]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9307, 0.9331, 0.9341,  ..., 0.9372, 0.9293, 0.9352],
         [0.0693, 0.0669, 0.0659,  ..., 0.0628, 0.0707, 0.0648]],
        [[0.9350, 0.9331, 0.9356,  ..., 0.9310, 0.9351, 0.9351],
         [0.0650, 0.0669, 0.0644,  ..., 0.0690, 0.0649, 0.0649]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9467, 0.9241, 0.9463,  ..., 0.9455, 0.9487, 0.9425],
         [0.0533, 0.0759, 0.0537,  ..., 0.0545, 0.0513, 0.0575]],
        [[0.9354, 0.9500, 0.9436,  ..., 0.9490, 0.9443, 0.9428],
         [0.0646, 0.0500, 0.0564,  ..., 0.0510, 0.0557, 0.0572]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
2024-08-18 14:54:23,321 [Process: 0] Synchronize training processes
2024-08-18 14:54:23,322 [Process: 0] Evaluating...
2024-08-18 14:54:23,324 [Process: 0] EPOCH 131:
2024-08-18 14:54:23,326 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9347, 0.9315, 0.9331,  ..., 0.9315, 0.9365, 0.9313],
         [0.0653, 0.0685, 0.0669,  ..., 0.0685, 0.0635, 0.0687]],
        [[0.9373, 0.9336, 0.9373,  ..., 0.9323, 0.9332, 0.9286],
         [0.0627, 0.0664, 0.0627,  ..., 0.0677, 0.0668, 0.0714]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9397, 0.9345, 0.9426,  ..., 0.9475, 0.9426, 0.9477],
         [0.0603, 0.0655, 0.0574,  ..., 0.0525, 0.0574, 0.0523]],
        [[0.9289, 0.9453, 0.9411,  ..., 0.9454, 0.9448, 0.9492],
         [0.0711, 0.0547, 0.0589,  ..., 0.0546, 0.0552, 0.0508]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9296, 0.9337, 0.9307,  ..., 0.9306, 0.9342, 0.9308],
         [0.0704, 0.0663, 0.0693,  ..., 0.0694, 0.0658, 0.0692]],
        [[0.9407, 0.9388, 0.9414,  ..., 0.9373, 0.9364, 0.9387],
         [0.0593, 0.0612, 0.0586,  ..., 0.0627, 0.0636, 0.0613]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
2024-08-18 14:54:24,610 [Process: 0] Synchronize training processes
2024-08-18 14:54:24,611 [Process: 0] Evaluating...
2024-08-18 14:54:24,616 [Process: 0] EPOCH 132:
2024-08-18 14:54:24,618 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:54:25,870 [Process: 0] Synchronize training processes
2024-08-18 14:54:25,871 [Process: 0] Evaluating...
2024-08-18 14:54:25,873 [Process: 0] EPOCH 133:
2024-08-18 14:54:25,874 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9481, 0.9443, 0.9465,  ..., 0.9411, 0.9526, 0.9480],
         [0.0519, 0.0557, 0.0535,  ..., 0.0589, 0.0474, 0.0520]],
        [[0.9465, 0.9525, 0.9519,  ..., 0.9519, 0.9509, 0.9453],
         [0.0535, 0.0475, 0.0481,  ..., 0.0481, 0.0491, 0.0547]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9359, 0.9345, 0.9368,  ..., 0.9321, 0.9330, 0.9391],
         [0.0641, 0.0655, 0.0632,  ..., 0.0679, 0.0670, 0.0609]],
        [[0.9381, 0.9322, 0.9372,  ..., 0.9369, 0.9380, 0.9386],
         [0.0619, 0.0678, 0.0628,  ..., 0.0631, 0.0620, 0.0614]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9416, 0.9461, 0.9418,  ..., 0.9487, 0.9422, 0.9430],
         [0.0584, 0.0539, 0.0582,  ..., 0.0513, 0.0578, 0.0570]],
        [[0.9384, 0.9417, 0.9390,  ..., 0.9434, 0.9371, 0.9466],
         [0.0616, 0.0583, 0.0610,  ..., 0.0566, 0.0629, 0.0534]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 2048])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 2048, 3])
-----align shape: torch.Size([2, 16, 2048])
------x shape: torch.Size([2, 35, 2048])
------fusion x shape: torch.Size([2, 2, 2048])
------target shape: torch.Size([2, 2048, 2])
tensor([[[0.9320, 0.9358, 0.9299,  ..., 0.9332, 0.9337, 0.9313],
         [0.0680, 0.0642, 0.0701,  ..., 0.0668, 0.0663, 0.0687]],
        [[0.9303, 0.9360, 0.9311,  ..., 0.9353, 0.9347, 0.9327],
         [0.0697, 0.0640, 0.0689,  ..., 0.0647, 0.0653, 0.0673]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 2048])
mask shape: torch.Size([2, 2048, 2])
shape of inputs: torch.Size([2, 2, 2048])
shape of targets: torch.Size([2, 2, 2048])
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 203, in train_one_epoch
    loss.backward()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/autograd/__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt