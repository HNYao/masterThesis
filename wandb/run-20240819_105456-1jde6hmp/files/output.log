2024-08-19 10:55:00,685 [Worker 0] Is distributed: False
2024-08-19 10:55:00,686 [Process: 0] Starting training
2024-08-19 10:55:00,686 [Process: 0] EPOCH 1:
2024-08-19 10:55:00,688 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 10:55:02,422 [Process: 0] Synchronize training processes
2024-08-19 10:55:02,422 [Process: 0] Evaluating...
Error executing job with overrides: []
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 356, in train
    self.model.inference_heatmap_4cls()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/GeoL.py", line 141, in inference_heatmap_4cls
    point_cloud.colors = o3d.utility.Vector3dVector(colors[0].detach().numpy())
RuntimeError: Unable to cast Python instance of type <class 'numpy.float32'> to C++ type '?' (#define PYBIND11_DETAILED_ERROR_MESSAGES or compile in debug mode for details)
Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2013, 0.3420, 0.1496,  ..., 0.1481, 0.4452, 0.1980],
         [0.3961, 0.3088, 0.1496,  ..., 0.1420, 0.1849, 0.4061],
         [0.2013, 0.1928, 0.5388,  ..., 0.5084, 0.1849, 0.1980],
         [0.2013, 0.1564, 0.1620,  ..., 0.2015, 0.1849, 0.1980]],
        [[0.3098, 0.1502, 0.6037,  ..., 0.2301, 0.2239, 0.1630],
         [0.1867, 0.4153, 0.0751,  ..., 0.3520, 0.2239, 0.2199],
         [0.1668, 0.2519, 0.0751,  ..., 0.2089, 0.3282, 0.1630],
         [0.3367, 0.1825, 0.2462,  ..., 0.2089, 0.2239, 0.4541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2775, 0.2572, 0.2711,  ..., 0.2924, 0.2648, 0.2743],
         [0.2722, 0.2696, 0.2616,  ..., 0.2779, 0.2841, 0.2476],
         [0.1950, 0.2239, 0.2336,  ..., 0.1877, 0.2151, 0.1976],
         [0.2553, 0.2493, 0.2336,  ..., 0.2419, 0.2360, 0.2804]],
        [[0.2974, 0.2468, 0.2500,  ..., 0.0744, 0.0481, 0.2935],
         [0.2075, 0.2390, 0.2500,  ..., 0.0744, 0.2014, 0.2641],
         [0.1931, 0.2429, 0.2500,  ..., 0.7769, 0.7024, 0.2005],
         [0.3020, 0.2713, 0.2500,  ..., 0.0744, 0.0481, 0.2419]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [1., 1., 1.,  ..., 1., 1., 1.]])