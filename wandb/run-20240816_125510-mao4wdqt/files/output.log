2024-08-16 12:55:15,849 [Worker 0] Is distributed: False
2024-08-16 12:55:15,849 [Process: 0] Starting training
2024-08-16 12:55:15,850 [Process: 0] EPOCH 1:
2024-08-16 12:55:15,852 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2288, 0.2102, 0.2691,  ..., 0.3613, 0.3844, 0.3568],
         [0.2360, 0.3695, 0.2254,  ..., 0.2129, 0.2029, 0.2303],
         [0.3065, 0.2102, 0.2067,  ..., 0.2129, 0.2029, 0.2065],
         [0.2288, 0.2102, 0.2988,  ..., 0.2129, 0.2099, 0.2065]],
        [[0.2659, 0.2759, 0.2439,  ..., 0.2364, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2683,  ..., 0.2658, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2439,  ..., 0.2615, 0.3221, 0.2638],
         [0.2447, 0.2414, 0.2439,  ..., 0.2364, 0.2260, 0.2454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:55:18,417 [Process: 0] Synchronize training processes
2024-08-16 12:55:18,417 [Process: 0] Evaluating...
2024-08-16 12:55:18,420 [Process: 0] EPOCH 2:
2024-08-16 12:55:18,422 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2475, 0.2480, 0.3857,  ..., 0.2536, 0.2409, 0.2255],
         [0.2475, 0.2559, 0.2048,  ..., 0.2488, 0.3186, 0.3160],
         [0.2575, 0.2480, 0.2048,  ..., 0.2488, 0.2203, 0.2101],
         [0.2475, 0.2480, 0.2048,  ..., 0.2488, 0.2203, 0.2484]],
        [[0.2213, 0.1947, 0.2841,  ..., 0.2153, 0.2299, 0.2407],
         [0.2307, 0.1947, 0.2441,  ..., 0.4379, 0.2990, 0.2407],
         [0.3267, 0.4158, 0.2455,  ..., 0.1342, 0.3083, 0.2778],
         [0.2213, 0.1947, 0.2263,  ..., 0.2127, 0.1628, 0.2407]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2865, 0.2806, 0.2719,  ..., 0.2870, 0.2455, 0.2914],
         [0.2620, 0.1912, 0.3153,  ..., 0.2102, 0.2532, 0.2409],
         [0.2258, 0.1781, 0.1913,  ..., 0.1740, 0.2500, 0.1957],
         [0.2258, 0.3501, 0.2215,  ..., 0.3288, 0.2512, 0.2719]],
        [[0.2396, 0.2447, 0.2500,  ..., 0.2418, 0.2500, 0.2346],
         [0.2813, 0.2658, 0.2500,  ..., 0.2418, 0.2500, 0.2346],
         [0.2396, 0.2447, 0.2500,  ..., 0.2470, 0.2500, 0.2962],
         [0.2396, 0.2447, 0.2500,  ..., 0.2693, 0.2500, 0.2346]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:55:20,348 [Process: 0] Synchronize training processes
2024-08-16 12:55:20,348 [Process: 0] Evaluating...
2024-08-16 12:55:20,350 [Process: 0] EPOCH 3:
2024-08-16 12:55:20,352 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2505, 0.1424, 0.1460,  ..., 0.2393, 0.1979, 0.2339],
         [0.3664, 0.5022, 0.4750,  ..., 0.2393, 0.1979, 0.2882],
         [0.1268, 0.2130, 0.1460,  ..., 0.2393, 0.1979, 0.2204],
         [0.2563, 0.1424, 0.2330,  ..., 0.2821, 0.4062, 0.2575]],
        [[0.3140, 0.5129, 0.3144,  ..., 0.2527, 0.4282, 0.3976],
         [0.2027, 0.0777, 0.0848,  ..., 0.2857, 0.1941, 0.1807],
         [0.2027, 0.1090, 0.3972,  ..., 0.2308, 0.1146, 0.2409],
         [0.2807, 0.3003, 0.2036,  ..., 0.2308, 0.2631, 0.1807]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2195, 0.2680, 0.2072,  ..., 0.1994, 0.2474, 0.2170],
         [0.3310, 0.2510, 0.2622,  ..., 0.2300, 0.2577, 0.3842],
         [0.2195, 0.1780, 0.1837,  ..., 0.2332, 0.2474, 0.1994],
         [0.2301, 0.3030, 0.3468,  ..., 0.3374, 0.2474, 0.1994]],
        [[0.3266, 0.2478, 0.2644,  ..., 0.2655, 0.2508, 0.2306],
         [0.1940, 0.2746, 0.2369,  ..., 0.3073, 0.2566, 0.2451],
         [0.1940, 0.2318, 0.2785,  ..., 0.2246, 0.2612, 0.2306],
         [0.2855, 0.2459, 0.2202,  ..., 0.2026, 0.2315, 0.2938]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:55:22,277 [Process: 0] Synchronize training processes
2024-08-16 12:55:22,278 [Process: 0] Evaluating...
2024-08-16 12:55:22,280 [Process: 0] EPOCH 4:
2024-08-16 12:55:22,282 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.8031, 0.4891, 0.1975,  ..., 0.3868, 0.1920, 0.3607],
         [0.0553, 0.0994, 0.3370,  ..., 0.2044, 0.5239, 0.1628],
         [0.0553, 0.3120, 0.2679,  ..., 0.2044, 0.1421, 0.3363],
         [0.0863, 0.0994, 0.1975,  ..., 0.2044, 0.1421, 0.1402]],
        [[0.1210, 0.1241, 0.2447,  ..., 0.1552, 0.0954, 0.1324],
         [0.3006, 0.2515, 0.2447,  ..., 0.1552, 0.3961, 0.1324],
         [0.1210, 0.1241, 0.2658,  ..., 0.4470, 0.3353, 0.6029],
         [0.4575, 0.5003, 0.2447,  ..., 0.2426, 0.1732, 0.1324]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2836, 0.2816,  ..., 0.2889, 0.2721, 0.3539],
         [0.2500, 0.2035, 0.2395,  ..., 0.2268, 0.2313, 0.2406],
         [0.2500, 0.1330, 0.2395,  ..., 0.2099, 0.2235, 0.2021],
         [0.2500, 0.3799, 0.2395,  ..., 0.2743, 0.2730, 0.2034]],
        [[0.2136, 0.2041, 0.2544,  ..., 0.2368, 0.2148, 0.2393],
         [0.3435, 0.3574, 0.3005,  ..., 0.2896, 0.3416, 0.2820],
         [0.2136, 0.2041, 0.2085,  ..., 0.2368, 0.2148, 0.2393],
         [0.2294, 0.2343, 0.2365,  ..., 0.2368, 0.2288, 0.2393]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:55:24,192 [Process: 0] Synchronize training processes
2024-08-16 12:55:24,193 [Process: 0] Evaluating...
2024-08-16 12:55:24,195 [Process: 0] EPOCH 5:
2024-08-16 12:55:24,197 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2329, 0.2196, 0.3373,  ..., 0.2500, 0.3637, 0.3118],
         [0.2329, 0.2196, 0.2931,  ..., 0.2500, 0.1979, 0.2047],
         [0.2879, 0.3411, 0.1838,  ..., 0.2500, 0.2405, 0.2047],
         [0.2463, 0.2196, 0.1858,  ..., 0.2500, 0.1979, 0.2788]],
        [[0.2500, 0.1870, 0.3673,  ..., 0.2529, 0.2500, 0.2282],
         [0.2500, 0.3685, 0.2248,  ..., 0.2382, 0.2500, 0.1704],
         [0.2500, 0.1889, 0.2040,  ..., 0.2108, 0.2500, 0.1704],
         [0.2500, 0.2555, 0.2040,  ..., 0.2981, 0.2500, 0.4309]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2329, 0.2335, 0.3078,  ..., 0.2958, 0.2641, 0.2721],
         [0.2245, 0.3034, 0.2307,  ..., 0.2751, 0.2723, 0.1961],
         [0.2245, 0.1965, 0.2307,  ..., 0.2145, 0.2368, 0.1961],
         [0.3182, 0.2665, 0.2307,  ..., 0.2145, 0.2268, 0.3356]],
        [[0.2500, 0.2300, 0.2465,  ..., 0.2775, 0.2500, 0.2384],
         [0.2500, 0.3003, 0.2527,  ..., 0.2408, 0.2500, 0.2384],
         [0.2500, 0.2300, 0.2465,  ..., 0.2408, 0.2500, 0.2384],
         [0.2500, 0.2398, 0.2543,  ..., 0.2408, 0.2500, 0.2848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:55:26,111 [Process: 0] Synchronize training processes
2024-08-16 12:55:26,111 [Process: 0] Evaluating...
2024-08-16 12:55:26,113 [Process: 0] EPOCH 6:
2024-08-16 12:55:26,115 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2882, 0.2500, 0.2347,  ..., 0.1720, 0.2500, 0.3057],
         [0.2314, 0.2500, 0.2347,  ..., 0.3019, 0.2500, 0.2541],
         [0.2314, 0.2500, 0.2830,  ..., 0.2044, 0.2500, 0.2201],
         [0.2490, 0.2500, 0.2476,  ..., 0.3217, 0.2500, 0.2201]],
        [[0.1301, 0.1432, 0.0939,  ..., 0.2180, 0.1454, 0.1326],
         [0.5532, 0.1432, 0.7183,  ..., 0.1662, 0.0201, 0.5397],
         [0.2056, 0.5703, 0.0939,  ..., 0.2142, 0.0645, 0.2124],
         [0.1111, 0.1432, 0.0939,  ..., 0.4016, 0.7700, 0.1153]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2367, 0.2500, 0.2058,  ..., 0.2259, 0.2090, 0.3258],
         [0.2900, 0.2500, 0.2058,  ..., 0.2088, 0.2090, 0.2215],
         [0.2367, 0.2500, 0.2318,  ..., 0.1991, 0.2090, 0.2088],
         [0.2367, 0.2500, 0.3565,  ..., 0.3662, 0.3730, 0.2439]],
        [[0.2666, 0.2661, 0.3225,  ..., 0.2842, 0.2500, 0.2711],
         [0.2637, 0.2446, 0.2258,  ..., 0.2298, 0.2500, 0.2430],
         [0.2279, 0.2446, 0.2258,  ..., 0.2081, 0.2500, 0.2430],
         [0.2417, 0.2446, 0.2258,  ..., 0.2778, 0.2500, 0.2430]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:55:28,044 [Process: 0] Synchronize training processes
2024-08-16 12:55:28,044 [Process: 0] Evaluating...
2024-08-16 12:55:28,046 [Process: 0] EPOCH 7:
2024-08-16 12:55:28,048 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1752, 0.3106, 0.2384,  ..., 0.3346, 0.6659, 0.1761],
         [0.4744, 0.1272, 0.2849,  ..., 0.2076, 0.0767, 0.2864],
         [0.1752, 0.1272, 0.2384,  ..., 0.1167, 0.0767, 0.1198],
         [0.1752, 0.4350, 0.2384,  ..., 0.3411, 0.1807, 0.4177]],
        [[0.2154, 0.1593, 0.1217,  ..., 0.1872, 0.1097, 0.1121],
         [0.3181, 0.1335, 0.3144,  ..., 0.4385, 0.2268, 0.1121],
         [0.1971, 0.4171, 0.2832,  ..., 0.1872, 0.4120, 0.5179],
         [0.2693, 0.2902, 0.2807,  ..., 0.1872, 0.2515, 0.2578]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2277, 0.2041, 0.2370,  ..., 0.2254, 0.2473, 0.2218],
         [0.1951, 0.2946, 0.2697,  ..., 0.3152, 0.1723, 0.2218],
         [0.2102, 0.1954, 0.1927,  ..., 0.2254, 0.2115, 0.2794],
         [0.3670, 0.3059, 0.3006,  ..., 0.2340, 0.3689, 0.2770]],
        [[0.2293, 0.2486, 0.2779,  ..., 0.2472, 0.2168, 0.2221],
         [0.3122, 0.2486, 0.2415,  ..., 0.2585, 0.3496, 0.3336],
         [0.2293, 0.2486, 0.2294,  ..., 0.2472, 0.2168, 0.2221],
         [0.2293, 0.2543, 0.2512,  ..., 0.2472, 0.2168, 0.2221]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:55:29,965 [Process: 0] Synchronize training processes
2024-08-16 12:55:29,966 [Process: 0] Evaluating...
2024-08-16 12:55:29,968 [Process: 0] EPOCH 8:
2024-08-16 12:55:29,970 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3279, 0.2838, 0.2162,  ..., 0.3545, 0.2226, 0.3167],
         [0.2661, 0.2273, 0.2612,  ..., 0.2678, 0.3375, 0.2664],
         [0.1899, 0.2273, 0.2838,  ..., 0.1369, 0.2200, 0.1864],
         [0.2161, 0.2615, 0.2388,  ..., 0.2408, 0.2200, 0.2305]],
        [[0.1032, 0.1957, 0.0993,  ..., 0.0996, 0.2495, 0.1738],
         [0.5442, 0.1957, 0.2613,  ..., 0.1066, 0.2495, 0.4785],
         [0.2495, 0.4128, 0.5402,  ..., 0.2677, 0.2495, 0.1738],
         [0.1032, 0.1957, 0.0993,  ..., 0.5261, 0.2515, 0.1738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2255, 0.2293, 0.2078,  ..., 0.2196, 0.3317, 0.3329],
         [0.2182, 0.2293, 0.1926,  ..., 0.1884, 0.2211, 0.1603],
         [0.2015, 0.2293, 0.1926,  ..., 0.1884, 0.2036, 0.1656],
         [0.3548, 0.3121, 0.4070,  ..., 0.4037, 0.2435, 0.3412]],
        [[0.2638, 0.2662, 0.2495,  ..., 0.3285, 0.2978, 0.2427],
         [0.3260, 0.3111, 0.2629,  ..., 0.2463, 0.2341, 0.2427],
         [0.2051, 0.1817, 0.2554,  ..., 0.2126, 0.2341, 0.2720],
         [0.2051, 0.2411, 0.2322,  ..., 0.2126, 0.2341, 0.2427]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:55:31,892 [Process: 0] Synchronize training processes
2024-08-16 12:55:31,892 [Process: 0] Evaluating...
2024-08-16 12:55:31,894 [Process: 0] EPOCH 9:
2024-08-16 12:55:31,896 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2101, 0.1975, 0.3052,  ..., 0.4442, 0.1369, 0.1958],
         [0.2005, 0.2188, 0.0399,  ..., 0.2047, 0.1369, 0.1958],
         [0.2778, 0.1708, 0.0783,  ..., 0.1756, 0.5892, 0.4061],
         [0.3117, 0.4130, 0.5766,  ..., 0.1756, 0.1369, 0.2024]],
        [[0.2407, 0.2497, 0.2881,  ..., 0.3240, 0.2246, 0.3151],
         [0.3313, 0.3232, 0.3884,  ..., 0.2995, 0.3640, 0.3082],
         [0.2140, 0.2039, 0.1601,  ..., 0.1398, 0.2057, 0.1449],
         [0.2140, 0.2233, 0.1635,  ..., 0.2367, 0.2057, 0.2318]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2129, 0.1713, 0.1984,  ..., 0.2107, 0.2595, 0.2220],
         [0.1650, 0.2109, 0.1933,  ..., 0.2107, 0.1822, 0.2415],
         [0.1650, 0.2358, 0.1933,  ..., 0.2107, 0.2325, 0.2766],
         [0.4570, 0.3820, 0.4149,  ..., 0.3678, 0.3257, 0.2599]],
        [[0.2363, 0.2500, 0.2505,  ..., 0.2334, 0.2432, 0.2500],
         [0.2912, 0.2500, 0.2577,  ..., 0.2334, 0.2703, 0.2500],
         [0.2363, 0.2500, 0.2439,  ..., 0.2334, 0.2432, 0.2500],
         [0.2363, 0.2500, 0.2479,  ..., 0.2998, 0.2432, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 12:55:33,814 [Process: 0] Synchronize training processes
2024-08-16 12:55:33,814 [Process: 0] Evaluating...
2024-08-16 12:55:33,816 [Process: 0] EPOCH 10:
2024-08-16 12:55:33,818 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1766, 0.1367, 0.1018,  ..., 0.3751, 0.1140, 0.1111],
         [0.1766, 0.1367, 0.1273,  ..., 0.0824, 0.1140, 0.1868],
         [0.2691, 0.2476, 0.5141,  ..., 0.1507, 0.1839, 0.2201],
         [0.3778, 0.4790, 0.2568,  ..., 0.3918, 0.5880, 0.4820]],
        [[0.2500, 0.2031, 0.4222,  ..., 0.2428, 0.3872, 0.4241],
         [0.2500, 0.3906, 0.1926,  ..., 0.4750, 0.2554, 0.1920],
         [0.2500, 0.2031, 0.1926,  ..., 0.1411, 0.1787, 0.1920],
         [0.2500, 0.2031, 0.1926,  ..., 0.1411, 0.1787, 0.1920]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2862, 0.2975, 0.2889,  ..., 0.2486, 0.2286, 0.2187],
         [0.1328, 0.1640, 0.1775,  ..., 0.1934, 0.1992, 0.2187],
         [0.1463, 0.1809, 0.1651,  ..., 0.1934, 0.2245, 0.2187],
         [0.4347, 0.3576, 0.3685,  ..., 0.3646, 0.3476, 0.3439]],
        [[0.2500, 0.2452, 0.2830,  ..., 0.2500, 0.2451, 0.2079],
         [0.2500, 0.2644, 0.2390,  ..., 0.2500, 0.2643, 0.3399],
         [0.2500, 0.2452, 0.2390,  ..., 0.2500, 0.2451, 0.2079],
         [0.2500, 0.2452, 0.2390,  ..., 0.2500, 0.2456, 0.2442]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 12:55:35,776 [Process: 0] Synchronize training processes
2024-08-16 12:55:35,776 [Process: 0] Evaluating...
2024-08-16 12:55:35,778 [Process: 0] EPOCH 11:
2024-08-16 12:55:35,780 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2000, 0.2576, 0.2323,  ..., 0.2373, 0.2187, 0.0016],
         [0.2199, 0.2103, 0.2323,  ..., 0.2373, 0.2187, 0.0016],
         [0.2234, 0.1632, 0.2323,  ..., 0.2373, 0.2406, 0.9952],
         [0.3568, 0.3688, 0.3032,  ..., 0.2880, 0.3220, 0.0016]],
        [[0.2312, 0.2325, 0.2103,  ..., 0.2687, 0.2494, 0.2929],
         [0.3063, 0.2575, 0.3885,  ..., 0.2438, 0.2494, 0.2357],
         [0.2312, 0.2776, 0.2006,  ..., 0.2438, 0.2518, 0.2357],
         [0.2312, 0.2325, 0.2006,  ..., 0.2438, 0.2494, 0.2357]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3170, 0.1930, 0.2151,  ..., 0.2285, 0.1930, 0.2500],
         [0.1588, 0.1688, 0.2151,  ..., 0.2651, 0.2129, 0.2061],
         [0.1588, 0.1987, 0.2151,  ..., 0.2285, 0.1590, 0.1984],
         [0.3654, 0.4395, 0.3546,  ..., 0.2778, 0.4351, 0.3456]],
        [[0.2896, 0.2415, 0.3274,  ..., 0.2500, 0.2500, 0.2590],
         [0.2368, 0.2430, 0.2242,  ..., 0.2500, 0.2500, 0.2470],
         [0.2368, 0.2741, 0.2242,  ..., 0.2500, 0.2500, 0.2470],
         [0.2368, 0.2415, 0.2242,  ..., 0.2500, 0.2500, 0.2470]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2413, 0.2599, 0.2500,  ..., 0.3533, 0.2066, 0.3068],
         [0.2760, 0.2467, 0.2500,  ..., 0.2156, 0.3346, 0.3225],
         [0.2413, 0.2467, 0.2500,  ..., 0.2156, 0.1801, 0.1924],
         [0.2413, 0.2467, 0.2500,  ..., 0.2156, 0.2787, 0.1783]],
        [[0.2826, 0.2060, 0.2048,  ..., 0.1276, 0.2006, 0.1117],
         [0.1516, 0.1740, 0.2048,  ..., 0.1193, 0.2006, 0.1117],
         [0.0872, 0.1613, 0.2217,  ..., 0.4277, 0.3791, 0.5236],
         [0.4785, 0.4587, 0.3687,  ..., 0.3254, 0.2198, 0.2530]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:55:37,702 [Process: 0] Synchronize training processes
2024-08-16 12:55:37,703 [Process: 0] Evaluating...
2024-08-16 12:55:37,704 [Process: 0] EPOCH 12:
2024-08-16 12:55:37,706 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2372, 0.2107, 0.1897,  ..., 0.2595, 0.1757, 0.2445],
         [0.2372, 0.2671, 0.2342,  ..., 0.1971, 0.2005, 0.2329],
         [0.2372, 0.2086, 0.1833,  ..., 0.1707, 0.1757, 0.2329],
         [0.2884, 0.3136, 0.3929,  ..., 0.3727, 0.4480, 0.2898]],
        [[0.2694, 0.2429, 0.2500,  ..., 0.2494, 0.2473, 0.2500],
         [0.2435, 0.2712, 0.2500,  ..., 0.2494, 0.2473, 0.2500],
         [0.2435, 0.2429, 0.2500,  ..., 0.2494, 0.2580, 0.2500],
         [0.2435, 0.2429, 0.2500,  ..., 0.2517, 0.2473, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0943, 0.2006, 0.2081,  ..., 0.2448, 0.1960, 0.1680],
         [0.6342, 0.2006, 0.2196,  ..., 0.2626, 0.2141, 0.1945],
         [0.0943, 0.3982, 0.2416,  ..., 0.2401, 0.1815, 0.1680],
         [0.1772, 0.2006, 0.3307,  ..., 0.2525, 0.4085, 0.4695]],
        [[0.2493, 0.3786, 0.2887,  ..., 0.2244, 0.2881, 0.2665],
         [0.1905, 0.2038, 0.1994,  ..., 0.2244, 0.2917, 0.3349],
         [0.3815, 0.2280, 0.3512,  ..., 0.3269, 0.2101, 0.1993],
         [0.1787, 0.1895, 0.1606,  ..., 0.2244, 0.2101, 0.1993]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:55:39,612 [Process: 0] Synchronize training processes
2024-08-16 12:55:39,613 [Process: 0] Evaluating...
2024-08-16 12:55:39,615 [Process: 0] EPOCH 13:
2024-08-16 12:55:39,617 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:55:41,532 [Process: 0] Synchronize training processes
2024-08-16 12:55:41,532 [Process: 0] Evaluating...
2024-08-16 12:55:41,534 [Process: 0] EPOCH 14:
2024-08-16 12:55:41,536 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1727, 0.2626, 0.2649,  ..., 0.1716, 0.1987, 0.2400],
         [0.3110, 0.3035, 0.1845,  ..., 0.2429, 0.1884, 0.3017],
         [0.1727, 0.1633, 0.1845,  ..., 0.1834, 0.1884, 0.1598],
         [0.3436, 0.2705, 0.3661,  ..., 0.4022, 0.4246, 0.2985]],
        [[0.2497, 0.2500, 0.2483,  ..., 0.2500, 0.2423, 0.2483],
         [0.2509, 0.2500, 0.2551,  ..., 0.2500, 0.2423, 0.2552],
         [0.2497, 0.2500, 0.2483,  ..., 0.2500, 0.2730, 0.2483],
         [0.2497, 0.2500, 0.2483,  ..., 0.2500, 0.2423, 0.2483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2295,  ..., 0.2642, 0.4500, 0.2426],
         [0.2500, 0.2500, 0.1060,  ..., 0.1402, 0.2384, 0.2722],
         [0.2500, 0.2500, 0.1060,  ..., 0.1402, 0.1004, 0.2426],
         [0.2500, 0.2500, 0.5586,  ..., 0.4554, 0.2111, 0.2426]],
        [[0.4384, 0.1691, 0.1977,  ..., 0.2363, 0.2500, 0.2464],
         [0.4459, 0.6736, 0.4070,  ..., 0.2193, 0.2500, 0.2480],
         [0.0533, 0.0786, 0.1977,  ..., 0.3677, 0.2500, 0.2592],
         [0.0624, 0.0786, 0.1977,  ..., 0.1767, 0.2500, 0.2464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:55:43,439 [Process: 0] Synchronize training processes
2024-08-16 12:55:43,440 [Process: 0] Evaluating...
2024-08-16 12:55:43,441 [Process: 0] EPOCH 15:
2024-08-16 12:55:43,443 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2410, 0.2764, 0.2583,  ..., 0.2066, 0.3014, 0.1955],
         [0.2293, 0.2328, 0.1527,  ..., 0.2245, 0.2177, 0.2750],
         [0.2293, 0.1725, 0.1310,  ..., 0.1989, 0.1503, 0.1955],
         [0.3004, 0.3182, 0.4581,  ..., 0.3700, 0.3305, 0.3340]],
        [[0.2500, 0.2497, 0.2500,  ..., 0.2369, 0.2500, 0.2443],
         [0.2500, 0.2508, 0.2500,  ..., 0.2893, 0.2500, 0.2672],
         [0.2500, 0.2497, 0.2500,  ..., 0.2369, 0.2500, 0.2443],
         [0.2500, 0.2497, 0.2500,  ..., 0.2369, 0.2500, 0.2443]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2320, 0.0115],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.3041, 0.0115],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2320, 0.9654],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2320, 0.0115]],
        [[0.3728, 0.2457, 0.3522,  ..., 0.2574, 0.2549, 0.3997],
         [0.2116, 0.1534, 0.2345,  ..., 0.1570, 0.2905, 0.2252],
         [0.1955, 0.1410, 0.1937,  ..., 0.1766, 0.1418, 0.1875],
         [0.2201, 0.4599, 0.2195,  ..., 0.4090, 0.3128, 0.1875]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:55:45,365 [Process: 0] Synchronize training processes
2024-08-16 12:55:45,365 [Process: 0] Evaluating...
2024-08-16 12:55:45,367 [Process: 0] EPOCH 16:
2024-08-16 12:55:45,369 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2163, 0.2114, 0.1946,  ..., 0.2415, 0.2937, 0.2473],
         [0.2141, 0.1637, 0.1946,  ..., 0.1828, 0.2051, 0.1975],
         [0.2141, 0.1328, 0.2017,  ..., 0.1828, 0.1969, 0.1710],
         [0.3554, 0.4921, 0.4091,  ..., 0.3928, 0.3043, 0.3842]],
        [[0.2500, 0.2500, 0.2474,  ..., 0.2079, 0.2486, 0.2520],
         [0.2500, 0.2500, 0.2578,  ..., 0.3764, 0.2543, 0.2897],
         [0.2500, 0.2500, 0.2474,  ..., 0.2079, 0.2486, 0.2292],
         [0.2500, 0.2500, 0.2474,  ..., 0.2079, 0.2486, 0.2292]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2015, 0.1696, 0.1478,  ..., 0.1577, 0.1246, 0.2326],
         [0.1150, 0.3900, 0.1478,  ..., 0.4521, 0.3323, 0.2352],
         [0.3546, 0.2609, 0.5566,  ..., 0.2122, 0.3346, 0.2995],
         [0.3289, 0.1794, 0.1478,  ..., 0.1780, 0.2085, 0.2326]],
        [[0.5875, 0.2886, 0.6748,  ..., 0.2799, 0.4596, 0.2561],
         [0.1293, 0.1834, 0.0775,  ..., 0.2286, 0.1750, 0.4248],
         [0.1293, 0.1834, 0.0775,  ..., 0.2286, 0.1750, 0.1402],
         [0.1539, 0.3446, 0.1701,  ..., 0.2629, 0.1903, 0.1789]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:55:47,276 [Process: 0] Synchronize training processes
2024-08-16 12:55:47,277 [Process: 0] Evaluating...
2024-08-16 12:55:47,279 [Process: 0] EPOCH 17:
2024-08-16 12:55:47,281 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1582, 0.1953, 0.1828,  ..., 0.1843, 0.2039, 0.1805],
         [0.1774, 0.1953, 0.1828,  ..., 0.1843, 0.2404, 0.1492],
         [0.1310, 0.1953, 0.1828,  ..., 0.1907, 0.2039, 0.1492],
         [0.5334, 0.4140, 0.4515,  ..., 0.4407, 0.3518, 0.5210]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2578],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2676],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2373],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2373]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3103, 0.2564, 0.1973,  ..., 0.3754, 0.2300, 0.1694],
         [0.2404, 0.3306, 0.3819,  ..., 0.2626, 0.2579, 0.2112],
         [0.1432, 0.2065, 0.2236,  ..., 0.1810, 0.2821, 0.4806],
         [0.3061, 0.2065, 0.1973,  ..., 0.1810, 0.2300, 0.1388]],
        [[0.2399, 0.1668, 0.1645,  ..., 0.1923, 0.3284, 0.2422],
         [0.1706, 0.1668, 0.1645,  ..., 0.1336, 0.2239, 0.2422],
         [0.4189, 0.4996, 0.5065,  ..., 0.1336, 0.2239, 0.2620],
         [0.1706, 0.1668, 0.1645,  ..., 0.5405, 0.2239, 0.2535]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:55:49,190 [Process: 0] Synchronize training processes
2024-08-16 12:55:49,191 [Process: 0] Evaluating...
2024-08-16 12:55:49,192 [Process: 0] EPOCH 18:
2024-08-16 12:55:49,194 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2243, 0.1820, 0.2642,  ..., 0.2428, 0.2015, 0.1508],
         [0.2132, 0.1839, 0.2440,  ..., 0.1705, 0.2041, 0.1758],
         [0.2128, 0.1820, 0.1718,  ..., 0.1705, 0.2015, 0.2020],
         [0.3497, 0.4521, 0.3200,  ..., 0.4162, 0.3930, 0.4713]],
        [[0.2419, 0.2500, 0.2500,  ..., 0.2500, 0.2406, 0.2348],
         [0.2743, 0.2500, 0.2500,  ..., 0.2500, 0.2782, 0.2957],
         [0.2419, 0.2500, 0.2500,  ..., 0.2500, 0.2406, 0.2348],
         [0.2419, 0.2500, 0.2500,  ..., 0.2500, 0.2406, 0.2348]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2984, 0.1702, 0.1201,  ..., 0.1946, 0.1640, 0.2102],
         [0.2339, 0.4895, 0.3454,  ..., 0.1946, 0.1928, 0.3694],
         [0.2339, 0.1702, 0.4144,  ..., 0.2960, 0.4792, 0.2102],
         [0.2339, 0.1702, 0.1201,  ..., 0.3148, 0.1640, 0.2102]],
        [[0.1112, 0.2501, 0.1869,  ..., 0.3492, 0.4658, 0.3612],
         [0.1112, 0.1533, 0.1278,  ..., 0.2629, 0.1780, 0.2129],
         [0.6663, 0.3310, 0.4074,  ..., 0.1185, 0.1782, 0.2129],
         [0.1112, 0.2656, 0.2779,  ..., 0.2693, 0.1780, 0.2129]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:55:51,099 [Process: 0] Synchronize training processes
2024-08-16 12:55:51,100 [Process: 0] Evaluating...
2024-08-16 12:55:51,102 [Process: 0] EPOCH 19:
2024-08-16 12:55:51,103 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1407, 0.2046, 0.2800,  ..., 0.2274, 0.2120, 0.1703],
         [0.1556, 0.2046, 0.1660,  ..., 0.1971, 0.1272, 0.2119],
         [0.1407, 0.2046, 0.1409,  ..., 0.1971, 0.1272, 0.1703],
         [0.5630, 0.3862, 0.4131,  ..., 0.3784, 0.5336, 0.4476]],
        [[0.2383, 0.2423, 0.2628,  ..., 0.2499, 0.2500, 0.2500],
         [0.2851, 0.2732, 0.2457,  ..., 0.2504, 0.2500, 0.2500],
         [0.2383, 0.2423, 0.2457,  ..., 0.2499, 0.2500, 0.2500],
         [0.2383, 0.2423, 0.2457,  ..., 0.2499, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2022, 0.2522, 0.2376,  ..., 0.2138, 0.3949, 0.3439],
         [0.2022, 0.2493, 0.2376,  ..., 0.2138, 0.1232, 0.2070],
         [0.3933, 0.2493, 0.2421,  ..., 0.3299, 0.1270, 0.2420],
         [0.2022, 0.2493, 0.2828,  ..., 0.2424, 0.3549, 0.2070]],
        [[0.3078, 0.1771, 0.2790,  ..., 0.2213, 0.1292, 0.2783],
         [0.4185, 0.4283, 0.3650,  ..., 0.2408, 0.5314, 0.1677],
         [0.1357, 0.1771, 0.1448,  ..., 0.2213, 0.1292, 0.1656],
         [0.1381, 0.2175, 0.2112,  ..., 0.3167, 0.2102, 0.3884]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:55:53,018 [Process: 0] Synchronize training processes
2024-08-16 12:55:53,018 [Process: 0] Evaluating...
2024-08-16 12:55:53,020 [Process: 0] EPOCH 20:
2024-08-16 12:55:53,022 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1605, 0.2122, 0.2025,  ..., 0.2618, 0.2571, 0.2105],
         [0.2463, 0.2122, 0.2025,  ..., 0.1854, 0.2212, 0.2305],
         [0.1538, 0.2122, 0.2025,  ..., 0.1854, 0.2212, 0.2105],
         [0.4394, 0.3635, 0.3925,  ..., 0.3674, 0.3005, 0.3486]],
        [[0.2411, 0.2323, 0.2363,  ..., 0.2500, 0.2471, 0.2392],
         [0.2766, 0.2846, 0.2911,  ..., 0.2500, 0.2587, 0.2528],
         [0.2411, 0.2508, 0.2363,  ..., 0.2500, 0.2471, 0.2689],
         [0.2411, 0.2323, 0.2363,  ..., 0.2500, 0.2471, 0.2392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3898, 0.2253, 0.2189,  ..., 0.2446, 0.2897, 0.0219],
         [0.2034, 0.2253, 0.2189,  ..., 0.2662, 0.2368, 0.0219],
         [0.2034, 0.3240, 0.3433,  ..., 0.2446, 0.2368, 0.8985],
         [0.2034, 0.2253, 0.2189,  ..., 0.2446, 0.2368, 0.0576]],
        [[0.2602, 0.3231, 0.2315,  ..., 0.2568, 0.2684, 0.2941],
         [0.3556, 0.3121, 0.3056,  ..., 0.3495, 0.3588, 0.3951],
         [0.1855, 0.1824, 0.2315,  ..., 0.2196, 0.1864, 0.1554],
         [0.1986, 0.1824, 0.2315,  ..., 0.1741, 0.1864, 0.1554]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:55:54,940 [Process: 0] Synchronize training processes
2024-08-16 12:55:54,941 [Process: 0] Evaluating...
2024-08-16 12:55:54,943 [Process: 0] EPOCH 21:
2024-08-16 12:55:54,944 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2330, 0.1060, 0.1804,  ..., 0.2144, 0.1395, 0.1852],
         [0.2238, 0.1238, 0.2108,  ..., 0.2167, 0.1550, 0.1823],
         [0.2238, 0.1015, 0.1804,  ..., 0.2013, 0.1376, 0.1823],
         [0.3195, 0.6686, 0.4283,  ..., 0.3676, 0.5679, 0.4503]],
        [[0.2500, 0.2430, 0.2500,  ..., 0.2500, 0.2500, 0.2319],
         [0.2500, 0.2710, 0.2500,  ..., 0.2500, 0.2500, 0.3044],
         [0.2500, 0.2430, 0.2500,  ..., 0.2500, 0.2500, 0.2319],
         [0.2500, 0.2430, 0.2500,  ..., 0.2500, 0.2500, 0.2319]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2500,  ..., 0.1992, 0.1916, 0.2929],
         [0.2500, 0.2500, 0.2500,  ..., 0.1992, 0.1916, 0.2357],
         [0.2500, 0.2500, 0.2500,  ..., 0.4025, 0.4251, 0.2357],
         [0.2500, 0.2500, 0.2500,  ..., 0.1992, 0.1916, 0.2357]],
        [[0.5223, 0.2317, 0.2306,  ..., 0.2970, 0.3520, 0.0908],
         [0.1592, 0.2288, 0.2455,  ..., 0.3228, 0.1960, 0.2843],
         [0.1592, 0.1267, 0.2848,  ..., 0.1870, 0.2559, 0.5478],
         [0.1592, 0.4127, 0.2391,  ..., 0.1932, 0.1960, 0.0770]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 12:55:56,857 [Process: 0] Synchronize training processes
2024-08-16 12:55:56,858 [Process: 0] Evaluating...
2024-08-16 12:55:56,860 [Process: 0] EPOCH 22:
2024-08-16 12:55:56,862 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1596, 0.1870, 0.2024,  ..., 0.1757, 0.1773, 0.1612],
         [0.2044, 0.1952, 0.1831,  ..., 0.1757, 0.1697, 0.1570],
         [0.1596, 0.1870, 0.1831,  ..., 0.1757, 0.1697, 0.1085],
         [0.4765, 0.4309, 0.4314,  ..., 0.4730, 0.4832, 0.5732]],
        [[0.2451, 0.2427, 0.2500,  ..., 0.2500, 0.2423, 0.2387],
         [0.2647, 0.2427, 0.2500,  ..., 0.2500, 0.2730, 0.2840],
         [0.2451, 0.2719, 0.2500,  ..., 0.2500, 0.2423, 0.2387],
         [0.2451, 0.2427, 0.2500,  ..., 0.2500, 0.2423, 0.2387]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1912, 0.1726, 0.1723,  ..., 0.3194, 0.3478, 0.2852],
         [0.1912, 0.1726, 0.0951,  ..., 0.1418, 0.1720, 0.2167],
         [0.1912, 0.1726, 0.0951,  ..., 0.0733, 0.0948, 0.2167],
         [0.4264, 0.4822, 0.6375,  ..., 0.4655, 0.3854, 0.2813]],
        [[0.1522, 0.1138, 0.4410,  ..., 0.1913, 0.1124, 0.2500],
         [0.2030, 0.4163, 0.2665,  ..., 0.1913, 0.1124, 0.2500],
         [0.4926, 0.3508, 0.1492,  ..., 0.4261, 0.6628, 0.2500],
         [0.1522, 0.1191, 0.1433,  ..., 0.1913, 0.1124, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1885, 0.2509, 0.1812,  ..., 0.1807, 0.2384, 0.1927],
         [0.1135, 0.1730, 0.1872,  ..., 0.1931, 0.2384, 0.2583],
         [0.1135, 0.1730, 0.1304,  ..., 0.1775, 0.2384, 0.1927],
         [0.5845, 0.4032, 0.5012,  ..., 0.4487, 0.2847, 0.3563]],
        [[0.2446, 0.2500, 0.2442,  ..., 0.2500, 0.2500, 0.2448],
         [0.2661, 0.2500, 0.2674,  ..., 0.2500, 0.2500, 0.2657],
         [0.2446, 0.2500, 0.2442,  ..., 0.2500, 0.2500, 0.2448],
         [0.2446, 0.2500, 0.2442,  ..., 0.2500, 0.2500, 0.2448]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:55:58,763 [Process: 0] Synchronize training processes
2024-08-16 12:55:58,763 [Process: 0] Evaluating...
2024-08-16 12:55:58,765 [Process: 0] EPOCH 23:
2024-08-16 12:55:58,767 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4067, 0.2377, 0.2599,  ..., 0.1552, 0.3678, 0.2932],
         [0.2520, 0.3717, 0.1856,  ..., 0.5344, 0.3640, 0.2306],
         [0.1706, 0.1953, 0.1982,  ..., 0.1552, 0.1073, 0.2456],
         [0.1706, 0.1953, 0.3563,  ..., 0.1552, 0.1609, 0.2306]],
        [[0.1233, 0.1380, 0.1738,  ..., 0.1610, 0.2369, 0.0883],
         [0.1233, 0.2566, 0.2175,  ..., 0.1610, 0.2369, 0.6160],
         [0.5804, 0.4673, 0.1633,  ..., 0.1610, 0.2892, 0.0637],
         [0.1730, 0.1380, 0.4454,  ..., 0.5171, 0.2369, 0.2321]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1948, 0.1205, 0.1711,  ..., 0.1965, 0.1502, 0.1529],
         [0.2354, 0.1010, 0.2555,  ..., 0.2213, 0.1950, 0.2060],
         [0.1948, 0.1010, 0.1711,  ..., 0.1947, 0.1502, 0.1529],
         [0.3749, 0.6775, 0.4022,  ..., 0.3875, 0.5045, 0.4882]],
        [[0.2500, 0.2429, 0.2489,  ..., 0.2483, 0.2485, 0.2500],
         [0.2500, 0.2712, 0.2533,  ..., 0.2483, 0.2485, 0.2500],
         [0.2500, 0.2429, 0.2489,  ..., 0.2550, 0.2546, 0.2500],
         [0.2500, 0.2429, 0.2489,  ..., 0.2483, 0.2485, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:00,671 [Process: 0] Synchronize training processes
2024-08-16 12:56:00,672 [Process: 0] Evaluating...
2024-08-16 12:56:00,674 [Process: 0] EPOCH 24:
2024-08-16 12:56:00,676 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2378, 0.2500, 0.1744,  ..., 0.2157, 0.1262, 0.4009],
         [0.2286, 0.2500, 0.4769,  ..., 0.2157, 0.1262, 0.1760],
         [0.3050, 0.2500, 0.1744,  ..., 0.3530, 0.4030, 0.1760],
         [0.2286, 0.2500, 0.1744,  ..., 0.2157, 0.3446, 0.2470]],
        [[0.3860, 0.4357, 0.2437,  ..., 0.1279, 0.3781, 0.3574],
         [0.1084, 0.3187, 0.2437,  ..., 0.1279, 0.1737, 0.3092],
         [0.1084, 0.1215, 0.2689,  ..., 0.1808, 0.1737, 0.1667],
         [0.3973, 0.1241, 0.2437,  ..., 0.5633, 0.2746, 0.1667]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1916, 0.1825, 0.1932,  ..., 0.1770, 0.1776, 0.1611],
         [0.2960, 0.2635, 0.3194,  ..., 0.1761, 0.1333, 0.1611],
         [0.1916, 0.1825, 0.1932,  ..., 0.1372, 0.1153, 0.1611],
         [0.3208, 0.3716, 0.2943,  ..., 0.5096, 0.5738, 0.5167]],
        [[0.2500, 0.2301, 0.2361,  ..., 0.2488, 0.2404, 0.2500],
         [0.2500, 0.3098, 0.2916,  ..., 0.2733, 0.2787, 0.2500],
         [0.2500, 0.2301, 0.2361,  ..., 0.2645, 0.2404, 0.2500],
         [0.2500, 0.2301, 0.2361,  ..., 0.2134, 0.2404, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:02,590 [Process: 0] Synchronize training processes
2024-08-16 12:56:02,591 [Process: 0] Evaluating...
2024-08-16 12:56:02,593 [Process: 0] EPOCH 25:
2024-08-16 12:56:02,595 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2138, 0.2385, 0.4379,  ..., 0.2426, 0.2384, 0.2500],
         [0.2261, 0.2554, 0.1836,  ..., 0.2426, 0.2102, 0.2500],
         [0.2138, 0.2676, 0.1836,  ..., 0.2426, 0.2193, 0.2500],
         [0.3462, 0.2385, 0.1949,  ..., 0.2722, 0.3322, 0.2500]],
        [[0.1844, 0.1697, 0.2281,  ..., 0.2070, 0.2309, 0.1654],
         [0.4096, 0.4854, 0.3158,  ..., 0.3898, 0.3072, 0.3853],
         [0.2326, 0.1753, 0.2281,  ..., 0.2016, 0.2309, 0.2839],
         [0.1735, 0.1697, 0.2281,  ..., 0.2016, 0.2309, 0.1654]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1810, 0.1820, 0.1841,  ..., 0.2103, 0.1837, 0.1966],
         [0.1810, 0.1820, 0.1569,  ..., 0.1531, 0.2266, 0.2154],
         [0.1810, 0.1969, 0.1569,  ..., 0.1506, 0.1837, 0.1966],
         [0.4571, 0.4390, 0.5021,  ..., 0.4860, 0.4061, 0.3913]],
        [[0.2235, 0.2489, 0.2385,  ..., 0.2328, 0.2447, 0.2338],
         [0.3156, 0.2533, 0.2550,  ..., 0.3017, 0.2660, 0.2985],
         [0.2374, 0.2489, 0.2680,  ..., 0.2328, 0.2447, 0.2338],
         [0.2235, 0.2489, 0.2385,  ..., 0.2328, 0.2447, 0.2338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:04,508 [Process: 0] Synchronize training processes
2024-08-16 12:56:04,509 [Process: 0] Evaluating...
2024-08-16 12:56:04,511 [Process: 0] EPOCH 26:
2024-08-16 12:56:04,513 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4329, 0.1609, 0.5423,  ..., 0.5011, 0.5202, 0.5397],
         [0.1890, 0.1609, 0.1526,  ..., 0.2095, 0.1599, 0.1534],
         [0.1890, 0.5172, 0.1526,  ..., 0.1447, 0.1599, 0.1534],
         [0.1890, 0.1609, 0.1526,  ..., 0.1447, 0.1599, 0.1534]],
        [[0.1736, 0.1526, 0.2195,  ..., 0.1815, 0.1434, 0.0722],
         [0.2933, 0.1526, 0.2195,  ..., 0.1815, 0.3204, 0.0722],
         [0.2288, 0.4274, 0.3416,  ..., 0.4094, 0.2182, 0.0860],
         [0.3043, 0.2674, 0.2195,  ..., 0.2276, 0.3180, 0.7695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1907, 0.1832, 0.1643,  ..., 0.1608, 0.2089, 0.1349],
         [0.1907, 0.1832, 0.1643,  ..., 0.2010, 0.2184, 0.1349],
         [0.1907, 0.1832, 0.1643,  ..., 0.1608, 0.2075, 0.1349],
         [0.4279, 0.4504, 0.5072,  ..., 0.4774, 0.3651, 0.5952]],
        [[0.2500, 0.2463, 0.2325,  ..., 0.2383, 0.2534, 0.2478],
         [0.2500, 0.2611, 0.3026,  ..., 0.2810, 0.2472, 0.2478],
         [0.2500, 0.2463, 0.2325,  ..., 0.2425, 0.2521, 0.2566],
         [0.2500, 0.2463, 0.2325,  ..., 0.2383, 0.2472, 0.2478]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:06,421 [Process: 0] Synchronize training processes
2024-08-16 12:56:06,421 [Process: 0] Evaluating...
2024-08-16 12:56:06,423 [Process: 0] EPOCH 27:
2024-08-16 12:56:06,425 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2305, 0.2462, 0.3685,  ..., 0.2407, 0.2297, 0.1783],
         [0.2305, 0.2462, 0.1994,  ..., 0.2407, 0.2638, 0.1783],
         [0.2305, 0.2614, 0.1994,  ..., 0.2778, 0.2297, 0.4651],
         [0.3085, 0.2462, 0.2327,  ..., 0.2407, 0.2769, 0.1783]],
        [[0.2363, 0.2982, 0.3606,  ..., 0.2470, 0.2505, 0.2490],
         [0.3112, 0.2730, 0.2140,  ..., 0.3090, 0.3079, 0.3678],
         [0.2263, 0.2144, 0.2127,  ..., 0.2050, 0.2208, 0.1916],
         [0.2263, 0.2144, 0.2127,  ..., 0.2391, 0.2208, 0.1916]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1372, 0.1431, 0.1711,  ..., 0.1760, 0.1076, 0.1771],
         [0.1372, 0.1431, 0.1711,  ..., 0.1795, 0.1531, 0.2203],
         [0.1372, 0.1431, 0.1711,  ..., 0.1969, 0.1076, 0.1771],
         [0.5884, 0.5706, 0.4866,  ..., 0.4476, 0.6317, 0.4255]],
        [[0.2619, 0.2259, 0.2277,  ..., 0.2324, 0.2435, 0.2330],
         [0.2551, 0.2642, 0.2885,  ..., 0.3002, 0.2435, 0.2415],
         [0.2442, 0.2856, 0.2562,  ..., 0.2350, 0.2695, 0.2926],
         [0.2388, 0.2243, 0.2277,  ..., 0.2324, 0.2435, 0.2330]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:08,344 [Process: 0] Synchronize training processes
2024-08-16 12:56:08,344 [Process: 0] Evaluating...
2024-08-16 12:56:08,346 [Process: 0] EPOCH 28:
2024-08-16 12:56:08,348 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2230, 0.2080, 0.2124,  ..., 0.1736, 0.2455, 0.2257],
         [0.3453, 0.3761, 0.3500,  ..., 0.4358, 0.2635, 0.3551],
         [0.2158, 0.2080, 0.2124,  ..., 0.2169, 0.2455, 0.2096],
         [0.2158, 0.2080, 0.2252,  ..., 0.1736, 0.2455, 0.2096]],
        [[0.2985, 0.2349, 0.3578,  ..., 0.2298, 0.2450, 0.2136],
         [0.1959, 0.2200, 0.2141,  ..., 0.2298, 0.2098, 0.2136],
         [0.2305, 0.2931, 0.2141,  ..., 0.3105, 0.2343, 0.3360],
         [0.2751, 0.2520, 0.2141,  ..., 0.2298, 0.3109, 0.2367]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1775, 0.1718, 0.2030,  ..., 0.1833, 0.1884, 0.1826],
         [0.1998, 0.1651, 0.2030,  ..., 0.1938, 0.1890, 0.1663],
         [0.1775, 0.1258, 0.1985,  ..., 0.1534, 0.1827, 0.1697],
         [0.4453, 0.5372, 0.3955,  ..., 0.4694, 0.4399, 0.4814]],
        [[0.2369, 0.2477, 0.2454,  ..., 0.2500, 0.2377, 0.2492],
         [0.2709, 0.2569, 0.2638,  ..., 0.2500, 0.2568, 0.2492],
         [0.2553, 0.2477, 0.2454,  ..., 0.2500, 0.2679, 0.2524],
         [0.2369, 0.2477, 0.2454,  ..., 0.2500, 0.2377, 0.2492]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:10,245 [Process: 0] Synchronize training processes
2024-08-16 12:56:10,245 [Process: 0] Evaluating...
2024-08-16 12:56:10,247 [Process: 0] EPOCH 29:
2024-08-16 12:56:10,249 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2053,  ..., 0.0487, 0.1833, 0.1351],
         [0.2500, 0.2500, 0.2053,  ..., 0.0996, 0.1833, 0.3634],
         [0.2500, 0.2500, 0.3842,  ..., 0.8029, 0.4501, 0.3665],
         [0.2500, 0.2500, 0.2053,  ..., 0.0487, 0.1833, 0.1351]],
        [[0.1114, 0.1933, 0.2168,  ..., 0.2809, 0.4467, 0.3422],
         [0.4377, 0.3152, 0.2259,  ..., 0.1801, 0.1795, 0.2863],
         [0.1114, 0.2354, 0.3404,  ..., 0.1614, 0.1167, 0.1858],
         [0.3395, 0.2561, 0.2168,  ..., 0.3776, 0.2572, 0.1858]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2240, 0.2168, 0.1760,  ..., 0.1958, 0.1865, 0.2070],
         [0.2240, 0.2709, 0.1429,  ..., 0.1958, 0.2010, 0.2070],
         [0.2240, 0.2168, 0.1429,  ..., 0.1958, 0.1865, 0.2070],
         [0.3279, 0.2954, 0.5383,  ..., 0.4125, 0.4260, 0.3789]],
        [[0.2435, 0.2472, 0.2587,  ..., 0.2500, 0.2427, 0.2484],
         [0.2694, 0.2583, 0.2633,  ..., 0.2500, 0.2720, 0.2549],
         [0.2435, 0.2472, 0.2390,  ..., 0.2500, 0.2427, 0.2484],
         [0.2435, 0.2472, 0.2390,  ..., 0.2500, 0.2427, 0.2484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:12,165 [Process: 0] Synchronize training processes
2024-08-16 12:56:12,165 [Process: 0] Evaluating...
2024-08-16 12:56:12,167 [Process: 0] EPOCH 30:
2024-08-16 12:56:12,169 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2055, 0.2794, 0.3819,  ..., 0.1981, 0.2958, 0.2615],
         [0.2064, 0.1192, 0.1407,  ..., 0.1981, 0.2468, 0.1482],
         [0.3827, 0.3184, 0.2030,  ..., 0.2780, 0.2825, 0.3685],
         [0.2055, 0.2831, 0.2744,  ..., 0.3259, 0.1749, 0.2218]],
        [[0.2470, 0.1416, 0.4812,  ..., 0.2500, 0.2500, 0.3630],
         [0.2470, 0.5751, 0.1729,  ..., 0.2500, 0.2500, 0.2123],
         [0.2470, 0.1416, 0.1729,  ..., 0.2500, 0.2500, 0.2123],
         [0.2589, 0.1416, 0.1729,  ..., 0.2500, 0.2500, 0.2123]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2140, 0.1191, 0.1311,  ..., 0.1739, 0.2142, 0.1840],
         [0.1583, 0.1642, 0.1311,  ..., 0.1739, 0.1516, 0.1822],
         [0.1485, 0.1191, 0.1311,  ..., 0.1739, 0.1516, 0.1706],
         [0.4792, 0.5975, 0.6066,  ..., 0.4784, 0.4826, 0.4632]],
        [[0.2498, 0.2383, 0.2108,  ..., 0.2478, 0.2471, 0.2420],
         [0.2507, 0.2852, 0.3676,  ..., 0.2566, 0.2471, 0.2741],
         [0.2498, 0.2383, 0.2108,  ..., 0.2478, 0.2586, 0.2420],
         [0.2498, 0.2383, 0.2108,  ..., 0.2478, 0.2471, 0.2420]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:14,061 [Process: 0] Synchronize training processes
2024-08-16 12:56:14,062 [Process: 0] Evaluating...
2024-08-16 12:56:14,064 [Process: 0] EPOCH 31:
2024-08-16 12:56:14,066 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2265, 0.1997, 0.3221,  ..., 0.2308, 0.2311, 0.2186],
         [0.2727, 0.3160, 0.2248,  ..., 0.3076, 0.2794, 0.2852],
         [0.2767, 0.2845, 0.2282,  ..., 0.2308, 0.2585, 0.2776],
         [0.2241, 0.1997, 0.2248,  ..., 0.2308, 0.2311, 0.2186]],
        [[0.1241, 0.1360, 0.2500,  ..., 0.1822, 0.2231, 0.2440],
         [0.1241, 0.1135, 0.2500,  ..., 0.3751, 0.2340, 0.2679],
         [0.1241, 0.0797, 0.2500,  ..., 0.1944, 0.2845, 0.2440],
         [0.6277, 0.6708, 0.2500,  ..., 0.2482, 0.2584, 0.2440]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1500, 0.1513, 0.1723,  ..., 0.1620, 0.2167, 0.1249],
         [0.2482, 0.1969, 0.1723,  ..., 0.1404, 0.2264, 0.1822],
         [0.1500, 0.1513, 0.1723,  ..., 0.1404, 0.1507, 0.1249],
         [0.4519, 0.5006, 0.4832,  ..., 0.5573, 0.4062, 0.5680]],
        [[0.2578, 0.2453, 0.2413,  ..., 0.2330, 0.2500, 0.2606],
         [0.2900, 0.2453, 0.2761,  ..., 0.3009, 0.2500, 0.2465],
         [0.2261, 0.2642, 0.2413,  ..., 0.2330, 0.2500, 0.2465],
         [0.2261, 0.2453, 0.2413,  ..., 0.2330, 0.2500, 0.2465]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:15,973 [Process: 0] Synchronize training processes
2024-08-16 12:56:15,974 [Process: 0] Evaluating...
2024-08-16 12:56:15,976 [Process: 0] EPOCH 32:
2024-08-16 12:56:15,977 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0745, 0.2500,  ..., 0.2381, 0.4293, 0.0808],
         [0.2500, 0.1614, 0.2500,  ..., 0.2857, 0.2123, 0.0808],
         [0.2500, 0.0745, 0.2500,  ..., 0.2381, 0.0563, 0.7577],
         [0.2500, 0.6896, 0.2500,  ..., 0.2381, 0.3021, 0.0808]],
        [[0.2058, 0.1888, 0.2287,  ..., 0.2300, 0.2248, 0.2041],
         [0.2276, 0.2789, 0.2627,  ..., 0.2438, 0.3256, 0.3154],
         [0.3118, 0.3434, 0.2799,  ..., 0.2421, 0.2248, 0.2763],
         [0.2548, 0.1888, 0.2287,  ..., 0.2841, 0.2248, 0.2041]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1531, 0.1886, 0.2039,  ..., 0.1626, 0.1919, 0.1728],
         [0.2000, 0.1897, 0.2239,  ..., 0.2721, 0.1973, 0.1613],
         [0.1531, 0.1886, 0.2039,  ..., 0.1626, 0.1919, 0.1613],
         [0.4937, 0.4331, 0.3683,  ..., 0.4027, 0.4189, 0.5046]],
        [[0.2432, 0.2455, 0.2479,  ..., 0.2500, 0.2500, 0.2449],
         [0.2704, 0.2634, 0.2479,  ..., 0.2500, 0.2500, 0.2653],
         [0.2432, 0.2455, 0.2563,  ..., 0.2500, 0.2500, 0.2449],
         [0.2432, 0.2455, 0.2479,  ..., 0.2500, 0.2500, 0.2449]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 12:56:17,887 [Process: 0] Synchronize training processes
2024-08-16 12:56:17,888 [Process: 0] Evaluating...
2024-08-16 12:56:17,889 [Process: 0] EPOCH 33:
2024-08-16 12:56:17,891 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.1638, 0.1350,  ..., 0.1628, 0.4089, 0.3416],
         [0.2500, 0.1638, 0.2029,  ..., 0.1628, 0.2535, 0.3546],
         [0.2500, 0.4631, 0.5644,  ..., 0.2653, 0.1688, 0.1519],
         [0.2500, 0.2094, 0.0977,  ..., 0.4092, 0.1688, 0.1519]],
        [[0.1332, 0.2280, 0.1768,  ..., 0.3172, 0.2368, 0.1997],
         [0.1332, 0.2280, 0.3153,  ..., 0.3796, 0.2368, 0.2671],
         [0.3670, 0.3160, 0.2562,  ..., 0.1465, 0.2897, 0.1997],
         [0.3666, 0.2280, 0.2518,  ..., 0.1567, 0.2368, 0.3335]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1623, 0.1697, 0.1838,  ..., 0.1236, 0.1924, 0.1644],
         [0.1465, 0.1706, 0.2041,  ..., 0.1231, 0.2509, 0.1644],
         [0.1042, 0.1697, 0.1838,  ..., 0.1132, 0.1924, 0.1644],
         [0.5870, 0.4900, 0.4283,  ..., 0.6401, 0.3643, 0.5068]],
        [[0.2339, 0.2428, 0.2419,  ..., 0.2500, 0.2405, 0.2360],
         [0.2984, 0.2716, 0.2743,  ..., 0.2500, 0.2784, 0.2919],
         [0.2339, 0.2428, 0.2419,  ..., 0.2500, 0.2405, 0.2360],
         [0.2339, 0.2428, 0.2419,  ..., 0.2500, 0.2405, 0.2360]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.1560, 0.2169,  ..., 0.2226, 0.1874, 0.0953],
         [0.2500, 0.2245, 0.2285,  ..., 0.2226, 0.3194, 0.0953],
         [0.2500, 0.1560, 0.2169,  ..., 0.2513, 0.1874, 0.0953],
         [0.2500, 0.4634, 0.3376,  ..., 0.3035, 0.3058, 0.7140]],
        [[0.5812, 0.3748, 0.3904,  ..., 0.2530, 0.2464, 0.1382],
         [0.1299, 0.2526, 0.1980,  ..., 0.1684, 0.5250, 0.3200],
         [0.1440, 0.1863, 0.2137,  ..., 0.2496, 0.1390, 0.4368],
         [0.1448, 0.1863, 0.1980,  ..., 0.3289, 0.0896, 0.1050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:19,786 [Process: 0] Synchronize training processes
2024-08-16 12:56:19,786 [Process: 0] Evaluating...
2024-08-16 12:56:19,788 [Process: 0] EPOCH 34:
2024-08-16 12:56:19,790 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1858, 0.1699, 0.1575,  ..., 0.1926, 0.1247, 0.1725],
         [0.1858, 0.2013, 0.1497,  ..., 0.1716, 0.1364, 0.1688],
         [0.1858, 0.1699, 0.1497,  ..., 0.1716, 0.1247, 0.1688],
         [0.4427, 0.4589, 0.5432,  ..., 0.4641, 0.6142, 0.4898]],
        [[0.2420, 0.2500, 0.2496,  ..., 0.2444, 0.2339, 0.2494],
         [0.2740, 0.2500, 0.2513,  ..., 0.2692, 0.2983, 0.2517],
         [0.2420, 0.2500, 0.2496,  ..., 0.2432, 0.2339, 0.2494],
         [0.2420, 0.2500, 0.2496,  ..., 0.2432, 0.2339, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.8555, 0.8281, 0.2335,  ..., 0.3299, 0.3559, 0.2068],
         [0.0648, 0.0623, 0.2335,  ..., 0.3603, 0.2147, 0.3797],
         [0.0398, 0.0548, 0.2335,  ..., 0.1549, 0.2147, 0.2068],
         [0.0398, 0.0548, 0.2996,  ..., 0.1549, 0.2147, 0.2068]],
        [[0.2074, 0.1869, 0.3478,  ..., 0.1142, 0.3249, 0.2079],
         [0.2074, 0.1869, 0.2381,  ..., 0.1142, 0.2916, 0.1740],
         [0.3778, 0.4184, 0.2028,  ..., 0.3762, 0.0669, 0.2858],
         [0.2074, 0.2078, 0.2112,  ..., 0.3953, 0.3166, 0.3322]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:56:21,690 [Process: 0] Synchronize training processes
2024-08-16 12:56:21,691 [Process: 0] Evaluating...
2024-08-16 12:56:21,693 [Process: 0] EPOCH 35:
2024-08-16 12:56:21,695 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:56:23,618 [Process: 0] Synchronize training processes
2024-08-16 12:56:23,618 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1576, 0.1440, 0.1715,  ..., 0.1791, 0.1909, 0.1773],
         [0.1576, 0.1440, 0.1849,  ..., 0.2037, 0.2216, 0.2468],
         [0.1576, 0.1440, 0.1715,  ..., 0.1463, 0.1909, 0.1773],
         [0.5271, 0.5679, 0.4722,  ..., 0.4708, 0.3966, 0.3985]],
        [[0.2562, 0.2482, 0.2458,  ..., 0.2500, 0.2500, 0.2500],
         [0.2673, 0.2482, 0.2625,  ..., 0.2500, 0.2500, 0.2500],
         [0.2383, 0.2555, 0.2458,  ..., 0.2500, 0.2500, 0.2500],
         [0.2383, 0.2482, 0.2458,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5093, 0.3473, 0.1249,  ..., 0.1769, 0.1577, 0.2044],
         [0.3086, 0.1145, 0.1246,  ..., 0.2265, 0.1577, 0.0921],
         [0.1047, 0.1850, 0.6260,  ..., 0.5007, 0.5269, 0.2839],
         [0.0774, 0.3532, 0.1246,  ..., 0.0959, 0.1577, 0.4196]],
        [[0.1170, 0.2414, 0.1798,  ..., 0.1678, 0.1889, 0.0756],
         [0.1170, 0.2414, 0.4607,  ..., 0.1678, 0.1889, 0.0756],
         [0.4574, 0.2414, 0.1798,  ..., 0.2507, 0.1889, 0.0756],
         [0.3087, 0.2759, 0.1798,  ..., 0.4137, 0.4332, 0.7731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:56:23,620 [Process: 0] EPOCH 36:
2024-08-16 12:56:23,622 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:56:25,526 [Process: 0] Synchronize training processes
2024-08-16 12:56:25,526 [Process: 0] Evaluating...
2024-08-16 12:56:25,528 [Process: 0] EPOCH 37:
2024-08-16 12:56:25,530 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2295, 0.1804, 0.1982,  ..., 0.1923, 0.1861, 0.1352],
         [0.2295, 0.2259, 0.1702,  ..., 0.1923, 0.1664, 0.1245],
         [0.2295, 0.1748, 0.1275,  ..., 0.1923, 0.1664, 0.1042],
         [0.3114, 0.4189, 0.5040,  ..., 0.4232, 0.4811, 0.6361]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2485, 0.2479],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2546, 0.2564],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2485, 0.2479],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2485, 0.2479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2434, 0.2589, 0.1935,  ..., 0.5313, 0.2340, 0.1476],
         [0.2434, 0.2276, 0.1935,  ..., 0.1350, 0.2981, 0.1788],
         [0.2697, 0.2276, 0.3801,  ..., 0.1986, 0.2340, 0.5260],
         [0.2434, 0.2859, 0.2328,  ..., 0.1350, 0.2340, 0.1476]],
        [[0.1558, 0.3443, 0.0744,  ..., 0.2080, 0.1941, 0.1811],
         [0.3328, 0.1329, 0.5907,  ..., 0.2593, 0.4174, 0.2179],
         [0.2338, 0.1329, 0.0730,  ..., 0.1868, 0.1941, 0.0979],
         [0.2777, 0.3899, 0.2619,  ..., 0.3459, 0.1944, 0.5032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:56:27,435 [Process: 0] Synchronize training processes
2024-08-16 12:56:27,435 [Process: 0] Evaluating...
2024-08-16 12:56:27,438 [Process: 0] EPOCH 38:
2024-08-16 12:56:27,440 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1657, 0.1651, 0.1756,  ..., 0.1348, 0.1575, 0.1307],
         [0.1657, 0.1651, 0.2191,  ..., 0.1436, 0.1734, 0.1476],
         [0.1691, 0.1651, 0.1744,  ..., 0.1348, 0.1575, 0.1220],
         [0.4996, 0.5047, 0.4309,  ..., 0.5869, 0.5115, 0.5997]],
        [[0.2400, 0.2500, 0.2500,  ..., 0.2560, 0.2500, 0.2500],
         [0.2801, 0.2500, 0.2500,  ..., 0.2801, 0.2500, 0.2500],
         [0.2400, 0.2500, 0.2500,  ..., 0.2320, 0.2500, 0.2500],
         [0.2400, 0.2500, 0.2500,  ..., 0.2320, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2050, 0.2142, 0.2421,  ..., 0.2079, 0.3297, 0.2013],
         [0.3314, 0.2747, 0.2738,  ..., 0.3764, 0.2354, 0.2692],
         [0.2050, 0.2142, 0.2421,  ..., 0.2079, 0.2155, 0.2013],
         [0.2586, 0.2970, 0.2421,  ..., 0.2079, 0.2195, 0.3282]],
        [[0.4406, 0.6249, 0.1323,  ..., 0.2500, 0.2043, 0.3283],
         [0.2371, 0.2645, 0.1773,  ..., 0.2500, 0.2043, 0.2057],
         [0.2521, 0.0553, 0.5749,  ..., 0.2500, 0.2872, 0.2604],
         [0.0702, 0.0553, 0.1156,  ..., 0.2500, 0.3042, 0.2057]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:56:29,334 [Process: 0] Synchronize training processes
2024-08-16 12:56:29,334 [Process: 0] Evaluating...
2024-08-16 12:56:29,336 [Process: 0] EPOCH 39:
2024-08-16 12:56:29,338 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1556, 0.1752, 0.2172,  ..., 0.1615, 0.2201, 0.1611],
         [0.2796, 0.1752, 0.1946,  ..., 0.1615, 0.2087, 0.1633],
         [0.1404, 0.1752, 0.1701,  ..., 0.1615, 0.1603, 0.1256],
         [0.4244, 0.4744, 0.4181,  ..., 0.5154, 0.4109, 0.5500]],
        [[0.2500, 0.2500, 0.2495,  ..., 0.2455, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2515,  ..., 0.2634, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2495,  ..., 0.2455, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2495,  ..., 0.2455, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2180, 0.2289, 0.2388,  ..., 0.3496, 0.2904, 0.2975],
         [0.3349, 0.3479, 0.2182,  ..., 0.2463, 0.2224, 0.3104],
         [0.2180, 0.2116, 0.1568,  ..., 0.1611, 0.1862, 0.1540],
         [0.2292, 0.2116, 0.3862,  ..., 0.2430, 0.3010, 0.2381]],
        [[0.2443, 0.1528, 0.1810,  ..., 0.1130, 0.1196, 0.2500],
         [0.2443, 0.1528, 0.4507,  ..., 0.1878, 0.2178, 0.2500],
         [0.2671, 0.2084, 0.1872,  ..., 0.1375, 0.3197, 0.2500],
         [0.2443, 0.4859, 0.1810,  ..., 0.5617, 0.3429, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:56:31,236 [Process: 0] Synchronize training processes
2024-08-16 12:56:31,236 [Process: 0] Evaluating...
2024-08-16 12:56:31,238 [Process: 0] EPOCH 40:
2024-08-16 12:56:31,240 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1724, 0.1684, 0.1402,  ..., 0.1542, 0.1884, 0.1850],
         [0.1724, 0.1684, 0.1538,  ..., 0.1570, 0.2212, 0.2028],
         [0.1724, 0.1684, 0.1402,  ..., 0.1542, 0.1884, 0.1850],
         [0.4828, 0.4947, 0.5658,  ..., 0.5345, 0.4019, 0.4272]],
        [[0.2460, 0.2489, 0.2500,  ..., 0.2486, 0.2500, 0.2500],
         [0.2620, 0.2534, 0.2500,  ..., 0.2541, 0.2500, 0.2500],
         [0.2460, 0.2489, 0.2500,  ..., 0.2486, 0.2500, 0.2500],
         [0.2460, 0.2489, 0.2500,  ..., 0.2486, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2934, 0.1383, 0.1753,  ..., 0.3834, 0.1241, 0.4265],
         [0.2536, 0.2249, 0.1753,  ..., 0.2046, 0.1241, 0.1696],
         [0.1578, 0.4984, 0.2176,  ..., 0.0763, 0.5131, 0.1696],
         [0.2953, 0.1383, 0.4318,  ..., 0.3358, 0.2387, 0.2342]],
        [[0.2500, 0.2225, 0.1979,  ..., 0.2500, 0.1983, 0.2500],
         [0.2500, 0.3079, 0.4064,  ..., 0.2500, 0.3168, 0.2500],
         [0.2500, 0.2471, 0.1979,  ..., 0.2500, 0.2865, 0.2500],
         [0.2500, 0.2225, 0.1979,  ..., 0.2500, 0.1983, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:56:33,140 [Process: 0] Synchronize training processes
2024-08-16 12:56:33,141 [Process: 0] Evaluating...
2024-08-16 12:56:33,143 [Process: 0] EPOCH 41:
2024-08-16 12:56:33,145 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1660, 0.1705, 0.1662,  ..., 0.2022, 0.2158, 0.1840],
         [0.1660, 0.1705, 0.1721,  ..., 0.2022, 0.2158, 0.1840],
         [0.1660, 0.1705, 0.1360,  ..., 0.2022, 0.2158, 0.1840],
         [0.5019, 0.4884, 0.5256,  ..., 0.3935, 0.3527, 0.4480]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2442, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2675, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2442, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2442, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2385, 0.1599, 0.1430,  ..., 0.0842, 0.1023, 0.2382],
         [0.1661, 0.1599, 0.1639,  ..., 0.0814, 0.1397, 0.2382],
         [0.3453, 0.5060, 0.1430,  ..., 0.3134, 0.1333, 0.2853],
         [0.2502, 0.1742, 0.5500,  ..., 0.5209, 0.6247, 0.2382]],
        [[0.4584, 0.1623, 0.2146,  ..., 0.3072, 0.1496, 0.4743],
         [0.2388, 0.4610, 0.3070,  ..., 0.2515, 0.1533, 0.3302],
         [0.1077, 0.1623, 0.1494,  ..., 0.2362, 0.0941, 0.0739],
         [0.1951, 0.2145, 0.3290,  ..., 0.2050, 0.6030, 0.1216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:56:35,038 [Process: 0] Synchronize training processes
2024-08-16 12:56:35,039 [Process: 0] Evaluating...
2024-08-16 12:56:35,040 [Process: 0] EPOCH 42:
2024-08-16 12:56:35,042 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2017, 0.1709, 0.1563,  ..., 0.1496, 0.1764, 0.2226],
         [0.2017, 0.1709, 0.1840,  ..., 0.1496, 0.1764, 0.2226],
         [0.2017, 0.1709, 0.1352,  ..., 0.1496, 0.1764, 0.2226],
         [0.3950, 0.4874, 0.5245,  ..., 0.5513, 0.4709, 0.3323]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2466, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2601, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2466, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2466, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3242, 0.1188, 0.5160,  ..., 0.2543, 0.4555, 0.0695],
         [0.5303, 0.4824, 0.2251,  ..., 0.2779, 0.1613, 0.0695],
         [0.0815, 0.2801, 0.1349,  ..., 0.2339, 0.2220, 0.7914],
         [0.0640, 0.1188, 0.1240,  ..., 0.2339, 0.1613, 0.0695]],
        [[0.3336, 0.2249, 0.3922,  ..., 0.2015, 0.1499, 0.1994],
         [0.1912, 0.2249, 0.2026,  ..., 0.2015, 0.4170, 0.3445],
         [0.1912, 0.3253, 0.2026,  ..., 0.2015, 0.1234, 0.1586],
         [0.2840, 0.2249, 0.2026,  ..., 0.3954, 0.3098, 0.2975]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 12:56:36,954 [Process: 0] Synchronize training processes
2024-08-16 12:56:36,955 [Process: 0] Evaluating...
2024-08-16 12:56:36,957 [Process: 0] EPOCH 43:
2024-08-16 12:56:36,959 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2016, 0.1075, 0.1403,  ..., 0.2065, 0.1678, 0.1628],
         [0.2833, 0.1113, 0.1433,  ..., 0.2182, 0.2385, 0.1783],
         [0.2016, 0.1075, 0.1403,  ..., 0.2065, 0.1678, 0.1628],
         [0.3136, 0.6737, 0.5762,  ..., 0.3688, 0.4258, 0.4961]],
        [[0.2482, 0.2391, 0.2500,  ..., 0.2500, 0.2438, 0.2459],
         [0.2555, 0.2827, 0.2500,  ..., 0.2500, 0.2685, 0.2623],
         [0.2482, 0.2391, 0.2500,  ..., 0.2500, 0.2438, 0.2459],
         [0.2482, 0.2391, 0.2500,  ..., 0.2500, 0.2438, 0.2459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1461, 0.1739, 0.1941,  ..., 0.1469, 0.1775, 0.1880],
         [0.1639, 0.4399, 0.3221,  ..., 0.3075, 0.1796, 0.3227],
         [0.3593, 0.2124, 0.2897,  ..., 0.3988, 0.4653, 0.3012],
         [0.3306, 0.1739, 0.1941,  ..., 0.1469, 0.1775, 0.1880]],
        [[0.2231, 0.2244, 0.2932,  ..., 0.2097, 0.1857, 0.1765],
         [0.3307, 0.2035, 0.2356,  ..., 0.2097, 0.2932, 0.3880],
         [0.2231, 0.2035, 0.2356,  ..., 0.2097, 0.1857, 0.1765],
         [0.2231, 0.3686, 0.2356,  ..., 0.3708, 0.3355, 0.2590]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1849, 0.1498, 0.1709,  ..., 0.2045, 0.1259, 0.1556],
         [0.1849, 0.1342, 0.1709,  ..., 0.2045, 0.1169, 0.1903],
         [0.1849, 0.1342, 0.1709,  ..., 0.2045, 0.1169, 0.1556],
         [0.4454, 0.5818, 0.4872,  ..., 0.3866, 0.6403, 0.4984]],
        [[0.2478, 0.2406, 0.2496,  ..., 0.2479, 0.2500, 0.2309],
         [0.2567, 0.2782, 0.2513,  ..., 0.2562, 0.2500, 0.3074],
         [0.2478, 0.2406, 0.2496,  ..., 0.2479, 0.2500, 0.2309],
         [0.2478, 0.2406, 0.2496,  ..., 0.2479, 0.2500, 0.2309]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:38,863 [Process: 0] Synchronize training processes
2024-08-16 12:56:38,864 [Process: 0] Evaluating...
2024-08-16 12:56:38,866 [Process: 0] EPOCH 44:
2024-08-16 12:56:38,868 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.3028, 0.2241,  ..., 0.3865, 0.3161, 0.2470],
         [0.2500, 0.2257, 0.3278,  ..., 0.2107, 0.2582, 0.2589],
         [0.2500, 0.2257, 0.2241,  ..., 0.2014, 0.2129, 0.2470],
         [0.2500, 0.2458, 0.2241,  ..., 0.2014, 0.2129, 0.2470]],
        [[0.1171, 0.1377, 0.1697,  ..., 0.1434, 0.2767, 0.1692],
         [0.1782, 0.1590, 0.3238,  ..., 0.1538, 0.2241, 0.2552],
         [0.1171, 0.1377, 0.1432,  ..., 0.1817, 0.2751, 0.2483],
         [0.5877, 0.5657, 0.3633,  ..., 0.5210, 0.2241, 0.3273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1606, 0.1540, 0.2018,  ..., 0.1760, 0.1407, 0.1461],
         [0.1606, 0.1557, 0.2272,  ..., 0.1633, 0.1407, 0.1960],
         [0.1606, 0.1540, 0.1926,  ..., 0.1633, 0.1407, 0.1461],
         [0.5182, 0.5363, 0.3784,  ..., 0.4973, 0.5778, 0.5118]],
        [[0.2500, 0.2500, 0.2424,  ..., 0.2380, 0.2500, 0.2699],
         [0.2500, 0.2500, 0.2727,  ..., 0.2859, 0.2500, 0.2633],
         [0.2500, 0.2500, 0.2424,  ..., 0.2380, 0.2500, 0.2334],
         [0.2500, 0.2500, 0.2424,  ..., 0.2380, 0.2500, 0.2334]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:40,763 [Process: 0] Synchronize training processes
2024-08-16 12:56:40,763 [Process: 0] Evaluating...
2024-08-16 12:56:40,765 [Process: 0] EPOCH 45:
2024-08-16 12:56:40,767 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1928, 0.1411, 0.1592,  ..., 0.2081, 0.2220, 0.1747],
         [0.1928, 0.4399, 0.1592,  ..., 0.2081, 0.2220, 0.2873],
         [0.3832, 0.2778, 0.3311,  ..., 0.2081, 0.2220, 0.2885],
         [0.2312, 0.1411, 0.3504,  ..., 0.3757, 0.3341, 0.2495]],
        [[0.6062, 0.6262, 0.2757,  ..., 0.3168, 0.1903, 0.1652],
         [0.1823, 0.1246, 0.3174,  ..., 0.2345, 0.2217, 0.3954],
         [0.0804, 0.1246, 0.2034,  ..., 0.2243, 0.3977, 0.1652],
         [0.1310, 0.1246, 0.2034,  ..., 0.2243, 0.1903, 0.2742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2096, 0.1720, 0.1637,  ..., 0.1610, 0.1700, 0.1407],
         [0.2335, 0.1587, 0.1236,  ..., 0.1552, 0.1967, 0.1407],
         [0.2096, 0.1368, 0.1236,  ..., 0.1552, 0.1700, 0.1407],
         [0.3472, 0.5325, 0.5891,  ..., 0.5285, 0.4633, 0.5778]],
        [[0.2469, 0.2545, 0.2371,  ..., 0.2481, 0.2393, 0.2378],
         [0.2594, 0.2617, 0.2887,  ..., 0.2557, 0.2820, 0.2867],
         [0.2469, 0.2419, 0.2371,  ..., 0.2481, 0.2393, 0.2378],
         [0.2469, 0.2419, 0.2371,  ..., 0.2481, 0.2393, 0.2378]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:42,659 [Process: 0] Synchronize training processes
2024-08-16 12:56:42,660 [Process: 0] Evaluating...
2024-08-16 12:56:42,661 [Process: 0] EPOCH 46:
2024-08-16 12:56:42,663 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.3509, 0.3783,  ..., 0.2167, 0.3835, 0.2095],
         [0.2500, 0.3395, 0.2510,  ..., 0.3784, 0.1923, 0.3716],
         [0.2500, 0.1548, 0.1812,  ..., 0.2025, 0.1923, 0.2095],
         [0.2500, 0.1548, 0.1895,  ..., 0.2025, 0.2319, 0.2095]],
        [[0.1977, 0.2239, 0.1808,  ..., 0.1754, 0.1380, 0.1960],
         [0.2344, 0.2239, 0.1624,  ..., 0.1754, 0.1380, 0.1960],
         [0.3701, 0.2732, 0.2382,  ..., 0.2666, 0.3803, 0.3856],
         [0.1977, 0.2791, 0.4186,  ..., 0.3825, 0.3436, 0.2224]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1132, 0.2072, 0.1954,  ..., 0.1697, 0.1686, 0.1894],
         [0.1484, 0.2072, 0.2355,  ..., 0.1827, 0.1471, 0.1894],
         [0.1105, 0.2072, 0.1954,  ..., 0.1697, 0.1442, 0.1894],
         [0.6279, 0.3783, 0.3736,  ..., 0.4779, 0.5401, 0.4319]],
        [[0.2500, 0.2500, 0.2498,  ..., 0.2500, 0.2441, 0.2633],
         [0.2500, 0.2500, 0.2506,  ..., 0.2500, 0.2678, 0.2456],
         [0.2500, 0.2500, 0.2498,  ..., 0.2500, 0.2441, 0.2456],
         [0.2500, 0.2500, 0.2498,  ..., 0.2500, 0.2441, 0.2456]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:44,601 [Process: 0] Synchronize training processes
2024-08-16 12:56:44,601 [Process: 0] Evaluating...
2024-08-16 12:56:44,603 [Process: 0] EPOCH 47:
2024-08-16 12:56:44,605 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2781, 0.3229, 0.2996,  ..., 0.1958, 0.5441, 0.2292],
         [0.3421, 0.1061, 0.4033,  ..., 0.1285, 0.2493, 0.2806],
         [0.1899, 0.1044, 0.1144,  ..., 0.0853, 0.1033, 0.1476],
         [0.1899, 0.4666, 0.1826,  ..., 0.5904, 0.1033, 0.3426]],
        [[0.1541, 0.1631, 0.2090,  ..., 0.1868, 0.1682, 0.2500],
         [0.1541, 0.1631, 0.2090,  ..., 0.1868, 0.1682, 0.2500],
         [0.4229, 0.5107, 0.3731,  ..., 0.2273, 0.4955, 0.2500],
         [0.2689, 0.1631, 0.2090,  ..., 0.3990, 0.1682, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1764, 0.1331, 0.1851,  ..., 0.1237, 0.1642, 0.1586],
         [0.1764, 0.1457, 0.1847,  ..., 0.1694, 0.1642, 0.1542],
         [0.1764, 0.1331, 0.1847,  ..., 0.1237, 0.1642, 0.1542],
         [0.4709, 0.5881, 0.4455,  ..., 0.5832, 0.5073, 0.5331]],
        [[0.2500, 0.2451, 0.2400,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2647, 0.2799,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2451, 0.2400,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2451, 0.2400,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:46,514 [Process: 0] Synchronize training processes
2024-08-16 12:56:46,514 [Process: 0] Evaluating...
2024-08-16 12:56:46,516 [Process: 0] EPOCH 48:
2024-08-16 12:56:46,518 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4414, 0.3357, 0.3622,  ..., 0.2246, 0.4992, 0.2221],
         [0.2276, 0.3244, 0.2641,  ..., 0.3261, 0.2605, 0.3336],
         [0.1086, 0.1443, 0.1869,  ..., 0.2246, 0.1202, 0.2221],
         [0.2224, 0.1956, 0.1869,  ..., 0.2246, 0.1202, 0.2221]],
        [[0.2372, 0.2107, 0.2411,  ..., 0.2500, 0.1417, 0.0638],
         [0.2422, 0.2563, 0.2582,  ..., 0.2500, 0.1417, 0.0638],
         [0.2834, 0.2107, 0.2596,  ..., 0.2500, 0.1417, 0.8085],
         [0.2372, 0.3224, 0.2411,  ..., 0.2500, 0.5749, 0.0638]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2091, 0.1455, 0.1832,  ..., 0.2027, 0.1888, 0.1809],
         [0.2091, 0.1607, 0.1832,  ..., 0.2355, 0.1888, 0.1809],
         [0.2091, 0.1455, 0.1832,  ..., 0.2027, 0.1888, 0.1809],
         [0.3727, 0.5484, 0.4503,  ..., 0.3592, 0.4337, 0.4572]],
        [[0.2414, 0.2458, 0.2500,  ..., 0.2443, 0.2369, 0.2428],
         [0.2757, 0.2627, 0.2500,  ..., 0.2672, 0.2580, 0.2641],
         [0.2414, 0.2458, 0.2500,  ..., 0.2443, 0.2682, 0.2504],
         [0.2414, 0.2458, 0.2500,  ..., 0.2443, 0.2369, 0.2428]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:48,416 [Process: 0] Synchronize training processes
2024-08-16 12:56:48,416 [Process: 0] Evaluating...
2024-08-16 12:56:48,418 [Process: 0] EPOCH 49:
2024-08-16 12:56:48,420 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2560, 0.1253, 0.2029,  ..., 0.1175, 0.2078, 0.1488],
         [0.4214, 0.5319, 0.3914,  ..., 0.1175, 0.1863, 0.1472],
         [0.1373, 0.2212, 0.2029,  ..., 0.6474, 0.2477, 0.5568],
         [0.1853, 0.1217, 0.2029,  ..., 0.1175, 0.3582, 0.1472]],
        [[0.1594, 0.4166, 0.1777,  ..., 0.1295, 0.1960, 0.1752],
         [0.5058, 0.1488, 0.1777,  ..., 0.2563, 0.1000, 0.2638],
         [0.0553, 0.2857, 0.2930,  ..., 0.3746, 0.6041, 0.1752],
         [0.2795, 0.1488, 0.3516,  ..., 0.2396, 0.1000, 0.3858]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2245, 0.1502, 0.1838,  ..., 0.1891, 0.1947, 0.1798],
         [0.2245, 0.1502, 0.1838,  ..., 0.1850, 0.1947, 0.1798],
         [0.2245, 0.1502, 0.1838,  ..., 0.1850, 0.1947, 0.1798],
         [0.3264, 0.5494, 0.4487,  ..., 0.4409, 0.4158, 0.4606]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2419, 0.2423],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2742, 0.2732],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2419, 0.2423],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2419, 0.2423]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:50,316 [Process: 0] Synchronize training processes
2024-08-16 12:56:50,316 [Process: 0] Evaluating...
2024-08-16 12:56:50,318 [Process: 0] EPOCH 50:
2024-08-16 12:56:50,320 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1760, 0.2190, 0.2046,  ..., 0.3085, 0.2500, 0.1854],
         [0.1760, 0.2190, 0.2046,  ..., 0.2305, 0.2500, 0.1854],
         [0.1760, 0.2190, 0.2046,  ..., 0.2305, 0.2500, 0.1854],
         [0.4719, 0.3429, 0.3861,  ..., 0.2305, 0.2500, 0.4438]],
        [[0.1616, 0.1207, 0.1494,  ..., 0.2908, 0.1544, 0.1389],
         [0.4496, 0.1207, 0.1727,  ..., 0.3002, 0.2574, 0.2048],
         [0.2449, 0.5383, 0.2455,  ..., 0.2411, 0.4337, 0.4009],
         [0.1439, 0.2203, 0.4325,  ..., 0.1679, 0.1544, 0.2554]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1867, 0.1535, 0.1069,  ..., 0.1553, 0.1453, 0.1527],
         [0.1808, 0.1535, 0.1069,  ..., 0.1553, 0.1453, 0.1411],
         [0.1808, 0.1535, 0.1200,  ..., 0.1553, 0.1453, 0.1411],
         [0.4517, 0.5394, 0.6662,  ..., 0.5340, 0.5641, 0.5651]],
        [[0.2525, 0.2414, 0.2754,  ..., 0.2500, 0.2526, 0.2500],
         [0.2724, 0.2757, 0.2415,  ..., 0.2500, 0.2694, 0.2500],
         [0.2375, 0.2414, 0.2415,  ..., 0.2500, 0.2390, 0.2500],
         [0.2375, 0.2414, 0.2415,  ..., 0.2500, 0.2390, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:52,228 [Process: 0] Synchronize training processes
2024-08-16 12:56:52,229 [Process: 0] Evaluating...
2024-08-16 12:56:52,231 [Process: 0] EPOCH 51:
2024-08-16 12:56:52,233 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3818, 0.2247, 0.1936,  ..., 0.3196, 0.2110, 0.6111],
         [0.2297, 0.2247, 0.2818,  ..., 0.1252, 0.3073, 0.1220],
         [0.1942, 0.3260, 0.3698,  ..., 0.4299, 0.3031, 0.1449],
         [0.1942, 0.2247, 0.1549,  ..., 0.1252, 0.1786, 0.1220]],
        [[0.1017, 0.2145, 0.1923,  ..., 0.1596, 0.1399, 0.0891],
         [0.2376, 0.2394, 0.1923,  ..., 0.1596, 0.1877, 0.4320],
         [0.0947, 0.2145, 0.3659,  ..., 0.1596, 0.1399, 0.0914],
         [0.5660, 0.3315, 0.2496,  ..., 0.5211, 0.5325, 0.3875]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1521, 0.1702, 0.2212,  ..., 0.1636, 0.1940, 0.1737],
         [0.1521, 0.2140, 0.1788,  ..., 0.1636, 0.1676, 0.1658],
         [0.1521, 0.1702, 0.1718,  ..., 0.1636, 0.1676, 0.1658],
         [0.5438, 0.4456, 0.4282,  ..., 0.5092, 0.4707, 0.4947]],
        [[0.2457, 0.2500, 0.2493,  ..., 0.2499, 0.2500, 0.2500],
         [0.2630, 0.2500, 0.2493,  ..., 0.2503, 0.2500, 0.2500],
         [0.2457, 0.2500, 0.2521,  ..., 0.2499, 0.2500, 0.2500],
         [0.2457, 0.2500, 0.2493,  ..., 0.2499, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:54,131 [Process: 0] Synchronize training processes
2024-08-16 12:56:54,131 [Process: 0] Evaluating...
2024-08-16 12:56:54,133 [Process: 0] EPOCH 52:
2024-08-16 12:56:54,135 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1929, 0.2256, 0.1210,  ..., 0.1446, 0.0803, 0.3937],
         [0.1304, 0.1687, 0.1210,  ..., 0.1475, 0.1125, 0.0774],
         [0.2293, 0.1012, 0.3000,  ..., 0.3111, 0.4132, 0.0774],
         [0.4474, 0.5045, 0.4580,  ..., 0.3968, 0.3939, 0.4515]],
        [[0.1617, 0.2174, 0.5533,  ..., 0.1199, 0.2532, 0.1480],
         [0.5802, 0.3478, 0.3154,  ..., 0.6785, 0.4889, 0.6425],
         [0.1290, 0.2174, 0.0610,  ..., 0.1008, 0.1290, 0.1048],
         [0.1290, 0.2174, 0.0703,  ..., 0.1008, 0.1290, 0.1048]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1566, 0.1774, 0.1199,  ..., 0.1590, 0.1797, 0.1443],
         [0.1844, 0.1774, 0.1395,  ..., 0.1419, 0.1848, 0.1443],
         [0.1566, 0.1774, 0.1199,  ..., 0.1419, 0.1797, 0.1443],
         [0.5024, 0.4679, 0.6207,  ..., 0.5573, 0.4557, 0.5671]],
        [[0.2374, 0.2500, 0.2638,  ..., 0.2500, 0.2425, 0.2384],
         [0.2877, 0.2500, 0.2454,  ..., 0.2500, 0.2726, 0.2847],
         [0.2374, 0.2500, 0.2454,  ..., 0.2500, 0.2425, 0.2384],
         [0.2374, 0.2500, 0.2454,  ..., 0.2500, 0.2425, 0.2384]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 12:56:56,066 [Process: 0] Synchronize training processes
2024-08-16 12:56:56,066 [Process: 0] Evaluating...
2024-08-16 12:56:56,068 [Process: 0] EPOCH 53:
2024-08-16 12:56:56,070 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4141, 0.3216, 0.3636,  ..., 0.2396, 0.3492, 0.0029],
         [0.2405, 0.2589, 0.2151,  ..., 0.2609, 0.1977, 0.0029],
         [0.1161, 0.2217, 0.1966,  ..., 0.2396, 0.1977, 0.9914],
         [0.2293, 0.1978, 0.2248,  ..., 0.2598, 0.2555, 0.0029]],
        [[0.2214, 0.2452, 0.2500,  ..., 0.2146, 0.2199, 0.2500],
         [0.2597, 0.2644, 0.2500,  ..., 0.3135, 0.2199, 0.2500],
         [0.2214, 0.2452, 0.2500,  ..., 0.2146, 0.2199, 0.2500],
         [0.2975, 0.2452, 0.2500,  ..., 0.2573, 0.3403, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1490, 0.1499, 0.1481,  ..., 0.2251, 0.1848, 0.1617],
         [0.1490, 0.1584, 0.1754,  ..., 0.2251, 0.2451, 0.1617],
         [0.1490, 0.1499, 0.1481,  ..., 0.2251, 0.1460, 0.1617],
         [0.5531, 0.5418, 0.5283,  ..., 0.3247, 0.4240, 0.5149]],
        [[0.2620, 0.2454, 0.2490,  ..., 0.2500, 0.2477, 0.2500],
         [0.2460, 0.2637, 0.2531,  ..., 0.2500, 0.2570, 0.2500],
         [0.2460, 0.2454, 0.2490,  ..., 0.2500, 0.2477, 0.2500],
         [0.2460, 0.2454, 0.2490,  ..., 0.2500, 0.2477, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 12:56:57,995 [Process: 0] Synchronize training processes
2024-08-16 12:56:57,996 [Process: 0] Evaluating...
2024-08-16 12:56:57,998 [Process: 0] EPOCH 54:
2024-08-16 12:56:58,000 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.2149, 0.1682, 0.4167,  ..., 0.1064, 0.2500, 0.2489],
         [0.2650, 0.1682, 0.1723,  ..., 0.1064, 0.2500, 0.2489],
         [0.2873, 0.4955, 0.2387,  ..., 0.6807, 0.2500, 0.2489],
         [0.2328, 0.1682, 0.1723,  ..., 0.1064, 0.2500, 0.2534]],
        [[0.4712, 0.4789, 0.0931,  ..., 0.1452, 0.6774, 0.1799],
         [0.1763, 0.1527, 0.1375,  ..., 0.6722, 0.1158, 0.3993],
         [0.1763, 0.1527, 0.0931,  ..., 0.0913, 0.0614, 0.1748],
         [0.1763, 0.2157, 0.6763,  ..., 0.0913, 0.1454, 0.2460]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1658, 0.1692, 0.1937,  ..., 0.1642, 0.1919, 0.1860],
         [0.1658, 0.2064, 0.1937,  ..., 0.2137, 0.2221, 0.1860],
         [0.1658, 0.1497, 0.1937,  ..., 0.1642, 0.1857, 0.1860],
         [0.5027, 0.4747, 0.4189,  ..., 0.4578, 0.4003, 0.4420]],
        [[0.2500, 0.2410, 0.2372,  ..., 0.2332, 0.2500, 0.2252],
         [0.2500, 0.2770, 0.2883,  ..., 0.3004, 0.2500, 0.3244],
         [0.2500, 0.2410, 0.2372,  ..., 0.2332, 0.2500, 0.2252],
         [0.2500, 0.2410, 0.2372,  ..., 0.2332, 0.2500, 0.2252]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2962, 0.2500, 0.2964,  ..., 0.2061, 0.0489, 0.4275],
         [0.2346, 0.2500, 0.1605,  ..., 0.2061, 0.0397, 0.2769],
         [0.2346, 0.2500, 0.1587,  ..., 0.2061, 0.8512, 0.1151],
         [0.2346, 0.2500, 0.3845,  ..., 0.3816, 0.0602, 0.1805]],
        [[0.1595, 0.1005, 0.2176,  ..., 0.2500, 0.2272, 0.1672],
         [0.5216, 0.2537, 0.3473,  ..., 0.2500, 0.3185, 0.1672],
         [0.1595, 0.5453, 0.2176,  ..., 0.2500, 0.2272, 0.4983],
         [0.1595, 0.1005, 0.2176,  ..., 0.2500, 0.2272, 0.1672]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:56:59,887 [Process: 0] Synchronize training processes
2024-08-16 12:56:59,888 [Process: 0] Evaluating...
2024-08-16 12:56:59,890 [Process: 0] EPOCH 55:
2024-08-16 12:56:59,892 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1800, 0.1840, 0.1377,  ..., 0.1894, 0.2360, 0.1475],
         [0.1955, 0.1840, 0.1646,  ..., 0.1770, 0.2582, 0.1475],
         [0.1800, 0.1840, 0.1377,  ..., 0.1770, 0.2360, 0.1475],
         [0.4446, 0.4479, 0.5601,  ..., 0.4567, 0.2699, 0.5575]],
        [[0.2385, 0.2500, 0.2500,  ..., 0.2472, 0.2500, 0.2500],
         [0.2844, 0.2500, 0.2500,  ..., 0.2584, 0.2500, 0.2500],
         [0.2385, 0.2500, 0.2500,  ..., 0.2472, 0.2500, 0.2500],
         [0.2385, 0.2500, 0.2500,  ..., 0.2472, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1773, 0.2462, 0.2543,  ..., 0.2061, 0.3025, 0.2575],
         [0.4734, 0.2360, 0.2399,  ..., 0.4130, 0.2596, 0.3973],
         [0.1478, 0.2360, 0.1696,  ..., 0.1470, 0.2035, 0.1726],
         [0.2015, 0.2819, 0.3362,  ..., 0.2338, 0.2344, 0.1726]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2072, 0.2400, 0.1615],
         [0.2500, 0.2500, 0.2500,  ..., 0.3783, 0.2799, 0.1615],
         [0.2500, 0.2500, 0.2500,  ..., 0.2072, 0.2400, 0.5154],
         [0.2500, 0.2500, 0.2500,  ..., 0.2072, 0.2400, 0.1615]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:01,787 [Process: 0] Synchronize training processes
2024-08-16 12:57:01,787 [Process: 0] Evaluating...
2024-08-16 12:57:01,789 [Process: 0] EPOCH 56:
2024-08-16 12:57:01,791 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1552, 0.1409, 0.1624,  ..., 0.1809, 0.1308, 0.1643],
         [0.1552, 0.1409, 0.1624,  ..., 0.1727, 0.1308, 0.1643],
         [0.1552, 0.1409, 0.1624,  ..., 0.1727, 0.1308, 0.1643],
         [0.5345, 0.5774, 0.5128,  ..., 0.4737, 0.6075, 0.5070]],
        [[0.2500, 0.2500, 0.2552,  ..., 0.2485, 0.2420, 0.2421],
         [0.2500, 0.2500, 0.2710,  ..., 0.2546, 0.2739, 0.2738],
         [0.2500, 0.2500, 0.2369,  ..., 0.2485, 0.2420, 0.2421],
         [0.2500, 0.2500, 0.2369,  ..., 0.2485, 0.2420, 0.2421]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1552, 0.1047, 0.1131,  ..., 0.1319, 0.2104, 0.3358],
         [0.1984, 0.1047, 0.0880,  ..., 0.5196, 0.2104, 0.1782],
         [0.4434, 0.1873, 0.7108,  ..., 0.2166, 0.3688, 0.1782],
         [0.2031, 0.6033, 0.0880,  ..., 0.1319, 0.2104, 0.3077]],
        [[0.2571, 0.2722, 0.3050,  ..., 0.3192, 0.2091, 0.1817],
         [0.4162, 0.3040, 0.2225,  ..., 0.3884, 0.3371, 0.4372],
         [0.1634, 0.2119, 0.2225,  ..., 0.1462, 0.2091, 0.1817],
         [0.1634, 0.2119, 0.2501,  ..., 0.1462, 0.2447, 0.1993]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:03,696 [Process: 0] Synchronize training processes
2024-08-16 12:57:03,696 [Process: 0] Evaluating...
2024-08-16 12:57:03,698 [Process: 0] EPOCH 57:
2024-08-16 12:57:03,700 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:05,617 [Process: 0] Synchronize training processes
2024-08-16 12:57:05,617 [Process: 0] Evaluating...
2024-08-16 12:57:05,619 [Process: 0] EPOCH 58:
2024-08-16 12:57:05,621 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1935, 0.1844, 0.1474,  ..., 0.1367, 0.1800, 0.1505],
         [0.1935, 0.1844, 0.1474,  ..., 0.1279, 0.2009, 0.1682],
         [0.1935, 0.1844, 0.1474,  ..., 0.1279, 0.1800, 0.1403],
         [0.4195, 0.4469, 0.5579,  ..., 0.6075, 0.4392, 0.5410]],
        [[0.2500, 0.2469, 0.2500,  ..., 0.2403, 0.2379, 0.2434],
         [0.2500, 0.2592, 0.2500,  ..., 0.2791, 0.2863, 0.2699],
         [0.2500, 0.2469, 0.2500,  ..., 0.2403, 0.2379, 0.2434],
         [0.2500, 0.2469, 0.2500,  ..., 0.2403, 0.2379, 0.2434]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2361, 0.3123, 0.2942,  ..., 0.1855, 0.2613, 0.2434],
         [0.2122, 0.2095, 0.1818,  ..., 0.1675, 0.1888, 0.1760],
         [0.1841, 0.1847, 0.1818,  ..., 0.1675, 0.1888, 0.1760],
         [0.3676, 0.2935, 0.3423,  ..., 0.4796, 0.3611, 0.4046]],
        [[0.2321, 0.2027, 0.2379,  ..., 0.0326, 0.1161, 0.1409],
         [0.2974, 0.3920, 0.2864,  ..., 0.0326, 0.1161, 0.4474],
         [0.2383, 0.2027, 0.2379,  ..., 0.8913, 0.6516, 0.2568],
         [0.2321, 0.2027, 0.2379,  ..., 0.0436, 0.1161, 0.1549]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:07,538 [Process: 0] Synchronize training processes
2024-08-16 12:57:07,539 [Process: 0] Evaluating...
2024-08-16 12:57:07,541 [Process: 0] EPOCH 59:
2024-08-16 12:57:07,543 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1111, 0.1400, 0.1810,  ..., 0.1592, 0.1690, 0.1987],
         [0.1111, 0.1650, 0.1861,  ..., 0.1904, 0.1690, 0.1987],
         [0.1111, 0.1400, 0.1810,  ..., 0.1592, 0.1690, 0.1987],
         [0.6667, 0.5549, 0.4520,  ..., 0.4913, 0.4931, 0.4038]],
        [[0.2414, 0.2500, 0.2500,  ..., 0.2494, 0.2390, 0.2500],
         [0.2757, 0.2500, 0.2500,  ..., 0.2519, 0.2831, 0.2500],
         [0.2414, 0.2500, 0.2500,  ..., 0.2494, 0.2390, 0.2500],
         [0.2414, 0.2500, 0.2500,  ..., 0.2494, 0.2390, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3187, 0.3113, 0.1681,  ..., 0.2079, 0.3346, 0.2433],
         [0.2949, 0.3013, 0.4958,  ..., 0.3287, 0.1544, 0.2700],
         [0.1703, 0.1937, 0.1681,  ..., 0.1886, 0.1796, 0.2433],
         [0.2161, 0.1937, 0.1681,  ..., 0.2749, 0.3314, 0.2433]],
        [[0.2031, 0.1597, 0.1886,  ..., 0.1239, 0.3824, 0.1832],
         [0.3381, 0.1597, 0.1886,  ..., 0.1239, 0.2059, 0.2876],
         [0.1109, 0.5208, 0.4343,  ..., 0.2087, 0.2059, 0.3601],
         [0.3478, 0.1597, 0.1886,  ..., 0.5436, 0.2059, 0.1691]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:09,443 [Process: 0] Synchronize training processes
2024-08-16 12:57:09,444 [Process: 0] Evaluating...
2024-08-16 12:57:09,446 [Process: 0] EPOCH 60:
2024-08-16 12:57:09,448 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1603, 0.1570, 0.1651,  ..., 0.1765, 0.1622, 0.1562],
         [0.1603, 0.1764, 0.1651,  ..., 0.1778, 0.1622, 0.1562],
         [0.1603, 0.1570, 0.1651,  ..., 0.1765, 0.1622, 0.1562],
         [0.5190, 0.5095, 0.5047,  ..., 0.4692, 0.5134, 0.5314]],
        [[0.2466, 0.2564, 0.2500,  ..., 0.2500, 0.2356, 0.2500],
         [0.2603, 0.2530, 0.2500,  ..., 0.2500, 0.2931, 0.2500],
         [0.2466, 0.2453, 0.2500,  ..., 0.2500, 0.2356, 0.2500],
         [0.2466, 0.2453, 0.2500,  ..., 0.2500, 0.2356, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3172, 0.2603, 0.4902,  ..., 0.3317, 0.3349, 0.0692],
         [0.2216, 0.2466, 0.1699,  ..., 0.2123, 0.2385, 0.0650],
         [0.2396, 0.2466, 0.1699,  ..., 0.2436, 0.2133, 0.4742],
         [0.2216, 0.2466, 0.1699,  ..., 0.2123, 0.2133, 0.3916]],
        [[0.2082, 0.1815, 0.2064,  ..., 0.1919, 0.2087, 0.1972],
         [0.3754, 0.4721, 0.3397,  ..., 0.4244, 0.2471, 0.4083],
         [0.2082, 0.1944, 0.1905,  ..., 0.1919, 0.1388, 0.1972],
         [0.2082, 0.1520, 0.2633,  ..., 0.1919, 0.4054, 0.1972]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:11,346 [Process: 0] Synchronize training processes
2024-08-16 12:57:11,346 [Process: 0] Evaluating...
2024-08-16 12:57:11,348 [Process: 0] EPOCH 61:
2024-08-16 12:57:11,350 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1984, 0.1691, 0.1598,  ..., 0.2028, 0.1612, 0.1535],
         [0.1984, 0.2040, 0.1598,  ..., 0.2028, 0.1612, 0.1549],
         [0.1984, 0.1691, 0.1598,  ..., 0.2028, 0.1612, 0.1435],
         [0.4047, 0.4577, 0.5205,  ..., 0.3917, 0.5165, 0.5481]],
        [[0.2330, 0.2500, 0.2467,  ..., 0.2502, 0.2500, 0.2791],
         [0.2981, 0.2500, 0.2598,  ..., 0.2499, 0.2500, 0.2401],
         [0.2359, 0.2500, 0.2467,  ..., 0.2499, 0.2500, 0.2428],
         [0.2330, 0.2500, 0.2467,  ..., 0.2499, 0.2500, 0.2380]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1327, 0.3069, 0.4593,  ..., 0.1761, 0.3915, 0.2194],
         [0.1327, 0.2070, 0.1802,  ..., 0.1761, 0.1003, 0.2194],
         [0.6019, 0.2791, 0.1802,  ..., 0.1761, 0.2409, 0.3419],
         [0.1327, 0.2070, 0.1802,  ..., 0.4716, 0.2674, 0.2194]],
        [[0.2950, 0.1446, 0.2488,  ..., 0.1178, 0.1851, 0.1871],
         [0.4592, 0.2490, 0.3018,  ..., 0.3802, 0.2250, 0.3344],
         [0.1329, 0.1446, 0.2183,  ..., 0.1178, 0.3156, 0.2869],
         [0.1129, 0.4618, 0.2310,  ..., 0.3843, 0.2742, 0.1915]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:13,248 [Process: 0] Synchronize training processes
2024-08-16 12:57:13,248 [Process: 0] Evaluating...
2024-08-16 12:57:13,250 [Process: 0] EPOCH 62:
2024-08-16 12:57:13,252 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1816, 0.1888, 0.1781,  ..., 0.1616, 0.1269, 0.1678],
         [0.1816, 0.1888, 0.1781,  ..., 0.1385, 0.1269, 0.1678],
         [0.1816, 0.1888, 0.1781,  ..., 0.1385, 0.1269, 0.1678],
         [0.4552, 0.4335, 0.4656,  ..., 0.5614, 0.6194, 0.4965]],
        [[0.2486, 0.2449, 0.2413,  ..., 0.2435, 0.2443, 0.2469],
         [0.2543, 0.2654, 0.2761,  ..., 0.2696, 0.2670, 0.2594],
         [0.2486, 0.2449, 0.2413,  ..., 0.2435, 0.2443, 0.2469],
         [0.2486, 0.2449, 0.2413,  ..., 0.2435, 0.2443, 0.2469]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1615, 0.2209, 0.2459,  ..., 0.2464, 0.1744, 0.1964],
         [0.1690, 0.2209, 0.1936,  ..., 0.2464, 0.1744, 0.1393],
         [0.1615, 0.2209, 0.1936,  ..., 0.2464, 0.1744, 0.1393],
         [0.5080, 0.3374, 0.3670,  ..., 0.2609, 0.4769, 0.5250]],
        [[0.2009, 0.3024, 0.1440,  ..., 0.1357, 0.5348, 0.4124],
         [0.1766, 0.2666, 0.1440,  ..., 0.5008, 0.1525, 0.4355],
         [0.4459, 0.3472, 0.5679,  ..., 0.2278, 0.2120, 0.0988],
         [0.1766, 0.0838, 0.1440,  ..., 0.1357, 0.1007, 0.0533]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:15,202 [Process: 0] Synchronize training processes
2024-08-16 12:57:15,202 [Process: 0] Evaluating...
2024-08-16 12:57:15,204 [Process: 0] EPOCH 63:
2024-08-16 12:57:15,206 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1568, 0.1475, 0.1455,  ..., 0.1236, 0.1677, 0.1801],
         [0.1892, 0.1448, 0.1455,  ..., 0.1236, 0.2293, 0.1801],
         [0.1552, 0.1448, 0.1455,  ..., 0.1236, 0.1677, 0.1801],
         [0.4988, 0.5629, 0.5634,  ..., 0.6292, 0.4353, 0.4598]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2485, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2545, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2485, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2485, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5724, 0.4766, 0.2746,  ..., 0.1780, 0.1330, 0.1941],
         [0.1425, 0.1745, 0.2418,  ..., 0.4660, 0.6010, 0.3971],
         [0.1425, 0.1745, 0.2418,  ..., 0.1780, 0.1330, 0.2220],
         [0.1425, 0.1745, 0.2418,  ..., 0.1780, 0.1330, 0.1869]],
        [[0.1903, 0.1375, 0.0981,  ..., 0.1034, 0.1585, 0.0397],
         [0.1903, 0.1375, 0.5555,  ..., 0.1940, 0.2243, 0.1421],
         [0.4292, 0.4908, 0.2483,  ..., 0.1896, 0.2357, 0.7629],
         [0.1903, 0.2342, 0.0981,  ..., 0.5130, 0.3816, 0.0553]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:17,113 [Process: 0] Synchronize training processes
2024-08-16 12:57:17,114 [Process: 0] Evaluating...
2024-08-16 12:57:17,116 [Process: 0] EPOCH 64:
2024-08-16 12:57:17,118 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1784, 0.1828, 0.1761,  ..., 0.1862, 0.1798, 0.1523],
         [0.1784, 0.2041, 0.1761,  ..., 0.1862, 0.1654, 0.1523],
         [0.1784, 0.1828, 0.1761,  ..., 0.1862, 0.1406, 0.1523],
         [0.4647, 0.4303, 0.4718,  ..., 0.4414, 0.5143, 0.5431]],
        [[0.2500, 0.2492, 0.3099,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2589, 0.2300,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2459, 0.2300,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2459, 0.2300,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2724, 0.3905,  ..., 0.4155, 0.2056, 0.2591],
         [0.2500, 0.1953, 0.1547,  ..., 0.1610, 0.3832, 0.1657],
         [0.2500, 0.1953, 0.1702,  ..., 0.2626, 0.2056, 0.4124],
         [0.2500, 0.3370, 0.2845,  ..., 0.1610, 0.2056, 0.1628]],
        [[0.1885, 0.2019, 0.2500,  ..., 0.0642, 0.2190, 0.1567],
         [0.2454, 0.3869, 0.2500,  ..., 0.7713, 0.1985, 0.1567],
         [0.4625, 0.2019, 0.2500,  ..., 0.1003, 0.0965, 0.2404],
         [0.1036, 0.2093, 0.2500,  ..., 0.0642, 0.4861, 0.4462]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1544, 0.1306, 0.1542,  ..., 0.1319, 0.1604, 0.1716],
         [0.1784, 0.1340, 0.1660,  ..., 0.1319, 0.1604, 0.1906],
         [0.1544, 0.1306, 0.1466,  ..., 0.1319, 0.1604, 0.1716],
         [0.5129, 0.6048, 0.5332,  ..., 0.6043, 0.5187, 0.4662]],
        [[0.2436, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2495],
         [0.2692, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2514],
         [0.2436, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2495],
         [0.2436, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2495]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:57:19,018 [Process: 0] Synchronize training processes
2024-08-16 12:57:19,018 [Process: 0] Evaluating...
2024-08-16 12:57:19,020 [Process: 0] EPOCH 65:
2024-08-16 12:57:19,022 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3100, 0.2121, 0.2070,  ..., 0.3103, 0.3194, 0.2770],
         [0.1864, 0.1545, 0.2491,  ..., 0.1931, 0.1278, 0.1822],
         [0.1743, 0.1207, 0.2126,  ..., 0.1931, 0.1273, 0.1233],
         [0.3294, 0.5127, 0.3313,  ..., 0.3036, 0.4255, 0.4175]],
        [[0.2402, 0.2343, 0.2412,  ..., 0.2500, 0.3731, 0.2500],
         [0.2794, 0.2970, 0.2763,  ..., 0.2500, 0.2440, 0.2500],
         [0.2402, 0.2343, 0.2412,  ..., 0.2500, 0.1914, 0.2500],
         [0.2402, 0.2343, 0.2412,  ..., 0.2500, 0.1914, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1737, 0.1214, 0.1534,  ..., 0.1864, 0.1935, 0.1776],
         [0.1949, 0.1214, 0.1534,  ..., 0.1864, 0.1935, 0.1776],
         [0.1737, 0.1214, 0.1534,  ..., 0.1864, 0.1935, 0.1776],
         [0.4577, 0.6357, 0.5397,  ..., 0.4407, 0.4196, 0.4673]],
        [[0.2489, 0.2500, 0.2500,  ..., 0.2345, 0.2500, 0.2516],
         [0.2532, 0.2500, 0.2500,  ..., 0.2965, 0.2747, 0.2495],
         [0.2489, 0.2500, 0.2500,  ..., 0.2345, 0.2376, 0.2495],
         [0.2489, 0.2500, 0.2500,  ..., 0.2345, 0.2376, 0.2495]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:57:20,936 [Process: 0] Synchronize training processes
2024-08-16 12:57:20,936 [Process: 0] Evaluating...
2024-08-16 12:57:20,938 [Process: 0] EPOCH 66:
2024-08-16 12:57:20,940 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1886, 0.2293, 0.2447,  ..., 0.2080, 0.2426, 0.2382],
         [0.1886, 0.2293, 0.2447,  ..., 0.2080, 0.2426, 0.2382],
         [0.4342, 0.3122, 0.2659,  ..., 0.3240, 0.2723, 0.2853],
         [0.1886, 0.2293, 0.2447,  ..., 0.2600, 0.2426, 0.2382]],
        [[0.2177, 0.2233, 0.3034,  ..., 0.2074, 0.3646, 0.2742],
         [0.3936, 0.3747, 0.2579,  ..., 0.2074, 0.3648, 0.3340],
         [0.1944, 0.2012, 0.2194,  ..., 0.3228, 0.1196, 0.1959],
         [0.1944, 0.2008, 0.2194,  ..., 0.2625, 0.1510, 0.1959]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1582, 0.1742, 0.1449,  ..., 0.1517, 0.1293, 0.1428],
         [0.2047, 0.1881, 0.1449,  ..., 0.1755, 0.1293, 0.1428],
         [0.1582, 0.1742, 0.1449,  ..., 0.1517, 0.1293, 0.1428],
         [0.4789, 0.4634, 0.5652,  ..., 0.5211, 0.6121, 0.5716]],
        [[0.2500, 0.2500, 0.2370,  ..., 0.2500, 0.2423, 0.2500],
         [0.2500, 0.2500, 0.2890,  ..., 0.2500, 0.2730, 0.2500],
         [0.2500, 0.2500, 0.2370,  ..., 0.2500, 0.2423, 0.2500],
         [0.2500, 0.2500, 0.2370,  ..., 0.2500, 0.2423, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:57:22,852 [Process: 0] Synchronize training processes
2024-08-16 12:57:22,853 [Process: 0] Evaluating...
2024-08-16 12:57:22,854 [Process: 0] EPOCH 67:
2024-08-16 12:57:22,856 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2627, 0.1704, 0.7415,  ..., 0.2634, 0.1413, 0.2489],
         [0.2535, 0.2578, 0.0862,  ..., 0.2455, 0.4535, 0.1593],
         [0.1905, 0.3095, 0.0862,  ..., 0.2455, 0.1413, 0.2136],
         [0.2933, 0.2623, 0.0862,  ..., 0.2455, 0.2638, 0.3782]],
        [[0.0574, 0.1969, 0.3712,  ..., 0.2020, 0.1474, 0.1739],
         [0.1715, 0.1452, 0.2481,  ..., 0.2020, 0.4334, 0.5446],
         [0.6525, 0.1609, 0.2627,  ..., 0.3941, 0.2374, 0.1408],
         [0.1186, 0.4970, 0.1180,  ..., 0.2020, 0.1819, 0.1408]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1458, 0.1613, 0.1783,  ..., 0.1086, 0.1642, 0.1674],
         [0.1458, 0.1613, 0.2126,  ..., 0.1086, 0.1794, 0.1674],
         [0.1458, 0.1613, 0.1773,  ..., 0.1086, 0.1642, 0.1674],
         [0.5626, 0.5162, 0.4318,  ..., 0.6741, 0.4922, 0.4979]],
        [[0.2381, 0.2653, 0.2500,  ..., 0.2500, 0.2420, 0.2500],
         [0.2856, 0.2449, 0.2500,  ..., 0.2500, 0.2740, 0.2500],
         [0.2381, 0.2449, 0.2500,  ..., 0.2500, 0.2420, 0.2500],
         [0.2381, 0.2449, 0.2500,  ..., 0.2500, 0.2420, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:57:24,755 [Process: 0] Synchronize training processes
2024-08-16 12:57:24,756 [Process: 0] Evaluating...
2024-08-16 12:57:24,757 [Process: 0] EPOCH 68:
2024-08-16 12:57:24,760 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2219, 0.2775, 0.2307,  ..., 0.6300, 0.1333, 0.1130],
         [0.3999, 0.2360, 0.3079,  ..., 0.0947, 0.1772, 0.2804],
         [0.2223, 0.2420, 0.2307,  ..., 0.0703, 0.1070, 0.1213],
         [0.1559, 0.2445, 0.2307,  ..., 0.2050, 0.5825, 0.4853]],
        [[0.1991, 0.1662, 0.2324,  ..., 0.0832, 0.1298, 0.2914],
         [0.1991, 0.3859, 0.2742,  ..., 0.5197, 0.1298, 0.4586],
         [0.4027, 0.2817, 0.2611,  ..., 0.2080, 0.4261, 0.1250],
         [0.1991, 0.1662, 0.2324,  ..., 0.1891, 0.3143, 0.1250]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1518, 0.1678, 0.1314,  ..., 0.1712, 0.1748, 0.1945],
         [0.1719, 0.1678, 0.1372,  ..., 0.2203, 0.1748, 0.1945],
         [0.1518, 0.1678, 0.1314,  ..., 0.1712, 0.1748, 0.1945],
         [0.5245, 0.4965, 0.6000,  ..., 0.4373, 0.4755, 0.4166]],
        [[0.2500, 0.2500, 0.2479,  ..., 0.2571, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2564,  ..., 0.2476, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2479,  ..., 0.2476, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2479,  ..., 0.2476, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:57:26,666 [Process: 0] Synchronize training processes
2024-08-16 12:57:26,666 [Process: 0] Evaluating...
2024-08-16 12:57:26,668 [Process: 0] EPOCH 69:
2024-08-16 12:57:26,670 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3118, 0.2074, 0.1200,  ..., 0.3340, 0.1349, 0.2557],
         [0.1322, 0.2074, 0.3267,  ..., 0.1549, 0.1349, 0.1995],
         [0.4302, 0.3711, 0.2773,  ..., 0.1549, 0.2457, 0.3236],
         [0.1257, 0.2141, 0.2760,  ..., 0.3563, 0.4844, 0.2213]],
        [[0.2275, 0.2394, 0.2136,  ..., 0.5008, 0.3631, 0.3280],
         [0.2275, 0.2159, 0.2136,  ..., 0.1060, 0.1877, 0.1686],
         [0.2275, 0.3288, 0.2136,  ..., 0.2872, 0.2615, 0.3348],
         [0.3176, 0.2159, 0.3591,  ..., 0.1060, 0.1877, 0.1686]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1440, 0.1807, 0.1793,  ..., 0.1409, 0.1660, 0.1781],
         [0.1700, 0.2214, 0.1762,  ..., 0.1442, 0.1365, 0.1781],
         [0.1440, 0.1807, 0.1762,  ..., 0.1409, 0.1365, 0.1781],
         [0.5421, 0.4172, 0.4683,  ..., 0.5741, 0.5609, 0.4656]],
        [[0.2500, 0.2329, 0.2500,  ..., 0.2500, 0.2500, 0.2446],
         [0.2500, 0.3013, 0.2500,  ..., 0.2500, 0.2500, 0.2662],
         [0.2500, 0.2329, 0.2500,  ..., 0.2500, 0.2500, 0.2446],
         [0.2500, 0.2329, 0.2500,  ..., 0.2500, 0.2500, 0.2446]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:57:28,577 [Process: 0] Synchronize training processes
2024-08-16 12:57:28,578 [Process: 0] Evaluating...
2024-08-16 12:57:28,580 [Process: 0] EPOCH 70:
2024-08-16 12:57:28,582 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2187, 0.2297, 0.3556,  ..., 0.3465, 0.2476, 0.2074],
         [0.2187, 0.1332, 0.2148,  ..., 0.1866, 0.2573, 0.2074],
         [0.2187, 0.5036, 0.2148,  ..., 0.1611, 0.2476, 0.3778],
         [0.3440, 0.1334, 0.2148,  ..., 0.3057, 0.2476, 0.2074]],
        [[0.2749, 0.1784, 0.2264,  ..., 0.1582, 0.1755, 0.0372],
         [0.2637, 0.4648, 0.4778,  ..., 0.1582, 0.4736, 0.0470],
         [0.2757, 0.1784, 0.1441,  ..., 0.1698, 0.1755, 0.0372],
         [0.1857, 0.1784, 0.1517,  ..., 0.5139, 0.1755, 0.8787]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1888, 0.1812, 0.1593,  ..., 0.1668, 0.1478, 0.2053],
         [0.1824, 0.1812, 0.1651,  ..., 0.1668, 0.1478, 0.2053],
         [0.1697, 0.1812, 0.1593,  ..., 0.1668, 0.1488, 0.2053],
         [0.4591, 0.4565, 0.5162,  ..., 0.4995, 0.5557, 0.3841]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2444, 0.2500, 0.2497],
         [0.2500, 0.2500, 0.2500,  ..., 0.2667, 0.2500, 0.2510],
         [0.2500, 0.2500, 0.2500,  ..., 0.2444, 0.2500, 0.2497],
         [0.2500, 0.2500, 0.2500,  ..., 0.2444, 0.2500, 0.2497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:57:30,498 [Process: 0] Synchronize training processes
2024-08-16 12:57:30,498 [Process: 0] Evaluating...
2024-08-16 12:57:30,500 [Process: 0] EPOCH 71:
2024-08-16 12:57:30,502 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4180, 0.2560, 0.0907,  ..., 0.1575, 0.3542, 0.2160],
         [0.1636, 0.0910, 0.0907,  ..., 0.1474, 0.0793, 0.2160],
         [0.1932, 0.5251, 0.5701,  ..., 0.2629, 0.2494, 0.2751],
         [0.2252, 0.1280, 0.2484,  ..., 0.4321, 0.3171, 0.2928]],
        [[0.2500, 0.2062, 0.2500,  ..., 0.2837, 0.2212, 0.2309],
         [0.2500, 0.4090, 0.2500,  ..., 0.3793, 0.3363, 0.3074],
         [0.2500, 0.1924, 0.2500,  ..., 0.1685, 0.2212, 0.2309],
         [0.2500, 0.1924, 0.2500,  ..., 0.1685, 0.2212, 0.2309]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1977, 0.1523, 0.2078,  ..., 0.1359, 0.1726, 0.1933],
         [0.1977, 0.1523, 0.2078,  ..., 0.1510, 0.1726, 0.1933],
         [0.1977, 0.1523, 0.2078,  ..., 0.1359, 0.1726, 0.1933],
         [0.4070, 0.5430, 0.3765,  ..., 0.5773, 0.4821, 0.4200]],
        [[0.2437, 0.2384, 0.2500,  ..., 0.2500, 0.2495, 0.2500],
         [0.2690, 0.2848, 0.2500,  ..., 0.2500, 0.2514, 0.2500],
         [0.2437, 0.2384, 0.2500,  ..., 0.2500, 0.2495, 0.2500],
         [0.2437, 0.2384, 0.2500,  ..., 0.2500, 0.2495, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:57:32,405 [Process: 0] Synchronize training processes
2024-08-16 12:57:32,406 [Process: 0] Evaluating...
2024-08-16 12:57:32,408 [Process: 0] EPOCH 72:
2024-08-16 12:57:32,409 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3657, 0.3875, 0.1796,  ..., 0.2832, 0.2590, 0.3134],
         [0.1937, 0.1381, 0.2487,  ..., 0.2389, 0.1218, 0.5360],
         [0.1953, 0.3363, 0.3920,  ..., 0.2389, 0.2279, 0.0753],
         [0.2454, 0.1381, 0.1796,  ..., 0.2389, 0.3913, 0.0753]],
        [[0.1617, 0.0999, 0.1785,  ..., 0.0647, 0.1028, 0.1778],
         [0.1617, 0.0999, 0.1785,  ..., 0.0647, 0.4969, 0.2419],
         [0.4076, 0.4789, 0.3804,  ..., 0.7511, 0.1028, 0.2921],
         [0.2690, 0.3214, 0.2626,  ..., 0.1195, 0.2975, 0.2882]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2052, 0.1712, 0.2063,  ..., 0.1860, 0.1953, 0.2054],
         [0.2052, 0.1712, 0.2063,  ..., 0.1751, 0.1953, 0.2054],
         [0.2052, 0.1712, 0.2063,  ..., 0.1751, 0.1953, 0.2054],
         [0.3844, 0.4864, 0.3810,  ..., 0.4639, 0.4142, 0.3838]],
        [[0.2396, 0.2421, 0.2500,  ..., 0.2489, 0.2465, 0.2485],
         [0.2539, 0.2736, 0.2500,  ..., 0.2533, 0.2634, 0.2546],
         [0.2668, 0.2421, 0.2500,  ..., 0.2489, 0.2564, 0.2485],
         [0.2396, 0.2421, 0.2500,  ..., 0.2489, 0.2337, 0.2485]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:57:34,326 [Process: 0] Synchronize training processes
2024-08-16 12:57:34,327 [Process: 0] Evaluating...
2024-08-16 12:57:34,329 [Process: 0] EPOCH 73:
2024-08-16 12:57:34,330 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2140, 0.2500, 0.3352,  ..., 0.0413, 0.2498, 0.4064],
         [0.2346, 0.2500, 0.2216,  ..., 0.0137, 0.2507, 0.2304],
         [0.2140, 0.2500, 0.2216,  ..., 0.9313, 0.2498, 0.1816],
         [0.3375, 0.2500, 0.2216,  ..., 0.0137, 0.2498, 0.1816]],
        [[0.1987, 0.2295, 0.2262,  ..., 0.1984, 0.1995, 0.2050],
         [0.4039, 0.3115, 0.2949,  ..., 0.2916, 0.2230, 0.3056],
         [0.1987, 0.2295, 0.2262,  ..., 0.1984, 0.1995, 0.2050],
         [0.1987, 0.2295, 0.2527,  ..., 0.3116, 0.3781, 0.2844]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1835, 0.1905, 0.2112,  ..., 0.2042, 0.2027, 0.1629],
         [0.1835, 0.1905, 0.2112,  ..., 0.2042, 0.2027, 0.1684],
         [0.1835, 0.1905, 0.2112,  ..., 0.2042, 0.2027, 0.1629],
         [0.4496, 0.4285, 0.3663,  ..., 0.3873, 0.3918, 0.5059]],
        [[0.2500, 0.2424, 0.2372,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2729, 0.2884,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2424, 0.2372,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2424, 0.2372,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:57:36,230 [Process: 0] Synchronize training processes
2024-08-16 12:57:36,230 [Process: 0] Evaluating...
2024-08-16 12:57:36,232 [Process: 0] EPOCH 74:
2024-08-16 12:57:36,234 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1656, 0.2381, 0.2500,  ..., 0.2303, 0.2269, 0.4058],
         [0.1656, 0.2856, 0.2500,  ..., 0.3092, 0.2269, 0.1715],
         [0.1656, 0.2381, 0.2500,  ..., 0.2303, 0.2269, 0.1665],
         [0.5033, 0.2381, 0.2500,  ..., 0.2303, 0.3194, 0.2562]],
        [[0.1908, 0.1988, 0.2113,  ..., 0.5745, 0.5233, 0.3980],
         [0.1908, 0.1988, 0.2113,  ..., 0.1274, 0.1286, 0.2240],
         [0.4276, 0.4036, 0.3662,  ..., 0.2378, 0.2194, 0.1890],
         [0.1908, 0.1988, 0.2113,  ..., 0.0604, 0.1286, 0.1890]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1565, 0.1702, 0.1328,  ..., 0.1763, 0.1756, 0.1792],
         [0.1429, 0.1702, 0.1328,  ..., 0.1763, 0.1858, 0.1792],
         [0.1429, 0.1702, 0.1328,  ..., 0.1763, 0.1756, 0.1792],
         [0.5576, 0.4893, 0.6017,  ..., 0.4710, 0.4629, 0.4625]],
        [[0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2507, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 12:57:38,154 [Process: 0] Synchronize training processes
2024-08-16 12:57:38,154 [Process: 0] Evaluating...
2024-08-16 12:57:38,156 [Process: 0] EPOCH 75:
2024-08-16 12:57:38,158 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1893, 0.2051, 0.2500,  ..., 0.1787, 0.1772, 0.4919],
         [0.4292, 0.2051, 0.2500,  ..., 0.1787, 0.6524, 0.2510],
         [0.1893, 0.3793, 0.2500,  ..., 0.3023, 0.0670, 0.1285],
         [0.1922, 0.2105, 0.2500,  ..., 0.3403, 0.1034, 0.1285]],
        [[0.1065, 0.1768, 0.4553,  ..., 0.5214, 0.4296, 0.1472],
         [0.6964, 0.1940, 0.1753,  ..., 0.1955, 0.1901, 0.2836],
         [0.1253, 0.2346, 0.1941,  ..., 0.1415, 0.1901, 0.4219],
         [0.0718, 0.3945, 0.1753,  ..., 0.1415, 0.1901, 0.1472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1141, 0.1557, 0.1553,  ..., 0.1702, 0.1105, 0.1592],
         [0.1318, 0.1557, 0.1553,  ..., 0.1945, 0.1105, 0.1592],
         [0.1141, 0.1557, 0.1553,  ..., 0.1702, 0.1105, 0.1592],
         [0.6399, 0.5330, 0.5341,  ..., 0.4651, 0.6685, 0.5223]],
        [[0.2474, 0.2405, 0.2458,  ..., 0.2500, 0.2418, 0.2500],
         [0.2579, 0.2722, 0.2626,  ..., 0.2500, 0.2746, 0.2500],
         [0.2474, 0.2468, 0.2458,  ..., 0.2500, 0.2418, 0.2500],
         [0.2474, 0.2405, 0.2458,  ..., 0.2500, 0.2418, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1831, 0.2364, 0.1967,  ..., 0.1577, 0.2500, 0.2158],
         [0.1831, 0.2364, 0.1967,  ..., 0.1577, 0.2500, 0.2158],
         [0.1831, 0.2364, 0.1967,  ..., 0.1808, 0.2500, 0.2158],
         [0.4506, 0.2907, 0.4099,  ..., 0.5038, 0.2500, 0.3527]],
        [[0.5257, 0.2079, 0.1907,  ..., 0.4714, 0.0015, 0.3927],
         [0.2847, 0.2871, 0.2176,  ..., 0.2807, 0.0015, 0.2926],
         [0.0948, 0.2971, 0.4915,  ..., 0.1351, 0.9835, 0.1574],
         [0.0948, 0.2079, 0.1002,  ..., 0.1128, 0.0135, 0.1574]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:57:40,076 [Process: 0] Synchronize training processes
2024-08-16 12:57:40,077 [Process: 0] Evaluating...
2024-08-16 12:57:40,079 [Process: 0] EPOCH 76:
2024-08-16 12:57:40,081 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1712, 0.1544, 0.1335,  ..., 0.1630, 0.1552, 0.1612],
         [0.1712, 0.1544, 0.1335,  ..., 0.1630, 0.1552, 0.1612],
         [0.1712, 0.1544, 0.1335,  ..., 0.1630, 0.1552, 0.1612],
         [0.4865, 0.5367, 0.5994,  ..., 0.5109, 0.5345, 0.5163]],
        [[0.2500, 0.2500, 0.2466,  ..., 0.2474, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2601,  ..., 0.2578, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2466,  ..., 0.2474, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2466,  ..., 0.2474, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0992, 0.1847, 0.2307,  ..., 0.1571, 0.5267, 0.1707],
         [0.1148, 0.1847, 0.2307,  ..., 0.3221, 0.2270, 0.2402],
         [0.1837, 0.3307, 0.3079,  ..., 0.2270, 0.1231, 0.2935],
         [0.6023, 0.2999, 0.2307,  ..., 0.2938, 0.1231, 0.2955]],
        [[0.2375, 0.3347, 0.2311,  ..., 0.2503, 0.3136, 0.2571],
         [0.2875, 0.2997, 0.3067,  ..., 0.2738, 0.3524, 0.3777],
         [0.2375, 0.1828, 0.2311,  ..., 0.2379, 0.1670, 0.1826],
         [0.2375, 0.1828, 0.2311,  ..., 0.2379, 0.1670, 0.1826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:41,986 [Process: 0] Synchronize training processes
2024-08-16 12:57:41,987 [Process: 0] Evaluating...
2024-08-16 12:57:41,989 [Process: 0] EPOCH 77:
2024-08-16 12:57:41,991 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1503, 0.1781, 0.1668,  ..., 0.1886, 0.1695, 0.1260],
         [0.1730, 0.1781, 0.1847,  ..., 0.1886, 0.1695, 0.1376],
         [0.1503, 0.1781, 0.1668,  ..., 0.1886, 0.1695, 0.1260],
         [0.5264, 0.4658, 0.4817,  ..., 0.4341, 0.4915, 0.6105]],
        [[0.2500, 0.2500, 0.2496,  ..., 0.2369, 0.2500, 0.2440],
         [0.2500, 0.2500, 0.2513,  ..., 0.2894, 0.2500, 0.2681],
         [0.2500, 0.2500, 0.2496,  ..., 0.2369, 0.2500, 0.2440],
         [0.2500, 0.2500, 0.2496,  ..., 0.2369, 0.2500, 0.2440]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3380, 0.7302, 0.2314,  ..., 0.1914, 0.2831, 0.0840],
         [0.2546, 0.1015, 0.2909,  ..., 0.1914, 0.2356, 0.0840],
         [0.2189, 0.0842, 0.2463,  ..., 0.4257, 0.2356, 0.3074],
         [0.1884, 0.0842, 0.2314,  ..., 0.1914, 0.2457, 0.5246]],
        [[0.1629, 0.3182, 0.2500,  ..., 0.2500, 0.2395, 0.2354],
         [0.2635, 0.2041, 0.2500,  ..., 0.2500, 0.2395, 0.2354],
         [0.4107, 0.2785, 0.2500,  ..., 0.2500, 0.2816, 0.2354],
         [0.1629, 0.1992, 0.2500,  ..., 0.2500, 0.2395, 0.2939]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:43,891 [Process: 0] Synchronize training processes
2024-08-16 12:57:43,891 [Process: 0] Evaluating...
2024-08-16 12:57:43,893 [Process: 0] EPOCH 78:
2024-08-16 12:57:43,895 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1753, 0.1540, 0.2287,  ..., 0.1426, 0.1418, 0.1584],
         [0.1753, 0.1540, 0.2287,  ..., 0.1426, 0.1418, 0.1584],
         [0.1753, 0.1540, 0.2287,  ..., 0.1426, 0.1418, 0.1584],
         [0.4740, 0.5381, 0.3138,  ..., 0.5722, 0.5745, 0.5247]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2463, 0.2500, 0.2413],
         [0.2500, 0.2500, 0.2500,  ..., 0.2611, 0.2500, 0.2762],
         [0.2500, 0.2500, 0.2500,  ..., 0.2463, 0.2500, 0.2413],
         [0.2500, 0.2500, 0.2500,  ..., 0.2463, 0.2500, 0.2413]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4806, 0.2092, 0.3187,  ..., 0.0980, 0.0701, 0.4175],
         [0.1392, 0.5126, 0.2228,  ..., 0.0980, 0.0701, 0.1664],
         [0.2249, 0.1391, 0.2228,  ..., 0.0980, 0.1972, 0.1804],
         [0.1553, 0.1391, 0.2357,  ..., 0.7061, 0.6625, 0.2357]],
        [[0.2216, 0.1421, 0.2222,  ..., 0.0768, 0.4161, 0.1824],
         [0.2216, 0.3344, 0.2222,  ..., 0.7601, 0.1065, 0.1824],
         [0.3277, 0.3815, 0.3334,  ..., 0.0768, 0.1065, 0.1824],
         [0.2292, 0.1421, 0.2222,  ..., 0.0864, 0.3709, 0.4529]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:45,803 [Process: 0] Synchronize training processes
2024-08-16 12:57:45,803 [Process: 0] Evaluating...
2024-08-16 12:57:45,805 [Process: 0] EPOCH 79:
2024-08-16 12:57:45,807 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:47,721 [Process: 0] Synchronize training processes
2024-08-16 12:57:47,722 [Process: 0] Evaluating...
2024-08-16 12:57:47,724 [Process: 0] EPOCH 80:
2024-08-16 12:57:47,726 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1488, 0.1785, 0.1383,  ..., 0.1802, 0.1191, 0.1714],
         [0.1822, 0.1830, 0.1739,  ..., 0.2167, 0.1191, 0.1714],
         [0.1488, 0.1785, 0.1383,  ..., 0.1802, 0.1191, 0.1714],
         [0.5202, 0.4600, 0.5496,  ..., 0.4230, 0.6428, 0.4858]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2445, 0.2371, 0.2560],
         [0.2500, 0.2500, 0.2500,  ..., 0.2487, 0.2886, 0.2480],
         [0.2500, 0.2500, 0.2500,  ..., 0.2623, 0.2371, 0.2480],
         [0.2500, 0.2500, 0.2500,  ..., 0.2445, 0.2371, 0.2480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1779, 0.1276, 0.2500,  ..., 0.2065, 0.2246, 0.2244],
         [0.2464, 0.2797, 0.2500,  ..., 0.1484, 0.3261, 0.2580],
         [0.1424, 0.0915, 0.2500,  ..., 0.1484, 0.2246, 0.2932],
         [0.4332, 0.5013, 0.2500,  ..., 0.4968, 0.2246, 0.2244]],
        [[0.2500, 0.2500, 0.2038,  ..., 0.1707, 0.2170, 0.1857],
         [0.2500, 0.2500, 0.2038,  ..., 0.1707, 0.2055, 0.1857],
         [0.2500, 0.2500, 0.3886,  ..., 0.2966, 0.1950, 0.1857],
         [0.2500, 0.2500, 0.2038,  ..., 0.3620, 0.3825, 0.4429]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:49,650 [Process: 0] Synchronize training processes
2024-08-16 12:57:49,650 [Process: 0] Evaluating...
2024-08-16 12:57:49,652 [Process: 0] EPOCH 81:
2024-08-16 12:57:49,654 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1583, 0.1668, 0.1714,  ..., 0.2013, 0.2008, 0.1738],
         [0.1653, 0.1668, 0.1758,  ..., 0.2013, 0.2008, 0.2139],
         [0.1583, 0.1668, 0.1714,  ..., 0.2059, 0.2008, 0.1738],
         [0.5181, 0.4997, 0.4813,  ..., 0.3915, 0.3977, 0.4385]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1181, 0.1718, 0.1763,  ..., 0.1775, 0.1204, 0.3049],
         [0.1181, 0.1718, 0.1763,  ..., 0.1238, 0.1204, 0.1860],
         [0.6458, 0.4845, 0.2958,  ..., 0.5748, 0.1204, 0.3232],
         [0.1181, 0.1718, 0.3516,  ..., 0.1238, 0.6389, 0.1860]],
        [[0.2427, 0.2322, 0.3052,  ..., 0.2130, 0.4007, 0.2870],
         [0.3551, 0.3033, 0.2720,  ..., 0.3837, 0.2299, 0.3691],
         [0.2727, 0.2322, 0.2114,  ..., 0.2074, 0.1847, 0.1719],
         [0.1294, 0.2322, 0.2114,  ..., 0.1959, 0.1847, 0.1719]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:51,560 [Process: 0] Synchronize training processes
2024-08-16 12:57:51,561 [Process: 0] Evaluating...
2024-08-16 12:57:51,562 [Process: 0] EPOCH 82:
2024-08-16 12:57:51,564 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1639, 0.1542, 0.1878,  ..., 0.1613, 0.1724, 0.1206],
         [0.1639, 0.1687, 0.1878,  ..., 0.1613, 0.1724, 0.1206],
         [0.1639, 0.1542, 0.1878,  ..., 0.1613, 0.1724, 0.1206],
         [0.5083, 0.5228, 0.4365,  ..., 0.5161, 0.4829, 0.6381]],
        [[0.2500, 0.2407, 0.2467,  ..., 0.2500, 0.2452, 0.2500],
         [0.2500, 0.2778, 0.2735,  ..., 0.2500, 0.2644, 0.2500],
         [0.2500, 0.2407, 0.2399,  ..., 0.2500, 0.2452, 0.2500],
         [0.2500, 0.2407, 0.2399,  ..., 0.2500, 0.2452, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3534, 0.2500, 0.5125,  ..., 0.0916, 0.2019, 0.3748],
         [0.2155, 0.2500, 0.1440,  ..., 0.0611, 0.2019, 0.1578],
         [0.2155, 0.2500, 0.1440,  ..., 0.0611, 0.2920, 0.1578],
         [0.2155, 0.2500, 0.1996,  ..., 0.7862, 0.3043, 0.3097]],
        [[0.1523, 0.1776, 0.2108,  ..., 0.1911, 0.1376, 0.1235],
         [0.5431, 0.3135, 0.3371,  ..., 0.4268, 0.1463, 0.1235],
         [0.1523, 0.3313, 0.2412,  ..., 0.1911, 0.5784, 0.6295],
         [0.1523, 0.1776, 0.2108,  ..., 0.1911, 0.1376, 0.1235]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:53,461 [Process: 0] Synchronize training processes
2024-08-16 12:57:53,462 [Process: 0] Evaluating...
2024-08-16 12:57:53,464 [Process: 0] EPOCH 83:
2024-08-16 12:57:53,466 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1739, 0.1444, 0.1876,  ..., 0.1500, 0.1435, 0.1651],
         [0.1739, 0.1444, 0.1876,  ..., 0.1500, 0.1435, 0.1651],
         [0.1739, 0.1444, 0.1876,  ..., 0.1500, 0.1435, 0.1651],
         [0.4784, 0.5669, 0.4373,  ..., 0.5501, 0.5694, 0.5048]],
        [[0.2386, 0.2387, 0.2389,  ..., 0.2438, 0.2401, 0.2500],
         [0.2842, 0.2838, 0.2834,  ..., 0.2687, 0.2796, 0.2500],
         [0.2386, 0.2387, 0.2389,  ..., 0.2438, 0.2401, 0.2500],
         [0.2386, 0.2387, 0.2389,  ..., 0.2438, 0.2401, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.0112e-01, 1.3871e-01, 2.4893e-01,  ..., 2.6426e-01,
          1.3726e-01, 9.9727e-01],
         [2.0112e-01, 1.3871e-01, 2.4893e-01,  ..., 2.4012e-01,
          9.1183e-02, 4.6667e-04],
         [2.0112e-01, 1.3871e-01, 2.4893e-01,  ..., 1.4499e-01,
          9.1183e-02, 2.2370e-03],
         [3.9663e-01, 5.8388e-01, 2.5322e-01,  ..., 3.5063e-01,
          6.8038e-01, 2.4759e-05]],
        [[2.6542e-01, 2.1016e-01, 2.0437e-01,  ..., 2.0833e-01,
          2.4357e-01, 2.1706e-01],
         [2.8186e-01, 3.2715e-01, 2.6730e-01,  ..., 2.9767e-01,
          2.6930e-01, 2.1706e-01],
         [2.2636e-01, 2.8657e-01, 3.2396e-01,  ..., 2.8566e-01,
          2.4357e-01, 3.4883e-01],
         [2.2636e-01, 1.7612e-01, 2.0437e-01,  ..., 2.0833e-01,
          2.4357e-01, 2.1706e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:55,401 [Process: 0] Synchronize training processes
2024-08-16 12:57:55,401 [Process: 0] Evaluating...
2024-08-16 12:57:55,404 [Process: 0] EPOCH 84:
2024-08-16 12:57:55,406 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1613, 0.1616, 0.1328,  ..., 0.2003, 0.1253, 0.1748],
         [0.1613, 0.1616, 0.1512,  ..., 0.2003, 0.1253, 0.1748],
         [0.1613, 0.1616, 0.1328,  ..., 0.2003, 0.1253, 0.1748],
         [0.5160, 0.5153, 0.5833,  ..., 0.3990, 0.6240, 0.4756]],
        [[0.2500, 0.2451, 0.2397,  ..., 0.2417, 0.2613, 0.2480],
         [0.2500, 0.2646, 0.2809,  ..., 0.2749, 0.2462, 0.2561],
         [0.2500, 0.2451, 0.2397,  ..., 0.2417, 0.2462, 0.2480],
         [0.2500, 0.2451, 0.2397,  ..., 0.2417, 0.2462, 0.2480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4432, 0.2249, 0.2544,  ..., 0.5593, 0.2029, 0.2529],
         [0.1440, 0.2249, 0.1705,  ..., 0.1098, 0.0566, 0.1532],
         [0.1440, 0.2249, 0.2342,  ..., 0.1098, 0.1629, 0.3270],
         [0.2689, 0.3252, 0.3410,  ..., 0.2211, 0.5776, 0.2669]],
        [[0.1537, 0.0741, 0.2144,  ..., 0.2438, 0.1656, 0.4400],
         [0.1537, 0.0993, 0.2144,  ..., 0.2438, 0.1656, 0.1729],
         [0.5390, 0.7524, 0.3568,  ..., 0.2687, 0.5031, 0.2142],
         [0.1537, 0.0741, 0.2144,  ..., 0.2438, 0.1656, 0.1729]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:57:57,320 [Process: 0] Synchronize training processes
2024-08-16 12:57:57,321 [Process: 0] Evaluating...
2024-08-16 12:57:57,322 [Process: 0] EPOCH 85:
2024-08-16 12:57:57,324 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1408, 0.1765, 0.1332,  ..., 0.1419, 0.1996, 0.1284],
         [0.1408, 0.1765, 0.1332,  ..., 0.1419, 0.1996, 0.1209],
         [0.1408, 0.1765, 0.1332,  ..., 0.1419, 0.1996, 0.1209],
         [0.5775, 0.4704, 0.6005,  ..., 0.5743, 0.4011, 0.6299]],
        [[0.2417, 0.2416, 0.2593,  ..., 0.2500, 0.2500, 0.2500],
         [0.2750, 0.2753, 0.2469,  ..., 0.2500, 0.2500, 0.2500],
         [0.2417, 0.2416, 0.2469,  ..., 0.2500, 0.2500, 0.2500],
         [0.2417, 0.2416, 0.2469,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2094, 0.1918, 0.1702,  ..., 0.2650, 0.5722, 0.1732],
         [0.2094, 0.1530, 0.1614,  ..., 0.1654, 0.1468, 0.2687],
         [0.2094, 0.1530, 0.1614,  ..., 0.1654, 0.0947, 0.1732],
         [0.3719, 0.5021, 0.5070,  ..., 0.4042, 0.1863, 0.3850]],
        [[0.2004, 0.2980, 0.2282,  ..., 0.1210, 0.2630, 0.2199],
         [0.2087, 0.2687, 0.2282,  ..., 0.1210, 0.2457, 0.2199],
         [0.3904, 0.1832, 0.3155,  ..., 0.6369, 0.2457, 0.2561],
         [0.2004, 0.2501, 0.2282,  ..., 0.1210, 0.2457, 0.3040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 12:57:59,219 [Process: 0] Synchronize training processes
2024-08-16 12:57:59,220 [Process: 0] Evaluating...
2024-08-16 12:57:59,222 [Process: 0] EPOCH 86:
2024-08-16 12:57:59,223 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1431, 0.1602, 0.1336,  ..., 0.1384, 0.2011, 0.1257],
         [0.1431, 0.1602, 0.1336,  ..., 0.1384, 0.2011, 0.1257],
         [0.1431, 0.1602, 0.1336,  ..., 0.1384, 0.2011, 0.1257],
         [0.5708, 0.5194, 0.5991,  ..., 0.5848, 0.3967, 0.6229]],
        [[0.2383, 0.2457, 0.2425,  ..., 0.2418, 0.2457, 0.2486],
         [0.2852, 0.2630, 0.2725,  ..., 0.2545, 0.2630, 0.2542],
         [0.2383, 0.2457, 0.2425,  ..., 0.2619, 0.2457, 0.2486],
         [0.2383, 0.2457, 0.2425,  ..., 0.2418, 0.2457, 0.2486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0835, 0.0821, 0.0945,  ..., 0.0996, 0.1056, 0.1228],
         [0.2464, 0.1844, 0.0945,  ..., 0.0996, 0.1140, 0.1228],
         [0.5866, 0.6082, 0.6128,  ..., 0.4025, 0.3349, 0.1228],
         [0.0835, 0.1254, 0.1982,  ..., 0.3983, 0.4455, 0.6316]],
        [[0.5550, 0.4145, 0.2500,  ..., 0.5493, 0.4132, 0.2055],
         [0.1768, 0.1952, 0.2500,  ..., 0.1577, 0.1956, 0.2055],
         [0.1642, 0.1952, 0.2500,  ..., 0.1465, 0.1956, 0.3834],
         [0.1040, 0.1952, 0.2500,  ..., 0.1465, 0.1956, 0.2055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1500, 0.1392, 0.1574,  ..., 0.1487, 0.2010, 0.1621],
         [0.1500, 0.1392, 0.1574,  ..., 0.1487, 0.2010, 0.1621],
         [0.1500, 0.1392, 0.1574,  ..., 0.1487, 0.2010, 0.1621],
         [0.5499, 0.5825, 0.5279,  ..., 0.5538, 0.3971, 0.5138]],
        [[0.2386, 0.2498, 0.2401,  ..., 0.2489, 0.2446, 0.2378],
         [0.2841, 0.2506, 0.2798,  ..., 0.2533, 0.2663, 0.2866],
         [0.2386, 0.2498, 0.2401,  ..., 0.2489, 0.2446, 0.2378],
         [0.2386, 0.2498, 0.2401,  ..., 0.2489, 0.2446, 0.2378]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:01,154 [Process: 0] Synchronize training processes
2024-08-16 12:58:01,154 [Process: 0] Evaluating...
2024-08-16 12:58:01,156 [Process: 0] EPOCH 87:
2024-08-16 12:58:01,158 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2736, 0.2500, 0.3422,  ..., 0.1672, 0.4401, 0.3580],
         [0.1512, 0.2500, 0.1376,  ..., 0.1672, 0.1866, 0.1746],
         [0.1512, 0.2500, 0.0896,  ..., 0.1672, 0.1866, 0.1746],
         [0.4240, 0.2500, 0.4307,  ..., 0.4984, 0.1866, 0.2929]],
        [[0.2329, 0.2995, 0.1679,  ..., 0.6080, 0.1822, 0.1858],
         [0.2400, 0.3201, 0.4418,  ..., 0.1476, 0.4533, 0.3451],
         [0.2941, 0.2795, 0.3029,  ..., 0.1222, 0.1822, 0.2834],
         [0.2329, 0.1009, 0.0874,  ..., 0.1222, 0.1822, 0.1858]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1283, 0.1541, 0.1543,  ..., 0.1640, 0.1677, 0.1847],
         [0.1283, 0.1541, 0.1857,  ..., 0.1640, 0.1677, 0.1847],
         [0.1283, 0.1541, 0.1543,  ..., 0.1640, 0.1677, 0.1847],
         [0.6150, 0.5378, 0.5058,  ..., 0.5079, 0.4968, 0.4460]],
        [[0.2500, 0.2475, 0.2500,  ..., 0.2496, 0.2481, 0.2500],
         [0.2500, 0.2574, 0.2500,  ..., 0.2513, 0.2558, 0.2500],
         [0.2500, 0.2475, 0.2500,  ..., 0.2496, 0.2481, 0.2500],
         [0.2500, 0.2475, 0.2500,  ..., 0.2496, 0.2481, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:03,051 [Process: 0] Synchronize training processes
2024-08-16 12:58:03,052 [Process: 0] Evaluating...
2024-08-16 12:58:03,054 [Process: 0] EPOCH 88:
2024-08-16 12:58:03,056 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2893, 0.2307, 0.1544,  ..., 0.4148, 0.1616, 0.1575],
         [0.2369, 0.1551, 0.1544,  ..., 0.1485, 0.2457, 0.1575],
         [0.2369, 0.1551, 0.1544,  ..., 0.1485, 0.1616, 0.1575],
         [0.2369, 0.4591, 0.5368,  ..., 0.2883, 0.4310, 0.5274]],
        [[0.1505, 0.7102, 0.1591,  ..., 0.2976, 0.2091, 0.2175],
         [0.1576, 0.0795, 0.2075,  ..., 0.3411, 0.2108, 0.3475],
         [0.5415, 0.1309, 0.4744,  ..., 0.2189, 0.3710, 0.2175],
         [0.1505, 0.0795, 0.1591,  ..., 0.1425, 0.2091, 0.2175]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1207, 0.1547, 0.0962,  ..., 0.1536, 0.1754, 0.1968],
         [0.1380, 0.1605, 0.0962,  ..., 0.1536, 0.1936, 0.2002],
         [0.1207, 0.1547, 0.0962,  ..., 0.1536, 0.1754, 0.1968],
         [0.6206, 0.5301, 0.7115,  ..., 0.5393, 0.4555, 0.4061]],
        [[0.2421, 0.2482, 0.2476,  ..., 0.2469, 0.2500, 0.2500],
         [0.2737, 0.2555, 0.2573,  ..., 0.2592, 0.2500, 0.2500],
         [0.2421, 0.2482, 0.2476,  ..., 0.2469, 0.2500, 0.2500],
         [0.2421, 0.2482, 0.2476,  ..., 0.2469, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:04,948 [Process: 0] Synchronize training processes
2024-08-16 12:58:04,949 [Process: 0] Evaluating...
2024-08-16 12:58:04,951 [Process: 0] EPOCH 89:
2024-08-16 12:58:04,953 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3086, 0.2317, 0.1847,  ..., 0.2057, 0.4270, 0.1430],
         [0.2677, 0.2557, 0.1847,  ..., 0.4570, 0.2794, 0.2803],
         [0.1266, 0.2321, 0.2705,  ..., 0.1686, 0.0957, 0.1430],
         [0.2970, 0.2805, 0.3602,  ..., 0.1686, 0.1979, 0.4337]],
        [[0.3902, 0.4414, 0.2949,  ..., 0.1611, 0.2767, 0.1887],
         [0.2611, 0.1777, 0.2475,  ..., 0.5168, 0.1441, 0.1887],
         [0.1749, 0.1654, 0.2696,  ..., 0.1611, 0.4387, 0.4339],
         [0.1738, 0.2155, 0.1880,  ..., 0.1611, 0.1405, 0.1887]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1509, 0.1696, 0.1473,  ..., 0.1539, 0.1493, 0.1567],
         [0.1509, 0.1696, 0.1473,  ..., 0.1539, 0.1555, 0.1567],
         [0.1509, 0.1696, 0.1473,  ..., 0.1539, 0.1493, 0.1567],
         [0.5473, 0.4911, 0.5581,  ..., 0.5383, 0.5460, 0.5299]],
        [[0.2500, 0.2500, 0.2448,  ..., 0.2493, 0.2423, 0.2490],
         [0.2500, 0.2500, 0.2657,  ..., 0.2522, 0.2731, 0.2530],
         [0.2500, 0.2500, 0.2448,  ..., 0.2493, 0.2423, 0.2490],
         [0.2500, 0.2500, 0.2448,  ..., 0.2493, 0.2423, 0.2490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:06,874 [Process: 0] Synchronize training processes
2024-08-16 12:58:06,874 [Process: 0] Evaluating...
2024-08-16 12:58:06,876 [Process: 0] EPOCH 90:
2024-08-16 12:58:06,878 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1939, 0.2693, 0.3605,  ..., 0.4242, 0.5163, 0.6608],
         [0.1854, 0.1366, 0.2043,  ..., 0.1919, 0.1547, 0.1300],
         [0.2292, 0.1366, 0.2043,  ..., 0.1919, 0.1364, 0.0895],
         [0.3915, 0.4575, 0.2309,  ..., 0.1919, 0.1926, 0.1196]],
        [[0.1918, 0.0933, 0.3766,  ..., 0.2073, 0.1905, 0.1355],
         [0.2323, 0.2250, 0.3003,  ..., 0.2226, 0.2068, 0.4438],
         [0.3842, 0.4768, 0.2096,  ..., 0.3629, 0.4122, 0.1355],
         [0.1918, 0.2049, 0.1135,  ..., 0.2073, 0.1905, 0.2852]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1934, 0.2136, 0.1529,  ..., 0.1735, 0.1645, 0.1660],
         [0.1934, 0.2247, 0.1529,  ..., 0.1735, 0.1645, 0.1660],
         [0.1934, 0.2136, 0.1529,  ..., 0.1735, 0.1645, 0.1660],
         [0.4197, 0.3481, 0.5412,  ..., 0.4796, 0.5064, 0.5020]],
        [[0.2500, 0.2324, 0.2500,  ..., 0.2467, 0.2500, 0.2500],
         [0.2500, 0.3029, 0.2500,  ..., 0.2503, 0.2500, 0.2500],
         [0.2500, 0.2324, 0.2500,  ..., 0.2562, 0.2500, 0.2500],
         [0.2500, 0.2324, 0.2500,  ..., 0.2467, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:08,785 [Process: 0] Synchronize training processes
2024-08-16 12:58:08,785 [Process: 0] Evaluating...
2024-08-16 12:58:08,787 [Process: 0] EPOCH 91:
2024-08-16 12:58:08,789 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2103, 0.2182, 0.2126,  ..., 0.2529, 0.2011, 0.2500],
         [0.2561, 0.2182, 0.2126,  ..., 0.1627, 0.2048, 0.2500],
         [0.2103, 0.2182, 0.2126,  ..., 0.1627, 0.2011, 0.2500],
         [0.3233, 0.3455, 0.3622,  ..., 0.4217, 0.3931, 0.2500]],
        [[0.1364, 0.2904, 0.3647,  ..., 0.8955, 0.2090, 0.1882],
         [0.5880, 0.3051, 0.4845,  ..., 0.0931, 0.1144, 0.2966],
         [0.1393, 0.2484, 0.0754,  ..., 0.0057, 0.3185, 0.2905],
         [0.1364, 0.1561, 0.0754,  ..., 0.0057, 0.3581, 0.2246]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1615, 0.1705, 0.1206,  ..., 0.1532, 0.1807, 0.1776],
         [0.1788, 0.1740, 0.1206,  ..., 0.1543, 0.1807, 0.1776],
         [0.1615, 0.1705, 0.1206,  ..., 0.1532, 0.1807, 0.1776],
         [0.4982, 0.4849, 0.6382,  ..., 0.5394, 0.4580, 0.4671]],
        [[0.2434, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2467],
         [0.2699, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2598],
         [0.2434, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2467],
         [0.2434, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2467]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:10,700 [Process: 0] Synchronize training processes
2024-08-16 12:58:10,700 [Process: 0] Evaluating...
2024-08-16 12:58:10,702 [Process: 0] EPOCH 92:
2024-08-16 12:58:10,705 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2161, 0.1426, 0.2058,  ..., 0.0946, 0.4932, 0.3133],
         [0.2161, 0.1093, 0.2058,  ..., 0.2565, 0.1689, 0.2289],
         [0.2161, 0.1093, 0.2058,  ..., 0.0946, 0.1689, 0.2289],
         [0.3516, 0.6389, 0.3826,  ..., 0.5542, 0.1689, 0.2289]],
        [[0.1702, 0.2357, 0.1444,  ..., 0.1472, 0.1973, 0.2379],
         [0.3444, 0.4413, 0.1444,  ..., 0.1616, 0.2368, 0.2379],
         [0.3151, 0.2034, 0.5668,  ..., 0.5440, 0.3687, 0.2379],
         [0.1702, 0.1197, 0.1444,  ..., 0.1472, 0.1971, 0.2864]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1213, 0.1800, 0.1671,  ..., 0.1412, 0.1570, 0.1854],
         [0.1213, 0.2118, 0.1671,  ..., 0.1630, 0.1570, 0.1854],
         [0.1213, 0.1800, 0.1671,  ..., 0.1412, 0.1570, 0.1854],
         [0.6360, 0.4282, 0.4988,  ..., 0.5547, 0.5289, 0.4437]],
        [[0.2500, 0.2531, 0.2500,  ..., 0.2593, 0.2500, 0.2500],
         [0.2500, 0.2565, 0.2500,  ..., 0.2560, 0.2500, 0.2500],
         [0.2500, 0.2452, 0.2500,  ..., 0.2423, 0.2500, 0.2500],
         [0.2500, 0.2452, 0.2500,  ..., 0.2423, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:12,606 [Process: 0] Synchronize training processes
2024-08-16 12:58:12,606 [Process: 0] Evaluating...
2024-08-16 12:58:12,608 [Process: 0] EPOCH 93:
2024-08-16 12:58:12,610 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0985, 0.2028, 0.1270,  ..., 0.2994, 0.1845, 0.0857],
         [0.0985, 0.3510, 0.5789,  ..., 0.1840, 0.2080, 0.0834],
         [0.7045, 0.0984, 0.2445,  ..., 0.2776, 0.4920, 0.2094],
         [0.0985, 0.3478, 0.0496,  ..., 0.2390, 0.1156, 0.6215]],
        [[0.0910, 0.1878, 0.2582,  ..., 0.2610, 0.2145, 0.1961],
         [0.0910, 0.1522, 0.2473,  ..., 0.2463, 0.2145, 0.1961],
         [0.0910, 0.1522, 0.2473,  ..., 0.2463, 0.2145, 0.1961],
         [0.7269, 0.5079, 0.2473,  ..., 0.2463, 0.3565, 0.4118]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1747, 0.2250, 0.1587,  ..., 0.1592, 0.1824, 0.1742],
         [0.2003, 0.2250, 0.1587,  ..., 0.1719, 0.1824, 0.1742],
         [0.1747, 0.2250, 0.1587,  ..., 0.1592, 0.1824, 0.1742],
         [0.4503, 0.3249, 0.5240,  ..., 0.5097, 0.4528, 0.4774]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2364, 0.2463],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2907, 0.2612],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2364, 0.2463],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2364, 0.2463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:14,517 [Process: 0] Synchronize training processes
2024-08-16 12:58:14,517 [Process: 0] Evaluating...
2024-08-16 12:58:14,519 [Process: 0] EPOCH 94:
2024-08-16 12:58:14,521 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2015, 0.1242, 0.1566,  ..., 0.1220, 0.1072, 0.0935],
         [0.2015, 0.1743, 0.1566,  ..., 0.1220, 0.1072, 0.0935],
         [0.2015, 0.4773, 0.1566,  ..., 0.5270, 0.6783, 0.3383],
         [0.3956, 0.2242, 0.5302,  ..., 0.2290, 0.1072, 0.4747]],
        [[0.6195, 0.2095, 0.3434,  ..., 0.4144, 0.4507, 0.4596],
         [0.2341, 0.3715, 0.3758,  ..., 0.4348, 0.3084, 0.2532],
         [0.0732, 0.2095, 0.1404,  ..., 0.0754, 0.1204, 0.1988],
         [0.0732, 0.2095, 0.1404,  ..., 0.0754, 0.1204, 0.0884]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1396, 0.1666, 0.1696,  ..., 0.1878, 0.2033, 0.1516],
         [0.1396, 0.1666, 0.1696,  ..., 0.1878, 0.2033, 0.1516],
         [0.1396, 0.1666, 0.1813,  ..., 0.1878, 0.2033, 0.1516],
         [0.5813, 0.5003, 0.4794,  ..., 0.4365, 0.3901, 0.5452]],
        [[0.2438, 0.2500, 0.2445,  ..., 0.2500, 0.2500, 0.2431],
         [0.2686, 0.2500, 0.2666,  ..., 0.2500, 0.2500, 0.2707],
         [0.2438, 0.2500, 0.2445,  ..., 0.2500, 0.2500, 0.2431],
         [0.2438, 0.2500, 0.2445,  ..., 0.2500, 0.2500, 0.2431]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:16,419 [Process: 0] Synchronize training processes
2024-08-16 12:58:16,420 [Process: 0] Evaluating...
2024-08-16 12:58:16,421 [Process: 0] EPOCH 95:
2024-08-16 12:58:16,423 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3864, 0.2434, 0.2180,  ..., 0.1856, 0.2356, 0.6123],
         [0.2550, 0.1492, 0.1725,  ..., 0.2392, 0.2356, 0.0489],
         [0.1793, 0.1492, 0.1676,  ..., 0.1856, 0.2356, 0.0471],
         [0.1793, 0.4582, 0.4419,  ..., 0.3896, 0.2933, 0.2917]],
        [[0.0920, 0.3944, 0.2564,  ..., 0.5398, 0.4927, 0.0753],
         [0.3804, 0.1942, 0.2700,  ..., 0.1964, 0.3828, 0.5655],
         [0.1889, 0.2172, 0.2368,  ..., 0.1319, 0.0552, 0.2650],
         [0.3387, 0.1942, 0.2368,  ..., 0.1319, 0.0693, 0.0942]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1574, 0.1835, 0.2031,  ..., 0.1965, 0.2207, 0.1374],
         [0.1574, 0.1835, 0.2031,  ..., 0.2708, 0.2380, 0.1374],
         [0.1574, 0.1835, 0.2031,  ..., 0.1965, 0.2207, 0.1374],
         [0.5278, 0.4496, 0.3907,  ..., 0.3361, 0.3205, 0.5879]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2474, 0.2434, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2474, 0.2434, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2474, 0.2434, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2577, 0.2697, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 12:58:18,339 [Process: 0] Synchronize training processes
2024-08-16 12:58:18,340 [Process: 0] Evaluating...
2024-08-16 12:58:18,342 [Process: 0] EPOCH 96:
2024-08-16 12:58:18,344 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1188, 0.3080, 0.1421,  ..., 0.2029, 0.8732, 0.1296],
         [0.1925, 0.1371, 0.1460,  ..., 0.2904, 0.0224, 0.2225],
         [0.1143, 0.0802, 0.1238,  ..., 0.2029, 0.0607, 0.1296],
         [0.5744, 0.4748, 0.5880,  ..., 0.3038, 0.0437, 0.5184]],
        [[0.3721, 0.1979, 0.2013,  ..., 0.2329, 0.2500, 0.2290],
         [0.2178, 0.1979, 0.3581,  ..., 0.2517, 0.2500, 0.3130],
         [0.2089, 0.1979, 0.2393,  ..., 0.2866, 0.2500, 0.2290],
         [0.2011, 0.4062, 0.2013,  ..., 0.2289, 0.2500, 0.2290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1370, 0.1397, 0.1237,  ..., 0.1916, 0.1507, 0.1476],
         [0.1417, 0.1397, 0.1438,  ..., 0.2174, 0.1507, 0.1501],
         [0.1370, 0.1397, 0.1237,  ..., 0.1916, 0.1507, 0.1476],
         [0.5843, 0.5810, 0.6089,  ..., 0.3994, 0.5479, 0.5547]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2687, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2438, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2438, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2438, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1558, 0.2108, 0.2180,  ..., 0.1721, 0.2400, 0.3110],
         [0.1905, 0.2108, 0.4164,  ..., 0.2381, 0.2400, 0.2243],
         [0.1558, 0.2108, 0.1381,  ..., 0.1637, 0.2400, 0.2403],
         [0.4978, 0.3677, 0.2275,  ..., 0.4261, 0.2800, 0.2243]],
        [[0.2500, 0.2657, 0.3502,  ..., 0.2402, 0.2076, 0.2131],
         [0.2500, 0.2040, 0.2587,  ..., 0.2801, 0.3409, 0.2700],
         [0.2500, 0.1866, 0.1956,  ..., 0.2398, 0.2439, 0.2131],
         [0.2500, 0.3437, 0.1956,  ..., 0.2398, 0.2076, 0.3037]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:20,253 [Process: 0] Synchronize training processes
2024-08-16 12:58:20,254 [Process: 0] Evaluating...
2024-08-16 12:58:20,256 [Process: 0] EPOCH 97:
2024-08-16 12:58:20,258 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1960, 0.2208, 0.1459,  ..., 0.2466, 0.1842, 0.2112],
         [0.2103, 0.2389, 0.1459,  ..., 0.2466, 0.2008, 0.2112],
         [0.1960, 0.2208, 0.1459,  ..., 0.2466, 0.1842, 0.2112],
         [0.3977, 0.3195, 0.5623,  ..., 0.2601, 0.4308, 0.3664]],
        [[0.2500, 0.2422, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2733, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2422, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2422, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1143, 0.2280, 0.1308,  ..., 0.0593, 0.0967, 0.1511],
         [0.5564, 0.3159, 0.2899,  ..., 0.1598, 0.0967, 0.1579],
         [0.2184, 0.2280, 0.3444,  ..., 0.0727, 0.6061, 0.1924],
         [0.1110, 0.2280, 0.2348,  ..., 0.7082, 0.2005, 0.4986]],
        [[0.1892, 0.3214, 0.3213,  ..., 0.3249, 0.4598, 0.1929],
         [0.2761, 0.3571, 0.1358,  ..., 0.2250, 0.1269, 0.1929],
         [0.3720, 0.1608, 0.3216,  ..., 0.2250, 0.2863, 0.4214],
         [0.1627, 0.1608, 0.2213,  ..., 0.2250, 0.1269, 0.1929]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:22,160 [Process: 0] Synchronize training processes
2024-08-16 12:58:22,160 [Process: 0] Evaluating...
2024-08-16 12:58:22,162 [Process: 0] EPOCH 98:
2024-08-16 12:58:22,164 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1714, 0.1951, 0.1415,  ..., 0.2049, 0.1655, 0.2176],
         [0.1714, 0.2083, 0.1613,  ..., 0.2201, 0.1655, 0.2206],
         [0.1714, 0.1951, 0.1415,  ..., 0.2049, 0.1655, 0.1790],
         [0.4859, 0.4015, 0.5558,  ..., 0.3701, 0.5036, 0.3828]],
        [[0.2498, 0.2500, 0.2494,  ..., 0.2500, 0.2500, 0.2500],
         [0.2505, 0.2500, 0.2519,  ..., 0.2500, 0.2500, 0.2500],
         [0.2498, 0.2500, 0.2494,  ..., 0.2500, 0.2500, 0.2500],
         [0.2498, 0.2500, 0.2494,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4693e-01, 1.4467e-01, 1.5082e-01,  ..., 1.7340e-01,
          1.8776e-01, 6.6178e-01],
         [1.4693e-01, 1.4467e-01, 1.5082e-01,  ..., 1.7340e-01,
          3.2925e-01, 1.3103e-04],
         [2.5896e-01, 2.7738e-01, 1.5082e-01,  ..., 1.7340e-01,
          1.8776e-01, 3.3796e-01],
         [4.4717e-01, 4.3328e-01, 5.4754e-01,  ..., 4.7981e-01,
          2.9523e-01, 1.3103e-04]],
        [[3.1034e-01, 3.1779e-01, 5.8844e-01,  ..., 2.9260e-01,
          2.9910e-01, 4.8376e-01],
         [3.0829e-01, 3.8793e-01, 2.2627e-01,  ..., 3.8105e-01,
          2.8691e-01, 2.5355e-01],
         [2.0821e-01, 1.4714e-01, 9.2647e-02,  ..., 1.6318e-01,
          2.0699e-01, 1.3134e-01],
         [1.7317e-01, 1.4714e-01, 9.2647e-02,  ..., 1.6318e-01,
          2.0699e-01, 1.3134e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:58:24,068 [Process: 0] Synchronize training processes
2024-08-16 12:58:24,068 [Process: 0] Evaluating...
2024-08-16 12:58:24,070 [Process: 0] EPOCH 99:
2024-08-16 12:58:24,072 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1546, 0.1773, 0.1486,  ..., 0.1268, 0.1356, 0.2157],
         [0.1546, 0.1773, 0.1486,  ..., 0.1371, 0.1356, 0.2301],
         [0.1546, 0.1773, 0.1486,  ..., 0.1268, 0.1356, 0.2157],
         [0.5361, 0.4681, 0.5543,  ..., 0.6092, 0.5931, 0.3386]],
        [[0.2435, 0.2513, 0.2462,  ..., 0.2500, 0.2500, 0.2471],
         [0.2696, 0.2672, 0.2614,  ..., 0.2500, 0.2500, 0.2588],
         [0.2435, 0.2408, 0.2462,  ..., 0.2500, 0.2500, 0.2471],
         [0.2435, 0.2408, 0.2462,  ..., 0.2500, 0.2500, 0.2471]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1352, 0.1225, 0.2271,  ..., 0.1518, 0.1709, 0.1463],
         [0.1352, 0.1225, 0.2271,  ..., 0.1518, 0.1709, 0.1463],
         [0.2882, 0.1225, 0.2271,  ..., 0.2340, 0.1709, 0.5610],
         [0.4415, 0.6324, 0.3187,  ..., 0.4623, 0.4872, 0.1463]],
        [[0.2500, 0.2846, 0.2280,  ..., 0.2086, 0.2267, 0.2838],
         [0.2500, 0.2931, 0.3160,  ..., 0.3742, 0.3199, 0.3271],
         [0.2500, 0.2111, 0.2280,  ..., 0.2086, 0.2267, 0.1945],
         [0.2500, 0.2111, 0.2280,  ..., 0.2086, 0.2267, 0.1945]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:58:25,980 [Process: 0] Synchronize training processes
2024-08-16 12:58:25,980 [Process: 0] Evaluating...
2024-08-16 12:58:25,982 [Process: 0] EPOCH 100:
2024-08-16 12:58:25,984 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1361, 0.2097, 0.1437,  ..., 0.1447, 0.1915, 0.1417],
         [0.1361, 0.2301, 0.1437,  ..., 0.1999, 0.1964, 0.1476],
         [0.1361, 0.2097, 0.1437,  ..., 0.1447, 0.1915, 0.1417],
         [0.5918, 0.3505, 0.5689,  ..., 0.5106, 0.4206, 0.5691]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2480, 0.2503, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2559, 0.2499, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2480, 0.2499, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2480, 0.2499, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1903, 0.1608, 0.2015,  ..., 0.1986, 0.2068, 0.1704],
         [0.1903, 0.2317, 0.2015,  ..., 0.1986, 0.2068, 0.1704],
         [0.1903, 0.1557, 0.2015,  ..., 0.1986, 0.2068, 0.1704],
         [0.4291, 0.4519, 0.3955,  ..., 0.4041, 0.3796, 0.4888]],
        [[0.2279, 0.3970, 0.2690,  ..., 0.2115, 0.1845, 0.2349],
         [0.3163, 0.3063, 0.3971,  ..., 0.2264, 0.3801, 0.3371],
         [0.2279, 0.1580, 0.2444,  ..., 0.4514, 0.2510, 0.2140],
         [0.2279, 0.1386, 0.0895,  ..., 0.1108, 0.1845, 0.2140]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:58:27,882 [Process: 0] Synchronize training processes
2024-08-16 12:58:27,882 [Process: 0] Evaluating...
2024-08-16 12:58:27,884 [Process: 0] EPOCH 101:
2024-08-16 12:58:27,886 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:58:29,781 [Process: 0] Synchronize training processes
2024-08-16 12:58:29,782 [Process: 0] Evaluating...
2024-08-16 12:58:29,783 [Process: 0] EPOCH 102:
2024-08-16 12:58:29,786 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1174, 0.1749, 0.1909,  ..., 0.1827, 0.1659, 0.1485],
         [0.1157, 0.1749, 0.1909,  ..., 0.1827, 0.1659, 0.1609],
         [0.1157, 0.1749, 0.1909,  ..., 0.1827, 0.1659, 0.1485],
         [0.6513, 0.4753, 0.4273,  ..., 0.4518, 0.5023, 0.5420]],
        [[0.2500, 0.2500, 0.2459,  ..., 0.2495, 0.2500, 0.2390],
         [0.2500, 0.2500, 0.2622,  ..., 0.2514, 0.2500, 0.2831],
         [0.2500, 0.2500, 0.2459,  ..., 0.2495, 0.2500, 0.2390],
         [0.2500, 0.2500, 0.2459,  ..., 0.2495, 0.2500, 0.2390]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2284, 0.1428, 0.2500,  ..., 0.2621, 0.2478, 0.4357],
         [0.2284, 0.1428, 0.2500,  ..., 0.2460, 0.2478, 0.1740],
         [0.2886, 0.5152, 0.2500,  ..., 0.2460, 0.2567, 0.1997],
         [0.2546, 0.1993, 0.2500,  ..., 0.2460, 0.2478, 0.1906]],
        [[0.1417, 0.4069, 0.2074,  ..., 0.2500, 0.0629, 0.2256],
         [0.1974, 0.1257, 0.3778,  ..., 0.2500, 0.2115, 0.1743],
         [0.5193, 0.3041, 0.2074,  ..., 0.2500, 0.0629, 0.0941],
         [0.1417, 0.1633, 0.2074,  ..., 0.2500, 0.6628, 0.5061]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:58:31,694 [Process: 0] Synchronize training processes
2024-08-16 12:58:31,694 [Process: 0] Evaluating...
2024-08-16 12:58:31,696 [Process: 0] EPOCH 103:
2024-08-16 12:58:31,698 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1526, 0.1779, 0.1371,  ..., 0.1690, 0.1254, 0.1820],
         [0.1526, 0.1779, 0.1371,  ..., 0.1758, 0.1545, 0.1820],
         [0.1526, 0.1779, 0.1371,  ..., 0.1690, 0.1254, 0.1820],
         [0.5421, 0.4663, 0.5886,  ..., 0.4861, 0.5948, 0.4539]],
        [[0.2486, 0.2500, 0.2723,  ..., 0.2527, 0.2572, 0.2726],
         [0.2541, 0.2500, 0.2431,  ..., 0.2803, 0.2476, 0.2720],
         [0.2486, 0.2500, 0.2423,  ..., 0.2335, 0.2476, 0.2277],
         [0.2486, 0.2500, 0.2423,  ..., 0.2335, 0.2476, 0.2277]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1789, 0.2160, 0.1735,  ..., 0.2211, 0.1849, 0.0884],
         [0.1984, 0.2160, 0.1735,  ..., 0.2211, 0.1849, 0.0884],
         [0.1789, 0.2160, 0.1735,  ..., 0.2211, 0.1976, 0.7349],
         [0.4437, 0.3520, 0.4795,  ..., 0.3367, 0.4325, 0.0884]],
        [[0.1954, 0.2217, 0.2774,  ..., 0.2282, 0.2345, 0.2290],
         [0.4138, 0.4259, 0.3502,  ..., 0.4329, 0.2966, 0.3670],
         [0.1954, 0.1762, 0.1921,  ..., 0.1695, 0.2345, 0.2020],
         [0.1954, 0.1762, 0.1803,  ..., 0.1695, 0.2345, 0.2020]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:58:33,594 [Process: 0] Synchronize training processes
2024-08-16 12:58:33,594 [Process: 0] Evaluating...
2024-08-16 12:58:33,596 [Process: 0] EPOCH 104:
2024-08-16 12:58:33,598 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2071, 0.1869, 0.1798,  ..., 0.1637, 0.1075, 0.1739],
         [0.2111, 0.1917, 0.1824,  ..., 0.1642, 0.1075, 0.1739],
         [0.1647, 0.1869, 0.1798,  ..., 0.1637, 0.1075, 0.1739],
         [0.4172, 0.4344, 0.4579,  ..., 0.5085, 0.6776, 0.4782]],
        [[0.2500, 0.2500, 0.2532,  ..., 0.2464, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2489,  ..., 0.2609, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2489,  ..., 0.2464, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2489,  ..., 0.2464, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3321, 0.2651, 0.0714,  ..., 0.6002, 0.1687, 0.5135],
         [0.3491, 0.3174, 0.1468,  ..., 0.1793, 0.2215, 0.1441],
         [0.1594, 0.2755, 0.0798,  ..., 0.0878, 0.2695, 0.0957],
         [0.1594, 0.1421, 0.7020,  ..., 0.1327, 0.3404, 0.2467]],
        [[0.1395, 0.0835, 0.1152,  ..., 0.1763, 0.1626, 0.1013],
         [0.1395, 0.0835, 0.1475,  ..., 0.1763, 0.1626, 0.1013],
         [0.5815, 0.1510, 0.4830,  ..., 0.4710, 0.5121, 0.2255],
         [0.1395, 0.6819, 0.2543,  ..., 0.1763, 0.1626, 0.5718]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:58:35,521 [Process: 0] Synchronize training processes
2024-08-16 12:58:35,521 [Process: 0] Evaluating...
2024-08-16 12:58:35,523 [Process: 0] EPOCH 105:
2024-08-16 12:58:35,525 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1752, 0.1681, 0.1545,  ..., 0.1778, 0.1691, 0.1372],
         [0.1927, 0.1994, 0.1734,  ..., 0.1778, 0.1718, 0.1372],
         [0.1752, 0.1681, 0.1545,  ..., 0.1778, 0.1691, 0.1372],
         [0.4569, 0.4643, 0.5177,  ..., 0.4667, 0.4900, 0.5885]],
        [[0.2815, 0.2496, 0.2635,  ..., 0.2500, 0.3076, 0.2497],
         [0.2469, 0.2511, 0.2499,  ..., 0.2500, 0.2308, 0.2510],
         [0.2358, 0.2496, 0.2433,  ..., 0.2500, 0.2308, 0.2497],
         [0.2358, 0.2496, 0.2433,  ..., 0.2500, 0.2308, 0.2497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2394, 0.3947, 0.2558,  ..., 0.2192, 0.2235, 0.1859],
         [0.2394, 0.2018, 0.2078,  ..., 0.2192, 0.2789, 0.2244],
         [0.2817, 0.2018, 0.2322,  ..., 0.2192, 0.1676, 0.2264],
         [0.2394, 0.2018, 0.3043,  ..., 0.3423, 0.3300, 0.3633]],
        [[0.2500, 0.2500, 0.3685,  ..., 0.5643, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2105,  ..., 0.3175, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2105,  ..., 0.0591, 0.2501, 0.2500],
         [0.2500, 0.2500, 0.2105,  ..., 0.0591, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:58:37,423 [Process: 0] Synchronize training processes
2024-08-16 12:58:37,424 [Process: 0] Evaluating...
2024-08-16 12:58:37,426 [Process: 0] EPOCH 106:
2024-08-16 12:58:37,427 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2244, 0.1906, 0.1471,  ..., 0.1496, 0.1405, 0.1880],
         [0.2268, 0.1906, 0.1471,  ..., 0.1620, 0.1405, 0.1880],
         [0.2244, 0.1906, 0.1471,  ..., 0.1496, 0.1405, 0.1880],
         [0.3244, 0.4281, 0.5588,  ..., 0.5389, 0.5785, 0.4360]],
        [[0.2500, 0.2500, 0.2430,  ..., 0.2500, 0.2500, 0.2567],
         [0.2500, 0.2500, 0.2711,  ..., 0.2500, 0.2500, 0.2721],
         [0.2500, 0.2500, 0.2430,  ..., 0.2500, 0.2500, 0.2356],
         [0.2500, 0.2500, 0.2430,  ..., 0.2500, 0.2500, 0.2356]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1030, 0.1895, 0.3753,  ..., 0.2025, 0.1884, 0.1079],
         [0.1613, 0.2217, 0.1211,  ..., 0.2025, 0.1884, 0.4390],
         [0.4949, 0.1667, 0.0922,  ..., 0.2025, 0.2656, 0.1079],
         [0.2409, 0.4221, 0.4114,  ..., 0.3926, 0.3576, 0.3453]],
        [[0.2291, 0.6036, 0.2271,  ..., 0.2500, 0.3808, 0.2098],
         [0.3330, 0.1321, 0.2271,  ..., 0.2500, 0.2648, 0.3377],
         [0.2190, 0.1321, 0.3186,  ..., 0.2500, 0.1772, 0.2428],
         [0.2190, 0.1321, 0.2271,  ..., 0.2500, 0.1772, 0.2098]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 12:58:39,325 [Process: 0] Synchronize training processes
2024-08-16 12:58:39,326 [Process: 0] Evaluating...
2024-08-16 12:58:39,328 [Process: 0] EPOCH 107:
2024-08-16 12:58:39,330 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2250, 0.1703, 0.1467,  ..., 0.1765, 0.1639, 0.1443],
         [0.2425, 0.1769, 0.1423,  ..., 0.1765, 0.1659, 0.1467],
         [0.2250, 0.1703, 0.1369,  ..., 0.1765, 0.1639, 0.1443],
         [0.3076, 0.4826, 0.5740,  ..., 0.4704, 0.5063, 0.5646]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1402, 0.1676, 0.1985,  ..., 0.1929, 0.1599, 0.2712],
         [0.3383, 0.2198, 0.2110,  ..., 0.2226, 0.3086, 0.2551],
         [0.1402, 0.1290, 0.1985,  ..., 0.1929, 0.1530, 0.1823],
         [0.3812, 0.4836, 0.3920,  ..., 0.3917, 0.3786, 0.2913]],
        [[0.3022, 0.2023, 0.1664,  ..., 0.2500, 0.4541, 0.2144],
         [0.2326, 0.3932, 0.1664,  ..., 0.2500, 0.2361, 0.3569],
         [0.2326, 0.2023, 0.5007,  ..., 0.2500, 0.1320, 0.2144],
         [0.2326, 0.2023, 0.1664,  ..., 0.2500, 0.1778, 0.2144]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1665, 0.1630, 0.1818,  ..., 0.1389, 0.1720, 0.2049],
         [0.1665, 0.1630, 0.1818,  ..., 0.1389, 0.1720, 0.2466],
         [0.1665, 0.1630, 0.1818,  ..., 0.1389, 0.1720, 0.2049],
         [0.5005, 0.5111, 0.4547,  ..., 0.5832, 0.4841, 0.3436]],
        [[0.2500, 0.2456, 0.2419,  ..., 0.2500, 0.2458, 0.2563],
         [0.2500, 0.2631, 0.2744,  ..., 0.2500, 0.2730, 0.2571],
         [0.2500, 0.2456, 0.2419,  ..., 0.2500, 0.2406, 0.2433],
         [0.2500, 0.2456, 0.2419,  ..., 0.2500, 0.2406, 0.2433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:41,238 [Process: 0] Synchronize training processes
2024-08-16 12:58:41,238 [Process: 0] Evaluating...
2024-08-16 12:58:41,240 [Process: 0] EPOCH 108:
2024-08-16 12:58:41,242 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4952, 0.1447, 0.3823,  ..., 0.2929, 0.4335, 0.7681],
         [0.2661, 0.3980, 0.1457,  ..., 0.1862, 0.1888, 0.0698],
         [0.1642, 0.2261, 0.3664,  ..., 0.3347, 0.1888, 0.0647],
         [0.0744, 0.2312, 0.1056,  ..., 0.1862, 0.1888, 0.0975]],
        [[0.2160, 0.1553, 0.1292,  ..., 0.2484, 0.2308, 0.1561],
         [0.4607, 0.4106, 0.1292,  ..., 0.2484, 0.2308, 0.1288],
         [0.1617, 0.1553, 0.1292,  ..., 0.2484, 0.2308, 0.1193],
         [0.1617, 0.2789, 0.6123,  ..., 0.2548, 0.3076, 0.5958]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1841, 0.1803, 0.2203,  ..., 0.1732, 0.1854, 0.1304],
         [0.1841, 0.1803, 0.2203,  ..., 0.1759, 0.1854, 0.1304],
         [0.1841, 0.1803, 0.2203,  ..., 0.1732, 0.1854, 0.1304],
         [0.4478, 0.4592, 0.3391,  ..., 0.4777, 0.4439, 0.6089]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2446, 0.2474],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2662, 0.2578],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2446, 0.2474],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2446, 0.2474]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:43,139 [Process: 0] Synchronize training processes
2024-08-16 12:58:43,139 [Process: 0] Evaluating...
2024-08-16 12:58:43,141 [Process: 0] EPOCH 109:
2024-08-16 12:58:43,143 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1774, 0.2348, 0.0539,  ..., 0.2737, 0.0684, 0.1908],
         [0.4679, 0.2348, 0.0539,  ..., 0.2381, 0.1316, 0.2231],
         [0.1774, 0.2955, 0.0539,  ..., 0.2381, 0.6551, 0.3954],
         [0.1774, 0.2348, 0.8383,  ..., 0.2500, 0.1449, 0.1908]],
        [[0.4004, 0.1478, 0.1885,  ..., 0.2471, 0.2500, 0.2533],
         [0.2838, 0.6559, 0.4346,  ..., 0.2588, 0.2500, 0.2489],
         [0.1579, 0.0981, 0.1885,  ..., 0.2471, 0.2500, 0.2489],
         [0.1579, 0.0981, 0.1885,  ..., 0.2471, 0.2500, 0.2489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1342, 0.1374, 0.1858,  ..., 0.1493, 0.1685, 0.1978],
         [0.1351, 0.1374, 0.1858,  ..., 0.1593, 0.1685, 0.1978],
         [0.1342, 0.1374, 0.1858,  ..., 0.1493, 0.1685, 0.1978],
         [0.5965, 0.5877, 0.4427,  ..., 0.5422, 0.4945, 0.4066]],
        [[0.2425, 0.2428, 0.2500,  ..., 0.2460, 0.2506, 0.2500],
         [0.2726, 0.2715, 0.2500,  ..., 0.2619, 0.2498, 0.2500],
         [0.2425, 0.2428, 0.2500,  ..., 0.2460, 0.2498, 0.2500],
         [0.2425, 0.2428, 0.2500,  ..., 0.2460, 0.2498, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:45,041 [Process: 0] Synchronize training processes
2024-08-16 12:58:45,041 [Process: 0] Evaluating...
2024-08-16 12:58:45,043 [Process: 0] EPOCH 110:
2024-08-16 12:58:45,045 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2343, 0.2337, 0.3463,  ..., 0.1152, 0.4847, 0.4106],
         [0.1487, 0.2405, 0.2365,  ..., 0.1519, 0.1963, 0.1766],
         [0.1194, 0.0805, 0.1347,  ..., 0.1729, 0.1595, 0.1766],
         [0.4976, 0.4453, 0.2825,  ..., 0.5600, 0.1595, 0.2363]],
        [[0.2365, 0.1286, 0.2706,  ..., 0.2378, 0.2500, 0.2209],
         [0.2365, 0.1286, 0.2431,  ..., 0.2378, 0.2500, 0.2209],
         [0.2365, 0.6143, 0.2431,  ..., 0.2865, 0.2500, 0.3374],
         [0.2904, 0.1286, 0.2431,  ..., 0.2378, 0.2500, 0.2209]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1765, 0.1679, 0.1661,  ..., 0.1750, 0.1692, 0.1761],
         [0.1736, 0.1927, 0.1661,  ..., 0.1948, 0.1692, 0.1761],
         [0.1350, 0.1679, 0.1661,  ..., 0.1750, 0.1692, 0.1761],
         [0.5148, 0.4716, 0.5016,  ..., 0.4552, 0.4925, 0.4717]],
        [[0.2463, 0.2500, 0.2464,  ..., 0.2466, 0.2465, 0.2500],
         [0.2610, 0.2500, 0.2609,  ..., 0.2602, 0.2605, 0.2500],
         [0.2463, 0.2500, 0.2464,  ..., 0.2466, 0.2465, 0.2500],
         [0.2463, 0.2500, 0.2464,  ..., 0.2466, 0.2465, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:46,980 [Process: 0] Synchronize training processes
2024-08-16 12:58:46,980 [Process: 0] Evaluating...
2024-08-16 12:58:46,982 [Process: 0] EPOCH 111:
2024-08-16 12:58:46,984 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3285, 0.5770, 0.2745,  ..., 0.2044, 0.2232, 0.3010],
         [0.1276, 0.2287, 0.1301,  ..., 0.4752, 0.4242, 0.2220],
         [0.2690, 0.1188, 0.1654,  ..., 0.1602, 0.1311, 0.3240],
         [0.2749, 0.0755, 0.4300,  ..., 0.1602, 0.2215, 0.1530]],
        [[0.2651, 0.2120, 0.1715,  ..., 0.1203, 0.2460, 0.0755],
         [0.3581, 0.3641, 0.2150,  ..., 0.1663, 0.2619, 0.3828],
         [0.1884, 0.2120, 0.1310,  ..., 0.3113, 0.2460, 0.4662],
         [0.1884, 0.2120, 0.4825,  ..., 0.4022, 0.2460, 0.0755]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1407, 0.1424, 0.1262,  ..., 0.1916, 0.1496, 0.1492],
         [0.1407, 0.1424, 0.1262,  ..., 0.1916, 0.1496, 0.1492],
         [0.1407, 0.1424, 0.1262,  ..., 0.1916, 0.1496, 0.1492],
         [0.5780, 0.5729, 0.6213,  ..., 0.4252, 0.5513, 0.5523]],
        [[0.2500, 0.2500, 0.2423,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2732,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2423,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2423,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:48,890 [Process: 0] Synchronize training processes
2024-08-16 12:58:48,891 [Process: 0] Evaluating...
2024-08-16 12:58:48,892 [Process: 0] EPOCH 112:
2024-08-16 12:58:48,895 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2281, 0.2447, 0.2686,  ..., 0.4165, 0.2439, 0.1982],
         [0.2281, 0.2464, 0.3508,  ..., 0.2110, 0.2439, 0.1982],
         [0.2281, 0.2755, 0.1903,  ..., 0.1862, 0.2439, 0.3466],
         [0.3156, 0.2335, 0.1903,  ..., 0.1862, 0.2684, 0.2570]],
        [[0.1863, 0.1956, 0.1612,  ..., 0.2317, 0.1885, 0.1685],
         [0.4279, 0.4132, 0.4434,  ..., 0.2929, 0.4501, 0.3420],
         [0.1994, 0.1956, 0.2342,  ..., 0.2436, 0.2069, 0.3210],
         [0.1863, 0.1956, 0.1612,  ..., 0.2317, 0.1545, 0.1685]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1761, 0.1549, 0.1571,  ..., 0.2053, 0.1478, 0.1375],
         [0.2051, 0.1549, 0.1571,  ..., 0.2053, 0.1478, 0.1375],
         [0.1761, 0.1549, 0.1571,  ..., 0.2053, 0.1478, 0.1375],
         [0.4428, 0.5354, 0.5287,  ..., 0.3841, 0.5565, 0.5876]],
        [[0.2443, 0.2500, 0.2433,  ..., 0.2454, 0.2500, 0.2498],
         [0.2672, 0.2500, 0.2702,  ..., 0.2639, 0.2500, 0.2506],
         [0.2443, 0.2500, 0.2433,  ..., 0.2454, 0.2500, 0.2498],
         [0.2443, 0.2500, 0.2433,  ..., 0.2454, 0.2500, 0.2498]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:50,791 [Process: 0] Synchronize training processes
2024-08-16 12:58:50,792 [Process: 0] Evaluating...
2024-08-16 12:58:50,794 [Process: 0] EPOCH 113:
2024-08-16 12:58:50,796 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1299, 0.1764, 0.0954,  ..., 0.0926, 0.1804, 0.1370],
         [0.2003, 0.1764, 0.2834,  ..., 0.0620, 0.3995, 0.4440],
         [0.2217, 0.2300, 0.0954,  ..., 0.1151, 0.1804, 0.1515],
         [0.4481, 0.4172, 0.5257,  ..., 0.7303, 0.2397, 0.2676]],
        [[0.3794, 0.2276, 0.2445,  ..., 0.3701, 0.3965, 0.2903],
         [0.2069, 0.3647, 0.2664,  ..., 0.3448, 0.2012, 0.2366],
         [0.2069, 0.2038, 0.2445,  ..., 0.1426, 0.2012, 0.2366],
         [0.2069, 0.2038, 0.2445,  ..., 0.1426, 0.2012, 0.2366]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1401, 0.1838, 0.1710,  ..., 0.1576, 0.1788, 0.2079],
         [0.1401, 0.1858, 0.1710,  ..., 0.1576, 0.1788, 0.2079],
         [0.1401, 0.1838, 0.1710,  ..., 0.1576, 0.1788, 0.2079],
         [0.5796, 0.4466, 0.4870,  ..., 0.5273, 0.4637, 0.3762]],
        [[0.2500, 0.2500, 0.2443,  ..., 0.2500, 0.2432, 0.2558],
         [0.2500, 0.2500, 0.2672,  ..., 0.2500, 0.2703, 0.2481],
         [0.2500, 0.2500, 0.2443,  ..., 0.2500, 0.2432, 0.2481],
         [0.2500, 0.2500, 0.2443,  ..., 0.2500, 0.2432, 0.2481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:52,697 [Process: 0] Synchronize training processes
2024-08-16 12:58:52,698 [Process: 0] Evaluating...
2024-08-16 12:58:52,699 [Process: 0] EPOCH 114:
2024-08-16 12:58:52,702 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1863, 0.1287, 0.1692,  ..., 0.1657, 0.2751, 0.0971],
         [0.1863, 0.0896, 0.1692,  ..., 0.1657, 0.2358, 0.0692],
         [0.1863, 0.0896, 0.2334,  ..., 0.1657, 0.2358, 0.3562],
         [0.4410, 0.6920, 0.4282,  ..., 0.5029, 0.2534, 0.4775]],
        [[0.2359, 0.3332, 0.2500,  ..., 0.1264, 0.1853, 0.4087],
         [0.5941, 0.2935, 0.2500,  ..., 0.1264, 0.3569, 0.3023],
         [0.0850, 0.1866, 0.2500,  ..., 0.6207, 0.3362, 0.1445],
         [0.0850, 0.1866, 0.2500,  ..., 0.1264, 0.1216, 0.1445]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1567, 0.2021, 0.1767,  ..., 0.1523, 0.1473, 0.1565],
         [0.1567, 0.2023, 0.1841,  ..., 0.1884, 0.1455, 0.1565],
         [0.1567, 0.2021, 0.1767,  ..., 0.1489, 0.1455, 0.1565],
         [0.5298, 0.3935, 0.4625,  ..., 0.5104, 0.5618, 0.5306]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:54,622 [Process: 0] Synchronize training processes
2024-08-16 12:58:54,623 [Process: 0] Evaluating...
2024-08-16 12:58:54,626 [Process: 0] EPOCH 115:
2024-08-16 12:58:54,629 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1751, 0.4291, 0.0697,  ..., 0.0803, 0.1042, 0.3275],
         [0.2156, 0.2047, 0.7888,  ..., 0.0803, 0.4010, 0.2513],
         [0.4052, 0.1831, 0.0718,  ..., 0.3935, 0.1042, 0.2570],
         [0.2041, 0.1831, 0.0697,  ..., 0.4459, 0.3906, 0.1643]],
        [[0.5688, 0.2432, 0.1769,  ..., 0.3182, 0.3866, 0.1972],
         [0.1049, 0.1703, 0.1769,  ..., 0.2054, 0.1715, 0.1972],
         [0.1341, 0.1703, 0.4694,  ..., 0.2271, 0.0753, 0.4085],
         [0.1923, 0.4162, 0.1769,  ..., 0.2493, 0.3666, 0.1972]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1927, 0.1864, 0.1328,  ..., 0.1718, 0.1253, 0.1338],
         [0.1927, 0.1864, 0.1328,  ..., 0.1718, 0.1257, 0.1338],
         [0.1927, 0.1864, 0.1328,  ..., 0.1718, 0.1253, 0.1338],
         [0.4220, 0.4408, 0.6017,  ..., 0.4845, 0.6238, 0.5985]],
        [[0.2500, 0.2479, 0.2500,  ..., 0.2500, 0.2462, 0.2500],
         [0.2500, 0.2563, 0.2500,  ..., 0.2500, 0.2613, 0.2500],
         [0.2500, 0.2479, 0.2500,  ..., 0.2500, 0.2462, 0.2500],
         [0.2500, 0.2479, 0.2500,  ..., 0.2500, 0.2462, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:58:56,565 [Process: 0] Synchronize training processes
2024-08-16 12:58:56,566 [Process: 0] Evaluating...
2024-08-16 12:58:56,568 [Process: 0] EPOCH 116:
2024-08-16 12:58:56,570 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1459, 0.1082, 0.2099,  ..., 0.1205, 0.2482, 0.2371],
         [0.1459, 0.3512, 0.2099,  ..., 0.1205, 0.2127, 0.2371],
         [0.1459, 0.1082, 0.2099,  ..., 0.1205, 0.2127, 0.2371],
         [0.5623, 0.4325, 0.3702,  ..., 0.6386, 0.3264, 0.2887]],
        [[0.3454, 0.2637, 0.1117,  ..., 0.3101, 0.1957, 0.1036],
         [0.3149, 0.1533, 0.1117,  ..., 0.1742, 0.5579, 0.1036],
         [0.2327, 0.4297, 0.6649,  ..., 0.3415, 0.1530, 0.6891],
         [0.1070, 0.1533, 0.1117,  ..., 0.1742, 0.0935, 0.1036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1585, 0.1357, 0.1787,  ..., 0.1935, 0.1947, 0.1898],
         [0.1674, 0.1431, 0.2119,  ..., 0.1935, 0.1947, 0.1898],
         [0.1585, 0.1357, 0.1787,  ..., 0.1935, 0.1947, 0.1898],
         [0.5156, 0.5855, 0.4306,  ..., 0.4195, 0.4159, 0.4306]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2477, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2570, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2477, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2477, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 12:58:58,482 [Process: 0] Synchronize training processes
2024-08-16 12:58:58,483 [Process: 0] Evaluating...
2024-08-16 12:58:58,485 [Process: 0] EPOCH 117:
2024-08-16 12:58:58,486 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1474, 0.2626, 0.2492,  ..., 0.1427, 0.1065, 0.1377],
         [0.1359, 0.0821, 0.1653,  ..., 0.1427, 0.1065, 0.1377],
         [0.1359, 0.0996, 0.1653,  ..., 0.1427, 0.1065, 0.5868],
         [0.5807, 0.5556, 0.4203,  ..., 0.5720, 0.6804, 0.1377]],
        [[0.2359, 0.2137, 0.2100,  ..., 0.1990, 0.1695, 0.2605],
         [0.3841, 0.3590, 0.3700,  ..., 0.4029, 0.5124, 0.3092],
         [0.1900, 0.2137, 0.2100,  ..., 0.1990, 0.1591, 0.2151],
         [0.1900, 0.2137, 0.2100,  ..., 0.1990, 0.1591, 0.2151]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1809, 0.2028, 0.1775,  ..., 0.1645, 0.1838, 0.1590],
         [0.1809, 0.2028, 0.1775,  ..., 0.1784, 0.1838, 0.1590],
         [0.1809, 0.2028, 0.1775,  ..., 0.1645, 0.1838, 0.1590],
         [0.4573, 0.3915, 0.4676,  ..., 0.4926, 0.4485, 0.5231]],
        [[0.2500, 0.2446, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2663, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2446, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2446, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0772, 0.2416, 0.2445,  ..., 0.0804, 0.1479, 0.6192],
         [0.0772, 0.3043, 0.2445,  ..., 0.1652, 0.4057, 0.0832],
         [0.0957, 0.2270, 0.2445,  ..., 0.0532, 0.1479, 0.1287],
         [0.7499, 0.2270, 0.2666,  ..., 0.7012, 0.2986, 0.1689]],
        [[0.4631, 0.3390, 0.2226,  ..., 0.1487, 0.2278, 0.5067],
         [0.2588, 0.2203, 0.2226,  ..., 0.1487, 0.2297, 0.1644],
         [0.1640, 0.2203, 0.3211,  ..., 0.5538, 0.3284, 0.1644],
         [0.1140, 0.2203, 0.2338,  ..., 0.1487, 0.2142, 0.1644]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:59:00,403 [Process: 0] Synchronize training processes
2024-08-16 12:59:00,403 [Process: 0] Evaluating...
2024-08-16 12:59:00,405 [Process: 0] EPOCH 118:
2024-08-16 12:59:00,407 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:02,314 [Process: 0] Synchronize training processes
2024-08-16 12:59:02,314 [Process: 0] Evaluating...
2024-08-16 12:59:02,316 [Process: 0] EPOCH 119:
2024-08-16 12:59:02,318 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1274, 0.1716, 0.1949,  ..., 0.1695, 0.1770, 0.2161],
         [0.1274, 0.1812, 0.1949,  ..., 0.1792, 0.1770, 0.2161],
         [0.1274, 0.1709, 0.1949,  ..., 0.1695, 0.1770, 0.2161],
         [0.6177, 0.4762, 0.4152,  ..., 0.4818, 0.4690, 0.3517]],
        [[0.2500, 0.2500, 0.2343,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2972,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2343,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2343,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1702, 0.2446, 0.1659,  ..., 0.1441, 0.3118, 0.0187],
         [0.1702, 0.2446, 0.2486,  ..., 0.1740, 0.1258, 0.0187],
         [0.1702, 0.2661, 0.2826,  ..., 0.1020, 0.1723, 0.7679],
         [0.4894, 0.2446, 0.3030,  ..., 0.5799, 0.3901, 0.1948]],
        [[0.2815, 0.2227, 0.2382,  ..., 0.4021, 0.3270, 0.2832],
         [0.3432, 0.2227, 0.2382,  ..., 0.3190, 0.2480, 0.2457],
         [0.2160, 0.3319, 0.2853,  ..., 0.1284, 0.1768, 0.2355],
         [0.1593, 0.2227, 0.2382,  ..., 0.1505, 0.2482, 0.2355]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1499, 0.1858, 0.2051,  ..., 0.1704, 0.1786, 0.2072],
         [0.1499, 0.1873, 0.2051,  ..., 0.1704, 0.1860, 0.2072],
         [0.1499, 0.1858, 0.2051,  ..., 0.1704, 0.1786, 0.2072],
         [0.5502, 0.4411, 0.3848,  ..., 0.4889, 0.4568, 0.3784]],
        [[0.2500, 0.2500, 0.2414,  ..., 0.2500, 0.2448, 0.2500],
         [0.2500, 0.2500, 0.2758,  ..., 0.2500, 0.2657, 0.2500],
         [0.2500, 0.2500, 0.2414,  ..., 0.2500, 0.2448, 0.2500],
         [0.2500, 0.2500, 0.2414,  ..., 0.2500, 0.2448, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5372, 0.4649, 0.3868,  ..., 0.2325, 0.4054, 0.4673],
         [0.1295, 0.3259, 0.2044,  ..., 0.2058, 0.1982, 0.1776],
         [0.2316, 0.1068, 0.2044,  ..., 0.1628, 0.1982, 0.1776],
         [0.1017, 0.1025, 0.2044,  ..., 0.3989, 0.1982, 0.1776]],
        [[0.1406, 0.2031, 0.1985,  ..., 0.0966, 0.1988, 0.1659],
         [0.1586, 0.2031, 0.1985,  ..., 0.0966, 0.2253, 0.4315],
         [0.1406, 0.2031, 0.1985,  ..., 0.0966, 0.1101, 0.1659],
         [0.5601, 0.3908, 0.4045,  ..., 0.7101, 0.4659, 0.2367]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:04,223 [Process: 0] Synchronize training processes
2024-08-16 12:59:04,224 [Process: 0] Evaluating...
2024-08-16 12:59:04,226 [Process: 0] EPOCH 120:
2024-08-16 12:59:04,228 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1623, 0.1292, 0.1826,  ..., 0.1303, 0.1311, 0.1302],
         [0.1623, 0.1420, 0.2137,  ..., 0.1303, 0.1311, 0.1425],
         [0.1623, 0.1292, 0.1826,  ..., 0.1303, 0.1311, 0.1302],
         [0.5131, 0.5996, 0.4211,  ..., 0.6090, 0.6068, 0.5970]],
        [[0.2500, 0.2473, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2581, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2473, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2473, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2214, 0.2505, 0.2493,  ..., 0.2292, 0.2348, 0.1186],
         [0.2214, 0.2220, 0.2493,  ..., 0.3125, 0.2348, 0.1186],
         [0.2214, 0.2220, 0.2493,  ..., 0.2292, 0.2348, 0.1923],
         [0.3357, 0.3056, 0.2522,  ..., 0.2292, 0.2956, 0.5706]],
        [[0.2680, 0.2444, 0.2358,  ..., 0.2500, 0.3427, 0.2500],
         [0.1970, 0.2667, 0.2925,  ..., 0.2500, 0.2556, 0.2500],
         [0.1970, 0.2444, 0.2358,  ..., 0.2500, 0.2009, 0.2500],
         [0.3381, 0.2444, 0.2358,  ..., 0.2500, 0.2009, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:06,143 [Process: 0] Synchronize training processes
2024-08-16 12:59:06,144 [Process: 0] Evaluating...
2024-08-16 12:59:06,145 [Process: 0] EPOCH 121:
2024-08-16 12:59:06,147 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1612, 0.1473, 0.1674,  ..., 0.1828, 0.1617, 0.1716],
         [0.1612, 0.1473, 0.1674,  ..., 0.2025, 0.1617, 0.1716],
         [0.1612, 0.1473, 0.1674,  ..., 0.1828, 0.1617, 0.1716],
         [0.5163, 0.5581, 0.4978,  ..., 0.4318, 0.5150, 0.4851]],
        [[0.2473, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2581, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2473, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2473, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1869, 0.1588, 0.2018,  ..., 0.1830, 0.2275, 0.2001],
         [0.1869, 0.1588, 0.2200,  ..., 0.1830, 0.2275, 0.1871],
         [0.1869, 0.1588, 0.2018,  ..., 0.1830, 0.2275, 0.1871],
         [0.4393, 0.5237, 0.3764,  ..., 0.4510, 0.3175, 0.4257]],
        [[0.3459, 0.2191, 0.2353,  ..., 0.2500, 0.2497, 0.2106],
         [0.2611, 0.3428, 0.2942,  ..., 0.2500, 0.3358, 0.3683],
         [0.1965, 0.2191, 0.2353,  ..., 0.2500, 0.2352, 0.2106],
         [0.1965, 0.2191, 0.2353,  ..., 0.2500, 0.1793, 0.2106]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:08,046 [Process: 0] Synchronize training processes
2024-08-16 12:59:08,046 [Process: 0] Evaluating...
2024-08-16 12:59:08,048 [Process: 0] EPOCH 122:
2024-08-16 12:59:08,050 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1278, 0.1323, 0.1889,  ..., 0.1656, 0.1881, 0.2050],
         [0.1278, 0.1323, 0.1889,  ..., 0.1755, 0.2238, 0.2475],
         [0.1278, 0.1323, 0.1889,  ..., 0.1656, 0.1881, 0.2050],
         [0.6166, 0.6032, 0.4333,  ..., 0.4933, 0.4001, 0.3426]],
        [[0.2414, 0.2500, 0.2587,  ..., 0.2500, 0.2418, 0.2500],
         [0.2758, 0.2500, 0.2655,  ..., 0.2500, 0.2958, 0.2500],
         [0.2414, 0.2500, 0.2379,  ..., 0.2500, 0.2312, 0.2500],
         [0.2414, 0.2500, 0.2379,  ..., 0.2500, 0.2312, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1750, 0.3076, 0.2426,  ..., 0.2234, 0.2500, 0.2391],
         [0.1750, 0.2308, 0.2426,  ..., 0.2234, 0.2500, 0.2391],
         [0.1750, 0.2308, 0.2722,  ..., 0.3299, 0.2500, 0.2391],
         [0.4751, 0.2308, 0.2426,  ..., 0.2234, 0.2500, 0.2826]],
        [[0.4554, 0.3645, 0.3453,  ..., 0.3395, 0.4031, 0.6632],
         [0.1933, 0.1091, 0.1998,  ..., 0.3102, 0.4211, 0.1955],
         [0.2450, 0.2811, 0.3712,  ..., 0.2736, 0.0879, 0.0707],
         [0.1062, 0.2453, 0.0837,  ..., 0.0766, 0.0879, 0.0707]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:09,956 [Process: 0] Synchronize training processes
2024-08-16 12:59:09,957 [Process: 0] Evaluating...
2024-08-16 12:59:09,959 [Process: 0] EPOCH 123:
2024-08-16 12:59:09,961 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1835, 0.1538, 0.1839,  ..., 0.1803, 0.1638, 0.1679],
         [0.1835, 0.1538, 0.1839,  ..., 0.2147, 0.1748, 0.1679],
         [0.1835, 0.1538, 0.1839,  ..., 0.1803, 0.1638, 0.1679],
         [0.4494, 0.5386, 0.4483,  ..., 0.4247, 0.4976, 0.4963]],
        [[0.2491, 0.2500, 0.2500,  ..., 0.2442, 0.2500, 0.2494],
         [0.2526, 0.2500, 0.2500,  ..., 0.2673, 0.2500, 0.2518],
         [0.2491, 0.2500, 0.2500,  ..., 0.2442, 0.2500, 0.2494],
         [0.2491, 0.2500, 0.2500,  ..., 0.2442, 0.2500, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5386, 0.2986, 0.3187,  ..., 0.3143, 0.0954, 0.1605],
         [0.1119, 0.1647, 0.1156,  ..., 0.1543, 0.2909, 0.1605],
         [0.1119, 0.2755, 0.1798,  ..., 0.1352, 0.0869, 0.2320],
         [0.2375, 0.2612, 0.3859,  ..., 0.3962, 0.5268, 0.4470]],
        [[0.2500, 0.2153, 0.2500,  ..., 0.1904, 0.2402, 0.1197],
         [0.2500, 0.3542, 0.2500,  ..., 0.2187, 0.3248, 0.1424],
         [0.2500, 0.2153, 0.2500,  ..., 0.4376, 0.2175, 0.6293],
         [0.2500, 0.2153, 0.2500,  ..., 0.1533, 0.2175, 0.1086]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:11,875 [Process: 0] Synchronize training processes
2024-08-16 12:59:11,876 [Process: 0] Evaluating...
2024-08-16 12:59:11,877 [Process: 0] EPOCH 124:
2024-08-16 12:59:11,879 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:13,775 [Process: 0] Synchronize training processes
2024-08-16 12:59:13,775 [Process: 0] Evaluating...
2024-08-16 12:59:13,777 [Process: 0] EPOCH 125:
2024-08-16 12:59:13,779 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1574, 0.1676, 0.1706,  ..., 0.1617, 0.1602, 0.1579],
         [0.1574, 0.1676, 0.1995,  ..., 0.1617, 0.1899, 0.1579],
         [0.1574, 0.1676, 0.1469,  ..., 0.1617, 0.1602, 0.1579],
         [0.5277, 0.4971, 0.4830,  ..., 0.5149, 0.4896, 0.5264]],
        [[0.2500, 0.2319, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.3044, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2319, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2319, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2078, 0.1695, 0.3063,  ..., 0.2411, 0.1957, 0.3788],
         [0.2061, 0.2236, 0.1899,  ..., 0.1640, 0.3003, 0.2351],
         [0.2061, 0.1417, 0.1741,  ..., 0.1251, 0.1745, 0.1083],
         [0.3801, 0.4653, 0.3297,  ..., 0.4698, 0.3295, 0.2779]],
        [[0.2173, 0.2499, 0.2500,  ..., 0.2405, 0.3111, 0.2028],
         [0.3481, 0.2499, 0.2500,  ..., 0.2786, 0.3210, 0.3675],
         [0.2173, 0.2503, 0.2500,  ..., 0.2405, 0.1840, 0.2269],
         [0.2173, 0.2499, 0.2500,  ..., 0.2405, 0.1840, 0.2028]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:15,740 [Process: 0] Synchronize training processes
2024-08-16 12:59:15,740 [Process: 0] Evaluating...
2024-08-16 12:59:15,742 [Process: 0] EPOCH 126:
2024-08-16 12:59:15,744 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1284, 0.1639, 0.1808,  ..., 0.1603, 0.1972, 0.1876],
         [0.1284, 0.1830, 0.1808,  ..., 0.1568, 0.1972, 0.1984],
         [0.1284, 0.1639, 0.1808,  ..., 0.1568, 0.1972, 0.1876],
         [0.6147, 0.4892, 0.4576,  ..., 0.5260, 0.4084, 0.4263]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2383, 0.2500, 0.2498],
         [0.2500, 0.2500, 0.2500,  ..., 0.2852, 0.2500, 0.2507],
         [0.2500, 0.2500, 0.2500,  ..., 0.2383, 0.2500, 0.2498],
         [0.2500, 0.2500, 0.2500,  ..., 0.2383, 0.2500, 0.2498]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0857, 0.1135, 0.1684,  ..., 0.0597, 0.1832, 0.4005],
         [0.1168, 0.1135, 0.1684,  ..., 0.0705, 0.1832, 0.1998],
         [0.1375, 0.5986, 0.3676,  ..., 0.0856, 0.4414, 0.1998],
         [0.6600, 0.1744, 0.2955,  ..., 0.7842, 0.1922, 0.1998]],
        [[0.4989, 0.1487, 0.1990,  ..., 0.2327, 0.2372, 0.2400],
         [0.2305, 0.5569, 0.4029,  ..., 0.2327, 0.2884, 0.2799],
         [0.1353, 0.1472, 0.1990,  ..., 0.3019, 0.2372, 0.2400],
         [0.1353, 0.1472, 0.1990,  ..., 0.2327, 0.2372, 0.2400]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:17,644 [Process: 0] Synchronize training processes
2024-08-16 12:59:17,645 [Process: 0] Evaluating...
2024-08-16 12:59:17,646 [Process: 0] EPOCH 127:
2024-08-16 12:59:17,648 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1845, 0.2015, 0.1714,  ..., 0.1626, 0.1759, 0.1738],
         [0.1909, 0.2015, 0.1589,  ..., 0.1626, 0.1776, 0.1695],
         [0.1845, 0.2015, 0.1589,  ..., 0.1626, 0.1759, 0.1669],
         [0.4400, 0.3956, 0.5108,  ..., 0.5121, 0.4706, 0.4898]],
        [[0.2500, 0.2500, 0.2490,  ..., 0.2500, 0.2480, 0.2500],
         [0.2500, 0.2500, 0.2529,  ..., 0.2500, 0.2561, 0.2500],
         [0.2500, 0.2500, 0.2490,  ..., 0.2500, 0.2480, 0.2500],
         [0.2500, 0.2500, 0.2490,  ..., 0.2500, 0.2480, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1374, 0.5824, 0.2034,  ..., 0.1528, 0.2553, 0.1706],
         [0.1153, 0.1043, 0.1283,  ..., 0.1528, 0.1551, 0.1706],
         [0.2074, 0.1043, 0.2009,  ..., 0.1528, 0.1551, 0.1706],
         [0.5399, 0.2091, 0.4675,  ..., 0.5417, 0.4346, 0.4882]],
        [[0.3648, 0.1067, 0.2692,  ..., 0.1239, 0.1298, 0.2500],
         [0.2727, 0.2157, 0.2997,  ..., 0.5813, 0.4548, 0.2500],
         [0.2774, 0.5709, 0.3566,  ..., 0.2202, 0.2857, 0.2500],
         [0.0850, 0.1067, 0.0745,  ..., 0.0746, 0.1298, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:19,537 [Process: 0] Synchronize training processes
2024-08-16 12:59:19,537 [Process: 0] Evaluating...
2024-08-16 12:59:19,539 [Process: 0] EPOCH 128:
2024-08-16 12:59:19,541 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1131, 0.1843, 0.2171,  ..., 0.1538, 0.1737, 0.1102],
         [0.1131, 0.2166, 0.2171,  ..., 0.1538, 0.2186, 0.1102],
         [0.1131, 0.1843, 0.2171,  ..., 0.1538, 0.1737, 0.1102],
         [0.6607, 0.4147, 0.3487,  ..., 0.5387, 0.4340, 0.6695]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1315, 0.1492, 0.2471,  ..., 0.1518, 0.1722, 0.1308],
         [0.1315, 0.1492, 0.1700,  ..., 0.1616, 0.1722, 0.1308],
         [0.2866, 0.3458, 0.2387,  ..., 0.1518, 0.3173, 0.3006],
         [0.4504, 0.3558, 0.3442,  ..., 0.5348, 0.3382, 0.4379]],
        [[0.2001, 0.2665, 0.2210,  ..., 0.2802, 0.2471, 0.4498],
         [0.4279, 0.4270, 0.3371,  ..., 0.2399, 0.2588, 0.2407],
         [0.1860, 0.2480, 0.2210,  ..., 0.2399, 0.2471, 0.1480],
         [0.1860, 0.0585, 0.2210,  ..., 0.2399, 0.2471, 0.1615]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 12:59:21,439 [Process: 0] Synchronize training processes
2024-08-16 12:59:21,439 [Process: 0] Evaluating...
2024-08-16 12:59:21,441 [Process: 0] EPOCH 129:
2024-08-16 12:59:21,443 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1642, 0.1285, 0.1820,  ..., 0.1461, 0.1124, 0.1602],
         [0.1642, 0.1285, 0.1820,  ..., 0.1461, 0.1152, 0.1462],
         [0.1642, 0.1285, 0.1820,  ..., 0.1461, 0.1124, 0.1462],
         [0.5074, 0.6146, 0.4540,  ..., 0.5617, 0.6600, 0.5473]],
        [[0.2500, 0.2439, 0.2500,  ..., 0.2499, 0.2500, 0.2500],
         [0.2500, 0.2684, 0.2500,  ..., 0.2499, 0.2500, 0.2500],
         [0.2500, 0.2439, 0.2500,  ..., 0.2503, 0.2500, 0.2500],
         [0.2500, 0.2439, 0.2500,  ..., 0.2499, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1883, 0.2312, 0.3551,  ..., 0.2146, 0.1691, 0.1562],
         [0.1883, 0.2295, 0.4226,  ..., 0.2146, 0.1691, 0.1562],
         [0.1883, 0.2295, 0.1008,  ..., 0.2146, 0.2903, 0.3081],
         [0.4351, 0.3097, 0.1215,  ..., 0.3563, 0.3716, 0.3795]],
        [[0.0629, 0.1698, 0.2421,  ..., 0.1840, 0.4339, 0.2530],
         [0.1327, 0.3252, 0.2421,  ..., 0.0972, 0.1935, 0.2437],
         [0.7436, 0.3351, 0.2738,  ..., 0.5069, 0.2646, 0.3203],
         [0.0609, 0.1698, 0.2421,  ..., 0.2119, 0.1080, 0.1830]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1737, 0.1647, 0.1380,  ..., 0.1566, 0.1889, 0.1725],
         [0.1737, 0.1930, 0.1380,  ..., 0.1943, 0.1889, 0.1725],
         [0.1737, 0.1647, 0.1380,  ..., 0.1566, 0.1889, 0.1725],
         [0.4788, 0.4775, 0.5860,  ..., 0.4925, 0.4332, 0.4824]],
        [[0.2500, 0.2506, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:59:23,373 [Process: 0] Synchronize training processes
2024-08-16 12:59:23,373 [Process: 0] Evaluating...
2024-08-16 12:59:23,375 [Process: 0] EPOCH 130:
2024-08-16 12:59:23,377 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.6613, 0.1952, 0.1287,  ..., 0.0572, 0.3701, 0.2428],
         [0.2209, 0.1556, 0.1287,  ..., 0.0572, 0.1670, 0.1001],
         [0.0505, 0.3702, 0.2734,  ..., 0.7718, 0.1812, 0.2153],
         [0.0673, 0.2790, 0.4692,  ..., 0.1138, 0.2817, 0.4419]],
        [[0.2487, 0.1249, 0.2162,  ..., 0.2327, 0.1630, 0.2899],
         [0.2539, 0.5322, 0.3515,  ..., 0.3014, 0.5110, 0.4499],
         [0.2487, 0.2180, 0.2162,  ..., 0.2333, 0.1630, 0.1372],
         [0.2487, 0.1249, 0.2162,  ..., 0.2327, 0.1630, 0.1230]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1635, 0.1453, 0.1930,  ..., 0.1589, 0.1452, 0.1637],
         [0.1740, 0.1453, 0.1930,  ..., 0.1640, 0.1452, 0.1686],
         [0.1635, 0.1453, 0.1930,  ..., 0.1589, 0.1452, 0.1637],
         [0.4989, 0.5642, 0.4211,  ..., 0.5182, 0.5643, 0.5040]],
        [[0.2498, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2506, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2498, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2498, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:59:25,288 [Process: 0] Synchronize training processes
2024-08-16 12:59:25,289 [Process: 0] Evaluating...
2024-08-16 12:59:25,291 [Process: 0] EPOCH 131:
2024-08-16 12:59:25,293 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2198, 0.2333, 0.1439,  ..., 0.2717, 0.1787, 0.1486],
         [0.1956, 0.2333, 0.1439,  ..., 0.3115, 0.1787, 0.1486],
         [0.1956, 0.2333, 0.1439,  ..., 0.2010, 0.1787, 0.1486],
         [0.3889, 0.3001, 0.5682,  ..., 0.2158, 0.4639, 0.5542]],
        [[0.3363, 0.2439, 0.3551,  ..., 0.2477, 0.2420, 0.3091],
         [0.2510, 0.2914, 0.2369,  ..., 0.2570, 0.2758, 0.3262],
         [0.2324, 0.2323, 0.2040,  ..., 0.2477, 0.2595, 0.2041],
         [0.1802, 0.2323, 0.2040,  ..., 0.2477, 0.2226, 0.1606]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2046, 0.1572, 0.1693,  ..., 0.1222, 0.1207, 0.2087],
         [0.2146, 0.1775, 0.1757,  ..., 0.1351, 0.1327, 0.2087],
         [0.2046, 0.1572, 0.1693,  ..., 0.1222, 0.1207, 0.2087],
         [0.3763, 0.5082, 0.4857,  ..., 0.6205, 0.6258, 0.3738]],
        [[0.2500, 0.2493, 0.2500,  ..., 0.2387, 0.2441, 0.2500],
         [0.2500, 0.2522, 0.2500,  ..., 0.2595, 0.2677, 0.2500],
         [0.2500, 0.2493, 0.2500,  ..., 0.2630, 0.2441, 0.2500],
         [0.2500, 0.2493, 0.2500,  ..., 0.2387, 0.2441, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:59:27,238 [Process: 0] Synchronize training processes
2024-08-16 12:59:27,239 [Process: 0] Evaluating...
2024-08-16 12:59:27,241 [Process: 0] EPOCH 132:
2024-08-16 12:59:27,243 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1902, 0.1756, 0.1738,  ..., 0.2109, 0.2037, 0.2153],
         [0.2579, 0.1756, 0.1738,  ..., 0.2109, 0.2037, 0.2153],
         [0.1902, 0.1756, 0.1738,  ..., 0.2109, 0.2037, 0.2153],
         [0.3617, 0.4733, 0.4787,  ..., 0.3673, 0.3889, 0.3541]],
        [[0.1760, 0.1790, 0.1884,  ..., 0.7652, 0.0996, 0.1955],
         [0.4408, 0.2830, 0.3775,  ..., 0.2227, 0.5378, 0.3961],
         [0.2071, 0.3589, 0.2457,  ..., 0.0069, 0.2629, 0.2129],
         [0.1760, 0.1790, 0.1884,  ..., 0.0051, 0.0996, 0.1955]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0989, 0.1281, 0.1920,  ..., 0.1635, 0.1964, 0.1312],
         [0.0989, 0.1475, 0.2155,  ..., 0.1635, 0.1964, 0.1390],
         [0.0989, 0.1275, 0.1920,  ..., 0.1635, 0.1964, 0.1312],
         [0.7033, 0.5969, 0.4005,  ..., 0.5096, 0.4108, 0.5986]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:59:29,139 [Process: 0] Synchronize training processes
2024-08-16 12:59:29,139 [Process: 0] Evaluating...
2024-08-16 12:59:29,141 [Process: 0] EPOCH 133:
2024-08-16 12:59:29,143 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1531, 0.2057, 0.2232,  ..., 0.2231, 0.1838, 0.1506],
         [0.1531, 0.2057, 0.2243,  ..., 0.2231, 0.1838, 0.1506],
         [0.1531, 0.2057, 0.2340,  ..., 0.2231, 0.1838, 0.1506],
         [0.5408, 0.3830, 0.3185,  ..., 0.3307, 0.4485, 0.5481]],
        [[0.3110, 0.2421, 0.3679,  ..., 0.3124, 0.3767, 0.2324],
         [0.2302, 0.4349, 0.3269,  ..., 0.2701, 0.3384, 0.2105],
         [0.2296, 0.1615, 0.1526,  ..., 0.2088, 0.1430, 0.3466],
         [0.2292, 0.1615, 0.1526,  ..., 0.2088, 0.1420, 0.2105]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1712, 0.1446, 0.1377,  ..., 0.1743, 0.1516, 0.1530],
         [0.1712, 0.1446, 0.1530,  ..., 0.1844, 0.1638, 0.1530],
         [0.1712, 0.1446, 0.1377,  ..., 0.1727, 0.1516, 0.1530],
         [0.4865, 0.5661, 0.5716,  ..., 0.4687, 0.5330, 0.5410]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2461, 0.2480, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2486, 0.2559, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2592, 0.2480, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2461, 0.2480, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:59:31,040 [Process: 0] Synchronize training processes
2024-08-16 12:59:31,040 [Process: 0] Evaluating...
2024-08-16 12:59:31,042 [Process: 0] EPOCH 134:
2024-08-16 12:59:31,044 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.6157, 0.1394, 0.1762,  ..., 0.1900, 0.2790, 0.3149],
         [0.0776, 0.1394, 0.1762,  ..., 0.1900, 0.1297, 0.1616],
         [0.0776, 0.1394, 0.2539,  ..., 0.1900, 0.1297, 0.1515],
         [0.2291, 0.5817, 0.3937,  ..., 0.4300, 0.4616, 0.3720]],
        [[0.5862, 0.2500, 0.1247,  ..., 0.1865, 0.1393, 0.3934],
         [0.1347, 0.2500, 0.2457,  ..., 0.2687, 0.1945, 0.1843],
         [0.1443, 0.2500, 0.5049,  ..., 0.3583, 0.5498, 0.2380],
         [0.1347, 0.2500, 0.1247,  ..., 0.1865, 0.1164, 0.1843]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1478, 0.1151, 0.2028,  ..., 0.1931, 0.1770, 0.1357],
         [0.1478, 0.1151, 0.2028,  ..., 0.1931, 0.1838, 0.1357],
         [0.1478, 0.1151, 0.2028,  ..., 0.1931, 0.1770, 0.1357],
         [0.5567, 0.6548, 0.3915,  ..., 0.4206, 0.4623, 0.5928]],
        [[0.2474, 0.2476, 0.2500,  ..., 0.2433, 0.2493, 0.2373],
         [0.2579, 0.2571, 0.2500,  ..., 0.2700, 0.2521, 0.2880],
         [0.2474, 0.2476, 0.2500,  ..., 0.2433, 0.2493, 0.2373],
         [0.2474, 0.2476, 0.2500,  ..., 0.2433, 0.2493, 0.2373]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:59:32,945 [Process: 0] Synchronize training processes
2024-08-16 12:59:32,946 [Process: 0] Evaluating...
2024-08-16 12:59:32,948 [Process: 0] EPOCH 135:
2024-08-16 12:59:32,950 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2383, 0.2198, 0.1736,  ..., 0.2149, 0.1992, 0.5469],
         [0.2052, 0.1604, 0.1736,  ..., 0.1882, 0.1537, 0.0432],
         [0.2052, 0.1604, 0.1736,  ..., 0.1882, 0.1537, 0.0432],
         [0.3513, 0.4594, 0.4792,  ..., 0.4086, 0.4934, 0.3668]],
        [[0.1422, 0.2082, 0.1663,  ..., 0.1529, 0.2508, 0.1729],
         [0.3485, 0.2082, 0.3910,  ..., 0.4074, 0.4392, 0.4049],
         [0.3671, 0.3754, 0.3494,  ..., 0.2869, 0.1550, 0.2530],
         [0.1422, 0.2082, 0.0934,  ..., 0.1529, 0.1550, 0.1692]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1659, 0.1456, 0.1604,  ..., 0.1486, 0.1545, 0.1260],
         [0.1659, 0.1456, 0.1604,  ..., 0.1486, 0.1545, 0.1260],
         [0.1659, 0.1456, 0.1604,  ..., 0.1486, 0.1545, 0.1260],
         [0.5023, 0.5631, 0.5189,  ..., 0.5541, 0.5364, 0.6221]],
        [[0.2500, 0.2500, 0.2408,  ..., 0.2420, 0.2532, 0.2500],
         [0.2500, 0.2500, 0.2775,  ..., 0.2739, 0.2489, 0.2500],
         [0.2500, 0.2500, 0.2408,  ..., 0.2420, 0.2489, 0.2500],
         [0.2500, 0.2500, 0.2408,  ..., 0.2420, 0.2489, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:59:34,860 [Process: 0] Synchronize training processes
2024-08-16 12:59:34,860 [Process: 0] Evaluating...
2024-08-16 12:59:34,862 [Process: 0] EPOCH 136:
2024-08-16 12:59:34,864 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2354, 0.1680, 0.2213,  ..., 0.2191, 0.1400, 0.0966],
         [0.2449, 0.1680, 0.2818,  ..., 0.2191, 0.1400, 0.0966],
         [0.2354, 0.1680, 0.2213,  ..., 0.2310, 0.1400, 0.7101],
         [0.2844, 0.4961, 0.2755,  ..., 0.3308, 0.5799, 0.0966]],
        [[0.2737, 0.2279, 0.2401,  ..., 0.2497, 0.2372, 0.2226],
         [0.3089, 0.3162, 0.3051,  ..., 0.2508, 0.2885, 0.3321],
         [0.2087, 0.2279, 0.2274,  ..., 0.2497, 0.2372, 0.2226],
         [0.2087, 0.2279, 0.2274,  ..., 0.2497, 0.2372, 0.2226]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1760, 0.1996, 0.1729,  ..., 0.1604, 0.1550, 0.1710],
         [0.1760, 0.1996, 0.1729,  ..., 0.1604, 0.1550, 0.1710],
         [0.1760, 0.1996, 0.1729,  ..., 0.1604, 0.1550, 0.1710],
         [0.4721, 0.4012, 0.4814,  ..., 0.5189, 0.5351, 0.4870]],
        [[0.2451, 0.2494, 0.2484,  ..., 0.2500, 0.2500, 0.2453],
         [0.2646, 0.2517, 0.2549,  ..., 0.2500, 0.2500, 0.2642],
         [0.2451, 0.2494, 0.2484,  ..., 0.2500, 0.2500, 0.2453],
         [0.2451, 0.2494, 0.2484,  ..., 0.2500, 0.2500, 0.2453]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:59:36,776 [Process: 0] Synchronize training processes
2024-08-16 12:59:36,776 [Process: 0] Evaluating...
2024-08-16 12:59:36,778 [Process: 0] EPOCH 137:
2024-08-16 12:59:36,780 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2053, 0.1424, 0.2032,  ..., 0.1834, 0.1303, 0.9822],
         [0.2053, 0.1472, 0.2045,  ..., 0.1834, 0.1303, 0.0026],
         [0.2053, 0.1424, 0.1404,  ..., 0.1834, 0.1303, 0.0124],
         [0.3841, 0.5681, 0.4519,  ..., 0.4497, 0.6092, 0.0028]],
        [[0.2389, 0.2450, 0.2163,  ..., 0.1935, 0.2493, 0.2221],
         [0.3476, 0.2890, 0.3178,  ..., 0.4308, 0.2522, 0.3337],
         [0.2067, 0.2557, 0.2495,  ..., 0.1945, 0.2493, 0.2221],
         [0.2067, 0.2103, 0.2163,  ..., 0.1812, 0.2493, 0.2221]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1819, 0.1369, 0.1827,  ..., 0.1951, 0.1526, 0.1770],
         [0.1819, 0.1369, 0.2134,  ..., 0.1951, 0.1526, 0.1770],
         [0.1819, 0.1369, 0.1827,  ..., 0.1951, 0.1526, 0.1770],
         [0.4542, 0.5894, 0.4213,  ..., 0.4147, 0.5421, 0.4690]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:59:38,680 [Process: 0] Synchronize training processes
2024-08-16 12:59:38,680 [Process: 0] Evaluating...
2024-08-16 12:59:38,682 [Process: 0] EPOCH 138:
2024-08-16 12:59:38,684 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5667, 0.1682, 0.0892,  ..., 0.3755, 0.2202, 0.2381],
         [0.0882, 0.1682, 0.3323,  ..., 0.2347, 0.2202, 0.1669],
         [0.2227, 0.1682, 0.3112,  ..., 0.1101, 0.2460, 0.2239],
         [0.1224, 0.4955, 0.2673,  ..., 0.2797, 0.3137, 0.3711]],
        [[0.2500, 0.0456, 0.3323,  ..., 0.1267, 0.2498, 0.1146],
         [0.2500, 0.8867, 0.2023,  ..., 0.6111, 0.2505, 0.5697],
         [0.2500, 0.0350, 0.2632,  ..., 0.1600, 0.2498, 0.2012],
         [0.2500, 0.0327, 0.2023,  ..., 0.1022, 0.2498, 0.1146]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1385, 0.1695, 0.1633,  ..., 0.1925, 0.1801, 0.1841],
         [0.1385, 0.1719, 0.1633,  ..., 0.1925, 0.1893, 0.1841],
         [0.1385, 0.1695, 0.1633,  ..., 0.1925, 0.1801, 0.1841],
         [0.5845, 0.4892, 0.5100,  ..., 0.4226, 0.4505, 0.4476]],
        [[0.2474, 0.2500, 0.2498,  ..., 0.2500, 0.2500, 0.2500],
         [0.2579, 0.2500, 0.2507,  ..., 0.2500, 0.2500, 0.2500],
         [0.2474, 0.2500, 0.2498,  ..., 0.2500, 0.2500, 0.2500],
         [0.2474, 0.2500, 0.2498,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 12:59:40,611 [Process: 0] Synchronize training processes
2024-08-16 12:59:40,611 [Process: 0] Evaluating...
2024-08-16 12:59:40,613 [Process: 0] EPOCH 139:
2024-08-16 12:59:40,615 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2817, 0.2500, 0.1775,  ..., 0.2509, 0.1845, 0.1880],
         [0.2681, 0.2500, 0.1775,  ..., 0.2056, 0.1845, 0.1880],
         [0.2075, 0.2500, 0.1775,  ..., 0.1826, 0.1845, 0.1880],
         [0.2427, 0.2500, 0.4674,  ..., 0.3609, 0.4464, 0.4359]],
        [[0.3896, 0.5595, 0.2395,  ..., 0.0355, 0.2528, 0.3970],
         [0.2398, 0.1822, 0.2395,  ..., 0.0355, 0.1664, 0.2131],
         [0.1853, 0.1493, 0.2815,  ..., 0.8128, 0.4145, 0.1950],
         [0.1853, 0.1090, 0.2395,  ..., 0.1162, 0.1664, 0.1950]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1898, 0.1957, 0.1297,  ..., 0.1598, 0.1517, 0.1364],
         [0.1898, 0.1957, 0.1297,  ..., 0.1598, 0.1517, 0.1625],
         [0.1898, 0.1957, 0.1297,  ..., 0.1598, 0.1517, 0.1348],
         [0.4307, 0.4128, 0.6108,  ..., 0.5207, 0.5450, 0.5663]],
        [[0.2500, 0.2475, 0.2470,  ..., 0.2500, 0.2500, 0.2417],
         [0.2500, 0.2574, 0.2590,  ..., 0.2500, 0.2500, 0.2748],
         [0.2500, 0.2475, 0.2470,  ..., 0.2500, 0.2500, 0.2417],
         [0.2500, 0.2475, 0.2470,  ..., 0.2500, 0.2500, 0.2417]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1985, 0.1417, 0.1614,  ..., 0.1481, 0.1409, 0.1763],
         [0.2025, 0.1417, 0.1440,  ..., 0.1481, 0.1927, 0.1763],
         [0.1985, 0.1417, 0.1707,  ..., 0.1481, 0.1536, 0.1763],
         [0.4005, 0.5748, 0.5240,  ..., 0.5558, 0.5127, 0.4712]],
        [[0.2625, 0.2287, 0.5153,  ..., 0.2204, 0.3592, 0.4323],
         [0.4127, 0.3082, 0.1193,  ..., 0.3249, 0.3465, 0.1291],
         [0.1624, 0.2344, 0.2771,  ..., 0.2469, 0.1471, 0.3095],
         [0.1624, 0.2287, 0.0884,  ..., 0.2078, 0.1471, 0.1291]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 12:59:42,512 [Process: 0] Synchronize training processes
2024-08-16 12:59:42,512 [Process: 0] Evaluating...
2024-08-16 12:59:42,514 [Process: 0] EPOCH 140:
2024-08-16 12:59:42,516 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1526, 0.1781, 0.1977,  ..., 0.1412, 0.2207, 0.1738],
         [0.1526, 0.1935, 0.1977,  ..., 0.1412, 0.2207, 0.1738],
         [0.1526, 0.1781, 0.1977,  ..., 0.1412, 0.2207, 0.1738],
         [0.5423, 0.4503, 0.4068,  ..., 0.5765, 0.3379, 0.4785]],
        [[0.2455, 0.2484, 0.2500,  ..., 0.2594, 0.2468, 0.2456],
         [0.2634, 0.2547, 0.2500,  ..., 0.2469, 0.2597, 0.2632],
         [0.2455, 0.2484, 0.2500,  ..., 0.2469, 0.2468, 0.2456],
         [0.2455, 0.2484, 0.2500,  ..., 0.2469, 0.2468, 0.2456]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0700, 0.2354, 0.2500,  ..., 0.2500, 0.2161, 0.2500],
         [0.0700, 0.2354, 0.2500,  ..., 0.2500, 0.2161, 0.2500],
         [0.1582, 0.2937, 0.2500,  ..., 0.2500, 0.3516, 0.2500],
         [0.7018, 0.2354, 0.2500,  ..., 0.2500, 0.2161, 0.2500]],
        [[0.2838, 0.3914, 0.3987,  ..., 0.1451, 0.3124, 0.1301],
         [0.4453, 0.1537, 0.3243,  ..., 0.3708, 0.2087, 0.3899],
         [0.1354, 0.3406, 0.1385,  ..., 0.3805, 0.2902, 0.3500],
         [0.1354, 0.1143, 0.1385,  ..., 0.1035, 0.1888, 0.1301]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:44,413 [Process: 0] Synchronize training processes
2024-08-16 12:59:44,414 [Process: 0] Evaluating...
2024-08-16 12:59:44,415 [Process: 0] EPOCH 141:
2024-08-16 12:59:44,417 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1902, 0.1668, 0.1952,  ..., 0.1919, 0.1745, 0.1196],
         [0.1917, 0.1668, 0.1952,  ..., 0.2026, 0.1745, 0.1209],
         [0.1902, 0.1668, 0.1952,  ..., 0.1919, 0.1745, 0.1196],
         [0.4279, 0.4996, 0.4145,  ..., 0.4137, 0.4765, 0.6398]],
        [[0.2468, 0.2453, 0.2476,  ..., 0.2500, 0.2485, 0.2500],
         [0.2596, 0.2641, 0.2571,  ..., 0.2500, 0.2545, 0.2500],
         [0.2468, 0.2453, 0.2476,  ..., 0.2500, 0.2485, 0.2500],
         [0.2468, 0.2453, 0.2476,  ..., 0.2500, 0.2485, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4266, 0.2959, 0.1484,  ..., 0.1094, 0.1536, 0.3180],
         [0.1382, 0.1616, 0.1687,  ..., 0.4882, 0.1977, 0.1672],
         [0.1382, 0.1616, 0.2209,  ..., 0.1094, 0.2823, 0.1672],
         [0.2969, 0.3808, 0.4620,  ..., 0.2930, 0.3664, 0.3476]],
        [[0.5157, 0.3091, 0.2383,  ..., 0.6089, 0.2739, 0.3507],
         [0.3349, 0.3111, 0.3755,  ..., 0.1552, 0.4354, 0.2742],
         [0.0747, 0.1899, 0.2100,  ..., 0.1179, 0.1453, 0.2008],
         [0.0747, 0.1899, 0.1761,  ..., 0.1179, 0.1453, 0.1742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:46,368 [Process: 0] Synchronize training processes
2024-08-16 12:59:46,369 [Process: 0] Evaluating...
2024-08-16 12:59:46,371 [Process: 0] EPOCH 142:
2024-08-16 12:59:46,373 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1667, 0.2050, 0.1407,  ..., 0.1400, 0.1984, 0.1576],
         [0.1667, 0.2050, 0.1677,  ..., 0.1490, 0.1984, 0.1613],
         [0.1667, 0.2050, 0.1407,  ..., 0.1493, 0.1984, 0.1576],
         [0.4999, 0.3849, 0.5509,  ..., 0.5617, 0.4047, 0.5236]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2680],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2440],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2440],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2440]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2161, 0.1727, 0.1495,  ..., 0.4215, 0.2828, 0.1395],
         [0.2161, 0.1727, 0.1495,  ..., 0.1253, 0.2391, 0.1395],
         [0.3516, 0.3085, 0.5515,  ..., 0.1253, 0.2391, 0.2174],
         [0.2161, 0.3460, 0.1495,  ..., 0.3280, 0.2391, 0.5035]],
        [[0.2514, 0.2163, 0.4081,  ..., 0.3281, 0.2080, 0.1860],
         [0.3164, 0.3308, 0.3375,  ..., 0.2617, 0.3246, 0.4852],
         [0.2161, 0.2163, 0.1533,  ..., 0.2051, 0.4038, 0.2440],
         [0.2161, 0.2366, 0.1011,  ..., 0.2051, 0.0636, 0.0848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:48,281 [Process: 0] Synchronize training processes
2024-08-16 12:59:48,282 [Process: 0] Evaluating...
2024-08-16 12:59:48,284 [Process: 0] EPOCH 143:
2024-08-16 12:59:48,286 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1322, 0.1441, 0.1113,  ..., 0.1652, 0.1481, 0.1507],
         [0.1354, 0.1441, 0.1113,  ..., 0.1654, 0.1782, 0.1507],
         [0.1322, 0.1441, 0.1113,  ..., 0.1652, 0.1481, 0.1507],
         [0.6002, 0.5678, 0.6662,  ..., 0.5041, 0.5256, 0.5480]],
        [[0.2496, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2511, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2519],
         [0.2496, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2496, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2093, 0.1514, 0.1352,  ..., 0.1473, 0.1258, 0.1033],
         [0.2581, 0.1514, 0.1965,  ..., 0.1473, 0.1258, 0.1033],
         [0.2377, 0.5310, 0.3066,  ..., 0.1743, 0.2651, 0.2117],
         [0.2948, 0.1663, 0.3618,  ..., 0.5310, 0.4832, 0.5816]],
        [[0.2287, 0.4023, 0.2500,  ..., 0.2905, 0.4899, 0.3205],
         [0.5331, 0.3032, 0.2500,  ..., 0.2994, 0.1905, 0.5890],
         [0.1191, 0.1473, 0.2500,  ..., 0.2051, 0.1598, 0.0452],
         [0.1191, 0.1473, 0.2500,  ..., 0.2051, 0.1598, 0.0452]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:50,194 [Process: 0] Synchronize training processes
2024-08-16 12:59:50,194 [Process: 0] Evaluating...
2024-08-16 12:59:50,196 [Process: 0] EPOCH 144:
2024-08-16 12:59:50,199 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1877, 0.1656, 0.0835,  ..., 0.1746, 0.1468, 0.1644],
         [0.1877, 0.1656, 0.0835,  ..., 0.1746, 0.1531, 0.1644],
         [0.1877, 0.1656, 0.0835,  ..., 0.1746, 0.1468, 0.1644],
         [0.4369, 0.5032, 0.7494,  ..., 0.4762, 0.5533, 0.5067]],
        [[0.2500, 0.2500, 0.2459,  ..., 0.2500, 0.2500, 0.2371],
         [0.2500, 0.2500, 0.2623,  ..., 0.2500, 0.2500, 0.2888],
         [0.2500, 0.2500, 0.2459,  ..., 0.2500, 0.2500, 0.2371],
         [0.2500, 0.2500, 0.2459,  ..., 0.2500, 0.2500, 0.2371]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2169, 0.2500, 0.1715,  ..., 0.2311, 0.2275, 0.0952],
         [0.2169, 0.2500, 0.1944,  ..., 0.2311, 0.2275, 0.0952],
         [0.2169, 0.2500, 0.1829,  ..., 0.2311, 0.2275, 0.0952],
         [0.3494, 0.2500, 0.4512,  ..., 0.3068, 0.3174, 0.7144]],
        [[0.3875, 0.2253, 0.2239,  ..., 0.7704, 0.5259, 0.4444],
         [0.3481, 0.2098, 0.3282,  ..., 0.1018, 0.2034, 0.1999],
         [0.1484, 0.3551, 0.2239,  ..., 0.0752, 0.1353, 0.2290],
         [0.1159, 0.2098, 0.2239,  ..., 0.0527, 0.1353, 0.1267]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:52,129 [Process: 0] Synchronize training processes
2024-08-16 12:59:52,130 [Process: 0] Evaluating...
2024-08-16 12:59:52,132 [Process: 0] EPOCH 145:
2024-08-16 12:59:52,134 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1547, 0.1486, 0.1734,  ..., 0.1792, 0.1328, 0.1365],
         [0.1579, 0.1486, 0.1834,  ..., 0.1792, 0.1328, 0.1365],
         [0.1547, 0.1486, 0.1734,  ..., 0.1792, 0.1328, 0.1365],
         [0.5327, 0.5541, 0.4698,  ..., 0.4625, 0.6017, 0.5905]],
        [[0.2500, 0.2500, 0.2418,  ..., 0.2460, 0.2467, 0.2451],
         [0.2500, 0.2500, 0.2674,  ..., 0.2619, 0.2598, 0.2647],
         [0.2500, 0.2500, 0.2490,  ..., 0.2460, 0.2467, 0.2451],
         [0.2500, 0.2500, 0.2418,  ..., 0.2460, 0.2467, 0.2451]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3620, 0.3079, 0.1844,  ..., 0.3989, 0.1849, 0.3658],
         [0.1511, 0.1142, 0.1926,  ..., 0.1823, 0.1821, 0.2440],
         [0.1094, 0.1142, 0.1863,  ..., 0.1532, 0.1610, 0.1951],
         [0.3776, 0.4636, 0.4367,  ..., 0.2656, 0.4720, 0.1951]],
        [[0.2267, 0.4735, 0.2500,  ..., 0.1350, 0.1372, 0.2145],
         [0.2267, 0.1326, 0.2500,  ..., 0.1716, 0.5883, 0.3401],
         [0.3199, 0.2613, 0.2500,  ..., 0.4900, 0.1372, 0.2635],
         [0.2267, 0.1326, 0.2500,  ..., 0.2035, 0.1372, 0.1819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:54,041 [Process: 0] Synchronize training processes
2024-08-16 12:59:54,041 [Process: 0] Evaluating...
2024-08-16 12:59:54,043 [Process: 0] EPOCH 146:
2024-08-16 12:59:54,045 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1724, 0.1410, 0.1223,  ..., 0.1647, 0.1751, 0.1732],
         [0.1724, 0.1687, 0.1223,  ..., 0.1647, 0.1751, 0.1732],
         [0.1724, 0.1410, 0.1223,  ..., 0.1647, 0.1751, 0.1732],
         [0.4829, 0.5492, 0.6332,  ..., 0.5058, 0.4746, 0.4805]],
        [[0.2493, 0.2500, 0.2500,  ..., 0.2433, 0.2500, 0.2479],
         [0.2522, 0.2500, 0.2500,  ..., 0.2702, 0.2500, 0.2564],
         [0.2493, 0.2500, 0.2500,  ..., 0.2433, 0.2500, 0.2479],
         [0.2493, 0.2500, 0.2500,  ..., 0.2433, 0.2500, 0.2479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2108, 0.8204, 0.2500,  ..., 0.1294, 0.2603, 0.0820],
         [0.2108, 0.0510, 0.2500,  ..., 0.1294, 0.3900, 0.1379],
         [0.3676, 0.0510, 0.2500,  ..., 0.1382, 0.1966, 0.1202],
         [0.2108, 0.0777, 0.2500,  ..., 0.6030, 0.1531, 0.6599]],
        [[0.2209, 0.1779, 0.1857,  ..., 0.3290, 0.3052, 0.1671],
         [0.2209, 0.1779, 0.4315,  ..., 0.2237, 0.4844, 0.1548],
         [0.3372, 0.3919, 0.2620,  ..., 0.2237, 0.1179, 0.5233],
         [0.2209, 0.2523, 0.1207,  ..., 0.2237, 0.0926, 0.1548]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:55,975 [Process: 0] Synchronize training processes
2024-08-16 12:59:55,975 [Process: 0] Evaluating...
2024-08-16 12:59:55,977 [Process: 0] EPOCH 147:
2024-08-16 12:59:55,979 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:57,887 [Process: 0] Synchronize training processes
2024-08-16 12:59:57,887 [Process: 0] Evaluating...
2024-08-16 12:59:57,889 [Process: 0] EPOCH 148:
2024-08-16 12:59:57,891 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1988, 0.1732, 0.1479,  ..., 0.1452, 0.1538, 0.1597],
         [0.1988, 0.1737, 0.1479,  ..., 0.1607, 0.1538, 0.1597],
         [0.1988, 0.1732, 0.1479,  ..., 0.1452, 0.1538, 0.1597],
         [0.4037, 0.4800, 0.5563,  ..., 0.5488, 0.5387, 0.5208]],
        [[0.2500, 0.2500, 0.2467,  ..., 0.2492, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2600,  ..., 0.2523, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2467,  ..., 0.2492, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2467,  ..., 0.2492, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2088, 0.2143, 0.2443,  ..., 0.1966, 0.2137, 0.8124],
         [0.2088, 0.2143, 0.1144,  ..., 0.1966, 0.2137, 0.0557],
         [0.2088, 0.2143, 0.1144,  ..., 0.1966, 0.2137, 0.0612],
         [0.3735, 0.3571, 0.5268,  ..., 0.4103, 0.3590, 0.0707]],
        [[0.1882, 0.3471, 0.2493,  ..., 0.2383, 0.2435, 0.1852],
         [0.3705, 0.2177, 0.2655,  ..., 0.2391, 0.2694, 0.2274],
         [0.2532, 0.2367, 0.2426,  ..., 0.2843, 0.2435, 0.4022],
         [0.1882, 0.1985, 0.2426,  ..., 0.2383, 0.2435, 0.1852]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 12:59:59,812 [Process: 0] Synchronize training processes
2024-08-16 12:59:59,813 [Process: 0] Evaluating...
2024-08-16 12:59:59,814 [Process: 0] EPOCH 149:
2024-08-16 12:59:59,816 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1318, 0.1483, 0.1781,  ..., 0.1622, 0.1978, 0.1333],
         [0.1318, 0.1483, 0.1810,  ..., 0.1622, 0.1978, 0.1333],
         [0.1318, 0.1483, 0.1781,  ..., 0.1622, 0.1978, 0.1333],
         [0.6046, 0.5552, 0.4628,  ..., 0.5134, 0.4067, 0.6000]],
        [[0.2500, 0.2485, 0.2444,  ..., 0.2500, 0.2500, 0.2491],
         [0.2500, 0.2544, 0.2669,  ..., 0.2500, 0.2500, 0.2527],
         [0.2500, 0.2485, 0.2444,  ..., 0.2500, 0.2500, 0.2491],
         [0.2500, 0.2485, 0.2444,  ..., 0.2500, 0.2500, 0.2491]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1636, 0.2768, 0.2350,  ..., 0.2688, 0.3810, 0.1963],
         [0.1636, 0.2129, 0.2160,  ..., 0.1941, 0.1473, 0.1963],
         [0.2199, 0.2129, 0.3330,  ..., 0.1941, 0.1603, 0.2359],
         [0.4529, 0.2973, 0.2160,  ..., 0.3430, 0.3114, 0.3716]],
        [[0.1467, 0.1614, 0.1992,  ..., 0.6157, 0.2153, 0.3324],
         [0.4410, 0.4801, 0.4024,  ..., 0.1952, 0.3542, 0.1948],
         [0.2657, 0.1971, 0.1992,  ..., 0.1295, 0.2153, 0.2781],
         [0.1467, 0.1614, 0.1992,  ..., 0.0596, 0.2153, 0.1948]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:01,733 [Process: 0] Synchronize training processes
2024-08-16 13:00:01,734 [Process: 0] Evaluating...
2024-08-16 13:00:01,736 [Process: 0] EPOCH 150:
2024-08-16 13:00:01,737 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1622, 0.1670, 0.1824,  ..., 0.1393, 0.1492, 0.1218],
         [0.1713, 0.1887, 0.2002,  ..., 0.1393, 0.1593, 0.1218],
         [0.1622, 0.1670, 0.1824,  ..., 0.1393, 0.1492, 0.1218],
         [0.5043, 0.4773, 0.4349,  ..., 0.5822, 0.5422, 0.6345]],
        [[0.2440, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2681, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2440, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2440, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2588, 0.2066, 0.2500,  ..., 0.2545, 0.2096, 0.2202],
         [0.4245, 0.2066, 0.2500,  ..., 0.4087, 0.2096, 0.2889],
         [0.1095, 0.2066, 0.2500,  ..., 0.1229, 0.2096, 0.2202],
         [0.2072, 0.3802, 0.2500,  ..., 0.2140, 0.3711, 0.2708]],
        [[0.2498, 0.3440, 0.4099,  ..., 0.4705, 0.2692, 0.6329],
         [0.3098, 0.2384, 0.1473,  ..., 0.3307, 0.1136, 0.0813],
         [0.2879, 0.2177, 0.3050,  ..., 0.1285, 0.5037, 0.2225],
         [0.1526, 0.1998, 0.1377,  ..., 0.0703, 0.1136, 0.0634]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:00:03,650 [Process: 0] Synchronize training processes
2024-08-16 13:00:03,650 [Process: 0] Evaluating...
2024-08-16 13:00:03,652 [Process: 0] EPOCH 151:
2024-08-16 13:00:03,654 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1395, 0.1458, 0.1477,  ..., 0.1398, 0.1485, 0.1215],
         [0.1395, 0.1623, 0.1477,  ..., 0.1398, 0.1829, 0.1215],
         [0.1395, 0.1458, 0.1477,  ..., 0.1398, 0.1485, 0.1215],
         [0.5814, 0.5461, 0.5569,  ..., 0.5807, 0.5200, 0.6354]],
        [[0.2500, 0.2471, 0.2500,  ..., 0.2500, 0.2533, 0.2451],
         [0.2500, 0.2588, 0.2500,  ..., 0.2500, 0.2489, 0.2646],
         [0.2500, 0.2471, 0.2500,  ..., 0.2500, 0.2489, 0.2451],
         [0.2500, 0.2471, 0.2500,  ..., 0.2500, 0.2489, 0.2451]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1109, 0.2500, 0.2500,  ..., 0.1431, 0.0962, 0.0993],
         [0.4093, 0.2500, 0.2500,  ..., 0.1604, 0.1622, 0.6287],
         [0.1130, 0.2500, 0.2500,  ..., 0.1198, 0.0962, 0.0993],
         [0.3667, 0.2500, 0.2500,  ..., 0.5767, 0.6453, 0.1727]],
        [[0.4131, 0.3454, 0.2313,  ..., 0.3970, 0.4827, 0.4518],
         [0.2455, 0.1588, 0.2313,  ..., 0.2010, 0.1724, 0.1827],
         [0.2496, 0.1588, 0.3061,  ..., 0.2010, 0.1724, 0.1827],
         [0.0918, 0.3369, 0.2313,  ..., 0.2010, 0.1724, 0.1827]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1595, 0.1399, 0.1927,  ..., 0.1657, 0.1533, 0.1749],
         [0.1670, 0.1399, 0.1927,  ..., 0.1709, 0.1533, 0.1749],
         [0.1595, 0.1399, 0.1927,  ..., 0.1657, 0.1533, 0.1749],
         [0.5141, 0.5803, 0.4218,  ..., 0.4977, 0.5400, 0.4752]],
        [[0.2420, 0.2500, 0.2487,  ..., 0.2500, 0.2500, 0.2454],
         [0.2740, 0.2500, 0.2538,  ..., 0.2500, 0.2500, 0.2639],
         [0.2420, 0.2500, 0.2487,  ..., 0.2500, 0.2500, 0.2454],
         [0.2420, 0.2500, 0.2487,  ..., 0.2500, 0.2500, 0.2454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:00:05,555 [Process: 0] Synchronize training processes
2024-08-16 13:00:05,555 [Process: 0] Evaluating...
2024-08-16 13:00:05,557 [Process: 0] EPOCH 152:
2024-08-16 13:00:05,559 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2167, 0.1580, 0.2094,  ..., 0.1890, 0.1530, 0.1503],
         [0.2167, 0.1580, 0.1444,  ..., 0.1890, 0.4837, 0.1503],
         [0.2167, 0.1580, 0.1444,  ..., 0.1890, 0.1530, 0.2598],
         [0.3500, 0.5260, 0.5017,  ..., 0.4331, 0.2104, 0.4396]],
        [[0.4436, 0.1428, 0.2783,  ..., 0.2435, 0.0491, 0.3089],
         [0.2602, 0.1934, 0.4795,  ..., 0.2435, 0.5738, 0.2249],
         [0.2014, 0.5209, 0.1247,  ..., 0.2696, 0.3318, 0.2928],
         [0.0947, 0.1428, 0.1175,  ..., 0.2435, 0.0453, 0.1734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1516, 0.1770, 0.1806,  ..., 0.1539, 0.1844, 0.1572],
         [0.1709, 0.1770, 0.1806,  ..., 0.1539, 0.1844, 0.1572],
         [0.1516, 0.1770, 0.1806,  ..., 0.1539, 0.1844, 0.1572],
         [0.5258, 0.4689, 0.4583,  ..., 0.5382, 0.4467, 0.5284]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:00:07,471 [Process: 0] Synchronize training processes
2024-08-16 13:00:07,471 [Process: 0] Evaluating...
2024-08-16 13:00:07,473 [Process: 0] EPOCH 153:
2024-08-16 13:00:07,475 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1535, 0.1442, 0.1472,  ..., 0.1663, 0.1072, 0.1818],
         [0.1535, 0.2464, 0.1472,  ..., 0.1663, 0.1447, 0.1818],
         [0.1622, 0.4933, 0.3723,  ..., 0.1663, 0.1072, 0.4547],
         [0.5309, 0.1161, 0.3333,  ..., 0.5011, 0.6408, 0.1818]],
        [[0.3359, 0.2032, 0.2254,  ..., 0.2500, 0.1551, 0.2164],
         [0.3752, 0.4647, 0.2428,  ..., 0.2500, 0.3910, 0.4272],
         [0.1445, 0.0933, 0.2254,  ..., 0.2500, 0.1345, 0.1782],
         [0.1445, 0.2389, 0.3063,  ..., 0.2500, 0.3193, 0.1782]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1568, 0.1597, 0.1391,  ..., 0.1691, 0.1579, 0.1585],
         [0.1809, 0.1597, 0.1391,  ..., 0.1691, 0.1579, 0.1594],
         [0.1443, 0.1597, 0.1391,  ..., 0.1691, 0.1579, 0.1585],
         [0.5179, 0.5208, 0.5828,  ..., 0.4926, 0.5264, 0.5236]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:00:09,374 [Process: 0] Synchronize training processes
2024-08-16 13:00:09,374 [Process: 0] Evaluating...
2024-08-16 13:00:09,376 [Process: 0] EPOCH 154:
2024-08-16 13:00:09,378 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1461, 0.1244, 0.3238,  ..., 0.1496, 0.2246, 0.3131],
         [0.2884, 0.3418, 0.3689,  ..., 0.2713, 0.2410, 0.4068],
         [0.1374, 0.1244, 0.1398,  ..., 0.0869, 0.2246, 0.1248],
         [0.4282, 0.4094, 0.1675,  ..., 0.4923, 0.3098, 0.1554]],
        [[0.2209, 0.2298, 0.4482,  ..., 0.2078, 0.1261, 0.1948],
         [0.2064, 0.2298, 0.2107,  ..., 0.2078, 0.1261, 0.1948],
         [0.3662, 0.3107, 0.2146,  ..., 0.3767, 0.6217, 0.4156],
         [0.2064, 0.2298, 0.1265,  ..., 0.2078, 0.1261, 0.1948]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1880, 0.1495, 0.1722,  ..., 0.1869, 0.1197, 0.1508],
         [0.1880, 0.1679, 0.1895,  ..., 0.1793, 0.1197, 0.1544],
         [0.1880, 0.1495, 0.1722,  ..., 0.1793, 0.1197, 0.1473],
         [0.4360, 0.5332, 0.4662,  ..., 0.4544, 0.6408, 0.5476]],
        [[0.2500, 0.2446, 0.2497,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2661, 0.2509,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2446, 0.2497,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2446, 0.2497,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:00:11,293 [Process: 0] Synchronize training processes
2024-08-16 13:00:11,293 [Process: 0] Evaluating...
2024-08-16 13:00:11,295 [Process: 0] EPOCH 155:
2024-08-16 13:00:11,297 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1796, 0.2233, 0.1965,  ..., 0.1577, 0.1780, 0.1817],
         [0.2439, 0.2538, 0.4105,  ..., 0.1834, 0.2690, 0.2796],
         [0.1796, 0.2233, 0.1965,  ..., 0.1577, 0.1780, 0.1817],
         [0.3969, 0.2996, 0.1965,  ..., 0.5013, 0.3750, 0.3569]],
        [[0.2364, 0.1763, 0.1510,  ..., 0.2500, 0.2853, 0.4937],
         [0.2364, 0.1763, 0.3296,  ..., 0.2500, 0.3054, 0.1970],
         [0.2907, 0.4711, 0.3901,  ..., 0.2500, 0.2047, 0.1917],
         [0.2364, 0.1763, 0.1293,  ..., 0.2500, 0.2047, 0.1175]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1333, 0.1609, 0.1562,  ..., 0.1563, 0.1920, 0.1721],
         [0.1356, 0.1686, 0.1562,  ..., 0.1563, 0.2125, 0.1737],
         [0.1333, 0.1609, 0.1562,  ..., 0.1563, 0.1920, 0.1721],
         [0.5978, 0.5096, 0.5315,  ..., 0.5312, 0.4035, 0.4821]],
        [[0.2520, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2493, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2493, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2493, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:00:13,264 [Process: 0] Synchronize training processes
2024-08-16 13:00:13,265 [Process: 0] Evaluating...
2024-08-16 13:00:13,266 [Process: 0] EPOCH 156:
2024-08-16 13:00:13,268 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1613, 0.0716, 0.1734,  ..., 0.1251, 0.1343, 0.1103],
         [0.1613, 0.0716, 0.1734,  ..., 0.1251, 0.1343, 0.1754],
         [0.1613, 0.6347, 0.1734,  ..., 0.2428, 0.2172, 0.5558],
         [0.5162, 0.2222, 0.4797,  ..., 0.5070, 0.5142, 0.1584]],
        [[0.2500, 0.2980, 0.7595,  ..., 0.3533, 0.2956, 0.5956],
         [0.2500, 0.3121, 0.0968,  ..., 0.4949, 0.2348, 0.2672],
         [0.2500, 0.2953, 0.0718,  ..., 0.0759, 0.2348, 0.0709],
         [0.2500, 0.0946, 0.0718,  ..., 0.0759, 0.2348, 0.0664]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1811, 0.1321, 0.1660,  ..., 0.2060, 0.1847, 0.1547],
         [0.1811, 0.1516, 0.1660,  ..., 0.2060, 0.2078, 0.1547],
         [0.1811, 0.1321, 0.1660,  ..., 0.2060, 0.1847, 0.1547],
         [0.4568, 0.5842, 0.5020,  ..., 0.3819, 0.4227, 0.5360]],
        [[0.2407, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2478],
         [0.2780, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2566],
         [0.2407, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2478],
         [0.2407, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2478]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:00:15,199 [Process: 0] Synchronize training processes
2024-08-16 13:00:15,199 [Process: 0] Evaluating...
2024-08-16 13:00:15,201 [Process: 0] EPOCH 157:
2024-08-16 13:00:15,203 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1229, 0.1527, 0.5053,  ..., 0.0981, 0.1972, 0.1800],
         [0.1229, 0.1574, 0.1502,  ..., 0.0981, 0.2975, 0.0817],
         [0.1889, 0.2161, 0.1411,  ..., 0.2550, 0.2401, 0.1990],
         [0.5652, 0.4738, 0.2033,  ..., 0.5488, 0.2652, 0.5393]],
        [[0.1688, 0.3979, 0.1880,  ..., 0.2322, 0.4159, 0.2500],
         [0.4936, 0.2568, 0.3072,  ..., 0.3279, 0.2522, 0.2500],
         [0.1688, 0.1727, 0.3169,  ..., 0.2200, 0.1660, 0.2500],
         [0.1688, 0.1727, 0.1880,  ..., 0.2200, 0.1660, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1959, 0.1706, 0.2011,  ..., 0.1240, 0.1698, 0.1647],
         [0.1959, 0.1706, 0.2060,  ..., 0.1240, 0.1698, 0.1647],
         [0.1959, 0.1706, 0.2011,  ..., 0.1240, 0.1698, 0.1647],
         [0.4123, 0.4882, 0.3918,  ..., 0.6279, 0.4907, 0.5059]],
        [[0.2627, 0.2510, 0.2500,  ..., 0.2492, 0.2498, 0.2500],
         [0.2458, 0.2497, 0.2500,  ..., 0.2525, 0.2507, 0.2500],
         [0.2458, 0.2497, 0.2500,  ..., 0.2492, 0.2498, 0.2500],
         [0.2458, 0.2497, 0.2500,  ..., 0.2492, 0.2498, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:00:17,122 [Process: 0] Synchronize training processes
2024-08-16 13:00:17,122 [Process: 0] Evaluating...
2024-08-16 13:00:17,124 [Process: 0] EPOCH 158:
2024-08-16 13:00:17,126 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0956, 0.1037, 0.1193,  ..., 0.1040, 0.2675, 0.2421],
         [0.0956, 0.1037, 0.1193,  ..., 0.1040, 0.1402, 0.2421],
         [0.6937, 0.1415, 0.5926,  ..., 0.1040, 0.1281, 0.2644],
         [0.1150, 0.6511, 0.1689,  ..., 0.6881, 0.4643, 0.2515]],
        [[0.2500, 0.3279, 0.2290,  ..., 0.4041, 0.2500, 0.2300],
         [0.2500, 0.2678, 0.3129,  ..., 0.2675, 0.2500, 0.2947],
         [0.2500, 0.2021, 0.2290,  ..., 0.1642, 0.2500, 0.2300],
         [0.2500, 0.2021, 0.2290,  ..., 0.1642, 0.2500, 0.2453]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1261, 0.1357, 0.1669,  ..., 0.1426, 0.1491, 0.1976],
         [0.1261, 0.1564, 0.1669,  ..., 0.1426, 0.1491, 0.1976],
         [0.1261, 0.1357, 0.1669,  ..., 0.1426, 0.1491, 0.1976],
         [0.6218, 0.5723, 0.4994,  ..., 0.5723, 0.5526, 0.4072]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2488],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2537],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2488],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:00:19,049 [Process: 0] Synchronize training processes
2024-08-16 13:00:19,049 [Process: 0] Evaluating...
2024-08-16 13:00:19,051 [Process: 0] EPOCH 159:
2024-08-16 13:00:19,053 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2459, 0.2013, 0.1834,  ..., 0.1917, 0.3103, 0.2016],
         [0.1817, 0.1871, 0.1834,  ..., 0.1917, 0.1594, 0.2016],
         [0.1817, 0.1871, 0.1834,  ..., 0.1917, 0.1452, 0.2016],
         [0.3907, 0.4244, 0.4497,  ..., 0.4248, 0.3851, 0.3952]],
        [[0.2006, 0.1642, 0.2289,  ..., 0.2578, 0.2171, 0.2500],
         [0.3160, 0.1759, 0.3134,  ..., 0.3363, 0.3851, 0.2500],
         [0.2829, 0.4957, 0.2289,  ..., 0.2509, 0.2416, 0.2500],
         [0.2006, 0.1642, 0.2289,  ..., 0.1550, 0.1562, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1478, 0.1863, 0.1808,  ..., 0.2076, 0.1900, 0.1696],
         [0.1478, 0.1781, 0.1993,  ..., 0.2076, 0.1900, 0.1696],
         [0.1478, 0.1781, 0.1808,  ..., 0.2076, 0.1900, 0.1696],
         [0.5565, 0.4575, 0.4391,  ..., 0.3771, 0.4301, 0.4911]],
        [[0.2500, 0.2491, 0.2464,  ..., 0.2500, 0.2500, 0.2465],
         [0.2500, 0.2527, 0.2609,  ..., 0.2500, 0.2500, 0.2605],
         [0.2500, 0.2491, 0.2464,  ..., 0.2500, 0.2500, 0.2465],
         [0.2500, 0.2491, 0.2464,  ..., 0.2500, 0.2500, 0.2465]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:00:20,955 [Process: 0] Synchronize training processes
2024-08-16 13:00:20,955 [Process: 0] Evaluating...
2024-08-16 13:00:20,957 [Process: 0] EPOCH 160:
2024-08-16 13:00:20,960 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1473, 0.1936, 0.1848,  ..., 0.1813, 0.1857, 0.1638],
         [0.2044, 0.1936, 0.1848,  ..., 0.1813, 0.2567, 0.2090],
         [0.1473, 0.1936, 0.1848,  ..., 0.1813, 0.1857, 0.1638],
         [0.5009, 0.4193, 0.4457,  ..., 0.4561, 0.3720, 0.4635]],
        [[0.2143, 0.3030, 0.1362,  ..., 0.5134, 0.2763, 0.2954],
         [0.1622, 0.2104, 0.2768,  ..., 0.2131, 0.2711, 0.2071],
         [0.4613, 0.2762, 0.4508,  ..., 0.1542, 0.3109, 0.2903],
         [0.1622, 0.2104, 0.1362,  ..., 0.1193, 0.1417, 0.2071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 160:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1626, 0.1518, 0.1935,  ..., 0.1374, 0.1510, 0.1392],
         [0.1844, 0.1685, 0.1956,  ..., 0.1374, 0.1510, 0.1392],
         [0.1626, 0.1518, 0.1935,  ..., 0.1374, 0.1510, 0.1392],
         [0.4903, 0.5279, 0.4173,  ..., 0.5877, 0.5470, 0.5824]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2715, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2704, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2291, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2291, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:00:22,832 [Process: 0] Synchronize training processes
2024-08-16 13:00:22,832 [Process: 0] Evaluating...
2024-08-16 13:00:22,834 [Process: 0] EPOCH 161:
2024-08-16 13:00:22,836 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1906, 0.1321, 0.2667,  ..., 0.4034, 0.0141, 0.2463],
         [0.1906, 0.1321, 0.1420,  ..., 0.1276, 0.0042, 0.2042],
         [0.1906, 0.1321, 0.1420,  ..., 0.3918, 0.9774, 0.1452],
         [0.4282, 0.6036, 0.4493,  ..., 0.0772, 0.0042, 0.4042]],
        [[0.3053, 0.3193, 0.2303,  ..., 0.3033, 0.1978, 0.2053],
         [0.3381, 0.2467, 0.3092,  ..., 0.3644, 0.4038, 0.3510],
         [0.1783, 0.2170, 0.2303,  ..., 0.1806, 0.2128, 0.2384],
         [0.1783, 0.2170, 0.2303,  ..., 0.1518, 0.1856, 0.2053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 161:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1520, 0.1882, 0.1349,  ..., 0.1299, 0.1676, 0.1611],
         [0.1591, 0.1882, 0.1349,  ..., 0.1299, 0.1676, 0.1611],
         [0.1520, 0.1882, 0.1349,  ..., 0.1299, 0.1676, 0.1611],
         [0.5370, 0.4355, 0.5952,  ..., 0.6102, 0.4972, 0.5168]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2750, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2426, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2412, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2412, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:00:24,805 [Process: 0] Synchronize training processes
2024-08-16 13:00:24,805 [Process: 0] Evaluating...
2024-08-16 13:00:24,807 [Process: 0] EPOCH 162:
2024-08-16 13:00:24,809 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1616, 0.0901, 0.1233,  ..., 0.1413, 0.1891, 0.1454],
         [0.1620, 0.4306, 0.2785,  ..., 0.4954, 0.2371, 0.1454],
         [0.1616, 0.0901, 0.1233,  ..., 0.0931, 0.1933, 0.1454],
         [0.5148, 0.3892, 0.4749,  ..., 0.2701, 0.3805, 0.5639]],
        [[0.3915, 0.5799, 0.2277,  ..., 0.1950, 0.5236, 0.3767],
         [0.1759, 0.1277, 0.1433,  ..., 0.5532, 0.1588, 0.4238],
         [0.2567, 0.1647, 0.4856,  ..., 0.1259, 0.1588, 0.1201],
         [0.1759, 0.1277, 0.1433,  ..., 0.1259, 0.1588, 0.0795]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 162:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1479, 0.2196, 0.1579,  ..., 0.1636, 0.1182, 0.1065],
         [0.1576, 0.2245, 0.1579,  ..., 0.2102, 0.1182, 0.1065],
         [0.1479, 0.2196, 0.1579,  ..., 0.1636, 0.1182, 0.1065],
         [0.5467, 0.3363, 0.5263,  ..., 0.4626, 0.6454, 0.6806]],
        [[0.2447, 0.2500, 0.2500,  ..., 0.2500, 0.2486, 0.2464],
         [0.2659, 0.2500, 0.2500,  ..., 0.2500, 0.2543, 0.2607],
         [0.2447, 0.2500, 0.2500,  ..., 0.2500, 0.2486, 0.2464],
         [0.2447, 0.2500, 0.2500,  ..., 0.2500, 0.2486, 0.2464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:00:26,729 [Process: 0] Synchronize training processes
2024-08-16 13:00:26,730 [Process: 0] Evaluating...
2024-08-16 13:00:26,731 [Process: 0] EPOCH 163:
2024-08-16 13:00:26,733 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2206, 0.2013, 0.1750,  ..., 0.1646, 0.3441, 0.3139],
         [0.2206, 0.2391, 0.1750,  ..., 0.3554, 0.3138, 0.2156],
         [0.2206, 0.2013, 0.1750,  ..., 0.1646, 0.1559, 0.2249],
         [0.3382, 0.3584, 0.4750,  ..., 0.3155, 0.1862, 0.2456]],
        [[0.4374, 0.2594, 0.3512,  ..., 0.1318, 0.1705, 0.1501],
         [0.4016, 0.3409, 0.3061,  ..., 0.1318, 0.2307, 0.4165],
         [0.0827, 0.1998, 0.2164,  ..., 0.6047, 0.4282, 0.2832],
         [0.0783, 0.1998, 0.1262,  ..., 0.1318, 0.1705, 0.1501]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 163:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1731, 0.1479, 0.1625,  ..., 0.1266, 0.1840, 0.1719],
         [0.1744, 0.1479, 0.1625,  ..., 0.1268, 0.1840, 0.1719],
         [0.1731, 0.1479, 0.1625,  ..., 0.1266, 0.1840, 0.1719],
         [0.4794, 0.5562, 0.5125,  ..., 0.6200, 0.4481, 0.4843]],
        [[0.2495, 0.2481, 0.2459,  ..., 0.2490, 0.2492, 0.2500],
         [0.2515, 0.2586, 0.2623,  ..., 0.2645, 0.2523, 0.2500],
         [0.2495, 0.2466, 0.2459,  ..., 0.2432, 0.2492, 0.2500],
         [0.2495, 0.2466, 0.2459,  ..., 0.2432, 0.2492, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1779, 0.1956, 0.1533,  ..., 0.1551, 0.1591, 0.1701],
         [0.1779, 0.1751, 0.1320,  ..., 0.3132, 0.1591, 0.1896],
         [0.1779, 0.1751, 0.1320,  ..., 0.1470, 0.1591, 0.1701],
         [0.4662, 0.4543, 0.5827,  ..., 0.3847, 0.5227, 0.4702]],
        [[0.1824, 0.1403, 0.1803,  ..., 0.2124, 0.1199, 0.1217],
         [0.2506, 0.1544, 0.1813,  ..., 0.2124, 0.1199, 0.2696],
         [0.3846, 0.5651, 0.4582,  ..., 0.3628, 0.6404, 0.5316],
         [0.1824, 0.1403, 0.1803,  ..., 0.2124, 0.1199, 0.0771]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:00:28,635 [Process: 0] Synchronize training processes
2024-08-16 13:00:28,636 [Process: 0] Evaluating...
2024-08-16 13:00:28,637 [Process: 0] EPOCH 164:
2024-08-16 13:00:28,639 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 164:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1475, 0.1542, 0.1901,  ..., 0.1521, 0.1623, 0.2141],
         [0.1475, 0.1542, 0.1901,  ..., 0.1532, 0.1623, 0.2141],
         [0.1475, 0.1542, 0.1901,  ..., 0.1521, 0.1623, 0.2141],
         [0.5575, 0.5375, 0.4297,  ..., 0.5427, 0.5131, 0.3577]],
        [[0.2367, 0.2601, 0.2500,  ..., 0.2467, 0.2500, 0.2500],
         [0.2899, 0.2721, 0.2500,  ..., 0.2599, 0.2500, 0.2500],
         [0.2367, 0.2352, 0.2500,  ..., 0.2467, 0.2500, 0.2500],
         [0.2367, 0.2326, 0.2500,  ..., 0.2467, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2612, 0.0811, 0.1547,  ..., 0.2840, 0.1622, 0.1012],
         [0.2158, 0.5234, 0.2403,  ..., 0.1680, 0.1420, 0.1012],
         [0.3720, 0.2517, 0.4503,  ..., 0.3799, 0.5465, 0.2968],
         [0.1510, 0.1438, 0.1547,  ..., 0.1680, 0.1493, 0.5007]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.0761, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.7716, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.0761, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.0761, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 165:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:30,542 [Process: 0] Synchronize training processes
2024-08-16 13:00:30,542 [Process: 0] Evaluating...
2024-08-16 13:00:30,544 [Process: 0] EPOCH 165:
2024-08-16 13:00:30,546 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1112, 0.1516, 0.1169,  ..., 0.1608, 0.1663, 0.0985],
         [0.1112, 0.1516, 0.1169,  ..., 0.1608, 0.1663, 0.0985],
         [0.1112, 0.1516, 0.1169,  ..., 0.1608, 0.1663, 0.0985],
         [0.6664, 0.5452, 0.6492,  ..., 0.5176, 0.5011, 0.7046]],
        [[0.2445, 0.2443, 0.2500,  ..., 0.2500, 0.2455, 0.2500],
         [0.2665, 0.2672, 0.2500,  ..., 0.2500, 0.2635, 0.2500],
         [0.2445, 0.2443, 0.2500,  ..., 0.2500, 0.2455, 0.2500],
         [0.2445, 0.2443, 0.2500,  ..., 0.2500, 0.2455, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1662, 0.4679, 0.1604,  ..., 0.2369, 0.2296, 0.1746],
         [0.2610, 0.1679, 0.1604,  ..., 0.1835, 0.3113, 0.4918],
         [0.1662, 0.1679, 0.1604,  ..., 0.1835, 0.2296, 0.1214],
         [0.4066, 0.1963, 0.5188,  ..., 0.3962, 0.2296, 0.2121]],
        [[0.2500, 0.4511, 0.2926,  ..., 0.2500, 0.1958, 0.3690],
         [0.2500, 0.1830, 0.2407,  ..., 0.2500, 0.2074, 0.3398],
         [0.2500, 0.1830, 0.2334,  ..., 0.2500, 0.4010, 0.1456],
         [0.2500, 0.1830, 0.2334,  ..., 0.2500, 0.1958, 0.1456]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 166:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:32,480 [Process: 0] Synchronize training processes
2024-08-16 13:00:32,480 [Process: 0] Evaluating...
2024-08-16 13:00:32,482 [Process: 0] EPOCH 166:
2024-08-16 13:00:32,484 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1601, 0.1350, 0.1871,  ..., 0.1856, 0.1730, 0.1115],
         [0.1601, 0.1350, 0.1871,  ..., 0.1896, 0.1755, 0.1115],
         [0.1601, 0.1350, 0.1871,  ..., 0.1856, 0.1730, 0.1115],
         [0.5197, 0.5951, 0.4388,  ..., 0.4391, 0.4785, 0.6655]],
        [[0.2492, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2525, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2492, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2492, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2295, 0.1214, 0.1761,  ..., 0.1651, 0.1389, 0.1170],
         [0.2295, 0.1214, 0.1761,  ..., 0.1651, 0.1389, 0.1170],
         [0.2295, 0.1214, 0.4000,  ..., 0.1651, 0.1389, 0.1170],
         [0.3116, 0.6358, 0.2479,  ..., 0.5046, 0.5832, 0.6490]],
        [[0.3260, 0.1244, 0.4978,  ..., 0.2217, 0.2587, 0.4886],
         [0.3648, 0.2634, 0.2214,  ..., 0.3462, 0.4168, 0.3122],
         [0.1546, 0.5347, 0.1404,  ..., 0.3286, 0.1622, 0.0929],
         [0.1546, 0.0775, 0.1404,  ..., 0.1034, 0.1622, 0.1064]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 167:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:34,422 [Process: 0] Synchronize training processes
2024-08-16 13:00:34,423 [Process: 0] Evaluating...
2024-08-16 13:00:34,425 [Process: 0] EPOCH 167:
2024-08-16 13:00:34,426 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2126, 0.1553, 0.1447,  ..., 0.1891, 0.1143, 0.1410],
         [0.2126, 0.1553, 0.1447,  ..., 0.1891, 0.1143, 0.1410],
         [0.2126, 0.1553, 0.1447,  ..., 0.1891, 0.1143, 0.1410],
         [0.3623, 0.5340, 0.5659,  ..., 0.4327, 0.6570, 0.5771]],
        [[0.2500, 0.2500, 0.2478,  ..., 0.2471, 0.2518, 0.2475],
         [0.2500, 0.2500, 0.2565,  ..., 0.2588, 0.2494, 0.2574],
         [0.2500, 0.2500, 0.2479,  ..., 0.2471, 0.2494, 0.2475],
         [0.2500, 0.2500, 0.2478,  ..., 0.2471, 0.2494, 0.2475]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2079, 0.1957, 0.2152,  ..., 0.1959, 0.1273, 0.0059],
         [0.2103, 0.1848, 0.1122,  ..., 0.1959, 0.1398, 0.0059],
         [0.2539, 0.1806, 0.1122,  ..., 0.1959, 0.2996, 0.8933],
         [0.3280, 0.4389, 0.5605,  ..., 0.4122, 0.4334, 0.0949]],
        [[0.2500, 0.4500, 0.2500,  ..., 0.2825, 0.2500, 0.2420],
         [0.2500, 0.1997, 0.2500,  ..., 0.2924, 0.2500, 0.2420],
         [0.2500, 0.2112, 0.2500,  ..., 0.2328, 0.2500, 0.2739],
         [0.2500, 0.1391, 0.2500,  ..., 0.1923, 0.2500, 0.2420]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 168:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:36,425 [Process: 0] Synchronize training processes
2024-08-16 13:00:36,426 [Process: 0] Evaluating...
2024-08-16 13:00:36,428 [Process: 0] EPOCH 168:
2024-08-16 13:00:36,429 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1372, 0.1493, 0.1522,  ..., 0.1761, 0.1909, 0.1591],
         [0.1372, 0.1493, 0.1632,  ..., 0.1761, 0.1727, 0.1591],
         [0.1372, 0.1493, 0.1522,  ..., 0.1761, 0.1682, 0.1591],
         [0.5883, 0.5521, 0.5324,  ..., 0.4717, 0.4683, 0.5226]],
        [[0.2500, 0.2500, 0.2482,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2554,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2482,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2482,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2096, 0.1555, 0.1948,  ..., 0.2371, 0.1802, 0.1637],
         [0.2350, 0.2581, 0.1948,  ..., 0.2863, 0.2906, 0.1637],
         [0.2096, 0.1555, 0.1948,  ..., 0.2370, 0.1802, 0.1637],
         [0.3457, 0.4309, 0.4157,  ..., 0.2396, 0.3491, 0.5089]],
        [[0.1743, 0.5263, 0.6322,  ..., 0.1152, 0.1960, 0.0394],
         [0.2320, 0.1579, 0.1226,  ..., 0.4303, 0.1814, 0.0394],
         [0.4630, 0.1579, 0.1226,  ..., 0.3393, 0.4337, 0.8819],
         [0.1306, 0.1579, 0.1226,  ..., 0.1152, 0.1890, 0.0394]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 169:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:38,414 [Process: 0] Synchronize training processes
2024-08-16 13:00:38,415 [Process: 0] Evaluating...
2024-08-16 13:00:38,417 [Process: 0] EPOCH 169:
2024-08-16 13:00:38,419 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1489, 0.1225, 0.1671,  ..., 0.1112, 0.1410, 0.1610],
         [0.1489, 0.1260, 0.1671,  ..., 0.1112, 0.1410, 0.1637],
         [0.1489, 0.1225, 0.1671,  ..., 0.1112, 0.1410, 0.1610],
         [0.5534, 0.6290, 0.4988,  ..., 0.6663, 0.5769, 0.5143]],
        [[0.2504, 0.2472, 0.2688,  ..., 0.2500, 0.2500, 0.2500],
         [0.2499, 0.2583, 0.2437,  ..., 0.2500, 0.2500, 0.2500],
         [0.2499, 0.2472, 0.2437,  ..., 0.2500, 0.2500, 0.2500],
         [0.2499, 0.2472, 0.2437,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1436, 0.1405, 0.1963,  ..., 0.1907, 0.2049, 0.0814],
         [0.1436, 0.2264, 0.1963,  ..., 0.1907, 0.2049, 0.0814],
         [0.1472, 0.1405, 0.1963,  ..., 0.2762, 0.2049, 0.0814],
         [0.5657, 0.4926, 0.4110,  ..., 0.3423, 0.3852, 0.7558]],
        [[0.5235, 0.1798, 0.4441,  ..., 0.3566, 0.2788, 0.2601],
         [0.1078, 0.5802, 0.1417,  ..., 0.3876, 0.2593, 0.1767],
         [0.2844, 0.1778, 0.2773,  ..., 0.1279, 0.3127, 0.3866],
         [0.0843, 0.0622, 0.1369,  ..., 0.1279, 0.1493, 0.1767]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 170:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:40,437 [Process: 0] Synchronize training processes
2024-08-16 13:00:40,437 [Process: 0] Evaluating...
2024-08-16 13:00:40,439 [Process: 0] EPOCH 170:
2024-08-16 13:00:40,441 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1349, 0.1874, 0.1721,  ..., 0.1732, 0.1793, 0.1470],
         [0.1349, 0.1951, 0.1721,  ..., 0.1732, 0.1949, 0.1470],
         [0.1349, 0.1874, 0.1721,  ..., 0.1732, 0.1793, 0.1470],
         [0.5953, 0.4302, 0.4837,  ..., 0.4803, 0.4465, 0.5591]],
        [[0.2500, 0.2431, 0.2487,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2706, 0.2539,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2431, 0.2487,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2431, 0.2487,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1408, 0.6885, 0.0966,  ..., 0.1870, 0.3899, 0.4088],
         [0.1408, 0.0862, 0.0966,  ..., 0.1688, 0.0997, 0.1362],
         [0.3384, 0.1286, 0.2183,  ..., 0.1688, 0.2816, 0.1362],
         [0.3799, 0.0966, 0.5886,  ..., 0.4754, 0.2288, 0.3188]],
        [[0.1621, 0.1573, 0.2169,  ..., 0.1664, 0.2374, 0.1743],
         [0.1621, 0.5281, 0.4094,  ..., 0.5008, 0.2877, 0.3886],
         [0.5138, 0.1573, 0.1868,  ..., 0.1664, 0.2374, 0.2627],
         [0.1621, 0.1573, 0.1868,  ..., 0.1664, 0.2374, 0.1743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 171:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:42,454 [Process: 0] Synchronize training processes
2024-08-16 13:00:42,454 [Process: 0] Evaluating...
2024-08-16 13:00:42,456 [Process: 0] EPOCH 171:
2024-08-16 13:00:42,458 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1609, 0.1269, 0.1232,  ..., 0.1763, 0.1864, 0.1422],
         [0.1609, 0.1269, 0.1232,  ..., 0.1763, 0.2056, 0.1426],
         [0.1609, 0.1269, 0.1232,  ..., 0.1763, 0.1864, 0.1422],
         [0.5173, 0.6193, 0.6303,  ..., 0.4711, 0.4216, 0.5729]],
        [[0.2456, 0.2499, 0.2430,  ..., 0.2400, 0.2500, 0.2564],
         [0.2633, 0.2504, 0.2709,  ..., 0.2801, 0.2500, 0.2479],
         [0.2456, 0.2499, 0.2430,  ..., 0.2400, 0.2500, 0.2479],
         [0.2456, 0.2499, 0.2430,  ..., 0.2400, 0.2500, 0.2479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1774, 0.2826, 0.3559,  ..., 0.2323, 0.1818, 0.1131],
         [0.2812, 0.2904, 0.1986,  ..., 0.2434, 0.1818, 0.0037],
         [0.1774, 0.1774, 0.1643,  ..., 0.2323, 0.1818, 0.8789],
         [0.3640, 0.2497, 0.2812,  ..., 0.2920, 0.4546, 0.0043]],
        [[0.2069, 0.3365, 0.2274,  ..., 0.2486, 0.2380, 0.2473],
         [0.2769, 0.2360, 0.2274,  ..., 0.2486, 0.2265, 0.2473],
         [0.3092, 0.2227, 0.3177,  ..., 0.2543, 0.3328, 0.2582],
         [0.2069, 0.2048, 0.2274,  ..., 0.2486, 0.2027, 0.2473]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 172:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:44,493 [Process: 0] Synchronize training processes
2024-08-16 13:00:44,494 [Process: 0] Evaluating...
2024-08-16 13:00:44,496 [Process: 0] EPOCH 172:
2024-08-16 13:00:44,497 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1529, 0.1623, 0.1236,  ..., 0.2071, 0.1643, 0.1713],
         [0.1529, 0.1623, 0.1264,  ..., 0.2071, 0.1937, 0.1713],
         [0.1529, 0.1623, 0.1236,  ..., 0.2071, 0.1643, 0.1713],
         [0.5412, 0.5131, 0.6265,  ..., 0.3786, 0.4777, 0.4860]],
        [[0.2500, 0.2494, 0.2493,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2519, 0.2520,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2494, 0.2493,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2494, 0.2493,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1102, 0.2479, 0.0743,  ..., 0.0861, 0.1450, 0.3222],
         [0.3896, 0.4462, 0.1793,  ..., 0.1208, 0.1115, 0.3399],
         [0.2249, 0.1627, 0.6361,  ..., 0.0861, 0.1115, 0.2095],
         [0.2753, 0.1432, 0.1102,  ..., 0.7070, 0.6321, 0.1283]],
        [[0.2500, 0.3477, 0.2500,  ..., 0.1692, 0.3447, 0.2185],
         [0.2500, 0.2174, 0.2500,  ..., 0.1692, 0.2184, 0.2185],
         [0.2500, 0.2174, 0.2500,  ..., 0.4925, 0.2184, 0.3445],
         [0.2500, 0.2174, 0.2500,  ..., 0.1692, 0.2184, 0.2185]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 173:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:46,498 [Process: 0] Synchronize training processes
2024-08-16 13:00:46,499 [Process: 0] Evaluating...
2024-08-16 13:00:46,501 [Process: 0] EPOCH 173:
2024-08-16 13:00:46,502 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1583, 0.1641, 0.1377,  ..., 0.1568, 0.1985, 0.1869],
         [0.1583, 0.1641, 0.1464,  ..., 0.1568, 0.1985, 0.1869],
         [0.1583, 0.1641, 0.1377,  ..., 0.1568, 0.1985, 0.1869],
         [0.5252, 0.5076, 0.5781,  ..., 0.5297, 0.4046, 0.4394]],
        [[0.2489, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2532, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0946, 0.1688, 0.1146,  ..., 0.0933, 0.2187, 0.1806],
         [0.0630, 0.4265, 0.2215,  ..., 0.4755, 0.2768, 0.1368],
         [0.0654, 0.2359, 0.1146,  ..., 0.2831, 0.2859, 0.5817],
         [0.7769, 0.1688, 0.5493,  ..., 0.1481, 0.2187, 0.1009]],
        [[0.4143, 0.1738, 0.2425,  ..., 0.5652, 0.2500, 0.2492],
         [0.1733, 0.2051, 0.2174,  ..., 0.3231, 0.2500, 0.2492],
         [0.2246, 0.5245, 0.3228,  ..., 0.0559, 0.2500, 0.2523],
         [0.1879, 0.0966, 0.2174,  ..., 0.0558, 0.2500, 0.2492]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 174:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:48,439 [Process: 0] Synchronize training processes
2024-08-16 13:00:48,440 [Process: 0] Evaluating...
2024-08-16 13:00:48,441 [Process: 0] EPOCH 174:
2024-08-16 13:00:48,443 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1714, 0.1659, 0.1797,  ..., 0.1339, 0.1593, 0.1102],
         [0.1714, 0.1659, 0.1797,  ..., 0.1339, 0.1593, 0.1102],
         [0.1714, 0.1659, 0.1797,  ..., 0.1339, 0.1593, 0.1102],
         [0.4858, 0.5023, 0.4610,  ..., 0.5983, 0.5222, 0.6695]],
        [[0.2637, 0.2500, 0.2500,  ..., 0.2445, 0.2500, 0.2469],
         [0.2526, 0.2500, 0.2500,  ..., 0.2665, 0.2500, 0.2592],
         [0.2419, 0.2500, 0.2500,  ..., 0.2445, 0.2500, 0.2469],
         [0.2419, 0.2500, 0.2500,  ..., 0.2445, 0.2500, 0.2469]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0755, 0.1752, 0.1483,  ..., 0.2239, 0.2186, 0.1704],
         [0.0755, 0.1752, 0.1483,  ..., 0.2239, 0.2186, 0.1704],
         [0.1171, 0.1752, 0.1483,  ..., 0.2239, 0.2186, 0.1704],
         [0.7320, 0.4744, 0.5551,  ..., 0.3284, 0.3443, 0.4889]],
        [[0.3235, 0.1563, 0.2382,  ..., 0.2884, 0.1911, 0.2404],
         [0.2368, 0.1063, 0.2382,  ..., 0.1128, 0.2931, 0.2788],
         [0.3131, 0.6312, 0.2853,  ..., 0.4860, 0.3248, 0.2404],
         [0.1266, 0.1063, 0.2382,  ..., 0.1128, 0.1911, 0.2404]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 175:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:50,417 [Process: 0] Synchronize training processes
2024-08-16 13:00:50,417 [Process: 0] Evaluating...
2024-08-16 13:00:50,419 [Process: 0] EPOCH 175:
2024-08-16 13:00:50,421 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2064, 0.1473, 0.1771,  ..., 0.1222, 0.1714, 0.1355],
         [0.2064, 0.1473, 0.1771,  ..., 0.1222, 0.1714, 0.1355],
         [0.2064, 0.1473, 0.1771,  ..., 0.1222, 0.1714, 0.1355],
         [0.3809, 0.5581, 0.4688,  ..., 0.6333, 0.4857, 0.5934]],
        [[0.2500, 0.2458, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2627, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2458, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2458, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2146, 0.2335, 0.1110,  ..., 0.3484, 0.1703, 0.1521],
         [0.2146, 0.2335, 0.5463,  ..., 0.3976, 0.1703, 0.1521],
         [0.2146, 0.2767, 0.1198,  ..., 0.0886, 0.1703, 0.1521],
         [0.3561, 0.2564, 0.2229,  ..., 0.1655, 0.4891, 0.5437]],
        [[0.3307, 0.1890, 0.3273,  ..., 0.1767, 0.2892, 0.2738],
         [0.2176, 0.4120, 0.2348,  ..., 0.1767, 0.3691, 0.5587],
         [0.2341, 0.2099, 0.2672,  ..., 0.4699, 0.2169, 0.0838],
         [0.2176, 0.1890, 0.1707,  ..., 0.1767, 0.1248, 0.0838]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 176:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:52,421 [Process: 0] Synchronize training processes
2024-08-16 13:00:52,422 [Process: 0] Evaluating...
2024-08-16 13:00:52,424 [Process: 0] EPOCH 176:
2024-08-16 13:00:52,426 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1480, 0.1538, 0.1499,  ..., 0.1657, 0.1637, 0.1770],
         [0.1480, 0.1538, 0.1468,  ..., 0.1657, 0.1637, 0.1770],
         [0.1480, 0.1538, 0.1468,  ..., 0.1657, 0.1637, 0.1770],
         [0.5561, 0.5385, 0.5565,  ..., 0.5029, 0.5089, 0.4691]],
        [[0.2500, 0.2490, 0.2431,  ..., 0.2482, 0.2500, 0.2404],
         [0.2500, 0.2530, 0.2707,  ..., 0.2555, 0.2500, 0.2789],
         [0.2500, 0.2490, 0.2431,  ..., 0.2482, 0.2500, 0.2404],
         [0.2500, 0.2490, 0.2431,  ..., 0.2482, 0.2500, 0.2404]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3426, 0.3762, 0.2207,  ..., 0.2021, 0.4392, 0.1274],
         [0.1452, 0.4181, 0.2757,  ..., 0.4273, 0.1032, 0.1456],
         [0.1452, 0.0722, 0.2207,  ..., 0.1704, 0.0870, 0.1274],
         [0.3671, 0.1335, 0.2830,  ..., 0.2002, 0.3706, 0.5995]],
        [[0.2500, 0.2181, 0.2023,  ..., 0.1124, 0.1424, 0.2500],
         [0.2500, 0.2181, 0.2023,  ..., 0.1124, 0.5474, 0.2500],
         [0.2500, 0.3457, 0.3931,  ..., 0.6627, 0.1677, 0.2500],
         [0.2500, 0.2181, 0.2023,  ..., 0.1124, 0.1424, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 177:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:54,425 [Process: 0] Synchronize training processes
2024-08-16 13:00:54,425 [Process: 0] Evaluating...
2024-08-16 13:00:54,427 [Process: 0] EPOCH 177:
2024-08-16 13:00:54,429 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1472, 0.1530, 0.1781,  ..., 0.1508, 0.1413, 0.1863],
         [0.1472, 0.1530, 0.1781,  ..., 0.1508, 0.1461, 0.1863],
         [0.1472, 0.1530, 0.1781,  ..., 0.1508, 0.1413, 0.1863],
         [0.5585, 0.5410, 0.4656,  ..., 0.5475, 0.5713, 0.4410]],
        [[0.2673, 0.2387, 0.2500,  ..., 0.2500, 0.2444, 0.2500],
         [0.2590, 0.2839, 0.2500,  ..., 0.2500, 0.2669, 0.2500],
         [0.2369, 0.2387, 0.2500,  ..., 0.2500, 0.2444, 0.2500],
         [0.2369, 0.2387, 0.2500,  ..., 0.2500, 0.2444, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1999, 0.1823, 0.2009,  ..., 0.2134, 0.1473, 0.1282],
         [0.1999, 0.1823, 0.2009,  ..., 0.2989, 0.1473, 0.1027],
         [0.1999, 0.1823, 0.2009,  ..., 0.2134, 0.1473, 0.1027],
         [0.4002, 0.4530, 0.3974,  ..., 0.2743, 0.5580, 0.6663]],
        [[0.2862, 0.1929, 0.1258,  ..., 0.2621, 0.1393, 0.2858],
         [0.3945, 0.1326, 0.2656,  ..., 0.3445, 0.1074, 0.3269],
         [0.1596, 0.6228, 0.5279,  ..., 0.2224, 0.6700, 0.2510],
         [0.1596, 0.0518, 0.0806,  ..., 0.1710, 0.0833, 0.1363]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 178:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:56,447 [Process: 0] Synchronize training processes
2024-08-16 13:00:56,448 [Process: 0] Evaluating...
2024-08-16 13:00:56,450 [Process: 0] EPOCH 178:
2024-08-16 13:00:56,452 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1711, 0.1631, 0.1694,  ..., 0.1757, 0.1386, 0.1283],
         [0.1711, 0.1631, 0.1694,  ..., 0.1757, 0.1386, 0.1283],
         [0.1711, 0.1631, 0.1694,  ..., 0.1757, 0.1386, 0.1283],
         [0.4868, 0.5106, 0.4919,  ..., 0.4728, 0.5843, 0.6150]],
        [[0.2500, 0.2500, 0.2530,  ..., 0.2434, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2490,  ..., 0.2698, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2490,  ..., 0.2434, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2490,  ..., 0.2434, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1882, 0.1357, 0.1343,  ..., 0.1745, 0.1794, 0.1395],
         [0.1882, 0.1357, 0.1343,  ..., 0.1745, 0.1794, 0.1395],
         [0.1882, 0.2228, 0.1343,  ..., 0.1745, 0.1794, 0.2325],
         [0.4354, 0.5057, 0.5971,  ..., 0.4766, 0.4619, 0.4885]],
        [[0.3244, 0.3303, 0.2468,  ..., 0.2772, 0.1906, 0.3912],
         [0.2999, 0.2869, 0.3891,  ..., 0.3165, 0.3576, 0.3647],
         [0.1878, 0.1914, 0.1821,  ..., 0.2958, 0.2735, 0.1221],
         [0.1878, 0.1914, 0.1821,  ..., 0.1106, 0.1782, 0.1221]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 179:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:00:58,460 [Process: 0] Synchronize training processes
2024-08-16 13:00:58,461 [Process: 0] Evaluating...
2024-08-16 13:00:58,463 [Process: 0] EPOCH 179:
2024-08-16 13:00:58,465 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1666, 0.1668, 0.1759,  ..., 0.1728, 0.1865, 0.1840],
         [0.1666, 0.1668, 0.1759,  ..., 0.1728, 0.1865, 0.1840],
         [0.1666, 0.1668, 0.1759,  ..., 0.1728, 0.1865, 0.1840],
         [0.5001, 0.4996, 0.4723,  ..., 0.4816, 0.4405, 0.4480]],
        [[0.2437, 0.2394, 0.2500,  ..., 0.2500, 0.2500, 0.2484],
         [0.2689, 0.2507, 0.2500,  ..., 0.2500, 0.2500, 0.2549],
         [0.2437, 0.2705, 0.2500,  ..., 0.2500, 0.2500, 0.2484],
         [0.2437, 0.2394, 0.2500,  ..., 0.2500, 0.2500, 0.2484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1932, 0.1345, 0.2500,  ..., 0.2059, 0.1831, 0.1323],
         [0.1932, 0.1345, 0.2500,  ..., 0.2059, 0.1831, 0.1323],
         [0.1932, 0.1345, 0.2500,  ..., 0.2059, 0.1831, 0.1323],
         [0.4203, 0.5964, 0.2500,  ..., 0.3823, 0.4507, 0.6032]],
        [[0.2047, 0.3238, 0.1952,  ..., 0.2317, 0.1737, 0.2500],
         [0.3712, 0.1493, 0.3429,  ..., 0.3391, 0.2932, 0.2500],
         [0.2194, 0.3776, 0.1952,  ..., 0.2146, 0.3594, 0.2500],
         [0.2047, 0.1493, 0.2666,  ..., 0.2146, 0.1737, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 180:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:00,416 [Process: 0] Synchronize training processes
2024-08-16 13:01:00,417 [Process: 0] Evaluating...
2024-08-16 13:01:00,419 [Process: 0] EPOCH 180:
2024-08-16 13:01:00,421 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1597, 0.1756, 0.1142,  ..., 0.1700, 0.1790, 0.1752],
         [0.1597, 0.1756, 0.1142,  ..., 0.1700, 0.1830, 0.1752],
         [0.1597, 0.1756, 0.1142,  ..., 0.1700, 0.1790, 0.1752],
         [0.5208, 0.4732, 0.6574,  ..., 0.4899, 0.4590, 0.4744]],
        [[0.2500, 0.2474, 0.2495,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2578, 0.2516,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2474, 0.2495,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2474, 0.2495,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2288, 0.1247,  ..., 0.2020, 0.1830, 0.2181],
         [0.2500, 0.2288, 0.1247,  ..., 0.2020, 0.1830, 0.2181],
         [0.2500, 0.2288, 0.3151,  ..., 0.2020, 0.1830, 0.2181],
         [0.2500, 0.3137, 0.4356,  ..., 0.3939, 0.4510, 0.3456]],
        [[0.2144, 0.3881, 0.2601,  ..., 0.6397, 0.2011, 0.2353],
         [0.1641, 0.3290, 0.4379,  ..., 0.2214, 0.4483, 0.3987],
         [0.5445, 0.1959, 0.1510,  ..., 0.0695, 0.1753, 0.2479],
         [0.0770, 0.0870, 0.1510,  ..., 0.0695, 0.1753, 0.1181]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 181:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:02,332 [Process: 0] Synchronize training processes
2024-08-16 13:01:02,333 [Process: 0] Evaluating...
2024-08-16 13:01:02,335 [Process: 0] EPOCH 181:
2024-08-16 13:01:02,337 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1650, 0.2063, 0.1546,  ..., 0.1858, 0.1753, 0.1358],
         [0.1650, 0.2087, 0.1546,  ..., 0.1858, 0.1753, 0.1358],
         [0.1650, 0.2063, 0.1546,  ..., 0.1858, 0.1753, 0.1358],
         [0.5051, 0.3787, 0.5361,  ..., 0.4427, 0.4742, 0.5925]],
        [[0.2564, 0.2500, 0.2500,  ..., 0.2470, 0.2451, 0.2500],
         [0.2479, 0.2500, 0.2500,  ..., 0.2590, 0.2647, 0.2500],
         [0.2479, 0.2500, 0.2500,  ..., 0.2470, 0.2451, 0.2500],
         [0.2479, 0.2500, 0.2500,  ..., 0.2470, 0.2451, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1933, 0.0886, 0.1233,  ..., 0.2500, 0.1278, 0.1258],
         [0.1933, 0.0886, 0.1233,  ..., 0.2500, 0.1278, 0.1258],
         [0.1933, 0.1030, 0.1233,  ..., 0.2500, 0.1278, 0.1258],
         [0.4201, 0.7198, 0.6302,  ..., 0.2500, 0.6166, 0.6225]],
        [[0.4327, 0.2710, 0.2239,  ..., 0.2129, 0.2325, 0.1383],
         [0.2148, 0.3177, 0.3232,  ..., 0.2782, 0.2871, 0.2793],
         [0.1837, 0.2056, 0.2289,  ..., 0.2959, 0.2564, 0.4441],
         [0.1688, 0.2056, 0.2239,  ..., 0.2129, 0.2241, 0.1383]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 182:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:04,243 [Process: 0] Synchronize training processes
2024-08-16 13:01:04,243 [Process: 0] Evaluating...
2024-08-16 13:01:04,245 [Process: 0] EPOCH 182:
2024-08-16 13:01:04,248 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1599, 0.1828, 0.1818,  ..., 0.1085, 0.1354, 0.1595],
         [0.1599, 0.1828, 0.1818,  ..., 0.1264, 0.1354, 0.1595],
         [0.1599, 0.1828, 0.1818,  ..., 0.1085, 0.1354, 0.1595],
         [0.5203, 0.4516, 0.4545,  ..., 0.6567, 0.5938, 0.5215]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1818, 0.1873, 0.2276,  ..., 0.1684, 0.2131, 0.1348],
         [0.1818, 0.1582, 0.3172,  ..., 0.1684, 0.4134, 0.1479],
         [0.1818, 0.1582, 0.2276,  ..., 0.1684, 0.1867, 0.1348],
         [0.4546, 0.4962, 0.2276,  ..., 0.4947, 0.1867, 0.5825]],
        [[0.2114, 0.2236, 0.2484,  ..., 0.1604, 0.2173, 0.2164],
         [0.2545, 0.2236, 0.2547,  ..., 0.2527, 0.2173, 0.5862],
         [0.3227, 0.3292, 0.2484,  ..., 0.4264, 0.3481, 0.1111],
         [0.2114, 0.2236, 0.2484,  ..., 0.1604, 0.2173, 0.0863]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 183:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:06,142 [Process: 0] Synchronize training processes
2024-08-16 13:01:06,142 [Process: 0] Evaluating...
2024-08-16 13:01:06,144 [Process: 0] EPOCH 183:
2024-08-16 13:01:06,146 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1752, 0.1252, 0.1379,  ..., 0.1909, 0.1550, 0.1941],
         [0.1752, 0.1252, 0.1379,  ..., 0.1750, 0.1550, 0.1941],
         [0.1752, 0.1252, 0.1379,  ..., 0.1750, 0.1550, 0.1941],
         [0.4745, 0.6245, 0.5864,  ..., 0.4591, 0.5351, 0.4178]],
        [[0.2545, 0.2500, 0.2484,  ..., 0.2500, 0.2500, 0.2759],
         [0.2642, 0.2500, 0.2548,  ..., 0.2500, 0.2500, 0.2414],
         [0.2407, 0.2500, 0.2484,  ..., 0.2500, 0.2500, 0.2414],
         [0.2407, 0.2500, 0.2484,  ..., 0.2500, 0.2500, 0.2414]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1672, 0.1684, 0.1705,  ..., 0.2876, 0.1710, 0.0771],
         [0.1672, 0.2142, 0.1705,  ..., 0.1712, 0.1710, 0.0771],
         [0.1672, 0.1684, 0.2119,  ..., 0.1712, 0.2039, 0.6918],
         [0.4984, 0.4490, 0.4472,  ..., 0.3701, 0.4542, 0.1541]],
        [[0.2092, 0.1736, 0.5039,  ..., 0.4152, 0.2211, 0.4495],
         [0.2132, 0.3298, 0.3517,  ..., 0.3481, 0.3367, 0.2957],
         [0.3685, 0.3808, 0.0758,  ..., 0.1184, 0.2211, 0.1274],
         [0.2092, 0.1158, 0.0686,  ..., 0.1184, 0.2211, 0.1274]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 184:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:08,059 [Process: 0] Synchronize training processes
2024-08-16 13:01:08,060 [Process: 0] Evaluating...
2024-08-16 13:01:08,062 [Process: 0] EPOCH 184:
2024-08-16 13:01:08,064 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:09,957 [Process: 0] Synchronize training processes
2024-08-16 13:01:09,957 [Process: 0] Evaluating...
2024-08-16 13:01:09,959 [Process: 0] EPOCH 185:
2024-08-16 13:01:09,961 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1508, 0.1569, 0.1727,  ..., 0.1542, 0.1747, 0.1565],
         [0.1508, 0.1569, 0.1727,  ..., 0.1542, 0.1747, 0.1565],
         [0.1508, 0.1569, 0.1727,  ..., 0.1542, 0.1747, 0.1565],
         [0.5475, 0.5293, 0.4820,  ..., 0.5375, 0.4759, 0.5304]],
        [[0.2420, 0.2714, 0.2898,  ..., 0.2833, 0.2500, 0.2500],
         [0.2740, 0.2429, 0.2483,  ..., 0.2389, 0.2500, 0.2500],
         [0.2420, 0.2429, 0.2310,  ..., 0.2389, 0.2500, 0.2500],
         [0.2420, 0.2429, 0.2310,  ..., 0.2389, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1595, 0.2238, 0.3532,  ..., 0.3489, 0.2026, 0.1953],
         [0.1595, 0.2238, 0.1387,  ..., 0.3095, 0.2123, 0.1953],
         [0.1595, 0.2238, 0.1387,  ..., 0.0861, 0.1695, 0.1953],
         [0.5214, 0.3287, 0.3695,  ..., 0.2556, 0.4156, 0.4140]],
        [[0.1829, 0.0984, 0.1899,  ..., 0.1700, 0.2183, 0.1455],
         [0.1829, 0.5827, 0.2431,  ..., 0.1712, 0.2183, 0.2401],
         [0.4513, 0.2387, 0.3772,  ..., 0.4887, 0.3452, 0.4688],
         [0.1829, 0.0801, 0.1899,  ..., 0.1700, 0.2183, 0.1455]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 185:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:01:11,857 [Process: 0] Synchronize training processes
2024-08-16 13:01:11,858 [Process: 0] Evaluating...
2024-08-16 13:01:11,860 [Process: 0] EPOCH 186:
2024-08-16 13:01:11,862 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1651, 0.1438, 0.1410,  ..., 0.1633, 0.1555, 0.1592],
         [0.1651, 0.1438, 0.1410,  ..., 0.1633, 0.1555, 0.1592],
         [0.1651, 0.1438, 0.1410,  ..., 0.1633, 0.1555, 0.1592],
         [0.5048, 0.5686, 0.5770,  ..., 0.5100, 0.5334, 0.5225]],
        [[0.2453, 0.2500, 0.2630,  ..., 0.2500, 0.2379, 0.2500],
         [0.2641, 0.2500, 0.2574,  ..., 0.2500, 0.2629, 0.2500],
         [0.2453, 0.2500, 0.2398,  ..., 0.2500, 0.2614, 0.2500],
         [0.2453, 0.2500, 0.2398,  ..., 0.2500, 0.2379, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3867, 0.1496, 0.3432,  ..., 0.2716, 0.2870, 0.0292],
         [0.1890, 0.3671, 0.4170,  ..., 0.2394, 0.1115, 0.0251],
         [0.2355, 0.3178, 0.1138,  ..., 0.2496, 0.4900, 0.0251],
         [0.1888, 0.1654, 0.1260,  ..., 0.2394, 0.1115, 0.9205]],
        [[0.2170, 0.2065, 0.2852,  ..., 0.2204, 0.2357, 0.2546],
         [0.3489, 0.3804, 0.3268,  ..., 0.3388, 0.3164, 0.3553],
         [0.2170, 0.2065, 0.2090,  ..., 0.2204, 0.2240, 0.1950],
         [0.2170, 0.2065, 0.1790,  ..., 0.2204, 0.2240, 0.1950]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 186:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1326, 0.1519, 0.1296,  ..., 0.1332, 0.1700, 0.1638],
         [0.1326, 0.1671, 0.1296,  ..., 0.1332, 0.1828, 0.1638],
         [0.1326, 0.1519, 0.1296,  ..., 0.1332, 0.1700, 0.1638],
         [0.6022, 0.5291, 0.6111,  ..., 0.6004, 0.4772, 0.5087]],
        [[0.2410, 0.2433, 0.2767,  ..., 0.2500, 0.2439, 0.2477],
         [0.2769, 0.2701, 0.2668,  ..., 0.2500, 0.2682, 0.2568],
         [0.2410, 0.2433, 0.2283,  ..., 0.2500, 0.2439, 0.2477],
         [0.2410, 0.2433, 0.2283,  ..., 0.2500, 0.2439, 0.2477]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:01:13,763 [Process: 0] Synchronize training processes
2024-08-16 13:01:13,763 [Process: 0] Evaluating...
2024-08-16 13:01:13,765 [Process: 0] EPOCH 187:
2024-08-16 13:01:13,767 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1740, 0.1479, 0.1569,  ..., 0.1507, 0.1377, 0.1482],
         [0.1828, 0.1479, 0.2046,  ..., 0.1507, 0.1377, 0.1493],
         [0.1740, 0.1479, 0.1387,  ..., 0.1507, 0.1377, 0.1482],
         [0.4692, 0.5564, 0.4998,  ..., 0.5478, 0.5870, 0.5543]],
        [[0.3175, 0.2142, 0.2499,  ..., 0.2253, 0.2597, 0.3885],
         [0.2918, 0.3574, 0.2503,  ..., 0.3240, 0.3376, 0.2492],
         [0.1953, 0.2142, 0.2499,  ..., 0.2253, 0.2013, 0.1929],
         [0.1953, 0.2142, 0.2499,  ..., 0.2253, 0.2013, 0.1694]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 187:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1629, 0.1253, 0.1666,  ..., 0.1764, 0.1528, 0.1605],
         [0.1730, 0.1253, 0.1666,  ..., 0.1764, 0.1528, 0.1605],
         [0.1629, 0.1253, 0.1666,  ..., 0.1764, 0.1528, 0.1605],
         [0.5012, 0.6241, 0.5002,  ..., 0.4709, 0.5416, 0.5184]],
        [[0.2481, 0.2500, 0.2449,  ..., 0.2500, 0.2456, 0.2467],
         [0.2558, 0.2500, 0.2653,  ..., 0.2500, 0.2631, 0.2598],
         [0.2481, 0.2500, 0.2449,  ..., 0.2500, 0.2456, 0.2467],
         [0.2481, 0.2500, 0.2449,  ..., 0.2500, 0.2456, 0.2467]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:01:15,659 [Process: 0] Synchronize training processes
2024-08-16 13:01:15,660 [Process: 0] Evaluating...
2024-08-16 13:01:15,662 [Process: 0] EPOCH 188:
2024-08-16 13:01:15,664 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1910, 0.1474, 0.0816,  ..., 0.1466, 0.1619, 0.1669],
         [0.1255, 0.1471, 0.0816,  ..., 0.1466, 0.1619, 0.1669],
         [0.2509, 0.1471, 0.4856,  ..., 0.1466, 0.1619, 0.1669],
         [0.4325, 0.5584, 0.3512,  ..., 0.5603, 0.5142, 0.4993]],
        [[0.1559, 0.4696, 0.2500,  ..., 0.3094, 0.3264, 0.1891],
         [0.1559, 0.3345, 0.2500,  ..., 0.2302, 0.2245, 0.4895],
         [0.5323, 0.0980, 0.2500,  ..., 0.2302, 0.2245, 0.1607],
         [0.1559, 0.0980, 0.2500,  ..., 0.2302, 0.2245, 0.1607]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 188:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1832, 0.1515, 0.1770,  ..., 0.1559, 0.1557, 0.1711],
         [0.1832, 0.1515, 0.1770,  ..., 0.1568, 0.1557, 0.1711],
         [0.1832, 0.1515, 0.1770,  ..., 0.1559, 0.1557, 0.1711],
         [0.4503, 0.5454, 0.4691,  ..., 0.5313, 0.5329, 0.4868]],
        [[0.2500, 0.2499, 0.2500,  ..., 0.3040, 0.2473, 0.2496],
         [0.2500, 0.2499, 0.2500,  ..., 0.2396, 0.2580, 0.2602],
         [0.2500, 0.2504, 0.2500,  ..., 0.2282, 0.2473, 0.2451],
         [0.2500, 0.2499, 0.2500,  ..., 0.2282, 0.2473, 0.2451]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:01:17,582 [Process: 0] Synchronize training processes
2024-08-16 13:01:17,582 [Process: 0] Evaluating...
2024-08-16 13:01:17,584 [Process: 0] EPOCH 189:
2024-08-16 13:01:17,586 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2861, 0.2385, 0.1067,  ..., 0.1889, 0.2598, 0.1868],
         [0.3118, 0.2736, 0.5034,  ..., 0.2160, 0.1292, 0.1868],
         [0.1653, 0.1452, 0.1067,  ..., 0.0883, 0.1292, 0.1868],
         [0.2368, 0.3428, 0.2832,  ..., 0.5068, 0.4817, 0.4397]],
        [[0.0837, 0.2106, 0.2235,  ..., 0.2144, 0.2516, 0.2500],
         [0.7200, 0.2106, 0.2235,  ..., 0.2171, 0.4714, 0.2500],
         [0.1127, 0.3682, 0.3294,  ..., 0.3541, 0.2094, 0.2500],
         [0.0837, 0.2106, 0.2235,  ..., 0.2144, 0.0677, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 189:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1406, 0.1624, 0.1780,  ..., 0.1461, 0.1534, 0.2031],
         [0.1406, 0.1624, 0.1780,  ..., 0.1461, 0.1534, 0.2031],
         [0.1406, 0.1624, 0.1780,  ..., 0.1461, 0.1534, 0.2031],
         [0.5782, 0.5127, 0.4660,  ..., 0.5618, 0.5397, 0.3908]],
        [[0.2469, 0.2500, 0.2470,  ..., 0.2570, 0.2500, 0.2500],
         [0.2469, 0.2500, 0.2590,  ..., 0.2477, 0.2500, 0.2500],
         [0.2592, 0.2500, 0.2470,  ..., 0.2477, 0.2500, 0.2500],
         [0.2469, 0.2500, 0.2470,  ..., 0.2477, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:01:19,479 [Process: 0] Synchronize training processes
2024-08-16 13:01:19,479 [Process: 0] Evaluating...
2024-08-16 13:01:19,481 [Process: 0] EPOCH 190:
2024-08-16 13:01:19,483 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2430, 0.3298, 0.0850,  ..., 0.2183, 0.3947, 0.2129],
         [0.1456, 0.2611, 0.0781,  ..., 0.2183, 0.0688, 0.1563],
         [0.1456, 0.1638, 0.1739,  ..., 0.2183, 0.0688, 0.1563],
         [0.4659, 0.2453, 0.6631,  ..., 0.3452, 0.4676, 0.4745]],
        [[0.1522, 0.3834, 0.2646,  ..., 0.1013, 0.2714, 0.2500],
         [0.1522, 0.3349, 0.4718,  ..., 0.1598, 0.2429, 0.2500],
         [0.5434, 0.1995, 0.1318,  ..., 0.6376, 0.2429, 0.2500],
         [0.1522, 0.0822, 0.1318,  ..., 0.1013, 0.2429, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 190:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1721, 0.1329, 0.1735,  ..., 0.1395, 0.1868, 0.1430],
         [0.1721, 0.1329, 0.1735,  ..., 0.1395, 0.1868, 0.1430],
         [0.1721, 0.1329, 0.1735,  ..., 0.1395, 0.1868, 0.1430],
         [0.4836, 0.6012, 0.4794,  ..., 0.5815, 0.4396, 0.5710]],
        [[0.2694, 0.2533, 0.2604,  ..., 0.2472, 0.2500, 0.2433],
         [0.2633, 0.2614, 0.2573,  ..., 0.2583, 0.2500, 0.2617],
         [0.2337, 0.2426, 0.2412,  ..., 0.2472, 0.2500, 0.2517],
         [0.2337, 0.2426, 0.2412,  ..., 0.2472, 0.2500, 0.2433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:01:21,385 [Process: 0] Synchronize training processes
2024-08-16 13:01:21,386 [Process: 0] Evaluating...
2024-08-16 13:01:21,387 [Process: 0] EPOCH 191:
2024-08-16 13:01:21,389 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1602, 0.1723, 0.1992,  ..., 0.2253, 0.3056, 0.3234],
         [0.1602, 0.1723, 0.1992,  ..., 0.1885, 0.1524, 0.1720],
         [0.1602, 0.1723, 0.1992,  ..., 0.1647, 0.1252, 0.1418],
         [0.5195, 0.4831, 0.4025,  ..., 0.4214, 0.4168, 0.3628]],
        [[0.2278, 0.1623, 0.2526,  ..., 0.2913, 0.2492, 0.2899],
         [0.2785, 0.3338, 0.2729,  ..., 0.3166, 0.2825, 0.3520],
         [0.2659, 0.3416, 0.2674,  ..., 0.2270, 0.2634, 0.1819],
         [0.2278, 0.1623, 0.2071,  ..., 0.1650, 0.2049, 0.1761]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 191:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1676, 0.1755, 0.1681,  ..., 0.1547, 0.1205, 0.1547],
         [0.1676, 0.1755, 0.1681,  ..., 0.1547, 0.1299, 0.1547],
         [0.1676, 0.1755, 0.1681,  ..., 0.1547, 0.1205, 0.1547],
         [0.4971, 0.4735, 0.4957,  ..., 0.5359, 0.6290, 0.5360]],
        [[0.2500, 0.2776, 0.2500,  ..., 0.2803, 0.2500, 0.2615],
         [0.2500, 0.2541, 0.2500,  ..., 0.2400, 0.2500, 0.2462],
         [0.2500, 0.2341, 0.2500,  ..., 0.2399, 0.2500, 0.2462],
         [0.2500, 0.2341, 0.2500,  ..., 0.2399, 0.2500, 0.2462]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:01:23,315 [Process: 0] Synchronize training processes
2024-08-16 13:01:23,315 [Process: 0] Evaluating...
2024-08-16 13:01:23,317 [Process: 0] EPOCH 192:
2024-08-16 13:01:23,319 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2053, 0.2057, 0.1311,  ..., 0.1170, 0.2571, 0.4533],
         [0.2053, 0.3754, 0.1311,  ..., 0.1170, 0.1930, 0.1329],
         [0.2053, 0.1697, 0.2713,  ..., 0.1170, 0.1930, 0.1329],
         [0.3841, 0.2492, 0.4664,  ..., 0.6491, 0.3570, 0.2809]],
        [[0.2931, 0.2083, 0.1570,  ..., 0.4214, 0.3000, 0.3287],
         [0.1861, 0.2572, 0.1570,  ..., 0.1530, 0.2333, 0.4100],
         [0.3347, 0.3871, 0.5290,  ..., 0.3572, 0.2333, 0.1381],
         [0.1861, 0.1475, 0.1570,  ..., 0.0684, 0.2333, 0.1232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 192:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1354, 0.1642, 0.1878,  ..., 0.1654, 0.1864, 0.1491],
         [0.1354, 0.1642, 0.1878,  ..., 0.1654, 0.1864, 0.1491],
         [0.1354, 0.1642, 0.1878,  ..., 0.1654, 0.1864, 0.1491],
         [0.5938, 0.5073, 0.4366,  ..., 0.5038, 0.4407, 0.5526]],
        [[0.2498, 0.2494, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2507, 0.2519, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2498, 0.2494, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2498, 0.2494, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:01:25,210 [Process: 0] Synchronize training processes
2024-08-16 13:01:25,211 [Process: 0] Evaluating...
2024-08-16 13:01:25,212 [Process: 0] EPOCH 193:
2024-08-16 13:01:25,214 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1854, 0.1730, 0.2357,  ..., 0.2466, 0.2035, 0.2016],
         [0.1854, 0.1730, 0.1808,  ..., 0.2011, 0.1986, 0.2016],
         [0.1854, 0.1730, 0.1808,  ..., 0.1796, 0.1815, 0.2016],
         [0.4439, 0.4811, 0.4026,  ..., 0.3727, 0.4164, 0.3951]],
        [[0.2132, 0.2019, 0.2431,  ..., 0.2024, 0.2116, 0.1775],
         [0.3603, 0.3754, 0.2708,  ..., 0.3929, 0.3536, 0.3783],
         [0.2132, 0.2209, 0.2431,  ..., 0.2024, 0.2232, 0.2669],
         [0.2132, 0.2019, 0.2431,  ..., 0.2024, 0.2116, 0.1773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 193:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1653, 0.1349, 0.1526,  ..., 0.1421, 0.1809, 0.1501],
         [0.1653, 0.1452, 0.1526,  ..., 0.1421, 0.1951, 0.1627],
         [0.1653, 0.1349, 0.1526,  ..., 0.1421, 0.1809, 0.1501],
         [0.5042, 0.5851, 0.5421,  ..., 0.5737, 0.4432, 0.5371]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2420, 0.2430, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2741, 0.2710, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2420, 0.2430, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2420, 0.2430, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:01:27,114 [Process: 0] Synchronize training processes
2024-08-16 13:01:27,114 [Process: 0] Evaluating...
2024-08-16 13:01:27,116 [Process: 0] EPOCH 194:
2024-08-16 13:01:27,118 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2062, 0.2784, 0.1564,  ..., 0.2012, 0.2106, 0.3449],
         [0.1741, 0.1706, 0.1564,  ..., 0.2012, 0.2106, 0.3049],
         [0.3830, 0.2328, 0.1564,  ..., 0.2012, 0.3205, 0.1968],
         [0.2368, 0.3181, 0.5309,  ..., 0.3964, 0.2582, 0.1535]],
        [[0.1353, 0.1405, 0.2076,  ..., 0.0977, 0.1975, 0.2851],
         [0.3292, 0.2030, 0.2046,  ..., 0.5435, 0.4580, 0.3733],
         [0.4002, 0.5161, 0.4382,  ..., 0.2610, 0.2108, 0.2174],
         [0.1353, 0.1405, 0.1496,  ..., 0.0977, 0.1338, 0.1242]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 194:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1728, 0.1893, 0.1461,  ..., 0.1435, 0.1291, 0.1589],
         [0.1728, 0.1895, 0.1461,  ..., 0.1435, 0.1381, 0.1610],
         [0.1728, 0.1893, 0.1461,  ..., 0.1435, 0.1291, 0.1589],
         [0.4816, 0.4318, 0.5617,  ..., 0.5694, 0.6036, 0.5211]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2472, 0.2500, 0.2471],
         [0.2500, 0.2500, 0.2500,  ..., 0.2583, 0.2500, 0.2586],
         [0.2500, 0.2500, 0.2500,  ..., 0.2472, 0.2500, 0.2471],
         [0.2500, 0.2500, 0.2500,  ..., 0.2472, 0.2500, 0.2471]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:01:29,013 [Process: 0] Synchronize training processes
2024-08-16 13:01:29,013 [Process: 0] Evaluating...
2024-08-16 13:01:29,015 [Process: 0] EPOCH 195:
2024-08-16 13:01:29,017 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2199, 0.2138,  ..., 0.1992, 0.2239, 0.0111],
         [0.2500, 0.2199, 0.2138,  ..., 0.1992, 0.2239, 0.0029],
         [0.2500, 0.2199, 0.2138,  ..., 0.1992, 0.2239, 0.9831],
         [0.2500, 0.3403, 0.3587,  ..., 0.4023, 0.3283, 0.0029]],
        [[0.4216, 0.2989, 0.2273,  ..., 0.5017, 0.4146, 0.2085],
         [0.2583, 0.2798, 0.3498,  ..., 0.2587, 0.1951, 0.3746],
         [0.1600, 0.2253, 0.2115,  ..., 0.1269, 0.1951, 0.2085],
         [0.1600, 0.1960, 0.2115,  ..., 0.1127, 0.1951, 0.2085]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 195:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1455, 0.1715, 0.1405,  ..., 0.1239, 0.1394, 0.1420],
         [0.1735, 0.1715, 0.1405,  ..., 0.1239, 0.1394, 0.1531],
         [0.1455, 0.1715, 0.1405,  ..., 0.1239, 0.1394, 0.1420],
         [0.5356, 0.4855, 0.5786,  ..., 0.6284, 0.5818, 0.5629]],
        [[0.2471, 0.2499, 0.2500,  ..., 0.2482, 0.2433, 0.2500],
         [0.2586, 0.2502, 0.2500,  ..., 0.2554, 0.2702, 0.2500],
         [0.2471, 0.2499, 0.2500,  ..., 0.2482, 0.2433, 0.2500],
         [0.2471, 0.2499, 0.2500,  ..., 0.2482, 0.2433, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-16 13:01:30,918 [Process: 0] Synchronize training processes
2024-08-16 13:01:30,919 [Process: 0] Evaluating...
2024-08-16 13:01:30,920 [Process: 0] EPOCH 196:
2024-08-16 13:01:30,922 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1934, 0.1217, 0.1316,  ..., 0.0844, 0.1459, 0.0315],
         [0.1934, 0.1966, 0.1316,  ..., 0.0844, 0.1459, 0.0143],
         [0.1934, 0.1217, 0.1541,  ..., 0.0844, 0.1628, 0.9522],
         [0.4198, 0.5601, 0.5827,  ..., 0.7468, 0.5455, 0.0021]],
        [[0.1992, 0.2238, 0.3821,  ..., 0.3600, 0.6433, 0.4911],
         [0.2842, 0.3619, 0.3361,  ..., 0.3797, 0.0914, 0.2000],
         [0.3305, 0.2021, 0.1916,  ..., 0.1302, 0.1368, 0.1311],
         [0.1862, 0.2121, 0.0903,  ..., 0.1302, 0.1284, 0.1778]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 196:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1765, 0.1556, 0.1441,  ..., 0.1703, 0.1700, 0.1701],
         [0.1765, 0.1556, 0.1477,  ..., 0.1703, 0.1700, 0.1720],
         [0.1765, 0.1556, 0.1441,  ..., 0.1703, 0.1700, 0.1701],
         [0.4704, 0.5333, 0.5640,  ..., 0.4892, 0.4899, 0.4879]],
        [[0.2500, 0.2500, 0.2456,  ..., 0.2488, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2633,  ..., 0.2581, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2456,  ..., 0.2465, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2456,  ..., 0.2465, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1327, 0.1244, 0.1856,  ..., 0.1776, 0.1442, 0.1913],
         [0.1327, 0.1244, 0.1856,  ..., 0.1875, 0.1442, 0.1913],
         [0.1327, 0.1244, 0.1856,  ..., 0.1776, 0.1442, 0.1913],
         [0.6020, 0.6267, 0.4431,  ..., 0.4572, 0.5674, 0.4262]],
        [[0.2500, 0.2487, 0.2004,  ..., 0.7701, 0.1867, 0.3889],
         [0.2500, 0.2529, 0.4021,  ..., 0.0560, 0.1375, 0.2037],
         [0.2500, 0.2497, 0.2056,  ..., 0.1499, 0.6126, 0.2037],
         [0.2500, 0.2487, 0.1918,  ..., 0.0239, 0.0632, 0.2037]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:01:32,830 [Process: 0] Synchronize training processes
2024-08-16 13:01:32,830 [Process: 0] Evaluating...
2024-08-16 13:01:32,832 [Process: 0] EPOCH 197:
2024-08-16 13:01:32,834 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 197:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1756, 0.2001, 0.1516,  ..., 0.1610, 0.1668, 0.1387],
         [0.1756, 0.2001, 0.1516,  ..., 0.1610, 0.1668, 0.1387],
         [0.1756, 0.2001, 0.1516,  ..., 0.1610, 0.1668, 0.1387],
         [0.4733, 0.3998, 0.5451,  ..., 0.5169, 0.4995, 0.5840]],
        [[0.2500, 0.2466, 0.2465,  ..., 0.2490, 0.2482, 0.2500],
         [0.2500, 0.2642, 0.2606,  ..., 0.2530, 0.2482, 0.2500],
         [0.2500, 0.2446, 0.2465,  ..., 0.2490, 0.2553, 0.2500],
         [0.2500, 0.2446, 0.2465,  ..., 0.2490, 0.2482, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0861, 0.1829, 0.0995,  ..., 0.2277, 0.0949, 0.2332],
         [0.0861, 0.1829, 0.0995,  ..., 0.2277, 0.0949, 0.2332],
         [0.0901, 0.1861, 0.4348,  ..., 0.2277, 0.0949, 0.2669],
         [0.7378, 0.4481, 0.3662,  ..., 0.3168, 0.7153, 0.2667]],
        [[0.1650, 0.3959, 0.2489,  ..., 0.2275, 0.1830, 0.3811],
         [0.4376, 0.4210, 0.2283,  ..., 0.2076, 0.3931, 0.2730],
         [0.2324, 0.0915, 0.2316,  ..., 0.2076, 0.2410, 0.2418],
         [0.1650, 0.0915, 0.2912,  ..., 0.3573, 0.1830, 0.1041]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 198:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:34,751 [Process: 0] Synchronize training processes
2024-08-16 13:01:34,751 [Process: 0] Evaluating...
2024-08-16 13:01:34,753 [Process: 0] EPOCH 198:
2024-08-16 13:01:34,755 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1677, 0.1606, 0.1496,  ..., 0.1628, 0.1535, 0.1680],
         [0.1677, 0.1606, 0.1496,  ..., 0.1628, 0.1781, 0.1680],
         [0.1677, 0.1606, 0.1496,  ..., 0.1628, 0.1535, 0.1680],
         [0.4968, 0.5181, 0.5513,  ..., 0.5116, 0.5148, 0.4959]],
        [[0.2486, 0.2500, 0.2500,  ..., 0.2500, 0.2496, 0.2500],
         [0.2541, 0.2500, 0.2500,  ..., 0.2500, 0.2513, 0.2500],
         [0.2486, 0.2500, 0.2500,  ..., 0.2500, 0.2496, 0.2500],
         [0.2486, 0.2500, 0.2500,  ..., 0.2500, 0.2496, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3691, 0.1751, 0.1872,  ..., 0.2313, 0.1178, 0.1689],
         [0.1911, 0.1311, 0.1871,  ..., 0.1788, 0.1178, 0.1689],
         [0.1911, 0.1311, 0.1871,  ..., 0.1788, 0.1178, 0.1689],
         [0.2486, 0.5627, 0.4386,  ..., 0.4111, 0.6466, 0.4933]],
        [[0.2316, 0.3185, 0.1481,  ..., 0.3234, 0.1981, 0.1928],
         [0.3051, 0.3760, 0.5494,  ..., 0.2397, 0.4086, 0.3810],
         [0.2316, 0.1577, 0.1544,  ..., 0.2184, 0.1966, 0.2334],
         [0.2316, 0.1478, 0.1481,  ..., 0.2184, 0.1966, 0.1928]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 199:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:36,665 [Process: 0] Synchronize training processes
2024-08-16 13:01:36,665 [Process: 0] Evaluating...
2024-08-16 13:01:36,667 [Process: 0] EPOCH 199:
2024-08-16 13:01:36,669 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1510, 0.1785, 0.1677,  ..., 0.1677, 0.1651, 0.1338],
         [0.1510, 0.1785, 0.1890,  ..., 0.1677, 0.1651, 0.1338],
         [0.1510, 0.1785, 0.1677,  ..., 0.1677, 0.1651, 0.1338],
         [0.5469, 0.4646, 0.4756,  ..., 0.4969, 0.5046, 0.5985]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2483, 0.2500, 0.2799],
         [0.2500, 0.2500, 0.2500,  ..., 0.2551, 0.2500, 0.2392],
         [0.2500, 0.2500, 0.2500,  ..., 0.2483, 0.2500, 0.2506],
         [0.2500, 0.2500, 0.2500,  ..., 0.2483, 0.2500, 0.2303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2103, 0.1798, 0.1649,  ..., 0.2162, 0.2192, 0.1958],
         [0.1604, 0.2285, 0.1649,  ..., 0.1574, 0.1697, 0.1656],
         [0.1604, 0.1798, 0.1649,  ..., 0.1574, 0.1451, 0.1644],
         [0.4688, 0.4119, 0.5053,  ..., 0.4691, 0.4660, 0.4742]],
        [[0.2319, 0.2098, 0.2340,  ..., 0.2728, 0.1858, 0.0343],
         [0.2883, 0.2856, 0.2979,  ..., 0.2807, 0.2916, 0.0206],
         [0.2479, 0.2947, 0.2340,  ..., 0.2333, 0.3368, 0.9245],
         [0.2319, 0.2098, 0.2340,  ..., 0.2132, 0.1858, 0.0206]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 200:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:38,600 [Process: 0] Synchronize training processes
2024-08-16 13:01:38,600 [Process: 0] Evaluating...
2024-08-16 13:01:38,602 [Process: 0] EPOCH 200:
2024-08-16 13:01:38,604 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1530, 0.1626, 0.2023,  ..., 0.1787, 0.1457, 0.1125],
         [0.1699, 0.1626, 0.2023,  ..., 0.1858, 0.1457, 0.1163],
         [0.1530, 0.1626, 0.2023,  ..., 0.1787, 0.1457, 0.1125],
         [0.5242, 0.5121, 0.3931,  ..., 0.4568, 0.5628, 0.6587]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2957, 0.4315, 0.1024,  ..., 0.1056, 0.1941, 0.3243],
         [0.2212, 0.2844, 0.1932,  ..., 0.1646, 0.1941, 0.1140],
         [0.2212, 0.1188, 0.1011,  ..., 0.1093, 0.1941, 0.4304],
         [0.2620, 0.1653, 0.6033,  ..., 0.6206, 0.4178, 0.1313]],
        [[0.2017, 0.3466, 0.2500,  ..., 0.2071, 0.4492, 0.1719],
         [0.2983, 0.2392, 0.2500,  ..., 0.2071, 0.0973, 0.1402],
         [0.2983, 0.2001, 0.2500,  ..., 0.2071, 0.3562, 0.5476],
         [0.2017, 0.2141, 0.2500,  ..., 0.3786, 0.0973, 0.1402]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 201:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:40,510 [Process: 0] Synchronize training processes
2024-08-16 13:01:40,511 [Process: 0] Evaluating...
2024-08-16 13:01:40,513 [Process: 0] EPOCH 201:
2024-08-16 13:01:40,515 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1744, 0.1637, 0.1445,  ..., 0.1735, 0.1481, 0.1985],
         [0.1744, 0.1637, 0.1445,  ..., 0.1735, 0.1481, 0.1985],
         [0.1744, 0.1637, 0.1445,  ..., 0.1735, 0.1481, 0.1985],
         [0.4769, 0.5089, 0.5665,  ..., 0.4794, 0.5558, 0.4045]],
        [[0.2500, 0.2500, 0.2636,  ..., 0.2500, 0.2500, 0.2504],
         [0.2500, 0.2500, 0.2546,  ..., 0.2500, 0.2500, 0.2696],
         [0.2500, 0.2500, 0.2409,  ..., 0.2500, 0.2500, 0.2400],
         [0.2500, 0.2500, 0.2409,  ..., 0.2500, 0.2500, 0.2400]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1855, 0.1190, 0.1167,  ..., 0.1967, 0.1866, 0.0974],
         [0.2617, 0.1190, 0.1541,  ..., 0.2025, 0.1866, 0.0974],
         [0.1855, 0.1190, 0.1167,  ..., 0.1967, 0.1866, 0.0974],
         [0.3673, 0.6429, 0.6125,  ..., 0.4041, 0.4403, 0.7078]],
        [[0.4225, 0.2665, 0.3433,  ..., 0.2592, 0.2354, 0.3144],
         [0.2044, 0.3044, 0.2083,  ..., 0.2715, 0.2354, 0.3015],
         [0.2443, 0.2818, 0.2401,  ..., 0.2858, 0.2939, 0.1980],
         [0.1288, 0.1473, 0.2083,  ..., 0.1835, 0.2354, 0.1861]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 202:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:42,430 [Process: 0] Synchronize training processes
2024-08-16 13:01:42,430 [Process: 0] Evaluating...
2024-08-16 13:01:42,432 [Process: 0] EPOCH 202:
2024-08-16 13:01:42,434 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1531, 0.1876, 0.1197,  ..., 0.1246, 0.1482, 0.1422],
         [0.1531, 0.1909, 0.1243,  ..., 0.1246, 0.1699, 0.1422],
         [0.1531, 0.1876, 0.1197,  ..., 0.1246, 0.1482, 0.1422],
         [0.5407, 0.4338, 0.6363,  ..., 0.6262, 0.5336, 0.5733]],
        [[0.2484, 0.2500, 0.2417,  ..., 0.2507, 0.2500, 0.2500],
         [0.2548, 0.2500, 0.2748,  ..., 0.2531, 0.2500, 0.2500],
         [0.2484, 0.2500, 0.2417,  ..., 0.2481, 0.2500, 0.2500],
         [0.2484, 0.2500, 0.2417,  ..., 0.2481, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1773, 0.2511, 0.1377,  ..., 0.1325, 0.5076, 0.2286],
         [0.1773, 0.2124, 0.1377,  ..., 0.1325, 0.0951, 0.2286],
         [0.1773, 0.2124, 0.1377,  ..., 0.1325, 0.0951, 0.2286],
         [0.4681, 0.3241, 0.5869,  ..., 0.6026, 0.3022, 0.3142]],
        [[0.1787, 0.2119, 0.2993,  ..., 0.2055, 0.3111, 0.2085],
         [0.5636, 0.2119, 0.2230,  ..., 0.2055, 0.4015, 0.3746],
         [0.1288, 0.3643, 0.3642,  ..., 0.3834, 0.1437, 0.2085],
         [0.1288, 0.2119, 0.1135,  ..., 0.2055, 0.1437, 0.2085]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 203:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:44,392 [Process: 0] Synchronize training processes
2024-08-16 13:01:44,393 [Process: 0] Evaluating...
2024-08-16 13:01:44,395 [Process: 0] EPOCH 203:
2024-08-16 13:01:44,396 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1307, 0.1531, 0.1634,  ..., 0.1096, 0.1899, 0.1543],
         [0.1307, 0.1531, 0.1689,  ..., 0.1096, 0.1899, 0.1543],
         [0.1307, 0.1531, 0.1634,  ..., 0.1096, 0.1899, 0.1543],
         [0.6080, 0.5406, 0.5043,  ..., 0.6712, 0.4303, 0.5371]],
        [[0.2500, 0.2500, 0.2473,  ..., 0.2557, 0.2465, 0.2453],
         [0.2500, 0.2500, 0.2582,  ..., 0.2481, 0.2604, 0.2641],
         [0.2500, 0.2500, 0.2473,  ..., 0.2481, 0.2465, 0.2453],
         [0.2500, 0.2500, 0.2473,  ..., 0.2481, 0.2465, 0.2453]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1645, 0.2085, 0.1862,  ..., 0.1753, 0.1573, 0.0668],
         [0.1645, 0.2085, 0.1927,  ..., 0.1753, 0.1573, 0.0668],
         [0.2048, 0.2085, 0.1862,  ..., 0.1753, 0.1573, 0.5480],
         [0.4663, 0.3745, 0.4350,  ..., 0.4742, 0.5281, 0.3184]],
        [[0.3267, 0.4510, 0.3387,  ..., 0.3888, 0.2411, 0.4105],
         [0.3586, 0.2318, 0.2795,  ..., 0.2397, 0.2767, 0.3109],
         [0.1617, 0.1586, 0.1909,  ..., 0.1857, 0.2411, 0.1537],
         [0.1530, 0.1586, 0.1909,  ..., 0.1857, 0.2411, 0.1250]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 204:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:46,306 [Process: 0] Synchronize training processes
2024-08-16 13:01:46,306 [Process: 0] Evaluating...
2024-08-16 13:01:46,308 [Process: 0] EPOCH 204:
2024-08-16 13:01:46,310 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1268, 0.1698, 0.1774,  ..., 0.1296, 0.1714, 0.1795],
         [0.1403, 0.1698, 0.2176,  ..., 0.1296, 0.1822, 0.1795],
         [0.1268, 0.1698, 0.1774,  ..., 0.1296, 0.1714, 0.1795],
         [0.6062, 0.4906, 0.4275,  ..., 0.6111, 0.4751, 0.4615]],
        [[0.2500, 0.2485, 0.2551,  ..., 0.2377, 0.2495, 0.2465],
         [0.2500, 0.2546, 0.2483,  ..., 0.2868, 0.2514, 0.2604],
         [0.2500, 0.2485, 0.2483,  ..., 0.2377, 0.2495, 0.2465],
         [0.2500, 0.2485, 0.2483,  ..., 0.2377, 0.2495, 0.2465]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1985, 0.1689, 0.3022,  ..., 0.2573, 0.4965, 0.1888],
         [0.4689, 0.1689, 0.1432,  ..., 0.2090, 0.1572, 0.1888],
         [0.0554, 0.1689, 0.1278,  ..., 0.2090, 0.0766, 0.1888],
         [0.2772, 0.4932, 0.4269,  ..., 0.3247, 0.2697, 0.4336]],
        [[0.1733, 0.3749, 0.5256,  ..., 0.1777, 0.2430, 0.2461],
         [0.1733, 0.1486, 0.1818,  ..., 0.4865, 0.2430, 0.2033],
         [0.4802, 0.3906, 0.1463,  ..., 0.1888, 0.2709, 0.3473],
         [0.1733, 0.0859, 0.1463,  ..., 0.1470, 0.2430, 0.2033]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 205:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:48,214 [Process: 0] Synchronize training processes
2024-08-16 13:01:48,214 [Process: 0] Evaluating...
2024-08-16 13:01:48,216 [Process: 0] EPOCH 205:
2024-08-16 13:01:48,218 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1151, 0.1456, 0.1644,  ..., 0.1682, 0.1686, 0.1773],
         [0.1154, 0.1547, 0.1644,  ..., 0.1682, 0.1689, 0.1773],
         [0.1151, 0.1456, 0.1644,  ..., 0.1682, 0.1686, 0.1773],
         [0.6544, 0.5541, 0.5067,  ..., 0.4955, 0.4940, 0.4681]],
        [[0.2500, 0.2500, 0.2629,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2457,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2457,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2457,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1150, 0.1509, 0.1669,  ..., 0.1794, 0.1443, 0.1722],
         [0.1150, 0.1509, 0.1669,  ..., 0.1794, 0.1446, 0.1722],
         [0.1150, 0.1509, 0.3191,  ..., 0.1794, 0.1443, 0.1722],
         [0.6550, 0.5473, 0.3471,  ..., 0.4617, 0.5667, 0.4834]],
        [[0.2613, 0.2175, 0.3416,  ..., 0.2224, 0.2446, 0.2500],
         [0.3834, 0.3127, 0.3728,  ..., 0.4106, 0.4369, 0.2500],
         [0.2395, 0.3455, 0.1428,  ..., 0.2511, 0.2321, 0.2500],
         [0.1158, 0.1243, 0.1428,  ..., 0.1159, 0.0864, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 206:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:01:50,119 [Process: 0] Synchronize training processes
2024-08-16 13:01:50,119 [Process: 0] Evaluating...
2024-08-16 13:01:50,121 [Process: 0] EPOCH 206:
2024-08-16 13:01:50,123 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:52,025 [Process: 0] Synchronize training processes
2024-08-16 13:01:52,026 [Process: 0] Evaluating...
2024-08-16 13:01:52,028 [Process: 0] EPOCH 207:
2024-08-16 13:01:52,030 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1442, 0.1327, 0.1843,  ..., 0.1620, 0.1576, 0.1716],
         [0.1442, 0.1327, 0.1914,  ..., 0.1725, 0.1576, 0.1716],
         [0.1442, 0.1327, 0.1843,  ..., 0.1620, 0.1576, 0.1716],
         [0.5674, 0.6020, 0.4400,  ..., 0.5035, 0.5273, 0.4852]],
        [[0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2507, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1773, 0.2035, 0.1523,  ..., 0.1449, 0.1494, 0.1723],
         [0.1773, 0.2035, 0.1523,  ..., 0.1449, 0.1547, 0.2287],
         [0.1773, 0.2035, 0.1523,  ..., 0.1449, 0.1494, 0.1723],
         [0.4681, 0.3895, 0.5430,  ..., 0.5653, 0.5465, 0.4266]],
        [[0.2353, 0.2062, 0.2488,  ..., 0.3666, 0.2184, 0.2260],
         [0.3388, 0.4460, 0.2506,  ..., 0.1576, 0.3227, 0.3036],
         [0.2129, 0.1996, 0.2657,  ..., 0.1927, 0.2476, 0.2490],
         [0.2129, 0.1481, 0.2348,  ..., 0.2831, 0.2113, 0.2214]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 207:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1765, 0.1856, 0.2071,  ..., 0.1686, 0.1403, 0.1820],
         [0.2053, 0.1898, 0.2071,  ..., 0.1841, 0.1403, 0.1820],
         [0.1765, 0.1856, 0.2071,  ..., 0.1686, 0.1403, 0.1820],
         [0.4418, 0.4389, 0.3788,  ..., 0.4787, 0.5790, 0.4540]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:01:53,931 [Process: 0] Synchronize training processes
2024-08-16 13:01:53,932 [Process: 0] Evaluating...
2024-08-16 13:01:53,934 [Process: 0] EPOCH 208:
2024-08-16 13:01:53,936 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2099, 0.5255, 0.1425,  ..., 0.2168, 0.5598, 0.1350],
         [0.2170, 0.1164, 0.1051,  ..., 0.1902, 0.0834, 0.1350],
         [0.1423, 0.1164, 0.1051,  ..., 0.1574, 0.0834, 0.1350],
         [0.4309, 0.2416, 0.6473,  ..., 0.4356, 0.2734, 0.5950]],
        [[0.1035, 0.2956, 0.1361,  ..., 0.2043, 0.1218, 0.1854],
         [0.3784, 0.3334, 0.2849,  ..., 0.2043, 0.1218, 0.1854],
         [0.4146, 0.2719, 0.4429,  ..., 0.3870, 0.6347, 0.4437],
         [0.1035, 0.0991, 0.1361,  ..., 0.2043, 0.1218, 0.1854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 208:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1637, 0.1639, 0.1266,  ..., 0.1741, 0.2051, 0.2162],
         [0.1637, 0.1639, 0.1266,  ..., 0.1849, 0.2164, 0.2162],
         [0.1637, 0.1639, 0.1266,  ..., 0.1741, 0.2051, 0.2162],
         [0.5088, 0.5083, 0.6202,  ..., 0.4669, 0.3734, 0.3514]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2470, 0.2500],
         [0.2501, 0.2500, 0.2500,  ..., 0.2500, 0.2589, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2470, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2470, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:01:55,842 [Process: 0] Synchronize training processes
2024-08-16 13:01:55,842 [Process: 0] Evaluating...
2024-08-16 13:01:55,844 [Process: 0] EPOCH 209:
2024-08-16 13:01:55,846 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2203, 0.1597, 0.1899,  ..., 0.1528, 0.1600, 0.2015],
         [0.2203, 0.1597, 0.1899,  ..., 0.1786, 0.1600, 0.2015],
         [0.2203, 0.1597, 0.2709,  ..., 0.1528, 0.1600, 0.2015],
         [0.3392, 0.5208, 0.3492,  ..., 0.5158, 0.5200, 0.3954]],
        [[0.3582, 0.1282, 0.1661,  ..., 0.0902, 0.3040, 0.2260],
         [0.2645, 0.1613, 0.2782,  ..., 0.4646, 0.2427, 0.2260],
         [0.2345, 0.5824, 0.3897,  ..., 0.3550, 0.2888, 0.3219],
         [0.1427, 0.1282, 0.1661,  ..., 0.0902, 0.1645, 0.2260]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 209:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1643, 0.1721, 0.1516,  ..., 0.1641, 0.1627, 0.2236],
         [0.1643, 0.1721, 0.1516,  ..., 0.1641, 0.1627, 0.2236],
         [0.1643, 0.1721, 0.1516,  ..., 0.1641, 0.1627, 0.2236],
         [0.5070, 0.4836, 0.5453,  ..., 0.5078, 0.5119, 0.3292]],
        [[0.2390, 0.2500, 0.2458,  ..., 0.2419, 0.2495, 0.2475],
         [0.2830, 0.2500, 0.2627,  ..., 0.2743, 0.2514, 0.2574],
         [0.2390, 0.2500, 0.2458,  ..., 0.2419, 0.2495, 0.2475],
         [0.2390, 0.2500, 0.2458,  ..., 0.2419, 0.2495, 0.2475]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:01:57,754 [Process: 0] Synchronize training processes
2024-08-16 13:01:57,754 [Process: 0] Evaluating...
2024-08-16 13:01:57,756 [Process: 0] EPOCH 210:
2024-08-16 13:01:57,758 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1378, 0.2000, 0.1693,  ..., 0.1131, 0.1781, 0.3490],
         [0.1378, 0.1766, 0.1693,  ..., 0.1131, 0.1781, 0.1182],
         [0.1378, 0.1537, 0.1693,  ..., 0.1131, 0.1781, 0.1352],
         [0.5865, 0.4698, 0.4921,  ..., 0.6607, 0.4657, 0.3976]],
        [[0.1690, 0.3292, 0.2897,  ..., 0.2012, 0.2301, 0.3809],
         [0.5901, 0.1160, 0.3308,  ..., 0.1471, 0.3373, 0.2052],
         [0.2046, 0.4394, 0.2892,  ..., 0.5565, 0.2405, 0.2052],
         [0.0363, 0.1154, 0.0903,  ..., 0.0953, 0.1922, 0.2087]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 210:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:01:59,663 [Process: 0] Synchronize training processes
2024-08-16 13:01:59,663 [Process: 0] Evaluating...
2024-08-16 13:01:59,665 [Process: 0] EPOCH 211:
2024-08-16 13:01:59,667 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1552, 0.1127, 0.1498,  ..., 0.2079, 0.1465, 0.1651],
         [0.1790, 0.1150, 0.1728,  ..., 0.2079, 0.1465, 0.1651],
         [0.1552, 0.1127, 0.1498,  ..., 0.2079, 0.1465, 0.1651],
         [0.5105, 0.6596, 0.5277,  ..., 0.3764, 0.5606, 0.5046]],
        [[0.2658, 0.2500, 0.2488,  ..., 0.2463, 0.2500, 0.2500],
         [0.2603, 0.2500, 0.2537,  ..., 0.2612, 0.2500, 0.2500],
         [0.2419, 0.2500, 0.2488,  ..., 0.2463, 0.2500, 0.2500],
         [0.2320, 0.2500, 0.2488,  ..., 0.2463, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1760, 0.1394, 0.1513,  ..., 0.1474, 0.4217, 0.2192],
         [0.1760, 0.1394, 0.1513,  ..., 0.1299, 0.3106, 0.2192],
         [0.1760, 0.1732, 0.1513,  ..., 0.4511, 0.2045, 0.2192],
         [0.4721, 0.5480, 0.5460,  ..., 0.2716, 0.0632, 0.3423]],
        [[0.2497, 0.2126, 0.1954,  ..., 0.2628, 0.2419, 0.1988],
         [0.4448, 0.3621, 0.4138,  ..., 0.3621, 0.2742, 0.4035],
         [0.1527, 0.2126, 0.1954,  ..., 0.1875, 0.2419, 0.1988],
         [0.1527, 0.2126, 0.1954,  ..., 0.1875, 0.2419, 0.1988]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 211:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-16 13:02:01,574 [Process: 0] Synchronize training processes
2024-08-16 13:02:01,574 [Process: 0] Evaluating...
2024-08-16 13:02:01,576 [Process: 0] EPOCH 212:
2024-08-16 13:02:01,578 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1492, 0.2095, 0.1365,  ..., 0.1317, 0.1795, 0.1717],
         [0.1514, 0.2095, 0.1365,  ..., 0.1317, 0.1795, 0.1717],
         [0.1492, 0.2095, 0.1365,  ..., 0.1317, 0.1795, 0.1717],
         [0.5503, 0.3715, 0.5906,  ..., 0.6049, 0.4615, 0.4849]],
        [[0.2389, 0.2538, 0.2500,  ..., 0.2500, 0.2494, 0.2486],
         [0.2773, 0.2623, 0.2500,  ..., 0.2500, 0.2517, 0.2541],
         [0.2450, 0.2419, 0.2500,  ..., 0.2500, 0.2494, 0.2486],
         [0.2389, 0.2419, 0.2500,  ..., 0.2500, 0.2494, 0.2486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1843, 0.1658, 0.1837,  ..., 0.1449, 0.1826, 0.3150],
         [0.1731, 0.1658, 0.1567,  ..., 0.1449, 0.1826, 0.1561],
         [0.1731, 0.1658, 0.1567,  ..., 0.1449, 0.1826, 0.1561],
         [0.4694, 0.5025, 0.5028,  ..., 0.5653, 0.4522, 0.3727]],
        [[0.1916, 0.3640, 0.2719,  ..., 0.2716, 0.2617, 0.2167],
         [0.3581, 0.3224, 0.2559,  ..., 0.2730, 0.3145, 0.2851],
         [0.2587, 0.1633, 0.2785,  ..., 0.2622, 0.2376, 0.2815],
         [0.1916, 0.1502, 0.1937,  ..., 0.1931, 0.1862, 0.2167]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 212:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:02:03,490 [Process: 0] Synchronize training processes
2024-08-16 13:02:03,491 [Process: 0] Evaluating...
2024-08-16 13:02:03,493 [Process: 0] EPOCH 213:
2024-08-16 13:02:03,494 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1789, 0.1581, 0.1295,  ..., 0.1940, 0.1665, 0.1774],
         [0.1789, 0.1581, 0.1295,  ..., 0.1940, 0.1688, 0.1774],
         [0.1789, 0.1581, 0.1295,  ..., 0.1940, 0.1665, 0.1774],
         [0.4633, 0.5256, 0.6114,  ..., 0.4180, 0.4982, 0.4677]],
        [[0.2500, 0.2612, 0.2640,  ..., 0.2497, 0.2616, 0.2500],
         [0.2500, 0.2463, 0.2453,  ..., 0.2497, 0.2461, 0.2500],
         [0.2500, 0.2463, 0.2453,  ..., 0.2510, 0.2461, 0.2500],
         [0.2500, 0.2463, 0.2453,  ..., 0.2497, 0.2461, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1445, 0.1881, 0.2183,  ..., 0.3554, 0.1510, 0.1688],
         [0.1445, 0.1368, 0.2183,  ..., 0.2057, 0.2517, 0.1688],
         [0.1445, 0.1368, 0.2183,  ..., 0.2057, 0.1510, 0.1688],
         [0.5665, 0.5383, 0.3451,  ..., 0.2332, 0.4463, 0.4937]],
        [[0.5138, 0.0852, 0.1292,  ..., 0.3024, 0.5632, 0.1977],
         [0.2646, 0.2247, 0.4439,  ..., 0.4736, 0.1286, 0.1977],
         [0.1839, 0.6049, 0.2977,  ..., 0.1501, 0.1796, 0.2670],
         [0.0376, 0.0852, 0.1292,  ..., 0.0739, 0.1286, 0.3376]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 213:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1438, 0.1278, 0.1146,  ..., 0.1618, 0.1678, 0.1776],
         [0.1438, 0.1351, 0.1146,  ..., 0.1618, 0.1678, 0.1808],
         [0.1438, 0.1278, 0.1146,  ..., 0.1618, 0.1678, 0.1776],
         [0.5687, 0.6093, 0.6563,  ..., 0.5146, 0.4967, 0.4641]],
        [[0.2500, 0.2500, 0.2473,  ..., 0.2493, 0.2500, 0.2478],
         [0.2500, 0.2500, 0.2473,  ..., 0.2520, 0.2500, 0.2566],
         [0.2500, 0.2500, 0.2580,  ..., 0.2493, 0.2500, 0.2478],
         [0.2500, 0.2500, 0.2473,  ..., 0.2493, 0.2500, 0.2478]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:05,391 [Process: 0] Synchronize training processes
2024-08-16 13:02:05,391 [Process: 0] Evaluating...
2024-08-16 13:02:05,393 [Process: 0] EPOCH 214:
2024-08-16 13:02:05,395 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3175, 0.3003, 0.3576,  ..., 0.3746, 0.1607, 0.1743],
         [0.0891, 0.1627, 0.2448,  ..., 0.1228, 0.1607, 0.1235],
         [0.0891, 0.1627, 0.1988,  ..., 0.1228, 0.1607, 0.1235],
         [0.5043, 0.3743, 0.1988,  ..., 0.3799, 0.5180, 0.5786]],
        [[0.2004, 0.1190, 0.2323,  ..., 0.1296, 0.1552, 0.1633],
         [0.3091, 0.4143, 0.3030,  ..., 0.1750, 0.3902, 0.2735],
         [0.2900, 0.3912, 0.2323,  ..., 0.6016, 0.2995, 0.4000],
         [0.2004, 0.0754, 0.2323,  ..., 0.0938, 0.1552, 0.1633]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 214:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1691, 0.1865, 0.1543,  ..., 0.1734, 0.1230, 0.1709],
         [0.1697, 0.1865, 0.1549,  ..., 0.1734, 0.1230, 0.1709],
         [0.1691, 0.1865, 0.1543,  ..., 0.1734, 0.1230, 0.1709],
         [0.4920, 0.4404, 0.5366,  ..., 0.4799, 0.6310, 0.4872]],
        [[0.2582, 0.2678, 0.2528,  ..., 0.2500, 0.2592, 0.2592],
         [0.2618, 0.2441, 0.2491,  ..., 0.2500, 0.2498, 0.2618],
         [0.2400, 0.2441, 0.2491,  ..., 0.2500, 0.2455, 0.2395],
         [0.2400, 0.2441, 0.2491,  ..., 0.2500, 0.2455, 0.2395]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:07,323 [Process: 0] Synchronize training processes
2024-08-16 13:02:07,323 [Process: 0] Evaluating...
2024-08-16 13:02:07,325 [Process: 0] EPOCH 215:
2024-08-16 13:02:07,327 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1173, 0.1920, 0.2199,  ..., 0.1945, 0.0780, 0.1158],
         [0.1173, 0.1920, 0.2941,  ..., 0.1518, 0.1263, 0.2432],
         [0.2835, 0.1920, 0.3503,  ..., 0.3009, 0.5194, 0.5058],
         [0.4818, 0.4241, 0.1357,  ..., 0.3528, 0.2762, 0.1352]],
        [[0.2500, 0.2497, 0.3670,  ..., 0.3546, 0.5326, 0.3557],
         [0.2500, 0.3384, 0.1723,  ..., 0.2151, 0.1212, 0.3405],
         [0.2500, 0.2060, 0.2952,  ..., 0.2151, 0.2308, 0.2107],
         [0.2500, 0.2060, 0.1655,  ..., 0.2151, 0.1155, 0.0932]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 215:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1540, 0.1472, 0.1523,  ..., 0.1544, 0.1716, 0.1415],
         [0.1540, 0.1472, 0.1523,  ..., 0.1544, 0.1716, 0.1415],
         [0.1540, 0.1472, 0.1523,  ..., 0.1544, 0.1716, 0.1415],
         [0.5380, 0.5585, 0.5430,  ..., 0.5367, 0.4853, 0.5754]],
        [[0.2733, 0.2465, 0.2500,  ..., 0.2493, 0.2500, 0.2487],
         [0.2510, 0.2542, 0.2500,  ..., 0.2520, 0.2500, 0.2538],
         [0.2401, 0.2528, 0.2500,  ..., 0.2493, 0.2500, 0.2487],
         [0.2357, 0.2465, 0.2500,  ..., 0.2493, 0.2500, 0.2487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:09,224 [Process: 0] Synchronize training processes
2024-08-16 13:02:09,224 [Process: 0] Evaluating...
2024-08-16 13:02:09,226 [Process: 0] EPOCH 216:
2024-08-16 13:02:09,228 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1377, 0.1812, 0.1680,  ..., 0.2085, 0.1382, 0.1479],
         [0.1377, 0.1898, 0.1767,  ..., 0.2085, 0.2327, 0.1711],
         [0.1377, 0.1812, 0.1680,  ..., 0.2085, 0.1382, 0.1479],
         [0.5870, 0.4478, 0.4874,  ..., 0.3744, 0.4909, 0.5332]],
        [[0.2338, 0.2500, 0.1518,  ..., 0.2014, 0.2655, 0.4504],
         [0.3126, 0.2500, 0.1518,  ..., 0.0745, 0.3326, 0.1982],
         [0.2641, 0.2500, 0.5447,  ..., 0.6496, 0.2330, 0.1757],
         [0.1896, 0.2500, 0.1518,  ..., 0.0745, 0.1689, 0.1757]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 216:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1643, 0.1211, 0.1827,  ..., 0.1030, 0.1433, 0.2101],
         [0.1643, 0.1226, 0.1827,  ..., 0.1030, 0.1585, 0.2101],
         [0.1643, 0.1211, 0.1827,  ..., 0.1030, 0.1433, 0.2101],
         [0.5070, 0.6352, 0.4520,  ..., 0.6910, 0.5550, 0.3697]],
        [[0.2500, 0.2500, 0.2433,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2701,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2433,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2433,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:11,120 [Process: 0] Synchronize training processes
2024-08-16 13:02:11,120 [Process: 0] Evaluating...
2024-08-16 13:02:11,122 [Process: 0] EPOCH 217:
2024-08-16 13:02:11,124 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1626, 0.1816, 0.1826,  ..., 0.1711, 0.1766, 0.2342],
         [0.1626, 0.1816, 0.1819,  ..., 0.1711, 0.1766, 0.2342],
         [0.1626, 0.1816, 0.1709,  ..., 0.1711, 0.1766, 0.2342],
         [0.5121, 0.4552, 0.4646,  ..., 0.4867, 0.4702, 0.2975]],
        [[0.2081, 0.3278, 0.2962,  ..., 0.4453, 0.1687, 0.3016],
         [0.4269, 0.2845, 0.3733,  ..., 0.1214, 0.2478, 0.3064],
         [0.2437, 0.2544, 0.2447,  ..., 0.3649, 0.4149, 0.3406],
         [0.1212, 0.1333, 0.0858,  ..., 0.0683, 0.1687, 0.0515]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 217:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1826, 0.1723, 0.1784,  ..., 0.1954, 0.1748, 0.1769],
         [0.1826, 0.1723, 0.1784,  ..., 0.1954, 0.1748, 0.1769],
         [0.1826, 0.1723, 0.1784,  ..., 0.1954, 0.1748, 0.1769],
         [0.4522, 0.4830, 0.4647,  ..., 0.4138, 0.4755, 0.4692]],
        [[0.2500, 0.2431, 0.2500,  ..., 0.2744, 0.2500, 0.2500],
         [0.2500, 0.2706, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2431, 0.2500,  ..., 0.2378, 0.2500, 0.2500],
         [0.2500, 0.2431, 0.2500,  ..., 0.2378, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:13,020 [Process: 0] Synchronize training processes
2024-08-16 13:02:13,021 [Process: 0] Evaluating...
2024-08-16 13:02:13,022 [Process: 0] EPOCH 218:
2024-08-16 13:02:13,024 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2031, 0.1888, 0.2486,  ..., 0.2314, 0.1696, 0.1104],
         [0.2031, 0.1888, 0.2486,  ..., 0.2314, 0.1696, 0.1104],
         [0.2031, 0.2250, 0.2542,  ..., 0.2314, 0.1696, 0.3314],
         [0.3908, 0.3974, 0.2486,  ..., 0.3058, 0.4912, 0.4478]],
        [[0.3110, 0.3126, 0.1989,  ..., 0.2245, 0.2595, 0.1915],
         [0.3379, 0.3761, 0.3817,  ..., 0.3265, 0.3522, 0.3940],
         [0.1934, 0.1927, 0.2205,  ..., 0.2245, 0.1942, 0.2271],
         [0.1577, 0.1185, 0.1989,  ..., 0.2245, 0.1942, 0.1874]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 218:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1517, 0.1501, 0.1614,  ..., 0.1574, 0.1390, 0.1428],
         [0.1517, 0.1501, 0.1845,  ..., 0.1575, 0.1390, 0.1428],
         [0.1517, 0.1501, 0.1614,  ..., 0.1574, 0.1390, 0.1428],
         [0.5450, 0.5498, 0.4926,  ..., 0.5277, 0.5831, 0.5717]],
        [[0.2461, 0.2323, 0.2500,  ..., 0.2488, 0.2500, 0.2500],
         [0.2617, 0.2971, 0.2500,  ..., 0.2537, 0.2500, 0.2500],
         [0.2461, 0.2382, 0.2500,  ..., 0.2488, 0.2500, 0.2500],
         [0.2461, 0.2323, 0.2500,  ..., 0.2488, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:14,921 [Process: 0] Synchronize training processes
2024-08-16 13:02:14,922 [Process: 0] Evaluating...
2024-08-16 13:02:14,924 [Process: 0] EPOCH 219:
2024-08-16 13:02:14,925 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2043, 0.3116, 0.3159,  ..., 0.4764, 0.2923, 0.2789],
         [0.2043, 0.3550, 0.1792,  ..., 0.1569, 0.2359, 0.1004],
         [0.2854, 0.2097, 0.1827,  ..., 0.1179, 0.2359, 0.1004],
         [0.3060, 0.1237, 0.3222,  ..., 0.2487, 0.2359, 0.5203]],
        [[0.2126, 0.3417, 0.2490,  ..., 0.2357, 0.2187, 0.2396],
         [0.3622, 0.2549, 0.3032,  ..., 0.2930, 0.3439, 0.2812],
         [0.2126, 0.2017, 0.2239,  ..., 0.2357, 0.2187, 0.2396],
         [0.2126, 0.2017, 0.2239,  ..., 0.2357, 0.2187, 0.2396]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 219:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1280, 0.1331, 0.1567,  ..., 0.1448, 0.1487, 0.2007],
         [0.1280, 0.1331, 0.1567,  ..., 0.1448, 0.1487, 0.2007],
         [0.1280, 0.1331, 0.1567,  ..., 0.1448, 0.1487, 0.2007],
         [0.6159, 0.6007, 0.5300,  ..., 0.5655, 0.5539, 0.3979]],
        [[0.2454, 0.2449, 0.2445,  ..., 0.2500, 0.2500, 0.2616],
         [0.2639, 0.2652, 0.2665,  ..., 0.2500, 0.2500, 0.2558],
         [0.2454, 0.2449, 0.2445,  ..., 0.2500, 0.2500, 0.2417],
         [0.2454, 0.2449, 0.2445,  ..., 0.2500, 0.2500, 0.2409]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:16,827 [Process: 0] Synchronize training processes
2024-08-16 13:02:16,827 [Process: 0] Evaluating...
2024-08-16 13:02:16,829 [Process: 0] EPOCH 220:
2024-08-16 13:02:16,831 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1299, 0.1455, 0.1401,  ..., 0.1453, 0.1396, 0.1823],
         [0.1299, 0.1455, 0.1401,  ..., 0.2267, 0.1450, 0.1823],
         [0.1299, 0.2960, 0.2059,  ..., 0.1453, 0.3915, 0.1823],
         [0.6104, 0.4130, 0.5138,  ..., 0.4828, 0.3238, 0.4531]],
        [[0.2521, 0.3908, 0.4066,  ..., 0.4422, 0.2500, 0.4243],
         [0.2710, 0.2897, 0.1891,  ..., 0.3705, 0.2500, 0.1560],
         [0.3608, 0.1969, 0.2722,  ..., 0.0937, 0.2500, 0.3151],
         [0.1161, 0.1226, 0.1321,  ..., 0.0937, 0.2500, 0.1046]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 220:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1718, 0.1429, 0.1661,  ..., 0.1530, 0.1696, 0.2016],
         [0.1718, 0.1429, 0.1661,  ..., 0.1530, 0.1696, 0.2016],
         [0.1718, 0.1429, 0.1661,  ..., 0.1530, 0.1696, 0.2016],
         [0.4845, 0.5713, 0.5016,  ..., 0.5411, 0.4911, 0.3951]],
        [[0.2500, 0.2478, 0.2500,  ..., 0.2500, 0.2470, 0.2494],
         [0.2500, 0.2567, 0.2500,  ..., 0.2500, 0.2590, 0.2517],
         [0.2500, 0.2478, 0.2500,  ..., 0.2500, 0.2470, 0.2494],
         [0.2500, 0.2478, 0.2500,  ..., 0.2500, 0.2470, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:18,721 [Process: 0] Synchronize training processes
2024-08-16 13:02:18,721 [Process: 0] Evaluating...
2024-08-16 13:02:18,723 [Process: 0] EPOCH 221:
2024-08-16 13:02:18,725 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1576, 0.1866, 0.1660,  ..., 0.1979, 0.2122, 0.2166],
         [0.1576, 0.1866, 0.1660,  ..., 0.1979, 0.2122, 0.2358],
         [0.1576, 0.1866, 0.1660,  ..., 0.1979, 0.2122, 0.2166],
         [0.5272, 0.4401, 0.5020,  ..., 0.4062, 0.3633, 0.3310]],
        [[0.3253, 0.3007, 0.3036,  ..., 0.4198, 0.2392, 0.2833],
         [0.3092, 0.3170, 0.3098,  ..., 0.2556, 0.2823, 0.3385],
         [0.1828, 0.1911, 0.2078,  ..., 0.1886, 0.2392, 0.1891],
         [0.1828, 0.1911, 0.1788,  ..., 0.1360, 0.2392, 0.1891]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 221:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1489, 0.1653, 0.1089,  ..., 0.1673, 0.1525, 0.1155],
         [0.1489, 0.1653, 0.1089,  ..., 0.1707, 0.1525, 0.1155],
         [0.1489, 0.1653, 0.1089,  ..., 0.1673, 0.1525, 0.1155],
         [0.5533, 0.5041, 0.6734,  ..., 0.4947, 0.5425, 0.6534]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2789, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2404, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2404, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2404, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:02:20,618 [Process: 0] Synchronize training processes
2024-08-16 13:02:20,618 [Process: 0] Evaluating...
2024-08-16 13:02:20,620 [Process: 0] EPOCH 222:
2024-08-16 13:02:20,622 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4763, 0.1466, 0.3104,  ..., 0.1440, 0.2500, 0.1702],
         [0.0901, 0.1466, 0.1590,  ..., 0.1440, 0.2500, 0.1702],
         [0.0901, 0.1466, 0.1048,  ..., 0.4687, 0.2500, 0.1702],
         [0.3436, 0.5602, 0.4257,  ..., 0.2434, 0.2500, 0.4893]],
        [[0.3589, 0.4099, 0.2500,  ..., 0.3430, 0.2500, 0.2011],
         [0.3353, 0.2826, 0.2500,  ..., 0.2468, 0.2500, 0.3271],
         [0.1861, 0.2118, 0.2500,  ..., 0.2338, 0.2500, 0.2799],
         [0.1197, 0.0957, 0.2500,  ..., 0.1764, 0.2500, 0.1920]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 222:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1861, 0.1402, 0.1821,  ..., 0.1543, 0.1961, 0.1324],
         [0.1861, 0.1402, 0.1821,  ..., 0.1543, 0.1961, 0.1324],
         [0.1861, 0.1402, 0.1821,  ..., 0.1543, 0.1961, 0.1324],
         [0.4418, 0.5794, 0.4538,  ..., 0.5371, 0.4116, 0.6028]],
        [[0.2500, 0.2439, 0.2500,  ..., 0.2500, 0.2500, 0.2400],
         [0.2500, 0.2684, 0.2500,  ..., 0.2500, 0.2500, 0.2751],
         [0.2500, 0.2439, 0.2500,  ..., 0.2500, 0.2500, 0.2450],
         [0.2500, 0.2439, 0.2500,  ..., 0.2500, 0.2500, 0.2400]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2347, 0.2298, 0.1272,  ..., 0.2500, 0.2250, 0.2464],
         [0.2347, 0.2298, 0.1286,  ..., 0.2500, 0.2250, 0.1303],
         [0.2347, 0.2298, 0.1265,  ..., 0.2500, 0.2250, 0.1303],
         [0.2960, 0.3106, 0.6177,  ..., 0.2500, 0.3250, 0.4931]],
        [[0.4889, 0.3034, 0.2857,  ..., 0.2500, 0.2500, 0.2187],
         [0.1892, 0.1981, 0.3833,  ..., 0.2500, 0.2500, 0.2187],
         [0.1322, 0.1524, 0.1655,  ..., 0.2500, 0.2500, 0.2187],
         [0.1898, 0.3461, 0.1655,  ..., 0.2500, 0.2500, 0.3438]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:22,523 [Process: 0] Synchronize training processes
2024-08-16 13:02:22,523 [Process: 0] Evaluating...
2024-08-16 13:02:22,525 [Process: 0] EPOCH 223:
2024-08-16 13:02:22,527 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 223:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1245, 0.1319, 0.1567,  ..., 0.1769, 0.1581, 0.1847],
         [0.1245, 0.1319, 0.1587,  ..., 0.1769, 0.1581, 0.1847],
         [0.1245, 0.1319, 0.1567,  ..., 0.1769, 0.1581, 0.1847],
         [0.6266, 0.6043, 0.5280,  ..., 0.4692, 0.5258, 0.4460]],
        [[0.2500, 0.2500, 0.2569,  ..., 0.2500, 0.2500, 0.2461],
         [0.2500, 0.2500, 0.2578,  ..., 0.2500, 0.2500, 0.2617],
         [0.2500, 0.2500, 0.2426,  ..., 0.2500, 0.2500, 0.2461],
         [0.2500, 0.2500, 0.2426,  ..., 0.2500, 0.2500, 0.2461]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2372, 0.1647, 0.1782,  ..., 0.1927, 0.3197, 0.2183],
         [0.1517, 0.1647, 0.1782,  ..., 0.2127, 0.1652, 0.2183],
         [0.1517, 0.1647, 0.1782,  ..., 0.1927, 0.1408, 0.2183],
         [0.4594, 0.5060, 0.4653,  ..., 0.4019, 0.3743, 0.3452]],
        [[0.1834, 0.5407, 0.3092,  ..., 0.2923, 0.1707, 0.4707],
         [0.1812, 0.1494, 0.2930,  ..., 0.3491, 0.3584, 0.3299],
         [0.4542, 0.2100, 0.2182,  ..., 0.2438, 0.3061, 0.1322],
         [0.1812, 0.0999, 0.1796,  ..., 0.1148, 0.1647, 0.0672]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 224:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:02:24,421 [Process: 0] Synchronize training processes
2024-08-16 13:02:24,421 [Process: 0] Evaluating...
2024-08-16 13:02:24,423 [Process: 0] EPOCH 224:
2024-08-16 13:02:24,425 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1778, 0.1999, 0.1312,  ..., 0.1527, 0.1255, 0.2002],
         [0.1863, 0.1999, 0.1312,  ..., 0.1527, 0.1255, 0.2032],
         [0.1778, 0.1999, 0.1312,  ..., 0.1527, 0.1255, 0.2002],
         [0.4581, 0.4003, 0.6063,  ..., 0.5418, 0.6235, 0.3963]],
        [[0.2458, 0.2500, 0.2491,  ..., 0.2500, 0.2500, 0.2500],
         [0.2625, 0.2500, 0.2528,  ..., 0.2500, 0.2500, 0.2500],
         [0.2458, 0.2500, 0.2491,  ..., 0.2500, 0.2500, 0.2500],
         [0.2458, 0.2500, 0.2491,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1824, 0.1690, 0.1576,  ..., 0.2556, 0.2000, 0.2482],
         [0.1935, 0.1690, 0.1576,  ..., 0.1778, 0.2000, 0.1839],
         [0.1824, 0.1690, 0.1675,  ..., 0.1778, 0.2000, 0.2021],
         [0.4416, 0.4930, 0.5172,  ..., 0.3887, 0.4001, 0.3658]],
        [[0.2182, 0.2160, 0.1757,  ..., 0.1799, 0.2673, 0.4641],
         [0.2226, 0.2160, 0.2305,  ..., 0.1799, 0.3439, 0.1533],
         [0.3409, 0.3520, 0.4493,  ..., 0.4603, 0.2412, 0.2613],
         [0.2182, 0.2160, 0.1445,  ..., 0.1799, 0.1476, 0.1213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 225:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:02:26,333 [Process: 0] Synchronize training processes
2024-08-16 13:02:26,333 [Process: 0] Evaluating...
2024-08-16 13:02:26,335 [Process: 0] EPOCH 225:
2024-08-16 13:02:26,338 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1631, 0.1666, 0.1566,  ..., 0.1211, 0.2015, 0.1932],
         [0.1631, 0.1812, 0.1566,  ..., 0.1211, 0.2208, 0.1945],
         [0.1631, 0.1666, 0.1566,  ..., 0.1211, 0.2015, 0.1932],
         [0.5106, 0.4857, 0.5303,  ..., 0.6367, 0.3762, 0.4191]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1821, 0.3391, 0.1778,  ..., 0.3586, 0.3492, 0.1490],
         [0.1821, 0.1246, 0.1778,  ..., 0.1216, 0.2442, 0.1490],
         [0.1821, 0.1246, 0.1778,  ..., 0.1216, 0.1356, 0.1490],
         [0.4536, 0.4116, 0.4665,  ..., 0.3981, 0.2709, 0.5530]],
        [[0.4924, 0.3717, 0.3757,  ..., 0.3199, 0.1949, 0.3520],
         [0.2496, 0.2483, 0.2587,  ..., 0.1743, 0.2083, 0.2322],
         [0.1454, 0.2877, 0.2410,  ..., 0.3737, 0.4019, 0.2332],
         [0.1126, 0.0923, 0.1247,  ..., 0.1321, 0.1949, 0.1826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 226:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:02:28,243 [Process: 0] Synchronize training processes
2024-08-16 13:02:28,244 [Process: 0] Evaluating...
2024-08-16 13:02:28,245 [Process: 0] EPOCH 226:
2024-08-16 13:02:28,247 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1629, 0.1401, 0.1673,  ..., 0.1983, 0.1690, 0.1441],
         [0.1629, 0.1401, 0.1673,  ..., 0.1983, 0.1690, 0.1441],
         [0.1629, 0.1401, 0.1673,  ..., 0.1983, 0.1690, 0.1441],
         [0.5114, 0.5798, 0.4981,  ..., 0.4051, 0.4930, 0.5676]],
        [[0.2495, 0.2500, 0.2500,  ..., 0.2451, 0.2500, 0.2500],
         [0.2514, 0.2500, 0.2500,  ..., 0.2647, 0.2500, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2451, 0.2500, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2451, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1478, 0.1699, 0.1021,  ..., 0.1438, 0.3730, 0.2071],
         [0.1478, 0.1699, 0.1021,  ..., 0.1438, 0.1135, 0.2063],
         [0.1478, 0.1699, 0.1021,  ..., 0.1438, 0.1135, 0.2063],
         [0.5566, 0.4904, 0.6938,  ..., 0.5686, 0.4000, 0.3803]],
        [[0.2403, 0.2237, 0.2791,  ..., 0.1845, 0.1274, 0.3929],
         [0.3259, 0.4594, 0.1440,  ..., 0.2537, 0.3196, 0.2517],
         [0.2998, 0.1822, 0.4850,  ..., 0.4598, 0.4256, 0.1973],
         [0.1340, 0.1347, 0.0918,  ..., 0.1019, 0.1274, 0.1581]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 227:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:02:30,167 [Process: 0] Synchronize training processes
2024-08-16 13:02:30,167 [Process: 0] Evaluating...
2024-08-16 13:02:30,169 [Process: 0] EPOCH 227:
2024-08-16 13:02:30,171 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:02:32,064 [Process: 0] Synchronize training processes
2024-08-16 13:02:32,065 [Process: 0] Evaluating...
2024-08-16 13:02:32,067 [Process: 0] EPOCH 228:
2024-08-16 13:02:32,069 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1492, 0.1525, 0.1778,  ..., 0.1484, 0.1436, 0.1685],
         [0.1492, 0.1752, 0.1778,  ..., 0.1484, 0.1610, 0.1715],
         [0.1492, 0.1525, 0.1778,  ..., 0.1484, 0.1436, 0.1685],
         [0.5525, 0.5198, 0.4665,  ..., 0.5549, 0.5519, 0.4914]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2597, 0.2550],
         [0.2500, 0.2500, 0.2500,  ..., 0.2501, 0.2468, 0.2483],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2468, 0.2483],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2468, 0.2483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1043, 0.1135, 0.1225,  ..., 0.2843, 0.1396, 0.1582],
         [0.1043, 0.1135, 0.1225,  ..., 0.2442, 0.1396, 0.1582],
         [0.4348, 0.1639, 0.1225,  ..., 0.2357, 0.1396, 0.2595],
         [0.3566, 0.6091, 0.6325,  ..., 0.2357, 0.5811, 0.4241]],
        [[0.2135, 0.4016, 0.4155,  ..., 0.3491, 0.3465, 0.2500],
         [0.1928, 0.2431, 0.3038,  ..., 0.2432, 0.3788, 0.2500],
         [0.4643, 0.1214, 0.1404,  ..., 0.2039, 0.2173, 0.2500],
         [0.1294, 0.2339, 0.1404,  ..., 0.2039, 0.0573, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 228:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:02:33,969 [Process: 0] Synchronize training processes
2024-08-16 13:02:33,969 [Process: 0] Evaluating...
2024-08-16 13:02:33,971 [Process: 0] EPOCH 229:
2024-08-16 13:02:33,973 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1742, 0.1698, 0.1775,  ..., 0.1823, 0.1407, 0.1537],
         [0.1742, 0.1698, 0.1775,  ..., 0.1823, 0.1407, 0.1571],
         [0.1742, 0.1698, 0.1775,  ..., 0.1823, 0.1407, 0.1537],
         [0.4774, 0.4907, 0.4675,  ..., 0.4530, 0.5779, 0.5355]],
        [[0.2500, 0.2519, 0.2500,  ..., 0.2500, 0.2498, 0.2500],
         [0.2500, 0.2494, 0.2500,  ..., 0.2500, 0.2507, 0.2500],
         [0.2500, 0.2494, 0.2500,  ..., 0.2500, 0.2498, 0.2500],
         [0.2500, 0.2494, 0.2500,  ..., 0.2500, 0.2498, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4688, 0.2223, 0.2503,  ..., 0.5079, 0.3199, 0.3454],
         [0.0974, 0.2223, 0.1843,  ..., 0.2153, 0.1968, 0.1946],
         [0.0974, 0.2223, 0.1843,  ..., 0.1384, 0.1968, 0.1946],
         [0.3363, 0.3332, 0.3811,  ..., 0.1384, 0.2864, 0.2653]],
        [[0.2327, 0.2697, 0.2343,  ..., 0.1885, 0.1607, 0.2500],
         [0.2327, 0.2084, 0.4443,  ..., 0.2392, 0.1607, 0.2500],
         [0.3019, 0.3989, 0.2341,  ..., 0.3838, 0.5180, 0.2500],
         [0.2327, 0.1230, 0.0872,  ..., 0.1885, 0.1607, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 229:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:02:35,875 [Process: 0] Synchronize training processes
2024-08-16 13:02:35,876 [Process: 0] Evaluating...
2024-08-16 13:02:35,878 [Process: 0] EPOCH 230:
2024-08-16 13:02:35,880 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1355, 0.1574, 0.1546,  ..., 0.1741, 0.1609, 0.1137],
         [0.1355, 0.1574, 0.1686,  ..., 0.1804, 0.1609, 0.1308],
         [0.1355, 0.1574, 0.1546,  ..., 0.1741, 0.1609, 0.1137],
         [0.5936, 0.5277, 0.5222,  ..., 0.4714, 0.5172, 0.6418]],
        [[0.2500, 0.2468, 0.2500,  ..., 0.2466, 0.2500, 0.2500],
         [0.2500, 0.2596, 0.2500,  ..., 0.2602, 0.2500, 0.2500],
         [0.2500, 0.2468, 0.2500,  ..., 0.2466, 0.2500, 0.2500],
         [0.2500, 0.2468, 0.2500,  ..., 0.2466, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1285, 0.1661, 0.1066,  ..., 0.1489, 0.1373, 0.2236],
         [0.1285, 0.1661, 0.1066,  ..., 0.1489, 0.1373, 0.2236],
         [0.4057, 0.1661, 0.1666,  ..., 0.1489, 0.1373, 0.2236],
         [0.3373, 0.5017, 0.6203,  ..., 0.5534, 0.5882, 0.3292]],
        [[0.1536, 0.2500, 0.3279,  ..., 0.2559, 0.2906, 0.1703],
         [0.5392, 0.2500, 0.2473,  ..., 0.2872, 0.2791, 0.3244],
         [0.1536, 0.2500, 0.2471,  ..., 0.2872, 0.2151, 0.3349],
         [0.1536, 0.2500, 0.1776,  ..., 0.1697, 0.2151, 0.1703]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 230:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:02:37,780 [Process: 0] Synchronize training processes
2024-08-16 13:02:37,780 [Process: 0] Evaluating...
2024-08-16 13:02:37,782 [Process: 0] EPOCH 231:
2024-08-16 13:02:37,784 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1550, 0.1383, 0.1852,  ..., 0.1426, 0.1610, 0.1386],
         [0.1572, 0.1383, 0.2057,  ..., 0.1426, 0.1610, 0.1458],
         [0.1550, 0.1383, 0.1852,  ..., 0.1426, 0.1610, 0.1386],
         [0.5328, 0.5851, 0.4239,  ..., 0.5723, 0.5170, 0.5769]],
        [[0.2483, 0.2460, 0.2585,  ..., 0.2500, 0.2500, 0.2486],
         [0.2550, 0.2619, 0.2537,  ..., 0.2500, 0.2500, 0.2541],
         [0.2483, 0.2460, 0.2439,  ..., 0.2500, 0.2500, 0.2486],
         [0.2483, 0.2460, 0.2439,  ..., 0.2500, 0.2500, 0.2486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1856, 0.1860, 0.1399,  ..., 0.2220, 0.1698, 0.2028],
         [0.1856, 0.1860, 0.1399,  ..., 0.2220, 0.1698, 0.2028],
         [0.1856, 0.1860, 0.1399,  ..., 0.2220, 0.1698, 0.2028],
         [0.4431, 0.4421, 0.5804,  ..., 0.3340, 0.4907, 0.3915]],
        [[0.2757, 0.2942, 0.2436,  ..., 0.2596, 0.2883, 0.1531],
         [0.2844, 0.3369, 0.3446,  ..., 0.2656, 0.2016, 0.1822],
         [0.2722, 0.2717, 0.2880,  ..., 0.3817, 0.3556, 0.5183],
         [0.1677, 0.0972, 0.1238,  ..., 0.0931, 0.1545, 0.1464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 231:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-16 13:02:39,679 [Process: 0] Synchronize training processes
2024-08-16 13:02:39,679 [Process: 0] Evaluating...
2024-08-16 13:02:39,681 [Process: 0] EPOCH 232:
2024-08-16 13:02:39,683 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2020, 0.1455, 0.1297,  ..., 0.1297, 0.2037, 0.1719],
         [0.2020, 0.1455, 0.1297,  ..., 0.1297, 0.2037, 0.1719],
         [0.2020, 0.1455, 0.1297,  ..., 0.1297, 0.2037, 0.1719],
         [0.3939, 0.5634, 0.6109,  ..., 0.6110, 0.3889, 0.4843]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2476, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2573, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2476, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2476, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2012, 0.1754, 0.1266,  ..., 0.1968, 0.2303, 0.1017],
         [0.2012, 0.1754, 0.1266,  ..., 0.3213, 0.2303, 0.1017],
         [0.2012, 0.1820, 0.1266,  ..., 0.2850, 0.2303, 0.1017],
         [0.3963, 0.4672, 0.6203,  ..., 0.1968, 0.3091, 0.6950]],
        [[0.2746, 0.1913, 0.1899,  ..., 0.3238, 0.3655, 0.2702],
         [0.3149, 0.3580, 0.3334,  ..., 0.2233, 0.3231, 0.3341],
         [0.2373, 0.2926, 0.3461,  ..., 0.3309, 0.1865, 0.2235],
         [0.1732, 0.1582, 0.1307,  ..., 0.1220, 0.1248, 0.1722]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 232:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1879, 0.1246, 0.1165,  ..., 0.1512, 0.1549, 0.1234],
         [0.1879, 0.1246, 0.1165,  ..., 0.1512, 0.1549, 0.1234],
         [0.1879, 0.1246, 0.1165,  ..., 0.1512, 0.1549, 0.1234],
         [0.4363, 0.6262, 0.6504,  ..., 0.5463, 0.5352, 0.6298]],
        [[0.2436, 0.2497, 0.2441,  ..., 0.2531, 0.2440, 0.2462],
         [0.2691, 0.2509, 0.2677,  ..., 0.2490, 0.2679, 0.2683],
         [0.2436, 0.2497, 0.2441,  ..., 0.2490, 0.2440, 0.2428],
         [0.2436, 0.2497, 0.2441,  ..., 0.2490, 0.2440, 0.2428]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:41,581 [Process: 0] Synchronize training processes
2024-08-16 13:02:41,581 [Process: 0] Evaluating...
2024-08-16 13:02:41,583 [Process: 0] EPOCH 233:
2024-08-16 13:02:41,585 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2068, 0.1973, 0.2500,  ..., 0.1256, 0.4500, 0.2874],
         [0.2068, 0.1831, 0.2500,  ..., 0.1256, 0.1238, 0.1806],
         [0.2068, 0.2029, 0.2500,  ..., 0.1256, 0.1238, 0.1806],
         [0.3796, 0.4166, 0.2500,  ..., 0.6232, 0.3024, 0.3515]],
        [[0.1325, 0.1941, 0.0873,  ..., 0.1543, 0.0608, 0.1408],
         [0.3899, 0.1941, 0.1772,  ..., 0.1940, 0.0608, 0.2106],
         [0.3451, 0.4035, 0.6482,  ..., 0.4974, 0.8175, 0.5079],
         [0.1325, 0.2083, 0.0873,  ..., 0.1543, 0.0608, 0.1408]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 233:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1337, 0.2221, 0.1372,  ..., 0.1439, 0.1847, 0.1779],
         [0.1337, 0.2220, 0.1372,  ..., 0.1488, 0.2142, 0.1779],
         [0.1337, 0.2220, 0.1372,  ..., 0.1439, 0.1847, 0.1779],
         [0.5990, 0.3338, 0.5884,  ..., 0.5634, 0.4163, 0.4662]],
        [[0.2500, 0.2500, 0.2452,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2645,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2452,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2452,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:43,522 [Process: 0] Synchronize training processes
2024-08-16 13:02:43,522 [Process: 0] Evaluating...
2024-08-16 13:02:43,524 [Process: 0] EPOCH 234:
2024-08-16 13:02:43,526 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1267, 0.1773, 0.1737,  ..., 0.1615, 0.1998, 0.1499],
         [0.1267, 0.1773, 0.2398,  ..., 0.1615, 0.1998, 0.1499],
         [0.1267, 0.1773, 0.1737,  ..., 0.1615, 0.1998, 0.1499],
         [0.6198, 0.4682, 0.4127,  ..., 0.5156, 0.4006, 0.5504]],
        [[0.2516, 0.1319, 0.2646,  ..., 0.3465, 0.3212, 0.4090],
         [0.1987, 0.2300, 0.2206,  ..., 0.3336, 0.2543, 0.2645],
         [0.3509, 0.5515, 0.2941,  ..., 0.1600, 0.2123, 0.1936],
         [0.1987, 0.0865, 0.2206,  ..., 0.1600, 0.2123, 0.1329]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 234:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1867, 0.1435, 0.1559,  ..., 0.1629, 0.1539, 0.1637],
         [0.1867, 0.1435, 0.1559,  ..., 0.1693, 0.1539, 0.1637],
         [0.1867, 0.1435, 0.1559,  ..., 0.1629, 0.1539, 0.1637],
         [0.4399, 0.5694, 0.5324,  ..., 0.5048, 0.5382, 0.5090]],
        [[0.2616, 0.2430, 0.2500,  ..., 0.2500, 0.2500, 0.2420],
         [0.2488, 0.2710, 0.2500,  ..., 0.2500, 0.2500, 0.2741],
         [0.2448, 0.2430, 0.2500,  ..., 0.2500, 0.2500, 0.2420],
         [0.2448, 0.2430, 0.2500,  ..., 0.2500, 0.2500, 0.2420]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:45,448 [Process: 0] Synchronize training processes
2024-08-16 13:02:45,448 [Process: 0] Evaluating...
2024-08-16 13:02:45,450 [Process: 0] EPOCH 235:
2024-08-16 13:02:45,452 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2074, 0.2982, 0.5145,  ..., 0.2733, 0.1561, 0.3503],
         [0.2074, 0.1365, 0.0829,  ..., 0.1563, 0.1561, 0.1312],
         [0.2074, 0.1365, 0.1858,  ..., 0.1728, 0.1561, 0.1312],
         [0.3779, 0.4289, 0.2168,  ..., 0.3976, 0.5317, 0.3873]],
        [[0.1916, 0.1177, 0.2237,  ..., 0.2299, 0.1329, 0.1266],
         [0.2419, 0.5876, 0.3288,  ..., 0.2299, 0.2804, 0.1932],
         [0.3748, 0.1769, 0.2237,  ..., 0.3102, 0.4538, 0.6036],
         [0.1916, 0.1177, 0.2237,  ..., 0.2299, 0.1329, 0.0766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 235:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1245, 0.1555, 0.1516,  ..., 0.1679, 0.1487, 0.1685],
         [0.1245, 0.1555, 0.1533,  ..., 0.1679, 0.1487, 0.1685],
         [0.1245, 0.1555, 0.1516,  ..., 0.1679, 0.1487, 0.1685],
         [0.6264, 0.5335, 0.5436,  ..., 0.4963, 0.5540, 0.4945]],
        [[0.2488, 0.2500, 0.2470,  ..., 0.2487, 0.2500, 0.2500],
         [0.2537, 0.2500, 0.2589,  ..., 0.2538, 0.2500, 0.2500],
         [0.2488, 0.2500, 0.2470,  ..., 0.2487, 0.2500, 0.2500],
         [0.2488, 0.2500, 0.2470,  ..., 0.2487, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:47,369 [Process: 0] Synchronize training processes
2024-08-16 13:02:47,369 [Process: 0] Evaluating...
2024-08-16 13:02:47,371 [Process: 0] EPOCH 236:
2024-08-16 13:02:47,373 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1782, 0.2013, 0.1591,  ..., 0.2017, 0.2500, 0.1909],
         [0.2499, 0.2064, 0.1591,  ..., 0.2017, 0.2500, 0.1909],
         [0.1782, 0.2013, 0.1591,  ..., 0.2017, 0.2500, 0.1909],
         [0.3937, 0.3909, 0.5226,  ..., 0.3949, 0.2500, 0.4273]],
        [[0.3045, 0.2628, 0.3629,  ..., 0.2435, 0.3845, 0.3426],
         [0.2788, 0.2535, 0.3175,  ..., 0.3705, 0.2504, 0.3064],
         [0.2785, 0.3089, 0.1598,  ..., 0.2355, 0.2543, 0.2148],
         [0.1383, 0.1748, 0.1598,  ..., 0.1504, 0.1109, 0.1362]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 236:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1960, 0.1514, 0.1365,  ..., 0.1362, 0.1063, 0.1271],
         [0.1960, 0.1514, 0.1365,  ..., 0.1395, 0.1063, 0.1271],
         [0.1960, 0.1514, 0.1365,  ..., 0.1362, 0.1063, 0.1271],
         [0.4121, 0.5459, 0.5904,  ..., 0.5882, 0.6810, 0.6187]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2604, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2396, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2605, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2396, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:49,294 [Process: 0] Synchronize training processes
2024-08-16 13:02:49,294 [Process: 0] Evaluating...
2024-08-16 13:02:49,296 [Process: 0] EPOCH 237:
2024-08-16 13:02:49,298 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1744, 0.1623, 0.1518,  ..., 0.2081, 0.1553, 0.0444],
         [0.1744, 0.1623, 0.1518,  ..., 0.2081, 0.1553, 0.0444],
         [0.1744, 0.1623, 0.1518,  ..., 0.2081, 0.1553, 0.8183],
         [0.4768, 0.5132, 0.5445,  ..., 0.3756, 0.5340, 0.0930]],
        [[0.3777, 0.4057, 0.2602,  ..., 0.2886, 0.3771, 0.3815],
         [0.2937, 0.2786, 0.3203,  ..., 0.3366, 0.3009, 0.2593],
         [0.1819, 0.1695, 0.2098,  ..., 0.1982, 0.1756, 0.2152],
         [0.1467, 0.1461, 0.2098,  ..., 0.1766, 0.1464, 0.1440]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 237:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1340, 0.1453, 0.1587,  ..., 0.1410, 0.1721, 0.1832],
         [0.1340, 0.1453, 0.1587,  ..., 0.1410, 0.1721, 0.1936],
         [0.1340, 0.1453, 0.1587,  ..., 0.1410, 0.1721, 0.1832],
         [0.5980, 0.5641, 0.5239,  ..., 0.5771, 0.4836, 0.4399]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2464, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2609, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2464, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2464, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:51,204 [Process: 0] Synchronize training processes
2024-08-16 13:02:51,204 [Process: 0] Evaluating...
2024-08-16 13:02:51,206 [Process: 0] EPOCH 238:
2024-08-16 13:02:51,208 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1389, 0.1561, 0.1438,  ..., 0.1594, 0.2032, 0.1686],
         [0.1389, 0.1561, 0.1438,  ..., 0.1594, 0.1914, 0.1686],
         [0.1389, 0.1561, 0.1438,  ..., 0.1594, 0.1914, 0.1686],
         [0.5832, 0.5316, 0.5686,  ..., 0.5217, 0.4141, 0.4941]],
        [[0.3472, 0.1668, 0.3077,  ..., 0.3602, 0.2649, 0.2595],
         [0.3507, 0.1668, 0.2115,  ..., 0.3391, 0.2363, 0.1876],
         [0.1961, 0.4997, 0.4187,  ..., 0.1504, 0.4077, 0.4243],
         [0.1061, 0.1668, 0.0622,  ..., 0.1504, 0.0911, 0.1286]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 238:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1555, 0.1797, 0.1560,  ..., 0.2004, 0.1561, 0.1462],
         [0.1555, 0.1797, 0.1560,  ..., 0.2004, 0.1561, 0.1462],
         [0.1555, 0.1797, 0.1560,  ..., 0.2004, 0.1561, 0.1462],
         [0.5336, 0.4609, 0.5320,  ..., 0.3987, 0.5318, 0.5613]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2513, 0.2500, 0.2521],
         [0.2500, 0.2500, 0.2500,  ..., 0.2655, 0.2500, 0.2493],
         [0.2500, 0.2500, 0.2500,  ..., 0.2416, 0.2500, 0.2493],
         [0.2500, 0.2500, 0.2500,  ..., 0.2416, 0.2500, 0.2493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:53,108 [Process: 0] Synchronize training processes
2024-08-16 13:02:53,109 [Process: 0] Evaluating...
2024-08-16 13:02:53,111 [Process: 0] EPOCH 239:
2024-08-16 13:02:53,113 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1946, 0.1763, 0.1387,  ..., 0.1402, 0.1527, 0.1648],
         [0.1946, 0.1763, 0.1387,  ..., 0.1402, 0.1527, 0.1648],
         [0.1946, 0.1763, 0.1387,  ..., 0.1402, 0.1527, 0.1648],
         [0.4163, 0.4712, 0.5839,  ..., 0.5794, 0.5420, 0.5057]],
        [[0.4435, 0.4021, 0.3031,  ..., 0.5325, 0.2279, 0.3515],
         [0.2165, 0.2131, 0.1913,  ..., 0.1722, 0.2199, 0.3152],
         [0.2226, 0.2174, 0.3497,  ..., 0.1868, 0.4337, 0.2310],
         [0.1174, 0.1673, 0.1559,  ..., 0.1084, 0.1186, 0.1023]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 239:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1392, 0.1957, 0.1662,  ..., 0.1629, 0.1601, 0.1895],
         [0.1392, 0.1957, 0.1662,  ..., 0.1724, 0.1714, 0.2163],
         [0.1392, 0.1957, 0.1662,  ..., 0.1629, 0.1601, 0.1895],
         [0.5825, 0.4128, 0.5014,  ..., 0.5019, 0.5084, 0.4046]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:55,007 [Process: 0] Synchronize training processes
2024-08-16 13:02:55,007 [Process: 0] Evaluating...
2024-08-16 13:02:55,009 [Process: 0] EPOCH 240:
2024-08-16 13:02:55,011 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2228, 0.1483, 0.1748,  ..., 0.1576, 0.1589, 0.1995],
         [0.2228, 0.1483, 0.1748,  ..., 0.3340, 0.1785, 0.1660],
         [0.2228, 0.1483, 0.1748,  ..., 0.1576, 0.1589, 0.1660],
         [0.3315, 0.5551, 0.4756,  ..., 0.3509, 0.5038, 0.4685]],
        [[0.1241, 0.4300, 0.1616,  ..., 0.1781, 0.4597, 0.3627],
         [0.1241, 0.2700, 0.2825,  ..., 0.1855, 0.3062, 0.3825],
         [0.6276, 0.1914, 0.4348,  ..., 0.4582, 0.1343, 0.1536],
         [0.1241, 0.1086, 0.1211,  ..., 0.1781, 0.0998, 0.1012]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 240:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1561, 0.1529, 0.0978,  ..., 0.1900, 0.1537, 0.1957],
         [0.1561, 0.1529, 0.0994,  ..., 0.1949, 0.1537, 0.2145],
         [0.1561, 0.1529, 0.0978,  ..., 0.1900, 0.1537, 0.1957],
         [0.5318, 0.5413, 0.7051,  ..., 0.4251, 0.5390, 0.3941]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:56,919 [Process: 0] Synchronize training processes
2024-08-16 13:02:56,919 [Process: 0] Evaluating...
2024-08-16 13:02:56,921 [Process: 0] EPOCH 241:
2024-08-16 13:02:56,923 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1636, 0.2000, 0.1930,  ..., 0.1541, 0.1551, 0.2020],
         [0.1636, 0.2066, 0.1930,  ..., 0.1825, 0.1659, 0.2076],
         [0.1636, 0.2000, 0.1930,  ..., 0.1541, 0.1551, 0.2020],
         [0.5092, 0.3933, 0.4209,  ..., 0.5094, 0.5239, 0.3884]],
        [[0.2479, 0.3363, 0.3972,  ..., 0.2529, 0.3916, 0.3467],
         [0.2562, 0.2315, 0.2539,  ..., 0.2588, 0.2120, 0.2942],
         [0.2479, 0.2161, 0.1745,  ..., 0.2441, 0.1982, 0.1805],
         [0.2479, 0.2161, 0.1745,  ..., 0.2441, 0.1982, 0.1785]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 241:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1589, 0.1352, 0.1363,  ..., 0.1692, 0.1498, 0.1186],
         [0.1589, 0.1352, 0.1363,  ..., 0.1692, 0.1498, 0.1186],
         [0.1589, 0.1352, 0.1363,  ..., 0.1692, 0.1498, 0.1186],
         [0.5234, 0.5944, 0.5911,  ..., 0.4925, 0.5506, 0.6441]],
        [[0.2443, 0.2500, 0.2446,  ..., 0.2454, 0.2423, 0.2480],
         [0.2672, 0.2500, 0.2662,  ..., 0.2638, 0.2731, 0.2559],
         [0.2443, 0.2500, 0.2446,  ..., 0.2454, 0.2423, 0.2480],
         [0.2443, 0.2500, 0.2446,  ..., 0.2454, 0.2423, 0.2480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:02:58,817 [Process: 0] Synchronize training processes
2024-08-16 13:02:58,818 [Process: 0] Evaluating...
2024-08-16 13:02:58,820 [Process: 0] EPOCH 242:
2024-08-16 13:02:58,821 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1564, 0.2113, 0.1750,  ..., 0.1636, 0.3087, 0.1433],
         [0.1564, 0.2113, 0.1750,  ..., 0.1636, 0.2163, 0.1433],
         [0.1564, 0.2113, 0.1750,  ..., 0.1636, 0.2587, 0.1516],
         [0.5307, 0.3662, 0.4751,  ..., 0.5091, 0.2163, 0.5618]],
        [[0.2118, 0.4685, 0.2604,  ..., 0.2808, 0.3132, 0.3102],
         [0.2890, 0.3214, 0.2428,  ..., 0.2397, 0.3020, 0.2518],
         [0.2908, 0.1050, 0.2744,  ..., 0.2397, 0.1924, 0.2190],
         [0.2084, 0.1050, 0.2224,  ..., 0.2397, 0.1924, 0.2190]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 242:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1609, 0.1344, 0.1788,  ..., 0.1437, 0.1365, 0.1392],
         [0.1609, 0.1344, 0.1821,  ..., 0.1483, 0.1365, 0.1412],
         [0.1609, 0.1344, 0.1788,  ..., 0.1437, 0.1365, 0.1392],
         [0.5173, 0.5967, 0.4604,  ..., 0.5642, 0.5905, 0.5804]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:03:00,713 [Process: 0] Synchronize training processes
2024-08-16 13:03:00,714 [Process: 0] Evaluating...
2024-08-16 13:03:00,715 [Process: 0] EPOCH 243:
2024-08-16 13:03:00,717 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1669, 0.1903, 0.1872,  ..., 0.1942, 0.1619, 0.1891],
         [0.1669, 0.1903, 0.1872,  ..., 0.1942, 0.1619, 0.1977],
         [0.1669, 0.1903, 0.1872,  ..., 0.1942, 0.1619, 0.1891],
         [0.4992, 0.4290, 0.4384,  ..., 0.4174, 0.5143, 0.4242]],
        [[0.2836, 0.2226, 0.2198,  ..., 0.3935, 0.3539, 0.3245],
         [0.3308, 0.3363, 0.4229,  ..., 0.2645, 0.2483, 0.3553],
         [0.2132, 0.2372, 0.1787,  ..., 0.1785, 0.1996, 0.1860],
         [0.1724, 0.2038, 0.1787,  ..., 0.1636, 0.1982, 0.1342]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 243:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1824, 0.1867, 0.1742,  ..., 0.1830, 0.1531, 0.1217],
         [0.1824, 0.1867, 0.1742,  ..., 0.1830, 0.1599, 0.1248],
         [0.1824, 0.1867, 0.1742,  ..., 0.1830, 0.1531, 0.1217],
         [0.4528, 0.4400, 0.4773,  ..., 0.4511, 0.5338, 0.6318]],
        [[0.2472, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2583, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2472, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2472, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1661, 0.1772, 0.1267,  ..., 0.1531, 0.1927, 0.2042],
         [0.1661, 0.1772, 0.1267,  ..., 0.1531, 0.1927, 0.2042],
         [0.1661, 0.1772, 0.1267,  ..., 0.1531, 0.2258, 0.2042],
         [0.5017, 0.4683, 0.6198,  ..., 0.5408, 0.3887, 0.3873]],
        [[0.2711, 0.1971, 0.3025,  ..., 0.4197, 0.1953, 0.3838],
         [0.3191, 0.2633, 0.3235,  ..., 0.2103, 0.2465, 0.2669],
         [0.2393, 0.3425, 0.2697,  ..., 0.2153, 0.4374, 0.2501],
         [0.1705, 0.1971, 0.1044,  ..., 0.1548, 0.1208, 0.0992]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:02,620 [Process: 0] Synchronize training processes
2024-08-16 13:03:02,621 [Process: 0] Evaluating...
2024-08-16 13:03:02,623 [Process: 0] EPOCH 244:
2024-08-16 13:03:02,625 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 244:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1732, 0.1521, 0.1344,  ..., 0.1307, 0.1403, 0.1529],
         [0.1732, 0.1521, 0.1344,  ..., 0.1307, 0.1728, 0.1529],
         [0.1732, 0.1521, 0.1344,  ..., 0.1307, 0.1403, 0.1529],
         [0.4803, 0.5437, 0.5967,  ..., 0.6078, 0.5466, 0.5413]],
        [[0.2500, 0.2500, 0.2499,  ..., 0.2500, 0.2461, 0.2481],
         [0.2500, 0.2500, 0.2503,  ..., 0.2500, 0.2617, 0.2558],
         [0.2500, 0.2500, 0.2499,  ..., 0.2500, 0.2461, 0.2481],
         [0.2500, 0.2500, 0.2499,  ..., 0.2500, 0.2461, 0.2481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1332, 0.1965, 0.1855,  ..., 0.1643, 0.1573, 0.1425],
         [0.1332, 0.1965, 0.1855,  ..., 0.1643, 0.1573, 0.1425],
         [0.1332, 0.1965, 0.1855,  ..., 0.1643, 0.1573, 0.1425],
         [0.6004, 0.4106, 0.4435,  ..., 0.5070, 0.5280, 0.5724]],
        [[0.2864, 0.1962, 0.2359,  ..., 0.3151, 0.2548, 0.2001],
         [0.3294, 0.2528, 0.2467,  ..., 0.3627, 0.3517, 0.2418],
         [0.2793, 0.4253, 0.3855,  ..., 0.2208, 0.2710, 0.4248],
         [0.1049, 0.1257, 0.1319,  ..., 0.1014, 0.1225, 0.1333]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 245:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:03:04,517 [Process: 0] Synchronize training processes
2024-08-16 13:03:04,517 [Process: 0] Evaluating...
2024-08-16 13:03:04,519 [Process: 0] EPOCH 245:
2024-08-16 13:03:04,521 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1200, 0.1829, 0.1540,  ..., 0.1324, 0.1577, 0.1844],
         [0.1200, 0.1829, 0.1540,  ..., 0.1324, 0.1577, 0.1929],
         [0.1200, 0.1829, 0.1540,  ..., 0.1324, 0.1577, 0.1844],
         [0.6401, 0.4514, 0.5381,  ..., 0.6027, 0.5270, 0.4383]],
        [[0.2666, 0.2491, 0.2304,  ..., 0.2558, 0.2467, 0.2434],
         [0.2555, 0.2712, 0.2682,  ..., 0.2481, 0.2600, 0.2699],
         [0.2741, 0.2398, 0.2711,  ..., 0.2481, 0.2467, 0.2434],
         [0.2038, 0.2398, 0.2304,  ..., 0.2481, 0.2467, 0.2434]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.1233, 0.1824,  ..., 0.1163, 0.1616, 0.1277],
         [0.2500, 0.1233, 0.2121,  ..., 0.1356, 0.1616, 0.1898],
         [0.2500, 0.1233, 0.1824,  ..., 0.1163, 0.1616, 0.1277],
         [0.2500, 0.6302, 0.4230,  ..., 0.6317, 0.5152, 0.5548]],
        [[0.4238, 0.1517, 0.4496,  ..., 0.2596, 0.2886, 0.3439],
         [0.2992, 0.1517, 0.1835,  ..., 0.1266, 0.4197, 0.3770],
         [0.1713, 0.5450, 0.1835,  ..., 0.4795, 0.2509, 0.1490],
         [0.1057, 0.1517, 0.1835,  ..., 0.1343, 0.0408, 0.1301]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 246:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:03:06,432 [Process: 0] Synchronize training processes
2024-08-16 13:03:06,432 [Process: 0] Evaluating...
2024-08-16 13:03:06,434 [Process: 0] EPOCH 246:
2024-08-16 13:03:06,436 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1327, 0.1689, 0.1734,  ..., 0.1481, 0.1572, 0.1164],
         [0.1327, 0.1689, 0.1734,  ..., 0.1481, 0.1572, 0.1164],
         [0.1327, 0.1689, 0.1734,  ..., 0.1481, 0.1572, 0.1164],
         [0.6020, 0.4932, 0.4798,  ..., 0.5558, 0.5284, 0.6508]],
        [[0.2500, 0.2500, 0.2496,  ..., 0.2490, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2496,  ..., 0.2529, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2511,  ..., 0.2490, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2496,  ..., 0.2490, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2050, 0.2355,  ..., 0.3173, 0.3390, 0.1237],
         [0.2500, 0.1510, 0.2355,  ..., 0.1769, 0.1810, 0.1237],
         [0.2500, 0.2873, 0.2355,  ..., 0.2467, 0.2991, 0.2579],
         [0.2500, 0.3567, 0.2936,  ..., 0.2590, 0.1810, 0.4946]],
        [[0.2613, 0.3495, 0.2205,  ..., 0.2213, 0.2548, 0.2055],
         [0.2965, 0.2991, 0.3384,  ..., 0.2975, 0.3813, 0.3835],
         [0.2211, 0.1950, 0.2205,  ..., 0.2600, 0.2010, 0.2055],
         [0.2211, 0.1564, 0.2205,  ..., 0.2213, 0.1629, 0.2055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 247:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:03:08,326 [Process: 0] Synchronize training processes
2024-08-16 13:03:08,327 [Process: 0] Evaluating...
2024-08-16 13:03:08,329 [Process: 0] EPOCH 247:
2024-08-16 13:03:08,331 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1303, 0.1461, 0.1600,  ..., 0.1811, 0.1717, 0.2104],
         [0.1379, 0.1461, 0.1600,  ..., 0.1811, 0.1717, 0.2104],
         [0.1303, 0.1461, 0.1600,  ..., 0.1811, 0.1717, 0.2104],
         [0.6016, 0.5617, 0.5200,  ..., 0.4568, 0.4850, 0.3688]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1156, 0.1994, 0.1851,  ..., 0.1847, 0.1754, 0.0621],
         [0.1156, 0.1994, 0.1851,  ..., 0.1847, 0.1754, 0.0247],
         [0.1156, 0.1994, 0.1851,  ..., 0.1868, 0.1754, 0.0247],
         [0.6533, 0.4018, 0.4446,  ..., 0.4439, 0.4739, 0.8885]],
        [[0.4474, 0.3336, 0.3288,  ..., 0.3157, 0.2878, 0.2297],
         [0.1497, 0.2560, 0.2531,  ..., 0.2703, 0.1561, 0.2297],
         [0.3129, 0.3008, 0.2942,  ..., 0.2695, 0.4056, 0.3110],
         [0.0900, 0.1096, 0.1239,  ..., 0.1445, 0.1505, 0.2297]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 248:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:03:10,243 [Process: 0] Synchronize training processes
2024-08-16 13:03:10,244 [Process: 0] Evaluating...
2024-08-16 13:03:10,245 [Process: 0] EPOCH 248:
2024-08-16 13:03:10,248 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:03:12,139 [Process: 0] Synchronize training processes
2024-08-16 13:03:12,140 [Process: 0] Evaluating...
2024-08-16 13:03:12,142 [Process: 0] EPOCH 249:
2024-08-16 13:03:12,144 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1602, 0.1712, 0.1575,  ..., 0.1138, 0.1389, 0.2057],
         [0.1602, 0.1712, 0.1575,  ..., 0.1162, 0.1389, 0.2269],
         [0.1602, 0.1712, 0.1575,  ..., 0.1138, 0.1389, 0.2057],
         [0.5195, 0.4864, 0.5274,  ..., 0.6562, 0.5833, 0.3617]],
        [[0.2500, 0.2500, 0.2524,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1498, 0.1779, 0.1986,  ..., 0.1370, 0.1995, 0.1676],
         [0.1498, 0.1779, 0.1986,  ..., 0.1370, 0.1995, 0.1676],
         [0.1498, 0.1779, 0.1986,  ..., 0.1370, 0.1995, 0.1676],
         [0.5505, 0.4662, 0.4041,  ..., 0.5890, 0.4016, 0.4973]],
        [[0.5389, 0.3287, 0.2120,  ..., 0.3776, 0.3257, 0.3137],
         [0.1604, 0.2233, 0.2280,  ..., 0.2075, 0.1534, 0.4422],
         [0.1504, 0.3367, 0.3481,  ..., 0.2075, 0.3675, 0.1639],
         [0.1504, 0.1113, 0.2120,  ..., 0.2075, 0.1534, 0.0802]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 249:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:03:14,043 [Process: 0] Synchronize training processes
2024-08-16 13:03:14,044 [Process: 0] Evaluating...
2024-08-16 13:03:14,046 [Process: 0] EPOCH 250:
2024-08-16 13:03:14,048 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1643, 0.1778, 0.1423,  ..., 0.1452, 0.1367, 0.1586],
         [0.1643, 0.1778, 0.1423,  ..., 0.1452, 0.1367, 0.1586],
         [0.1643, 0.1778, 0.1423,  ..., 0.1452, 0.1367, 0.1586],
         [0.5072, 0.4666, 0.5730,  ..., 0.5643, 0.5898, 0.5242]],
        [[0.2500, 0.2500, 0.2494,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2518,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2494,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2494,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4757, 0.2928, 0.2365,  ..., 0.1532, 0.1970, 0.1996],
         [0.1486, 0.1544, 0.1894,  ..., 0.1532, 0.1644, 0.1941],
         [0.1206, 0.1544, 0.1894,  ..., 0.1532, 0.1993, 0.2006],
         [0.2551, 0.3984, 0.3847,  ..., 0.5404, 0.4394, 0.4057]],
        [[0.1806, 0.2095, 0.1791,  ..., 0.1624, 0.1915, 0.3117],
         [0.2487, 0.3323, 0.2310,  ..., 0.2183, 0.2327, 0.1870],
         [0.3902, 0.3888, 0.4108,  ..., 0.4569, 0.3843, 0.4102],
         [0.1806, 0.0693, 0.1791,  ..., 0.1624, 0.1915, 0.0911]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 250:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:03:15,950 [Process: 0] Synchronize training processes
2024-08-16 13:03:15,950 [Process: 0] Evaluating...
2024-08-16 13:03:15,952 [Process: 0] EPOCH 251:
2024-08-16 13:03:15,954 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1481, 0.1680, 0.1206,  ..., 0.1533, 0.1352, 0.1700],
         [0.1481, 0.1680, 0.1213,  ..., 0.1533, 0.1352, 0.1700],
         [0.1481, 0.1680, 0.1206,  ..., 0.1533, 0.1352, 0.1700],
         [0.5557, 0.4959, 0.6375,  ..., 0.5400, 0.5944, 0.4901]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.1351, 0.2906,  ..., 0.1953, 0.2041, 0.0824],
         [0.2500, 0.1351, 0.1795,  ..., 0.1953, 0.1686, 0.0824],
         [0.2500, 0.1378, 0.2356,  ..., 0.1953, 0.1473, 0.6917],
         [0.2500, 0.5920, 0.2942,  ..., 0.4140, 0.4799, 0.1435]],
        [[0.1949, 0.2510, 0.3966,  ..., 0.2137, 0.2213, 0.2500],
         [0.4152, 0.3499, 0.3530,  ..., 0.3590, 0.3362, 0.2500],
         [0.1949, 0.1996, 0.1558,  ..., 0.2137, 0.2213, 0.2500],
         [0.1949, 0.1996, 0.0946,  ..., 0.2137, 0.2213, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 251:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:03:17,852 [Process: 0] Synchronize training processes
2024-08-16 13:03:17,852 [Process: 0] Evaluating...
2024-08-16 13:03:17,854 [Process: 0] EPOCH 252:
2024-08-16 13:03:17,856 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1546, 0.1359, 0.1712,  ..., 0.1660, 0.1557, 0.1548],
         [0.1546, 0.1359, 0.1712,  ..., 0.1660, 0.1557, 0.1548],
         [0.1546, 0.1359, 0.1712,  ..., 0.1660, 0.1557, 0.1548],
         [0.5362, 0.5922, 0.4863,  ..., 0.5021, 0.5330, 0.5357]],
        [[0.2500, 0.2500, 0.2495,  ..., 0.2463, 0.2500, 0.2491],
         [0.2500, 0.2500, 0.2514,  ..., 0.2612, 0.2500, 0.2527],
         [0.2500, 0.2500, 0.2495,  ..., 0.2463, 0.2500, 0.2491],
         [0.2500, 0.2500, 0.2495,  ..., 0.2463, 0.2500, 0.2491]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1353, 0.1724, 0.1865,  ..., 0.1993, 0.2167, 0.1667],
         [0.1353, 0.1724, 0.1865,  ..., 0.2046, 0.2167, 0.1667],
         [0.1353, 0.1724, 0.1865,  ..., 0.1993, 0.2167, 0.1667],
         [0.5941, 0.4828, 0.4405,  ..., 0.3968, 0.3498, 0.4999]],
        [[0.5637, 0.5513, 0.3625,  ..., 0.3765, 0.2043, 0.4751],
         [0.1254, 0.1482, 0.4816,  ..., 0.2270, 0.1798, 0.1987],
         [0.1855, 0.1834, 0.1231,  ..., 0.2303, 0.4360, 0.2053],
         [0.1254, 0.1171, 0.0329,  ..., 0.1663, 0.1798, 0.1208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 252:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:03:19,755 [Process: 0] Synchronize training processes
2024-08-16 13:03:19,755 [Process: 0] Evaluating...
2024-08-16 13:03:19,757 [Process: 0] EPOCH 253:
2024-08-16 13:03:19,759 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1970, 0.1551, 0.1487,  ..., 0.1705, 0.1416, 0.1551],
         [0.1970, 0.1551, 0.1487,  ..., 0.2034, 0.1416, 0.1551],
         [0.1970, 0.1551, 0.1487,  ..., 0.1705, 0.1416, 0.1551],
         [0.4090, 0.5346, 0.5539,  ..., 0.4556, 0.5753, 0.5348]],
        [[0.2460, 0.2500, 0.2629,  ..., 0.2500, 0.2500, 0.2453],
         [0.2619, 0.2500, 0.2571,  ..., 0.2500, 0.2500, 0.2640],
         [0.2460, 0.2500, 0.2424,  ..., 0.2500, 0.2500, 0.2453],
         [0.2460, 0.2500, 0.2376,  ..., 0.2500, 0.2500, 0.2453]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2305, 0.1927, 0.1542,  ..., 0.2313, 0.1614, 0.1832],
         [0.2305, 0.1927, 0.1542,  ..., 0.2314, 0.1614, 0.1762],
         [0.2407, 0.1927, 0.1542,  ..., 0.2130, 0.1614, 0.1762],
         [0.2983, 0.4219, 0.5375,  ..., 0.3243, 0.5159, 0.4644]],
        [[0.2399, 0.1064, 0.1770,  ..., 0.5650, 0.2683, 0.1832],
         [0.2287, 0.2194, 0.2032,  ..., 0.2082, 0.4063, 0.3942],
         [0.4469, 0.5678, 0.5119,  ..., 0.1567, 0.2034, 0.2741],
         [0.0845, 0.1064, 0.1079,  ..., 0.0702, 0.1219, 0.1484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 253:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1475, 0.1799, 0.1455,  ..., 0.1316, 0.2033, 0.1214],
         [0.1495, 0.1799, 0.1455,  ..., 0.1316, 0.2033, 0.1230],
         [0.1475, 0.1799, 0.1455,  ..., 0.1316, 0.2033, 0.1214],
         [0.5555, 0.4604, 0.5636,  ..., 0.6052, 0.3901, 0.6341]],
        [[0.2491, 0.2500, 0.2522,  ..., 0.2636, 0.2500, 0.2459],
         [0.2528, 0.2500, 0.2493,  ..., 0.2455, 0.2500, 0.2495],
         [0.2491, 0.2500, 0.2493,  ..., 0.2455, 0.2500, 0.2587],
         [0.2491, 0.2500, 0.2493,  ..., 0.2455, 0.2500, 0.2459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:21,662 [Process: 0] Synchronize training processes
2024-08-16 13:03:21,662 [Process: 0] Evaluating...
2024-08-16 13:03:21,664 [Process: 0] EPOCH 254:
2024-08-16 13:03:21,666 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2223, 0.1988, 0.2387,  ..., 0.1524, 0.2625, 0.1733],
         [0.2064, 0.2079, 0.2277,  ..., 0.1716, 0.2042, 0.1733],
         [0.2064, 0.1988, 0.1795,  ..., 0.1511, 0.1639, 0.1733],
         [0.3650, 0.3944, 0.3542,  ..., 0.5249, 0.3694, 0.4802]],
        [[0.2576, 0.2500, 0.2079,  ..., 0.2301, 0.2076, 0.2578],
         [0.4125, 0.2500, 0.3370,  ..., 0.3098, 0.3773, 0.2716],
         [0.1686, 0.2500, 0.2473,  ..., 0.2301, 0.2076, 0.2353],
         [0.1613, 0.2500, 0.2079,  ..., 0.2301, 0.2076, 0.2353]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 254:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1119, 0.1598, 0.1659,  ..., 0.1686, 0.1795, 0.1287],
         [0.1119, 0.1598, 0.1659,  ..., 0.1686, 0.1795, 0.1287],
         [0.1119, 0.1598, 0.1659,  ..., 0.1686, 0.1795, 0.1287],
         [0.6643, 0.5205, 0.5024,  ..., 0.4941, 0.4614, 0.6140]],
        [[0.2451, 0.2464, 0.2498,  ..., 0.2500, 0.2478, 0.2449],
         [0.2451, 0.2506, 0.2506,  ..., 0.2500, 0.2478, 0.2652],
         [0.2647, 0.2565, 0.2498,  ..., 0.2500, 0.2565, 0.2449],
         [0.2451, 0.2464, 0.2498,  ..., 0.2500, 0.2478, 0.2449]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:23,589 [Process: 0] Synchronize training processes
2024-08-16 13:03:23,589 [Process: 0] Evaluating...
2024-08-16 13:03:23,591 [Process: 0] EPOCH 255:
2024-08-16 13:03:23,593 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1748, 0.1960, 0.1643,  ..., 0.1312, 0.1718, 0.1818],
         [0.1748, 0.1960, 0.1643,  ..., 0.1722, 0.1718, 0.1818],
         [0.1748, 0.1960, 0.1643,  ..., 0.1312, 0.1718, 0.1818],
         [0.4756, 0.4120, 0.5071,  ..., 0.5655, 0.4845, 0.4547]],
        [[0.3229, 0.3745, 0.3541,  ..., 0.2841, 0.4861, 0.2383],
         [0.2545, 0.2565, 0.2837,  ..., 0.2249, 0.2206, 0.2878],
         [0.2942, 0.2546, 0.2134,  ..., 0.3166, 0.1791, 0.2942],
         [0.1284, 0.1144, 0.1488,  ..., 0.1745, 0.1142, 0.1798]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 255:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1532, 0.1477, 0.1621,  ..., 0.1595, 0.1397, 0.1547],
         [0.1532, 0.1477, 0.1621,  ..., 0.1595, 0.1397, 0.1547],
         [0.1532, 0.1477, 0.1621,  ..., 0.1595, 0.1397, 0.1547],
         [0.5404, 0.5570, 0.5136,  ..., 0.5215, 0.5810, 0.5359]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2740, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2474, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2393, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2393, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:25,562 [Process: 0] Synchronize training processes
2024-08-16 13:03:25,562 [Process: 0] Evaluating...
2024-08-16 13:03:25,564 [Process: 0] EPOCH 256:
2024-08-16 13:03:25,566 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1618, 0.1580, 0.1631,  ..., 0.1196, 0.1979, 0.1551],
         [0.1618, 0.1580, 0.1631,  ..., 0.1196, 0.1979, 0.1551],
         [0.1618, 0.1580, 0.1631,  ..., 0.1196, 0.1979, 0.1551],
         [0.5147, 0.5259, 0.5108,  ..., 0.6411, 0.4062, 0.5346]],
        [[0.3604, 0.4532, 0.2982,  ..., 0.2538, 0.3151, 0.3372],
         [0.2199, 0.2778, 0.3460,  ..., 0.2933, 0.2866, 0.2790],
         [0.3239, 0.1930, 0.2631,  ..., 0.3086, 0.3215, 0.2526],
         [0.0958, 0.0760, 0.0928,  ..., 0.1443, 0.0768, 0.1312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 256:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1664, 0.1489, 0.1764,  ..., 0.1505, 0.1982, 0.2063],
         [0.1664, 0.1489, 0.1764,  ..., 0.1505, 0.1982, 0.2063],
         [0.1664, 0.1489, 0.1764,  ..., 0.1505, 0.1982, 0.2063],
         [0.5009, 0.5533, 0.4708,  ..., 0.5485, 0.4055, 0.3810]],
        [[0.2475, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2574, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2475, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2475, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:27,463 [Process: 0] Synchronize training processes
2024-08-16 13:03:27,463 [Process: 0] Evaluating...
2024-08-16 13:03:27,465 [Process: 0] EPOCH 257:
2024-08-16 13:03:27,467 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1645, 0.1404, 0.1935,  ..., 0.1685, 0.2226, 0.1672],
         [0.1699, 0.1404, 0.1935,  ..., 0.2036, 0.2226, 0.1672],
         [0.1645, 0.1404, 0.1935,  ..., 0.1685, 0.2226, 0.1672],
         [0.5012, 0.5788, 0.4195,  ..., 0.4595, 0.3323, 0.4985]],
        [[0.4678, 0.4757, 0.3598,  ..., 0.1217, 0.2256, 0.4795],
         [0.2009, 0.1800, 0.2246,  ..., 0.1115, 0.2620, 0.3603],
         [0.1898, 0.2529, 0.2398,  ..., 0.6554, 0.2869, 0.0813],
         [0.1414, 0.0915, 0.1758,  ..., 0.1115, 0.2256, 0.0789]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 257:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1406, 0.1727, 0.1387,  ..., 0.1812, 0.1792, 0.1502],
         [0.1406, 0.1727, 0.1387,  ..., 0.1812, 0.1792, 0.1502],
         [0.1406, 0.1727, 0.1387,  ..., 0.1812, 0.1792, 0.1502],
         [0.5783, 0.4820, 0.5840,  ..., 0.4565, 0.4623, 0.5494]],
        [[0.2404, 0.2500, 0.2597,  ..., 0.2491, 0.2500, 0.2500],
         [0.2606, 0.2500, 0.2436,  ..., 0.2491, 0.2500, 0.2500],
         [0.2586, 0.2500, 0.2545,  ..., 0.2526, 0.2500, 0.2500],
         [0.2404, 0.2500, 0.2421,  ..., 0.2491, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:29,379 [Process: 0] Synchronize training processes
2024-08-16 13:03:29,379 [Process: 0] Evaluating...
2024-08-16 13:03:29,381 [Process: 0] EPOCH 258:
2024-08-16 13:03:29,383 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1714, 0.1837, 0.1815,  ..., 0.1834, 0.1838, 0.1485],
         [0.1714, 0.1837, 0.1815,  ..., 0.1834, 0.1838, 0.1485],
         [0.1714, 0.1837, 0.1815,  ..., 0.1834, 0.1838, 0.1485],
         [0.4859, 0.4490, 0.4556,  ..., 0.4499, 0.4486, 0.5545]],
        [[0.1862, 0.1586, 0.1584,  ..., 0.2793, 0.4453, 0.3394],
         [0.3890, 0.4769, 0.2809,  ..., 0.2102, 0.1912, 0.3504],
         [0.3479, 0.3072, 0.4175,  ..., 0.3004, 0.2141, 0.2233],
         [0.0769, 0.0573, 0.1432,  ..., 0.2102, 0.1493, 0.0870]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 258:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1627, 0.1807, 0.1652,  ..., 0.1403, 0.1641, 0.1768],
         [0.1627, 0.1807, 0.1652,  ..., 0.1403, 0.1663, 0.1841],
         [0.1627, 0.1807, 0.1652,  ..., 0.1403, 0.1641, 0.1768],
         [0.5119, 0.4578, 0.5045,  ..., 0.5791, 0.5055, 0.4623]],
        [[0.2421, 0.2493, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2637, 0.2520, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2522, 0.2493, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2421, 0.2493, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:31,283 [Process: 0] Synchronize training processes
2024-08-16 13:03:31,284 [Process: 0] Evaluating...
2024-08-16 13:03:31,286 [Process: 0] EPOCH 259:
2024-08-16 13:03:31,288 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1862, 0.1633, 0.2090,  ..., 0.1600, 0.1128, 0.1575],
         [0.1862, 0.2756, 0.2090,  ..., 0.1600, 0.1128, 0.1575],
         [0.1862, 0.1572, 0.2090,  ..., 0.1600, 0.1128, 0.1575],
         [0.4414, 0.4040, 0.3730,  ..., 0.5201, 0.6616, 0.5276]],
        [[0.3699, 0.3514, 0.4282,  ..., 0.3104, 0.2909, 0.2551],
         [0.2295, 0.2654, 0.1801,  ..., 0.2568, 0.2932, 0.2694],
         [0.2318, 0.2325, 0.2201,  ..., 0.3321, 0.2285, 0.3217],
         [0.1689, 0.1506, 0.1716,  ..., 0.1007, 0.1874, 0.1539]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 259:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1806, 0.1597, 0.1421,  ..., 0.1461, 0.1565, 0.1597],
         [0.1806, 0.1597, 0.1421,  ..., 0.1461, 0.1565, 0.1597],
         [0.1806, 0.1597, 0.1421,  ..., 0.1461, 0.1565, 0.1597],
         [0.4583, 0.5209, 0.5737,  ..., 0.5618, 0.5304, 0.5210]],
        [[0.2500, 0.2725, 0.2470,  ..., 0.2416, 0.2528, 0.2446],
         [0.2500, 0.2478, 0.2589,  ..., 0.2753, 0.2643, 0.2663],
         [0.2500, 0.2399, 0.2470,  ..., 0.2416, 0.2414, 0.2446],
         [0.2500, 0.2399, 0.2470,  ..., 0.2416, 0.2414, 0.2446]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:33,193 [Process: 0] Synchronize training processes
2024-08-16 13:03:33,194 [Process: 0] Evaluating...
2024-08-16 13:03:33,196 [Process: 0] EPOCH 260:
2024-08-16 13:03:33,198 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1339, 0.1625, 0.1862,  ..., 0.1881, 0.1520, 0.1646],
         [0.1339, 0.1625, 0.1862,  ..., 0.1881, 0.2348, 0.1646],
         [0.1339, 0.1625, 0.1862,  ..., 0.1881, 0.1519, 0.1646],
         [0.5982, 0.5126, 0.4414,  ..., 0.4358, 0.4613, 0.5061]],
        [[0.3094, 0.2257, 0.2548,  ..., 0.4316, 0.2988, 0.2694],
         [0.2747, 0.2899, 0.2484,  ..., 0.3568, 0.2300, 0.2727],
         [0.2121, 0.3019, 0.2484,  ..., 0.1058, 0.2412, 0.2396],
         [0.2038, 0.1825, 0.2484,  ..., 0.1058, 0.2300, 0.2182]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 260:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1703, 0.1466, 0.1535,  ..., 0.1451, 0.1822, 0.1626],
         [0.1714, 0.1466, 0.1535,  ..., 0.1451, 0.1822, 0.1626],
         [0.1703, 0.1466, 0.1535,  ..., 0.1451, 0.1822, 0.1626],
         [0.4881, 0.5602, 0.5395,  ..., 0.5646, 0.4535, 0.5121]],
        [[0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2525,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:35,086 [Process: 0] Synchronize training processes
2024-08-16 13:03:35,086 [Process: 0] Evaluating...
2024-08-16 13:03:35,088 [Process: 0] EPOCH 261:
2024-08-16 13:03:35,090 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1210, 0.1834, 0.1900,  ..., 0.1285, 0.1906, 0.0145],
         [0.1210, 0.2413, 0.1936,  ..., 0.1285, 0.1906, 0.0145],
         [0.1210, 0.1964, 0.1734,  ..., 0.1285, 0.1906, 0.9446],
         [0.6369, 0.3790, 0.4430,  ..., 0.6145, 0.4282, 0.0265]],
        [[0.2234, 0.2500, 0.3522,  ..., 0.3424, 0.3015, 0.3604],
         [0.2813, 0.2500, 0.2629,  ..., 0.2409, 0.2570, 0.2987],
         [0.2901, 0.2500, 0.2366,  ..., 0.2549, 0.2332, 0.1983],
         [0.2052, 0.2500, 0.1483,  ..., 0.1617, 0.2082, 0.1426]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 261:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1644, 0.1724, 0.1307,  ..., 0.1371, 0.1512, 0.1532],
         [0.1644, 0.1728, 0.1328,  ..., 0.1408, 0.1756, 0.1564],
         [0.1644, 0.1724, 0.1307,  ..., 0.1371, 0.1512, 0.1532],
         [0.5068, 0.4823, 0.6057,  ..., 0.5851, 0.5219, 0.5373]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:37,040 [Process: 0] Synchronize training processes
2024-08-16 13:03:37,040 [Process: 0] Evaluating...
2024-08-16 13:03:37,042 [Process: 0] EPOCH 262:
2024-08-16 13:03:37,044 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1386, 0.1875, 0.1871,  ..., 0.1982, 0.1549, 0.1815],
         [0.1386, 0.1875, 0.1871,  ..., 0.1982, 0.1866, 0.1815],
         [0.1386, 0.1875, 0.1871,  ..., 0.1982, 0.1549, 0.1815],
         [0.5843, 0.4376, 0.4387,  ..., 0.4053, 0.5036, 0.4554]],
        [[0.3626, 0.4232, 0.4620,  ..., 0.3389, 0.3186, 0.3594],
         [0.2718, 0.2912, 0.2093,  ..., 0.2821, 0.2273, 0.3141],
         [0.2108, 0.1635, 0.1773,  ..., 0.2716, 0.2705, 0.2103],
         [0.1548, 0.1220, 0.1514,  ..., 0.1074, 0.1836, 0.1163]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 262:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1741, 0.1640, 0.1486,  ..., 0.1477, 0.1336, 0.1352],
         [0.1782, 0.1765, 0.1486,  ..., 0.1501, 0.1336, 0.1352],
         [0.1741, 0.1640, 0.1486,  ..., 0.1477, 0.1336, 0.1352],
         [0.4736, 0.4954, 0.5542,  ..., 0.5546, 0.5993, 0.5943]],
        [[0.2537, 0.2500, 0.2466,  ..., 0.2500, 0.2500, 0.2500],
         [0.2488, 0.2500, 0.2603,  ..., 0.2500, 0.2500, 0.2500],
         [0.2488, 0.2500, 0.2466,  ..., 0.2500, 0.2500, 0.2500],
         [0.2488, 0.2500, 0.2466,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:38,999 [Process: 0] Synchronize training processes
2024-08-16 13:03:39,000 [Process: 0] Evaluating...
2024-08-16 13:03:39,001 [Process: 0] EPOCH 263:
2024-08-16 13:03:39,003 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1967, 0.1999, 0.1366,  ..., 0.1986, 0.1449, 0.1213],
         [0.1967, 0.1999, 0.1366,  ..., 0.1986, 0.1449, 0.1213],
         [0.1967, 0.1999, 0.1366,  ..., 0.1986, 0.1449, 0.1213],
         [0.4100, 0.4004, 0.5902,  ..., 0.4043, 0.5652, 0.6360]],
        [[0.3320, 0.3065, 0.2500,  ..., 0.3252, 0.3657, 0.3420],
         [0.2274, 0.2957, 0.2500,  ..., 0.2837, 0.3109, 0.2707],
         [0.2203, 0.1989, 0.2500,  ..., 0.2077, 0.1617, 0.1942],
         [0.2203, 0.1989, 0.2500,  ..., 0.1834, 0.1617, 0.1932]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 263:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1868, 0.1413, 0.1502,  ..., 0.1744, 0.1661, 0.1357],
         [0.1868, 0.1522, 0.1502,  ..., 0.1807, 0.1826, 0.1357],
         [0.1868, 0.1413, 0.1502,  ..., 0.1744, 0.1661, 0.1357],
         [0.4395, 0.5652, 0.5495,  ..., 0.4706, 0.4852, 0.5928]],
        [[0.2500, 0.2500, 0.2452,  ..., 0.2500, 0.2500, 0.2480],
         [0.2500, 0.2500, 0.2645,  ..., 0.2500, 0.2500, 0.2559],
         [0.2500, 0.2500, 0.2452,  ..., 0.2500, 0.2500, 0.2480],
         [0.2500, 0.2500, 0.2452,  ..., 0.2500, 0.2500, 0.2480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:41,070 [Process: 0] Synchronize training processes
2024-08-16 13:03:41,070 [Process: 0] Evaluating...
2024-08-16 13:03:41,072 [Process: 0] EPOCH 264:
2024-08-16 13:03:41,074 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1910, 0.1310, 0.1610,  ..., 0.2166, 0.1450, 0.1691],
         [0.1910, 0.1310, 0.1610,  ..., 0.2166, 0.1450, 0.1691],
         [0.1910, 0.1310, 0.1610,  ..., 0.2166, 0.1450, 0.1691],
         [0.4271, 0.6070, 0.5169,  ..., 0.3502, 0.5649, 0.4927]],
        [[0.4107, 0.2479, 0.1741,  ..., 0.3174, 0.1905, 0.3915],
         [0.3048, 0.2563, 0.2967,  ..., 0.2221, 0.2792, 0.3273],
         [0.1423, 0.2479, 0.3777,  ..., 0.3087, 0.3792, 0.1406],
         [0.1423, 0.2479, 0.1515,  ..., 0.1519, 0.1511, 0.1406]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 264:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1288, 0.1722, 0.1284,  ..., 0.1741, 0.1777, 0.1636],
         [0.1288, 0.1722, 0.1284,  ..., 0.1741, 0.1858, 0.1636],
         [0.1288, 0.1722, 0.1284,  ..., 0.1741, 0.1777, 0.1636],
         [0.6136, 0.4833, 0.6147,  ..., 0.4777, 0.4587, 0.5093]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:43,109 [Process: 0] Synchronize training processes
2024-08-16 13:03:43,110 [Process: 0] Evaluating...
2024-08-16 13:03:43,112 [Process: 0] EPOCH 265:
2024-08-16 13:03:43,114 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1498, 0.1987, 0.1755,  ..., 0.1773, 0.1871, 0.1885],
         [0.1498, 0.1987, 0.1755,  ..., 0.1773, 0.1871, 0.1885],
         [0.1498, 0.1987, 0.1755,  ..., 0.1773, 0.1871, 0.1885],
         [0.5505, 0.4040, 0.4734,  ..., 0.4682, 0.4387, 0.4345]],
        [[0.3374, 0.1682, 0.3445,  ..., 0.3840, 0.3345, 0.2946],
         [0.5310, 0.3182, 0.1914,  ..., 0.3137, 0.3478, 0.3324],
         [0.0658, 0.3454, 0.2726,  ..., 0.1754, 0.2284, 0.2214],
         [0.0658, 0.1682, 0.1914,  ..., 0.1269, 0.0893, 0.1517]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 265:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1588, 0.1641, 0.1462,  ..., 0.1981, 0.1489, 0.1319],
         [0.1588, 0.1886, 0.1462,  ..., 0.1981, 0.1505, 0.1319],
         [0.1588, 0.1641, 0.1462,  ..., 0.1981, 0.1489, 0.1319],
         [0.5237, 0.4832, 0.5614,  ..., 0.4058, 0.5517, 0.6043]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2473, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2580, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2473, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2473, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:45,114 [Process: 0] Synchronize training processes
2024-08-16 13:03:45,115 [Process: 0] Evaluating...
2024-08-16 13:03:45,117 [Process: 0] EPOCH 266:
2024-08-16 13:03:45,119 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1963, 0.1460, 0.2069,  ..., 0.1436, 0.1534, 0.0014],
         [0.1963, 0.1460, 0.2070,  ..., 0.1883, 0.1534, 0.0014],
         [0.1963, 0.1460, 0.2069,  ..., 0.1436, 0.1534, 0.9959],
         [0.4111, 0.5619, 0.3793,  ..., 0.5244, 0.5398, 0.0014]],
        [[0.3480, 0.2301, 0.2319,  ..., 0.1863, 0.2550, 0.3043],
         [0.2781, 0.3393, 0.2964,  ..., 0.3518, 0.2772, 0.2705],
         [0.2326, 0.2203, 0.2397,  ..., 0.2756, 0.2533, 0.2424],
         [0.1413, 0.2103, 0.2319,  ..., 0.1863, 0.2145, 0.1828]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 266:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1456, 0.1759, 0.1730,  ..., 0.2022, 0.1632, 0.2188],
         [0.1456, 0.1759, 0.1775,  ..., 0.2022, 0.1632, 0.2188],
         [0.1456, 0.1759, 0.1730,  ..., 0.2022, 0.1632, 0.2188],
         [0.5631, 0.4723, 0.4766,  ..., 0.3933, 0.5104, 0.3437]],
        [[0.2500, 0.2700, 0.2469,  ..., 0.2577, 0.2500, 0.2433],
         [0.2500, 0.2433, 0.2592,  ..., 0.2474, 0.2500, 0.2700],
         [0.2500, 0.2433, 0.2469,  ..., 0.2474, 0.2500, 0.2433],
         [0.2500, 0.2433, 0.2469,  ..., 0.2474, 0.2500, 0.2433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:47,049 [Process: 0] Synchronize training processes
2024-08-16 13:03:47,050 [Process: 0] Evaluating...
2024-08-16 13:03:47,052 [Process: 0] EPOCH 267:
2024-08-16 13:03:47,054 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1579, 0.2500, 0.3928,  ..., 0.2271, 0.1859, 0.2524],
         [0.1579, 0.2500, 0.2024,  ..., 0.2264, 0.1859, 0.1671],
         [0.1579, 0.2500, 0.2024,  ..., 0.2264, 0.1859, 0.1671],
         [0.5263, 0.2500, 0.2024,  ..., 0.3200, 0.4424, 0.4134]],
        [[0.2774, 0.1487, 0.2180,  ..., 0.4566, 0.1261, 0.2983],
         [0.3076, 0.1487, 0.3568,  ..., 0.3371, 0.4054, 0.4742],
         [0.2075, 0.5540, 0.3178,  ..., 0.1031, 0.3654, 0.1234],
         [0.2075, 0.1487, 0.1074,  ..., 0.1031, 0.1031, 0.1041]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 267:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1347, 0.1549, 0.1380,  ..., 0.1917, 0.1518, 0.1142],
         [0.1347, 0.1549, 0.1380,  ..., 0.2026, 0.1518, 0.1142],
         [0.1347, 0.1549, 0.1380,  ..., 0.1917, 0.1518, 0.1142],
         [0.5958, 0.5352, 0.5860,  ..., 0.4140, 0.5447, 0.6573]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2584, 0.2627, 0.2472],
         [0.2500, 0.2500, 0.2500,  ..., 0.2627, 0.2458, 0.2583],
         [0.2500, 0.2500, 0.2500,  ..., 0.2394, 0.2458, 0.2472],
         [0.2500, 0.2500, 0.2500,  ..., 0.2394, 0.2458, 0.2472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:49,061 [Process: 0] Synchronize training processes
2024-08-16 13:03:49,062 [Process: 0] Evaluating...
2024-08-16 13:03:49,064 [Process: 0] EPOCH 268:
2024-08-16 13:03:49,066 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1930, 0.2046, 0.2174,  ..., 0.1215, 0.2192, 0.0923],
         [0.1930, 0.2046, 0.2174,  ..., 0.1215, 0.2192, 0.0923],
         [0.1930, 0.2046, 0.2174,  ..., 0.2260, 0.2192, 0.1672],
         [0.4209, 0.3863, 0.3477,  ..., 0.5310, 0.3424, 0.6482]],
        [[0.4797, 0.1681, 0.1931,  ..., 0.2867, 0.2900, 0.2231],
         [0.2541, 0.4005, 0.3470,  ..., 0.2384, 0.3284, 0.3375],
         [0.1961, 0.2632, 0.2668,  ..., 0.2607, 0.2432, 0.2273],
         [0.0701, 0.1681, 0.1931,  ..., 0.2142, 0.1384, 0.2121]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 268:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1756, 0.1147, 0.1859,  ..., 0.1523, 0.1665, 0.1324],
         [0.1761, 0.1256, 0.1859,  ..., 0.1523, 0.1665, 0.1351],
         [0.1756, 0.1147, 0.1859,  ..., 0.1523, 0.1665, 0.1324],
         [0.4727, 0.6450, 0.4423,  ..., 0.5430, 0.5004, 0.6002]],
        [[0.2496, 0.2500, 0.2500,  ..., 0.2467, 0.2500, 0.2549],
         [0.2544, 0.2500, 0.2500,  ..., 0.2598, 0.2500, 0.2548],
         [0.2480, 0.2500, 0.2500,  ..., 0.2467, 0.2500, 0.2451],
         [0.2480, 0.2500, 0.2500,  ..., 0.2467, 0.2500, 0.2451]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:51,021 [Process: 0] Synchronize training processes
2024-08-16 13:03:51,021 [Process: 0] Evaluating...
2024-08-16 13:03:51,023 [Process: 0] EPOCH 269:
2024-08-16 13:03:51,025 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1271, 0.1921, 0.1419,  ..., 0.1873, 0.1898, 0.1625],
         [0.1580, 0.1921, 0.1419,  ..., 0.1873, 0.1898, 0.1625],
         [0.1271, 0.2062, 0.1722,  ..., 0.1873, 0.1898, 0.1625],
         [0.5877, 0.4096, 0.5440,  ..., 0.4382, 0.4306, 0.5125]],
        [[0.1850, 0.3181, 0.1816,  ..., 0.3099, 0.2821, 0.3783],
         [0.3771, 0.2636, 0.2116,  ..., 0.3418, 0.3549, 0.2086],
         [0.2529, 0.2402, 0.5110,  ..., 0.1742, 0.1955, 0.2805],
         [0.1850, 0.1781, 0.0957,  ..., 0.1742, 0.1675, 0.1325]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 269:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1422, 0.1358, 0.1256,  ..., 0.1552, 0.1582, 0.1760],
         [0.1422, 0.1358, 0.1256,  ..., 0.1552, 0.1582, 0.2052],
         [0.1422, 0.1358, 0.1256,  ..., 0.1552, 0.1582, 0.1760],
         [0.5735, 0.5926, 0.6231,  ..., 0.5343, 0.5253, 0.4428]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2452, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2644, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2452, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2452, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:03:52,946 [Process: 0] Synchronize training processes
2024-08-16 13:03:52,946 [Process: 0] Evaluating...
2024-08-16 13:03:52,948 [Process: 0] EPOCH 270:
2024-08-16 13:03:52,950 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1847, 0.1729, 0.1779,  ..., 0.1860, 0.1490, 0.1875],
         [0.1847, 0.1729, 0.1779,  ..., 0.1860, 0.1490, 0.1875],
         [0.1847, 0.1729, 0.1779,  ..., 0.1860, 0.1490, 0.1875],
         [0.4460, 0.4813, 0.4664,  ..., 0.4420, 0.5530, 0.4376]],
        [[0.3240, 0.2747, 0.2591,  ..., 0.3291, 0.2539, 0.3583],
         [0.3098, 0.3102, 0.2483,  ..., 0.2332, 0.3362, 0.2775],
         [0.2690, 0.3324, 0.3151,  ..., 0.3452, 0.2050, 0.2295],
         [0.0972, 0.0827, 0.1775,  ..., 0.0925, 0.2050, 0.1347]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 270:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1486, 0.1375, 0.1055,  ..., 0.1510, 0.1580, 0.1394],
         [0.1486, 0.1375, 0.1156,  ..., 0.1625, 0.1653, 0.1394],
         [0.1486, 0.1375, 0.1055,  ..., 0.1510, 0.1580, 0.1394],
         [0.5541, 0.5874, 0.6734,  ..., 0.5354, 0.5187, 0.5817]],
        [[0.2412, 0.2741, 0.2487,  ..., 0.2474, 0.2518, 0.2478],
         [0.2778, 0.2492, 0.2540,  ..., 0.2579, 0.2494, 0.2567],
         [0.2405, 0.2384, 0.2487,  ..., 0.2474, 0.2494, 0.2478],
         [0.2405, 0.2384, 0.2487,  ..., 0.2474, 0.2494, 0.2478]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:03:54,871 [Process: 0] Synchronize training processes
2024-08-16 13:03:54,871 [Process: 0] Evaluating...
2024-08-16 13:03:54,873 [Process: 0] EPOCH 271:
2024-08-16 13:03:54,875 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.2567, 0.1765, 0.1893,  ..., 0.1424, 0.1703, 0.2067],
         [0.1835, 0.3222, 0.1893,  ..., 0.1424, 0.1703, 0.1361],
         [0.1835, 0.1350, 0.1893,  ..., 0.1424, 0.1703, 0.1361],
         [0.3763, 0.3663, 0.4321,  ..., 0.5729, 0.4892, 0.5210]],
        [[0.1332, 0.4048, 0.1944,  ..., 0.3320, 0.1729, 0.2903],
         [0.3562, 0.1869, 0.2215,  ..., 0.2574, 0.3222, 0.3010],
         [0.3774, 0.3148, 0.4626,  ..., 0.2479, 0.3319, 0.2621],
         [0.1332, 0.0935, 0.1215,  ..., 0.1626, 0.1729, 0.1465]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 271:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1636, 0.1688, 0.1347,  ..., 0.1796, 0.1642, 0.1917],
         [0.1636, 0.1688, 0.1347,  ..., 0.1751, 0.1642, 0.1961],
         [0.1636, 0.1688, 0.1347,  ..., 0.1751, 0.1642, 0.1917],
         [0.5091, 0.4937, 0.5958,  ..., 0.4701, 0.5074, 0.4205]],
        [[0.2500, 0.2493, 0.2355,  ..., 0.2422, 0.2434, 0.2487],
         [0.2500, 0.2493, 0.2611,  ..., 0.2735, 0.2699, 0.2538],
         [0.2500, 0.2521, 0.2679,  ..., 0.2422, 0.2434, 0.2487],
         [0.2500, 0.2493, 0.2355,  ..., 0.2422, 0.2434, 0.2487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2168, 0.2565, 0.1622,  ..., 0.1505, 0.3207, 0.1671],
         [0.2168, 0.1573, 0.1622,  ..., 0.1505, 0.1566, 0.1671],
         [0.2168, 0.1573, 0.1622,  ..., 0.1505, 0.1566, 0.1671],
         [0.3497, 0.4289, 0.5134,  ..., 0.5484, 0.3661, 0.4988]],
        [[0.2297, 0.4036, 0.1977,  ..., 0.4889, 0.1723, 0.1906],
         [0.2297, 0.3025, 0.2184,  ..., 0.2971, 0.2284, 0.3182],
         [0.3108, 0.1967, 0.3863,  ..., 0.1200, 0.4271, 0.3005],
         [0.2297, 0.0972, 0.1977,  ..., 0.0940, 0.1723, 0.1906]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:03:56,794 [Process: 0] Synchronize training processes
2024-08-16 13:03:56,794 [Process: 0] Evaluating...
2024-08-16 13:03:56,796 [Process: 0] EPOCH 272:
2024-08-16 13:03:56,798 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 272:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1886, 0.1885, 0.1967,  ..., 0.1281, 0.1886, 0.1317],
         [0.1886, 0.1885, 0.1967,  ..., 0.1281, 0.1886, 0.1317],
         [0.1886, 0.1885, 0.1967,  ..., 0.1281, 0.1886, 0.1317],
         [0.4343, 0.4344, 0.4098,  ..., 0.6157, 0.4341, 0.6048]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2193, 0.2295, 0.1336,  ..., 0.4363, 0.2104, 0.1540],
         [0.2184, 0.2295, 0.1336,  ..., 0.1248, 0.2104, 0.1540],
         [0.2184, 0.2295, 0.1336,  ..., 0.1248, 0.2104, 0.1540],
         [0.3439, 0.3114, 0.5992,  ..., 0.3141, 0.3687, 0.5380]],
        [[0.2606, 0.1214, 0.3784,  ..., 0.6707, 0.2582, 0.3417],
         [0.2791, 0.4163, 0.2516,  ..., 0.1547, 0.3372, 0.2496],
         [0.3312, 0.3711, 0.2407,  ..., 0.1173, 0.2479, 0.3039],
         [0.1292, 0.0912, 0.1293,  ..., 0.0573, 0.1567, 0.1048]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 273:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:03:58,750 [Process: 0] Synchronize training processes
2024-08-16 13:03:58,751 [Process: 0] Evaluating...
2024-08-16 13:03:58,753 [Process: 0] EPOCH 273:
2024-08-16 13:03:58,755 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1662, 0.1454, 0.1278,  ..., 0.1212, 0.1501, 0.1350],
         [0.1757, 0.1462, 0.1478,  ..., 0.1224, 0.1501, 0.1409],
         [0.1662, 0.1454, 0.1278,  ..., 0.1212, 0.1501, 0.1350],
         [0.4920, 0.5629, 0.5966,  ..., 0.6351, 0.5496, 0.5891]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1442, 0.3074, 0.2210,  ..., 0.2179, 0.3472, 0.2988],
         [0.1264, 0.1750, 0.2210,  ..., 0.2179, 0.1953, 0.1278],
         [0.1264, 0.1750, 0.2212,  ..., 0.2179, 0.2622, 0.1278],
         [0.6030, 0.3426, 0.3369,  ..., 0.3462, 0.1953, 0.4457]],
        [[0.1966, 0.6609, 0.1871,  ..., 0.1945, 0.2500, 0.2381],
         [0.4102, 0.1898, 0.4919,  ..., 0.3809, 0.2500, 0.3529],
         [0.1966, 0.0747, 0.1605,  ..., 0.2302, 0.2500, 0.2986],
         [0.1966, 0.0747, 0.1605,  ..., 0.1945, 0.2500, 0.1103]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 274:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:00,701 [Process: 0] Synchronize training processes
2024-08-16 13:04:00,702 [Process: 0] Evaluating...
2024-08-16 13:04:00,704 [Process: 0] EPOCH 274:
2024-08-16 13:04:00,706 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1500, 0.1624, 0.1561,  ..., 0.1568, 0.1654, 0.1354],
         [0.1500, 0.1624, 0.1565,  ..., 0.1568, 0.1654, 0.1354],
         [0.1500, 0.1624, 0.1561,  ..., 0.1568, 0.1654, 0.1354],
         [0.5500, 0.5128, 0.5313,  ..., 0.5296, 0.5039, 0.5939]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2494, 0.2461, 0.2496],
         [0.2500, 0.2500, 0.2500,  ..., 0.2517, 0.2604, 0.2512],
         [0.2500, 0.2500, 0.2500,  ..., 0.2494, 0.2474, 0.2496],
         [0.2500, 0.2500, 0.2500,  ..., 0.2494, 0.2461, 0.2496]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1114, 0.1492, 0.2540,  ..., 0.1152, 0.1483, 0.1209],
         [0.1114, 0.1492, 0.1909,  ..., 0.3247, 0.1483, 0.1209],
         [0.1114, 0.1492, 0.1909,  ..., 0.1152, 0.1483, 0.3916],
         [0.6657, 0.5523, 0.3641,  ..., 0.4449, 0.5551, 0.3665]],
        [[0.2856, 0.3281, 0.1828,  ..., 0.3605, 0.2928, 0.2380],
         [0.2573, 0.2805, 0.2039,  ..., 0.1961, 0.3395, 0.4598],
         [0.2702, 0.2132, 0.4304,  ..., 0.2769, 0.1923, 0.1563],
         [0.1869, 0.1782, 0.1828,  ..., 0.1665, 0.1754, 0.1459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 275:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:02,626 [Process: 0] Synchronize training processes
2024-08-16 13:04:02,626 [Process: 0] Evaluating...
2024-08-16 13:04:02,628 [Process: 0] EPOCH 275:
2024-08-16 13:04:02,630 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1527, 0.2121, 0.1681,  ..., 0.1630, 0.1733, 0.1289],
         [0.1529, 0.2121, 0.1890,  ..., 0.1630, 0.1733, 0.1399],
         [0.1527, 0.2121, 0.1681,  ..., 0.1630, 0.1733, 0.1289],
         [0.5416, 0.3637, 0.4748,  ..., 0.5109, 0.4800, 0.6023]],
        [[0.2500, 0.2463, 0.2481,  ..., 0.2500, 0.2464, 0.2500],
         [0.2500, 0.2612, 0.2558,  ..., 0.2500, 0.2608, 0.2500],
         [0.2500, 0.2463, 0.2481,  ..., 0.2500, 0.2464, 0.2500],
         [0.2500, 0.2463, 0.2481,  ..., 0.2500, 0.2464, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2211, 0.2281, 0.2413,  ..., 0.2014, 0.1849, 0.0284],
         [0.2211, 0.2281, 0.2413,  ..., 0.2014, 0.1920, 0.0284],
         [0.2211, 0.2281, 0.2413,  ..., 0.2014, 0.1849, 0.9142],
         [0.3367, 0.3157, 0.2760,  ..., 0.3959, 0.4382, 0.0291]],
        [[0.2988, 0.2753, 0.2301,  ..., 0.3782, 0.2457, 0.3780],
         [0.3268, 0.3060, 0.2798,  ..., 0.3024, 0.3662, 0.3321],
         [0.2069, 0.2420, 0.2600,  ..., 0.1764, 0.2208, 0.1532],
         [0.1675, 0.1767, 0.2301,  ..., 0.1430, 0.1672, 0.1366]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 276:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:04,549 [Process: 0] Synchronize training processes
2024-08-16 13:04:04,549 [Process: 0] Evaluating...
2024-08-16 13:04:04,551 [Process: 0] EPOCH 276:
2024-08-16 13:04:04,553 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1647, 0.1347, 0.1549,  ..., 0.1257, 0.1845, 0.1789],
         [0.1647, 0.1347, 0.1549,  ..., 0.1314, 0.1845, 0.1789],
         [0.1647, 0.1347, 0.1549,  ..., 0.1257, 0.1845, 0.1789],
         [0.5060, 0.5958, 0.5354,  ..., 0.6172, 0.4465, 0.4632]],
        [[0.2701, 0.2508, 0.2506,  ..., 0.2500, 0.2500, 0.2500],
         [0.2478, 0.2579, 0.2652,  ..., 0.2500, 0.2500, 0.2500],
         [0.2411, 0.2456, 0.2421,  ..., 0.2500, 0.2500, 0.2500],
         [0.2411, 0.2456, 0.2421,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1556, 0.1348, 0.1607,  ..., 0.1751, 0.1933, 0.0165],
         [0.1556, 0.1348, 0.1607,  ..., 0.1751, 0.1933, 0.0165],
         [0.1556, 0.1348, 0.1607,  ..., 0.1751, 0.1933, 0.8519],
         [0.5332, 0.5957, 0.5178,  ..., 0.4748, 0.4201, 0.1151]],
        [[0.2458, 0.5208, 0.4591,  ..., 0.3059, 0.3277, 0.2861],
         [0.3001, 0.2682, 0.2421,  ..., 0.2432, 0.3184, 0.3807],
         [0.2697, 0.1147, 0.1835,  ..., 0.2997, 0.2271, 0.1918],
         [0.1843, 0.0962, 0.1153,  ..., 0.1511, 0.1269, 0.1415]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 277:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:06,462 [Process: 0] Synchronize training processes
2024-08-16 13:04:06,462 [Process: 0] Evaluating...
2024-08-16 13:04:06,464 [Process: 0] EPOCH 277:
2024-08-16 13:04:06,466 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1169, 0.1357, 0.1942,  ..., 0.1439, 0.1379, 0.1731],
         [0.1169, 0.1357, 0.2006,  ..., 0.1439, 0.1379, 0.1822],
         [0.1169, 0.1357, 0.1942,  ..., 0.1439, 0.1379, 0.1731],
         [0.6493, 0.5928, 0.4110,  ..., 0.5683, 0.5862, 0.4717]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2468, 0.2478],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2468, 0.2478],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2597, 0.2565],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2468, 0.2478]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1460, 0.1756, 0.1692,  ..., 0.1511, 0.1505, 0.1580],
         [0.1460, 0.1756, 0.1692,  ..., 0.1511, 0.1505, 0.1580],
         [0.1460, 0.1756, 0.1692,  ..., 0.1511, 0.1505, 0.1580],
         [0.5621, 0.4731, 0.4925,  ..., 0.5467, 0.5486, 0.5259]],
        [[0.2665, 0.3397, 0.3368,  ..., 0.4091, 0.3865, 0.3971],
         [0.2580, 0.2272, 0.2592,  ..., 0.2387, 0.2269, 0.2497],
         [0.2378, 0.2720, 0.2132,  ..., 0.2014, 0.2496, 0.2310],
         [0.2378, 0.1611, 0.1908,  ..., 0.1508, 0.1371, 0.1223]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 278:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:08,376 [Process: 0] Synchronize training processes
2024-08-16 13:04:08,376 [Process: 0] Evaluating...
2024-08-16 13:04:08,378 [Process: 0] EPOCH 278:
2024-08-16 13:04:08,380 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:10,270 [Process: 0] Synchronize training processes
2024-08-16 13:04:10,271 [Process: 0] Evaluating...
2024-08-16 13:04:10,273 [Process: 0] EPOCH 279:
2024-08-16 13:04:10,275 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1407, 0.1552, 0.1714,  ..., 0.1471, 0.1835, 0.1548],
         [0.1407, 0.1552, 0.1714,  ..., 0.1471, 0.1836, 0.1548],
         [0.1407, 0.1552, 0.1714,  ..., 0.1471, 0.1835, 0.1548],
         [0.5779, 0.5343, 0.4857,  ..., 0.5587, 0.4494, 0.5356]],
        [[0.2500, 0.2500, 0.2499,  ..., 0.2710, 0.2500, 0.2497],
         [0.2500, 0.2500, 0.2503,  ..., 0.2447, 0.2500, 0.2508],
         [0.2500, 0.2500, 0.2499,  ..., 0.2421, 0.2500, 0.2497],
         [0.2500, 0.2500, 0.2499,  ..., 0.2421, 0.2500, 0.2497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1460, 0.1827, 0.1310,  ..., 0.1432, 0.1546, 0.1457],
         [0.1635, 0.1827, 0.1310,  ..., 0.1763, 0.1546, 0.1457],
         [0.1460, 0.1827, 0.1310,  ..., 0.1432, 0.3120, 0.1457],
         [0.5445, 0.4519, 0.6070,  ..., 0.5373, 0.3788, 0.5630]],
        [[0.4098, 0.3799, 0.4851,  ..., 0.3420, 0.3528, 0.3080],
         [0.3375, 0.2175, 0.1868,  ..., 0.3492, 0.4106, 0.2097],
         [0.1397, 0.2013, 0.1640,  ..., 0.2812, 0.1633, 0.3279],
         [0.1130, 0.2013, 0.1640,  ..., 0.0275, 0.0733, 0.1544]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 279:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:12,164 [Process: 0] Synchronize training processes
2024-08-16 13:04:12,165 [Process: 0] Evaluating...
2024-08-16 13:04:12,166 [Process: 0] EPOCH 280:
2024-08-16 13:04:12,168 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1552, 0.1569, 0.1709,  ..., 0.1125, 0.1337, 0.1562],
         [0.1628, 0.1778, 0.1709,  ..., 0.1125, 0.1424, 0.1562],
         [0.1552, 0.1569, 0.1709,  ..., 0.1125, 0.1337, 0.1562],
         [0.5267, 0.5083, 0.4872,  ..., 0.6624, 0.5903, 0.5313]],
        [[0.2465, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2606, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2465, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2465, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1400, 0.3082, 0.3167,  ..., 0.2108, 0.5402, 0.1445],
         [0.1985, 0.1467, 0.1238,  ..., 0.2434, 0.2152, 0.1445],
         [0.1400, 0.1467, 0.1238,  ..., 0.1347, 0.0914, 0.1445],
         [0.5216, 0.3983, 0.4356,  ..., 0.4111, 0.1532, 0.5664]],
        [[0.2900, 0.2435, 0.2023,  ..., 0.2026, 0.2471, 0.1286],
         [0.1588, 0.2435, 0.2023,  ..., 0.2082, 0.2587, 0.1286],
         [0.3923, 0.2696, 0.3932,  ..., 0.3866, 0.2471, 0.6142],
         [0.1588, 0.2435, 0.2023,  ..., 0.2026, 0.2471, 0.1286]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 280:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:14,063 [Process: 0] Synchronize training processes
2024-08-16 13:04:14,064 [Process: 0] Evaluating...
2024-08-16 13:04:14,066 [Process: 0] EPOCH 281:
2024-08-16 13:04:14,068 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1386, 0.1204, 0.1944,  ..., 0.1563, 0.1659, 0.1601],
         [0.1386, 0.1216, 0.1944,  ..., 0.1563, 0.1762, 0.1605],
         [0.1386, 0.1204, 0.1944,  ..., 0.1563, 0.1659, 0.1601],
         [0.5843, 0.6375, 0.4168,  ..., 0.5310, 0.4921, 0.5192]],
        [[0.2495, 0.2477, 0.2500,  ..., 0.2500, 0.2482, 0.2456],
         [0.2514, 0.2570, 0.2500,  ..., 0.2500, 0.2555, 0.2632],
         [0.2495, 0.2477, 0.2500,  ..., 0.2500, 0.2482, 0.2456],
         [0.2495, 0.2477, 0.2500,  ..., 0.2500, 0.2482, 0.2456]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1424, 0.1585, 0.1594,  ..., 0.1931, 0.1741, 0.1649],
         [0.1424, 0.1585, 0.1594,  ..., 0.1931, 0.1741, 0.1649],
         [0.1424, 0.1585, 0.1594,  ..., 0.1931, 0.1741, 0.1649],
         [0.5727, 0.5245, 0.5217,  ..., 0.4206, 0.4776, 0.5052]],
        [[0.4521, 0.3474, 0.3483,  ..., 0.2965, 0.2970, 0.3395],
         [0.1714, 0.3360, 0.3336,  ..., 0.2834, 0.3849, 0.2862],
         [0.2983, 0.1746, 0.1752,  ..., 0.2491, 0.2234, 0.2734],
         [0.0783, 0.1420, 0.1429,  ..., 0.1710, 0.0947, 0.1009]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 281:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:04:15,955 [Process: 0] Synchronize training processes
2024-08-16 13:04:15,955 [Process: 0] Evaluating...
2024-08-16 13:04:15,957 [Process: 0] EPOCH 282:
2024-08-16 13:04:15,959 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1218, 0.1378, 0.1858,  ..., 0.1699, 0.1400, 0.1180],
         [0.1218, 0.1378, 0.1858,  ..., 0.1699, 0.1400, 0.1180],
         [0.1218, 0.1378, 0.1858,  ..., 0.1699, 0.1400, 0.1180],
         [0.6347, 0.5866, 0.4427,  ..., 0.4902, 0.5801, 0.6460]],
        [[0.2458, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2464],
         [0.2626, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2608],
         [0.2458, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2464],
         [0.2458, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1433, 0.1976, 0.1917,  ..., 0.1335, 0.1656, 0.2120],
         [0.1433, 0.1976, 0.1917,  ..., 0.1335, 0.1656, 0.2120],
         [0.1433, 0.1976, 0.1917,  ..., 0.1335, 0.1656, 0.2120],
         [0.5702, 0.4073, 0.4248,  ..., 0.5995, 0.5031, 0.3641]],
        [[0.2391, 0.2752, 0.1614,  ..., 0.2123, 0.2842, 0.2194],
         [0.3553, 0.2555, 0.4149,  ..., 0.2752, 0.2823, 0.2770],
         [0.2490, 0.2678, 0.2623,  ..., 0.3001, 0.2366, 0.2843],
         [0.1566, 0.2015, 0.1614,  ..., 0.2123, 0.1970, 0.2194]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 282:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1585, 0.1667, 0.1429,  ..., 0.1589, 0.1289, 0.1496],
         [0.1585, 0.1667, 0.1429,  ..., 0.1630, 0.1342, 0.1496],
         [0.1585, 0.1667, 0.1429,  ..., 0.1589, 0.1289, 0.1496],
         [0.5244, 0.4998, 0.5713,  ..., 0.5191, 0.6080, 0.5511]],
        [[0.2500, 0.2484, 0.2500,  ..., 0.2431, 0.2423, 0.2500],
         [0.2500, 0.2548, 0.2500,  ..., 0.2708, 0.2730, 0.2500],
         [0.2500, 0.2484, 0.2500,  ..., 0.2431, 0.2423, 0.2500],
         [0.2500, 0.2484, 0.2500,  ..., 0.2431, 0.2423, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:04:17,848 [Process: 0] Synchronize training processes
2024-08-16 13:04:17,848 [Process: 0] Evaluating...
2024-08-16 13:04:17,850 [Process: 0] EPOCH 283:
2024-08-16 13:04:17,852 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3167, 0.1652, 0.1257,  ..., 0.1819, 0.2040, 0.1560],
         [0.1318, 0.1652, 0.1558,  ..., 0.2593, 0.2040, 0.1560],
         [0.1318, 0.1652, 0.1257,  ..., 0.1819, 0.2040, 0.1560],
         [0.4196, 0.5045, 0.5927,  ..., 0.3768, 0.3879, 0.5320]],
        [[0.1790, 0.2500, 0.4428,  ..., 0.2500, 0.1623, 0.2239],
         [0.2891, 0.2500, 0.2159,  ..., 0.2500, 0.1024, 0.2239],
         [0.3529, 0.2500, 0.1883,  ..., 0.2500, 0.6330, 0.3283],
         [0.1790, 0.2500, 0.1529,  ..., 0.2500, 0.1024, 0.2239]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 283:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1612, 0.2067, 0.1555,  ..., 0.1812, 0.1653, 0.1522],
         [0.1612, 0.2067, 0.1555,  ..., 0.1812, 0.1653, 0.1522],
         [0.1612, 0.2067, 0.1555,  ..., 0.1812, 0.1653, 0.1522],
         [0.5164, 0.3799, 0.5334,  ..., 0.4564, 0.5042, 0.5435]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2666],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2509, 0.2538],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2398],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2398]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:04:19,741 [Process: 0] Synchronize training processes
2024-08-16 13:04:19,741 [Process: 0] Evaluating...
2024-08-16 13:04:19,743 [Process: 0] EPOCH 284:
2024-08-16 13:04:19,745 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1590, 0.1790, 0.1872,  ..., 0.1673, 0.1798, 0.1461],
         [0.1590, 0.1790, 0.1872,  ..., 0.1673, 0.1798, 0.1461],
         [0.1590, 0.1790, 0.1872,  ..., 0.1673, 0.1798, 0.1461],
         [0.5230, 0.4631, 0.4385,  ..., 0.4981, 0.4607, 0.5618]],
        [[0.2624, 0.3387, 0.2801,  ..., 0.3837, 0.3470, 0.2606],
         [0.1538, 0.2548, 0.1444,  ..., 0.2521, 0.3705, 0.2737],
         [0.4309, 0.2938, 0.4563,  ..., 0.2266, 0.2105, 0.3267],
         [0.1529, 0.1128, 0.1192,  ..., 0.1377, 0.0719, 0.1389]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 284:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1557, 0.1575, 0.1429,  ..., 0.1483, 0.1575, 0.1494],
         [0.1597, 0.1575, 0.1429,  ..., 0.1520, 0.1575, 0.1494],
         [0.1557, 0.1575, 0.1429,  ..., 0.1483, 0.1575, 0.1494],
         [0.5288, 0.5275, 0.5714,  ..., 0.5514, 0.5274, 0.5518]],
        [[0.2500, 0.2495, 0.2500,  ..., 0.2500, 0.2445, 0.2500],
         [0.2500, 0.2514, 0.2500,  ..., 0.2500, 0.2665, 0.2500],
         [0.2500, 0.2495, 0.2500,  ..., 0.2500, 0.2445, 0.2500],
         [0.2500, 0.2495, 0.2500,  ..., 0.2500, 0.2445, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:04:21,657 [Process: 0] Synchronize training processes
2024-08-16 13:04:21,658 [Process: 0] Evaluating...
2024-08-16 13:04:21,660 [Process: 0] EPOCH 285:
2024-08-16 13:04:21,662 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2234, 0.1863, 0.2228,  ..., 0.1307, 0.1453, 0.1152],
         [0.2234, 0.1863, 0.2228,  ..., 0.1307, 0.1453, 0.1152],
         [0.2234, 0.1863, 0.2228,  ..., 0.5763, 0.1544, 0.1152],
         [0.3297, 0.4410, 0.3315,  ..., 0.1622, 0.5550, 0.6543]],
        [[0.3638, 0.3362, 0.4030,  ..., 0.2386, 0.4011, 0.4894],
         [0.2607, 0.4053, 0.3285,  ..., 0.4702, 0.2570, 0.2767],
         [0.3005, 0.1476, 0.1421,  ..., 0.1456, 0.2281, 0.1384],
         [0.0751, 0.1110, 0.1264,  ..., 0.1456, 0.1138, 0.0955]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 285:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1983, 0.1734, 0.1619,  ..., 0.1740, 0.1237, 0.2024],
         [0.2158, 0.1734, 0.1619,  ..., 0.1740, 0.1237, 0.2024],
         [0.1983, 0.1734, 0.1619,  ..., 0.1740, 0.1237, 0.2024],
         [0.3876, 0.4799, 0.5144,  ..., 0.4780, 0.6288, 0.3927]],
        [[0.2497, 0.2500, 0.2429,  ..., 0.2466, 0.2468, 0.2500],
         [0.2510, 0.2500, 0.2712,  ..., 0.2602, 0.2597, 0.2500],
         [0.2497, 0.2500, 0.2429,  ..., 0.2466, 0.2468, 0.2500],
         [0.2497, 0.2500, 0.2429,  ..., 0.2466, 0.2468, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:04:23,561 [Process: 0] Synchronize training processes
2024-08-16 13:04:23,561 [Process: 0] Evaluating...
2024-08-16 13:04:23,563 [Process: 0] EPOCH 286:
2024-08-16 13:04:23,565 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1663, 0.1785, 0.1086,  ..., 0.1569, 0.1792, 0.1594],
         [0.1663, 0.1785, 0.2269,  ..., 0.5231, 0.1792, 0.2850],
         [0.1663, 0.1785, 0.1086,  ..., 0.1247, 0.1792, 0.1594],
         [0.5011, 0.4646, 0.5558,  ..., 0.1953, 0.4624, 0.3963]],
        [[0.3039, 0.2067, 0.2517,  ..., 0.3671, 0.2781, 0.2500],
         [0.1971, 0.1537, 0.1608,  ..., 0.2352, 0.1952, 0.2500],
         [0.3312, 0.4859, 0.4268,  ..., 0.3141, 0.3315, 0.2500],
         [0.1678, 0.1537, 0.1608,  ..., 0.0836, 0.1952, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 286:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1777, 0.1813, 0.1575,  ..., 0.1223, 0.1360, 0.1514],
         [0.1777, 0.1813, 0.1575,  ..., 0.1429, 0.1678, 0.1605],
         [0.1777, 0.1813, 0.1575,  ..., 0.1223, 0.1360, 0.1514],
         [0.4670, 0.4561, 0.5276,  ..., 0.6124, 0.5602, 0.5367]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2466, 0.2500, 0.2497],
         [0.2500, 0.2500, 0.2500,  ..., 0.2603, 0.2500, 0.2510],
         [0.2500, 0.2500, 0.2500,  ..., 0.2466, 0.2500, 0.2497],
         [0.2500, 0.2500, 0.2500,  ..., 0.2466, 0.2500, 0.2497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:04:25,462 [Process: 0] Synchronize training processes
2024-08-16 13:04:25,463 [Process: 0] Evaluating...
2024-08-16 13:04:25,464 [Process: 0] EPOCH 287:
2024-08-16 13:04:25,466 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1801, 0.1964, 0.1791,  ..., 0.1562, 0.1668, 0.1376],
         [0.1801, 0.1964, 0.1791,  ..., 0.1562, 0.1668, 0.1376],
         [0.1801, 0.1964, 0.1791,  ..., 0.1562, 0.1668, 0.1376],
         [0.4598, 0.4107, 0.4626,  ..., 0.5314, 0.4997, 0.5871]],
        [[0.3543, 0.3531, 0.2500,  ..., 0.3156, 0.3221, 0.2500],
         [0.2263, 0.1805, 0.2670,  ..., 0.2162, 0.2085, 0.2500],
         [0.2804, 0.3432, 0.3611,  ..., 0.3191, 0.3082, 0.2500],
         [0.1390, 0.1232, 0.1218,  ..., 0.1490, 0.1612, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 287:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1385, 0.1574, 0.1699,  ..., 0.1585, 0.2001, 0.1438],
         [0.1385, 0.1574, 0.1699,  ..., 0.1585, 0.2001, 0.1479],
         [0.1385, 0.1574, 0.1699,  ..., 0.1585, 0.2001, 0.1438],
         [0.5846, 0.5277, 0.4902,  ..., 0.5246, 0.3998, 0.5645]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2956],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2468],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2288],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2288]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:04:27,362 [Process: 0] Synchronize training processes
2024-08-16 13:04:27,362 [Process: 0] Evaluating...
2024-08-16 13:04:27,364 [Process: 0] EPOCH 288:
2024-08-16 13:04:27,366 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1812, 0.1808, 0.1614,  ..., 0.1975, 0.1695, 0.1683],
         [0.1812, 0.1808, 0.1614,  ..., 0.1975, 0.1695, 0.1683],
         [0.1812, 0.1808, 0.1614,  ..., 0.1975, 0.1695, 0.1683],
         [0.4564, 0.4577, 0.5157,  ..., 0.4076, 0.4915, 0.4952]],
        [[0.1406, 0.3279, 0.2509,  ..., 0.1847, 0.1640, 0.2030],
         [0.3148, 0.2599, 0.3095,  ..., 0.3730, 0.3936, 0.4060],
         [0.4041, 0.3362, 0.3227,  ..., 0.3103, 0.3544, 0.2541],
         [0.1406, 0.0761, 0.1170,  ..., 0.1320, 0.0879, 0.1370]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 288:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1313, 0.1358, 0.1728,  ..., 0.1603, 0.1092, 0.1982],
         [0.1313, 0.1358, 0.1802,  ..., 0.1660, 0.1092, 0.2029],
         [0.1313, 0.1358, 0.1728,  ..., 0.1550, 0.1092, 0.1982],
         [0.6062, 0.5925, 0.4741,  ..., 0.5187, 0.6724, 0.4007]],
        [[0.2638, 0.2889, 0.2422,  ..., 0.2718, 0.2500, 0.2500],
         [0.2549, 0.2375, 0.2735,  ..., 0.2540, 0.2500, 0.2500],
         [0.2423, 0.2368, 0.2422,  ..., 0.2393, 0.2500, 0.2500],
         [0.2390, 0.2368, 0.2422,  ..., 0.2349, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:04:29,271 [Process: 0] Synchronize training processes
2024-08-16 13:04:29,271 [Process: 0] Evaluating...
2024-08-16 13:04:29,273 [Process: 0] EPOCH 289:
2024-08-16 13:04:29,275 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2252, 0.2128, 0.2732,  ..., 0.3251, 0.2010, 0.1634],
         [0.1615, 0.1991, 0.1635,  ..., 0.2164, 0.2010, 0.2105],
         [0.1147, 0.1991, 0.1635,  ..., 0.1784, 0.2010, 0.1634],
         [0.4986, 0.3889, 0.3998,  ..., 0.2801, 0.3970, 0.4627]],
        [[0.2998, 0.2500, 0.2542,  ..., 0.2107, 0.1937, 0.2082],
         [0.2731, 0.2500, 0.2595,  ..., 0.2107, 0.2098, 0.1650],
         [0.2815, 0.2500, 0.2954,  ..., 0.3679, 0.4249, 0.4619],
         [0.1457, 0.2500, 0.1909,  ..., 0.2107, 0.1716, 0.1650]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 289:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1522, 0.1881, 0.1557,  ..., 0.1721, 0.2020, 0.1426],
         [0.1522, 0.1951, 0.1557,  ..., 0.1721, 0.2020, 0.1641],
         [0.1522, 0.1881, 0.1557,  ..., 0.1721, 0.2020, 0.1426],
         [0.5433, 0.4287, 0.5330,  ..., 0.4838, 0.3940, 0.5507]],
        [[0.2441, 0.2500, 0.2500,  ..., 0.2451, 0.2467, 0.2500],
         [0.2678, 0.2500, 0.2500,  ..., 0.2646, 0.2599, 0.2500],
         [0.2441, 0.2500, 0.2500,  ..., 0.2451, 0.2467, 0.2500],
         [0.2441, 0.2500, 0.2500,  ..., 0.2451, 0.2467, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:04:31,168 [Process: 0] Synchronize training processes
2024-08-16 13:04:31,168 [Process: 0] Evaluating...
2024-08-16 13:04:31,170 [Process: 0] EPOCH 290:
2024-08-16 13:04:31,172 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1240, 0.1886, 0.1910,  ..., 0.1675, 0.1253, 0.1927],
         [0.1240, 0.1886, 0.1910,  ..., 0.1675, 0.1253, 0.1927],
         [0.1240, 0.2516, 0.1910,  ..., 0.1675, 0.1774, 0.1927],
         [0.6280, 0.3712, 0.4270,  ..., 0.4975, 0.5720, 0.4220]],
        [[0.2827, 0.3023, 0.2547,  ..., 0.2548, 0.2800, 0.3177],
         [0.4116, 0.2460, 0.3306,  ..., 0.2212, 0.3172, 0.2677],
         [0.1607, 0.3684, 0.3311,  ..., 0.4335, 0.2738, 0.3077],
         [0.1451, 0.0832, 0.0836,  ..., 0.0905, 0.1290, 0.1069]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 290:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1591, 0.1672, 0.1813,  ..., 0.1807, 0.1919, 0.1854],
         [0.1591, 0.1672, 0.1813,  ..., 0.1807, 0.1919, 0.1854],
         [0.1591, 0.1672, 0.1813,  ..., 0.1807, 0.1919, 0.1854],
         [0.5228, 0.4983, 0.4560,  ..., 0.4578, 0.4243, 0.4439]],
        [[0.2500, 0.2500, 0.2474,  ..., 0.2500, 0.2500, 0.2556],
         [0.2500, 0.2500, 0.2579,  ..., 0.2500, 0.2500, 0.2568],
         [0.2500, 0.2500, 0.2474,  ..., 0.2500, 0.2500, 0.2438],
         [0.2500, 0.2500, 0.2474,  ..., 0.2500, 0.2500, 0.2438]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:04:33,072 [Process: 0] Synchronize training processes
2024-08-16 13:04:33,072 [Process: 0] Evaluating...
2024-08-16 13:04:33,074 [Process: 0] EPOCH 291:
2024-08-16 13:04:33,076 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1974, 0.1300, 0.1493,  ..., 0.2431, 0.2354, 0.2697],
         [0.1419, 0.1282, 0.2073,  ..., 0.3731, 0.2354, 0.3082],
         [0.4027, 0.1636, 0.1282,  ..., 0.1005, 0.2354, 0.1340],
         [0.2580, 0.5782, 0.5152,  ..., 0.2833, 0.2938, 0.2880]],
        [[0.1548, 0.2141, 0.3166,  ..., 0.2864, 0.2500, 0.5024],
         [0.4417, 0.2141, 0.2591,  ..., 0.2379, 0.2500, 0.2163],
         [0.2585, 0.3577, 0.3208,  ..., 0.2379, 0.2500, 0.2452],
         [0.1451, 0.2141, 0.1036,  ..., 0.2379, 0.2500, 0.0361]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 291:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1542, 0.1452, 0.1335,  ..., 0.1445, 0.1723, 0.1838],
         [0.1542, 0.1670, 0.1478,  ..., 0.1445, 0.1723, 0.1838],
         [0.1542, 0.1452, 0.1335,  ..., 0.1445, 0.1723, 0.1838],
         [0.5373, 0.5425, 0.5852,  ..., 0.5664, 0.4832, 0.4485]],
        [[0.2415, 0.2500, 0.2500,  ..., 0.2446, 0.2500, 0.2353],
         [0.2756, 0.2500, 0.2500,  ..., 0.2665, 0.2500, 0.2940],
         [0.2415, 0.2500, 0.2500,  ..., 0.2445, 0.2500, 0.2353],
         [0.2415, 0.2500, 0.2500,  ..., 0.2445, 0.2500, 0.2353]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:04:35,016 [Process: 0] Synchronize training processes
2024-08-16 13:04:35,016 [Process: 0] Evaluating...
2024-08-16 13:04:35,018 [Process: 0] EPOCH 292:
2024-08-16 13:04:35,020 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1589, 0.1269, 0.1976,  ..., 0.0208, 0.7293, 0.2459],
         [0.2766, 0.1269, 0.1976,  ..., 0.0208, 0.0201, 0.2459],
         [0.1589, 0.1269, 0.1976,  ..., 0.9376, 0.1980, 0.2459],
         [0.4056, 0.6193, 0.4073,  ..., 0.0208, 0.0526, 0.2623]],
        [[0.3381, 0.4238, 0.2256,  ..., 0.3293, 0.3762, 0.2197],
         [0.2861, 0.2286, 0.3020,  ..., 0.2207, 0.3068, 0.3342],
         [0.2046, 0.1855, 0.2468,  ..., 0.2293, 0.1613, 0.2264],
         [0.1712, 0.1621, 0.2256,  ..., 0.2207, 0.1557, 0.2197]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 292:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1211, 0.1507, 0.1293,  ..., 0.1588, 0.1695, 0.1169],
         [0.1211, 0.1605, 0.1293,  ..., 0.1588, 0.1695, 0.1169],
         [0.1211, 0.1507, 0.1293,  ..., 0.1588, 0.1695, 0.1169],
         [0.6366, 0.5381, 0.6121,  ..., 0.5235, 0.4916, 0.6492]],
        [[0.2500, 0.2473, 0.2495,  ..., 0.2445, 0.2500, 0.2500],
         [0.2500, 0.2581, 0.2515,  ..., 0.2666, 0.2500, 0.2500],
         [0.2500, 0.2473, 0.2495,  ..., 0.2445, 0.2500, 0.2500],
         [0.2500, 0.2473, 0.2495,  ..., 0.2445, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4130, 0.2627, 0.5166,  ..., 0.2772, 0.2107, 0.1023],
         [0.1406, 0.1602, 0.1291,  ..., 0.1926, 0.1847, 0.1020],
         [0.1294, 0.1602, 0.1216,  ..., 0.1926, 0.1847, 0.1020],
         [0.3170, 0.4169, 0.2327,  ..., 0.3376, 0.4198, 0.6936]],
        [[0.0792, 0.2031, 0.1929,  ..., 0.1798, 0.0969, 0.0773],
         [0.6772, 0.2676, 0.3690,  ..., 0.2878, 0.4276, 0.6629],
         [0.1779, 0.3263, 0.3235,  ..., 0.3525, 0.3787, 0.1825],
         [0.0657, 0.2031, 0.1146,  ..., 0.1798, 0.0969, 0.0773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:04:36,932 [Process: 0] Synchronize training processes
2024-08-16 13:04:36,933 [Process: 0] Evaluating...
2024-08-16 13:04:36,935 [Process: 0] EPOCH 293:
2024-08-16 13:04:36,937 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 293:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1431, 0.1769, 0.1859,  ..., 0.1684, 0.1504, 0.1620],
         [0.1431, 0.1769, 0.1859,  ..., 0.1684, 0.1504, 0.1775],
         [0.1431, 0.1769, 0.1859,  ..., 0.1684, 0.1504, 0.1620],
         [0.5706, 0.4694, 0.4423,  ..., 0.4947, 0.5489, 0.4985]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1710, 0.3366, 0.2066,  ..., 0.1524, 0.1457, 0.5235],
         [0.1767, 0.1538, 0.2066,  ..., 0.1524, 0.2468, 0.2467],
         [0.1710, 0.1538, 0.2066,  ..., 0.1524, 0.1457, 0.0790],
         [0.4813, 0.3557, 0.3801,  ..., 0.5429, 0.4619, 0.1508]],
        [[0.3488, 0.1876, 0.3290,  ..., 0.2355, 0.3201, 0.2405],
         [0.1885, 0.2241, 0.2416,  ..., 0.4051, 0.2006, 0.2405],
         [0.3519, 0.4007, 0.2626,  ..., 0.2802, 0.2786, 0.2784],
         [0.1108, 0.1876, 0.1668,  ..., 0.0792, 0.2006, 0.2405]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 294:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:38,849 [Process: 0] Synchronize training processes
2024-08-16 13:04:38,849 [Process: 0] Evaluating...
2024-08-16 13:04:38,851 [Process: 0] EPOCH 294:
2024-08-16 13:04:38,853 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1630, 0.1728, 0.1587,  ..., 0.1420, 0.1568, 0.1730],
         [0.1737, 0.1867, 0.1587,  ..., 0.1532, 0.1568, 0.1730],
         [0.1630, 0.1728, 0.1587,  ..., 0.1420, 0.1568, 0.1730],
         [0.5002, 0.4677, 0.5240,  ..., 0.5628, 0.5295, 0.4811]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1249, 0.1347, 0.2017,  ..., 0.1675, 0.1631, 0.1857],
         [0.1249, 0.1347, 0.2017,  ..., 0.1675, 0.1631, 0.1857],
         [0.1249, 0.1347, 0.2017,  ..., 0.1675, 0.1631, 0.1857],
         [0.6254, 0.5958, 0.3948,  ..., 0.4974, 0.5106, 0.4428]],
        [[0.1800, 0.3015, 0.3578,  ..., 0.5792, 0.2169, 0.2370],
         [0.2851, 0.5304, 0.2800,  ..., 0.1601, 0.2169, 0.1867],
         [0.3925, 0.0999, 0.2132,  ..., 0.1638, 0.3492, 0.3896],
         [0.1425, 0.0681, 0.1490,  ..., 0.0969, 0.2169, 0.1867]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 295:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:40,758 [Process: 0] Synchronize training processes
2024-08-16 13:04:40,758 [Process: 0] Evaluating...
2024-08-16 13:04:40,760 [Process: 0] EPOCH 295:
2024-08-16 13:04:40,762 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1235, 0.1572, 0.1270,  ..., 0.1598, 0.1458, 0.1450],
         [0.1235, 0.1572, 0.1270,  ..., 0.1598, 0.1458, 0.1450],
         [0.1235, 0.1572, 0.1270,  ..., 0.1598, 0.1458, 0.1450],
         [0.6296, 0.5285, 0.6189,  ..., 0.5205, 0.5626, 0.5650]],
        [[0.2500, 0.2500, 0.2479,  ..., 0.2500, 0.2500, 0.2488],
         [0.2500, 0.2500, 0.2562,  ..., 0.2500, 0.2500, 0.2535],
         [0.2500, 0.2500, 0.2479,  ..., 0.2500, 0.2500, 0.2488],
         [0.2500, 0.2500, 0.2479,  ..., 0.2500, 0.2500, 0.2488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1418, 0.1187, 0.1736,  ..., 0.1223, 0.1604, 0.1166],
         [0.3606, 0.1187, 0.1736,  ..., 0.1223, 0.3116, 0.2361],
         [0.1700, 0.4483, 0.1736,  ..., 0.3550, 0.2608, 0.2734],
         [0.3276, 0.3144, 0.4792,  ..., 0.4005, 0.2672, 0.3739]],
        [[0.4070, 0.2236, 0.2418,  ..., 0.2291, 0.2854, 0.2500],
         [0.2698, 0.4933, 0.2315,  ..., 0.2295, 0.1867, 0.2500],
         [0.1819, 0.1416, 0.2951,  ..., 0.3124, 0.3413, 0.2500],
         [0.1414, 0.1416, 0.2315,  ..., 0.2291, 0.1867, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 296:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:42,733 [Process: 0] Synchronize training processes
2024-08-16 13:04:42,734 [Process: 0] Evaluating...
2024-08-16 13:04:42,736 [Process: 0] EPOCH 296:
2024-08-16 13:04:42,738 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1560, 0.1220, 0.1715,  ..., 0.1668, 0.1506, 0.1132],
         [0.1560, 0.1397, 0.1715,  ..., 0.1668, 0.1616, 0.1132],
         [0.1560, 0.1220, 0.1715,  ..., 0.1668, 0.1506, 0.1132],
         [0.5320, 0.6163, 0.4854,  ..., 0.4995, 0.5372, 0.6603]],
        [[0.2499, 0.2500, 0.2459,  ..., 0.2645, 0.2500, 0.2622],
         [0.2502, 0.2500, 0.2622,  ..., 0.2538, 0.2501, 0.2658],
         [0.2499, 0.2500, 0.2459,  ..., 0.2408, 0.2500, 0.2360],
         [0.2499, 0.2500, 0.2459,  ..., 0.2408, 0.2500, 0.2360]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1585, 0.1910, 0.1595,  ..., 0.1944, 0.1783, 0.1683],
         [0.1585, 0.1910, 0.1595,  ..., 0.1944, 0.1783, 0.1683],
         [0.1585, 0.1910, 0.1595,  ..., 0.1944, 0.1783, 0.1683],
         [0.5246, 0.4271, 0.5215,  ..., 0.4169, 0.4651, 0.4950]],
        [[0.3086, 0.2505, 0.3777,  ..., 0.3490, 0.2242, 0.3471],
         [0.2928, 0.3246, 0.2181,  ..., 0.2798, 0.2891, 0.2753],
         [0.2881, 0.3522, 0.3395,  ..., 0.2536, 0.4253, 0.2849],
         [0.1105, 0.0726, 0.0646,  ..., 0.1176, 0.0614, 0.0926]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 297:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:44,669 [Process: 0] Synchronize training processes
2024-08-16 13:04:44,670 [Process: 0] Evaluating...
2024-08-16 13:04:44,671 [Process: 0] EPOCH 297:
2024-08-16 13:04:44,673 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1841, 0.1863, 0.1735,  ..., 0.1332, 0.1611, 0.1251],
         [0.1936, 0.1940, 0.1735,  ..., 0.1332, 0.1711, 0.1251],
         [0.1841, 0.1863, 0.1735,  ..., 0.1332, 0.1611, 0.1251],
         [0.4383, 0.4335, 0.4795,  ..., 0.6004, 0.5068, 0.6246]],
        [[0.2500, 0.2419, 0.2489,  ..., 0.2500, 0.2486, 0.2518],
         [0.2500, 0.2742, 0.2533,  ..., 0.2825, 0.2541, 0.2494],
         [0.2500, 0.2419, 0.2489,  ..., 0.2345, 0.2486, 0.2494],
         [0.2500, 0.2419, 0.2489,  ..., 0.2330, 0.2486, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1403, 0.0904, 0.2159,  ..., 0.0981, 0.2861, 0.1316],
         [0.0926, 0.1612, 0.2343,  ..., 0.3128, 0.1924, 0.1741],
         [0.0926, 0.0904, 0.1964,  ..., 0.0981, 0.1519, 0.1316],
         [0.6745, 0.6580, 0.3534,  ..., 0.4911, 0.3696, 0.5627]],
        [[0.2495, 0.2353, 0.2295,  ..., 0.2206, 0.2264, 0.1489],
         [0.2229, 0.2353, 0.1745,  ..., 0.2206, 0.3421, 0.2681],
         [0.3046, 0.2940, 0.4214,  ..., 0.3382, 0.3048, 0.4341],
         [0.2229, 0.2353, 0.1745,  ..., 0.2206, 0.1267, 0.1489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 298:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:46,574 [Process: 0] Synchronize training processes
2024-08-16 13:04:46,574 [Process: 0] Evaluating...
2024-08-16 13:04:46,576 [Process: 0] EPOCH 298:
2024-08-16 13:04:46,578 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1642, 0.1316, 0.1555,  ..., 0.1892, 0.1347, 0.1498],
         [0.1642, 0.1342, 0.1555,  ..., 0.1892, 0.1347, 0.1592],
         [0.1642, 0.1316, 0.1555,  ..., 0.1892, 0.1347, 0.1498],
         [0.5075, 0.6026, 0.5335,  ..., 0.4323, 0.5959, 0.5413]],
        [[0.2604, 0.2555, 0.2716,  ..., 0.2454, 0.2511, 0.2443],
         [0.2465, 0.2549, 0.2547,  ..., 0.2638, 0.2501, 0.2671],
         [0.2465, 0.2448, 0.2368,  ..., 0.2454, 0.2494, 0.2443],
         [0.2465, 0.2448, 0.2368,  ..., 0.2454, 0.2494, 0.2443]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2040, 0.1620, 0.1743,  ..., 0.1350, 0.1582, 0.1747],
         [0.2040, 0.1620, 0.1743,  ..., 0.1350, 0.1831, 0.2271],
         [0.2040, 0.1620, 0.1743,  ..., 0.1350, 0.1582, 0.1747],
         [0.3881, 0.5141, 0.4772,  ..., 0.5950, 0.5005, 0.4234]],
        [[0.3403, 0.4467, 0.6007,  ..., 0.2401, 0.1806, 0.2175],
         [0.2341, 0.2243, 0.2342,  ..., 0.2798, 0.0957, 0.3982],
         [0.2601, 0.1645, 0.0876,  ..., 0.2401, 0.6516, 0.2187],
         [0.1655, 0.1645, 0.0775,  ..., 0.2401, 0.0722, 0.1655]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 299:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:48,476 [Process: 0] Synchronize training processes
2024-08-16 13:04:48,476 [Process: 0] Evaluating...
2024-08-16 13:04:48,478 [Process: 0] EPOCH 299:
2024-08-16 13:04:48,480 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1838, 0.1425, 0.1734,  ..., 0.1931, 0.1780, 0.1468],
         [0.2051, 0.1425, 0.1734,  ..., 0.1931, 0.1780, 0.1468],
         [0.1838, 0.1425, 0.1734,  ..., 0.1931, 0.1780, 0.1468],
         [0.4273, 0.5725, 0.4799,  ..., 0.4207, 0.4660, 0.5597]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1443, 0.1706, 0.1385,  ..., 0.2042, 0.1950, 0.1590],
         [0.1443, 0.2158, 0.1385,  ..., 0.2042, 0.1626, 0.1590],
         [0.1503, 0.1706, 0.1385,  ..., 0.2042, 0.1626, 0.2318],
         [0.5610, 0.4429, 0.5844,  ..., 0.3873, 0.4798, 0.4502]],
        [[0.1105, 0.3881, 0.4114,  ..., 0.1845, 0.3074, 0.1546],
         [0.3434, 0.2954, 0.2600,  ..., 0.3696, 0.2146, 0.3741],
         [0.4356, 0.1583, 0.2370,  ..., 0.2613, 0.4016, 0.3305],
         [0.1105, 0.1583, 0.0916,  ..., 0.1845, 0.0765, 0.1408]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 300:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:50,379 [Process: 0] Synchronize training processes
2024-08-16 13:04:50,379 [Process: 0] Evaluating...
2024-08-16 13:04:50,381 [Process: 0] EPOCH 300:
2024-08-16 13:04:50,383 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:52,278 [Process: 0] Synchronize training processes
2024-08-16 13:04:52,279 [Process: 0] Evaluating...
2024-08-16 13:04:52,280 [Process: 0] EPOCH 301:
2024-08-16 13:04:52,282 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1768, 0.1678, 0.1417,  ..., 0.1093, 0.1486, 0.2050],
         [0.1768, 0.1678, 0.1417,  ..., 0.1093, 0.1522, 0.2050],
         [0.1768, 0.1678, 0.1417,  ..., 0.1093, 0.1486, 0.2050],
         [0.4696, 0.4966, 0.5750,  ..., 0.6722, 0.5505, 0.3850]],
        [[0.2500, 0.2471, 0.2500,  ..., 0.2651, 0.2488, 0.2500],
         [0.2500, 0.2585, 0.2500,  ..., 0.2495, 0.2537, 0.2500],
         [0.2500, 0.2473, 0.2500,  ..., 0.2427, 0.2488, 0.2500],
         [0.2500, 0.2471, 0.2500,  ..., 0.2427, 0.2488, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1492, 0.1989, 0.1776,  ..., 0.1538, 0.1470, 0.1675],
         [0.1492, 0.2275, 0.1776,  ..., 0.1615, 0.1481, 0.1675],
         [0.1492, 0.1989, 0.1776,  ..., 0.1538, 0.1470, 0.1675],
         [0.5525, 0.3746, 0.4671,  ..., 0.5310, 0.5578, 0.4976]],
        [[0.2793, 0.2213, 0.2500,  ..., 0.2157, 0.2196, 0.2092],
         [0.3991, 0.3502, 0.2500,  ..., 0.3528, 0.2886, 0.3725],
         [0.1608, 0.2456, 0.2500,  ..., 0.2157, 0.2721, 0.2092],
         [0.1608, 0.1829, 0.2500,  ..., 0.2157, 0.2196, 0.2092]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 301:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:04:54,177 [Process: 0] Synchronize training processes
2024-08-16 13:04:54,177 [Process: 0] Evaluating...
2024-08-16 13:04:54,179 [Process: 0] EPOCH 302:
2024-08-16 13:04:54,181 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1696, 0.1976, 0.1412,  ..., 0.1442, 0.1571, 0.1516],
         [0.1696, 0.1976, 0.1472,  ..., 0.1442, 0.1571, 0.1516],
         [0.1696, 0.1976, 0.1412,  ..., 0.1442, 0.1571, 0.1516],
         [0.4913, 0.4073, 0.5704,  ..., 0.5673, 0.5286, 0.5453]],
        [[0.2478, 0.2497, 0.2500,  ..., 0.2674, 0.2446, 0.2495],
         [0.2565, 0.2509, 0.2500,  ..., 0.2662, 0.2443, 0.2516],
         [0.2478, 0.2497, 0.2500,  ..., 0.2536, 0.2723, 0.2495],
         [0.2478, 0.2497, 0.2500,  ..., 0.2128, 0.2388, 0.2495]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1887, 0.1646, 0.2715,  ..., 0.2002, 0.3469, 0.2053],
         [0.1887, 0.1646, 0.1587,  ..., 0.2002, 0.1578, 0.1742],
         [0.1887, 0.1646, 0.1587,  ..., 0.2002, 0.1578, 0.1742],
         [0.4338, 0.5062, 0.4111,  ..., 0.3994, 0.3375, 0.4462]],
        [[0.1595, 0.1719, 0.2828,  ..., 0.2138, 0.1359, 0.0986],
         [0.3731, 0.2368, 0.1843,  ..., 0.2138, 0.2027, 0.3465],
         [0.3078, 0.4193, 0.4165,  ..., 0.3587, 0.5310, 0.4650],
         [0.1595, 0.1719, 0.1163,  ..., 0.2138, 0.1305, 0.0899]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 302:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:04:56,095 [Process: 0] Synchronize training processes
2024-08-16 13:04:56,095 [Process: 0] Evaluating...
2024-08-16 13:04:56,097 [Process: 0] EPOCH 303:
2024-08-16 13:04:56,099 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1488, 0.1543, 0.1433,  ..., 0.1430, 0.1980, 0.1575],
         [0.1488, 0.1543, 0.1438,  ..., 0.1541, 0.1980, 0.1575],
         [0.1488, 0.1543, 0.1433,  ..., 0.1430, 0.1980, 0.1575],
         [0.5535, 0.5370, 0.5695,  ..., 0.5600, 0.4061, 0.5274]],
        [[0.2486, 0.2573, 0.2492,  ..., 0.2442, 0.2500, 0.2483],
         [0.2541, 0.2584, 0.2602,  ..., 0.2674, 0.2500, 0.2552],
         [0.2486, 0.2529, 0.2456,  ..., 0.2442, 0.2500, 0.2483],
         [0.2486, 0.2315, 0.2450,  ..., 0.2442, 0.2500, 0.2483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1748, 0.2057, 0.2085,  ..., 0.1917, 0.1466, 0.1472],
         [0.1748, 0.2057, 0.2085,  ..., 0.1917, 0.1466, 0.1472],
         [0.1748, 0.2057, 0.2190,  ..., 0.1917, 0.1466, 0.1472],
         [0.4755, 0.3828, 0.3640,  ..., 0.4250, 0.5603, 0.5585]],
        [[0.3792, 0.3257, 0.3927,  ..., 0.3633, 0.3117, 0.2925],
         [0.3125, 0.3269, 0.3128,  ..., 0.2869, 0.2754, 0.3492],
         [0.1911, 0.2003, 0.1673,  ..., 0.1849, 0.2065, 0.1914],
         [0.1172, 0.1471, 0.1273,  ..., 0.1649, 0.2065, 0.1670]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 303:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1715, 0.1777, 0.1681,  ..., 0.1449, 0.1669, 0.1633],
         [0.1715, 0.1932, 0.1688,  ..., 0.1449, 0.1735, 0.1633],
         [0.1715, 0.1777, 0.1681,  ..., 0.1449, 0.1669, 0.1633],
         [0.4854, 0.4514, 0.4951,  ..., 0.5654, 0.4927, 0.5102]],
        [[0.2500, 0.2474, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2579, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2474, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2474, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:04:57,995 [Process: 0] Synchronize training processes
2024-08-16 13:04:57,996 [Process: 0] Evaluating...
2024-08-16 13:04:57,997 [Process: 0] EPOCH 304:
2024-08-16 13:04:57,999 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1459, 0.2201, 0.1636,  ..., 0.1475, 0.2179, 0.1830],
         [0.1459, 0.1925, 0.1636,  ..., 0.1475, 0.1781, 0.1830],
         [0.2416, 0.1925, 0.1636,  ..., 0.1475, 0.2002, 0.1830],
         [0.4666, 0.3949, 0.5091,  ..., 0.5574, 0.4038, 0.4511]],
        [[0.4561, 0.2525, 0.2998,  ..., 0.1910, 0.2469, 0.1916],
         [0.3169, 0.2751, 0.2073,  ..., 0.3898, 0.2673, 0.1922],
         [0.1173, 0.3143, 0.2999,  ..., 0.2871, 0.4190, 0.5246],
         [0.1097, 0.1581, 0.1929,  ..., 0.1321, 0.0668, 0.0917]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 304:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1207, 0.1343, 0.1519,  ..., 0.1621, 0.1510, 0.1794],
         [0.1207, 0.1547, 0.1693,  ..., 0.1621, 0.1795, 0.1875],
         [0.1207, 0.1343, 0.1519,  ..., 0.1621, 0.1510, 0.1794],
         [0.6379, 0.5766, 0.5268,  ..., 0.5137, 0.5184, 0.4538]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:04:59,911 [Process: 0] Synchronize training processes
2024-08-16 13:04:59,912 [Process: 0] Evaluating...
2024-08-16 13:04:59,914 [Process: 0] EPOCH 305:
2024-08-16 13:04:59,915 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1750, 0.1634, 0.1962,  ..., 0.1437, 0.3001, 0.2786],
         [0.1466, 0.1634, 0.1962,  ..., 0.1437, 0.1902, 0.1713],
         [0.1466, 0.1634, 0.1962,  ..., 0.1437, 0.1278, 0.1713],
         [0.5318, 0.5099, 0.4114,  ..., 0.5689, 0.3819, 0.3788]],
        [[0.1076, 0.2500, 0.0849,  ..., 0.1474, 0.2482, 0.2026],
         [0.4351, 0.2500, 0.4273,  ..., 0.1075, 0.3783, 0.2892],
         [0.3498, 0.2500, 0.4029,  ..., 0.6709, 0.2667, 0.3056],
         [0.1076, 0.2500, 0.0849,  ..., 0.0742, 0.1068, 0.2026]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 305:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1411, 0.1697, 0.1327,  ..., 0.1640, 0.1331, 0.1779],
         [0.1411, 0.1701, 0.1327,  ..., 0.1998, 0.1331, 0.1779],
         [0.1411, 0.1697, 0.1327,  ..., 0.1640, 0.1331, 0.1779],
         [0.5767, 0.4905, 0.6019,  ..., 0.4722, 0.6008, 0.4664]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2509, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:01,822 [Process: 0] Synchronize training processes
2024-08-16 13:05:01,823 [Process: 0] Evaluating...
2024-08-16 13:05:01,824 [Process: 0] EPOCH 306:
2024-08-16 13:05:01,826 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2041, 0.1096, 0.1614,  ..., 0.1958, 0.1881, 0.1972],
         [0.2041, 0.1096, 0.2091,  ..., 0.1958, 0.1881, 0.1910],
         [0.2041, 0.3312, 0.1614,  ..., 0.1958, 0.1881, 0.1910],
         [0.3876, 0.4497, 0.4682,  ..., 0.4126, 0.4357, 0.4208]],
        [[0.0736, 0.3575, 0.2132,  ..., 0.4554, 0.3143, 0.2535],
         [0.1069, 0.2491, 0.3135,  ..., 0.2381, 0.2667, 0.2488],
         [0.7492, 0.1967, 0.3181,  ..., 0.1532, 0.2811, 0.2488],
         [0.0703, 0.1967, 0.1553,  ..., 0.1532, 0.1378, 0.2488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 306:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1417, 0.1418, 0.0989,  ..., 0.1313, 0.1702, 0.1650],
         [0.1417, 0.1558, 0.0989,  ..., 0.1329, 0.1702, 0.1650],
         [0.1417, 0.1418, 0.0989,  ..., 0.1313, 0.1702, 0.1650],
         [0.5748, 0.5606, 0.7034,  ..., 0.6044, 0.4895, 0.5050]],
        [[0.2500, 0.2479, 0.2444,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2563, 0.2667,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2479, 0.2444,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2479, 0.2444,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:03,723 [Process: 0] Synchronize training processes
2024-08-16 13:05:03,723 [Process: 0] Evaluating...
2024-08-16 13:05:03,725 [Process: 0] EPOCH 307:
2024-08-16 13:05:03,727 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1708, 0.1701, 0.1582,  ..., 0.3087, 0.2924, 0.2031],
         [0.1708, 0.1701, 0.1582,  ..., 0.2001, 0.1313, 0.2127],
         [0.1708, 0.1701, 0.1582,  ..., 0.2001, 0.1313, 0.2031],
         [0.4877, 0.4897, 0.5255,  ..., 0.2911, 0.4451, 0.3811]],
        [[0.2631, 0.3250, 0.3983,  ..., 0.2455, 0.2768, 0.2794],
         [0.4057, 0.3904, 0.3103,  ..., 0.2189, 0.1779, 0.2543],
         [0.1656, 0.1903, 0.1457,  ..., 0.4887, 0.3840, 0.2439],
         [0.1656, 0.0942, 0.1457,  ..., 0.0469, 0.1613, 0.2224]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 307:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1613, 0.1626, 0.1490,  ..., 0.1703, 0.1301, 0.1559],
         [0.1613, 0.1626, 0.1490,  ..., 0.1854, 0.1301, 0.1855],
         [0.1613, 0.1626, 0.1490,  ..., 0.1703, 0.1301, 0.1559],
         [0.5161, 0.5122, 0.5531,  ..., 0.4741, 0.6097, 0.5027]],
        [[0.2469, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2592, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2469, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2469, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:05,643 [Process: 0] Synchronize training processes
2024-08-16 13:05:05,643 [Process: 0] Evaluating...
2024-08-16 13:05:05,645 [Process: 0] EPOCH 308:
2024-08-16 13:05:05,647 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1759, 0.2878, 0.1479,  ..., 0.1724, 0.1557, 0.1672],
         [0.1759, 0.2743, 0.1479,  ..., 0.1724, 0.1979, 0.1672],
         [0.1759, 0.1491, 0.1479,  ..., 0.1724, 0.1557, 0.1672],
         [0.4722, 0.2889, 0.5562,  ..., 0.4828, 0.4906, 0.4985]],
        [[0.3506, 0.2597, 0.4079,  ..., 0.3612, 0.2798, 0.2328],
         [0.2472, 0.3235, 0.2505,  ..., 0.3843, 0.3301, 0.3057],
         [0.2136, 0.3152, 0.2662,  ..., 0.1412, 0.2724, 0.3400],
         [0.1886, 0.1015, 0.0754,  ..., 0.1132, 0.1177, 0.1216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 308:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1444, 0.1568, 0.1399,  ..., 0.1394, 0.1581, 0.1486],
         [0.1444, 0.1766, 0.1399,  ..., 0.1625, 0.1581, 0.1486],
         [0.1444, 0.1568, 0.1399,  ..., 0.1394, 0.1581, 0.1486],
         [0.5669, 0.5098, 0.5802,  ..., 0.5587, 0.5256, 0.5542]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:07,539 [Process: 0] Synchronize training processes
2024-08-16 13:05:07,539 [Process: 0] Evaluating...
2024-08-16 13:05:07,541 [Process: 0] EPOCH 309:
2024-08-16 13:05:07,543 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2481, 0.1710, 0.2735,  ..., 0.4593, 0.2714, 0.3610],
         [0.1790, 0.1652, 0.1672,  ..., 0.1326, 0.1567, 0.1431],
         [0.3648, 0.1652, 0.1672,  ..., 0.2192, 0.3239, 0.2439],
         [0.2081, 0.4987, 0.3922,  ..., 0.1890, 0.2479, 0.2520]],
        [[0.2075, 0.2916, 0.2032,  ..., 0.1842, 0.1430, 0.1638],
         [0.3115, 0.2730, 0.2032,  ..., 0.3101, 0.1676, 0.3909],
         [0.2734, 0.3049, 0.3905,  ..., 0.3215, 0.5464, 0.2816],
         [0.2075, 0.1305, 0.2032,  ..., 0.1842, 0.1430, 0.1638]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 309:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1580, 0.1723, 0.1780,  ..., 0.1272, 0.1334, 0.1640],
         [0.1758, 0.1723, 0.1780,  ..., 0.1272, 0.1395, 0.1640],
         [0.1580, 0.1723, 0.1780,  ..., 0.1272, 0.1334, 0.1640],
         [0.5081, 0.4832, 0.4660,  ..., 0.6184, 0.5937, 0.5079]],
        [[0.2500, 0.2500, 0.2498,  ..., 0.2500, 0.2482, 0.2500],
         [0.2500, 0.2500, 0.2505,  ..., 0.2500, 0.2554, 0.2500],
         [0.2500, 0.2500, 0.2498,  ..., 0.2500, 0.2482, 0.2500],
         [0.2500, 0.2500, 0.2498,  ..., 0.2500, 0.2482, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:09,447 [Process: 0] Synchronize training processes
2024-08-16 13:05:09,448 [Process: 0] Evaluating...
2024-08-16 13:05:09,450 [Process: 0] EPOCH 310:
2024-08-16 13:05:09,452 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2051, 0.1919, 0.2322,  ..., 0.1099, 0.1753, 0.2120],
         [0.2051, 0.1828, 0.1826,  ..., 0.1099, 0.2196, 0.2120],
         [0.2051, 0.1828, 0.1826,  ..., 0.1099, 0.1753, 0.2120],
         [0.3848, 0.4424, 0.4026,  ..., 0.6702, 0.4297, 0.3640]],
        [[0.3357, 0.1293, 0.4339,  ..., 0.3854, 0.2334, 0.1718],
         [0.3506, 0.3917, 0.1333,  ..., 0.3773, 0.2998, 0.2656],
         [0.1568, 0.3497, 0.3161,  ..., 0.1442, 0.2334, 0.4021],
         [0.1568, 0.1293, 0.1167,  ..., 0.0931, 0.2334, 0.1606]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 310:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1529, 0.1868, 0.1757,  ..., 0.1709, 0.1486, 0.1828],
         [0.1554, 0.1868, 0.1757,  ..., 0.1709, 0.1486, 0.1828],
         [0.1529, 0.1868, 0.1757,  ..., 0.1709, 0.1486, 0.1828],
         [0.5389, 0.4396, 0.4730,  ..., 0.4873, 0.5543, 0.4516]],
        [[0.2500, 0.2500, 0.2496,  ..., 0.2500, 0.2639, 0.2500],
         [0.2500, 0.2500, 0.2513,  ..., 0.2500, 0.2454, 0.2500],
         [0.2500, 0.2500, 0.2496,  ..., 0.2500, 0.2454, 0.2500],
         [0.2500, 0.2500, 0.2496,  ..., 0.2500, 0.2454, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:11,349 [Process: 0] Synchronize training processes
2024-08-16 13:05:11,349 [Process: 0] Evaluating...
2024-08-16 13:05:11,351 [Process: 0] EPOCH 311:
2024-08-16 13:05:11,353 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1886, 0.1566, 0.2048,  ..., 0.1881, 0.1330, 0.1671],
         [0.1886, 0.1566, 0.2048,  ..., 0.1927, 0.1330, 0.1671],
         [0.1886, 0.1566, 0.2048,  ..., 0.1881, 0.1330, 0.1671],
         [0.4342, 0.5303, 0.3857,  ..., 0.4311, 0.6011, 0.4988]],
        [[0.3234, 0.2418, 0.3615,  ..., 0.2004, 0.3461, 0.3542],
         [0.1674, 0.1254, 0.2351,  ..., 0.2881, 0.2703, 0.2639],
         [0.3651, 0.5902, 0.2382,  ..., 0.3112, 0.2904, 0.1909],
         [0.1440, 0.0426, 0.1652,  ..., 0.2004, 0.0932, 0.1909]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 311:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1621, 0.1535, 0.1626,  ..., 0.1316, 0.1508, 0.1421],
         [0.1621, 0.1535, 0.1937,  ..., 0.1316, 0.1562, 0.1421],
         [0.1621, 0.1535, 0.1626,  ..., 0.1316, 0.1508, 0.1421],
         [0.5136, 0.5396, 0.4812,  ..., 0.6052, 0.5422, 0.5738]],
        [[0.2500, 0.2452, 0.2531,  ..., 0.2492, 0.2500, 0.2500],
         [0.2500, 0.2643, 0.2536,  ..., 0.2523, 0.2500, 0.2500],
         [0.2500, 0.2452, 0.2466,  ..., 0.2492, 0.2500, 0.2500],
         [0.2500, 0.2452, 0.2466,  ..., 0.2492, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 13:05:13,251 [Process: 0] Synchronize training processes
2024-08-16 13:05:13,251 [Process: 0] Evaluating...
2024-08-16 13:05:13,253 [Process: 0] EPOCH 312:
2024-08-16 13:05:13,255 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5792, 0.3439, 0.3741,  ..., 0.1110, 0.4505, 0.0716],
         [0.0459, 0.1891, 0.1790,  ..., 0.1110, 0.1820, 0.0716],
         [0.3263, 0.2702, 0.1790,  ..., 0.2622, 0.2319, 0.6541],
         [0.0486, 0.1968, 0.2680,  ..., 0.5157, 0.1356, 0.2028]],
        [[0.2208, 0.1976, 0.2137,  ..., 0.1857, 0.2227, 0.2371],
         [0.3376, 0.4072, 0.3588,  ..., 0.4602, 0.3320, 0.3284],
         [0.2208, 0.1976, 0.2137,  ..., 0.1771, 0.2227, 0.2173],
         [0.2208, 0.1976, 0.2137,  ..., 0.1771, 0.2227, 0.2173]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 312:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1175, 0.1462, 0.1636,  ..., 0.1779, 0.1758, 0.1493],
         [0.1175, 0.1462, 0.1733,  ..., 0.1779, 0.1772, 0.1493],
         [0.1175, 0.1462, 0.1636,  ..., 0.1779, 0.1758, 0.1493],
         [0.6474, 0.5615, 0.4995,  ..., 0.4662, 0.4713, 0.5522]],
        [[0.2477, 0.2500, 0.2518,  ..., 0.2500, 0.2500, 0.2458],
         [0.2588, 0.2500, 0.2517,  ..., 0.2500, 0.2500, 0.2625],
         [0.2467, 0.2500, 0.2482,  ..., 0.2500, 0.2500, 0.2458],
         [0.2467, 0.2500, 0.2482,  ..., 0.2500, 0.2500, 0.2458]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:05:15,166 [Process: 0] Synchronize training processes
2024-08-16 13:05:15,166 [Process: 0] Evaluating...
2024-08-16 13:05:15,168 [Process: 0] EPOCH 313:
2024-08-16 13:05:15,170 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1869, 0.1403, 0.1963,  ..., 0.1683, 0.1859, 0.1171],
         [0.1869, 0.1403, 0.1963,  ..., 0.1683, 0.1859, 0.1171],
         [0.1869, 0.1403, 0.1963,  ..., 0.1683, 0.1859, 0.1171],
         [0.4392, 0.5790, 0.4111,  ..., 0.4952, 0.4423, 0.6486]],
        [[0.2730, 0.2242, 0.2462,  ..., 0.2339, 0.2822, 0.2607],
         [0.2322, 0.5976, 0.2673,  ..., 0.3802, 0.3066, 0.2186],
         [0.2626, 0.1143, 0.2531,  ..., 0.2265, 0.2528, 0.3725],
         [0.2322, 0.0638, 0.2334,  ..., 0.1594, 0.1585, 0.1483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 313:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1698, 0.1023, 0.1339,  ..., 0.2073, 0.1726, 0.1355],
         [0.1698, 0.1023, 0.1344,  ..., 0.2170, 0.1726, 0.1355],
         [0.1698, 0.1023, 0.1339,  ..., 0.2073, 0.1726, 0.1355],
         [0.4906, 0.6931, 0.5977,  ..., 0.3685, 0.4823, 0.5935]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2476, 0.2500, 0.2491],
         [0.2500, 0.2500, 0.2500,  ..., 0.2572, 0.2500, 0.2527],
         [0.2500, 0.2500, 0.2500,  ..., 0.2476, 0.2500, 0.2491],
         [0.2500, 0.2500, 0.2500,  ..., 0.2476, 0.2500, 0.2491]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1721, 0.1618, 0.1915,  ..., 0.1688, 0.1621, 0.1695],
         [0.1721, 0.1618, 0.1915,  ..., 0.1688, 0.1604, 0.1695],
         [0.1721, 0.1618, 0.2493,  ..., 0.2373, 0.1604, 0.2204],
         [0.4836, 0.5146, 0.3677,  ..., 0.4251, 0.5170, 0.4406]],
        [[0.2662, 0.1110, 0.4253,  ..., 0.2323, 0.1941, 0.2124],
         [0.2667, 0.5245, 0.3606,  ..., 0.3032, 0.1941, 0.4307],
         [0.2969, 0.2535, 0.1330,  ..., 0.2323, 0.4178, 0.2524],
         [0.1702, 0.1110, 0.0810,  ..., 0.2323, 0.1941, 0.1045]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:17,067 [Process: 0] Synchronize training processes
2024-08-16 13:05:17,068 [Process: 0] Evaluating...
2024-08-16 13:05:17,070 [Process: 0] EPOCH 314:
2024-08-16 13:05:17,072 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 314:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1523, 0.1402, 0.1781,  ..., 0.1377, 0.1587, 0.1487],
         [0.1523, 0.1402, 0.1781,  ..., 0.1377, 0.1587, 0.1553],
         [0.1523, 0.1402, 0.1781,  ..., 0.1377, 0.1587, 0.1487],
         [0.5430, 0.5795, 0.4657,  ..., 0.5869, 0.5239, 0.5474]],
        [[0.2500, 0.2494, 0.2468,  ..., 0.2609, 0.2500, 0.2500],
         [0.2500, 0.2517, 0.2597,  ..., 0.2464, 0.2500, 0.2500],
         [0.2500, 0.2494, 0.2468,  ..., 0.2464, 0.2500, 0.2500],
         [0.2500, 0.2494, 0.2468,  ..., 0.2464, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1207, 0.0904, 0.1666,  ..., 0.1526, 0.1517, 0.1612],
         [0.1785, 0.1310, 0.1666,  ..., 0.1526, 0.1517, 0.1612],
         [0.1207, 0.0939, 0.1666,  ..., 0.1526, 0.1517, 0.1612],
         [0.5801, 0.6847, 0.5003,  ..., 0.5423, 0.5450, 0.5163]],
        [[0.4287, 0.3133, 0.4800,  ..., 0.1924, 0.2915, 0.2752],
         [0.2682, 0.1684, 0.2261,  ..., 0.1494, 0.3233, 0.1774],
         [0.1751, 0.3498, 0.1579,  ..., 0.5088, 0.2013, 0.4224],
         [0.1280, 0.1684, 0.1360,  ..., 0.1494, 0.1838, 0.1250]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 315:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:05:18,962 [Process: 0] Synchronize training processes
2024-08-16 13:05:18,962 [Process: 0] Evaluating...
2024-08-16 13:05:18,964 [Process: 0] EPOCH 315:
2024-08-16 13:05:18,966 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1624, 0.1394, 0.1697,  ..., 0.1752, 0.1557, 0.1363],
         [0.1707, 0.1394, 0.1697,  ..., 0.1752, 0.1557, 0.1363],
         [0.1624, 0.1394, 0.1697,  ..., 0.1752, 0.1557, 0.1363],
         [0.5044, 0.5818, 0.4909,  ..., 0.4744, 0.5328, 0.5912]],
        [[0.2500, 0.2466, 0.2643,  ..., 0.2468, 0.2364, 0.2453],
         [0.2500, 0.2601, 0.2452,  ..., 0.2598, 0.2711, 0.2641],
         [0.2500, 0.2466, 0.2452,  ..., 0.2467, 0.2562, 0.2453],
         [0.2500, 0.2466, 0.2452,  ..., 0.2467, 0.2364, 0.2453]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1461, 0.1899, 0.1389,  ..., 0.1100, 0.1705, 0.2154],
         [0.3608, 0.1899, 0.1389,  ..., 0.3410, 0.1705, 0.2154],
         [0.1461, 0.2393, 0.1389,  ..., 0.1100, 0.1705, 0.2154],
         [0.3470, 0.3809, 0.5834,  ..., 0.4390, 0.4885, 0.3539]],
        [[0.6120, 0.3224, 0.2500,  ..., 0.2180, 0.2500, 0.1948],
         [0.1344, 0.3361, 0.2500,  ..., 0.2180, 0.2500, 0.4157],
         [0.1268, 0.1708, 0.2500,  ..., 0.3460, 0.2500, 0.1948],
         [0.1268, 0.1708, 0.2500,  ..., 0.2180, 0.2500, 0.1948]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 316:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:05:20,884 [Process: 0] Synchronize training processes
2024-08-16 13:05:20,884 [Process: 0] Evaluating...
2024-08-16 13:05:20,886 [Process: 0] EPOCH 316:
2024-08-16 13:05:20,888 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1601, 0.1708, 0.1602,  ..., 0.1393, 0.1645, 0.1390],
         [0.1601, 0.1708, 0.1602,  ..., 0.1393, 0.1645, 0.1390],
         [0.1601, 0.1708, 0.1602,  ..., 0.1393, 0.1645, 0.1390],
         [0.5198, 0.4876, 0.5193,  ..., 0.5822, 0.5064, 0.5829]],
        [[0.2492, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2476],
         [0.2524, 0.2500, 0.2500,  ..., 0.2500, 0.2510, 0.2573],
         [0.2492, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2476],
         [0.2492, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1926, 0.1391, 0.1685,  ..., 0.1255, 0.1619, 0.1579],
         [0.1926, 0.1391, 0.1960,  ..., 0.1255, 0.1619, 0.1579],
         [0.1926, 0.1391, 0.3893,  ..., 0.1306, 0.4724, 0.1579],
         [0.4221, 0.5827, 0.2462,  ..., 0.6185, 0.2039, 0.5262]],
        [[0.3677, 0.3248, 0.2738,  ..., 0.2785, 0.3134, 0.3086],
         [0.2430, 0.3208, 0.4018,  ..., 0.4388, 0.2425, 0.2325],
         [0.2005, 0.1772, 0.1710,  ..., 0.1414, 0.3427, 0.2543],
         [0.1887, 0.1772, 0.1534,  ..., 0.1414, 0.1015, 0.2046]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 317:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:05:22,806 [Process: 0] Synchronize training processes
2024-08-16 13:05:22,806 [Process: 0] Evaluating...
2024-08-16 13:05:22,808 [Process: 0] EPOCH 317:
2024-08-16 13:05:22,810 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1189, 0.1131, 0.1202,  ..., 0.1650, 0.1654, 0.1416],
         [0.1189, 0.1131, 0.1202,  ..., 0.1650, 0.1654, 0.1416],
         [0.1189, 0.1131, 0.1202,  ..., 0.1650, 0.1654, 0.1416],
         [0.6433, 0.6607, 0.6393,  ..., 0.5051, 0.5038, 0.5753]],
        [[0.2476, 0.2416, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2571, 0.2516, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2476, 0.2651, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2476, 0.2416, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1081, 0.1366, 0.2519,  ..., 0.5127, 0.1310, 0.1904],
         [0.1245, 0.1450, 0.1380,  ..., 0.1260, 0.1891, 0.3008],
         [0.1081, 0.1366, 0.1380,  ..., 0.1260, 0.1310, 0.1560],
         [0.6593, 0.5817, 0.4720,  ..., 0.2353, 0.5488, 0.3529]],
        [[0.2028, 0.2018, 0.2234,  ..., 0.1548, 0.1909, 0.2408],
         [0.2028, 0.1648, 0.2234,  ..., 0.1548, 0.1909, 0.3152],
         [0.3915, 0.4686, 0.3297,  ..., 0.5356, 0.4272, 0.2996],
         [0.2028, 0.1648, 0.2234,  ..., 0.1548, 0.1909, 0.1445]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 318:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:05:24,700 [Process: 0] Synchronize training processes
2024-08-16 13:05:24,700 [Process: 0] Evaluating...
2024-08-16 13:05:24,702 [Process: 0] EPOCH 318:
2024-08-16 13:05:24,704 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1814, 0.1376, 0.1511,  ..., 0.1832, 0.1902, 0.1689],
         [0.1817, 0.1426, 0.1511,  ..., 0.1832, 0.1902, 0.1689],
         [0.1814, 0.1376, 0.1511,  ..., 0.1832, 0.1902, 0.1689],
         [0.4556, 0.5822, 0.5467,  ..., 0.4505, 0.4294, 0.4932]],
        [[0.2500, 0.2431, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2548, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2591, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2431, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1607, 0.2021, 0.1577,  ..., 0.1866, 0.1738, 0.2203],
         [0.1607, 0.2021, 0.1577,  ..., 0.1948, 0.1738, 0.2692],
         [0.1607, 0.2021, 0.1577,  ..., 0.1866, 0.1738, 0.2203],
         [0.5179, 0.3938, 0.5269,  ..., 0.4321, 0.4787, 0.2903]],
        [[0.1671, 0.2500, 0.2442,  ..., 0.1837, 0.5097, 0.5079],
         [0.3537, 0.2500, 0.1941,  ..., 0.2150, 0.1435, 0.1306],
         [0.3121, 0.2500, 0.3675,  ..., 0.2513, 0.2034, 0.2309],
         [0.1671, 0.2500, 0.1941,  ..., 0.3500, 0.1435, 0.1306]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 319:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:05:26,624 [Process: 0] Synchronize training processes
2024-08-16 13:05:26,624 [Process: 0] Evaluating...
2024-08-16 13:05:26,626 [Process: 0] EPOCH 319:
2024-08-16 13:05:26,628 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1528, 0.1294, 0.1855,  ..., 0.1564, 0.1325, 0.1657],
         [0.1576, 0.1294, 0.1855,  ..., 0.1564, 0.1325, 0.1657],
         [0.1528, 0.1294, 0.1855,  ..., 0.1564, 0.1325, 0.1657],
         [0.5368, 0.6119, 0.4435,  ..., 0.5307, 0.6026, 0.5029]],
        [[0.2444, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2471],
         [0.2667, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2586],
         [0.2444, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2471],
         [0.2444, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2471]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1480, 0.1808, 0.1639,  ..., 0.1707, 0.2083, 0.1669],
         [0.1480, 0.1808, 0.1926,  ..., 0.2072, 0.2083, 0.2252],
         [0.1480, 0.1808, 0.1639,  ..., 0.1707, 0.2083, 0.1669],
         [0.5560, 0.4575, 0.4796,  ..., 0.4513, 0.3750, 0.4409]],
        [[0.2306, 0.2196, 0.2772,  ..., 0.2765, 0.3450, 0.3758],
         [0.3072, 0.3413, 0.2137,  ..., 0.2380, 0.2344, 0.2484],
         [0.2315, 0.2196, 0.2954,  ..., 0.2475, 0.2195, 0.2928],
         [0.2306, 0.2196, 0.2137,  ..., 0.2380, 0.2011, 0.0830]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 320:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:05:28,523 [Process: 0] Synchronize training processes
2024-08-16 13:05:28,523 [Process: 0] Evaluating...
2024-08-16 13:05:28,525 [Process: 0] EPOCH 320:
2024-08-16 13:05:28,527 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1500, 0.1510, 0.1204,  ..., 0.1501, 0.1566, 0.1458],
         [0.1500, 0.1632, 0.1231,  ..., 0.1501, 0.1566, 0.1458],
         [0.1500, 0.1510, 0.1204,  ..., 0.1501, 0.1566, 0.1458],
         [0.5499, 0.5348, 0.6361,  ..., 0.5498, 0.5302, 0.5627]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2518],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1404, 0.1858, 0.1935,  ..., 0.1982, 0.1627, 0.1767],
         [0.1404, 0.1581, 0.1935,  ..., 0.1982, 0.1627, 0.1767],
         [0.1404, 0.1838, 0.1935,  ..., 0.1982, 0.1627, 0.1767],
         [0.5789, 0.4723, 0.4194,  ..., 0.4055, 0.5118, 0.4698]],
        [[0.1051, 0.1862, 0.2260,  ..., 0.2634, 0.4728, 0.2830],
         [0.1332, 0.2836, 0.1863,  ..., 0.1982, 0.2203, 0.4320],
         [0.6566, 0.4495, 0.4814,  ..., 0.3402, 0.1897, 0.1870],
         [0.1051, 0.0807, 0.1063,  ..., 0.1982, 0.1172, 0.0981]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 321:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:05:30,415 [Process: 0] Synchronize training processes
2024-08-16 13:05:30,415 [Process: 0] Evaluating...
2024-08-16 13:05:30,417 [Process: 0] EPOCH 321:
2024-08-16 13:05:30,419 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:05:32,312 [Process: 0] Synchronize training processes
2024-08-16 13:05:32,312 [Process: 0] Evaluating...
2024-08-16 13:05:32,314 [Process: 0] EPOCH 322:
2024-08-16 13:05:32,316 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1550, 0.2032, 0.1844,  ..., 0.1598, 0.1770, 0.1668],
         [0.1550, 0.2134, 0.1844,  ..., 0.1598, 0.1777, 0.1668],
         [0.1550, 0.2032, 0.1844,  ..., 0.1598, 0.1770, 0.1668],
         [0.5349, 0.3802, 0.4469,  ..., 0.5206, 0.4683, 0.4997]],
        [[0.2482, 0.2726, 0.2444,  ..., 0.2651, 0.2425, 0.2500],
         [0.2553, 0.2425, 0.2669,  ..., 0.2630, 0.2715, 0.2500],
         [0.2482, 0.2425, 0.2444,  ..., 0.2360, 0.2435, 0.2500],
         [0.2482, 0.2425, 0.2444,  ..., 0.2360, 0.2425, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1587, 0.2051, 0.2265,  ..., 0.1366, 0.2030, 0.1855],
         [0.1587, 0.2051, 0.2265,  ..., 0.1366, 0.2030, 0.1855],
         [0.1587, 0.2051, 0.2265,  ..., 0.1366, 0.2030, 0.1855],
         [0.5240, 0.3847, 0.3204,  ..., 0.5903, 0.3909, 0.4436]],
        [[0.3319, 0.2577, 0.3172,  ..., 0.1237, 0.1663, 0.4155],
         [0.3481, 0.2660, 0.3660,  ..., 0.2790, 0.2289, 0.2749],
         [0.2274, 0.3033, 0.1691,  ..., 0.4736, 0.4386, 0.2298],
         [0.0926, 0.1730, 0.1476,  ..., 0.1237, 0.1663, 0.0798]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 322:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:05:34,211 [Process: 0] Synchronize training processes
2024-08-16 13:05:34,212 [Process: 0] Evaluating...
2024-08-16 13:05:34,214 [Process: 0] EPOCH 323:
2024-08-16 13:05:34,216 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1138, 0.1329, 0.1353,  ..., 0.1702, 0.1475, 0.1441],
         [0.1304, 0.1465, 0.1543,  ..., 0.1702, 0.1475, 0.1441],
         [0.1138, 0.1329, 0.1353,  ..., 0.1702, 0.1475, 0.1441],
         [0.6420, 0.5878, 0.5750,  ..., 0.4895, 0.5576, 0.5678]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2497],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2509],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2497],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1606, 0.1860, 0.4121,  ..., 0.2262, 0.2074, 0.3670],
         [0.1606, 0.1860, 0.1758,  ..., 0.2009, 0.2074, 0.2021],
         [0.3517, 0.1860, 0.1831,  ..., 0.2009, 0.3777, 0.2021],
         [0.3270, 0.4421, 0.2290,  ..., 0.3719, 0.2074, 0.2288]],
        [[0.2587, 0.2142, 0.3307,  ..., 0.2920, 0.3360, 0.3540],
         [0.2444, 0.1501, 0.2173,  ..., 0.2724, 0.2485, 0.2701],
         [0.3525, 0.5602, 0.3465,  ..., 0.2959, 0.2976, 0.3104],
         [0.1444, 0.0755, 0.1055,  ..., 0.1397, 0.1178, 0.0655]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 323:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1660, 0.1485, 0.1778,  ..., 0.1943, 0.1321, 0.1692],
         [0.1660, 0.1485, 0.1778,  ..., 0.2128, 0.1399, 0.1692],
         [0.1660, 0.1485, 0.1778,  ..., 0.1943, 0.1321, 0.1692],
         [0.5021, 0.5544, 0.4667,  ..., 0.3985, 0.5958, 0.4925]],
        [[0.2500, 0.2471, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2588, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2471, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2471, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:36,108 [Process: 0] Synchronize training processes
2024-08-16 13:05:36,109 [Process: 0] Evaluating...
2024-08-16 13:05:36,111 [Process: 0] EPOCH 324:
2024-08-16 13:05:36,112 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2279, 0.2286, 0.1839,  ..., 0.2280, 0.1821, 0.0216],
         [0.2279, 0.2286, 0.1839,  ..., 0.2280, 0.1949, 0.0092],
         [0.2279, 0.2286, 0.1839,  ..., 0.2280, 0.1821, 0.9423],
         [0.3162, 0.3143, 0.4484,  ..., 0.3160, 0.4410, 0.0269]],
        [[0.2555, 0.3158, 0.2833,  ..., 0.4568, 0.4405, 0.2646],
         [0.3565, 0.2947, 0.2389,  ..., 0.2570, 0.2080, 0.2541],
         [0.1940, 0.2611, 0.2389,  ..., 0.1938, 0.2571, 0.2826],
         [0.1940, 0.1285, 0.2389,  ..., 0.0923, 0.0945, 0.1987]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 324:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1595, 0.1494, 0.1362,  ..., 0.1575, 0.1412, 0.1955],
         [0.1595, 0.1637, 0.1384,  ..., 0.1575, 0.1477, 0.1955],
         [0.1595, 0.1494, 0.1362,  ..., 0.1575, 0.1412, 0.1955],
         [0.5216, 0.5376, 0.5892,  ..., 0.5274, 0.5699, 0.4134]],
        [[0.2500, 0.2493, 0.2500,  ..., 0.2498, 0.2500, 0.2500],
         [0.2500, 0.2521, 0.2500,  ..., 0.2498, 0.2500, 0.2500],
         [0.2500, 0.2493, 0.2500,  ..., 0.2506, 0.2500, 0.2500],
         [0.2500, 0.2493, 0.2500,  ..., 0.2498, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:38,022 [Process: 0] Synchronize training processes
2024-08-16 13:05:38,022 [Process: 0] Evaluating...
2024-08-16 13:05:38,024 [Process: 0] EPOCH 325:
2024-08-16 13:05:38,026 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1604, 0.1360, 0.1374,  ..., 0.3181, 0.5284, 0.1719],
         [0.1604, 0.2714, 0.1374,  ..., 0.2018, 0.1715, 0.1719],
         [0.1604, 0.4115, 0.1825,  ..., 0.2141, 0.1531, 0.1719],
         [0.5189, 0.1811, 0.5427,  ..., 0.2661, 0.1470, 0.4844]],
        [[0.5552, 0.2645, 0.3634,  ..., 0.2026, 0.2827, 0.3206],
         [0.1483, 0.3665, 0.2133,  ..., 0.3914, 0.2391, 0.1473],
         [0.1483, 0.1845, 0.2116,  ..., 0.2034, 0.2391, 0.3847],
         [0.1483, 0.1845, 0.2116,  ..., 0.2026, 0.2391, 0.1473]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 325:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1765, 0.1318, 0.1672,  ..., 0.1384, 0.1155, 0.1649],
         [0.1871, 0.1318, 0.1672,  ..., 0.1384, 0.1180, 0.1649],
         [0.1765, 0.1318, 0.1672,  ..., 0.1384, 0.1155, 0.1649],
         [0.4598, 0.6046, 0.4984,  ..., 0.5849, 0.6511, 0.5054]],
        [[0.2500, 0.2500, 0.2428,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2716,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2428,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2428,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:39,916 [Process: 0] Synchronize training processes
2024-08-16 13:05:39,916 [Process: 0] Evaluating...
2024-08-16 13:05:39,918 [Process: 0] EPOCH 326:
2024-08-16 13:05:39,920 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1578, 0.1896, 0.1449,  ..., 0.1506, 0.1642, 0.1921],
         [0.1578, 0.1896, 0.1449,  ..., 0.1506, 0.1758, 0.1921],
         [0.1578, 0.1896, 0.1449,  ..., 0.1506, 0.1642, 0.1921],
         [0.5265, 0.4313, 0.5653,  ..., 0.5482, 0.4957, 0.4237]],
        [[0.4816, 0.2111, 0.2168,  ..., 0.3406, 0.4987, 0.2008],
         [0.2424, 0.3688, 0.3653,  ..., 0.3312, 0.2166, 0.3410],
         [0.1525, 0.2400, 0.2100,  ..., 0.1775, 0.1710, 0.2574],
         [0.1234, 0.1801, 0.2079,  ..., 0.1506, 0.1136, 0.2008]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 326:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1554, 0.1650, 0.1577,  ..., 0.1474, 0.1760, 0.1501],
         [0.1554, 0.1650, 0.1577,  ..., 0.1474, 0.1760, 0.1531],
         [0.1554, 0.1650, 0.1577,  ..., 0.1474, 0.1760, 0.1501],
         [0.5338, 0.5049, 0.5269,  ..., 0.5579, 0.4719, 0.5468]],
        [[0.2443, 0.2473, 0.2464,  ..., 0.2500, 0.2500, 0.2500],
         [0.2671, 0.2581, 0.2608,  ..., 0.2500, 0.2500, 0.2500],
         [0.2443, 0.2473, 0.2464,  ..., 0.2500, 0.2500, 0.2500],
         [0.2443, 0.2473, 0.2464,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:41,855 [Process: 0] Synchronize training processes
2024-08-16 13:05:41,855 [Process: 0] Evaluating...
2024-08-16 13:05:41,857 [Process: 0] EPOCH 327:
2024-08-16 13:05:41,859 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1376, 0.1591, 0.3938,  ..., 0.2154, 0.2153, 0.2017],
         [0.2498, 0.1586, 0.0917,  ..., 0.2154, 0.1212, 0.1236],
         [0.1376, 0.1586, 0.0935,  ..., 0.2154, 0.1212, 0.1138],
         [0.4750, 0.5237, 0.4210,  ..., 0.3539, 0.5423, 0.5609]],
        [[0.1158, 0.1529, 0.0819,  ..., 0.1426, 0.1790, 0.2210],
         [0.6378, 0.4084, 0.1869,  ..., 0.1426, 0.1790, 0.2210],
         [0.1603, 0.3057, 0.6493,  ..., 0.5723, 0.4630, 0.3370],
         [0.0860, 0.1329, 0.0819,  ..., 0.1426, 0.1790, 0.2210]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 327:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1651, 0.1617, 0.1417,  ..., 0.1894, 0.1379, 0.1294],
         [0.1651, 0.1617, 0.1417,  ..., 0.1978, 0.1379, 0.1294],
         [0.1651, 0.1617, 0.1417,  ..., 0.1894, 0.1379, 0.1294],
         [0.5047, 0.5150, 0.5748,  ..., 0.4234, 0.5864, 0.6118]],
        [[0.2472, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2583, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2472, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2472, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:43,828 [Process: 0] Synchronize training processes
2024-08-16 13:05:43,828 [Process: 0] Evaluating...
2024-08-16 13:05:43,830 [Process: 0] EPOCH 328:
2024-08-16 13:05:43,833 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1697, 0.1598, 0.1665,  ..., 0.1713, 0.1592, 0.1556],
         [0.1697, 0.1598, 0.1665,  ..., 0.1713, 0.1592, 0.2892],
         [0.1697, 0.1598, 0.1665,  ..., 0.1713, 0.2259, 0.1556],
         [0.4909, 0.5205, 0.5004,  ..., 0.4861, 0.4558, 0.3997]],
        [[0.1999, 0.2999, 0.2338,  ..., 0.1844, 0.1925, 0.4146],
         [0.2329, 0.3810, 0.1626,  ..., 0.3057, 0.1067, 0.2216],
         [0.4529, 0.2279, 0.4955,  ..., 0.4661, 0.6090, 0.1819],
         [0.1142, 0.0912, 0.1082,  ..., 0.0437, 0.0918, 0.1819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 328:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1318, 0.1796, 0.1810,  ..., 0.1359, 0.1320, 0.1513],
         [0.1318, 0.1796, 0.1810,  ..., 0.1388, 0.1320, 0.1549],
         [0.1318, 0.1796, 0.1810,  ..., 0.1359, 0.1320, 0.1513],
         [0.6046, 0.4612, 0.4571,  ..., 0.5894, 0.6041, 0.5425]],
        [[0.2500, 0.2500, 0.2483,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2552,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2483,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2483,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:45,751 [Process: 0] Synchronize training processes
2024-08-16 13:05:45,751 [Process: 0] Evaluating...
2024-08-16 13:05:45,753 [Process: 0] EPOCH 329:
2024-08-16 13:05:45,755 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1817, 0.1194, 0.1646,  ..., 0.1755, 0.1708, 0.1434],
         [0.1817, 0.1194, 0.1833,  ..., 0.1755, 0.1708, 0.1434],
         [0.1817, 0.1194, 0.1646,  ..., 0.1755, 0.1708, 0.1434],
         [0.4550, 0.6417, 0.4875,  ..., 0.4734, 0.4876, 0.5698]],
        [[0.2037, 0.2980, 0.3604,  ..., 0.3281, 0.2261, 0.1381],
         [0.3293, 0.2121, 0.2749,  ..., 0.3080, 0.5080, 0.2412],
         [0.2806, 0.4146, 0.2885,  ..., 0.2562, 0.2121, 0.4827],
         [0.1865, 0.0753, 0.0762,  ..., 0.1076, 0.0538, 0.1381]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 329:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1542, 0.1868, 0.1137,  ..., 0.1816, 0.1404, 0.2044],
         [0.1542, 0.1868, 0.1137,  ..., 0.1816, 0.1404, 0.2044],
         [0.1542, 0.1868, 0.1137,  ..., 0.1816, 0.1404, 0.2044],
         [0.5374, 0.4396, 0.6590,  ..., 0.4553, 0.5787, 0.3868]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:47,661 [Process: 0] Synchronize training processes
2024-08-16 13:05:47,661 [Process: 0] Evaluating...
2024-08-16 13:05:47,663 [Process: 0] EPOCH 330:
2024-08-16 13:05:47,665 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1392, 0.1542, 0.1492,  ..., 0.1687, 0.1322, 0.2017],
         [0.1392, 0.5373, 0.4251,  ..., 0.1687, 0.3972, 0.2017],
         [0.1392, 0.1542, 0.2112,  ..., 0.2242, 0.1322, 0.2017],
         [0.5823, 0.1542, 0.2145,  ..., 0.4384, 0.3385, 0.3948]],
        [[0.4778, 0.2082, 0.4319,  ..., 0.3054, 0.3705, 0.2082],
         [0.2388, 0.2082, 0.0874,  ..., 0.2181, 0.2579, 0.2628],
         [0.1439, 0.3753, 0.4235,  ..., 0.2583, 0.1858, 0.3641],
         [0.1394, 0.2082, 0.0572,  ..., 0.2181, 0.1858, 0.1649]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 330:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1375, 0.1798, 0.1256,  ..., 0.1657, 0.1997, 0.1319],
         [0.1375, 0.1798, 0.1338,  ..., 0.1657, 0.1997, 0.1319],
         [0.1375, 0.1798, 0.1256,  ..., 0.1657, 0.1997, 0.1319],
         [0.5874, 0.4605, 0.6149,  ..., 0.5029, 0.4008, 0.6043]],
        [[0.2492, 0.2500, 0.2500,  ..., 0.2500, 0.2484, 0.3145],
         [0.2524, 0.2500, 0.2500,  ..., 0.2500, 0.2547, 0.2493],
         [0.2492, 0.2500, 0.2500,  ..., 0.2500, 0.2484, 0.2252],
         [0.2492, 0.2500, 0.2500,  ..., 0.2500, 0.2484, 0.2110]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:49,558 [Process: 0] Synchronize training processes
2024-08-16 13:05:49,559 [Process: 0] Evaluating...
2024-08-16 13:05:49,560 [Process: 0] EPOCH 331:
2024-08-16 13:05:49,562 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1471, 0.1887, 0.1240,  ..., 0.1911, 0.1858, 0.1713],
         [0.1471, 0.1887, 0.1240,  ..., 0.1911, 0.1858, 0.1713],
         [0.1471, 0.1887, 0.1240,  ..., 0.1911, 0.1858, 0.1713],
         [0.5586, 0.4340, 0.6279,  ..., 0.4266, 0.4426, 0.4862]],
        [[0.2653, 0.1940, 0.2473,  ..., 0.2950, 0.3241, 0.1992],
         [0.2921, 0.1940, 0.4346,  ..., 0.2641, 0.3119, 0.3669],
         [0.2213, 0.4180, 0.1616,  ..., 0.2937, 0.1978, 0.2347],
         [0.2213, 0.1940, 0.1566,  ..., 0.1473, 0.1662, 0.1992]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 331:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2030, 0.1081, 0.1472,  ..., 0.1621, 0.1850, 0.1491],
         [0.2111, 0.1081, 0.1472,  ..., 0.1674, 0.1910, 0.1491],
         [0.2030, 0.1081, 0.1472,  ..., 0.1621, 0.1850, 0.1491],
         [0.3829, 0.6756, 0.5584,  ..., 0.5084, 0.4389, 0.5526]],
        [[0.2500, 0.2478, 0.2733,  ..., 0.2500, 0.2500, 0.2575],
         [0.2500, 0.2568, 0.2422,  ..., 0.2500, 0.2500, 0.2598],
         [0.2500, 0.2477, 0.2422,  ..., 0.2500, 0.2500, 0.2414],
         [0.2500, 0.2477, 0.2422,  ..., 0.2500, 0.2500, 0.2414]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:51,448 [Process: 0] Synchronize training processes
2024-08-16 13:05:51,449 [Process: 0] Evaluating...
2024-08-16 13:05:51,451 [Process: 0] EPOCH 332:
2024-08-16 13:05:51,453 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1217, 0.1631, 0.1802,  ..., 0.2048, 0.1678, 0.0186],
         [0.1443, 0.1631, 0.1999,  ..., 0.2191, 0.1819, 0.0186],
         [0.1217, 0.1631, 0.1802,  ..., 0.2048, 0.1678, 0.9443],
         [0.6123, 0.5107, 0.4397,  ..., 0.3713, 0.4824, 0.0186]],
        [[0.3333, 0.2432, 0.4100,  ..., 0.1642, 0.4355, 0.4750],
         [0.2222, 0.3095, 0.2578,  ..., 0.1642, 0.2093, 0.1807],
         [0.2222, 0.2480, 0.1895,  ..., 0.5073, 0.1905, 0.1721],
         [0.2222, 0.1994, 0.1426,  ..., 0.1642, 0.1647, 0.1721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 332:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1509, 0.1683, 0.1227,  ..., 0.1654, 0.1871, 0.1359],
         [0.1509, 0.1712, 0.1227,  ..., 0.1776, 0.1871, 0.1359],
         [0.1509, 0.1683, 0.1227,  ..., 0.1654, 0.1871, 0.1359],
         [0.5474, 0.4921, 0.6318,  ..., 0.4916, 0.4388, 0.5922]],
        [[0.2602, 0.2479, 0.2460,  ..., 0.2500, 0.2500, 0.2500],
         [0.2504, 0.2563, 0.2619,  ..., 0.2500, 0.2500, 0.2500],
         [0.2447, 0.2479, 0.2460,  ..., 0.2500, 0.2500, 0.2500],
         [0.2447, 0.2479, 0.2460,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:05:53,372 [Process: 0] Synchronize training processes
2024-08-16 13:05:53,372 [Process: 0] Evaluating...
2024-08-16 13:05:53,374 [Process: 0] EPOCH 333:
2024-08-16 13:05:53,376 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1393, 0.2747, 0.2690,  ..., 0.1733, 0.1344, 0.1785],
         [0.1530, 0.1539, 0.1630,  ..., 0.1733, 0.1315, 0.1785],
         [0.1393, 0.1183, 0.1630,  ..., 0.1733, 0.1315, 0.2578],
         [0.5684, 0.4531, 0.4050,  ..., 0.4800, 0.6025, 0.3852]],
        [[0.2193, 0.2287, 0.2982,  ..., 0.2963, 0.2500, 0.2139],
         [0.3422, 0.3139, 0.2874,  ..., 0.3315, 0.2500, 0.2989],
         [0.2193, 0.2287, 0.2072,  ..., 0.2001, 0.2500, 0.2734],
         [0.2193, 0.2287, 0.2072,  ..., 0.1721, 0.2500, 0.2139]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 333:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1715, 0.1434, 0.1671,  ..., 0.1709, 0.1881, 0.1428],
         [0.1715, 0.1445, 0.1671,  ..., 0.1709, 0.1904, 0.1439],
         [0.1715, 0.1434, 0.1671,  ..., 0.1709, 0.1881, 0.1428],
         [0.4854, 0.5687, 0.4986,  ..., 0.4874, 0.4333, 0.5705]],
        [[0.2500, 0.2465, 0.2627,  ..., 0.2484, 0.2496, 0.2500],
         [0.2500, 0.2604, 0.2511,  ..., 0.2548, 0.2512, 0.2500],
         [0.2500, 0.2465, 0.2431,  ..., 0.2484, 0.2496, 0.2500],
         [0.2500, 0.2465, 0.2431,  ..., 0.2484, 0.2496, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:05:55,286 [Process: 0] Synchronize training processes
2024-08-16 13:05:55,286 [Process: 0] Evaluating...
2024-08-16 13:05:55,288 [Process: 0] EPOCH 334:
2024-08-16 13:05:55,290 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1335, 0.2158, 0.1481,  ..., 0.1651, 0.1387, 0.1197],
         [0.1335, 0.2695, 0.1481,  ..., 0.1651, 0.1387, 0.2370],
         [0.1335, 0.2205, 0.1481,  ..., 0.1651, 0.1387, 0.1197],
         [0.5995, 0.2943, 0.5557,  ..., 0.5048, 0.5840, 0.5236]],
        [[0.2500, 0.2534, 0.3282,  ..., 0.3731, 0.2390, 0.4790],
         [0.2500, 0.2949, 0.4697,  ..., 0.1714, 0.3064, 0.2520],
         [0.2500, 0.3893, 0.1011,  ..., 0.3078, 0.3271, 0.1638],
         [0.2500, 0.0624, 0.1011,  ..., 0.1477, 0.1274, 0.1052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 334:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1804, 0.1419, 0.1335,  ..., 0.1511, 0.1839, 0.1245],
         [0.1877, 0.1419, 0.1335,  ..., 0.1589, 0.1839, 0.1245],
         [0.1804, 0.1419, 0.1335,  ..., 0.1511, 0.1839, 0.1245],
         [0.4515, 0.5744, 0.5996,  ..., 0.5389, 0.4483, 0.6264]],
        [[0.2482, 0.2751, 0.2480,  ..., 0.2425, 0.2396, 0.2649],
         [0.2554, 0.2416, 0.2559,  ..., 0.2726, 0.2812, 0.2591],
         [0.2482, 0.2416, 0.2480,  ..., 0.2425, 0.2396, 0.2380],
         [0.2482, 0.2416, 0.2480,  ..., 0.2425, 0.2396, 0.2380]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1721, 0.1495, 0.1924,  ..., 0.1974, 0.2217, 0.1745],
         [0.1721, 0.1495, 0.2218,  ..., 0.1974, 0.2217, 0.1745],
         [0.1721, 0.1495, 0.1924,  ..., 0.1974, 0.2647, 0.1745],
         [0.4836, 0.5514, 0.3934,  ..., 0.4078, 0.2920, 0.4765]],
        [[0.3947, 0.2832, 0.2878,  ..., 0.3596, 0.2542, 0.2337],
         [0.3803, 0.2684, 0.3451,  ..., 0.2454, 0.2348, 0.2934],
         [0.1289, 0.3395, 0.1836,  ..., 0.2325, 0.3921, 0.3530],
         [0.0961, 0.1089, 0.1836,  ..., 0.1626, 0.1189, 0.1199]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:05:57,189 [Process: 0] Synchronize training processes
2024-08-16 13:05:57,190 [Process: 0] Evaluating...
2024-08-16 13:05:57,192 [Process: 0] EPOCH 335:
2024-08-16 13:05:57,194 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 335:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1576, 0.1507, 0.1287,  ..., 0.1588, 0.1432, 0.1336],
         [0.1576, 0.1507, 0.1287,  ..., 0.1588, 0.1536, 0.1384],
         [0.1576, 0.1507, 0.1287,  ..., 0.1588, 0.1432, 0.1336],
         [0.5271, 0.5480, 0.6140,  ..., 0.5235, 0.5600, 0.5943]],
        [[0.2500, 0.2500, 0.2456,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2632,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2456,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2456,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1231, 0.1612, 0.2235,  ..., 0.1786, 0.1784, 0.1287],
         [0.1231, 0.1612, 0.2537,  ..., 0.1835, 0.1784, 0.1287],
         [0.1231, 0.1612, 0.1515,  ..., 0.4592, 0.1784, 0.1287],
         [0.6307, 0.5165, 0.3713,  ..., 0.1786, 0.4648, 0.6140]],
        [[0.2997, 0.3852, 0.2249,  ..., 0.2820, 0.3206, 0.1916],
         [0.2734, 0.2145, 0.2433,  ..., 0.3113, 0.2265, 0.2164],
         [0.2531, 0.2297, 0.3242,  ..., 0.2464, 0.2265, 0.4004],
         [0.1739, 0.1707, 0.2077,  ..., 0.1602, 0.2265, 0.1916]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 336:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:05:59,103 [Process: 0] Synchronize training processes
2024-08-16 13:05:59,103 [Process: 0] Evaluating...
2024-08-16 13:05:59,105 [Process: 0] EPOCH 336:
2024-08-16 13:05:59,107 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1190, 0.1592, 0.1134,  ..., 0.1935, 0.1524, 0.1399],
         [0.1190, 0.1592, 0.1134,  ..., 0.1935, 0.1524, 0.1496],
         [0.1190, 0.1592, 0.1134,  ..., 0.1935, 0.1524, 0.1399],
         [0.6431, 0.5223, 0.6597,  ..., 0.4194, 0.5429, 0.5706]],
        [[0.2500, 0.2476, 0.2486,  ..., 0.2500, 0.2693, 0.2500],
         [0.2500, 0.2571, 0.2541,  ..., 0.2500, 0.2573, 0.2500],
         [0.2500, 0.2476, 0.2486,  ..., 0.2500, 0.2367, 0.2500],
         [0.2500, 0.2476, 0.2486,  ..., 0.2500, 0.2367, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1093, 0.1487, 0.1839,  ..., 0.1265, 0.1481, 0.1696],
         [0.1093, 0.1487, 0.1905,  ..., 0.1265, 0.1481, 0.3157],
         [0.1093, 0.1487, 0.4418,  ..., 0.2832, 0.1481, 0.2438],
         [0.6721, 0.5538, 0.1839,  ..., 0.4638, 0.5556, 0.2708]],
        [[0.3392, 0.3176, 0.1289,  ..., 0.2840, 0.1899, 0.3178],
         [0.2206, 0.1583, 0.2614,  ..., 0.2135, 0.3237, 0.2629],
         [0.3269, 0.3657, 0.5335,  ..., 0.2891, 0.4331, 0.2196],
         [0.1133, 0.1583, 0.0762,  ..., 0.2135, 0.0533, 0.1998]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 337:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:01,003 [Process: 0] Synchronize training processes
2024-08-16 13:06:01,003 [Process: 0] Evaluating...
2024-08-16 13:06:01,005 [Process: 0] EPOCH 337:
2024-08-16 13:06:01,007 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1068, 0.1267, 0.1547,  ..., 0.1461, 0.1528, 0.1538],
         [0.1068, 0.1267, 0.1547,  ..., 0.1461, 0.1528, 0.1538],
         [0.1068, 0.1267, 0.1547,  ..., 0.1461, 0.1528, 0.1538],
         [0.6797, 0.6198, 0.5358,  ..., 0.5618, 0.5415, 0.5386]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2471, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2602, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2464, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2464, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1120, 0.1853, 0.1880,  ..., 0.1246, 0.1424, 0.1759],
         [0.1120, 0.1853, 0.1880,  ..., 0.1246, 0.1424, 0.2029],
         [0.1120, 0.1853, 0.1880,  ..., 0.1246, 0.1424, 0.1759],
         [0.6639, 0.4442, 0.4361,  ..., 0.6261, 0.5729, 0.4454]],
        [[0.2069, 0.4135, 0.2500,  ..., 0.3158, 0.2005, 0.3611],
         [0.4212, 0.1931, 0.2500,  ..., 0.2426, 0.1309, 0.2306],
         [0.1859, 0.2589, 0.2500,  ..., 0.2923, 0.5649, 0.2384],
         [0.1859, 0.1346, 0.2500,  ..., 0.1493, 0.1037, 0.1699]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 338:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:02,905 [Process: 0] Synchronize training processes
2024-08-16 13:06:02,906 [Process: 0] Evaluating...
2024-08-16 13:06:02,908 [Process: 0] EPOCH 338:
2024-08-16 13:06:02,909 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1433, 0.1794, 0.1734,  ..., 0.1277, 0.1371, 0.1599],
         [0.1433, 0.1794, 0.1734,  ..., 0.1277, 0.1371, 0.1599],
         [0.1433, 0.1794, 0.1734,  ..., 0.1277, 0.1371, 0.1599],
         [0.5700, 0.4619, 0.4799,  ..., 0.6168, 0.5887, 0.5203]],
        [[0.2465, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2887],
         [0.2605, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2488],
         [0.2465, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2313],
         [0.2465, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2313]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1642, 0.1909, 0.1653,  ..., 0.0650, 0.0649, 0.2375],
         [0.1642, 0.1961, 0.1653,  ..., 0.0650, 0.0649, 0.1752],
         [0.2277, 0.4085, 0.2878,  ..., 0.8049, 0.1109, 0.3210],
         [0.4439, 0.2045, 0.3816,  ..., 0.0650, 0.7594, 0.2663]],
        [[0.2886, 0.2774, 0.2803,  ..., 0.2286, 0.3466, 0.3161],
         [0.2635, 0.3665, 0.4122,  ..., 0.3142, 0.3243, 0.3549],
         [0.2239, 0.1835, 0.1543,  ..., 0.2286, 0.1645, 0.1645],
         [0.2239, 0.1726, 0.1532,  ..., 0.2286, 0.1645, 0.1645]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 339:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:04,806 [Process: 0] Synchronize training processes
2024-08-16 13:06:04,807 [Process: 0] Evaluating...
2024-08-16 13:06:04,809 [Process: 0] EPOCH 339:
2024-08-16 13:06:04,811 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1411, 0.1355, 0.2259,  ..., 0.1285, 0.1672, 0.1445],
         [0.1411, 0.1355, 0.2259,  ..., 0.1285, 0.1716, 0.1445],
         [0.1411, 0.1355, 0.2259,  ..., 0.1285, 0.1672, 0.1445],
         [0.5767, 0.5934, 0.3224,  ..., 0.6145, 0.4940, 0.5666]],
        [[0.2500, 0.2708, 0.2500,  ..., 0.2429, 0.2443, 0.2500],
         [0.2500, 0.2431, 0.2500,  ..., 0.2713, 0.2670, 0.2500],
         [0.2500, 0.2431, 0.2500,  ..., 0.2429, 0.2443, 0.2500],
         [0.2500, 0.2431, 0.2500,  ..., 0.2429, 0.2443, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1326, 0.5166, 0.1515,  ..., 0.2142, 0.1026, 0.2596],
         [0.1254, 0.1517, 0.1515,  ..., 0.2142, 0.1423, 0.1191],
         [0.1254, 0.0925, 0.1515,  ..., 0.2142, 0.1026, 0.1191],
         [0.6165, 0.2392, 0.5454,  ..., 0.3573, 0.6525, 0.5022]],
        [[0.3556, 0.2430, 0.2278,  ..., 0.1581, 0.1732, 0.2552],
         [0.2015, 0.4754, 0.3167,  ..., 0.1415, 0.2229, 0.2988],
         [0.2693, 0.1629, 0.2278,  ..., 0.5826, 0.4307, 0.3069],
         [0.1736, 0.1186, 0.2278,  ..., 0.1178, 0.1732, 0.1390]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 340:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:06,713 [Process: 0] Synchronize training processes
2024-08-16 13:06:06,713 [Process: 0] Evaluating...
2024-08-16 13:06:06,715 [Process: 0] EPOCH 340:
2024-08-16 13:06:06,717 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1445, 0.1734, 0.1417,  ..., 0.1402, 0.1599, 0.1477],
         [0.1445, 0.1734, 0.1417,  ..., 0.1402, 0.1599, 0.1477],
         [0.1445, 0.1734, 0.1417,  ..., 0.1402, 0.1599, 0.1477],
         [0.5664, 0.4797, 0.5748,  ..., 0.5795, 0.5203, 0.5568]],
        [[0.2478, 0.2500, 0.2776,  ..., 0.2500, 0.2498, 0.2488],
         [0.2567, 0.2500, 0.2480,  ..., 0.2500, 0.2506, 0.2536],
         [0.2478, 0.2500, 0.2372,  ..., 0.2500, 0.2498, 0.2488],
         [0.2478, 0.2500, 0.2372,  ..., 0.2500, 0.2498, 0.2488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1080, 0.1657, 0.2013,  ..., 0.1405, 0.1650, 0.1975],
         [0.1557, 0.1838, 0.2493,  ..., 0.1374, 0.1650, 0.1975],
         [0.1080, 0.1657, 0.2013,  ..., 0.1713, 0.1650, 0.1975],
         [0.6283, 0.4847, 0.3481,  ..., 0.5508, 0.5049, 0.4074]],
        [[0.3522, 0.2500, 0.4813,  ..., 0.2852, 0.2645, 0.1684],
         [0.3664, 0.2500, 0.2644,  ..., 0.1291, 0.4741, 0.1516],
         [0.2001, 0.2500, 0.1729,  ..., 0.4566, 0.1962, 0.5284],
         [0.0814, 0.2500, 0.0814,  ..., 0.1291, 0.0652, 0.1516]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 341:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:08,613 [Process: 0] Synchronize training processes
2024-08-16 13:06:08,613 [Process: 0] Evaluating...
2024-08-16 13:06:08,615 [Process: 0] EPOCH 341:
2024-08-16 13:06:08,617 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1641, 0.1723, 0.1551,  ..., 0.1598, 0.1159, 0.1907],
         [0.1641, 0.1723, 0.1551,  ..., 0.1598, 0.1159, 0.1907],
         [0.1641, 0.1723, 0.1551,  ..., 0.1598, 0.1159, 0.1907],
         [0.5077, 0.4831, 0.5346,  ..., 0.5207, 0.6522, 0.4280]],
        [[0.2509, 0.2500, 0.2399,  ..., 0.2500, 0.2529, 0.2500],
         [0.2497, 0.2500, 0.2802,  ..., 0.2500, 0.2534, 0.2500],
         [0.2497, 0.2500, 0.2399,  ..., 0.2500, 0.2468, 0.2500],
         [0.2497, 0.2500, 0.2399,  ..., 0.2500, 0.2468, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2367, 0.1616, 0.1551,  ..., 0.1774, 0.1324, 0.1860],
         [0.2367, 0.1616, 0.1551,  ..., 0.1774, 0.1235, 0.1860],
         [0.2367, 0.1616, 0.1551,  ..., 0.1774, 0.1235, 0.1860],
         [0.2900, 0.5152, 0.5347,  ..., 0.4678, 0.6206, 0.4419]],
        [[0.1790, 0.3951, 0.3688,  ..., 0.1961, 0.3511, 0.3267],
         [0.5307, 0.3622, 0.2828,  ..., 0.1961, 0.2620, 0.2045],
         [0.2406, 0.1476, 0.1951,  ..., 0.4116, 0.2305, 0.2644],
         [0.0497, 0.0950, 0.1533,  ..., 0.1961, 0.1564, 0.2045]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 342:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:10,527 [Process: 0] Synchronize training processes
2024-08-16 13:06:10,527 [Process: 0] Evaluating...
2024-08-16 13:06:10,529 [Process: 0] EPOCH 342:
2024-08-16 13:06:10,531 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:12,427 [Process: 0] Synchronize training processes
2024-08-16 13:06:12,427 [Process: 0] Evaluating...
2024-08-16 13:06:12,429 [Process: 0] EPOCH 343:
2024-08-16 13:06:12,431 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1200, 0.1398, 0.1551,  ..., 0.1359, 0.1756, 0.1490],
         [0.1222, 0.1398, 0.1551,  ..., 0.1359, 0.1861, 0.1490],
         [0.1200, 0.1398, 0.1551,  ..., 0.1359, 0.1756, 0.1490],
         [0.6377, 0.5806, 0.5347,  ..., 0.5924, 0.4627, 0.5529]],
        [[0.2500, 0.2600, 0.3191,  ..., 0.2490, 0.2500, 0.2494],
         [0.2500, 0.2616, 0.2334,  ..., 0.2531, 0.2500, 0.2519],
         [0.2500, 0.2392, 0.2237,  ..., 0.2490, 0.2500, 0.2494],
         [0.2500, 0.2392, 0.2237,  ..., 0.2490, 0.2500, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1492, 0.1980, 0.1982,  ..., 0.1486, 0.1489, 0.1657],
         [0.1492, 0.1980, 0.1982,  ..., 0.1486, 0.1590, 0.1657],
         [0.1492, 0.1980, 0.1982,  ..., 0.1486, 0.1489, 0.1657],
         [0.5525, 0.4059, 0.4054,  ..., 0.5542, 0.5432, 0.5028]],
        [[0.3884, 0.3111, 0.2500,  ..., 0.3821, 0.2817, 0.3442],
         [0.2039, 0.3311, 0.2500,  ..., 0.2132, 0.3224, 0.3097],
         [0.2039, 0.1789, 0.2500,  ..., 0.2034, 0.2193, 0.1849],
         [0.2039, 0.1789, 0.2500,  ..., 0.2013, 0.1766, 0.1612]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 343:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:06:14,328 [Process: 0] Synchronize training processes
2024-08-16 13:06:14,329 [Process: 0] Evaluating...
2024-08-16 13:06:14,331 [Process: 0] EPOCH 344:
2024-08-16 13:06:14,333 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1637, 0.1754, 0.1688,  ..., 0.1099, 0.1727, 0.1255],
         [0.1637, 0.1754, 0.1688,  ..., 0.1099, 0.1838, 0.1255],
         [0.1637, 0.1754, 0.1688,  ..., 0.1099, 0.1727, 0.1255],
         [0.5089, 0.4738, 0.4937,  ..., 0.6703, 0.4707, 0.6235]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2481, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2558, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2481, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2481, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1321, 0.2181, 0.1789,  ..., 0.1666, 0.1770, 0.1935],
         [0.2157, 0.2823, 0.2694,  ..., 0.2312, 0.2608, 0.2368],
         [0.1321, 0.2181, 0.1789,  ..., 0.1666, 0.1770, 0.1935],
         [0.5202, 0.2815, 0.3728,  ..., 0.4357, 0.3852, 0.3762]],
        [[0.3811, 0.2106, 0.2327,  ..., 0.3350, 0.5137, 0.2711],
         [0.1653, 0.2106, 0.2000,  ..., 0.1529, 0.2602, 0.0434],
         [0.2884, 0.3681, 0.3673,  ..., 0.3593, 0.1370, 0.6422],
         [0.1653, 0.2106, 0.2000,  ..., 0.1529, 0.0891, 0.0434]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 344:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1276, 0.1589, 0.1489,  ..., 0.1535, 0.1547, 0.1440],
         [0.1276, 0.1589, 0.1489,  ..., 0.1536, 0.1547, 0.1466],
         [0.1276, 0.1589, 0.1489,  ..., 0.1535, 0.1547, 0.1440],
         [0.6173, 0.5233, 0.5533,  ..., 0.5395, 0.5358, 0.5654]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2718, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2448, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2417, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2417, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:06:16,236 [Process: 0] Synchronize training processes
2024-08-16 13:06:16,236 [Process: 0] Evaluating...
2024-08-16 13:06:16,238 [Process: 0] EPOCH 345:
2024-08-16 13:06:16,240 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1690, 0.1678, 0.1558,  ..., 0.4124, 0.4493, 0.1644],
         [0.1690, 0.1678, 0.1558,  ..., 0.2207, 0.2564, 0.1644],
         [0.1690, 0.1678, 0.1558,  ..., 0.1731, 0.2008, 0.1644],
         [0.4931, 0.4965, 0.5325,  ..., 0.1938, 0.0934, 0.5068]],
        [[0.2423, 0.2314, 0.2424,  ..., 0.2387, 0.2394, 0.2260],
         [0.2732, 0.2770, 0.2728,  ..., 0.2839, 0.2818, 0.2941],
         [0.2423, 0.2602, 0.2424,  ..., 0.2387, 0.2394, 0.2538],
         [0.2423, 0.2314, 0.2424,  ..., 0.2387, 0.2394, 0.2260]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 345:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1234, 0.1193, 0.1524,  ..., 0.2064, 0.1382, 0.1760],
         [0.1234, 0.1193, 0.1524,  ..., 0.2064, 0.1382, 0.1760],
         [0.1234, 0.1193, 0.1524,  ..., 0.2064, 0.1382, 0.1760],
         [0.6298, 0.6422, 0.5429,  ..., 0.3809, 0.5853, 0.4720]],
        [[0.2500, 0.2500, 0.2430,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2710,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2430,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2430,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:06:18,136 [Process: 0] Synchronize training processes
2024-08-16 13:06:18,136 [Process: 0] Evaluating...
2024-08-16 13:06:18,138 [Process: 0] EPOCH 346:
2024-08-16 13:06:18,140 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1820, 0.1661, 0.1781,  ..., 0.1653, 0.1970, 0.1611],
         [0.1820, 0.1661, 0.1781,  ..., 0.1653, 0.1588, 0.1611],
         [0.1820, 0.1661, 0.1781,  ..., 0.1653, 0.1588, 0.1611],
         [0.4540, 0.5018, 0.4656,  ..., 0.5041, 0.4853, 0.5168]],
        [[0.3918, 0.2354, 0.1873,  ..., 0.2211, 0.3098, 0.2388],
         [0.2450, 0.3291, 0.4328,  ..., 0.3233, 0.3984, 0.2388],
         [0.2967, 0.3049, 0.1926,  ..., 0.2587, 0.1459, 0.2835],
         [0.0664, 0.1307, 0.1873,  ..., 0.1969, 0.1459, 0.2388]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 346:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1545, 0.1391, 0.1588,  ..., 0.1242, 0.1617, 0.1855],
         [0.1545, 0.1391, 0.1588,  ..., 0.1242, 0.1617, 0.1855],
         [0.1545, 0.1391, 0.1588,  ..., 0.1242, 0.1617, 0.1855],
         [0.5366, 0.5827, 0.5236,  ..., 0.6274, 0.5150, 0.4434]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:06:20,034 [Process: 0] Synchronize training processes
2024-08-16 13:06:20,035 [Process: 0] Evaluating...
2024-08-16 13:06:20,037 [Process: 0] EPOCH 347:
2024-08-16 13:06:20,039 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1663, 0.1560, 0.0986,  ..., 0.1811, 0.2365, 0.2038],
         [0.1948, 0.1976, 0.1064,  ..., 0.1844, 0.2049, 0.0369],
         [0.1663, 0.1560, 0.0986,  ..., 0.1014, 0.1648, 0.5196],
         [0.4726, 0.4905, 0.6965,  ..., 0.5330, 0.3939, 0.2396]],
        [[0.2772, 0.2486, 0.2483,  ..., 0.2986, 0.2339, 0.2434],
         [0.2319, 0.2769, 0.2626,  ..., 0.2136, 0.2339, 0.2699],
         [0.2678, 0.2760, 0.2645,  ..., 0.2869, 0.2982, 0.2434],
         [0.2231, 0.1985, 0.2246,  ..., 0.2010, 0.2339, 0.2434]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 347:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1734, 0.1377, 0.1416,  ..., 0.1625, 0.1520, 0.1893],
         [0.1734, 0.1377, 0.1416,  ..., 0.1625, 0.1520, 0.1893],
         [0.1734, 0.1377, 0.1416,  ..., 0.1625, 0.1520, 0.1893],
         [0.4797, 0.5870, 0.5753,  ..., 0.5124, 0.5440, 0.4320]],
        [[0.2500, 0.2448, 0.2500,  ..., 0.2464, 0.2500, 0.2500],
         [0.2500, 0.2657, 0.2500,  ..., 0.2608, 0.2500, 0.2500],
         [0.2500, 0.2448, 0.2500,  ..., 0.2464, 0.2500, 0.2500],
         [0.2500, 0.2448, 0.2500,  ..., 0.2464, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:06:21,935 [Process: 0] Synchronize training processes
2024-08-16 13:06:21,935 [Process: 0] Evaluating...
2024-08-16 13:06:21,937 [Process: 0] EPOCH 348:
2024-08-16 13:06:21,939 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1457, 0.4393, 0.1517,  ..., 0.0984, 0.1406, 0.2852],
         [0.1457, 0.1352, 0.1108,  ..., 0.0984, 0.1406, 0.1952],
         [0.1457, 0.1352, 0.1057,  ..., 0.0984, 0.1406, 0.1952],
         [0.5628, 0.2903, 0.6318,  ..., 0.7047, 0.5782, 0.3244]],
        [[0.2154, 0.1787, 0.2387,  ..., 0.2500, 0.2011, 0.2146],
         [0.3017, 0.1787, 0.2387,  ..., 0.2500, 0.2011, 0.1682],
         [0.3660, 0.4640, 0.2838,  ..., 0.2500, 0.3966, 0.4491],
         [0.1168, 0.1787, 0.2387,  ..., 0.2500, 0.2011, 0.1682]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 348:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1355, 0.1961, 0.1900,  ..., 0.1284, 0.1455, 0.1349],
         [0.1355, 0.1961, 0.1900,  ..., 0.1284, 0.1455, 0.1349],
         [0.1355, 0.1961, 0.1900,  ..., 0.1284, 0.1455, 0.1349],
         [0.5936, 0.4116, 0.4299,  ..., 0.6149, 0.5635, 0.5954]],
        [[0.2500, 0.2486, 0.2523,  ..., 0.2557, 0.2500, 0.2494],
         [0.2500, 0.2543, 0.2619,  ..., 0.2481, 0.2500, 0.2534],
         [0.2500, 0.2486, 0.2429,  ..., 0.2481, 0.2500, 0.2486],
         [0.2500, 0.2486, 0.2429,  ..., 0.2481, 0.2500, 0.2486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:06:23,842 [Process: 0] Synchronize training processes
2024-08-16 13:06:23,842 [Process: 0] Evaluating...
2024-08-16 13:06:23,844 [Process: 0] EPOCH 349:
2024-08-16 13:06:23,846 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1539, 0.1433, 0.1394,  ..., 0.5746, 0.3682, 0.1697],
         [0.1539, 0.1433, 0.1394,  ..., 0.0170, 0.1436, 0.1697],
         [0.1539, 0.1433, 0.1394,  ..., 0.3914, 0.3445, 0.1697],
         [0.5382, 0.5701, 0.5818,  ..., 0.0170, 0.1436, 0.4910]],
        [[0.2322, 0.2930, 0.2696,  ..., 0.3993, 0.4077, 0.3897],
         [0.3033, 0.3398, 0.2582,  ..., 0.2912, 0.2454, 0.2585],
         [0.2322, 0.2211, 0.2388,  ..., 0.1547, 0.1735, 0.1893],
         [0.2322, 0.1461, 0.2334,  ..., 0.1547, 0.1735, 0.1625]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 349:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1853, 0.1572, 0.1614,  ..., 0.1540, 0.1505, 0.1779],
         [0.1853, 0.1572, 0.1614,  ..., 0.1741, 0.1505, 0.1779],
         [0.1853, 0.1572, 0.1614,  ..., 0.1540, 0.1505, 0.1779],
         [0.4440, 0.5283, 0.5158,  ..., 0.5178, 0.5484, 0.4662]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2518, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2494, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2494, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2494, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:06:25,750 [Process: 0] Synchronize training processes
2024-08-16 13:06:25,750 [Process: 0] Evaluating...
2024-08-16 13:06:25,752 [Process: 0] EPOCH 350:
2024-08-16 13:06:25,754 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2033, 0.1084, 0.1379,  ..., 0.2508, 0.2226, 0.1896],
         [0.2033, 0.1345, 0.1379,  ..., 0.1649, 0.3322, 0.2125],
         [0.2033, 0.1084, 0.1379,  ..., 0.1649, 0.2226, 0.1896],
         [0.3902, 0.6487, 0.5862,  ..., 0.4193, 0.2226, 0.4084]],
        [[0.1429, 0.2256, 0.3027,  ..., 0.2136, 0.2500, 0.2024],
         [0.5074, 0.2256, 0.2321,  ..., 0.2136, 0.2500, 0.2416],
         [0.2689, 0.3232, 0.2330,  ..., 0.3593, 0.2500, 0.3796],
         [0.0808, 0.2256, 0.2321,  ..., 0.2136, 0.2500, 0.1764]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 350:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1434, 0.1321, 0.1604,  ..., 0.1778, 0.1049, 0.1322],
         [0.1434, 0.1321, 0.1604,  ..., 0.1778, 0.1049, 0.1518],
         [0.1434, 0.1321, 0.1604,  ..., 0.1778, 0.1049, 0.1322],
         [0.5699, 0.6036, 0.5188,  ..., 0.4665, 0.6853, 0.5837]],
        [[0.2500, 0.2500, 0.2437,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2655,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2472,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2437,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:06:27,647 [Process: 0] Synchronize training processes
2024-08-16 13:06:27,648 [Process: 0] Evaluating...
2024-08-16 13:06:27,650 [Process: 0] EPOCH 351:
2024-08-16 13:06:27,652 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1317, 0.1948, 0.1529,  ..., 0.1384, 0.2010, 0.3397],
         [0.1317, 0.1948, 0.3438,  ..., 0.3294, 0.2010, 0.2910],
         [0.1834, 0.1948, 0.1529,  ..., 0.1689, 0.2010, 0.2376],
         [0.5533, 0.4157, 0.3505,  ..., 0.3633, 0.3969, 0.1317]],
        [[0.3954, 0.3907, 0.2100,  ..., 0.2425, 0.1424, 0.3392],
         [0.1673, 0.3306, 0.2360,  ..., 0.1787, 0.4284, 0.1985],
         [0.2701, 0.1726, 0.3439,  ..., 0.4001, 0.2867, 0.2751],
         [0.1673, 0.1060, 0.2100,  ..., 0.1787, 0.1424, 0.1872]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 351:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1395, 0.1280, 0.1482,  ..., 0.1329, 0.1447, 0.1608],
         [0.1395, 0.1280, 0.1482,  ..., 0.1329, 0.1576, 0.1640],
         [0.1395, 0.1280, 0.1482,  ..., 0.1329, 0.1447, 0.1608],
         [0.5816, 0.6159, 0.5554,  ..., 0.6012, 0.5530, 0.5144]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2494, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2519, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2494, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2494, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:06:29,553 [Process: 0] Synchronize training processes
2024-08-16 13:06:29,553 [Process: 0] Evaluating...
2024-08-16 13:06:29,555 [Process: 0] EPOCH 352:
2024-08-16 13:06:29,557 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1769, 0.1618, 0.1582,  ..., 0.1575, 0.1689, 0.1253],
         [0.1769, 0.1618, 0.1582,  ..., 0.1575, 0.1796, 0.1253],
         [0.1769, 0.1618, 0.1582,  ..., 0.1575, 0.1689, 0.1253],
         [0.4692, 0.5146, 0.5255,  ..., 0.5276, 0.4826, 0.6241]],
        [[0.2674, 0.2465, 0.2217,  ..., 0.3346, 0.4346, 0.2329],
         [0.4270, 0.2465, 0.3350,  ..., 0.1804, 0.3690, 0.3012],
         [0.1920, 0.2605, 0.2217,  ..., 0.3575, 0.1488, 0.2329],
         [0.1136, 0.2465, 0.2217,  ..., 0.1276, 0.0475, 0.2329]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 352:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1745, 0.1358, 0.1234,  ..., 0.1723, 0.1450, 0.1525],
         [0.1745, 0.1358, 0.1234,  ..., 0.1723, 0.1450, 0.1525],
         [0.1745, 0.1358, 0.1234,  ..., 0.1723, 0.1450, 0.1525],
         [0.4765, 0.5925, 0.6298,  ..., 0.4831, 0.5650, 0.5425]],
        [[0.2485, 0.2489, 0.2494,  ..., 0.2479, 0.2499, 0.2461],
         [0.2546, 0.2532, 0.2518,  ..., 0.2564, 0.2504, 0.2603],
         [0.2485, 0.2489, 0.2494,  ..., 0.2479, 0.2499, 0.2533],
         [0.2485, 0.2489, 0.2494,  ..., 0.2479, 0.2499, 0.2403]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:06:31,447 [Process: 0] Synchronize training processes
2024-08-16 13:06:31,447 [Process: 0] Evaluating...
2024-08-16 13:06:31,449 [Process: 0] EPOCH 353:
2024-08-16 13:06:31,451 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2390, 0.1656, 0.1676,  ..., 0.2164, 0.1810, 0.1644],
         [0.2390, 0.4268, 0.1676,  ..., 0.2164, 0.1810, 0.1644],
         [0.2390, 0.1088, 0.1676,  ..., 0.2164, 0.1810, 0.1644],
         [0.2830, 0.2987, 0.4971,  ..., 0.3509, 0.4570, 0.5067]],
        [[0.5301, 0.1684, 0.3178,  ..., 0.1679, 0.6185, 0.1517],
         [0.2141, 0.1684, 0.2798,  ..., 0.3289, 0.0845, 0.1776],
         [0.1683, 0.4947, 0.3236,  ..., 0.3579, 0.2125, 0.5189],
         [0.0875, 0.1684, 0.0788,  ..., 0.1453, 0.0845, 0.1517]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 353:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0986, 0.1272, 0.1095,  ..., 0.1267, 0.1479, 0.1522],
         [0.0986, 0.1272, 0.1095,  ..., 0.1315, 0.1479, 0.1522],
         [0.0986, 0.1272, 0.1095,  ..., 0.1267, 0.1479, 0.1522],
         [0.7041, 0.6185, 0.6714,  ..., 0.6152, 0.5562, 0.5435]],
        [[0.2489, 0.2500, 0.2479,  ..., 0.2807, 0.2500, 0.2500],
         [0.2534, 0.2500, 0.2562,  ..., 0.2436, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2479,  ..., 0.2378, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2479,  ..., 0.2378, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1563, 0.1561, 0.1001,  ..., 0.1800, 0.1902, 0.1518],
         [0.1563, 0.1561, 0.1001,  ..., 0.1800, 0.1902, 0.1518],
         [0.1563, 0.1561, 0.1001,  ..., 0.1800, 0.1902, 0.1518],
         [0.5311, 0.5317, 0.6997,  ..., 0.4599, 0.4293, 0.5447]],
        [[0.1380, 0.2561, 0.1762,  ..., 0.2823, 0.1845, 0.1586],
         [0.4137, 0.3189, 0.3684,  ..., 0.2262, 0.3197, 0.1799],
         [0.3102, 0.3054, 0.3327,  ..., 0.4212, 0.3422, 0.5028],
         [0.1380, 0.1196, 0.1227,  ..., 0.0702, 0.1536, 0.1586]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:06:33,346 [Process: 0] Synchronize training processes
2024-08-16 13:06:33,347 [Process: 0] Evaluating...
2024-08-16 13:06:33,349 [Process: 0] EPOCH 354:
2024-08-16 13:06:33,350 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 354:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1122, 0.1523, 0.1413,  ..., 0.1724, 0.1333, 0.1328],
         [0.1122, 0.1532, 0.1413,  ..., 0.1724, 0.1333, 0.1328],
         [0.1122, 0.1523, 0.1413,  ..., 0.1724, 0.1333, 0.1328],
         [0.6635, 0.5421, 0.5762,  ..., 0.4827, 0.6000, 0.6017]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1782, 0.1491, 0.2313,  ..., 0.1663, 0.1410, 0.0117],
         [0.2040, 0.2266, 0.2313,  ..., 0.1663, 0.1805, 0.0117],
         [0.1545, 0.1491, 0.2313,  ..., 0.1663, 0.1410, 0.9627],
         [0.4633, 0.4752, 0.3061,  ..., 0.5010, 0.5375, 0.0138]],
        [[0.2328, 0.2244, 0.2559,  ..., 0.2397, 0.2604, 0.2810],
         [0.3016, 0.3267, 0.3308,  ..., 0.3683, 0.3430, 0.2661],
         [0.2328, 0.2244, 0.2067,  ..., 0.2003, 0.1983, 0.2347],
         [0.2328, 0.2244, 0.2067,  ..., 0.1918, 0.1983, 0.2182]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 355:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:35,262 [Process: 0] Synchronize training processes
2024-08-16 13:06:35,262 [Process: 0] Evaluating...
2024-08-16 13:06:35,265 [Process: 0] EPOCH 355:
2024-08-16 13:06:35,266 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1728, 0.1637, 0.1748,  ..., 0.1579, 0.1477, 0.1243],
         [0.1827, 0.1637, 0.1748,  ..., 0.1579, 0.1477, 0.1243],
         [0.1728, 0.1637, 0.1748,  ..., 0.1579, 0.1477, 0.1243],
         [0.4718, 0.5089, 0.4755,  ..., 0.5262, 0.5569, 0.6270]],
        [[0.2500, 0.2485, 0.2421,  ..., 0.2427, 0.2500, 0.2500],
         [0.2500, 0.2545, 0.2736,  ..., 0.2718, 0.2500, 0.2500],
         [0.2500, 0.2485, 0.2421,  ..., 0.2427, 0.2500, 0.2500],
         [0.2500, 0.2485, 0.2421,  ..., 0.2427, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2095, 0.1322, 0.1652,  ..., 0.1914, 0.1584, 0.1230],
         [0.2095, 0.1322, 0.1652,  ..., 0.1914, 0.1584, 0.1230],
         [0.2095, 0.1322, 0.2341,  ..., 0.1914, 0.1584, 0.1230],
         [0.3714, 0.6033, 0.4354,  ..., 0.4257, 0.5249, 0.6311]],
        [[0.3095, 0.3094, 0.2196,  ..., 0.3208, 0.3956, 0.2133],
         [0.2781, 0.2911, 0.3802,  ..., 0.2598, 0.1720, 0.2389],
         [0.2545, 0.2089, 0.2001,  ..., 0.2196, 0.3087, 0.4561],
         [0.1579, 0.1906, 0.2001,  ..., 0.1998, 0.1237, 0.0917]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 356:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:37,172 [Process: 0] Synchronize training processes
2024-08-16 13:06:37,172 [Process: 0] Evaluating...
2024-08-16 13:06:37,174 [Process: 0] EPOCH 356:
2024-08-16 13:06:37,176 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1639, 0.1773, 0.1590,  ..., 0.1360, 0.1779, 0.1326],
         [0.1639, 0.1773, 0.1590,  ..., 0.1360, 0.1779, 0.1326],
         [0.1639, 0.1773, 0.1590,  ..., 0.1360, 0.1779, 0.1326],
         [0.5083, 0.4681, 0.5230,  ..., 0.5920, 0.4664, 0.6023]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1340, 0.1322, 0.1563,  ..., 0.1801, 0.2448, 0.1769],
         [0.2957, 0.1579, 0.1563,  ..., 0.2522, 0.1960, 0.1769],
         [0.1296, 0.1322, 0.1563,  ..., 0.1801, 0.1409, 0.1769],
         [0.4408, 0.5776, 0.5311,  ..., 0.3876, 0.4183, 0.4692]],
        [[0.2248, 0.3393, 0.2222,  ..., 0.1735, 0.2500, 0.2050],
         [0.2689, 0.2393, 0.2222,  ..., 0.4948, 0.2500, 0.4463],
         [0.3237, 0.2392, 0.3334,  ..., 0.1875, 0.2500, 0.1859],
         [0.1826, 0.1822, 0.2222,  ..., 0.1443, 0.2500, 0.1627]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 357:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:39,065 [Process: 0] Synchronize training processes
2024-08-16 13:06:39,066 [Process: 0] Evaluating...
2024-08-16 13:06:39,068 [Process: 0] EPOCH 357:
2024-08-16 13:06:39,069 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1869, 0.1455, 0.1503,  ..., 0.1541, 0.1530, 0.1540],
         [0.1869, 0.1455, 0.1503,  ..., 0.1541, 0.1530, 0.1540],
         [0.1869, 0.1455, 0.1503,  ..., 0.1541, 0.1530, 0.1540],
         [0.4394, 0.5634, 0.5490,  ..., 0.5376, 0.5409, 0.5379]],
        [[0.2472, 0.2440, 0.2500,  ..., 0.2465, 0.2500, 0.2493],
         [0.2585, 0.2679, 0.2500,  ..., 0.2605, 0.2500, 0.2522],
         [0.2472, 0.2440, 0.2500,  ..., 0.2465, 0.2500, 0.2493],
         [0.2472, 0.2440, 0.2500,  ..., 0.2465, 0.2500, 0.2493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1703, 0.2011, 0.2164,  ..., 0.1735, 0.2064, 0.2069],
         [0.1703, 0.2011, 0.2164,  ..., 0.1375, 0.1761, 0.2069],
         [0.1703, 0.2011, 0.2164,  ..., 0.1375, 0.1761, 0.2069],
         [0.4891, 0.3966, 0.3509,  ..., 0.5515, 0.4414, 0.3792]],
        [[0.5602, 0.2446, 0.3305,  ..., 0.3426, 0.2732, 0.5627],
         [0.1329, 0.3883, 0.3342,  ..., 0.2244, 0.4239, 0.1769],
         [0.2395, 0.2606, 0.1869,  ..., 0.2363, 0.1932, 0.1789],
         [0.0674, 0.1065, 0.1485,  ..., 0.1967, 0.1097, 0.0815]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 358:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:40,973 [Process: 0] Synchronize training processes
2024-08-16 13:06:40,973 [Process: 0] Evaluating...
2024-08-16 13:06:40,975 [Process: 0] EPOCH 358:
2024-08-16 13:06:40,977 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1176, 0.1644, 0.1430,  ..., 0.1834, 0.1689, 0.1457],
         [0.1176, 0.1644, 0.1430,  ..., 0.1834, 0.1690, 0.1457],
         [0.1176, 0.1644, 0.1430,  ..., 0.1834, 0.1689, 0.1457],
         [0.6472, 0.5067, 0.5710,  ..., 0.4499, 0.4932, 0.5630]],
        [[0.2500, 0.2431, 0.2432,  ..., 0.2464, 0.2440, 0.2500],
         [0.2500, 0.2707, 0.2704,  ..., 0.2607, 0.2542, 0.2500],
         [0.2500, 0.2431, 0.2432,  ..., 0.2464, 0.2578, 0.2500],
         [0.2500, 0.2431, 0.2432,  ..., 0.2464, 0.2440, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1858, 0.1815, 0.2144,  ..., 0.1614, 0.2101, 0.2098],
         [0.1858, 0.1815, 0.2144,  ..., 0.1614, 0.2101, 0.2098],
         [0.1858, 0.1815, 0.2144,  ..., 0.1614, 0.2101, 0.2098],
         [0.4425, 0.4554, 0.3569,  ..., 0.5157, 0.3697, 0.3705]],
        [[0.2836, 0.2362, 0.2454,  ..., 0.2500, 0.2174, 0.4031],
         [0.3188, 0.2477, 0.2653,  ..., 0.2500, 0.2959, 0.2357],
         [0.2235, 0.3739, 0.4111,  ..., 0.2500, 0.3867, 0.2250],
         [0.1741, 0.1422, 0.0782,  ..., 0.2500, 0.1001, 0.1362]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 359:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:42,937 [Process: 0] Synchronize training processes
2024-08-16 13:06:42,937 [Process: 0] Evaluating...
2024-08-16 13:06:42,939 [Process: 0] EPOCH 359:
2024-08-16 13:06:42,941 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1448, 0.1237, 0.1693,  ..., 0.1511, 0.1668, 0.1601],
         [0.1448, 0.1288, 0.1693,  ..., 0.1511, 0.1694, 0.1601],
         [0.1448, 0.1237, 0.1693,  ..., 0.1511, 0.1668, 0.1601],
         [0.5657, 0.6237, 0.4920,  ..., 0.5466, 0.4970, 0.5198]],
        [[0.2481, 0.2482, 0.2500,  ..., 0.2468, 0.2388, 0.2500],
         [0.2558, 0.2482, 0.2500,  ..., 0.2613, 0.2662, 0.2500],
         [0.2481, 0.2553, 0.2500,  ..., 0.2460, 0.2562, 0.2500],
         [0.2481, 0.2482, 0.2500,  ..., 0.2460, 0.2388, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1999, 0.1415, 0.1433,  ..., 0.1866, 0.1718, 0.1789],
         [0.1999, 0.1415, 0.1433,  ..., 0.1866, 0.1718, 0.1789],
         [0.1999, 0.1415, 0.1433,  ..., 0.1866, 0.1718, 0.1789],
         [0.4002, 0.5754, 0.5700,  ..., 0.4401, 0.4847, 0.4633]],
        [[0.2347, 0.2308, 0.2344,  ..., 0.4244, 0.2774, 0.2342],
         [0.2958, 0.2853, 0.2185,  ..., 0.2401, 0.3209, 0.1233],
         [0.2347, 0.3344, 0.4370,  ..., 0.1678, 0.3161, 0.5558],
         [0.2347, 0.1495, 0.1100,  ..., 0.1678, 0.0856, 0.0867]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 360:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:44,841 [Process: 0] Synchronize training processes
2024-08-16 13:06:44,842 [Process: 0] Evaluating...
2024-08-16 13:06:44,844 [Process: 0] EPOCH 360:
2024-08-16 13:06:44,846 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1358, 0.1272, 0.1547,  ..., 0.1457, 0.1907, 0.1274],
         [0.1358, 0.1291, 0.1547,  ..., 0.1457, 0.1907, 0.1274],
         [0.1358, 0.1272, 0.1547,  ..., 0.1457, 0.1907, 0.1274],
         [0.5926, 0.6164, 0.5360,  ..., 0.5628, 0.4280, 0.6179]],
        [[0.2924, 0.2500, 0.2500,  ..., 0.2500, 0.2492, 0.2500],
         [0.2401, 0.2500, 0.2500,  ..., 0.2500, 0.2524, 0.2500],
         [0.2337, 0.2500, 0.2500,  ..., 0.2500, 0.2492, 0.2500],
         [0.2337, 0.2500, 0.2500,  ..., 0.2500, 0.2492, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2858, 0.1555, 0.1449,  ..., 0.1695, 0.1766, 0.1419],
         [0.3780, 0.1724, 0.3620,  ..., 0.3443, 0.3599, 0.1825],
         [0.1024, 0.1555, 0.1449,  ..., 0.1599, 0.1587, 0.1419],
         [0.2338, 0.5166, 0.3482,  ..., 0.3264, 0.3047, 0.5337]],
        [[0.2052, 0.2007, 0.2266,  ..., 0.6614, 0.2423, 0.4198],
         [0.2052, 0.2007, 0.2266,  ..., 0.0821, 0.2423, 0.1516],
         [0.3844, 0.3979, 0.3202,  ..., 0.1744, 0.2732, 0.3409],
         [0.2052, 0.2007, 0.2266,  ..., 0.0821, 0.2423, 0.0877]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 361:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:46,738 [Process: 0] Synchronize training processes
2024-08-16 13:06:46,738 [Process: 0] Evaluating...
2024-08-16 13:06:46,740 [Process: 0] EPOCH 361:
2024-08-16 13:06:46,742 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1505, 0.1471, 0.1302,  ..., 0.1273, 0.1702, 0.1739],
         [0.1505, 0.1471, 0.1302,  ..., 0.1273, 0.1702, 0.1782],
         [0.1505, 0.1471, 0.1302,  ..., 0.1273, 0.1702, 0.1739],
         [0.5484, 0.5586, 0.6094,  ..., 0.6180, 0.4894, 0.4740]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2479, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2562, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2479, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2479, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1877, 0.2314, 0.1570,  ..., 0.1742, 0.1884, 0.1974],
         [0.1877, 0.2314, 0.1570,  ..., 0.1975, 0.1950, 0.1974],
         [0.1877, 0.2314, 0.1570,  ..., 0.1742, 0.1884, 0.1974],
         [0.4370, 0.3057, 0.5291,  ..., 0.4540, 0.4282, 0.4077]],
        [[0.2444, 0.2729, 0.2562,  ..., 0.2157, 0.4001, 0.2697],
         [0.2444, 0.3571, 0.2772,  ..., 0.2603, 0.2972, 0.0650],
         [0.2669, 0.2575, 0.3000,  ..., 0.3083, 0.1932, 0.6003],
         [0.2444, 0.1125, 0.1666,  ..., 0.2157, 0.1095, 0.0650]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 362:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:48,642 [Process: 0] Synchronize training processes
2024-08-16 13:06:48,642 [Process: 0] Evaluating...
2024-08-16 13:06:48,644 [Process: 0] EPOCH 362:
2024-08-16 13:06:48,646 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1596, 0.1718, 0.1694,  ..., 0.1555, 0.1547, 0.1475],
         [0.1596, 0.1718, 0.1694,  ..., 0.1555, 0.1547, 0.1475],
         [0.1596, 0.1718, 0.1694,  ..., 0.1555, 0.1547, 0.1475],
         [0.5212, 0.4846, 0.4918,  ..., 0.5336, 0.5360, 0.5574]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1686, 0.1449, 0.1183,  ..., 0.1997, 0.1746, 0.1928],
         [0.1686, 0.1825, 0.1572,  ..., 0.1997, 0.1746, 0.2095],
         [0.1686, 0.1449, 0.1183,  ..., 0.1997, 0.1746, 0.1928],
         [0.4942, 0.5276, 0.6063,  ..., 0.4009, 0.4762, 0.4049]],
        [[0.2982, 0.2814, 0.2416,  ..., 0.6273, 0.1700, 0.2173],
         [0.2256, 0.2380, 0.2377,  ..., 0.1277, 0.2215, 0.3247],
         [0.2506, 0.2704, 0.3268,  ..., 0.1442, 0.4385, 0.2699],
         [0.2256, 0.2103, 0.1939,  ..., 0.1008, 0.1700, 0.1881]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 363:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:06:50,562 [Process: 0] Synchronize training processes
2024-08-16 13:06:50,563 [Process: 0] Evaluating...
2024-08-16 13:06:50,565 [Process: 0] EPOCH 363:
2024-08-16 13:06:50,567 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:06:52,466 [Process: 0] Synchronize training processes
2024-08-16 13:06:52,466 [Process: 0] Evaluating...
2024-08-16 13:06:52,468 [Process: 0] EPOCH 364:
2024-08-16 13:06:52,470 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1464, 0.1492, 0.1678,  ..., 0.1121, 0.1856, 0.1304],
         [0.1519, 0.1492, 0.1678,  ..., 0.1123, 0.1856, 0.1304],
         [0.1464, 0.1492, 0.1678,  ..., 0.1121, 0.1856, 0.1304],
         [0.5553, 0.5524, 0.4967,  ..., 0.6634, 0.4433, 0.6089]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2486, 0.2498],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2541, 0.2505],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2486, 0.2498],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2486, 0.2498]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1425, 0.1708, 0.2005,  ..., 0.1368, 0.1514, 0.1624],
         [0.1706, 0.1708, 0.1873,  ..., 0.1722, 0.1844, 0.1624],
         [0.1425, 0.1708, 0.1873,  ..., 0.1368, 0.1514, 0.1624],
         [0.5444, 0.4875, 0.4249,  ..., 0.5542, 0.5128, 0.5127]],
        [[0.2194, 0.2407, 0.2427,  ..., 0.2299, 0.8110, 0.1917],
         [0.2194, 0.2407, 0.2561,  ..., 0.2653, 0.1040, 0.1364],
         [0.3419, 0.2780, 0.2585,  ..., 0.2749, 0.0500, 0.5355],
         [0.2194, 0.2407, 0.2427,  ..., 0.2299, 0.0349, 0.1364]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 364:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1733, 0.1742, 0.1666,  ..., 0.1470, 0.1541, 0.1657],
         [0.1733, 0.1742, 0.1666,  ..., 0.1470, 0.1541, 0.1657],
         [0.1733, 0.1742, 0.1666,  ..., 0.1470, 0.1541, 0.1657],
         [0.4801, 0.4774, 0.5001,  ..., 0.5590, 0.5376, 0.5029]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2467, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2599, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2467, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2467, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:06:54,366 [Process: 0] Synchronize training processes
2024-08-16 13:06:54,366 [Process: 0] Evaluating...
2024-08-16 13:06:54,368 [Process: 0] EPOCH 365:
2024-08-16 13:06:54,370 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1342, 0.1611, 0.1626,  ..., 0.1790, 0.1258, 0.1258],
         [0.2437, 0.1611, 0.1626,  ..., 0.1790, 0.1258, 0.1498],
         [0.1342, 0.1611, 0.1626,  ..., 0.1790, 0.1258, 0.1258],
         [0.4879, 0.5168, 0.5121,  ..., 0.4630, 0.6226, 0.5986]],
        [[0.3438, 0.3296, 0.2766,  ..., 0.2601, 0.2635, 0.3577],
         [0.2155, 0.2271, 0.2411,  ..., 0.2466, 0.2176, 0.2458],
         [0.2252, 0.2248, 0.2411,  ..., 0.2466, 0.3013, 0.2476],
         [0.2155, 0.2184, 0.2411,  ..., 0.2466, 0.2176, 0.1489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 365:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1444, 0.1539, 0.1629,  ..., 0.1783, 0.1455, 0.1868],
         [0.1444, 0.1585, 0.1629,  ..., 0.1783, 0.1572, 0.1868],
         [0.1444, 0.1539, 0.1629,  ..., 0.1783, 0.1455, 0.1868],
         [0.5667, 0.5337, 0.5113,  ..., 0.4651, 0.5517, 0.4397]],
        [[0.2500, 0.2450, 0.2454,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2649, 0.2649,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2450, 0.2490,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2450, 0.2407,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:06:56,267 [Process: 0] Synchronize training processes
2024-08-16 13:06:56,268 [Process: 0] Evaluating...
2024-08-16 13:06:56,270 [Process: 0] EPOCH 366:
2024-08-16 13:06:56,271 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1148, 0.1584, 0.1636,  ..., 0.1253, 0.1379, 0.1452],
         [0.1196, 0.1584, 0.1636,  ..., 0.1408, 0.1379, 0.1813],
         [0.1148, 0.1584, 0.1636,  ..., 0.1253, 0.1379, 0.1514],
         [0.6508, 0.5248, 0.5091,  ..., 0.6086, 0.5864, 0.5222]],
        [[0.2500, 0.2848, 0.2791,  ..., 0.3709, 0.2926, 0.2606],
         [0.2500, 0.2861, 0.3156,  ..., 0.2663, 0.2412, 0.2729],
         [0.2500, 0.2145, 0.2134,  ..., 0.1825, 0.2360, 0.2332],
         [0.2500, 0.2145, 0.1919,  ..., 0.1802, 0.2303, 0.2332]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 366:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1313, 0.1253, 0.1673,  ..., 0.2078, 0.1549, 0.1709],
         [0.1313, 0.1366, 0.1677,  ..., 0.2078, 0.1608, 0.1746],
         [0.1313, 0.1253, 0.1673,  ..., 0.2078, 0.1549, 0.1709],
         [0.6060, 0.6127, 0.4976,  ..., 0.3767, 0.5293, 0.4836]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2499],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2502],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2499],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2499]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:06:58,184 [Process: 0] Synchronize training processes
2024-08-16 13:06:58,184 [Process: 0] Evaluating...
2024-08-16 13:06:58,186 [Process: 0] EPOCH 367:
2024-08-16 13:06:58,188 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3163, 0.1540, 0.1726,  ..., 0.3201, 0.1901, 0.4047],
         [0.1885, 0.1540, 0.1528,  ..., 0.1321, 0.1901, 0.1523],
         [0.1885, 0.1540, 0.1528,  ..., 0.1321, 0.1901, 0.1132],
         [0.3068, 0.5381, 0.5218,  ..., 0.4157, 0.4296, 0.3297]],
        [[0.2500, 0.2383, 0.1373,  ..., 0.1565, 0.1721, 0.2010],
         [0.2500, 0.2383, 0.2955,  ..., 0.1565, 0.1721, 0.2010],
         [0.2500, 0.2851, 0.4617,  ..., 0.5304, 0.4837, 0.3970],
         [0.2500, 0.2383, 0.1055,  ..., 0.1565, 0.1721, 0.2010]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 367:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1554, 0.1313, 0.1715,  ..., 0.1317, 0.1600, 0.1368],
         [0.1587, 0.1313, 0.1715,  ..., 0.1317, 0.1678, 0.1368],
         [0.1554, 0.1313, 0.1715,  ..., 0.1317, 0.1600, 0.1368],
         [0.5305, 0.6061, 0.4855,  ..., 0.6049, 0.5121, 0.5897]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:00,084 [Process: 0] Synchronize training processes
2024-08-16 13:07:00,084 [Process: 0] Evaluating...
2024-08-16 13:07:00,086 [Process: 0] EPOCH 368:
2024-08-16 13:07:00,088 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2476, 0.3552, 0.1687,  ..., 0.1983, 0.1582, 0.2035],
         [0.1826, 0.2520, 0.1614,  ..., 0.1983, 0.1582, 0.2035],
         [0.1826, 0.1677, 0.1614,  ..., 0.1983, 0.1582, 0.2035],
         [0.3872, 0.2252, 0.5084,  ..., 0.4051, 0.5253, 0.3896]],
        [[0.1799, 0.2049, 0.2400,  ..., 0.2090, 0.3796, 0.2607],
         [0.3942, 0.2991, 0.3119,  ..., 0.3286, 0.2864, 0.3625],
         [0.2844, 0.2911, 0.3386,  ..., 0.3015, 0.1810, 0.2479],
         [0.1415, 0.2049, 0.1095,  ..., 0.1609, 0.1531, 0.1289]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 368:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1645, 0.1586, 0.1624,  ..., 0.1112, 0.1396, 0.1788],
         [0.1645, 0.1586, 0.1624,  ..., 0.1112, 0.1396, 0.1788],
         [0.1645, 0.1586, 0.1624,  ..., 0.1112, 0.1396, 0.1788],
         [0.5066, 0.5242, 0.5127,  ..., 0.6664, 0.5813, 0.4637]],
        [[0.2500, 0.2467, 0.2500,  ..., 0.2500, 0.2456, 0.2491],
         [0.2500, 0.2599, 0.2500,  ..., 0.2500, 0.2579, 0.2527],
         [0.2500, 0.2467, 0.2500,  ..., 0.2500, 0.2509, 0.2491],
         [0.2500, 0.2467, 0.2500,  ..., 0.2500, 0.2456, 0.2491]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:01,983 [Process: 0] Synchronize training processes
2024-08-16 13:07:01,983 [Process: 0] Evaluating...
2024-08-16 13:07:01,985 [Process: 0] EPOCH 369:
2024-08-16 13:07:01,987 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1801, 0.1756, 0.1079,  ..., 0.1095, 0.1820, 0.1743],
         [0.1801, 0.1756, 0.1079,  ..., 0.1344, 0.1820, 0.1743],
         [0.1801, 0.1756, 0.1079,  ..., 0.5309, 0.1820, 0.3739],
         [0.4598, 0.4731, 0.6764,  ..., 0.2253, 0.4541, 0.2776]],
        [[0.1860, 0.2579, 0.1500,  ..., 0.2109, 0.2201, 0.3240],
         [0.2828, 0.3034, 0.2995,  ..., 0.3673, 0.3397, 0.3205],
         [0.3452, 0.2193, 0.4005,  ..., 0.2109, 0.2201, 0.1777],
         [0.1860, 0.2193, 0.1500,  ..., 0.2109, 0.2201, 0.1777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 369:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1635, 0.1854, 0.1611,  ..., 0.1507, 0.2010, 0.1070],
         [0.1635, 0.1854, 0.1611,  ..., 0.1507, 0.2010, 0.1070],
         [0.1635, 0.1854, 0.1611,  ..., 0.1507, 0.2010, 0.1070],
         [0.5095, 0.4437, 0.5166,  ..., 0.5478, 0.3971, 0.6789]],
        [[0.2500, 0.2488, 0.2500,  ..., 0.2487, 0.2455, 0.2500],
         [0.2500, 0.2535, 0.2500,  ..., 0.2538, 0.2635, 0.2500],
         [0.2500, 0.2488, 0.2500,  ..., 0.2487, 0.2455, 0.2500],
         [0.2500, 0.2488, 0.2500,  ..., 0.2487, 0.2455, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:03,914 [Process: 0] Synchronize training processes
2024-08-16 13:07:03,914 [Process: 0] Evaluating...
2024-08-16 13:07:03,916 [Process: 0] EPOCH 370:
2024-08-16 13:07:03,918 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1846, 0.1507, 0.1806,  ..., 0.0962, 0.1232, 0.2948],
         [0.1846, 0.1507, 0.1422,  ..., 0.1307, 0.1232, 0.2541],
         [0.1846, 0.1507, 0.1422,  ..., 0.3741, 0.3150, 0.1116],
         [0.4461, 0.5478, 0.5351,  ..., 0.3990, 0.4386, 0.3395]],
        [[0.2284, 0.5584, 0.1873,  ..., 0.2855, 0.1402, 0.2679],
         [0.2983, 0.1472, 0.4624,  ..., 0.4722, 0.3599, 0.2440],
         [0.3277, 0.1472, 0.2178,  ..., 0.1212, 0.4751, 0.2440],
         [0.1457, 0.1472, 0.1325,  ..., 0.1212, 0.0248, 0.2440]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 370:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1466, 0.1188, 0.1587,  ..., 0.1683, 0.1178, 0.1794],
         [0.1466, 0.1188, 0.1587,  ..., 0.1690, 0.1178, 0.1794],
         [0.1466, 0.1188, 0.1587,  ..., 0.1683, 0.1178, 0.1794],
         [0.5603, 0.6436, 0.5240,  ..., 0.4944, 0.6465, 0.4618]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:05,922 [Process: 0] Synchronize training processes
2024-08-16 13:07:05,922 [Process: 0] Evaluating...
2024-08-16 13:07:05,924 [Process: 0] EPOCH 371:
2024-08-16 13:07:05,926 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2057, 0.1780, 0.1632,  ..., 0.1952, 0.1357, 0.1990],
         [0.2057, 0.1917, 0.1632,  ..., 0.1952, 0.1393, 0.1990],
         [0.2057, 0.1780, 0.1632,  ..., 0.1952, 0.1357, 0.1990],
         [0.3829, 0.4523, 0.5105,  ..., 0.4144, 0.5893, 0.4029]],
        [[0.2145, 0.3134, 0.2252,  ..., 0.2443, 0.3732, 0.3170],
         [0.2975, 0.2794, 0.3268,  ..., 0.3067, 0.2816, 0.2675],
         [0.2750, 0.2036, 0.2366,  ..., 0.2245, 0.2159, 0.2121],
         [0.2131, 0.2036, 0.2113,  ..., 0.2245, 0.1293, 0.2034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 371:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1567, 0.1538, 0.1478,  ..., 0.1209, 0.1897, 0.1732],
         [0.1567, 0.1538, 0.1478,  ..., 0.1259, 0.1897, 0.1836],
         [0.1567, 0.1538, 0.1478,  ..., 0.1209, 0.1897, 0.1732],
         [0.5299, 0.5385, 0.5565,  ..., 0.6324, 0.4308, 0.4700]],
        [[0.2480, 0.2500, 0.2399,  ..., 0.2430, 0.2500, 0.2500],
         [0.2559, 0.2500, 0.2802,  ..., 0.2709, 0.2500, 0.2500],
         [0.2480, 0.2500, 0.2399,  ..., 0.2430, 0.2500, 0.2500],
         [0.2480, 0.2500, 0.2399,  ..., 0.2430, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:07,867 [Process: 0] Synchronize training processes
2024-08-16 13:07:07,867 [Process: 0] Evaluating...
2024-08-16 13:07:07,869 [Process: 0] EPOCH 372:
2024-08-16 13:07:07,871 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1775, 0.1574, 0.1540,  ..., 0.1209, 0.1877, 0.1346],
         [0.1690, 0.3206, 0.1540,  ..., 0.1209, 0.1877, 0.1644],
         [0.1690, 0.1555, 0.1540,  ..., 0.1209, 0.2031, 0.4232],
         [0.4844, 0.3665, 0.5380,  ..., 0.6374, 0.4216, 0.2778]],
        [[0.2975, 0.3094, 0.3672,  ..., 0.6667, 0.2500, 0.2282],
         [0.2669, 0.3264, 0.1931,  ..., 0.1598, 0.2500, 0.2282],
         [0.2178, 0.2964, 0.2465,  ..., 0.0867, 0.2500, 0.3153],
         [0.2178, 0.0678, 0.1931,  ..., 0.0867, 0.2500, 0.2282]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 372:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1499, 0.1793, 0.1481,  ..., 0.1764, 0.1313, 0.1535],
         [0.1499, 0.1793, 0.1481,  ..., 0.1764, 0.1313, 0.1649],
         [0.1499, 0.1793, 0.1481,  ..., 0.1764, 0.1313, 0.1535],
         [0.5503, 0.4620, 0.5557,  ..., 0.4708, 0.6061, 0.5281]],
        [[0.2500, 0.2410, 0.2500,  ..., 0.2500, 0.2428, 0.2500],
         [0.2500, 0.2770, 0.2500,  ..., 0.2500, 0.2716, 0.2500],
         [0.2500, 0.2410, 0.2500,  ..., 0.2500, 0.2428, 0.2500],
         [0.2500, 0.2410, 0.2500,  ..., 0.2500, 0.2428, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:09,791 [Process: 0] Synchronize training processes
2024-08-16 13:07:09,791 [Process: 0] Evaluating...
2024-08-16 13:07:09,793 [Process: 0] EPOCH 373:
2024-08-16 13:07:09,795 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1939, 0.2264, 0.1327,  ..., 0.1798, 0.1523, 0.1905],
         [0.1939, 0.2264, 0.1327,  ..., 0.1798, 0.1523, 0.1905],
         [0.1939, 0.2264, 0.1327,  ..., 0.1798, 0.1523, 0.1905],
         [0.4183, 0.3209, 0.6018,  ..., 0.4605, 0.5432, 0.4285]],
        [[0.3649, 0.2486, 0.3541,  ..., 0.3007, 0.3169, 0.4391],
         [0.2129, 0.3263, 0.2200,  ..., 0.3292, 0.1725, 0.2607],
         [0.2111, 0.2769, 0.3073,  ..., 0.2453, 0.3537, 0.1936],
         [0.2111, 0.1482, 0.1186,  ..., 0.1248, 0.1569, 0.1065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 373:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1231, 0.1811, 0.1741,  ..., 0.1991, 0.1541, 0.1758],
         [0.1231, 0.1811, 0.1741,  ..., 0.1991, 0.1541, 0.1758],
         [0.1231, 0.1811, 0.1741,  ..., 0.1991, 0.1541, 0.1758],
         [0.6306, 0.4568, 0.4778,  ..., 0.4027, 0.5377, 0.4727]],
        [[0.2500, 0.2463, 0.2729,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2579, 0.2516,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2494, 0.2423,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2463, 0.2332,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:11,721 [Process: 0] Synchronize training processes
2024-08-16 13:07:11,722 [Process: 0] Evaluating...
2024-08-16 13:07:11,724 [Process: 0] EPOCH 374:
2024-08-16 13:07:11,725 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1199, 0.2342, 0.2500,  ..., 0.1192, 0.2484, 0.1537],
         [0.1199, 0.2342, 0.2500,  ..., 0.1192, 0.2484, 0.1537],
         [0.1199, 0.2342, 0.2500,  ..., 0.1192, 0.2548, 0.1537],
         [0.6402, 0.2974, 0.2500,  ..., 0.6424, 0.2484, 0.5389]],
        [[0.1629, 0.4011, 0.0910,  ..., 0.4189, 0.3786, 0.2480],
         [0.2942, 0.2905, 0.1726,  ..., 0.3563, 0.2254, 0.3432],
         [0.3300, 0.1920, 0.6453,  ..., 0.1124, 0.1863, 0.2694],
         [0.2129, 0.1164, 0.0910,  ..., 0.1124, 0.2097, 0.1393]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 374:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1751, 0.1898, 0.1320,  ..., 0.1507, 0.1247, 0.1427],
         [0.1751, 0.1898, 0.1320,  ..., 0.1507, 0.1247, 0.1427],
         [0.1751, 0.1898, 0.1320,  ..., 0.1507, 0.1247, 0.1427],
         [0.4746, 0.4307, 0.6041,  ..., 0.5480, 0.6258, 0.5718]],
        [[0.2500, 0.2500, 0.2495,  ..., 0.2500, 0.2475, 0.2489],
         [0.2500, 0.2500, 0.2515,  ..., 0.2500, 0.2576, 0.2533],
         [0.2500, 0.2500, 0.2495,  ..., 0.2500, 0.2475, 0.2489],
         [0.2500, 0.2500, 0.2495,  ..., 0.2500, 0.2475, 0.2489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:13,777 [Process: 0] Synchronize training processes
2024-08-16 13:07:13,777 [Process: 0] Evaluating...
2024-08-16 13:07:13,779 [Process: 0] EPOCH 375:
2024-08-16 13:07:13,781 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3098, 0.3469, 0.1212,  ..., 0.2018, 0.5992, 0.3225],
         [0.1523, 0.1749, 0.1212,  ..., 0.2018, 0.1033, 0.1354],
         [0.1523, 0.1749, 0.1212,  ..., 0.2018, 0.1033, 0.1354],
         [0.3856, 0.3033, 0.6363,  ..., 0.3946, 0.1943, 0.4068]],
        [[0.1374, 0.1414, 0.2004,  ..., 0.1727, 0.1396, 0.2500],
         [0.4453, 0.3700, 0.2004,  ..., 0.1966, 0.2806, 0.2500],
         [0.2799, 0.3955, 0.3987,  ..., 0.4580, 0.4402, 0.2500],
         [0.1374, 0.0931, 0.2004,  ..., 0.1727, 0.1396, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 375:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1911, 0.1593, 0.1242,  ..., 0.1392, 0.1596, 0.1312],
         [0.1911, 0.1593, 0.1242,  ..., 0.1392, 0.1596, 0.1312],
         [0.1911, 0.1593, 0.1242,  ..., 0.1392, 0.1596, 0.1312],
         [0.4267, 0.5221, 0.6273,  ..., 0.5823, 0.5212, 0.6063]],
        [[0.2500, 0.2486, 0.2500,  ..., 0.2415, 0.2458, 0.2482],
         [0.2500, 0.2543, 0.2500,  ..., 0.2754, 0.2625, 0.2553],
         [0.2500, 0.2486, 0.2500,  ..., 0.2415, 0.2458, 0.2482],
         [0.2500, 0.2486, 0.2500,  ..., 0.2415, 0.2458, 0.2482]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:15,829 [Process: 0] Synchronize training processes
2024-08-16 13:07:15,829 [Process: 0] Evaluating...
2024-08-16 13:07:15,831 [Process: 0] EPOCH 376:
2024-08-16 13:07:15,833 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1821, 0.1386, 0.1940,  ..., 0.1575, 0.3217, 0.2592],
         [0.1821, 0.1386, 0.1940,  ..., 0.1575, 0.1601, 0.1179],
         [0.1821, 0.1386, 0.1940,  ..., 0.1575, 0.1601, 0.1179],
         [0.4538, 0.5842, 0.4181,  ..., 0.5276, 0.3582, 0.5051]],
        [[0.3158, 0.2682, 0.3953,  ..., 0.1853, 0.4010, 0.2388],
         [0.2572, 0.2600, 0.2222,  ..., 0.2013, 0.3515, 0.3050],
         [0.2695, 0.3510, 0.2877,  ..., 0.4282, 0.1847, 0.2699],
         [0.1575, 0.1208, 0.0948,  ..., 0.1853, 0.0628, 0.1863]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 376:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1700, 0.1819, 0.1411,  ..., 0.1491, 0.1890, 0.1205],
         [0.1700, 0.1819, 0.1411,  ..., 0.1491, 0.1890, 0.1205],
         [0.1700, 0.1819, 0.1411,  ..., 0.1491, 0.1890, 0.1205],
         [0.4900, 0.4543, 0.5768,  ..., 0.5526, 0.4330, 0.6385]],
        [[0.2500, 0.2460, 0.2565,  ..., 0.2455, 0.2500, 0.2500],
         [0.2500, 0.2619, 0.2478,  ..., 0.2636, 0.2500, 0.2500],
         [0.2500, 0.2460, 0.2478,  ..., 0.2455, 0.2500, 0.2500],
         [0.2500, 0.2460, 0.2478,  ..., 0.2455, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:17,805 [Process: 0] Synchronize training processes
2024-08-16 13:07:17,806 [Process: 0] Evaluating...
2024-08-16 13:07:17,808 [Process: 0] EPOCH 377:
2024-08-16 13:07:17,810 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1658, 0.1949, 0.1941,  ..., 0.1661, 0.1579, 0.1601],
         [0.1658, 0.1949, 0.2119,  ..., 0.1714, 0.1579, 0.1601],
         [0.1658, 0.1949, 0.1941,  ..., 0.1661, 0.1579, 0.1601],
         [0.5025, 0.4154, 0.3998,  ..., 0.4965, 0.5263, 0.5197]],
        [[0.1701, 0.2220, 0.3587,  ..., 0.1424, 0.2423, 0.2500],
         [0.1810, 0.1877, 0.2096,  ..., 0.1424, 0.3223, 0.2500],
         [0.5366, 0.4027, 0.2220,  ..., 0.5727, 0.2960, 0.2500],
         [0.1122, 0.1877, 0.2096,  ..., 0.1424, 0.1393, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 377:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1562, 0.1458, 0.1704,  ..., 0.1481, 0.1799, 0.1625],
         [0.1564, 0.1458, 0.1704,  ..., 0.1515, 0.1799, 0.1625],
         [0.1562, 0.1458, 0.1704,  ..., 0.1481, 0.1799, 0.1625],
         [0.5311, 0.5627, 0.4887,  ..., 0.5524, 0.4602, 0.5124]],
        [[0.2500, 0.2467, 0.2500,  ..., 0.2476, 0.2677, 0.2419],
         [0.2500, 0.2598, 0.2500,  ..., 0.2572, 0.2714, 0.2744],
         [0.2500, 0.2467, 0.2500,  ..., 0.2476, 0.2325, 0.2419],
         [0.2500, 0.2467, 0.2500,  ..., 0.2476, 0.2284, 0.2419]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:19,782 [Process: 0] Synchronize training processes
2024-08-16 13:07:19,782 [Process: 0] Evaluating...
2024-08-16 13:07:19,784 [Process: 0] EPOCH 378:
2024-08-16 13:07:19,786 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1558, 0.1879, 0.2045,  ..., 0.1592, 0.2190, 0.1323],
         [0.1558, 0.1879, 0.2045,  ..., 0.1592, 0.2190, 0.1323],
         [0.1558, 0.1879, 0.2045,  ..., 0.1592, 0.2190, 0.1323],
         [0.5325, 0.4364, 0.3865,  ..., 0.5224, 0.3431, 0.6032]],
        [[0.5272, 0.3427, 0.2761,  ..., 0.3343, 0.2751, 0.3597],
         [0.1576, 0.2191, 0.2413,  ..., 0.1677, 0.2416, 0.3184],
         [0.1576, 0.2191, 0.2413,  ..., 0.3303, 0.2416, 0.1986],
         [0.1576, 0.2191, 0.2413,  ..., 0.1677, 0.2416, 0.1233]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 378:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1654, 0.1764, 0.1295,  ..., 0.1433, 0.1348, 0.1269],
         [0.1654, 0.1764, 0.1295,  ..., 0.1433, 0.1454, 0.1453],
         [0.1654, 0.1764, 0.1295,  ..., 0.1433, 0.1348, 0.1269],
         [0.5039, 0.4708, 0.6116,  ..., 0.5700, 0.5850, 0.6009]],
        [[0.2500, 0.2466, 0.2487,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2602, 0.2540,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2466, 0.2487,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2466, 0.2487,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:21,719 [Process: 0] Synchronize training processes
2024-08-16 13:07:21,719 [Process: 0] Evaluating...
2024-08-16 13:07:21,721 [Process: 0] EPOCH 379:
2024-08-16 13:07:21,723 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0648, 0.2092, 0.1884,  ..., 0.2232, 0.1033, 0.1630],
         [0.0648, 0.2092, 0.1884,  ..., 0.2232, 0.1033, 0.1630],
         [0.0648, 0.2092, 0.1884,  ..., 0.2232, 0.1033, 0.1630],
         [0.8057, 0.3724, 0.4348,  ..., 0.3303, 0.6901, 0.5109]],
        [[0.3699, 0.2305, 0.2000,  ..., 0.3985, 0.2499, 0.2618],
         [0.3495, 0.3691, 0.3191,  ..., 0.3154, 0.2986, 0.3415],
         [0.1809, 0.2002, 0.3952,  ..., 0.2100, 0.2856, 0.2201],
         [0.0996, 0.2002, 0.0857,  ..., 0.0761, 0.1659, 0.1766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 379:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1177, 0.1617, 0.1417,  ..., 0.1634, 0.2022, 0.1828],
         [0.1206, 0.1617, 0.1417,  ..., 0.1634, 0.2022, 0.1828],
         [0.1177, 0.1617, 0.1417,  ..., 0.1634, 0.2022, 0.1828],
         [0.6439, 0.5150, 0.5750,  ..., 0.5097, 0.3935, 0.4515]],
        [[0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2525,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:07:23,671 [Process: 0] Synchronize training processes
2024-08-16 13:07:23,672 [Process: 0] Evaluating...
2024-08-16 13:07:23,674 [Process: 0] EPOCH 380:
2024-08-16 13:07:23,676 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1838, 0.1861, 0.2376,  ..., 0.2623, 0.1911, 0.6668],
         [0.1870, 0.1861, 0.1844,  ..., 0.2282, 0.1911, 0.0286],
         [0.1838, 0.1861, 0.1512,  ..., 0.1856, 0.1911, 0.1108],
         [0.4454, 0.4418, 0.4267,  ..., 0.3239, 0.4266, 0.1938]],
        [[0.2460, 0.2145, 0.2356,  ..., 0.2436, 0.2500, 0.2417],
         [0.3189, 0.2998, 0.2932,  ..., 0.2691, 0.2500, 0.2748],
         [0.2595, 0.2713, 0.2356,  ..., 0.2436, 0.2500, 0.2417],
         [0.1756, 0.2145, 0.2356,  ..., 0.2436, 0.2500, 0.2417]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 380:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1388, 0.1902, 0.1682,  ..., 0.1847, 0.1141, 0.1464],
         [0.1388, 0.2052, 0.1682,  ..., 0.1847, 0.1234, 0.1464],
         [0.1388, 0.1902, 0.1682,  ..., 0.1847, 0.1141, 0.1464],
         [0.5837, 0.4144, 0.4953,  ..., 0.4458, 0.6485, 0.5609]],
        [[0.2484, 0.2500, 0.2449,  ..., 0.2500, 0.2500, 0.2448],
         [0.2548, 0.2500, 0.2653,  ..., 0.2500, 0.2501, 0.2657],
         [0.2484, 0.2500, 0.2449,  ..., 0.2500, 0.2500, 0.2448],
         [0.2484, 0.2500, 0.2449,  ..., 0.2500, 0.2500, 0.2448]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:07:25,600 [Process: 0] Synchronize training processes
2024-08-16 13:07:25,600 [Process: 0] Evaluating...
2024-08-16 13:07:25,602 [Process: 0] EPOCH 381:
2024-08-16 13:07:25,604 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1772, 0.1661, 0.6030,  ..., 0.1229, 0.1762, 0.2911],
         [0.1908, 0.1661, 0.0735,  ..., 0.0909, 0.1762, 0.1574],
         [0.1600, 0.1661, 0.1400,  ..., 0.2965, 0.1762, 0.2310],
         [0.4721, 0.5016, 0.1836,  ..., 0.4896, 0.4713, 0.3205]],
        [[0.2038, 0.2500, 0.2433,  ..., 0.2500, 0.3302, 0.1569],
         [0.4345, 0.2500, 0.2660,  ..., 0.2500, 0.3156, 0.5398],
         [0.2073, 0.2500, 0.3619,  ..., 0.2500, 0.1993, 0.1838],
         [0.1544, 0.2500, 0.1287,  ..., 0.2500, 0.1549, 0.1195]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 381:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1296, 0.1203, 0.1746,  ..., 0.1528, 0.1466, 0.1935],
         [0.1341, 0.1203, 0.1746,  ..., 0.1528, 0.1466, 0.1935],
         [0.1296, 0.1203, 0.1746,  ..., 0.1528, 0.1466, 0.1935],
         [0.6067, 0.6392, 0.4762,  ..., 0.5416, 0.5602, 0.4194]],
        [[0.2479, 0.2500, 0.2491,  ..., 0.2500, 0.2500, 0.2444],
         [0.2563, 0.2500, 0.2527,  ..., 0.2500, 0.2500, 0.2669],
         [0.2479, 0.2500, 0.2491,  ..., 0.2500, 0.2500, 0.2444],
         [0.2479, 0.2500, 0.2491,  ..., 0.2500, 0.2500, 0.2444]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1489, 0.1654, 0.0967,  ..., 0.1778, 0.2130, 0.1616],
         [0.1489, 0.1654, 0.0967,  ..., 0.1826, 0.2130, 0.1616],
         [0.1489, 0.2238, 0.0967,  ..., 0.2104, 0.2130, 0.1616],
         [0.5534, 0.4454, 0.7098,  ..., 0.4292, 0.3609, 0.5151]],
        [[0.1849, 0.4320, 0.2500,  ..., 0.6332, 0.2402, 0.3634],
         [0.1849, 0.1711, 0.2500,  ..., 0.2805, 0.2184, 0.1337],
         [0.4454, 0.1711, 0.2500,  ..., 0.0503, 0.3229, 0.3894],
         [0.1849, 0.2258, 0.2500,  ..., 0.0360, 0.2184, 0.1135]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:27,549 [Process: 0] Synchronize training processes
2024-08-16 13:07:27,550 [Process: 0] Evaluating...
2024-08-16 13:07:27,552 [Process: 0] EPOCH 382:
2024-08-16 13:07:27,554 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 382:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1296, 0.1228, 0.1451,  ..., 0.1444, 0.1323, 0.1716],
         [0.1296, 0.1228, 0.1451,  ..., 0.1444, 0.1323, 0.1716],
         [0.1296, 0.1228, 0.1451,  ..., 0.1444, 0.1323, 0.1716],
         [0.6112, 0.6316, 0.5648,  ..., 0.5669, 0.6031, 0.4851]],
        [[0.2548, 0.2500, 0.2500,  ..., 0.2445, 0.2500, 0.2465],
         [0.2571, 0.2500, 0.2500,  ..., 0.2664, 0.2500, 0.2604],
         [0.2440, 0.2500, 0.2500,  ..., 0.2445, 0.2500, 0.2465],
         [0.2440, 0.2500, 0.2500,  ..., 0.2445, 0.2500, 0.2465]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3468, 0.1861, 0.1427,  ..., 0.2033, 0.0901, 0.4114],
         [0.2027, 0.1504, 0.2084,  ..., 0.2033, 0.0941, 0.3638],
         [0.1305, 0.1441, 0.1402,  ..., 0.2033, 0.0901, 0.0789],
         [0.3201, 0.5195, 0.5088,  ..., 0.3901, 0.7258, 0.1459]],
        [[0.1421, 0.1237, 0.1606,  ..., 0.2153, 0.2500, 0.1835],
         [0.1421, 0.1237, 0.1606,  ..., 0.2153, 0.2500, 0.2568],
         [0.5736, 0.6288, 0.5181,  ..., 0.3541, 0.2500, 0.3762],
         [0.1421, 0.1237, 0.1606,  ..., 0.2153, 0.2500, 0.1835]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 383:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:07:29,462 [Process: 0] Synchronize training processes
2024-08-16 13:07:29,462 [Process: 0] Evaluating...
2024-08-16 13:07:29,464 [Process: 0] EPOCH 383:
2024-08-16 13:07:29,466 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1573, 0.1804, 0.1546,  ..., 0.1272, 0.1402, 0.1378],
         [0.1573, 0.1804, 0.1546,  ..., 0.1272, 0.1402, 0.1378],
         [0.1573, 0.1804, 0.1546,  ..., 0.1272, 0.1402, 0.1378],
         [0.5281, 0.4589, 0.5361,  ..., 0.6184, 0.5793, 0.5866]],
        [[0.2491, 0.2466, 0.2500,  ..., 0.2474, 0.2500, 0.2500],
         [0.2782, 0.2466, 0.2500,  ..., 0.2579, 0.2500, 0.2500],
         [0.2428, 0.2601, 0.2500,  ..., 0.2474, 0.2500, 0.2500],
         [0.2298, 0.2466, 0.2500,  ..., 0.2474, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1403, 0.1253, 0.1685,  ..., 0.1341, 0.1791, 0.0782],
         [0.1403, 0.1253, 0.1685,  ..., 0.1341, 0.1791, 0.0743],
         [0.1403, 0.1253, 0.1685,  ..., 0.1341, 0.1791, 0.7731],
         [0.5792, 0.6240, 0.4945,  ..., 0.5978, 0.4628, 0.0743]],
        [[0.4832, 0.3798, 0.2796,  ..., 0.2888, 0.3170, 0.4966],
         [0.2219, 0.2448, 0.3122,  ..., 0.3192, 0.2932, 0.2411],
         [0.1474, 0.1877, 0.2404,  ..., 0.1960, 0.2087, 0.1312],
         [0.1474, 0.1877, 0.1678,  ..., 0.1960, 0.1811, 0.1312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 384:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:07:31,393 [Process: 0] Synchronize training processes
2024-08-16 13:07:31,394 [Process: 0] Evaluating...
2024-08-16 13:07:31,395 [Process: 0] EPOCH 384:
2024-08-16 13:07:31,397 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1263, 0.1446, 0.1387,  ..., 0.1265, 0.1289, 0.1517],
         [0.1371, 0.1446, 0.1387,  ..., 0.1287, 0.1289, 0.1517],
         [0.1263, 0.1446, 0.1387,  ..., 0.1265, 0.1289, 0.1517],
         [0.6104, 0.5663, 0.5839,  ..., 0.6183, 0.6133, 0.5450]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4545, 0.2466, 0.3437,  ..., 0.3752, 0.1498, 0.3102],
         [0.1509, 0.3106, 0.1574,  ..., 0.1492, 0.0530, 0.1954],
         [0.1509, 0.1348, 0.1574,  ..., 0.1492, 0.0530, 0.1138],
         [0.2438, 0.3080, 0.3414,  ..., 0.3264, 0.7443, 0.3805]],
        [[0.2556, 0.2294, 0.2105,  ..., 0.1370, 0.2436, 0.2421],
         [0.2203, 0.3119, 0.2105,  ..., 0.3020, 0.2436, 0.2736],
         [0.3038, 0.2294, 0.3685,  ..., 0.4240, 0.2692, 0.2421],
         [0.2203, 0.2294, 0.2105,  ..., 0.1370, 0.2436, 0.2421]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 385:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:07:33,316 [Process: 0] Synchronize training processes
2024-08-16 13:07:33,317 [Process: 0] Evaluating...
2024-08-16 13:07:33,319 [Process: 0] EPOCH 385:
2024-08-16 13:07:33,321 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1436, 0.1807, 0.1526,  ..., 0.1899, 0.1372, 0.1907],
         [0.1436, 0.1807, 0.1570,  ..., 0.1899, 0.1372, 0.1907],
         [0.1436, 0.1807, 0.1526,  ..., 0.1899, 0.1372, 0.1907],
         [0.5693, 0.4580, 0.5377,  ..., 0.4302, 0.5885, 0.4280]],
        [[0.2470, 0.2500, 0.2491,  ..., 0.2497, 0.2500, 0.2500],
         [0.2589, 0.2500, 0.2527,  ..., 0.2508, 0.2500, 0.2500],
         [0.2470, 0.2500, 0.2491,  ..., 0.2497, 0.2500, 0.2500],
         [0.2470, 0.2500, 0.2491,  ..., 0.2497, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1649, 0.1725, 0.1629,  ..., 0.1727, 0.1680, 0.1873],
         [0.1649, 0.1725, 0.1629,  ..., 0.1727, 0.1680, 0.1873],
         [0.1649, 0.1725, 0.1629,  ..., 0.1727, 0.1680, 0.1873],
         [0.5054, 0.4826, 0.5114,  ..., 0.4819, 0.4960, 0.4380]],
        [[0.2343, 0.3764, 0.2411,  ..., 0.1264, 0.3546, 0.3642],
         [0.3839, 0.3637, 0.2089,  ..., 0.3060, 0.3255, 0.3854],
         [0.1996, 0.1507, 0.3417,  ..., 0.5001, 0.1600, 0.1657],
         [0.1822, 0.1092, 0.2083,  ..., 0.0675, 0.1600, 0.0847]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 386:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:07:35,215 [Process: 0] Synchronize training processes
2024-08-16 13:07:35,216 [Process: 0] Evaluating...
2024-08-16 13:07:35,218 [Process: 0] EPOCH 386:
2024-08-16 13:07:35,220 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1849, 0.1390, 0.1347,  ..., 0.1199, 0.1921, 0.1349],
         [0.1849, 0.1390, 0.1347,  ..., 0.1199, 0.1921, 0.1396],
         [0.1849, 0.1390, 0.1347,  ..., 0.1199, 0.1921, 0.1349],
         [0.4454, 0.5829, 0.5958,  ..., 0.6402, 0.4236, 0.5907]],
        [[0.2500, 0.2500, 0.2454,  ..., 0.2500, 0.2500, 0.2495],
         [0.2500, 0.2500, 0.2638,  ..., 0.2500, 0.2500, 0.2516],
         [0.2500, 0.2500, 0.2454,  ..., 0.2500, 0.2500, 0.2495],
         [0.2500, 0.2500, 0.2454,  ..., 0.2500, 0.2500, 0.2495]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1280, 0.1821, 0.1099,  ..., 0.2844, 0.1408, 0.1894],
         [0.1280, 0.2111, 0.1099,  ..., 0.1059, 0.1281, 0.1894],
         [0.1396, 0.1821, 0.1884,  ..., 0.4446, 0.1544, 0.2228],
         [0.6045, 0.4248, 0.5918,  ..., 0.1651, 0.5768, 0.3985]],
        [[0.2500, 0.6228, 0.1605,  ..., 0.2633, 0.2233, 0.2500],
         [0.2500, 0.1324, 0.4682,  ..., 0.4299, 0.2233, 0.2500],
         [0.2500, 0.1338, 0.2107,  ..., 0.1534, 0.3301, 0.2500],
         [0.2500, 0.1111, 0.1605,  ..., 0.1534, 0.2233, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 387:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:07:37,117 [Process: 0] Synchronize training processes
2024-08-16 13:07:37,118 [Process: 0] Evaluating...
2024-08-16 13:07:37,120 [Process: 0] EPOCH 387:
2024-08-16 13:07:37,122 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1699, 0.1405, 0.1632,  ..., 0.1676, 0.1423, 0.1476],
         [0.1699, 0.1530, 0.1988,  ..., 0.1676, 0.1423, 0.1476],
         [0.1699, 0.1405, 0.1632,  ..., 0.1676, 0.1423, 0.1476],
         [0.4902, 0.5661, 0.4747,  ..., 0.4972, 0.5732, 0.5572]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2481],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2558],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2481],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1415, 0.1752, 0.1752,  ..., 0.1912, 0.1483, 0.1467],
         [0.1415, 0.1752, 0.1752,  ..., 0.1912, 0.1483, 0.1467],
         [0.1415, 0.1752, 0.1752,  ..., 0.1912, 0.1483, 0.1467],
         [0.5755, 0.4744, 0.4745,  ..., 0.4263, 0.5552, 0.5599]],
        [[0.3089, 0.3300, 0.2976,  ..., 0.3507, 0.2469, 0.3364],
         [0.2163, 0.2986, 0.3540,  ..., 0.3341, 0.3383, 0.2611],
         [0.3606, 0.2271, 0.1802,  ..., 0.2106, 0.2607, 0.2013],
         [0.1143, 0.1444, 0.1682,  ..., 0.1046, 0.1541, 0.2013]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 388:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:07:39,019 [Process: 0] Synchronize training processes
2024-08-16 13:07:39,020 [Process: 0] Evaluating...
2024-08-16 13:07:39,021 [Process: 0] EPOCH 388:
2024-08-16 13:07:39,023 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1418, 0.1376, 0.1672,  ..., 0.1556, 0.1638, 0.1423],
         [0.1418, 0.1376, 0.1672,  ..., 0.1556, 0.1638, 0.1423],
         [0.1418, 0.1376, 0.1672,  ..., 0.1556, 0.1638, 0.1423],
         [0.5746, 0.5871, 0.4984,  ..., 0.5331, 0.5086, 0.5731]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2649, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2509, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2421, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2421, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1724, 0.1870, 0.1550,  ..., 0.1849, 0.1679, 0.1270],
         [0.1724, 0.1870, 0.1550,  ..., 0.1849, 0.1679, 0.1270],
         [0.1724, 0.1870, 0.1550,  ..., 0.1939, 0.4736, 0.1270],
         [0.4828, 0.4390, 0.5349,  ..., 0.4364, 0.1905, 0.6190]],
        [[0.2374, 0.2100, 0.2295,  ..., 0.3087, 0.2147, 0.3507],
         [0.3790, 0.3578, 0.3116,  ..., 0.2832, 0.3558, 0.2962],
         [0.2307, 0.2495, 0.2295,  ..., 0.2041, 0.2147, 0.1771],
         [0.1529, 0.1826, 0.2295,  ..., 0.2041, 0.2147, 0.1760]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 389:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:07:40,928 [Process: 0] Synchronize training processes
2024-08-16 13:07:40,929 [Process: 0] Evaluating...
2024-08-16 13:07:40,931 [Process: 0] EPOCH 389:
2024-08-16 13:07:40,932 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1646, 0.0926, 0.1377,  ..., 0.1840, 0.1127, 0.1629],
         [0.1646, 0.0926, 0.1377,  ..., 0.1840, 0.1127, 0.1629],
         [0.1646, 0.0926, 0.1377,  ..., 0.1840, 0.1127, 0.1629],
         [0.5061, 0.7223, 0.5869,  ..., 0.4479, 0.6620, 0.5113]],
        [[0.2483, 0.2488, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2551, 0.2535, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2483, 0.2488, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2483, 0.2488, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1655, 0.1797, 0.1878,  ..., 0.2014, 0.3725, 0.1531],
         [0.1655, 0.1451, 0.1878,  ..., 0.2014, 0.1722, 0.1531],
         [0.1655, 0.2859, 0.1878,  ..., 0.2014, 0.1722, 0.2214],
         [0.5035, 0.3893, 0.4366,  ..., 0.3957, 0.2832, 0.4723]],
        [[0.1721, 0.2809, 0.2982,  ..., 0.4050, 0.3339, 0.2359],
         [0.3455, 0.2582, 0.2323,  ..., 0.2515, 0.3575, 0.4310],
         [0.3104, 0.3377, 0.3414,  ..., 0.2365, 0.2263, 0.1938],
         [0.1721, 0.1232, 0.1282,  ..., 0.1070, 0.0823, 0.1394]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 390:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:07:42,826 [Process: 0] Synchronize training processes
2024-08-16 13:07:42,827 [Process: 0] Evaluating...
2024-08-16 13:07:42,828 [Process: 0] EPOCH 390:
2024-08-16 13:07:42,830 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1394, 0.1628, 0.1351,  ..., 0.1604, 0.1559, 0.1768],
         [0.1394, 0.1628, 0.1351,  ..., 0.1604, 0.1559, 0.1768],
         [0.1394, 0.1628, 0.1351,  ..., 0.1604, 0.1559, 0.1768],
         [0.5818, 0.5115, 0.5948,  ..., 0.5189, 0.5323, 0.4695]],
        [[0.2457, 0.2494, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2628, 0.2517, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2457, 0.2494, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2457, 0.2494, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1674, 0.1332, 0.1425,  ..., 0.0897, 0.5244, 0.1352],
         [0.2051, 0.1332, 0.1425,  ..., 0.0897, 0.0422, 0.1367],
         [0.1674, 0.1332, 0.1425,  ..., 0.0897, 0.4000, 0.1352],
         [0.4601, 0.6005, 0.5726,  ..., 0.7309, 0.0333, 0.5929]],
        [[0.5447, 0.2607, 0.4616,  ..., 0.3011, 0.4345, 0.2404],
         [0.2043, 0.3345, 0.2627,  ..., 0.3017, 0.2606, 0.3031],
         [0.1364, 0.2024, 0.1410,  ..., 0.1986, 0.1655, 0.2282],
         [0.1147, 0.2024, 0.1346,  ..., 0.1986, 0.1394, 0.2282]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 391:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:07:44,725 [Process: 0] Synchronize training processes
2024-08-16 13:07:44,725 [Process: 0] Evaluating...
2024-08-16 13:07:44,727 [Process: 0] EPOCH 391:
2024-08-16 13:07:44,729 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1400, 0.1928, 0.1238,  ..., 0.1372, 0.1365, 0.1933],
         [0.1400, 0.1928, 0.1238,  ..., 0.1372, 0.1616, 0.1933],
         [0.1400, 0.1928, 0.1238,  ..., 0.1372, 0.1365, 0.1933],
         [0.5800, 0.4215, 0.6285,  ..., 0.5883, 0.5653, 0.4201]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2447, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2659, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2447, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2447, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1367, 0.1513, 0.1725,  ..., 0.2947, 0.1757, 0.1985],
         [0.1367, 0.1513, 0.1725,  ..., 0.2002, 0.1757, 0.1985],
         [0.1367, 0.1513, 0.1725,  ..., 0.1960, 0.1757, 0.1985],
         [0.5900, 0.5462, 0.4825,  ..., 0.3091, 0.4730, 0.4046]],
        [[0.4364, 0.2997, 0.2369,  ..., 0.2500, 0.3416, 0.1658],
         [0.2018, 0.2368, 0.2369,  ..., 0.2500, 0.2139, 0.2405],
         [0.1809, 0.2435, 0.2892,  ..., 0.2500, 0.2306, 0.4335],
         [0.1809, 0.2200, 0.2369,  ..., 0.2500, 0.2139, 0.1602]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 392:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1742, 0.1460, 0.1613,  ..., 0.1524, 0.1683, 0.1318],
         [0.1742, 0.1460, 0.1645,  ..., 0.1524, 0.1683, 0.1318],
         [0.1742, 0.1460, 0.1613,  ..., 0.1524, 0.1683, 0.1318],
         [0.4773, 0.5619, 0.5129,  ..., 0.5427, 0.4950, 0.6047]],
        [[0.2500, 0.2500, 0.2486,  ..., 0.2482, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2542,  ..., 0.2554, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2486,  ..., 0.2482, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2486,  ..., 0.2482, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:46,630 [Process: 0] Synchronize training processes
2024-08-16 13:07:46,631 [Process: 0] Evaluating...
2024-08-16 13:07:46,632 [Process: 0] EPOCH 392:
2024-08-16 13:07:46,634 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:07:48,530 [Process: 0] Synchronize training processes
2024-08-16 13:07:48,530 [Process: 0] Evaluating...
2024-08-16 13:07:48,532 [Process: 0] EPOCH 393:
2024-08-16 13:07:48,534 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1982, 0.1818, 0.2036,  ..., 0.2103, 0.2137, 0.1488],
         [0.1779, 0.1818, 0.2036,  ..., 0.2103, 0.2209, 0.1488],
         [0.1779, 0.1818, 0.2036,  ..., 0.2103, 0.2137, 0.1488],
         [0.4460, 0.4547, 0.3891,  ..., 0.3692, 0.3516, 0.5535]],
        [[0.1538, 0.2238, 0.2747,  ..., 0.2215, 0.5236, 0.4476],
         [0.3527, 0.3285, 0.3658,  ..., 0.3367, 0.2151, 0.1704],
         [0.3398, 0.2238, 0.2167,  ..., 0.2399, 0.1306, 0.2267],
         [0.1538, 0.2238, 0.1428,  ..., 0.2019, 0.1306, 0.1553]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 393:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1500, 0.1403, 0.1492,  ..., 0.1333, 0.1876, 0.1473],
         [0.1500, 0.1403, 0.1492,  ..., 0.1333, 0.1876, 0.1473],
         [0.1500, 0.1403, 0.1492,  ..., 0.1333, 0.1876, 0.1473],
         [0.5499, 0.5791, 0.5524,  ..., 0.6001, 0.4371, 0.5581]],
        [[0.2500, 0.2443, 0.2500,  ..., 0.2500, 0.2528, 0.2500],
         [0.2500, 0.2672, 0.2500,  ..., 0.2500, 0.2491, 0.2500],
         [0.2500, 0.2443, 0.2500,  ..., 0.2500, 0.2491, 0.2500],
         [0.2500, 0.2443, 0.2500,  ..., 0.2500, 0.2491, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:50,441 [Process: 0] Synchronize training processes
2024-08-16 13:07:50,442 [Process: 0] Evaluating...
2024-08-16 13:07:50,443 [Process: 0] EPOCH 394:
2024-08-16 13:07:50,445 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2816, 0.1777, 0.1238,  ..., 0.2116, 0.1845, 0.2346],
         [0.1759, 0.1777, 0.1329,  ..., 0.2015, 0.1845, 0.1808],
         [0.1669, 0.1777, 0.1238,  ..., 0.1857, 0.1845, 0.1808],
         [0.3757, 0.4669, 0.6196,  ..., 0.4013, 0.4466, 0.4038]],
        [[0.2388, 0.2500, 0.2443,  ..., 0.1661, 0.2303, 0.2461],
         [0.2618, 0.2500, 0.3194,  ..., 0.4735, 0.3091, 0.2570],
         [0.2764, 0.2500, 0.2181,  ..., 0.1942, 0.2303, 0.2508],
         [0.2229, 0.2500, 0.2181,  ..., 0.1661, 0.2303, 0.2461]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 394:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1300, 0.1705, 0.1571,  ..., 0.1302, 0.1714, 0.1455],
         [0.1300, 0.1705, 0.1571,  ..., 0.1384, 0.1714, 0.1455],
         [0.1300, 0.1705, 0.1571,  ..., 0.1302, 0.1714, 0.1455],
         [0.6101, 0.4884, 0.5286,  ..., 0.6011, 0.4859, 0.5636]],
        [[0.2500, 0.2479, 0.2500,  ..., 0.2500, 0.2500, 0.2489],
         [0.2500, 0.2564, 0.2500,  ..., 0.2500, 0.2500, 0.2534],
         [0.2500, 0.2479, 0.2500,  ..., 0.2500, 0.2500, 0.2489],
         [0.2500, 0.2479, 0.2500,  ..., 0.2500, 0.2500, 0.2489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:52,336 [Process: 0] Synchronize training processes
2024-08-16 13:07:52,336 [Process: 0] Evaluating...
2024-08-16 13:07:52,338 [Process: 0] EPOCH 395:
2024-08-16 13:07:52,340 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1659, 0.1715, 0.1129,  ..., 0.1315, 0.4359, 0.1205],
         [0.1659, 0.1715, 0.4896,  ..., 0.1315, 0.3156, 0.1898],
         [0.1659, 0.1715, 0.1129,  ..., 0.1315, 0.0831, 0.1205],
         [0.5023, 0.4856, 0.2846,  ..., 0.6056, 0.1654, 0.5693]],
        [[0.1187, 0.1539, 0.1426,  ..., 0.1864, 0.1850, 0.2153],
         [0.1187, 0.1539, 0.2029,  ..., 0.1906, 0.1850, 0.2109],
         [0.6439, 0.5383, 0.5120,  ..., 0.4365, 0.4451, 0.3630],
         [0.1187, 0.1539, 0.1426,  ..., 0.1864, 0.1850, 0.2109]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 395:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1421, 0.1225, 0.1186,  ..., 0.1796, 0.1421, 0.1350],
         [0.1421, 0.1225, 0.1186,  ..., 0.1796, 0.1421, 0.1350],
         [0.1421, 0.1225, 0.1186,  ..., 0.1796, 0.1421, 0.1350],
         [0.5736, 0.6326, 0.6442,  ..., 0.4612, 0.5738, 0.5949]],
        [[0.2954, 0.2389, 0.2500,  ..., 0.2500, 0.2500, 0.2535],
         [0.2658, 0.2834, 0.2500,  ..., 0.2500, 0.2500, 0.2683],
         [0.2194, 0.2389, 0.2500,  ..., 0.2500, 0.2500, 0.2391],
         [0.2194, 0.2389, 0.2500,  ..., 0.2500, 0.2500, 0.2391]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:54,235 [Process: 0] Synchronize training processes
2024-08-16 13:07:54,235 [Process: 0] Evaluating...
2024-08-16 13:07:54,237 [Process: 0] EPOCH 396:
2024-08-16 13:07:54,239 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3445, 0.1916, 0.1756,  ..., 0.1514, 0.1766, 0.1616],
         [0.1548, 0.2869, 0.1756,  ..., 0.1514, 0.1383, 0.1616],
         [0.1651, 0.1870, 0.1756,  ..., 0.1514, 0.1841, 0.1616],
         [0.3356, 0.3345, 0.4732,  ..., 0.5458, 0.5010, 0.5153]],
        [[0.1944, 0.3554, 0.2500,  ..., 0.2962, 0.2500, 0.1894],
         [0.3867, 0.2723, 0.2500,  ..., 0.3029, 0.2500, 0.2943],
         [0.2245, 0.1945, 0.2500,  ..., 0.2833, 0.2500, 0.3268],
         [0.1944, 0.1777, 0.2500,  ..., 0.1176, 0.2500, 0.1894]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 396:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1500, 0.1769, 0.1034,  ..., 0.1491, 0.1647, 0.1374],
         [0.1500, 0.1769, 0.1034,  ..., 0.1491, 0.1647, 0.1374],
         [0.1500, 0.1769, 0.1034,  ..., 0.1491, 0.1647, 0.1374],
         [0.5499, 0.4694, 0.6899,  ..., 0.5528, 0.5058, 0.5877]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:56,132 [Process: 0] Synchronize training processes
2024-08-16 13:07:56,133 [Process: 0] Evaluating...
2024-08-16 13:07:56,135 [Process: 0] EPOCH 397:
2024-08-16 13:07:56,136 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1794, 0.1794, 0.1853,  ..., 0.1520, 0.1625, 0.1585],
         [0.1794, 0.1794, 0.1853,  ..., 0.1520, 0.1625, 0.1585],
         [0.1794, 0.1794, 0.1853,  ..., 0.1520, 0.1625, 0.1585],
         [0.4618, 0.4618, 0.4440,  ..., 0.5439, 0.5124, 0.5246]],
        [[0.3752, 0.3711, 0.2216,  ..., 0.2799, 0.4275, 0.4069],
         [0.3017, 0.3772, 0.3905,  ..., 0.2710, 0.2940, 0.2702],
         [0.2085, 0.1462, 0.2158,  ..., 0.2815, 0.1461, 0.1614],
         [0.1147, 0.1055, 0.1721,  ..., 0.1675, 0.1325, 0.1614]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 397:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1177, 0.1755, 0.1916,  ..., 0.1261, 0.1651, 0.1393],
         [0.1177, 0.1755, 0.1916,  ..., 0.1261, 0.1651, 0.1393],
         [0.1177, 0.1755, 0.1916,  ..., 0.1261, 0.1651, 0.1393],
         [0.6468, 0.4734, 0.4253,  ..., 0.6216, 0.5046, 0.5820]],
        [[0.2500, 0.2469, 0.2500,  ..., 0.2500, 0.2387, 0.2500],
         [0.2500, 0.2593, 0.2500,  ..., 0.2500, 0.2518, 0.2500],
         [0.2500, 0.2469, 0.2500,  ..., 0.2500, 0.2708, 0.2500],
         [0.2500, 0.2469, 0.2500,  ..., 0.2500, 0.2387, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:58,038 [Process: 0] Synchronize training processes
2024-08-16 13:07:58,038 [Process: 0] Evaluating...
2024-08-16 13:07:58,040 [Process: 0] EPOCH 398:
2024-08-16 13:07:58,042 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2078, 0.1604, 0.1547,  ..., 0.2054, 0.2031, 0.1460],
         [0.2078, 0.1604, 0.1547,  ..., 0.2054, 0.2008, 0.1460],
         [0.2078, 0.1604, 0.1547,  ..., 0.2054, 0.2008, 0.1460],
         [0.3765, 0.5187, 0.5360,  ..., 0.3838, 0.3954, 0.5619]],
        [[0.4296, 0.1929, 0.1335,  ..., 0.2291, 0.1858, 0.2524],
         [0.2210, 0.2239, 0.4104,  ..., 0.2503, 0.3302, 0.3248],
         [0.2557, 0.3904, 0.3225,  ..., 0.2915, 0.2981, 0.2591],
         [0.0936, 0.1929, 0.1335,  ..., 0.2291, 0.1858, 0.1636]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 398:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1593, 0.1149, 0.1659,  ..., 0.1446, 0.1768, 0.1872],
         [0.1593, 0.1149, 0.1885,  ..., 0.1505, 0.1768, 0.1872],
         [0.1593, 0.1149, 0.1659,  ..., 0.1446, 0.1768, 0.1872],
         [0.5222, 0.6554, 0.4797,  ..., 0.5603, 0.4697, 0.4385]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2505, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2630, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2433, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2433, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:07:59,928 [Process: 0] Synchronize training processes
2024-08-16 13:07:59,928 [Process: 0] Evaluating...
2024-08-16 13:07:59,930 [Process: 0] EPOCH 399:
2024-08-16 13:07:59,932 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1774, 0.1860, 0.1153,  ..., 0.1714, 0.1652, 0.1780],
         [0.1774, 0.1860, 0.1800,  ..., 0.1714, 0.1652, 0.1780],
         [0.1774, 0.1860, 0.1194,  ..., 0.1714, 0.1652, 0.1896],
         [0.4677, 0.4421, 0.5852,  ..., 0.4858, 0.5045, 0.4543]],
        [[0.2355, 0.1976, 0.2994,  ..., 0.4137, 0.3240, 0.1834],
         [0.2934, 0.3053, 0.2654,  ..., 0.2420, 0.2381, 0.3777],
         [0.2355, 0.4357, 0.2713,  ..., 0.1936, 0.2601, 0.2556],
         [0.2355, 0.0615, 0.1639,  ..., 0.1506, 0.1778, 0.1834]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 399:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1715, 0.1697, 0.1372,  ..., 0.1557, 0.1435, 0.1341],
         [0.1810, 0.1697, 0.1372,  ..., 0.1612, 0.1435, 0.1370],
         [0.1715, 0.1697, 0.1372,  ..., 0.1557, 0.1435, 0.1341],
         [0.4759, 0.4909, 0.5885,  ..., 0.5273, 0.5695, 0.5949]],
        [[0.2500, 0.2491, 0.2500,  ..., 0.2500, 0.2455, 0.2487],
         [0.2500, 0.2527, 0.2500,  ..., 0.2500, 0.2635, 0.2539],
         [0.2500, 0.2491, 0.2500,  ..., 0.2500, 0.2455, 0.2487],
         [0.2500, 0.2491, 0.2500,  ..., 0.2500, 0.2455, 0.2487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:08:01,825 [Process: 0] Synchronize training processes
2024-08-16 13:08:01,826 [Process: 0] Evaluating...
2024-08-16 13:08:01,827 [Process: 0] EPOCH 400:
2024-08-16 13:08:01,829 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1759, 0.2201, 0.1870,  ..., 0.2904, 0.1698, 0.2159],
         [0.2638, 0.2201, 0.2204,  ..., 0.2775, 0.2006, 0.2159],
         [0.2738, 0.2201, 0.1870,  ..., 0.2045, 0.1698, 0.2159],
         [0.2866, 0.3397, 0.4055,  ..., 0.2276, 0.4598, 0.3524]],
        [[0.4241, 0.2362, 0.3007,  ..., 0.2495, 0.2750, 0.4276],
         [0.2535, 0.2913, 0.3208,  ..., 0.3201, 0.3104, 0.2799],
         [0.1612, 0.2362, 0.2224,  ..., 0.2152, 0.2073, 0.1531],
         [0.1612, 0.2362, 0.1561,  ..., 0.2152, 0.2073, 0.1393]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 400:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1723, 0.1974, 0.1434,  ..., 0.1933, 0.1211, 0.1399],
         [0.1723, 0.1974, 0.1434,  ..., 0.1933, 0.1211, 0.1399],
         [0.1723, 0.1974, 0.1434,  ..., 0.1933, 0.1211, 0.1399],
         [0.4830, 0.4077, 0.5697,  ..., 0.4201, 0.6367, 0.5803]],
        [[0.2500, 0.2500, 0.2493,  ..., 0.2478, 0.2439, 0.2490],
         [0.2500, 0.2500, 0.2520,  ..., 0.2566, 0.2684, 0.2531],
         [0.2500, 0.2500, 0.2493,  ..., 0.2478, 0.2439, 0.2490],
         [0.2500, 0.2500, 0.2493,  ..., 0.2478, 0.2439, 0.2490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:08:03,725 [Process: 0] Synchronize training processes
2024-08-16 13:08:03,726 [Process: 0] Evaluating...
2024-08-16 13:08:03,728 [Process: 0] EPOCH 401:
2024-08-16 13:08:03,730 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.2155, 0.1458, 0.2462,  ..., 0.1111, 0.2185, 0.1875],
         [0.1858, 0.1458, 0.2575,  ..., 0.1111, 0.2063, 0.3348],
         [0.1858, 0.1458, 0.1310,  ..., 0.1111, 0.2734, 0.1632],
         [0.4129, 0.5627, 0.3653,  ..., 0.6666, 0.3018, 0.3145]],
        [[0.4247, 0.5391, 0.3514,  ..., 0.3999, 0.1834, 0.5597],
         [0.2949, 0.1903, 0.3920,  ..., 0.2193, 0.1834, 0.1468],
         [0.1755, 0.2158, 0.1948,  ..., 0.2632, 0.4499, 0.1468],
         [0.1049, 0.0549, 0.0617,  ..., 0.1177, 0.1834, 0.1468]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 401:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1683, 0.1763, 0.1398,  ..., 0.1761, 0.1632, 0.1433],
         [0.1683, 0.1763, 0.1398,  ..., 0.1761, 0.1632, 0.1474],
         [0.1683, 0.1763, 0.1398,  ..., 0.1761, 0.1632, 0.1433],
         [0.4952, 0.4710, 0.5806,  ..., 0.4716, 0.5105, 0.5660]],
        [[0.2500, 0.2500, 0.2529,  ..., 0.2500, 0.2500, 0.2487],
         [0.2500, 0.2500, 0.2545,  ..., 0.2500, 0.2500, 0.2540],
         [0.2500, 0.2500, 0.2463,  ..., 0.2500, 0.2500, 0.2487],
         [0.2500, 0.2500, 0.2463,  ..., 0.2500, 0.2500, 0.2487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1967, 0.1574, 0.1632,  ..., 0.1579, 0.1748, 0.1596],
         [0.2384, 0.2304, 0.1632,  ..., 0.1727, 0.1748, 0.2170],
         [0.1967, 0.1574, 0.1632,  ..., 0.1579, 0.1748, 0.1596],
         [0.3683, 0.4549, 0.5104,  ..., 0.5115, 0.4757, 0.4638]],
        [[0.2075, 0.3189, 0.4900,  ..., 0.2214, 0.1707, 0.4922],
         [0.2075, 0.2893, 0.0947,  ..., 0.2214, 0.2506, 0.1693],
         [0.3776, 0.3192, 0.3205,  ..., 0.3359, 0.4755, 0.1693],
         [0.2075, 0.0726, 0.0947,  ..., 0.2214, 0.1032, 0.1693]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:08:05,639 [Process: 0] Synchronize training processes
2024-08-16 13:08:05,640 [Process: 0] Evaluating...
2024-08-16 13:08:05,641 [Process: 0] EPOCH 402:
2024-08-16 13:08:05,643 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 402:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1179, 0.1770, 0.1791,  ..., 0.1494, 0.1238, 0.1633],
         [0.1179, 0.1770, 0.1873,  ..., 0.1646, 0.1238, 0.1633],
         [0.1179, 0.1770, 0.1791,  ..., 0.1494, 0.1238, 0.1633],
         [0.6462, 0.4691, 0.4546,  ..., 0.5367, 0.6287, 0.5102]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2501, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1815, 0.1891, 0.1552,  ..., 0.1605, 0.1792, 0.1767],
         [0.2170, 0.1891, 0.1746,  ..., 0.2123, 0.1411, 0.1767],
         [0.1871, 0.1891, 0.1388,  ..., 0.1605, 0.1411, 0.1833],
         [0.4145, 0.4326, 0.5314,  ..., 0.4666, 0.5386, 0.4633]],
        [[0.4600, 0.2353, 0.2368,  ..., 0.2360, 0.3477, 0.4866],
         [0.2634, 0.2940, 0.2897,  ..., 0.2921, 0.2991, 0.2107],
         [0.1398, 0.2353, 0.2368,  ..., 0.2360, 0.1766, 0.1513],
         [0.1368, 0.2353, 0.2368,  ..., 0.2360, 0.1766, 0.1513]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 403:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:08:07,539 [Process: 0] Synchronize training processes
2024-08-16 13:08:07,540 [Process: 0] Evaluating...
2024-08-16 13:08:07,542 [Process: 0] EPOCH 403:
2024-08-16 13:08:07,544 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1462, 0.1395, 0.1358,  ..., 0.1793, 0.1418, 0.1506],
         [0.1482, 0.1395, 0.1358,  ..., 0.1793, 0.1418, 0.1506],
         [0.1462, 0.1395, 0.1358,  ..., 0.1793, 0.1418, 0.1506],
         [0.5595, 0.5815, 0.5927,  ..., 0.4622, 0.5747, 0.5482]],
        [[0.2500, 0.2473, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2581, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2473, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2473, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1165, 0.1552, 0.2130,  ..., 0.1644, 0.1604, 0.1460],
         [0.1901, 0.1552, 0.1829,  ..., 0.1644, 0.1604, 0.1460],
         [0.1165, 0.1552, 0.1828,  ..., 0.1644, 0.1604, 0.1460],
         [0.5770, 0.5345, 0.4213,  ..., 0.5069, 0.5189, 0.5619]],
        [[0.2729, 0.1596, 0.1978,  ..., 0.1819, 0.6534, 0.2330],
         [0.4485, 0.4169, 0.2524,  ..., 0.5203, 0.1058, 0.1604],
         [0.1994, 0.2639, 0.3520,  ..., 0.2300, 0.1549, 0.4461],
         [0.0791, 0.1596, 0.1978,  ..., 0.0678, 0.0859, 0.1604]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 404:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:08:09,445 [Process: 0] Synchronize training processes
2024-08-16 13:08:09,445 [Process: 0] Evaluating...
2024-08-16 13:08:09,447 [Process: 0] EPOCH 404:
2024-08-16 13:08:09,449 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1151, 0.1498, 0.1595,  ..., 0.1557, 0.1377, 0.1540],
         [0.1151, 0.1498, 0.1595,  ..., 0.1557, 0.1495, 0.1540],
         [0.1151, 0.1498, 0.1595,  ..., 0.1557, 0.1377, 0.1540],
         [0.6548, 0.5506, 0.5214,  ..., 0.5328, 0.5752, 0.5380]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1767, 0.1678, 0.2043,  ..., 0.1197, 0.1178, 0.1454],
         [0.1767, 0.2078, 0.2043,  ..., 0.3613, 0.1178, 0.1696],
         [0.1767, 0.1678, 0.2043,  ..., 0.1197, 0.2369, 0.1454],
         [0.4700, 0.4565, 0.3872,  ..., 0.3993, 0.5276, 0.5396]],
        [[0.2319, 0.2301, 0.1975,  ..., 0.2500, 0.1807, 0.4879],
         [0.1643, 0.4968, 0.2477,  ..., 0.2500, 0.1807, 0.3385],
         [0.4570, 0.1768, 0.4688,  ..., 0.2500, 0.4579, 0.1140],
         [0.1468, 0.0964, 0.0860,  ..., 0.2500, 0.1807, 0.0596]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 405:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:08:11,350 [Process: 0] Synchronize training processes
2024-08-16 13:08:11,351 [Process: 0] Evaluating...
2024-08-16 13:08:11,353 [Process: 0] EPOCH 405:
2024-08-16 13:08:11,355 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1303, 0.1442, 0.1762,  ..., 0.2014, 0.1771, 0.1846],
         [0.1303, 0.1442, 0.1762,  ..., 0.2014, 0.1771, 0.1846],
         [0.1303, 0.1442, 0.1762,  ..., 0.2014, 0.1771, 0.1846],
         [0.6092, 0.5674, 0.4714,  ..., 0.3958, 0.4686, 0.4463]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:08:13,265 [Process: 0] Synchronize training processes
2024-08-16 13:08:13,265 [Process: 0] Evaluating...
2024-08-16 13:08:13,267 [Process: 0] EPOCH 406:
2024-08-16 13:08:13,269 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1903, 0.3367, 0.1544,  ..., 0.4386, 0.0938, 0.1944],
         [0.1903, 0.1758, 0.1544,  ..., 0.1526, 0.0938, 0.1915],
         [0.1903, 0.1758, 0.1544,  ..., 0.2821, 0.0938, 0.1915],
         [0.4290, 0.3117, 0.5367,  ..., 0.1266, 0.7185, 0.4226]],
        [[0.2797, 0.2947, 0.2316,  ..., 0.2467, 0.2500, 0.2500],
         [0.3519, 0.3613, 0.3053,  ..., 0.2599, 0.2500, 0.2500],
         [0.1842, 0.1720, 0.2316,  ..., 0.2467, 0.2500, 0.2500],
         [0.1842, 0.1720, 0.2316,  ..., 0.2467, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 406:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1147, 0.1758, 0.1605,  ..., 0.1204, 0.1509, 0.1553],
         [0.1147, 0.1758, 0.1605,  ..., 0.1204, 0.1509, 0.1553],
         [0.1147, 0.1758, 0.1605,  ..., 0.1204, 0.1509, 0.1553],
         [0.6558, 0.4725, 0.5185,  ..., 0.6389, 0.5474, 0.5342]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2614, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2524, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2431, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2431, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3348, 0.2678, 0.4209,  ..., 0.2607, 0.1856, 0.2498],
         [0.1477, 0.3006, 0.1326,  ..., 0.1700, 0.3392, 0.1624],
         [0.1219, 0.1531, 0.1326,  ..., 0.1260, 0.0713, 0.1445],
         [0.3956, 0.2784, 0.3138,  ..., 0.4432, 0.4038, 0.4432]],
        [[0.2302, 0.1678, 0.1970,  ..., 0.2014, 0.2367, 0.2500],
         [0.2302, 0.1678, 0.1970,  ..., 0.2014, 0.2367, 0.2500],
         [0.3094, 0.4966, 0.4090,  ..., 0.3958, 0.2900, 0.2500],
         [0.2302, 0.1678, 0.1970,  ..., 0.2014, 0.2367, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:08:15,242 [Process: 0] Synchronize training processes
2024-08-16 13:08:15,242 [Process: 0] Evaluating...
2024-08-16 13:08:15,244 [Process: 0] EPOCH 407:
2024-08-16 13:08:15,246 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 407:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1348, 0.1829, 0.1528,  ..., 0.1607, 0.1626, 0.0893],
         [0.1348, 0.1829, 0.1633,  ..., 0.1607, 0.1626, 0.0893],
         [0.1348, 0.1829, 0.1528,  ..., 0.1607, 0.1626, 0.0893],
         [0.5955, 0.4514, 0.5310,  ..., 0.5180, 0.5121, 0.7320]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1400, 0.1067, 0.1424,  ..., 0.1425, 0.1350, 0.1852],
         [0.1400, 0.1067, 0.1424,  ..., 0.1425, 0.1350, 0.2048],
         [0.1400, 0.1067, 0.1424,  ..., 0.1425, 0.1350, 0.1852],
         [0.5800, 0.6798, 0.5728,  ..., 0.5725, 0.5949, 0.4249]],
        [[0.2668, 0.2127, 0.4966,  ..., 0.4608, 0.4583, 0.3111],
         [0.2896, 0.3470, 0.1636,  ..., 0.3083, 0.3525, 0.3294],
         [0.2218, 0.2293, 0.1781,  ..., 0.1154, 0.0946, 0.2075],
         [0.2218, 0.2110, 0.1617,  ..., 0.1154, 0.0946, 0.1521]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:08:17,243 [Process: 0] Synchronize training processes
2024-08-16 13:08:17,244 [Process: 0] Evaluating...
2024-08-16 13:08:17,246 [Process: 0] EPOCH 408:
2024-08-16 13:08:17,248 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 408:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1569, 0.1663, 0.1774,  ..., 0.1662, 0.1316, 0.1701],
         [0.1569, 0.1663, 0.1774,  ..., 0.1662, 0.1316, 0.1701],
         [0.1569, 0.1663, 0.1774,  ..., 0.1662, 0.1316, 0.1701],
         [0.5294, 0.5011, 0.4677,  ..., 0.5013, 0.6051, 0.4896]],
        [[0.2500, 0.2500, 0.2655,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2580,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2383,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2383,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2489, 0.1096, 0.1943,  ..., 0.1858, 0.1443, 0.0146],
         [0.1856, 0.1203, 0.2073,  ..., 0.1858, 0.1514, 0.0146],
         [0.1856, 0.1096, 0.1943,  ..., 0.2371, 0.1443, 0.0157],
         [0.3798, 0.6604, 0.4041,  ..., 0.3913, 0.5601, 0.9551]],
        [[0.2500, 0.3055, 0.3188,  ..., 0.2404, 0.2088, 0.2660],
         [0.2500, 0.3314, 0.3200,  ..., 0.2917, 0.2488, 0.3405],
         [0.2500, 0.2081, 0.1806,  ..., 0.2340, 0.3335, 0.1967],
         [0.2500, 0.1550, 0.1806,  ..., 0.2340, 0.2088, 0.1967]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:08:19,140 [Process: 0] Synchronize training processes
2024-08-16 13:08:19,140 [Process: 0] Evaluating...
2024-08-16 13:08:19,142 [Process: 0] EPOCH 409:
2024-08-16 13:08:19,144 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 409:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1440, 0.1577, 0.1816,  ..., 0.1282, 0.1643, 0.1213],
         [0.1527, 0.1656, 0.1816,  ..., 0.1282, 0.1643, 0.1213],
         [0.1440, 0.1577, 0.1816,  ..., 0.1282, 0.1643, 0.1213],
         [0.5593, 0.5190, 0.4552,  ..., 0.6154, 0.5071, 0.6360]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2438, 0.2500, 0.2485],
         [0.2500, 0.2500, 0.2500,  ..., 0.2687, 0.2500, 0.2545],
         [0.2500, 0.2500, 0.2500,  ..., 0.2438, 0.2500, 0.2485],
         [0.2500, 0.2500, 0.2500,  ..., 0.2438, 0.2500, 0.2485]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2042, 0.1286, 0.1259,  ..., 0.1328, 0.1225, 0.1665],
         [0.2572, 0.1541, 0.2330,  ..., 0.2229, 0.3562, 0.1978],
         [0.2042, 0.1286, 0.1259,  ..., 0.1328, 0.1225, 0.1665],
         [0.3345, 0.5887, 0.5152,  ..., 0.5116, 0.3988, 0.4691]],
        [[0.2102, 0.2378, 0.4597,  ..., 0.5250, 0.2121, 0.8038],
         [0.2102, 0.2378, 0.1337,  ..., 0.1583, 0.1233, 0.0594],
         [0.3694, 0.2867, 0.2730,  ..., 0.1583, 0.5413, 0.0947],
         [0.2102, 0.2378, 0.1337,  ..., 0.1583, 0.1233, 0.0421]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 410:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:08:21,045 [Process: 0] Synchronize training processes
2024-08-16 13:08:21,046 [Process: 0] Evaluating...
2024-08-16 13:08:21,047 [Process: 0] EPOCH 410:
2024-08-16 13:08:21,049 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1290, 0.1513, 0.1788,  ..., 0.1445, 0.1995, 0.1907],
         [0.1373, 0.1513, 0.1788,  ..., 0.1445, 0.1995, 0.1907],
         [0.1290, 0.1513, 0.1788,  ..., 0.1445, 0.1995, 0.1907],
         [0.6046, 0.5461, 0.4636,  ..., 0.5665, 0.4014, 0.4280]],
        [[0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2559, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2005, 0.2528, 0.1679,  ..., 0.1839, 0.3133, 0.1795],
         [0.3279, 0.2939, 0.1679,  ..., 0.1892, 0.3412, 0.2783],
         [0.1903, 0.1375, 0.1679,  ..., 0.1839, 0.1292, 0.1795],
         [0.2812, 0.3158, 0.4962,  ..., 0.4429, 0.2163, 0.3627]],
        [[0.1738, 0.2567, 0.1985,  ..., 0.2109, 0.2500, 0.1940],
         [0.3733, 0.2229, 0.4671,  ..., 0.3107, 0.2500, 0.1940],
         [0.2791, 0.2974, 0.2312,  ..., 0.2676, 0.2500, 0.4180],
         [0.1738, 0.2229, 0.1031,  ..., 0.2109, 0.2500, 0.1940]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 411:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:08:22,935 [Process: 0] Synchronize training processes
2024-08-16 13:08:22,935 [Process: 0] Evaluating...
2024-08-16 13:08:22,937 [Process: 0] EPOCH 411:
2024-08-16 13:08:22,939 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1612, 0.1530, 0.1306,  ..., 0.1731, 0.1626, 0.1502],
         [0.1612, 0.1530, 0.1306,  ..., 0.1731, 0.1626, 0.1502],
         [0.1612, 0.1530, 0.1306,  ..., 0.1731, 0.1626, 0.1502],
         [0.5165, 0.5411, 0.6083,  ..., 0.4808, 0.5123, 0.5493]],
        [[0.2500, 0.2752, 0.2500,  ..., 0.2500, 0.2701, 0.2446],
         [0.2500, 0.2683, 0.2500,  ..., 0.2500, 0.2551, 0.2661],
         [0.2500, 0.2310, 0.2500,  ..., 0.2500, 0.2374, 0.2446],
         [0.2500, 0.2255, 0.2500,  ..., 0.2500, 0.2374, 0.2446]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1870, 0.1540, 0.1556,  ..., 0.1930, 0.1234, 0.1505],
         [0.1870, 0.1540, 0.1556,  ..., 0.1930, 0.1234, 0.1505],
         [0.1870, 0.1540, 0.1556,  ..., 0.1930, 0.1234, 0.1505],
         [0.4390, 0.5379, 0.5331,  ..., 0.4209, 0.6298, 0.5485]],
        [[0.2264, 0.3310, 0.2500,  ..., 0.2368, 0.3618, 0.4675],
         [0.5634, 0.2228, 0.2500,  ..., 0.2896, 0.4200, 0.1412],
         [0.1292, 0.2233, 0.2500,  ..., 0.2368, 0.1380, 0.3283],
         [0.0810, 0.2228, 0.2500,  ..., 0.2368, 0.0802, 0.0630]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 412:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:08:24,841 [Process: 0] Synchronize training processes
2024-08-16 13:08:24,841 [Process: 0] Evaluating...
2024-08-16 13:08:24,843 [Process: 0] EPOCH 412:
2024-08-16 13:08:24,845 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0959, 0.1475, 0.1440,  ..., 0.1358, 0.1435, 0.1204],
         [0.0959, 0.1475, 0.1503,  ..., 0.1358, 0.1435, 0.1204],
         [0.0959, 0.1475, 0.1440,  ..., 0.1358, 0.1435, 0.1204],
         [0.7122, 0.5574, 0.5617,  ..., 0.5927, 0.5696, 0.6388]],
        [[0.2500, 0.2472, 0.2429,  ..., 0.2500, 0.2493, 0.2500],
         [0.2500, 0.2584, 0.2712,  ..., 0.2500, 0.2521, 0.2500],
         [0.2500, 0.2472, 0.2429,  ..., 0.2500, 0.2493, 0.2500],
         [0.2500, 0.2472, 0.2429,  ..., 0.2500, 0.2493, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1373, 0.1973, 0.1608,  ..., 0.1284, 0.1702, 0.1992],
         [0.1373, 0.1825, 0.1608,  ..., 0.1284, 0.1702, 0.1866],
         [0.1373, 0.1825, 0.1738,  ..., 0.1284, 0.1702, 0.3044],
         [0.5882, 0.4376, 0.5047,  ..., 0.6149, 0.4895, 0.3098]],
        [[0.1719, 0.4555, 0.3840,  ..., 0.1223, 0.2255, 0.4328],
         [0.2027, 0.2475, 0.2194,  ..., 0.3616, 0.2624, 0.1957],
         [0.4693, 0.1485, 0.2310,  ..., 0.4141, 0.2867, 0.2736],
         [0.1560, 0.1485, 0.1657,  ..., 0.1020, 0.2255, 0.0979]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 413:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:08:26,747 [Process: 0] Synchronize training processes
2024-08-16 13:08:26,747 [Process: 0] Evaluating...
2024-08-16 13:08:26,749 [Process: 0] EPOCH 413:
2024-08-16 13:08:26,751 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1301, 0.1304, 0.1117,  ..., 0.1436, 0.1320, 0.1306],
         [0.1301, 0.1304, 0.1132,  ..., 0.1436, 0.1320, 0.1306],
         [0.1301, 0.1304, 0.1117,  ..., 0.1436, 0.1320, 0.1306],
         [0.6098, 0.6087, 0.6634,  ..., 0.5692, 0.6041, 0.6081]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1939, 0.1853, 0.1351,  ..., 0.2187, 0.1754, 0.1970],
         [0.1762, 0.1853, 0.1351,  ..., 0.1477, 0.1754, 0.1970],
         [0.1762, 0.1853, 0.1351,  ..., 0.1477, 0.1754, 0.1970],
         [0.4538, 0.4442, 0.5947,  ..., 0.4859, 0.4737, 0.4089]],
        [[0.2009, 0.2386, 0.1987,  ..., 0.4990, 0.1698, 0.2137],
         [0.3284, 0.2386, 0.4998,  ..., 0.1835, 0.2651, 0.3132],
         [0.2698, 0.2843, 0.1666,  ..., 0.2306, 0.3953, 0.2593],
         [0.2009, 0.2386, 0.1349,  ..., 0.0869, 0.1698, 0.2137]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 414:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:08:28,650 [Process: 0] Synchronize training processes
2024-08-16 13:08:28,650 [Process: 0] Evaluating...
2024-08-16 13:08:28,652 [Process: 0] EPOCH 414:
2024-08-16 13:08:28,654 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:08:30,558 [Process: 0] Synchronize training processes
2024-08-16 13:08:30,558 [Process: 0] Evaluating...
2024-08-16 13:08:30,560 [Process: 0] EPOCH 415:
2024-08-16 13:08:30,562 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1466, 0.1853, 0.1480,  ..., 0.1768, 0.1275, 0.1282],
         [0.1466, 0.1853, 0.1480,  ..., 0.1768, 0.1275, 0.1282],
         [0.1466, 0.1853, 0.1480,  ..., 0.1768, 0.1275, 0.1282],
         [0.5603, 0.4440, 0.5559,  ..., 0.4696, 0.6176, 0.6154]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6194e-01, 1.7904e-01, 2.3985e-01,  ..., 2.6942e-01,
          1.6386e-01, 5.7022e-04],
         [1.6194e-01, 1.7904e-01, 2.1281e-01,  ..., 2.3672e-01,
          1.6386e-01, 5.7022e-04],
         [1.6194e-01, 1.7904e-01, 1.7216e-01,  ..., 2.3672e-01,
          1.6386e-01, 9.9595e-01],
         [5.1419e-01, 4.6289e-01, 3.7518e-01,  ..., 2.5714e-01,
          5.0841e-01, 2.9115e-03]],
        [[2.9145e-01, 3.6514e-01, 3.7798e-01,  ..., 2.7523e-01,
          2.7696e-01, 2.5000e-01],
         [3.4458e-01, 2.7829e-01, 1.4912e-01,  ..., 2.1257e-01,
          2.8329e-01, 2.5000e-01],
         [2.2496e-01, 2.6612e-01, 3.4933e-01,  ..., 3.1312e-01,
          2.1987e-01, 2.5000e-01],
         [1.3901e-01, 9.0450e-02, 1.2357e-01,  ..., 1.9908e-01,
          2.1987e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 415:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:08:32,457 [Process: 0] Synchronize training processes
2024-08-16 13:08:32,457 [Process: 0] Evaluating...
2024-08-16 13:08:32,459 [Process: 0] EPOCH 416:
2024-08-16 13:08:32,461 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1123, 0.1597, 0.1633,  ..., 0.1477, 0.1409, 0.1490],
         [0.1123, 0.1597, 0.1633,  ..., 0.1477, 0.1409, 0.1504],
         [0.1123, 0.1597, 0.1633,  ..., 0.1477, 0.1409, 0.1490],
         [0.6630, 0.5208, 0.5102,  ..., 0.5570, 0.5772, 0.5517]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2485, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2545, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2485, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2485, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1352, 0.1202, 0.1101,  ..., 0.2665, 0.1433, 0.1228],
         [0.1273, 0.1202, 0.1101,  ..., 0.2179, 0.1433, 0.1228],
         [0.1273, 0.1202, 0.1101,  ..., 0.2179, 0.1433, 0.1228],
         [0.6101, 0.6393, 0.6697,  ..., 0.2978, 0.5700, 0.6316]],
        [[0.2130, 0.2314, 0.3967,  ..., 0.3348, 0.3179, 0.2680],
         [0.2821, 0.2645, 0.2728,  ..., 0.2600, 0.2959, 0.4162],
         [0.3552, 0.4034, 0.2369,  ..., 0.2669, 0.2090, 0.1611],
         [0.1497, 0.1007, 0.0936,  ..., 0.1384, 0.1772, 0.1547]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 416:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:08:34,350 [Process: 0] Synchronize training processes
2024-08-16 13:08:34,351 [Process: 0] Evaluating...
2024-08-16 13:08:34,352 [Process: 0] EPOCH 417:
2024-08-16 13:08:34,354 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1157, 0.1830, 0.1806,  ..., 0.1491, 0.1212, 0.1672],
         [0.1166, 0.1830, 0.1806,  ..., 0.1491, 0.1212, 0.1683],
         [0.1157, 0.1830, 0.1806,  ..., 0.1491, 0.1212, 0.1672],
         [0.6519, 0.4509, 0.4581,  ..., 0.5526, 0.6364, 0.4972]],
        [[0.2504, 0.2500, 0.2486,  ..., 0.2500, 0.2500, 0.2500],
         [0.2624, 0.2500, 0.2542,  ..., 0.2500, 0.2500, 0.2500],
         [0.2436, 0.2500, 0.2486,  ..., 0.2500, 0.2500, 0.2500],
         [0.2436, 0.2500, 0.2486,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2831, 0.3543, 0.2233,  ..., 0.2208, 0.2152, 0.1730],
         [0.1232, 0.0747, 0.1049,  ..., 0.1159, 0.2071, 0.1730],
         [0.2372, 0.3221, 0.1358,  ..., 0.1159, 0.2286, 0.1869],
         [0.3565, 0.2490, 0.5361,  ..., 0.5475, 0.3490, 0.4671]],
        [[0.2500, 0.3407, 0.2500,  ..., 0.2500, 0.2446, 0.3535],
         [0.2500, 0.2198, 0.2500,  ..., 0.2500, 0.2662, 0.2421],
         [0.2500, 0.2198, 0.2500,  ..., 0.2500, 0.2446, 0.2022],
         [0.2500, 0.2198, 0.2500,  ..., 0.2500, 0.2446, 0.2022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 417:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1138, 0.1541, 0.1220,  ..., 0.1954, 0.1207, 0.1428],
         [0.1235, 0.1541, 0.1220,  ..., 0.1954, 0.1207, 0.1478],
         [0.1138, 0.1541, 0.1220,  ..., 0.1954, 0.1207, 0.1428],
         [0.6488, 0.5377, 0.6340,  ..., 0.4139, 0.6379, 0.5667]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:08:36,255 [Process: 0] Synchronize training processes
2024-08-16 13:08:36,255 [Process: 0] Evaluating...
2024-08-16 13:08:36,257 [Process: 0] EPOCH 418:
2024-08-16 13:08:36,259 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1484, 0.2047, 0.2358,  ..., 0.1710, 0.1488, 0.1136],
         [0.1499, 0.2047, 0.2358,  ..., 0.1710, 0.1488, 0.1136],
         [0.1484, 0.2047, 0.2358,  ..., 0.1710, 0.1525, 0.1136],
         [0.5534, 0.3860, 0.2927,  ..., 0.4871, 0.5499, 0.6592]],
        [[0.2809, 0.2365, 0.3822,  ..., 0.1749, 0.2232, 0.1208],
         [0.2506, 0.2365, 0.1794,  ..., 0.3251, 0.4467, 0.2696],
         [0.3483, 0.2904, 0.2590,  ..., 0.3250, 0.1895, 0.4889],
         [0.1201, 0.2365, 0.1794,  ..., 0.1749, 0.1406, 0.1208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 418:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1620, 0.1331, 0.1973,  ..., 0.1531, 0.1540, 0.1624],
         [0.1651, 0.1331, 0.1973,  ..., 0.1531, 0.1603, 0.1624],
         [0.1620, 0.1331, 0.1973,  ..., 0.1531, 0.1540, 0.1624],
         [0.5109, 0.6007, 0.4080,  ..., 0.5406, 0.5318, 0.5128]],
        [[0.2500, 0.2500, 0.2531,  ..., 0.2500, 0.2460, 0.2500],
         [0.2500, 0.2500, 0.2490,  ..., 0.2500, 0.2619, 0.2500],
         [0.2500, 0.2500, 0.2490,  ..., 0.2500, 0.2460, 0.2500],
         [0.2500, 0.2500, 0.2490,  ..., 0.2500, 0.2460, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:08:38,159 [Process: 0] Synchronize training processes
2024-08-16 13:08:38,159 [Process: 0] Evaluating...
2024-08-16 13:08:38,161 [Process: 0] EPOCH 419:
2024-08-16 13:08:38,163 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2879, 0.1364, 0.1696,  ..., 0.1937, 0.1683, 0.2637],
         [0.1285, 0.1364, 0.1420,  ..., 0.1937, 0.1683, 0.1738],
         [0.2682, 0.1364, 0.1420,  ..., 0.1937, 0.1683, 0.1738],
         [0.3154, 0.5907, 0.5465,  ..., 0.4190, 0.4950, 0.3886]],
        [[0.2500, 0.2500, 0.3445,  ..., 0.3023, 0.3114, 0.1320],
         [0.2500, 0.2500, 0.4028,  ..., 0.2299, 0.3642, 0.4274],
         [0.2500, 0.2500, 0.1283,  ..., 0.2379, 0.1873, 0.3086],
         [0.2500, 0.2500, 0.1244,  ..., 0.2299, 0.1371, 0.1320]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 419:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1363, 0.1521, 0.1566,  ..., 0.1399, 0.1639, 0.1250],
         [0.1363, 0.1521, 0.1601,  ..., 0.1399, 0.1639, 0.1250],
         [0.1363, 0.1521, 0.1566,  ..., 0.1399, 0.1639, 0.1250],
         [0.5911, 0.5436, 0.5268,  ..., 0.5803, 0.5083, 0.6250]],
        [[0.2498, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2507, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2501],
         [0.2498, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2498, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:08:40,054 [Process: 0] Synchronize training processes
2024-08-16 13:08:40,054 [Process: 0] Evaluating...
2024-08-16 13:08:40,056 [Process: 0] EPOCH 420:
2024-08-16 13:08:40,058 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4003, 0.2377, 0.2960,  ..., 0.3448, 0.3905, 0.0283],
         [0.2572, 0.1940, 0.2330,  ..., 0.1676, 0.1291, 0.0283],
         [0.1639, 0.2923, 0.2584,  ..., 0.3728, 0.2019, 0.5539],
         [0.1786, 0.2761, 0.2126,  ..., 0.1148, 0.2784, 0.3895]],
        [[0.2673, 0.2176, 0.2431,  ..., 0.2310, 0.2485, 0.2459],
         [0.3218, 0.3995, 0.2706,  ..., 0.3070, 0.3816, 0.3223],
         [0.2054, 0.1948, 0.2431,  ..., 0.2310, 0.2102, 0.2190],
         [0.2054, 0.1881, 0.2431,  ..., 0.2310, 0.1598, 0.2128]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 420:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1213, 0.1689, 0.1425,  ..., 0.1147, 0.1878, 0.1532],
         [0.1213, 0.1689, 0.1425,  ..., 0.1147, 0.1878, 0.1532],
         [0.1213, 0.1689, 0.1425,  ..., 0.1147, 0.1878, 0.1532],
         [0.6360, 0.4934, 0.5725,  ..., 0.6558, 0.4365, 0.5405]],
        [[0.2789, 0.2496, 0.2500,  ..., 0.2500, 0.2478, 0.2500],
         [0.2576, 0.2513, 0.2500,  ..., 0.2500, 0.2566, 0.2500],
         [0.2317, 0.2496, 0.2500,  ..., 0.2500, 0.2478, 0.2500],
         [0.2317, 0.2496, 0.2500,  ..., 0.2500, 0.2478, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:08:41,956 [Process: 0] Synchronize training processes
2024-08-16 13:08:41,957 [Process: 0] Evaluating...
2024-08-16 13:08:41,958 [Process: 0] EPOCH 421:
2024-08-16 13:08:41,960 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1663, 0.1704, 0.1751,  ..., 0.1400, 0.2063, 0.3277],
         [0.1663, 0.1704, 0.1751,  ..., 0.1400, 0.1989, 0.1424],
         [0.1663, 0.1725, 0.1751,  ..., 0.1400, 0.2202, 0.1424],
         [0.5010, 0.4866, 0.4747,  ..., 0.5801, 0.3746, 0.3875]],
        [[0.1833, 0.2304, 0.2500,  ..., 0.2597, 0.2920, 0.5230],
         [0.2635, 0.3491, 0.2500,  ..., 0.2085, 0.4812, 0.2651],
         [0.4457, 0.2102, 0.2500,  ..., 0.4240, 0.1268, 0.1183],
         [0.1075, 0.2102, 0.2500,  ..., 0.1078, 0.0999, 0.0937]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 421:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1539, 0.1612, 0.1386,  ..., 0.1685, 0.1526, 0.1476],
         [0.1726, 0.1651, 0.1413,  ..., 0.1685, 0.1526, 0.1476],
         [0.1539, 0.1612, 0.1386,  ..., 0.1685, 0.1526, 0.1476],
         [0.5197, 0.5126, 0.5816,  ..., 0.4946, 0.5421, 0.5573]],
        [[0.2500, 0.2500, 0.2806,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2398,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2398,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2398,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:08:43,857 [Process: 0] Synchronize training processes
2024-08-16 13:08:43,857 [Process: 0] Evaluating...
2024-08-16 13:08:43,859 [Process: 0] EPOCH 422:
2024-08-16 13:08:43,861 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2027, 0.2671, 0.2046,  ..., 0.1109, 0.1629, 0.3493],
         [0.2027, 0.1788, 0.2046,  ..., 0.1109, 0.0909, 0.1970],
         [0.2027, 0.1788, 0.2046,  ..., 0.1109, 0.0909, 0.1970],
         [0.3919, 0.3754, 0.3863,  ..., 0.6672, 0.6554, 0.2566]],
        [[0.2695, 0.1971, 0.4318,  ..., 0.2005, 0.3921, 0.2218],
         [0.2768, 0.1536, 0.2817,  ..., 0.1973, 0.3179, 0.1689],
         [0.2372, 0.3984, 0.2048,  ..., 0.4048, 0.1753, 0.4674],
         [0.2164, 0.2508, 0.0817,  ..., 0.1973, 0.1147, 0.1419]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 422:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1442, 0.1662, 0.1647,  ..., 0.1414, 0.1375, 0.1306],
         [0.1442, 0.1745, 0.1647,  ..., 0.1414, 0.1375, 0.1306],
         [0.1442, 0.1662, 0.1647,  ..., 0.1414, 0.1375, 0.1306],
         [0.5674, 0.4932, 0.5060,  ..., 0.5758, 0.5876, 0.6083]],
        [[0.2500, 0.2464, 0.2561,  ..., 0.2500, 0.2954, 0.2496],
         [0.2500, 0.2609, 0.2599,  ..., 0.2500, 0.2412, 0.2512],
         [0.2500, 0.2464, 0.2420,  ..., 0.2500, 0.2317, 0.2496],
         [0.2500, 0.2464, 0.2420,  ..., 0.2500, 0.2317, 0.2496]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:08:45,772 [Process: 0] Synchronize training processes
2024-08-16 13:08:45,772 [Process: 0] Evaluating...
2024-08-16 13:08:45,774 [Process: 0] EPOCH 423:
2024-08-16 13:08:45,776 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3027, 0.1955, 0.1764,  ..., 0.1190, 0.1627, 0.1174],
         [0.1983, 0.1955, 0.1764,  ..., 0.1190, 0.1627, 0.1014],
         [0.2086, 0.2205, 0.1764,  ..., 0.1190, 0.1627, 0.7079],
         [0.2903, 0.3885, 0.4709,  ..., 0.6431, 0.5119, 0.0734]],
        [[0.3528, 0.3122, 0.2259,  ..., 0.3414, 0.2384, 0.3041],
         [0.3278, 0.3238, 0.3224,  ..., 0.3157, 0.2848, 0.3313],
         [0.1600, 0.1820, 0.2259,  ..., 0.1806, 0.2384, 0.1823],
         [0.1594, 0.1820, 0.2259,  ..., 0.1623, 0.2384, 0.1823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 423:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1237, 0.1055, 0.1276,  ..., 0.1327, 0.1694, 0.1606],
         [0.1237, 0.1055, 0.1276,  ..., 0.1327, 0.1694, 0.1606],
         [0.1237, 0.1055, 0.1276,  ..., 0.1327, 0.1694, 0.1606],
         [0.6290, 0.6836, 0.6173,  ..., 0.6019, 0.4918, 0.5181]],
        [[0.2500, 0.2472, 0.2500,  ..., 0.2479, 0.2500, 0.2467],
         [0.2500, 0.2585, 0.2500,  ..., 0.2562, 0.2500, 0.2599],
         [0.2500, 0.2472, 0.2500,  ..., 0.2479, 0.2500, 0.2467],
         [0.2500, 0.2472, 0.2500,  ..., 0.2479, 0.2500, 0.2467]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:08:47,671 [Process: 0] Synchronize training processes
2024-08-16 13:08:47,671 [Process: 0] Evaluating...
2024-08-16 13:08:47,673 [Process: 0] EPOCH 424:
2024-08-16 13:08:47,675 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1773, 0.1950, 0.2500,  ..., 0.1644, 0.2123, 0.7467],
         [0.1794, 0.1950, 0.2500,  ..., 0.1644, 0.2123, 0.0323],
         [0.1773, 0.2176, 0.2500,  ..., 0.1644, 0.2761, 0.1749],
         [0.4659, 0.3923, 0.2500,  ..., 0.5067, 0.2992, 0.0461]],
        [[0.1833, 0.1830, 0.2278,  ..., 0.3288, 0.2204, 0.2460],
         [0.1833, 0.3504, 0.2432,  ..., 0.3776, 0.2204, 0.2460],
         [0.4501, 0.2837, 0.3012,  ..., 0.1614, 0.3387, 0.2621],
         [0.1833, 0.1830, 0.2278,  ..., 0.1322, 0.2204, 0.2460]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 424:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1412, 0.1402, 0.1548,  ..., 0.1421, 0.1595, 0.1596],
         [0.1412, 0.1402, 0.1548,  ..., 0.1421, 0.1595, 0.1596],
         [0.1412, 0.1402, 0.1548,  ..., 0.1421, 0.1595, 0.1596],
         [0.5763, 0.5793, 0.5356,  ..., 0.5737, 0.5214, 0.5212]],
        [[0.2500, 0.2486, 0.2579,  ..., 0.2460, 0.2489, 0.2500],
         [0.2500, 0.2541, 0.2600,  ..., 0.2619, 0.2534, 0.2500],
         [0.2500, 0.2486, 0.2410,  ..., 0.2460, 0.2489, 0.2500],
         [0.2500, 0.2486, 0.2410,  ..., 0.2460, 0.2489, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:08:49,580 [Process: 0] Synchronize training processes
2024-08-16 13:08:49,580 [Process: 0] Evaluating...
2024-08-16 13:08:49,582 [Process: 0] EPOCH 425:
2024-08-16 13:08:49,584 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1499, 0.1111, 0.1700,  ..., 0.2717, 0.4361, 0.2739],
         [0.1499, 0.1111, 0.1700,  ..., 0.2327, 0.1899, 0.2420],
         [0.1499, 0.1604, 0.1700,  ..., 0.2327, 0.1846, 0.2420],
         [0.5503, 0.6175, 0.4900,  ..., 0.2629, 0.1894, 0.2420]],
        [[0.2995, 0.5160, 0.3233,  ..., 0.3869, 0.3181, 0.4535],
         [0.3439, 0.2669, 0.2884,  ..., 0.3149, 0.3471, 0.3023],
         [0.1783, 0.1159, 0.2575,  ..., 0.1762, 0.1674, 0.1221],
         [0.1783, 0.1011, 0.1309,  ..., 0.1219, 0.1674, 0.1221]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 425:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1800, 0.1364, 0.1400,  ..., 0.1490, 0.1561, 0.1259],
         [0.1987, 0.1364, 0.1400,  ..., 0.1490, 0.1561, 0.1259],
         [0.1800, 0.1364, 0.1400,  ..., 0.1490, 0.1561, 0.1259],
         [0.4412, 0.5908, 0.5800,  ..., 0.5529, 0.5316, 0.6223]],
        [[0.2500, 0.2495, 0.2500,  ..., 0.2454, 0.2484, 0.2487],
         [0.2500, 0.2516, 0.2500,  ..., 0.2637, 0.2548, 0.2538],
         [0.2500, 0.2495, 0.2500,  ..., 0.2454, 0.2484, 0.2487],
         [0.2500, 0.2495, 0.2500,  ..., 0.2454, 0.2484, 0.2487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:08:51,479 [Process: 0] Synchronize training processes
2024-08-16 13:08:51,479 [Process: 0] Evaluating...
2024-08-16 13:08:51,481 [Process: 0] EPOCH 426:
2024-08-16 13:08:51,483 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1614, 0.1742, 0.2465,  ..., 0.1702, 0.1002, 0.1980],
         [0.1601, 0.1742, 0.1062,  ..., 0.1702, 0.1002, 0.1548],
         [0.2291, 0.2048, 0.4414,  ..., 0.2659, 0.1605, 0.1548],
         [0.4495, 0.4468, 0.2059,  ..., 0.3938, 0.6390, 0.4924]],
        [[0.2459, 0.1230, 0.3718,  ..., 0.2420, 0.1259, 0.3319],
         [0.2622, 0.6299, 0.2390,  ..., 0.2740, 0.2862, 0.2561],
         [0.2459, 0.1518, 0.2930,  ..., 0.2420, 0.5692, 0.2060],
         [0.2459, 0.0953, 0.0962,  ..., 0.2420, 0.0188, 0.2060]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 426:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1651, 0.1514, 0.1684,  ..., 0.1498, 0.1388, 0.1590],
         [0.1651, 0.1514, 0.1684,  ..., 0.1508, 0.1388, 0.1590],
         [0.1651, 0.1514, 0.1684,  ..., 0.1498, 0.1388, 0.1590],
         [0.5047, 0.5457, 0.4948,  ..., 0.5497, 0.5835, 0.5229]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:08:53,368 [Process: 0] Synchronize training processes
2024-08-16 13:08:53,368 [Process: 0] Evaluating...
2024-08-16 13:08:53,370 [Process: 0] EPOCH 427:
2024-08-16 13:08:53,372 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1578, 0.1892, 0.1118,  ..., 0.1621, 0.1623, 0.0599],
         [0.1792, 0.1892, 0.1118,  ..., 0.1621, 0.1623, 0.0599],
         [0.2749, 0.2892, 0.1526,  ..., 0.1621, 0.2495, 0.0599],
         [0.3881, 0.3323, 0.6239,  ..., 0.5137, 0.4260, 0.8204]],
        [[0.4795, 0.4922, 0.3221,  ..., 0.4705, 0.2234, 0.2500],
         [0.2628, 0.2595, 0.2951,  ..., 0.3036, 0.3386, 0.2500],
         [0.1288, 0.1242, 0.2175,  ..., 0.1130, 0.2935, 0.2500],
         [0.1288, 0.1242, 0.1653,  ..., 0.1130, 0.1444, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 427:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1546, 0.1596, 0.1068,  ..., 0.1654, 0.1437, 0.1608],
         [0.1563, 0.1596, 0.1068,  ..., 0.1654, 0.1437, 0.1608],
         [0.1546, 0.1596, 0.1068,  ..., 0.1654, 0.1437, 0.1608],
         [0.5346, 0.5213, 0.6796,  ..., 0.5039, 0.5689, 0.5175]],
        [[0.2477, 0.2500, 0.2462,  ..., 0.2490, 0.2500, 0.2500],
         [0.2570, 0.2500, 0.2615,  ..., 0.2531, 0.2501, 0.2500],
         [0.2477, 0.2500, 0.2462,  ..., 0.2490, 0.2500, 0.2500],
         [0.2477, 0.2500, 0.2462,  ..., 0.2490, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1352, 0.1827, 0.1514,  ..., 0.1945, 0.2379, 0.1955],
         [0.1352, 0.1827, 0.1514,  ..., 0.1945, 0.2139, 0.1955],
         [0.1352, 0.1827, 0.1514,  ..., 0.1945, 0.2139, 0.1955],
         [0.5944, 0.4520, 0.5457,  ..., 0.4164, 0.3344, 0.4134]],
        [[0.3493, 0.2008, 0.3088,  ..., 0.2808, 0.2347, 0.2844],
         [0.4117, 0.3913, 0.1999,  ..., 0.3002, 0.2557, 0.4556],
         [0.1455, 0.3099, 0.2914,  ..., 0.2801, 0.2749, 0.1819],
         [0.0935, 0.0980, 0.1999,  ..., 0.1390, 0.2347, 0.0782]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:08:55,264 [Process: 0] Synchronize training processes
2024-08-16 13:08:55,264 [Process: 0] Evaluating...
2024-08-16 13:08:55,266 [Process: 0] EPOCH 428:
2024-08-16 13:08:55,268 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 428:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1556, 0.1629, 0.1499,  ..., 0.1208, 0.1738, 0.1606],
         [0.1556, 0.1708, 0.1499,  ..., 0.1208, 0.1761, 0.1606],
         [0.1556, 0.1629, 0.1499,  ..., 0.1208, 0.1738, 0.1606],
         [0.5333, 0.5034, 0.5503,  ..., 0.6376, 0.4763, 0.5182]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3375, 0.4047, 0.3508,  ..., 0.1339, 0.6435, 0.1812],
         [0.2259, 0.3122, 0.2369,  ..., 0.1827, 0.1111, 0.1558],
         [0.1022, 0.1397, 0.2061,  ..., 0.1339, 0.0881, 0.1493],
         [0.3345, 0.1434, 0.2061,  ..., 0.5495, 0.1573, 0.5137]],
        [[0.2500, 0.2500, 0.4207,  ..., 0.1442, 0.1177, 0.0647],
         [0.2500, 0.2500, 0.1918,  ..., 0.0886, 0.1334, 0.2227],
         [0.2500, 0.2500, 0.1958,  ..., 0.6786, 0.6647, 0.6478],
         [0.2500, 0.2500, 0.1918,  ..., 0.0886, 0.0842, 0.0647]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 429:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:08:57,154 [Process: 0] Synchronize training processes
2024-08-16 13:08:57,154 [Process: 0] Evaluating...
2024-08-16 13:08:57,156 [Process: 0] EPOCH 429:
2024-08-16 13:08:57,158 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1963, 0.1438, 0.1132,  ..., 0.1359, 0.1553, 0.1344],
         [0.1963, 0.1438, 0.1132,  ..., 0.1359, 0.1553, 0.1344],
         [0.1963, 0.1438, 0.1132,  ..., 0.1359, 0.1553, 0.1344],
         [0.4111, 0.5687, 0.6603,  ..., 0.5924, 0.5342, 0.5967]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2482, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2555, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2482, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2482, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1964, 0.1395, 0.1800,  ..., 0.1182, 0.1225, 0.1944],
         [0.1964, 0.1395, 0.1800,  ..., 0.1182, 0.1225, 0.1944],
         [0.1964, 0.1395, 0.1800,  ..., 0.1182, 0.1225, 0.1944],
         [0.4108, 0.5815, 0.4599,  ..., 0.6453, 0.6324, 0.4167]],
        [[0.1776, 0.5019, 0.3003,  ..., 0.4902, 0.3110, 0.3030],
         [0.2569, 0.2758, 0.3002,  ..., 0.1908, 0.2626, 0.1969],
         [0.4593, 0.1446, 0.2458,  ..., 0.2152, 0.3239, 0.4537],
         [0.1062, 0.0777, 0.1537,  ..., 0.1038, 0.1025, 0.0464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 430:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:08:59,044 [Process: 0] Synchronize training processes
2024-08-16 13:08:59,045 [Process: 0] Evaluating...
2024-08-16 13:08:59,047 [Process: 0] EPOCH 430:
2024-08-16 13:08:59,049 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1584, 0.1382, 0.1306,  ..., 0.1543, 0.1527, 0.1302],
         [0.1584, 0.1382, 0.1306,  ..., 0.1600, 0.1527, 0.1302],
         [0.1584, 0.1382, 0.1306,  ..., 0.1543, 0.1527, 0.1302],
         [0.5249, 0.5855, 0.6082,  ..., 0.5315, 0.5419, 0.6093]],
        [[0.2551, 0.2500, 0.2500,  ..., 0.2643, 0.2500, 0.2500],
         [0.2521, 0.2500, 0.2500,  ..., 0.2565, 0.2500, 0.2500],
         [0.2464, 0.2500, 0.2500,  ..., 0.2396, 0.2500, 0.2500],
         [0.2464, 0.2500, 0.2500,  ..., 0.2396, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1931, 0.4337, 0.4191,  ..., 0.1296, 0.1174, 0.2891],
         [0.1931, 0.0901, 0.1693,  ..., 0.1296, 0.1174, 0.3056],
         [0.1931, 0.2805, 0.1322,  ..., 0.1296, 0.1174, 0.2187],
         [0.4207, 0.1957, 0.2794,  ..., 0.6112, 0.6479, 0.1866]],
        [[0.2629, 0.2744, 0.1355,  ..., 0.2273, 0.1612, 0.5618],
         [0.4499, 0.2674, 0.1546,  ..., 0.2077, 0.1612, 0.2303],
         [0.1759, 0.2717, 0.5744,  ..., 0.3573, 0.5163, 0.1040],
         [0.1113, 0.1864, 0.1355,  ..., 0.2077, 0.1612, 0.1040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 431:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:09:00,937 [Process: 0] Synchronize training processes
2024-08-16 13:09:00,937 [Process: 0] Evaluating...
2024-08-16 13:09:00,939 [Process: 0] EPOCH 431:
2024-08-16 13:09:00,941 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1029, 0.1681, 0.1703,  ..., 0.1282, 0.1342, 0.1602],
         [0.1029, 0.1715, 0.1703,  ..., 0.1282, 0.1427, 0.1602],
         [0.1029, 0.1681, 0.1703,  ..., 0.1282, 0.1342, 0.1602],
         [0.6912, 0.4923, 0.4891,  ..., 0.6155, 0.5889, 0.5194]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2490, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2530, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2490, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2490, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1491, 0.1901, 0.1850,  ..., 0.1733, 0.1565, 0.1778],
         [0.3278, 0.1901, 0.4198,  ..., 0.1733, 0.1565, 0.1778],
         [0.2170, 0.2511, 0.1815,  ..., 0.1733, 0.2051, 0.1778],
         [0.3061, 0.3687, 0.2137,  ..., 0.4802, 0.4819, 0.4666]],
        [[0.2738, 0.5559, 0.1509,  ..., 0.2500, 0.3324, 0.2068],
         [0.1029, 0.2277, 0.6542,  ..., 0.2500, 0.2573, 0.1907],
         [0.5273, 0.1240, 0.0975,  ..., 0.2500, 0.2051, 0.5195],
         [0.0960, 0.0923, 0.0975,  ..., 0.2500, 0.2051, 0.0829]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 432:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:09:02,857 [Process: 0] Synchronize training processes
2024-08-16 13:09:02,857 [Process: 0] Evaluating...
2024-08-16 13:09:02,859 [Process: 0] EPOCH 432:
2024-08-16 13:09:02,861 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1129, 0.1825, 0.1261,  ..., 0.1656, 0.1602, 0.1794],
         [0.1129, 0.1825, 0.1261,  ..., 0.1656, 0.1602, 0.1814],
         [0.1129, 0.1825, 0.1261,  ..., 0.1656, 0.1602, 0.1794],
         [0.6612, 0.4526, 0.6216,  ..., 0.5033, 0.5194, 0.4599]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2481, 0.2500, 0.2516],
         [0.2500, 0.2500, 0.2500,  ..., 0.2558, 0.2500, 0.2495],
         [0.2500, 0.2500, 0.2500,  ..., 0.2481, 0.2500, 0.2495],
         [0.2500, 0.2500, 0.2500,  ..., 0.2481, 0.2500, 0.2495]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1311, 0.1682, 0.1851,  ..., 0.2746, 0.3642, 0.2235],
         [0.1213, 0.2537, 0.1513,  ..., 0.2082, 0.1610, 0.2235],
         [0.2054, 0.2326, 0.3709,  ..., 0.1404, 0.1619, 0.2235],
         [0.5422, 0.3455, 0.2927,  ..., 0.3768, 0.3129, 0.3296]],
        [[0.2182, 0.1364, 0.1893,  ..., 0.3047, 0.2500, 0.2500],
         [0.2925, 0.6149, 0.2012,  ..., 0.3392, 0.2500, 0.2500],
         [0.3214, 0.1243, 0.4202,  ..., 0.2463, 0.2500, 0.2500],
         [0.1679, 0.1243, 0.1893,  ..., 0.1098, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 433:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:09:04,771 [Process: 0] Synchronize training processes
2024-08-16 13:09:04,771 [Process: 0] Evaluating...
2024-08-16 13:09:04,773 [Process: 0] EPOCH 433:
2024-08-16 13:09:04,775 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:09:06,667 [Process: 0] Synchronize training processes
2024-08-16 13:09:06,668 [Process: 0] Evaluating...
2024-08-16 13:09:06,669 [Process: 0] EPOCH 434:
2024-08-16 13:09:06,671 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1590, 0.1365, 0.1509,  ..., 0.1333, 0.1642, 0.1280],
         [0.1590, 0.1500, 0.1509,  ..., 0.1333, 0.1642, 0.1334],
         [0.1590, 0.1365, 0.1509,  ..., 0.1333, 0.1642, 0.1280],
         [0.5231, 0.5770, 0.5474,  ..., 0.6001, 0.5073, 0.6106]],
        [[0.2500, 0.2564, 0.2504,  ..., 0.2500, 0.2500, 0.2883],
         [0.2500, 0.2597, 0.2621,  ..., 0.2500, 0.2500, 0.2416],
         [0.2500, 0.2496, 0.2438,  ..., 0.2500, 0.2500, 0.2350],
         [0.2500, 0.2344, 0.2438,  ..., 0.2500, 0.2500, 0.2350]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1121, 0.1643, 0.2175,  ..., 0.2338, 0.2008, 0.1768],
         [0.1121, 0.1643, 0.2175,  ..., 0.2338, 0.2008, 0.1768],
         [0.1121, 0.1643, 0.2175,  ..., 0.2338, 0.2008, 0.1768],
         [0.6637, 0.5071, 0.3474,  ..., 0.2987, 0.3976, 0.4697]],
        [[0.3391, 0.2354, 0.2379,  ..., 0.2196, 0.2470, 0.3532],
         [0.2945, 0.2501, 0.3542,  ..., 0.3117, 0.2583, 0.3469],
         [0.2897, 0.3056, 0.2040,  ..., 0.3651, 0.3187, 0.1757],
         [0.0767, 0.2090, 0.2040,  ..., 0.1036, 0.1760, 0.1242]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 434:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:09:08,571 [Process: 0] Synchronize training processes
2024-08-16 13:09:08,571 [Process: 0] Evaluating...
2024-08-16 13:09:08,573 [Process: 0] EPOCH 435:
2024-08-16 13:09:08,575 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1649, 0.1894, 0.1320,  ..., 0.1045, 0.1617, 0.1469],
         [0.1649, 0.1894, 0.1396,  ..., 0.1045, 0.1727, 0.1518],
         [0.1649, 0.1894, 0.1320,  ..., 0.1045, 0.1617, 0.1469],
         [0.5053, 0.4318, 0.5965,  ..., 0.6865, 0.5039, 0.5545]],
        [[0.2477, 0.2406, 0.2477,  ..., 0.2489, 0.2500, 0.2478],
         [0.2568, 0.2643, 0.2568,  ..., 0.2533, 0.2500, 0.2565],
         [0.2477, 0.2546, 0.2477,  ..., 0.2489, 0.2500, 0.2478],
         [0.2477, 0.2406, 0.2477,  ..., 0.2489, 0.2500, 0.2478]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2108, 0.2196, 0.1475,  ..., 0.1434, 0.1677, 0.5512],
         [0.1736, 0.2196, 0.4137,  ..., 0.3692, 0.1677, 0.2978],
         [0.1736, 0.2196, 0.1226,  ..., 0.2693, 0.1677, 0.0600],
         [0.4421, 0.3412, 0.3163,  ..., 0.2182, 0.4970, 0.0910]],
        [[0.2043, 0.2242, 0.2500,  ..., 0.1695, 0.0834, 0.6508],
         [0.2656, 0.2242, 0.2500,  ..., 0.1695, 0.0834, 0.0910],
         [0.3834, 0.3274, 0.2500,  ..., 0.4916, 0.7497, 0.2037],
         [0.1467, 0.2242, 0.2500,  ..., 0.1695, 0.0834, 0.0545]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 435:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:09:10,469 [Process: 0] Synchronize training processes
2024-08-16 13:09:10,470 [Process: 0] Evaluating...
2024-08-16 13:09:10,472 [Process: 0] EPOCH 436:
2024-08-16 13:09:10,474 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1977, 0.1654, 0.1482,  ..., 0.1149, 0.1332, 0.1610],
         [0.1977, 0.1654, 0.1482,  ..., 0.1256, 0.1332, 0.1610],
         [0.1977, 0.1654, 0.1482,  ..., 0.1149, 0.1332, 0.1610],
         [0.4070, 0.5037, 0.5554,  ..., 0.6446, 0.6003, 0.5170]],
        [[0.2603, 0.2500, 0.2463,  ..., 0.2500, 0.2500, 0.2500],
         [0.2563, 0.2500, 0.2610,  ..., 0.2500, 0.2500, 0.2500],
         [0.2417, 0.2500, 0.2463,  ..., 0.2500, 0.2500, 0.2500],
         [0.2417, 0.2500, 0.2463,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1853, 0.1635, 0.1102,  ..., 0.1595, 0.1517, 0.0070],
         [0.1853, 0.1635, 0.1102,  ..., 0.1595, 0.1517, 0.0037],
         [0.1853, 0.1635, 0.1102,  ..., 0.1595, 0.1517, 0.9857],
         [0.4442, 0.5095, 0.6694,  ..., 0.5215, 0.5448, 0.0037]],
        [[0.3544, 0.3213, 0.3386,  ..., 0.2411, 0.2479, 0.3467],
         [0.3289, 0.2728, 0.2742,  ..., 0.3204, 0.3386, 0.2178],
         [0.1701, 0.2484, 0.1987,  ..., 0.2389, 0.2068, 0.2178],
         [0.1466, 0.1574, 0.1885,  ..., 0.1996, 0.2068, 0.2178]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 436:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1547, 0.1285, 0.1629,  ..., 0.1590, 0.1212, 0.1269],
         [0.1577, 0.1355, 0.1629,  ..., 0.1666, 0.1212, 0.1269],
         [0.1547, 0.1285, 0.1629,  ..., 0.1590, 0.1212, 0.1269],
         [0.5330, 0.6076, 0.5114,  ..., 0.5153, 0.6364, 0.6192]],
        [[0.2500, 0.2500, 0.2484,  ..., 0.2500, 0.2500, 0.2681],
         [0.2500, 0.2500, 0.2549,  ..., 0.2500, 0.2500, 0.2440],
         [0.2500, 0.2500, 0.2484,  ..., 0.2500, 0.2500, 0.2440],
         [0.2500, 0.2500, 0.2484,  ..., 0.2500, 0.2500, 0.2440]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:12,360 [Process: 0] Synchronize training processes
2024-08-16 13:09:12,360 [Process: 0] Evaluating...
2024-08-16 13:09:12,362 [Process: 0] EPOCH 437:
2024-08-16 13:09:12,364 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.9800e-01, 1.5450e-01, 1.7012e-01,  ..., 2.2230e-01,
          1.3557e-01, 4.3878e-04],
         [2.4848e-01, 1.5450e-01, 1.7208e-01,  ..., 2.0771e-01,
          1.3557e-01, 7.9367e-04],
         [1.9800e-01, 1.5450e-01, 1.7012e-01,  ..., 1.6788e-01,
          1.3557e-01, 9.9869e-01],
         [3.5551e-01, 5.3649e-01, 4.8768e-01,  ..., 4.0211e-01,
          5.9330e-01, 7.8449e-05]],
        [[2.5000e-01, 2.5351e-01, 3.0036e-01,  ..., 3.2732e-01,
          4.2010e-01, 2.3635e-01],
         [2.5000e-01, 3.0655e-01, 2.3321e-01,  ..., 3.2638e-01,
          2.2391e-01, 2.9096e-01],
         [2.5000e-01, 2.1997e-01, 2.3321e-01,  ..., 1.8377e-01,
          1.7799e-01, 2.3635e-01],
         [2.5000e-01, 2.1997e-01, 2.3321e-01,  ..., 1.6253e-01,
          1.7799e-01, 2.3635e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 437:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1352, 0.1544, 0.1372,  ..., 0.1647, 0.1388, 0.1345],
         [0.1352, 0.1544, 0.1372,  ..., 0.1647, 0.1388, 0.1398],
         [0.1352, 0.1544, 0.1372,  ..., 0.1647, 0.1388, 0.1345],
         [0.5945, 0.5369, 0.5884,  ..., 0.5058, 0.5837, 0.5912]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:14,278 [Process: 0] Synchronize training processes
2024-08-16 13:09:14,279 [Process: 0] Evaluating...
2024-08-16 13:09:14,280 [Process: 0] EPOCH 438:
2024-08-16 13:09:14,282 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2309, 0.2205, 0.2500,  ..., 0.2230, 0.0661, 0.0238],
         [0.2791, 0.3164, 0.2500,  ..., 0.3471, 0.0661, 0.0480],
         [0.2309, 0.2205, 0.2500,  ..., 0.2548, 0.1733, 0.0372],
         [0.2591, 0.2425, 0.2500,  ..., 0.1750, 0.6945, 0.8910]],
        [[0.2766, 0.2240, 0.3434,  ..., 0.3383, 0.3116, 0.3995],
         [0.3103, 0.3279, 0.3349,  ..., 0.2645, 0.2916, 0.2933],
         [0.2065, 0.2240, 0.1609,  ..., 0.1986, 0.1984, 0.1536],
         [0.2065, 0.2240, 0.1609,  ..., 0.1986, 0.1984, 0.1536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 438:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1268, 0.1275, 0.1684,  ..., 0.1608, 0.1643, 0.1387],
         [0.1268, 0.1275, 0.1684,  ..., 0.1608, 0.1643, 0.1387],
         [0.1268, 0.1275, 0.1684,  ..., 0.1608, 0.1643, 0.1387],
         [0.6195, 0.6174, 0.4949,  ..., 0.5175, 0.5072, 0.5839]],
        [[0.2479, 0.2520, 0.2590,  ..., 0.2500, 0.2500, 0.2500],
         [0.2564, 0.2499, 0.2471,  ..., 0.2500, 0.2500, 0.2500],
         [0.2479, 0.2567, 0.2469,  ..., 0.2500, 0.2500, 0.2500],
         [0.2479, 0.2414, 0.2469,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:16,232 [Process: 0] Synchronize training processes
2024-08-16 13:09:16,232 [Process: 0] Evaluating...
2024-08-16 13:09:16,234 [Process: 0] EPOCH 439:
2024-08-16 13:09:16,236 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1392, 0.3026, 0.2276,  ..., 0.4468, 0.3930, 0.2525],
         [0.1392, 0.2967, 0.2281,  ..., 0.1175, 0.2094, 0.1987],
         [0.1612, 0.2057, 0.4740,  ..., 0.3237, 0.2145, 0.3501],
         [0.5604, 0.1949, 0.0703,  ..., 0.1120, 0.1830, 0.1987]],
        [[0.0760, 0.2500, 0.1784,  ..., 0.1764, 0.2500, 0.1746],
         [0.0760, 0.2500, 0.1784,  ..., 0.1764, 0.2500, 0.4762],
         [0.0760, 0.2500, 0.1784,  ..., 0.1764, 0.2500, 0.1746],
         [0.7721, 0.2500, 0.4647,  ..., 0.4709, 0.2500, 0.1746]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 439:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1746, 0.1409, 0.1063,  ..., 0.1623, 0.1544, 0.1592],
         [0.1746, 0.1409, 0.1063,  ..., 0.1623, 0.1544, 0.1592],
         [0.1746, 0.1409, 0.1063,  ..., 0.1623, 0.1544, 0.1592],
         [0.4762, 0.5772, 0.6811,  ..., 0.5130, 0.5367, 0.5223]],
        [[0.2500, 0.2876, 0.2500,  ..., 0.2546, 0.2500, 0.2759],
         [0.2500, 0.2414, 0.2500,  ..., 0.2485, 0.2500, 0.2463],
         [0.2500, 0.2355, 0.2500,  ..., 0.2485, 0.2500, 0.2389],
         [0.2500, 0.2355, 0.2500,  ..., 0.2485, 0.2500, 0.2389]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:18,132 [Process: 0] Synchronize training processes
2024-08-16 13:09:18,133 [Process: 0] Evaluating...
2024-08-16 13:09:18,134 [Process: 0] EPOCH 440:
2024-08-16 13:09:18,136 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1545, 0.1257, 0.1923,  ..., 0.1430, 0.1760, 0.1993],
         [0.1545, 0.4740, 0.1923,  ..., 0.2973, 0.1760, 0.4021],
         [0.1545, 0.1246, 0.1923,  ..., 0.1430, 0.1760, 0.1993],
         [0.5366, 0.2757, 0.4231,  ..., 0.4168, 0.4719, 0.1993]],
        [[0.2931, 0.2397, 0.2480,  ..., 0.2741, 0.4599, 0.5425],
         [0.2356, 0.2397, 0.2480,  ..., 0.2420, 0.1261, 0.1466],
         [0.2356, 0.2810, 0.2559,  ..., 0.2420, 0.2879, 0.1643],
         [0.2356, 0.2397, 0.2480,  ..., 0.2420, 0.1261, 0.1466]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 440:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1266, 0.1268, 0.1373,  ..., 0.1541, 0.1229, 0.1465],
         [0.1266, 0.1268, 0.1373,  ..., 0.1570, 0.1229, 0.1465],
         [0.1266, 0.1268, 0.1373,  ..., 0.1541, 0.1229, 0.1465],
         [0.6203, 0.6197, 0.5881,  ..., 0.5349, 0.6314, 0.5605]],
        [[0.2469, 0.2500, 0.2488,  ..., 0.2500, 0.2483, 0.2500],
         [0.2593, 0.2500, 0.2535,  ..., 0.2500, 0.2550, 0.2500],
         [0.2469, 0.2500, 0.2488,  ..., 0.2500, 0.2483, 0.2500],
         [0.2469, 0.2500, 0.2488,  ..., 0.2500, 0.2483, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:20,032 [Process: 0] Synchronize training processes
2024-08-16 13:09:20,032 [Process: 0] Evaluating...
2024-08-16 13:09:20,034 [Process: 0] EPOCH 441:
2024-08-16 13:09:20,036 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1303, 0.1447, 0.1965,  ..., 0.1085, 0.1327, 0.1740],
         [0.1303, 0.1447, 0.1965,  ..., 0.1196, 0.1648, 0.2569],
         [0.2285, 0.1447, 0.1965,  ..., 0.2092, 0.2887, 0.1578],
         [0.5108, 0.5659, 0.4104,  ..., 0.5626, 0.4139, 0.4113]],
        [[0.2592, 0.3598, 0.5289,  ..., 0.2520, 0.2681, 0.3051],
         [0.2469, 0.2945, 0.1665,  ..., 0.4737, 0.4184, 0.2733],
         [0.2469, 0.2378, 0.1652,  ..., 0.1371, 0.1568, 0.2108],
         [0.2469, 0.1080, 0.1395,  ..., 0.1371, 0.1568, 0.2108]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 441:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1718, 0.1714, 0.1550,  ..., 0.1261, 0.1951, 0.1567],
         [0.1718, 0.1874, 0.1550,  ..., 0.1261, 0.1951, 0.1593],
         [0.1718, 0.1714, 0.1550,  ..., 0.1261, 0.1951, 0.1567],
         [0.4845, 0.4698, 0.5349,  ..., 0.6218, 0.4147, 0.5273]],
        [[0.2500, 0.2500, 0.2449,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2529,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2573,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2449,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:21,929 [Process: 0] Synchronize training processes
2024-08-16 13:09:21,929 [Process: 0] Evaluating...
2024-08-16 13:09:21,931 [Process: 0] EPOCH 442:
2024-08-16 13:09:21,933 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2984, 0.1990, 0.1685,  ..., 0.1415, 0.1180, 0.0978],
         [0.2925, 0.2320, 0.2501,  ..., 0.1731, 0.3201, 0.1036],
         [0.3018, 0.1990, 0.2973,  ..., 0.1921, 0.2304, 0.3128],
         [0.1072, 0.3701, 0.2842,  ..., 0.4932, 0.3315, 0.4859]],
        [[0.2500, 0.2460, 0.2500,  ..., 0.2500, 0.2500, 0.4846],
         [0.2500, 0.2322, 0.2500,  ..., 0.2500, 0.2500, 0.1718],
         [0.2500, 0.2322, 0.2500,  ..., 0.2500, 0.2500, 0.1718],
         [0.2500, 0.2896, 0.2500,  ..., 0.2500, 0.2500, 0.1718]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 442:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1443, 0.1629, 0.1818,  ..., 0.1322, 0.1623, 0.1725],
         [0.1443, 0.1629, 0.1818,  ..., 0.1322, 0.1623, 0.1725],
         [0.1443, 0.1629, 0.1818,  ..., 0.1322, 0.1623, 0.1725],
         [0.5671, 0.5113, 0.4546,  ..., 0.6035, 0.5130, 0.4824]],
        [[0.2500, 0.2500, 0.2475,  ..., 0.2499, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2576,  ..., 0.2504, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2475,  ..., 0.2499, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2475,  ..., 0.2499, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:23,841 [Process: 0] Synchronize training processes
2024-08-16 13:09:23,841 [Process: 0] Evaluating...
2024-08-16 13:09:23,843 [Process: 0] EPOCH 443:
2024-08-16 13:09:23,845 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2069, 0.2243, 0.2403,  ..., 0.1635, 0.2614, 0.1510],
         [0.2069, 0.2243, 0.1937,  ..., 0.1635, 0.1830, 0.1510],
         [0.2069, 0.2243, 0.1895,  ..., 0.1635, 0.2834, 0.1510],
         [0.3794, 0.3272, 0.3765,  ..., 0.5094, 0.2722, 0.5469]],
        [[0.1694, 0.3250, 0.2471,  ..., 0.1841, 0.2742, 0.2274],
         [0.3613, 0.1207, 0.4535,  ..., 0.4454, 0.4084, 0.4119],
         [0.3649, 0.4392, 0.2278,  ..., 0.1863, 0.1587, 0.2393],
         [0.1044, 0.1150, 0.0716,  ..., 0.1841, 0.1587, 0.1214]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 443:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1558, 0.1717, 0.1900,  ..., 0.1683, 0.1566, 0.1616],
         [0.1558, 0.1717, 0.1900,  ..., 0.1695, 0.1566, 0.1616],
         [0.1558, 0.1717, 0.1900,  ..., 0.1683, 0.1566, 0.1616],
         [0.5327, 0.4850, 0.4301,  ..., 0.4939, 0.5301, 0.5152]],
        [[0.2482, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2485],
         [0.2555, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2546],
         [0.2482, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2485],
         [0.2482, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2485]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:25,735 [Process: 0] Synchronize training processes
2024-08-16 13:09:25,735 [Process: 0] Evaluating...
2024-08-16 13:09:25,737 [Process: 0] EPOCH 444:
2024-08-16 13:09:25,740 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1812, 0.5695, 0.5030,  ..., 0.1150, 0.0852, 0.1660],
         [0.2110, 0.1437, 0.0905,  ..., 0.1150, 0.0852, 0.1660],
         [0.1812, 0.1336, 0.0905,  ..., 0.1150, 0.0852, 0.1660],
         [0.4265, 0.1532, 0.3159,  ..., 0.6551, 0.7443, 0.5020]],
        [[0.2500, 0.2127, 0.2404,  ..., 0.2365, 0.2301, 0.2371],
         [0.2500, 0.4922, 0.1897,  ..., 0.2906, 0.2301, 0.5176],
         [0.2500, 0.1950, 0.4162,  ..., 0.2365, 0.3097, 0.1227],
         [0.2500, 0.1001, 0.1538,  ..., 0.2365, 0.2301, 0.1227]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 444:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1281, 0.1438, 0.1876,  ..., 0.1335, 0.1360, 0.1880],
         [0.1281, 0.1438, 0.1876,  ..., 0.1335, 0.1360, 0.1880],
         [0.1281, 0.1438, 0.1876,  ..., 0.1335, 0.1360, 0.1880],
         [0.6157, 0.5687, 0.4373,  ..., 0.5996, 0.5921, 0.4361]],
        [[0.2527, 0.2493, 0.2500,  ..., 0.2605, 0.2500, 0.2456],
         [0.2529, 0.2717, 0.2500,  ..., 0.2637, 0.2500, 0.2479],
         [0.2472, 0.2436, 0.2500,  ..., 0.2379, 0.2500, 0.2608],
         [0.2472, 0.2355, 0.2500,  ..., 0.2379, 0.2500, 0.2456]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:27,629 [Process: 0] Synchronize training processes
2024-08-16 13:09:27,630 [Process: 0] Evaluating...
2024-08-16 13:09:27,631 [Process: 0] EPOCH 445:
2024-08-16 13:09:27,633 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2483, 0.2081, 0.1465,  ..., 0.1179, 0.1170, 0.1536],
         [0.2483, 0.2081, 0.1465,  ..., 0.1179, 0.1170, 0.1536],
         [0.2483, 0.2081, 0.1465,  ..., 0.1179, 0.1170, 0.1536],
         [0.2550, 0.3757, 0.5606,  ..., 0.6462, 0.6491, 0.5391]],
        [[0.2335, 0.2735, 0.2587,  ..., 0.3324, 0.2710, 0.2164],
         [0.4570, 0.1894, 0.2480,  ..., 0.3044, 0.2233, 0.2191],
         [0.1660, 0.3477, 0.3390,  ..., 0.1816, 0.3637, 0.5206],
         [0.1435, 0.1894, 0.1543,  ..., 0.1816, 0.1420, 0.0439]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 445:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1337, 0.0984, 0.1366,  ..., 0.1349, 0.1632, 0.1328],
         [0.1337, 0.1033, 0.1375,  ..., 0.1349, 0.1763, 0.1328],
         [0.1337, 0.0984, 0.1366,  ..., 0.1349, 0.1632, 0.1328],
         [0.5988, 0.6998, 0.5893,  ..., 0.5954, 0.4973, 0.6015]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2505, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2498, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2498, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2498, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:09:29,521 [Process: 0] Synchronize training processes
2024-08-16 13:09:29,522 [Process: 0] Evaluating...
2024-08-16 13:09:29,524 [Process: 0] EPOCH 446:
2024-08-16 13:09:29,527 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1680, 0.1950, 0.2452,  ..., 0.2500, 0.1888, 0.2274],
         [0.1680, 0.2404, 0.2645,  ..., 0.2500, 0.3162, 0.2206],
         [0.1680, 0.1950, 0.2452,  ..., 0.2500, 0.1888, 0.2206],
         [0.4961, 0.3695, 0.2452,  ..., 0.2500, 0.3062, 0.3315]],
        [[0.3081, 0.4093, 0.2010,  ..., 0.3457, 0.2439, 0.3803],
         [0.3606, 0.2557, 0.4503,  ..., 0.2300, 0.2439, 0.2253],
         [0.1834, 0.1675, 0.1744,  ..., 0.2605, 0.2684, 0.1972],
         [0.1478, 0.1675, 0.1744,  ..., 0.1638, 0.2439, 0.1972]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 446:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1556, 0.1406, 0.1714,  ..., 0.1616, 0.1245, 0.1427],
         [0.1556, 0.1406, 0.1714,  ..., 0.1616, 0.1300, 0.1427],
         [0.1556, 0.1406, 0.1714,  ..., 0.1616, 0.1245, 0.1427],
         [0.5332, 0.5782, 0.4857,  ..., 0.5153, 0.6211, 0.5718]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2510, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1381, 0.1121, 0.1622,  ..., 0.2089, 0.2186, 0.1608],
         [0.1381, 0.1121, 0.1622,  ..., 0.2089, 0.2186, 0.1608],
         [0.1381, 0.1121, 0.1622,  ..., 0.2089, 0.3303, 0.1608],
         [0.5856, 0.6636, 0.5135,  ..., 0.3733, 0.2325, 0.5176]],
        [[0.3929, 0.3122, 0.2283,  ..., 0.2223, 0.3274, 0.1974],
         [0.1879, 0.4556, 0.3963,  ..., 0.2971, 0.2242, 0.4851],
         [0.2588, 0.1409, 0.2691,  ..., 0.2731, 0.2242, 0.1824],
         [0.1604, 0.0913, 0.1064,  ..., 0.2076, 0.2242, 0.1352]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:31,415 [Process: 0] Synchronize training processes
2024-08-16 13:09:31,416 [Process: 0] Evaluating...
2024-08-16 13:09:31,417 [Process: 0] EPOCH 447:
2024-08-16 13:09:31,419 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 447:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1253, 0.1562, 0.1474,  ..., 0.1714, 0.1576, 0.1493],
         [0.1253, 0.1562, 0.1474,  ..., 0.1714, 0.1576, 0.1493],
         [0.1253, 0.1562, 0.1474,  ..., 0.1714, 0.1576, 0.1493],
         [0.6241, 0.5313, 0.5579,  ..., 0.4857, 0.5273, 0.5520]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2499, 0.2498],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2504, 0.2505],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2499, 0.2498],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2499, 0.2498]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1505, 0.1773, 0.3294,  ..., 0.2140, 0.2069, 0.1825],
         [0.2497, 0.1623, 0.2634,  ..., 0.2140, 0.2069, 0.1327],
         [0.1505, 0.1312, 0.1538,  ..., 0.2140, 0.2069, 0.1327],
         [0.4493, 0.5292, 0.2534,  ..., 0.3581, 0.3792, 0.5522]],
        [[0.2500, 0.1971, 0.1685,  ..., 0.2500, 0.2271, 0.3001],
         [0.2500, 0.4776, 0.5210,  ..., 0.2500, 0.3188, 0.2497],
         [0.2500, 0.2168, 0.2149,  ..., 0.2500, 0.2271, 0.3432],
         [0.2500, 0.1084, 0.0957,  ..., 0.2500, 0.2271, 0.1071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 448:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:09:33,318 [Process: 0] Synchronize training processes
2024-08-16 13:09:33,319 [Process: 0] Evaluating...
2024-08-16 13:09:33,321 [Process: 0] EPOCH 448:
2024-08-16 13:09:33,322 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1221, 0.1177, 0.1506,  ..., 0.1546, 0.1492, 0.1452],
         [0.1221, 0.1177, 0.1506,  ..., 0.1593, 0.1492, 0.1452],
         [0.1221, 0.1177, 0.1506,  ..., 0.1546, 0.1492, 0.1452],
         [0.6338, 0.6470, 0.5483,  ..., 0.5316, 0.5524, 0.5645]],
        [[0.2500, 0.2500, 0.2488,  ..., 0.2441, 0.2492, 0.2500],
         [0.2500, 0.2500, 0.2537,  ..., 0.2676, 0.2525, 0.2500],
         [0.2500, 0.2500, 0.2488,  ..., 0.2441, 0.2492, 0.2500],
         [0.2500, 0.2500, 0.2488,  ..., 0.2441, 0.2492, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1407, 0.2482, 0.2124,  ..., 0.3273, 0.1882, 0.4678],
         [0.1407, 0.1369, 0.1188,  ..., 0.2241, 0.1874, 0.1145],
         [0.1407, 0.3954, 0.1188,  ..., 0.1404, 0.3871, 0.0763],
         [0.5779, 0.2195, 0.5501,  ..., 0.3082, 0.2372, 0.3414]],
        [[0.2500, 0.1100, 0.1814,  ..., 0.1999, 0.2500, 0.2572],
         [0.2500, 0.1431, 0.4558,  ..., 0.1999, 0.2500, 0.2944],
         [0.2500, 0.6369, 0.1814,  ..., 0.4004, 0.2500, 0.2242],
         [0.2500, 0.1100, 0.1814,  ..., 0.1999, 0.2500, 0.2242]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 449:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:09:35,228 [Process: 0] Synchronize training processes
2024-08-16 13:09:35,228 [Process: 0] Evaluating...
2024-08-16 13:09:35,230 [Process: 0] EPOCH 449:
2024-08-16 13:09:35,232 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1083, 0.1270, 0.1742,  ..., 0.1577, 0.1334, 0.1528],
         [0.1083, 0.1270, 0.1742,  ..., 0.1577, 0.1334, 0.1645],
         [0.1083, 0.1270, 0.1742,  ..., 0.1577, 0.1334, 0.1528],
         [0.6751, 0.6190, 0.4773,  ..., 0.5268, 0.5999, 0.5299]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2496, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2512, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2496, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2496, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2051, 0.1588, 0.2063,  ..., 0.1742, 0.1701, 0.1632],
         [0.2051, 0.1588, 0.2063,  ..., 0.1742, 0.1701, 0.1632],
         [0.2051, 0.1588, 0.2063,  ..., 0.1742, 0.1701, 0.1632],
         [0.3848, 0.5235, 0.3810,  ..., 0.4773, 0.4896, 0.5105]],
        [[0.4104, 0.4569, 0.3529,  ..., 0.1961, 0.3090, 0.3034],
         [0.3117, 0.1675, 0.1864,  ..., 0.2643, 0.3065, 0.3672],
         [0.1844, 0.2301, 0.2743,  ..., 0.4307, 0.3183, 0.1972],
         [0.0934, 0.1456, 0.1864,  ..., 0.1089, 0.0662, 0.1322]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 450:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:09:37,120 [Process: 0] Synchronize training processes
2024-08-16 13:09:37,121 [Process: 0] Evaluating...
2024-08-16 13:09:37,123 [Process: 0] EPOCH 450:
2024-08-16 13:09:37,124 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1542, 0.1535, 0.1534,  ..., 0.1687, 0.1613, 0.1580],
         [0.1542, 0.1535, 0.1534,  ..., 0.1687, 0.1613, 0.1580],
         [0.1542, 0.1535, 0.1534,  ..., 0.1687, 0.1613, 0.1580],
         [0.5373, 0.5395, 0.5397,  ..., 0.4938, 0.5160, 0.5259]],
        [[0.2458, 0.2500, 0.2498,  ..., 0.2500, 0.2500, 0.2500],
         [0.2627, 0.2500, 0.2506,  ..., 0.2500, 0.2500, 0.2500],
         [0.2458, 0.2500, 0.2498,  ..., 0.2500, 0.2500, 0.2500],
         [0.2458, 0.2500, 0.2498,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1215, 0.1772, 0.1790,  ..., 0.1585, 0.1451, 0.1718],
         [0.2007, 0.2044, 0.1930,  ..., 0.1585, 0.1451, 0.1718],
         [0.1215, 0.1843, 0.1790,  ..., 0.1585, 0.1451, 0.1718],
         [0.5563, 0.4341, 0.4491,  ..., 0.5244, 0.5647, 0.4845]],
        [[0.2956, 0.2983, 0.2188,  ..., 0.3575, 0.5625, 0.2108],
         [0.2934, 0.3154, 0.2188,  ..., 0.2812, 0.2487, 0.2108],
         [0.2313, 0.1932, 0.3435,  ..., 0.1807, 0.0969, 0.3677],
         [0.1797, 0.1932, 0.2188,  ..., 0.1807, 0.0919, 0.2108]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 451:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:09:39,014 [Process: 0] Synchronize training processes
2024-08-16 13:09:39,015 [Process: 0] Evaluating...
2024-08-16 13:09:39,017 [Process: 0] EPOCH 451:
2024-08-16 13:09:39,019 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1534, 0.1350, 0.1465,  ..., 0.1472, 0.1395, 0.1753],
         [0.1534, 0.1405, 0.1465,  ..., 0.1472, 0.1395, 0.1753],
         [0.1534, 0.1350, 0.1465,  ..., 0.1472, 0.1395, 0.1753],
         [0.5397, 0.5894, 0.5606,  ..., 0.5585, 0.5814, 0.4742]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1568, 0.1430, 0.1776,  ..., 0.1587, 0.1569, 0.1694],
         [0.3153, 0.2759, 0.3093,  ..., 0.1587, 0.2011, 0.2023],
         [0.2388, 0.1430, 0.2090,  ..., 0.1587, 0.1569, 0.2224],
         [0.2890, 0.4380, 0.3041,  ..., 0.5238, 0.4850, 0.4059]],
        [[0.4012, 0.2379, 0.4055,  ..., 0.2425, 0.2451, 0.4756],
         [0.1996, 0.2340, 0.2327,  ..., 0.2956, 0.2418, 0.1748],
         [0.1996, 0.2941, 0.2092,  ..., 0.2846, 0.3196, 0.1748],
         [0.1996, 0.2340, 0.1526,  ..., 0.1773, 0.1936, 0.1748]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 452:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:09:40,907 [Process: 0] Synchronize training processes
2024-08-16 13:09:40,908 [Process: 0] Evaluating...
2024-08-16 13:09:40,910 [Process: 0] EPOCH 452:
2024-08-16 13:09:40,912 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1484, 0.1086, 0.1540,  ..., 0.1299, 0.1467, 0.1230],
         [0.1484, 0.1086, 0.1540,  ..., 0.1299, 0.1537, 0.1230],
         [0.1484, 0.1086, 0.1540,  ..., 0.1299, 0.1467, 0.1230],
         [0.5547, 0.6742, 0.5379,  ..., 0.6104, 0.5529, 0.6311]],
        [[0.2500, 0.2500, 0.2476,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2476,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2572,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2476,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4264, 0.2619, 0.2103,  ..., 0.0882, 0.1836, 0.1218],
         [0.3063, 0.2074, 0.2103,  ..., 0.0882, 0.2000, 0.0229],
         [0.1193, 0.1069, 0.2103,  ..., 0.0882, 0.1906, 0.0485],
         [0.1480, 0.4238, 0.3690,  ..., 0.7354, 0.4258, 0.8068]],
        [[0.2598, 0.2500, 0.1315,  ..., 0.2234, 0.1898, 0.4262],
         [0.2263, 0.2500, 0.3045,  ..., 0.3180, 0.1898, 0.1704],
         [0.2875, 0.2500, 0.4324,  ..., 0.3606, 0.4305, 0.2365],
         [0.2263, 0.2500, 0.1315,  ..., 0.0980, 0.1898, 0.1668]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 453:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:09:42,806 [Process: 0] Synchronize training processes
2024-08-16 13:09:42,807 [Process: 0] Evaluating...
2024-08-16 13:09:42,809 [Process: 0] EPOCH 453:
2024-08-16 13:09:42,811 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:09:44,705 [Process: 0] Synchronize training processes
2024-08-16 13:09:44,705 [Process: 0] Evaluating...
2024-08-16 13:09:44,707 [Process: 0] EPOCH 454:
2024-08-16 13:09:44,709 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1256, 0.1523, 0.1408,  ..., 0.1631, 0.1511, 0.1402],
         [0.1256, 0.1523, 0.1408,  ..., 0.1631, 0.1511, 0.1448],
         [0.1256, 0.1523, 0.1408,  ..., 0.1631, 0.1511, 0.1402],
         [0.6233, 0.5431, 0.5775,  ..., 0.5108, 0.5468, 0.5748]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2673, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2442, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2442, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2442, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1756, 0.1475, 0.1951,  ..., 0.1988, 0.3040, 0.1838],
         [0.1756, 0.1552, 0.2276,  ..., 0.2403, 0.1447, 0.1838],
         [0.1756, 0.1475, 0.1951,  ..., 0.1988, 0.2940, 0.1838],
         [0.4731, 0.5497, 0.3822,  ..., 0.3622, 0.2573, 0.4487]],
        [[0.3040, 0.2806, 0.2446,  ..., 0.2218, 0.3538, 0.3587],
         [0.2452, 0.2541, 0.2342,  ..., 0.2339, 0.2015, 0.2061],
         [0.2672, 0.2426, 0.3161,  ..., 0.3224, 0.2433, 0.2394],
         [0.1837, 0.2227, 0.2051,  ..., 0.2218, 0.2015, 0.1959]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 454:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
2024-08-16 13:09:46,626 [Process: 0] Synchronize training processes
2024-08-16 13:09:46,627 [Process: 0] Evaluating...
2024-08-16 13:09:46,629 [Process: 0] EPOCH 455:
2024-08-16 13:09:46,631 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1771, 0.1516, 0.1559,  ..., 0.1391, 0.1379, 0.1632],
         [0.1771, 0.1677, 0.1559,  ..., 0.1391, 0.1550, 0.1685],
         [0.1771, 0.1516, 0.1559,  ..., 0.1391, 0.1379, 0.1632],
         [0.4686, 0.5292, 0.5323,  ..., 0.5828, 0.5692, 0.5051]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1373, 0.1659, 0.1985,  ..., 0.2943, 0.2774, 0.4992],
         [0.3325, 0.1592, 0.1985,  ..., 0.3584, 0.1262, 0.2294],
         [0.1373, 0.1592, 0.1985,  ..., 0.0808, 0.1262, 0.1021],
         [0.3929, 0.5158, 0.4045,  ..., 0.2664, 0.4702, 0.1692]],
        [[0.2397, 0.2399, 0.2827,  ..., 0.2191, 0.1947, 0.2328],
         [0.2397, 0.2399, 0.2688,  ..., 0.2191, 0.1947, 0.2328],
         [0.2808, 0.2804, 0.2575,  ..., 0.3427, 0.4160, 0.3017],
         [0.2397, 0.2399, 0.1911,  ..., 0.2191, 0.1947, 0.2328]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 455:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-16 13:09:48,530 [Process: 0] Synchronize training processes
2024-08-16 13:09:48,530 [Process: 0] Evaluating...
2024-08-16 13:09:48,532 [Process: 0] EPOCH 456:
2024-08-16 13:09:48,534 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1318, 0.1356, 0.1836,  ..., 0.1256, 0.1682, 0.1359],
         [0.1318, 0.1356, 0.1836,  ..., 0.1256, 0.1682, 0.1359],
         [0.1318, 0.1356, 0.1836,  ..., 0.1256, 0.1682, 0.1359],
         [0.6046, 0.5933, 0.4491,  ..., 0.6231, 0.4955, 0.5924]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2498, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2505, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2498, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2498, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1580, 0.1465, 0.1212,  ..., 0.1265, 0.1711, 0.1675],
         [0.1980, 0.1465, 0.1212,  ..., 0.2240, 0.2291, 0.2186],
         [0.1580, 0.1465, 0.1212,  ..., 0.1265, 0.1711, 0.1675],
         [0.4860, 0.5604, 0.6363,  ..., 0.5230, 0.4287, 0.4465]],
        [[0.2165, 0.2239, 0.1565,  ..., 0.3106, 0.6287, 0.2940],
         [0.2165, 0.2239, 0.1565,  ..., 0.1992, 0.1238, 0.1568],
         [0.3504, 0.3282, 0.5306,  ..., 0.2911, 0.1238, 0.3923],
         [0.2165, 0.2239, 0.1565,  ..., 0.1992, 0.1238, 0.1568]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 456:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1412, 0.1767, 0.1596,  ..., 0.1308, 0.1632, 0.1340],
         [0.1412, 0.1767, 0.1596,  ..., 0.1308, 0.1632, 0.1340],
         [0.1412, 0.1767, 0.1596,  ..., 0.1308, 0.1632, 0.1340],
         [0.5765, 0.4698, 0.5213,  ..., 0.6075, 0.5105, 0.5980]],
        [[0.2500, 0.2500, 0.2487,  ..., 0.2500, 0.3052, 0.2541],
         [0.2500, 0.2500, 0.2540,  ..., 0.2500, 0.2410, 0.2486],
         [0.2500, 0.2500, 0.2487,  ..., 0.2500, 0.2269, 0.2486],
         [0.2500, 0.2500, 0.2487,  ..., 0.2500, 0.2269, 0.2486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:50,426 [Process: 0] Synchronize training processes
2024-08-16 13:09:50,427 [Process: 0] Evaluating...
2024-08-16 13:09:50,429 [Process: 0] EPOCH 457:
2024-08-16 13:09:50,431 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2357, 0.1877, 0.1543,  ..., 0.2019, 0.1054, 0.1267],
         [0.2357, 0.1877, 0.1543,  ..., 0.1404, 0.1228, 0.1267],
         [0.2357, 0.1877, 0.1543,  ..., 0.1636, 0.1054, 0.1267],
         [0.2928, 0.4370, 0.5370,  ..., 0.4941, 0.6665, 0.6198]],
        [[0.3132, 0.1415, 0.2404,  ..., 0.1840, 0.1845, 0.5298],
         [0.2799, 0.2750, 0.2999,  ..., 0.2057, 0.4748, 0.1310],
         [0.2035, 0.4505, 0.2298,  ..., 0.4829, 0.1871, 0.2686],
         [0.2035, 0.1330, 0.2298,  ..., 0.1274, 0.1536, 0.0705]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 457:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1242, 0.1388, 0.1600,  ..., 0.2001, 0.1336, 0.1520],
         [0.1288, 0.1388, 0.1600,  ..., 0.2001, 0.1336, 0.1651],
         [0.1242, 0.1388, 0.1600,  ..., 0.2001, 0.1336, 0.1520],
         [0.6227, 0.5837, 0.5199,  ..., 0.3997, 0.5992, 0.5310]],
        [[0.2500, 0.2500, 0.2499,  ..., 0.2500, 0.2885, 0.2500],
         [0.2500, 0.2500, 0.2504,  ..., 0.2500, 0.2372, 0.2500],
         [0.2500, 0.2500, 0.2499,  ..., 0.2500, 0.2372, 0.2500],
         [0.2500, 0.2500, 0.2499,  ..., 0.2500, 0.2372, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:52,335 [Process: 0] Synchronize training processes
2024-08-16 13:09:52,336 [Process: 0] Evaluating...
2024-08-16 13:09:52,338 [Process: 0] EPOCH 458:
2024-08-16 13:09:52,339 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1696, 0.2190, 0.1639,  ..., 0.1850, 0.1687, 0.1957],
         [0.2168, 0.2190, 0.1702,  ..., 0.2748, 0.1687, 0.3029],
         [0.1696, 0.2190, 0.1639,  ..., 0.1850, 0.1687, 0.1957],
         [0.4439, 0.3430, 0.5020,  ..., 0.3553, 0.4940, 0.3057]],
        [[0.3609, 0.3389, 0.2047,  ..., 0.2314, 0.3725, 0.2924],
         [0.2130, 0.2413, 0.2655,  ..., 0.2314, 0.2835, 0.2318],
         [0.2130, 0.2152, 0.3302,  ..., 0.2509, 0.1851, 0.2440],
         [0.2130, 0.2046, 0.1996,  ..., 0.2863, 0.1589, 0.2318]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 458:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1642, 0.1375, 0.1508,  ..., 0.1731, 0.1337, 0.1613],
         [0.1642, 0.1375, 0.1508,  ..., 0.1731, 0.1337, 0.1613],
         [0.1642, 0.1375, 0.1508,  ..., 0.1731, 0.1337, 0.1613],
         [0.5073, 0.5874, 0.5475,  ..., 0.4806, 0.5990, 0.5162]],
        [[0.2408, 0.2662, 0.2889,  ..., 0.2736, 0.2471, 0.2489],
         [0.2746, 0.2615, 0.2428,  ..., 0.2618, 0.2586, 0.2533],
         [0.2437, 0.2361, 0.2341,  ..., 0.2323, 0.2471, 0.2489],
         [0.2408, 0.2361, 0.2341,  ..., 0.2323, 0.2471, 0.2489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:54,233 [Process: 0] Synchronize training processes
2024-08-16 13:09:54,233 [Process: 0] Evaluating...
2024-08-16 13:09:54,235 [Process: 0] EPOCH 459:
2024-08-16 13:09:54,237 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1505, 0.1541, 0.1580,  ..., 0.1686, 0.1786, 0.1598],
         [0.1505, 0.2596, 0.1580,  ..., 0.1759, 0.2157, 0.1598],
         [0.1505, 0.2119, 0.1580,  ..., 0.1686, 0.1575, 0.1598],
         [0.5485, 0.3744, 0.5260,  ..., 0.4868, 0.4482, 0.5205]],
        [[0.2084, 0.2979, 0.2757,  ..., 0.3879, 0.2245, 0.2481],
         [0.2084, 0.2701, 0.2085,  ..., 0.2195, 0.2245, 0.2481],
         [0.3747, 0.2823, 0.3919,  ..., 0.2682, 0.3266, 0.2556],
         [0.2084, 0.1497, 0.1240,  ..., 0.1244, 0.2245, 0.2481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 459:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1597, 0.1777, 0.1589,  ..., 0.1393, 0.1249, 0.1420],
         [0.1597, 0.1777, 0.1589,  ..., 0.1393, 0.1249, 0.1420],
         [0.1597, 0.1777, 0.1589,  ..., 0.1393, 0.1249, 0.1420],
         [0.5208, 0.4669, 0.5233,  ..., 0.5820, 0.6252, 0.5741]],
        [[0.2718, 0.2487, 0.2500,  ..., 0.2486, 0.2500, 0.2648],
         [0.2427, 0.2540, 0.2500,  ..., 0.2543, 0.2500, 0.2456],
         [0.2427, 0.2487, 0.2500,  ..., 0.2486, 0.2500, 0.2448],
         [0.2427, 0.2487, 0.2500,  ..., 0.2486, 0.2500, 0.2448]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:56,158 [Process: 0] Synchronize training processes
2024-08-16 13:09:56,158 [Process: 0] Evaluating...
2024-08-16 13:09:56,160 [Process: 0] EPOCH 460:
2024-08-16 13:09:56,162 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1186, 0.1436, 0.1279,  ..., 0.1888, 0.1090, 0.3077],
         [0.1186, 0.1507, 0.1279,  ..., 0.1888, 0.3051, 0.1953],
         [0.1186, 0.1436, 0.1279,  ..., 0.1888, 0.1415, 0.1953],
         [0.6442, 0.5622, 0.6163,  ..., 0.4335, 0.4444, 0.3018]],
        [[0.2219, 0.4168, 0.2106,  ..., 0.2500, 0.3517, 0.2315],
         [0.4477, 0.3183, 0.3682,  ..., 0.2500, 0.2473, 0.3222],
         [0.2310, 0.1961, 0.2106,  ..., 0.2500, 0.2005, 0.2231],
         [0.0995, 0.0687, 0.2106,  ..., 0.2500, 0.2005, 0.2231]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 460:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1774, 0.1215, 0.1550,  ..., 0.1508, 0.1629, 0.1287],
         [0.1774, 0.1215, 0.1550,  ..., 0.1508, 0.1629, 0.1287],
         [0.1774, 0.1215, 0.1550,  ..., 0.1508, 0.1629, 0.1287],
         [0.4678, 0.6354, 0.5349,  ..., 0.5477, 0.5112, 0.6139]],
        [[0.2606, 0.2619, 0.2500,  ..., 0.2487, 0.2455, 0.2500],
         [0.2612, 0.2638, 0.2500,  ..., 0.2648, 0.2634, 0.2500],
         [0.2391, 0.2372, 0.2500,  ..., 0.2432, 0.2455, 0.2500],
         [0.2391, 0.2372, 0.2500,  ..., 0.2432, 0.2455, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:58,071 [Process: 0] Synchronize training processes
2024-08-16 13:09:58,071 [Process: 0] Evaluating...
2024-08-16 13:09:58,073 [Process: 0] EPOCH 461:
2024-08-16 13:09:58,075 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1310, 0.1789, 0.1655,  ..., 0.2147, 0.1699, 0.1070],
         [0.1310, 0.2335, 0.1655,  ..., 0.2147, 0.1699, 0.4480],
         [0.1310, 0.1789, 0.1655,  ..., 0.2147, 0.1699, 0.1070],
         [0.6070, 0.4087, 0.5036,  ..., 0.3560, 0.4903, 0.3380]],
        [[0.2337, 0.3160, 0.2921,  ..., 0.4800, 0.3225, 0.1333],
         [0.2989, 0.4002, 0.3863,  ..., 0.1615, 0.4718, 0.3916],
         [0.2337, 0.2158, 0.2358,  ..., 0.1971, 0.1474, 0.3418],
         [0.2337, 0.0680, 0.0858,  ..., 0.1615, 0.0584, 0.1333]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 461:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1445, 0.1408, 0.1532,  ..., 0.1282, 0.1805, 0.1404],
         [0.1445, 0.1408, 0.1532,  ..., 0.1282, 0.1805, 0.1404],
         [0.1445, 0.1408, 0.1532,  ..., 0.1282, 0.1805, 0.1404],
         [0.5664, 0.5776, 0.5405,  ..., 0.6155, 0.4585, 0.5787]],
        [[0.2500, 0.2473, 0.2500,  ..., 0.2478, 0.2500, 0.2485],
         [0.2500, 0.2580, 0.2500,  ..., 0.2565, 0.2500, 0.2545],
         [0.2500, 0.2473, 0.2500,  ..., 0.2478, 0.2500, 0.2485],
         [0.2500, 0.2473, 0.2500,  ..., 0.2478, 0.2500, 0.2485]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:09:59,972 [Process: 0] Synchronize training processes
2024-08-16 13:09:59,972 [Process: 0] Evaluating...
2024-08-16 13:09:59,974 [Process: 0] EPOCH 462:
2024-08-16 13:09:59,976 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1720, 0.1512, 0.1387,  ..., 0.1868, 0.1504, 0.1876],
         [0.1720, 0.2066, 0.1387,  ..., 0.1868, 0.1504, 0.1876],
         [0.1720, 0.1512, 0.1387,  ..., 0.1868, 0.1504, 0.1876],
         [0.4840, 0.4910, 0.5838,  ..., 0.4396, 0.5489, 0.4373]],
        [[0.1259, 0.2373, 0.2500,  ..., 0.2285, 0.3537, 0.2101],
         [0.6522, 0.2881, 0.2500,  ..., 0.2648, 0.2016, 0.3544],
         [0.1109, 0.2373, 0.2500,  ..., 0.3597, 0.3222, 0.3004],
         [0.1109, 0.2373, 0.2500,  ..., 0.1470, 0.1226, 0.1351]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 462:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1972, 0.1154, 0.1433,  ..., 0.1880, 0.1367, 0.1811],
         [0.1972, 0.1154, 0.1433,  ..., 0.1880, 0.1485, 0.1811],
         [0.1972, 0.1154, 0.1433,  ..., 0.1880, 0.1367, 0.1811],
         [0.4084, 0.6538, 0.5701,  ..., 0.4361, 0.5782, 0.4567]],
        [[0.2481, 0.2500, 0.2500,  ..., 0.2477, 0.2461, 0.2763],
         [0.2556, 0.2500, 0.2500,  ..., 0.2568, 0.2618, 0.2471],
         [0.2481, 0.2500, 0.2500,  ..., 0.2477, 0.2461, 0.2383],
         [0.2481, 0.2500, 0.2500,  ..., 0.2477, 0.2461, 0.2383]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:10:01,882 [Process: 0] Synchronize training processes
2024-08-16 13:10:01,882 [Process: 0] Evaluating...
2024-08-16 13:10:01,884 [Process: 0] EPOCH 463:
2024-08-16 13:10:01,886 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1614, 0.1734, 0.1940,  ..., 0.1689, 0.1552, 0.1503],
         [0.1614, 0.1734, 0.1940,  ..., 0.1689, 0.1552, 0.1503],
         [0.1614, 0.1734, 0.1940,  ..., 0.1689, 0.1552, 0.1503],
         [0.5158, 0.4798, 0.4179,  ..., 0.4934, 0.5344, 0.5492]],
        [[0.3329, 0.2245, 0.2157,  ..., 0.2957, 0.6748, 0.1573],
         [0.2616, 0.2875, 0.1879,  ..., 0.2059, 0.1529, 0.1573],
         [0.2569, 0.2635, 0.4085,  ..., 0.3545, 0.0919, 0.5280],
         [0.1486, 0.2245, 0.1879,  ..., 0.1440, 0.0804, 0.1573]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 463:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1701, 0.1117, 0.1492,  ..., 0.1462, 0.1394, 0.1789],
         [0.1701, 0.1117, 0.1492,  ..., 0.1462, 0.1394, 0.1789],
         [0.1701, 0.1117, 0.1492,  ..., 0.1462, 0.1394, 0.1789],
         [0.4898, 0.6650, 0.5523,  ..., 0.5614, 0.5819, 0.4632]],
        [[0.2492, 0.2500, 0.2476,  ..., 0.2500, 0.2465, 0.2495],
         [0.2523, 0.2500, 0.2571,  ..., 0.2500, 0.2604, 0.2516],
         [0.2492, 0.2500, 0.2476,  ..., 0.2500, 0.2465, 0.2495],
         [0.2492, 0.2500, 0.2476,  ..., 0.2500, 0.2465, 0.2495]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:10:03,781 [Process: 0] Synchronize training processes
2024-08-16 13:10:03,782 [Process: 0] Evaluating...
2024-08-16 13:10:03,784 [Process: 0] EPOCH 464:
2024-08-16 13:10:03,785 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1992, 0.1381, 0.1553,  ..., 0.1866, 0.1592, 0.1213],
         [0.1992, 0.1680, 0.1553,  ..., 0.1866, 0.1592, 0.1213],
         [0.1992, 0.1381, 0.1553,  ..., 0.1866, 0.1592, 0.1213],
         [0.4023, 0.5558, 0.5340,  ..., 0.4403, 0.5225, 0.6360]],
        [[0.1974, 0.5340, 0.4454,  ..., 0.0627, 0.1587, 0.1621],
         [0.1974, 0.2723, 0.2386,  ..., 0.2392, 0.1903, 0.4055],
         [0.4077, 0.1001, 0.2023,  ..., 0.6477, 0.4944, 0.3326],
         [0.1974, 0.0936, 0.1137,  ..., 0.0503, 0.1566, 0.0997]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 464:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1659, 0.1535, 0.1602,  ..., 0.1370, 0.1422, 0.1333],
         [0.1659, 0.1535, 0.1602,  ..., 0.1370, 0.1422, 0.1333],
         [0.1659, 0.1535, 0.1602,  ..., 0.1370, 0.1422, 0.1333],
         [0.5022, 0.5396, 0.5193,  ..., 0.5890, 0.5735, 0.6000]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:10:05,673 [Process: 0] Synchronize training processes
2024-08-16 13:10:05,674 [Process: 0] Evaluating...
2024-08-16 13:10:05,676 [Process: 0] EPOCH 465:
2024-08-16 13:10:05,677 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2442, 0.1542, 0.1879,  ..., 0.2408, 0.1593, 0.1919],
         [0.1431, 0.3797, 0.1810,  ..., 0.1938, 0.1593, 0.1673],
         [0.2271, 0.1421, 0.2123,  ..., 0.1938, 0.1593, 0.1673],
         [0.3856, 0.3240, 0.4189,  ..., 0.3716, 0.5220, 0.4735]],
        [[0.1356, 0.2807, 0.2500,  ..., 0.2637, 0.2500, 0.2063],
         [0.1336, 0.2398, 0.2500,  ..., 0.2465, 0.2500, 0.3812],
         [0.5972, 0.2398, 0.2500,  ..., 0.2988, 0.2500, 0.2063],
         [0.1336, 0.2398, 0.2500,  ..., 0.1909, 0.2500, 0.2063]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 465:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1696, 0.1471, 0.1456,  ..., 0.1944, 0.1802, 0.1922],
         [0.1696, 0.1471, 0.1456,  ..., 0.1944, 0.1802, 0.1922],
         [0.1696, 0.1471, 0.1456,  ..., 0.1944, 0.1802, 0.1922],
         [0.4911, 0.5588, 0.5633,  ..., 0.4169, 0.4594, 0.4234]],
        [[0.2534, 0.2500, 0.2500,  ..., 0.2467, 0.2500, 0.2500],
         [0.2512, 0.2500, 0.2500,  ..., 0.2538, 0.2500, 0.2500],
         [0.2477, 0.2500, 0.2500,  ..., 0.2529, 0.2500, 0.2500],
         [0.2477, 0.2500, 0.2500,  ..., 0.2467, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape:
2024-08-16 13:10:07,627 [Process: 0] Synchronize training processes
2024-08-16 13:10:07,628 [Process: 0] Evaluating...
2024-08-16 13:10:07,630 [Process: 0] EPOCH 466:
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1347, 0.1438, 0.5471,  ..., 0.1598, 0.2292, 0.4512],
         [0.4482, 0.1883, 0.1669,  ..., 0.1598, 0.1521, 0.2573],
         [0.1397, 0.1438, 0.1120,  ..., 0.1598, 0.3593, 0.1008],
         [0.2774, 0.5240, 0.1741,  ..., 0.5207, 0.2594, 0.1907]],
        [[0.1696, 0.1899, 0.2026,  ..., 0.2500, 0.2198, 0.2500],
         [0.2408, 0.3493, 0.2026,  ..., 0.2500, 0.2198, 0.2500],
         [0.4201, 0.4033, 0.3922,  ..., 0.2500, 0.3406, 0.2500],
         [0.1696, 0.0576, 0.2026,  ..., 0.2500, 0.2198, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 466:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1158, 0.1522, 0.1441,  ..., 0.1602, 0.1555, 0.1390],
         [0.1184, 0.1558, 0.1441,  ..., 0.1602, 0.1555, 0.1390],
         [0.1158, 0.1522, 0.1441,  ..., 0.1602, 0.1555, 0.1390],
         [0.6500, 0.5397, 0.5676,  ..., 0.5193, 0.5334, 0.5829]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2499, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2504, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2499, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2499, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1756, 0.1944, 0.1634,  ..., 0.1886, 0.1593, 0.1773],
         [0.1756, 0.1944, 0.1700,  ..., 0.2249, 0.1593, 0.2291],
         [0.1756, 0.1944, 0.1634,  ..., 0.1886, 0.1593, 0.1725],
         [0.4732, 0.4167, 0.5033,  ..., 0.3978, 0.5221, 0.4211]],
        [[0.4024, 0.2353, 0.2500,  ..., 0.3580, 0.3481, 0.3264],
         [0.1995, 0.3017, 0.2500,  ..., 0.2394, 0.2276, 0.2851],
         [0.1991, 0.2315, 0.2500,  ..., 0.2013, 0.2366, 0.1943],
         [0.1991, 0.2315, 0.2500,  ..., 0.2013, 0.1878, 0.1943]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:10:09,518 [Process: 0] Synchronize training processes
2024-08-16 13:10:09,518 [Process: 0] Evaluating...
2024-08-16 13:10:09,520 [Process: 0] EPOCH 467:
2024-08-16 13:10:09,522 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 467:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1432, 0.1267, 0.1300,  ..., 0.1426, 0.1135, 0.1687],
         [0.1432, 0.1267, 0.1300,  ..., 0.1426, 0.1135, 0.1687],
         [0.1432, 0.1267, 0.1300,  ..., 0.1426, 0.1135, 0.1687],
         [0.5704, 0.6200, 0.6099,  ..., 0.5721, 0.6595, 0.4938]],
        [[0.2500, 0.2383, 0.2500,  ..., 0.2495, 0.2494, 0.2490],
         [0.2500, 0.2722, 0.2500,  ..., 0.2514, 0.2519, 0.2529],
         [0.2500, 0.2512, 0.2500,  ..., 0.2495, 0.2494, 0.2490],
         [0.2500, 0.2383, 0.2500,  ..., 0.2495, 0.2494, 0.2490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1398, 0.2087, 0.1329,  ..., 0.1706, 0.1248, 0.1200],
         [0.2080, 0.2395, 0.2246,  ..., 0.2341, 0.1827, 0.1949],
         [0.1398, 0.1789, 0.1329,  ..., 0.1706, 0.1248, 0.1200],
         [0.5124, 0.3729, 0.5095,  ..., 0.4247, 0.5676, 0.5650]],
        [[0.1925, 0.1073, 0.4572,  ..., 0.4301, 0.6198, 0.4374],
         [0.0543, 0.1073, 0.1164,  ..., 0.1900, 0.1607, 0.1924],
         [0.7024, 0.6781, 0.3641,  ..., 0.1900, 0.1181, 0.1937],
         [0.0509, 0.1073, 0.0624,  ..., 0.1900, 0.1015, 0.1765]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 468:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:10:11,416 [Process: 0] Synchronize training processes
2024-08-16 13:10:11,416 [Process: 0] Evaluating...
2024-08-16 13:10:11,418 [Process: 0] EPOCH 468:
2024-08-16 13:10:11,420 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1816, 0.1925, 0.1504,  ..., 0.1676, 0.1430, 0.1613],
         [0.1816, 0.1925, 0.1504,  ..., 0.1676, 0.1430, 0.1613],
         [0.1816, 0.1925, 0.1504,  ..., 0.1676, 0.1430, 0.1613],
         [0.4553, 0.4225, 0.5489,  ..., 0.4973, 0.5709, 0.5160]],
        [[0.2500, 0.2500, 0.2455,  ..., 0.2500, 0.2500, 0.2493],
         [0.2500, 0.2500, 0.2634,  ..., 0.2500, 0.2500, 0.2521],
         [0.2500, 0.2500, 0.2455,  ..., 0.2500, 0.2500, 0.2493],
         [0.2500, 0.2500, 0.2455,  ..., 0.2500, 0.2500, 0.2493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3367, 0.2177, 0.0719,  ..., 0.0679, 0.2941, 0.2087],
         [0.1453, 0.1439, 0.0719,  ..., 0.0679, 0.3532, 0.2690],
         [0.1732, 0.1439, 0.0719,  ..., 0.0679, 0.1398, 0.1841],
         [0.3448, 0.4945, 0.7844,  ..., 0.7964, 0.2129, 0.3382]],
        [[0.2054, 0.1841, 0.2297,  ..., 0.2500, 0.2238, 0.4862],
         [0.1671, 0.1841, 0.4012,  ..., 0.2500, 0.1434, 0.1229],
         [0.4604, 0.4478, 0.2537,  ..., 0.2500, 0.4895, 0.2681],
         [0.1671, 0.1841, 0.1155,  ..., 0.2500, 0.1434, 0.1229]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 469:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:10:13,313 [Process: 0] Synchronize training processes
2024-08-16 13:10:13,314 [Process: 0] Evaluating...
2024-08-16 13:10:13,316 [Process: 0] EPOCH 469:
2024-08-16 13:10:13,317 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1641, 0.1459, 0.1629,  ..., 0.1268, 0.1281, 0.1820],
         [0.1641, 0.1459, 0.1629,  ..., 0.1268, 0.1281, 0.1820],
         [0.1641, 0.1459, 0.1629,  ..., 0.1268, 0.1281, 0.1820],
         [0.5076, 0.5623, 0.5113,  ..., 0.6195, 0.6157, 0.4541]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2710],
         [0.2500, 0.2500, 0.2500,  ..., 0.2507, 0.2500, 0.2567],
         [0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2362],
         [0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2362]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2708, 0.4621, 0.1482,  ..., 0.1262, 0.1732, 0.1797],
         [0.1729, 0.1035, 0.1371,  ..., 0.1834, 0.1732, 0.1902],
         [0.0604, 0.1035, 0.1371,  ..., 0.1262, 0.1732, 0.0831],
         [0.4958, 0.3309, 0.5776,  ..., 0.5642, 0.4804, 0.5469]],
        [[0.1967, 0.1042, 0.1244,  ..., 0.2595, 0.2017, 0.1605],
         [0.4630, 0.4835, 0.4485,  ..., 0.3942, 0.2017, 0.2006],
         [0.2417, 0.3080, 0.3027,  ..., 0.2955, 0.3950, 0.4785],
         [0.0987, 0.1042, 0.1244,  ..., 0.0508, 0.2017, 0.1605]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 470:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:10:15,288 [Process: 0] Synchronize training processes
2024-08-16 13:10:15,289 [Process: 0] Evaluating...
2024-08-16 13:10:15,291 [Process: 0] EPOCH 470:
2024-08-16 13:10:15,293 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1487, 0.1642, 0.1224,  ..., 0.1057, 0.1472, 0.1347],
         [0.1528, 0.1764, 0.1224,  ..., 0.1057, 0.1472, 0.1347],
         [0.1487, 0.1642, 0.1224,  ..., 0.1057, 0.1472, 0.1347],
         [0.5499, 0.4953, 0.6329,  ..., 0.6830, 0.5585, 0.5958]],
        [[0.2493, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2522, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2493, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2493, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1217, 0.1507, 0.1659,  ..., 0.1741, 0.1384, 0.2829],
         [0.2160, 0.3145, 0.1990,  ..., 0.1741, 0.1384, 0.2415],
         [0.1217, 0.1507, 0.1659,  ..., 0.1807, 0.1384, 0.2120],
         [0.5407, 0.3841, 0.4693,  ..., 0.4710, 0.5849, 0.2636]],
        [[0.2174, 0.2688, 0.2447,  ..., 0.2500, 0.3216, 0.2096],
         [0.2011, 0.2437, 0.1784,  ..., 0.2500, 0.3946, 0.2096],
         [0.3804, 0.2437, 0.3984,  ..., 0.2500, 0.1419, 0.3711],
         [0.2011, 0.2437, 0.1784,  ..., 0.2500, 0.1419, 0.2096]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 471:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:10:17,206 [Process: 0] Synchronize training processes
2024-08-16 13:10:17,206 [Process: 0] Evaluating...
2024-08-16 13:10:17,208 [Process: 0] EPOCH 471:
2024-08-16 13:10:17,210 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1832, 0.1723, 0.1312,  ..., 0.1443, 0.1906, 0.1183],
         [0.1832, 0.1723, 0.1312,  ..., 0.1443, 0.1906, 0.1183],
         [0.1832, 0.1723, 0.1312,  ..., 0.1443, 0.1906, 0.1183],
         [0.4503, 0.4830, 0.6063,  ..., 0.5671, 0.4281, 0.6450]],
        [[0.2500, 0.2489, 0.2500,  ..., 0.2500, 0.2500, 0.2488],
         [0.2500, 0.2533, 0.2500,  ..., 0.2500, 0.2500, 0.2536],
         [0.2500, 0.2489, 0.2500,  ..., 0.2500, 0.2500, 0.2488],
         [0.2500, 0.2489, 0.2500,  ..., 0.2500, 0.2500, 0.2488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.7950, 0.1846, 0.2780,  ..., 0.1248, 0.2885, 0.1614],
         [0.0569, 0.1846, 0.1061,  ..., 0.1248, 0.1313, 0.1614],
         [0.0583, 0.1846, 0.1811,  ..., 0.1248, 0.1401, 0.1614],
         [0.0898, 0.4461, 0.4348,  ..., 0.6256, 0.4402, 0.5159]],
        [[0.1382, 0.1688, 0.0865,  ..., 0.1148, 0.3256, 0.3126],
         [0.1717, 0.4498, 0.1273,  ..., 0.4949, 0.2944, 0.3018],
         [0.5519, 0.2698, 0.6997,  ..., 0.2754, 0.3224, 0.2444],
         [0.1382, 0.1116, 0.0865,  ..., 0.1148, 0.0576, 0.1412]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 472:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:10:19,105 [Process: 0] Synchronize training processes
2024-08-16 13:10:19,106 [Process: 0] Evaluating...
2024-08-16 13:10:19,107 [Process: 0] EPOCH 472:
2024-08-16 13:10:19,109 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1549, 0.1815, 0.1238,  ..., 0.1298, 0.1577, 0.1634],
         [0.1549, 0.1815, 0.1238,  ..., 0.1298, 0.1577, 0.1634],
         [0.1549, 0.1815, 0.1238,  ..., 0.1298, 0.1577, 0.1634],
         [0.5354, 0.4554, 0.6286,  ..., 0.6107, 0.5268, 0.5097]],
        [[0.2500, 0.2473, 0.2500,  ..., 0.2474, 0.2483, 0.2420],
         [0.2500, 0.2580, 0.2500,  ..., 0.2578, 0.2550, 0.2551],
         [0.2500, 0.2473, 0.2500,  ..., 0.2474, 0.2483, 0.2610],
         [0.2500, 0.2473, 0.2500,  ..., 0.2474, 0.2483, 0.2420]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1472, 0.1475, 0.2051,  ..., 0.1947, 0.1555, 0.1771],
         [0.1472, 0.1475, 0.2051,  ..., 0.1947, 0.1588, 0.1771],
         [0.1472, 0.1475, 0.2051,  ..., 0.1947, 0.1555, 0.1771],
         [0.5585, 0.5576, 0.3848,  ..., 0.4159, 0.5301, 0.4686]],
        [[0.2686, 0.3165, 0.4417,  ..., 0.2066, 0.2521, 0.1948],
         [0.2669, 0.2090, 0.2471,  ..., 0.3134, 0.2982, 0.4257],
         [0.2903, 0.2656, 0.1842,  ..., 0.2733, 0.2727, 0.2153],
         [0.1742, 0.2090, 0.1269,  ..., 0.2066, 0.1770, 0.1643]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 473:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:10:21,009 [Process: 0] Synchronize training processes
2024-08-16 13:10:21,009 [Process: 0] Evaluating...
2024-08-16 13:10:21,011 [Process: 0] EPOCH 473:
2024-08-16 13:10:21,013 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1349, 0.1596, 0.1206,  ..., 0.1308, 0.1467, 0.1516],
         [0.1349, 0.1596, 0.1206,  ..., 0.1308, 0.1467, 0.1516],
         [0.1349, 0.1596, 0.1206,  ..., 0.1308, 0.1467, 0.1516],
         [0.5952, 0.5213, 0.6381,  ..., 0.6077, 0.5599, 0.5453]],
        [[0.2500, 0.2500, 0.2487,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2540,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2487,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2487,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1482, 0.1567, 0.1104,  ..., 0.1343, 0.1290, 0.4344],
         [0.1482, 0.1567, 0.1104,  ..., 0.1343, 0.1290, 0.1433],
         [0.1482, 0.1567, 0.1104,  ..., 0.1343, 0.1290, 0.1155],
         [0.5553, 0.5298, 0.6689,  ..., 0.5970, 0.6130, 0.3068]],
        [[0.2257, 0.2679, 0.2708,  ..., 0.2500, 0.3241, 0.2163],
         [0.3881, 0.3151, 0.3075,  ..., 0.2500, 0.2463, 0.3512],
         [0.2290, 0.2085, 0.2190,  ..., 0.2500, 0.2148, 0.2163],
         [0.1572, 0.2085, 0.2027,  ..., 0.2500, 0.2148, 0.2163]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 474:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:10:22,906 [Process: 0] Synchronize training processes
2024-08-16 13:10:22,906 [Process: 0] Evaluating...
2024-08-16 13:10:22,908 [Process: 0] EPOCH 474:
2024-08-16 13:10:22,910 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:10:24,802 [Process: 0] Synchronize training processes
2024-08-16 13:10:24,802 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1788, 0.1705, 0.1331,  ..., 0.1249, 0.1032, 0.1383],
         [0.1788, 0.1705, 0.1331,  ..., 0.1249, 0.1032, 0.1383],
         [0.1788, 0.1705, 0.1331,  ..., 0.1249, 0.1032, 0.1383],
         [0.4637, 0.4886, 0.6008,  ..., 0.6254, 0.6905, 0.5852]],
        [[0.2500, 0.2446, 0.2500,  ..., 0.2468, 0.2500, 0.2500],
         [0.2500, 0.2661, 0.2500,  ..., 0.2597, 0.2500, 0.2500],
         [0.2500, 0.2446, 0.2500,  ..., 0.2468, 0.2500, 0.2500],
         [0.2500, 0.2446, 0.2500,  ..., 0.2468, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1247, 0.1337, 0.1986,  ..., 0.2028, 0.0896, 0.1354],
         [0.2650, 0.1337, 0.4618,  ..., 0.2982, 0.1874, 0.2694],
         [0.1247, 0.1337, 0.1299,  ..., 0.2031, 0.0896, 0.1354],
         [0.4855, 0.5990, 0.2096,  ..., 0.2959, 0.6334, 0.4599]],
        [[0.2500, 0.3662, 0.3212,  ..., 0.3241, 0.2500, 0.2170],
         [0.2500, 0.3835, 0.1588,  ..., 0.2253, 0.2500, 0.4249],
         [0.2500, 0.1542, 0.3621,  ..., 0.2253, 0.2500, 0.2082],
         [0.2500, 0.0961, 0.1578,  ..., 0.2253, 0.2500, 0.1500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 475:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:10:24,804 [Process: 0] EPOCH 475:
2024-08-16 13:10:24,806 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:10:26,700 [Process: 0] Synchronize training processes
2024-08-16 13:10:26,700 [Process: 0] Evaluating...
2024-08-16 13:10:26,702 [Process: 0] EPOCH 476:
2024-08-16 13:10:26,704 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1292, 0.1371, 0.1847,  ..., 0.1592, 0.1332, 0.1287],
         [0.1292, 0.1371, 0.1891,  ..., 0.1729, 0.1332, 0.1287],
         [0.1292, 0.1371, 0.1847,  ..., 0.1592, 0.1332, 0.1287],
         [0.6124, 0.5887, 0.4414,  ..., 0.5087, 0.6004, 0.6138]],
        [[0.2491, 0.2499, 0.2439,  ..., 0.2469, 0.2500, 0.2516],
         [0.2526, 0.2502, 0.2684,  ..., 0.2592, 0.2500, 0.2644],
         [0.2491, 0.2499, 0.2439,  ..., 0.2469, 0.2500, 0.2432],
         [0.2491, 0.2499, 0.2439,  ..., 0.2469, 0.2500, 0.2408]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1486, 0.1260, 0.1955,  ..., 0.2131, 0.1498, 0.1785],
         [0.1486, 0.1260, 0.1955,  ..., 0.2131, 0.1498, 0.1785],
         [0.1486, 0.1260, 0.1955,  ..., 0.2131, 0.1498, 0.1785],
         [0.5543, 0.6219, 0.4135,  ..., 0.3608, 0.5506, 0.4645]],
        [[0.2755, 0.3528, 0.2500,  ..., 0.2135, 0.3783, 0.4244],
         [0.2521, 0.2834, 0.2500,  ..., 0.3072, 0.2320, 0.2995],
         [0.3429, 0.2324, 0.2500,  ..., 0.2659, 0.2005, 0.1860],
         [0.1296, 0.1314, 0.2500,  ..., 0.2135, 0.1892, 0.0901]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 476:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1484, 0.1563, 0.1412,  ..., 0.1582, 0.1440, 0.1589],
         [0.1484, 0.1563, 0.1412,  ..., 0.1582, 0.1440, 0.1589],
         [0.1484, 0.1563, 0.1412,  ..., 0.1582, 0.1440, 0.1589],
         [0.5547, 0.5312, 0.5763,  ..., 0.5254, 0.5680, 0.5232]],
        [[0.2418, 0.2500, 0.2663,  ..., 0.2455, 0.2500, 0.2500],
         [0.2676, 0.2500, 0.2611,  ..., 0.2538, 0.2500, 0.2500],
         [0.2488, 0.2500, 0.2363,  ..., 0.2552, 0.2500, 0.2500],
         [0.2418, 0.2500, 0.2363,  ..., 0.2455, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:10:28,598 [Process: 0] Synchronize training processes
2024-08-16 13:10:28,598 [Process: 0] Evaluating...
2024-08-16 13:10:28,600 [Process: 0] EPOCH 477:
2024-08-16 13:10:28,602 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2828, 0.1230, 0.2013,  ..., 0.2229, 0.3100, 0.2375],
         [0.1639, 0.1230, 0.2013,  ..., 0.1969, 0.1514, 0.1914],
         [0.1639, 0.1230, 0.2013,  ..., 0.1969, 0.1514, 0.1914],
         [0.3893, 0.6311, 0.3960,  ..., 0.3833, 0.3872, 0.3797]],
        [[0.2332, 0.1966, 0.2227,  ..., 0.1830, 0.1442, 0.1674],
         [0.3816, 0.2435, 0.3318,  ..., 0.2931, 0.3275, 0.2464],
         [0.3399, 0.3633, 0.2227,  ..., 0.3715, 0.3841, 0.4975],
         [0.0454, 0.1966, 0.2227,  ..., 0.1524, 0.1442, 0.0888]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 477:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1386, 0.1362, 0.1575,  ..., 0.1393, 0.1465, 0.1280],
         [0.1386, 0.1362, 0.1575,  ..., 0.1393, 0.1495, 0.1280],
         [0.1386, 0.1362, 0.1575,  ..., 0.1393, 0.1465, 0.1280],
         [0.5842, 0.5914, 0.5275,  ..., 0.5821, 0.5575, 0.6159]],
        [[0.2500, 0.2500, 0.2541,  ..., 0.2500, 0.2463, 0.2476],
         [0.2500, 0.2500, 0.2706,  ..., 0.2500, 0.2610, 0.2571],
         [0.2500, 0.2500, 0.2386,  ..., 0.2500, 0.2463, 0.2476],
         [0.2500, 0.2500, 0.2367,  ..., 0.2500, 0.2463, 0.2476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:10:30,498 [Process: 0] Synchronize training processes
2024-08-16 13:10:30,499 [Process: 0] Evaluating...
2024-08-16 13:10:30,501 [Process: 0] EPOCH 478:
2024-08-16 13:10:30,503 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1217, 0.1708, 0.2045,  ..., 0.2308, 0.2500, 0.1105],
         [0.0838, 0.1708, 0.2045,  ..., 0.1092, 0.2500, 0.0937],
         [0.1378, 0.4302, 0.2045,  ..., 0.3493, 0.2500, 0.1073],
         [0.6568, 0.2283, 0.3865,  ..., 0.3107, 0.2500, 0.6886]],
        [[0.1721, 0.4605, 0.3381,  ..., 0.4679, 0.1922, 0.3115],
         [0.2903, 0.1960, 0.2206,  ..., 0.2069, 0.1922, 0.2931],
         [0.3705, 0.1717, 0.2206,  ..., 0.1626, 0.1922, 0.2345],
         [0.1671, 0.1717, 0.2206,  ..., 0.1626, 0.4234, 0.1609]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 478:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1491, 0.1651, 0.1490,  ..., 0.1500, 0.1381, 0.1208],
         [0.1491, 0.1677, 0.1490,  ..., 0.1500, 0.1381, 0.1208],
         [0.1491, 0.1651, 0.1490,  ..., 0.1500, 0.1381, 0.1208],
         [0.5528, 0.5022, 0.5530,  ..., 0.5499, 0.5857, 0.6377]],
        [[0.2500, 0.2448, 0.2500,  ..., 0.2498, 0.2447, 0.2453],
         [0.2500, 0.2657, 0.2500,  ..., 0.2508, 0.2660, 0.2640],
         [0.2500, 0.2448, 0.2500,  ..., 0.2498, 0.2447, 0.2453],
         [0.2500, 0.2448, 0.2500,  ..., 0.2498, 0.2447, 0.2453]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:10:32,420 [Process: 0] Synchronize training processes
2024-08-16 13:10:32,420 [Process: 0] Evaluating...
2024-08-16 13:10:32,422 [Process: 0] EPOCH 479:
2024-08-16 13:10:32,424 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1834, 0.2034, 0.1703,  ..., 0.1477, 0.5600, 0.1511],
         [0.1910, 0.3433, 0.1703,  ..., 0.1477, 0.0464, 0.1511],
         [0.1834, 0.2034, 0.1703,  ..., 0.1477, 0.3051, 0.1511],
         [0.4421, 0.2500, 0.4891,  ..., 0.5570, 0.0885, 0.5467]],
        [[0.2065, 0.2907, 0.2500,  ..., 0.2571, 0.3101, 0.3752],
         [0.3918, 0.3535, 0.2500,  ..., 0.2664, 0.3267, 0.3220],
         [0.2009, 0.1779, 0.2500,  ..., 0.2382, 0.1816, 0.1514],
         [0.2009, 0.1779, 0.2500,  ..., 0.2382, 0.1816, 0.1514]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 479:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1612, 0.1544, 0.1796,  ..., 0.1483, 0.1235, 0.1672],
         [0.1612, 0.1544, 0.1796,  ..., 0.1483, 0.1235, 0.1672],
         [0.1612, 0.1544, 0.1796,  ..., 0.1483, 0.1235, 0.1672],
         [0.5163, 0.5367, 0.4613,  ..., 0.5551, 0.6294, 0.4983]],
        [[0.2500, 0.2500, 0.2486,  ..., 0.2457, 0.2475, 0.2500],
         [0.2500, 0.2500, 0.2542,  ..., 0.2629, 0.2576, 0.2500],
         [0.2500, 0.2500, 0.2486,  ..., 0.2457, 0.2475, 0.2500],
         [0.2500, 0.2500, 0.2486,  ..., 0.2457, 0.2475, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:10:34,316 [Process: 0] Synchronize training processes
2024-08-16 13:10:34,317 [Process: 0] Evaluating...
2024-08-16 13:10:34,318 [Process: 0] EPOCH 480:
2024-08-16 13:10:34,320 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4442, 0.1368, 0.1392,  ..., 0.2637, 0.3206, 0.1436],
         [0.1294, 0.1368, 0.1392,  ..., 0.2997, 0.1387, 0.1436],
         [0.1295, 0.1368, 0.1610,  ..., 0.1762, 0.1387, 0.1436],
         [0.2969, 0.5895, 0.5605,  ..., 0.2605, 0.4020, 0.5693]],
        [[0.2227, 0.4509, 0.2079,  ..., 0.2316, 0.2450, 0.5108],
         [0.3320, 0.1923, 0.3763,  ..., 0.4911, 0.2450, 0.2637],
         [0.2227, 0.1784, 0.2079,  ..., 0.1387, 0.2650, 0.1127],
         [0.2227, 0.1784, 0.2079,  ..., 0.1387, 0.2450, 0.1127]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 480:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1469, 0.1687, 0.1423,  ..., 0.1509, 0.1370, 0.1317],
         [0.1469, 0.1687, 0.1423,  ..., 0.1509, 0.1370, 0.1317],
         [0.1469, 0.1687, 0.1423,  ..., 0.1509, 0.1370, 0.1317],
         [0.5592, 0.4939, 0.5730,  ..., 0.5474, 0.5891, 0.6049]],
        [[0.2500, 0.2460, 0.2500,  ..., 0.2436, 0.2473, 0.2500],
         [0.2500, 0.2621, 0.2500,  ..., 0.2618, 0.2473, 0.2500],
         [0.2500, 0.2460, 0.2500,  ..., 0.2511, 0.2580, 0.2500],
         [0.2500, 0.2460, 0.2500,  ..., 0.2436, 0.2473, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:10:36,219 [Process: 0] Synchronize training processes
2024-08-16 13:10:36,220 [Process: 0] Evaluating...
2024-08-16 13:10:36,221 [Process: 0] EPOCH 481:
2024-08-16 13:10:36,223 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1675, 0.2221, 0.1535,  ..., 0.1337, 0.2311, 0.0868],
         [0.1690, 0.2221, 0.3079,  ..., 0.1337, 0.1833, 0.0868],
         [0.1675, 0.2527, 0.2794,  ..., 0.3519, 0.1903, 0.0868],
         [0.4960, 0.3030, 0.2593,  ..., 0.3807, 0.3952, 0.7397]],
        [[0.4141, 0.3512, 0.1653,  ..., 0.2199, 0.5474, 0.1757],
         [0.1797, 0.2172, 0.2908,  ..., 0.3596, 0.2210, 0.2692],
         [0.3310, 0.2158, 0.4398,  ..., 0.3187, 0.1907, 0.5062],
         [0.0752, 0.2158, 0.1041,  ..., 0.1018, 0.0410, 0.0489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 481:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1660, 0.1448, 0.1299,  ..., 0.1864, 0.1299, 0.1703],
         [0.1660, 0.1448, 0.1299,  ..., 0.1864, 0.1299, 0.1703],
         [0.1660, 0.1448, 0.1299,  ..., 0.1864, 0.1299, 0.1703],
         [0.5019, 0.5656, 0.6104,  ..., 0.4409, 0.6104, 0.4892]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:10:38,129 [Process: 0] Synchronize training processes
2024-08-16 13:10:38,130 [Process: 0] Evaluating...
2024-08-16 13:10:38,132 [Process: 0] EPOCH 482:
2024-08-16 13:10:38,134 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2006, 0.1312, 0.1821,  ..., 0.1775, 0.1676, 0.1376],
         [0.2006, 0.1312, 0.1821,  ..., 0.1775, 0.1676, 0.1376],
         [0.2006, 0.1312, 0.1821,  ..., 0.1775, 0.1676, 0.1376],
         [0.3981, 0.6065, 0.4537,  ..., 0.4674, 0.4971, 0.5871]],
        [[0.3155, 0.3888, 0.4157,  ..., 0.2728, 0.2176, 0.1371],
         [0.2885, 0.1542, 0.1948,  ..., 0.2324, 0.5893, 0.5611],
         [0.1980, 0.3032, 0.1948,  ..., 0.4320, 0.1227, 0.1651],
         [0.1980, 0.1538, 0.1948,  ..., 0.0629, 0.0704, 0.1367]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 482:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1510, 0.1826, 0.1296,  ..., 0.1484, 0.1799, 0.1265],
         [0.1510, 0.1826, 0.1296,  ..., 0.1484, 0.1799, 0.1265],
         [0.1510, 0.1826, 0.1296,  ..., 0.1484, 0.1799, 0.1265],
         [0.5469, 0.4522, 0.6112,  ..., 0.5548, 0.4603, 0.6205]],
        [[0.2476, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2571, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2476, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2476, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:10:40,031 [Process: 0] Synchronize training processes
2024-08-16 13:10:40,031 [Process: 0] Evaluating...
2024-08-16 13:10:40,033 [Process: 0] EPOCH 483:
2024-08-16 13:10:40,035 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1861, 0.1406, 0.1570,  ..., 0.1614, 0.1633, 0.1411],
         [0.1861, 0.1406, 0.1570,  ..., 0.1614, 0.1633, 0.1411],
         [0.1861, 0.1406, 0.1570,  ..., 0.1614, 0.1633, 0.1411],
         [0.4418, 0.5782, 0.5289,  ..., 0.5157, 0.5101, 0.5767]],
        [[0.2953, 0.2284, 0.2500,  ..., 0.3001, 0.3108, 0.4433],
         [0.3122, 0.3103, 0.2500,  ..., 0.3525, 0.3731, 0.2295],
         [0.2441, 0.2982, 0.2500,  ..., 0.1860, 0.1693, 0.1636],
         [0.1484, 0.1632, 0.2500,  ..., 0.1614, 0.1469, 0.1636]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 483:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1351, 0.1179, 0.1243,  ..., 0.1635, 0.1197, 0.1629],
         [0.1351, 0.1179, 0.1243,  ..., 0.1635, 0.1197, 0.1629],
         [0.1351, 0.1179, 0.1243,  ..., 0.1635, 0.1197, 0.1629],
         [0.5947, 0.6464, 0.6270,  ..., 0.5095, 0.6410, 0.5113]],
        [[0.2500, 0.2500, 0.2499,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2502,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2499,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2499,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:10:41,935 [Process: 0] Synchronize training processes
2024-08-16 13:10:41,935 [Process: 0] Evaluating...
2024-08-16 13:10:41,937 [Process: 0] EPOCH 484:
2024-08-16 13:10:41,939 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1282, 0.1483, 0.2186,  ..., 0.1487, 0.1553, 0.1717],
         [0.1282, 0.1483, 0.2186,  ..., 0.1487, 0.1553, 0.1717],
         [0.1282, 0.1483, 0.2186,  ..., 0.1487, 0.1553, 0.1717],
         [0.6153, 0.5550, 0.3443,  ..., 0.5538, 0.5342, 0.4848]],
        [[0.2516, 0.3612, 0.1768,  ..., 0.4039, 0.2287, 0.3462],
         [0.2157, 0.2281, 0.2230,  ..., 0.2074, 0.2318, 0.3467],
         [0.3687, 0.2438, 0.4689,  ..., 0.3037, 0.4279, 0.2013],
         [0.1639, 0.1670, 0.1314,  ..., 0.0851, 0.1115, 0.1058]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 484:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1650, 0.1231, 0.1779,  ..., 0.1412, 0.1654, 0.1301],
         [0.1650, 0.1231, 0.1779,  ..., 0.1412, 0.1654, 0.1301],
         [0.1650, 0.1231, 0.1779,  ..., 0.1412, 0.1654, 0.1301],
         [0.5049, 0.6308, 0.4663,  ..., 0.5765, 0.5039, 0.6096]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:10:43,868 [Process: 0] Synchronize training processes
2024-08-16 13:10:43,868 [Process: 0] Evaluating...
2024-08-16 13:10:43,870 [Process: 0] EPOCH 485:
2024-08-16 13:10:43,872 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1549, 0.1666, 0.1547,  ..., 0.1588, 0.2628, 0.1793],
         [0.1549, 0.1666, 0.1611,  ..., 0.1588, 0.1647, 0.1793],
         [0.1549, 0.1666, 0.1547,  ..., 0.1588, 0.1647, 0.1793],
         [0.5352, 0.5002, 0.5295,  ..., 0.5235, 0.4077, 0.4622]],
        [[0.2191, 0.1670, 0.5426,  ..., 0.3115, 0.1682, 0.3928],
         [0.3908, 0.2752, 0.1995,  ..., 0.3450, 0.2491, 0.1637],
         [0.3155, 0.4666, 0.1294,  ..., 0.2288, 0.4678, 0.3363],
         [0.0745, 0.0912, 0.1285,  ..., 0.1146, 0.1150, 0.1071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 485:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1326, 0.1710, 0.0954,  ..., 0.1150, 0.1398, 0.1305],
         [0.1326, 0.1710, 0.0954,  ..., 0.1150, 0.1418, 0.1305],
         [0.1326, 0.1710, 0.0954,  ..., 0.1150, 0.1398, 0.1305],
         [0.6022, 0.4871, 0.7139,  ..., 0.6551, 0.5786, 0.6085]],
        [[0.2478, 0.2500, 0.2500,  ..., 0.2500, 0.2495, 0.2500],
         [0.2567, 0.2500, 0.2500,  ..., 0.2500, 0.2495, 0.2500],
         [0.2478, 0.2500, 0.2500,  ..., 0.2500, 0.2514, 0.2500],
         [0.2478, 0.2500, 0.2500,  ..., 0.2500, 0.2495, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:10:45,762 [Process: 0] Synchronize training processes
2024-08-16 13:10:45,762 [Process: 0] Evaluating...
2024-08-16 13:10:45,764 [Process: 0] EPOCH 486:
2024-08-16 13:10:45,766 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.2092, 0.1689, 0.1514,  ..., 0.1744, 0.1809, 0.1359],
         [0.2092, 0.1689, 0.1514,  ..., 0.1744, 0.1809, 0.1359],
         [0.2092, 0.1689, 0.1514,  ..., 0.1744, 0.1809, 0.1359],
         [0.3725, 0.4933, 0.5459,  ..., 0.4769, 0.4574, 0.5924]],
        [[0.1619, 0.1312, 0.2829,  ..., 0.1645, 0.3405, 0.2130],
         [0.1619, 0.2896, 0.3595,  ..., 0.2365, 0.2668, 0.4031],
         [0.5144, 0.4714, 0.1841,  ..., 0.4940, 0.2737, 0.2348],
         [0.1619, 0.1078, 0.1736,  ..., 0.1050, 0.1190, 0.1492]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 486:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1537, 0.1397, 0.1163,  ..., 0.1406, 0.1274, 0.1378],
         [0.1537, 0.1397, 0.1163,  ..., 0.1406, 0.1274, 0.1378],
         [0.1537, 0.1397, 0.1163,  ..., 0.1406, 0.1274, 0.1378],
         [0.5389, 0.5810, 0.6512,  ..., 0.5781, 0.6177, 0.5865]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2493, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2521, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2493, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2493, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3742, 0.1516, 0.1444,  ..., 0.1140, 0.1470, 0.1700],
         [0.1445, 0.1516, 0.1444,  ..., 0.1140, 0.3262, 0.1271],
         [0.1355, 0.1516, 0.1444,  ..., 0.1140, 0.1470, 0.1271],
         [0.3458, 0.5451, 0.5668,  ..., 0.6579, 0.3798, 0.5757]],
        [[0.2475, 0.2500, 0.2782,  ..., 0.3010, 0.1788, 0.2587],
         [0.1694, 0.2500, 0.2830,  ..., 0.4345, 0.1788, 0.1296],
         [0.4682, 0.2500, 0.2933,  ..., 0.2025, 0.4635, 0.4822],
         [0.1149, 0.2500, 0.1455,  ..., 0.0620, 0.1788, 0.1296]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:10:47,678 [Process: 0] Synchronize training processes
2024-08-16 13:10:47,678 [Process: 0] Evaluating...
2024-08-16 13:10:47,680 [Process: 0] EPOCH 487:
2024-08-16 13:10:47,682 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 487:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1408, 0.1143, 0.1736,  ..., 0.1622, 0.1613, 0.1302],
         [0.1408, 0.1212, 0.1736,  ..., 0.1746, 0.1613, 0.1302],
         [0.1408, 0.1143, 0.1736,  ..., 0.1622, 0.1613, 0.1302],
         [0.5775, 0.6503, 0.4792,  ..., 0.5009, 0.5161, 0.6094]],
        [[0.2477, 0.2527, 0.2781,  ..., 0.2469, 0.2479, 0.2500],
         [0.2568, 0.2516, 0.2406,  ..., 0.2592, 0.2564, 0.2500],
         [0.2477, 0.2478, 0.2406,  ..., 0.2469, 0.2479, 0.2500],
         [0.2477, 0.2478, 0.2406,  ..., 0.2469, 0.2479, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1578, 0.1676, 0.1555,  ..., 0.1929, 0.1701, 0.1757],
         [0.1578, 0.1676, 0.1555,  ..., 0.1929, 0.1701, 0.1757],
         [0.1578, 0.1676, 0.1555,  ..., 0.1929, 0.1701, 0.1757],
         [0.5267, 0.4972, 0.5334,  ..., 0.4212, 0.4898, 0.4728]],
        [[0.2012, 0.3534, 0.2700,  ..., 0.2642, 0.2350, 0.2392],
         [0.2153, 0.2119, 0.1703,  ..., 0.2508, 0.4291, 0.1902],
         [0.3824, 0.3205, 0.4075,  ..., 0.3869, 0.2273, 0.4385],
         [0.2012, 0.1142, 0.1521,  ..., 0.0980, 0.1086, 0.1321]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 488:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:10:49,587 [Process: 0] Synchronize training processes
2024-08-16 13:10:49,587 [Process: 0] Evaluating...
2024-08-16 13:10:49,589 [Process: 0] EPOCH 488:
2024-08-16 13:10:49,591 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1286, 0.1122, 0.1672,  ..., 0.1752, 0.1601, 0.1792],
         [0.1286, 0.1122, 0.1672,  ..., 0.1752, 0.1601, 0.1792],
         [0.1286, 0.1122, 0.1672,  ..., 0.1752, 0.1601, 0.1792],
         [0.6143, 0.6633, 0.4984,  ..., 0.4743, 0.5198, 0.4623]],
        [[0.2430, 0.2544, 0.2442,  ..., 0.2500, 0.2500, 0.2500],
         [0.2709, 0.2539, 0.2752,  ..., 0.2500, 0.2500, 0.2500],
         [0.2430, 0.2459, 0.2464,  ..., 0.2500, 0.2500, 0.2500],
         [0.2430, 0.2459, 0.2343,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1415, 0.2420, 0.1480,  ..., 0.2043, 0.0952, 0.4163],
         [0.1415, 0.1943, 0.1480,  ..., 0.2043, 0.0937, 0.1409],
         [0.1415, 0.1943, 0.1480,  ..., 0.2043, 0.0937, 0.1409],
         [0.5756, 0.3694, 0.5561,  ..., 0.3872, 0.7174, 0.3019]],
        [[0.2070, 0.3432, 0.1548,  ..., 0.2784, 0.3557, 0.1902],
         [0.4530, 0.2349, 0.4279,  ..., 0.2401, 0.1700, 0.2275],
         [0.1895, 0.2612, 0.2625,  ..., 0.3706, 0.4176, 0.3921],
         [0.1506, 0.1607, 0.1548,  ..., 0.1109, 0.0568, 0.1902]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 489:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:10:51,480 [Process: 0] Synchronize training processes
2024-08-16 13:10:51,481 [Process: 0] Evaluating...
2024-08-16 13:10:51,482 [Process: 0] EPOCH 489:
2024-08-16 13:10:51,484 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1143, 0.1470, 0.1669,  ..., 0.1695, 0.1531, 0.1700],
         [0.1143, 0.1470, 0.1669,  ..., 0.1695, 0.1531, 0.1700],
         [0.1143, 0.1470, 0.1669,  ..., 0.1695, 0.1531, 0.1700],
         [0.6572, 0.5590, 0.4993,  ..., 0.4914, 0.5408, 0.4901]],
        [[0.2486, 0.2500, 0.2500,  ..., 0.2443, 0.2500, 0.2500],
         [0.2541, 0.2500, 0.2500,  ..., 0.2672, 0.2500, 0.2500],
         [0.2486, 0.2500, 0.2500,  ..., 0.2443, 0.2500, 0.2500],
         [0.2486, 0.2500, 0.2500,  ..., 0.2443, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1240, 0.2194, 0.1049,  ..., 0.1615, 0.1285, 0.1384],
         [0.1240, 0.2383, 0.1049,  ..., 0.1688, 0.1285, 0.3109],
         [0.1240, 0.2194, 0.1049,  ..., 0.1615, 0.1285, 0.1865],
         [0.6279, 0.3230, 0.6854,  ..., 0.5083, 0.6144, 0.3643]],
        [[0.1337, 0.2904, 0.3731,  ..., 0.1869, 0.2717, 0.1067],
         [0.1426, 0.1402, 0.1165,  ..., 0.1869, 0.3246, 0.1067],
         [0.6220, 0.4293, 0.4387,  ..., 0.4394, 0.3105, 0.6800],
         [0.1017, 0.1402, 0.0716,  ..., 0.1869, 0.0932, 0.1067]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 490:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:10:53,383 [Process: 0] Synchronize training processes
2024-08-16 13:10:53,383 [Process: 0] Evaluating...
2024-08-16 13:10:53,385 [Process: 0] EPOCH 490:
2024-08-16 13:10:53,387 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1741, 0.1649, 0.1413,  ..., 0.1303, 0.1283, 0.1629],
         [0.1752, 0.1649, 0.1413,  ..., 0.1303, 0.1283, 0.1629],
         [0.1741, 0.1649, 0.1413,  ..., 0.1303, 0.1283, 0.1629],
         [0.4767, 0.5054, 0.5761,  ..., 0.6092, 0.6151, 0.5113]],
        [[0.2500, 0.2490, 0.2500,  ..., 0.2621, 0.2497, 0.2463],
         [0.2500, 0.2529, 0.2500,  ..., 0.2460, 0.2509, 0.2505],
         [0.2500, 0.2490, 0.2500,  ..., 0.2460, 0.2497, 0.2569],
         [0.2500, 0.2490, 0.2500,  ..., 0.2460, 0.2497, 0.2463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1823, 0.1582, 0.1587,  ..., 0.1716, 0.2038, 0.2638],
         [0.2117, 0.1582, 0.1587,  ..., 0.1716, 0.2038, 0.1965],
         [0.1823, 0.1582, 0.1587,  ..., 0.1716, 0.2038, 0.1965],
         [0.4237, 0.5255, 0.5240,  ..., 0.4851, 0.3885, 0.3432]],
        [[0.3052, 0.1878, 0.1885,  ..., 0.3253, 0.4091, 0.2628],
         [0.1428, 0.1878, 0.2750,  ..., 0.4522, 0.2474, 0.4599],
         [0.4093, 0.4367, 0.3481,  ..., 0.1580, 0.2525, 0.1980],
         [0.1428, 0.1878, 0.1885,  ..., 0.0645, 0.0910, 0.0793]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 491:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:10:55,284 [Process: 0] Synchronize training processes
2024-08-16 13:10:55,284 [Process: 0] Evaluating...
2024-08-16 13:10:55,286 [Process: 0] EPOCH 491:
2024-08-16 13:10:55,288 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1267, 0.1521, 0.1671,  ..., 0.1441, 0.1607, 0.1615],
         [0.1267, 0.1609, 0.1806,  ..., 0.1441, 0.1607, 0.1615],
         [0.1267, 0.1521, 0.1671,  ..., 0.1441, 0.1607, 0.1615],
         [0.6200, 0.5349, 0.4851,  ..., 0.5678, 0.5179, 0.5155]],
        [[0.2500, 0.2500, 0.2456,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2631,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2456,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2456,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1493, 0.1553, 0.1293,  ..., 0.2095, 0.1602, 0.1257],
         [0.1493, 0.1553, 0.1293,  ..., 0.2095, 0.1602, 0.1257],
         [0.1493, 0.1553, 0.1293,  ..., 0.2095, 0.1602, 0.1257],
         [0.5522, 0.5342, 0.6120,  ..., 0.3715, 0.5195, 0.6228]],
        [[0.1917, 0.1892, 0.2830,  ..., 0.2169, 0.4661, 0.2978],
         [0.1917, 0.1667, 0.2878,  ..., 0.2054, 0.1770, 0.4019],
         [0.4249, 0.4831, 0.2675,  ..., 0.4433, 0.2699, 0.1905],
         [0.1917, 0.1609, 0.1617,  ..., 0.1344, 0.0869, 0.1099]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 492:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:10:57,179 [Process: 0] Synchronize training processes
2024-08-16 13:10:57,179 [Process: 0] Evaluating...
2024-08-16 13:10:57,181 [Process: 0] EPOCH 492:
2024-08-16 13:10:57,183 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1618, 0.1379, 0.1401,  ..., 0.1452, 0.1536, 0.1389],
         [0.1618, 0.1379, 0.1401,  ..., 0.1452, 0.1536, 0.1389],
         [0.1618, 0.1379, 0.1401,  ..., 0.1452, 0.1536, 0.1389],
         [0.5147, 0.5862, 0.5796,  ..., 0.5643, 0.5392, 0.5834]],
        [[0.2500, 0.2487, 0.2500,  ..., 0.2500, 0.2456, 0.2500],
         [0.2500, 0.2538, 0.2500,  ..., 0.2500, 0.2628, 0.2500],
         [0.2500, 0.2487, 0.2500,  ..., 0.2500, 0.2460, 0.2500],
         [0.2500, 0.2487, 0.2500,  ..., 0.2500, 0.2456, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1590, 0.1925, 0.2141,  ..., 0.2119, 0.1306, 0.6108],
         [0.1590, 0.1925, 0.2141,  ..., 0.2086, 0.1306, 0.2167],
         [0.1590, 0.1925, 0.2141,  ..., 0.1504, 0.1306, 0.0622],
         [0.5230, 0.4224, 0.3576,  ..., 0.4292, 0.6081, 0.1103]],
        [[0.2997, 0.2152, 0.2127,  ..., 0.3603, 0.1654, 0.4992],
         [0.2599, 0.3545, 0.1838,  ..., 0.3247, 0.1796, 0.1758],
         [0.3192, 0.2152, 0.4197,  ..., 0.1625, 0.5164, 0.1625],
         [0.1212, 0.2152, 0.1838,  ..., 0.1524, 0.1387, 0.1625]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 493:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:10:59,077 [Process: 0] Synchronize training processes
2024-08-16 13:10:59,077 [Process: 0] Evaluating...
2024-08-16 13:10:59,079 [Process: 0] EPOCH 493:
2024-08-16 13:10:59,081 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1459, 0.1173, 0.1385,  ..., 0.1522, 0.1294, 0.1446],
         [0.1459, 0.1310, 0.1385,  ..., 0.1522, 0.1294, 0.1446],
         [0.1459, 0.1173, 0.1385,  ..., 0.1522, 0.1294, 0.1446],
         [0.5623, 0.6343, 0.5844,  ..., 0.5435, 0.6118, 0.5663]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1534, 0.1561, 0.1708,  ..., 0.1476, 0.1395, 0.1777],
         [0.1534, 0.2356, 0.1708,  ..., 0.1476, 0.1395, 0.1777],
         [0.1534, 0.1561, 0.1708,  ..., 0.1476, 0.1395, 0.1777],
         [0.5398, 0.4522, 0.4876,  ..., 0.5572, 0.5814, 0.4670]],
        [[0.1540, 0.2999, 0.3885,  ..., 0.2736, 0.2738, 0.2595],
         [0.3243, 0.2360, 0.2207,  ..., 0.4030, 0.3752, 0.1674],
         [0.3913, 0.3934, 0.2045,  ..., 0.1684, 0.2168, 0.4056],
         [0.1304, 0.0707, 0.1862,  ..., 0.1550, 0.1342, 0.1674]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 494:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:11:00,985 [Process: 0] Synchronize training processes
2024-08-16 13:11:00,985 [Process: 0] Evaluating...
2024-08-16 13:11:00,987 [Process: 0] EPOCH 494:
2024-08-16 13:11:00,989 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2014, 0.1927, 0.1511,  ..., 0.1343, 0.1296, 0.1288],
         [0.2035, 0.1927, 0.1511,  ..., 0.1343, 0.1296, 0.1288],
         [0.2014, 0.1927, 0.1511,  ..., 0.1343, 0.1296, 0.1288],
         [0.3937, 0.4219, 0.5467,  ..., 0.5970, 0.6113, 0.6136]],
        [[0.2659, 0.2500, 0.2499,  ..., 0.2519, 0.2500, 0.2546],
         [0.2447, 0.2500, 0.2502,  ..., 0.2494, 0.2500, 0.2485],
         [0.2447, 0.2500, 0.2499,  ..., 0.2494, 0.2500, 0.2485],
         [0.2447, 0.2500, 0.2499,  ..., 0.2494, 0.2500, 0.2485]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1494, 0.1493, 0.1740,  ..., 0.1757, 0.1165, 0.1689],
         [0.1494, 0.1493, 0.1740,  ..., 0.1757, 0.1165, 0.1788],
         [0.1494, 0.1493, 0.1740,  ..., 0.1757, 0.1165, 0.1689],
         [0.5519, 0.5522, 0.4781,  ..., 0.4730, 0.6506, 0.4834]],
        [[0.3376, 0.2482, 0.5524,  ..., 0.1775, 0.3911, 0.1819],
         [0.1901, 0.2482, 0.1563,  ..., 0.1650, 0.4593, 0.1819],
         [0.2822, 0.2555, 0.1945,  ..., 0.4926, 0.0924, 0.4544],
         [0.1901, 0.2482, 0.0968,  ..., 0.1650, 0.0572, 0.1819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 495:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-16 13:11:02,884 [Process: 0] Synchronize training processes
2024-08-16 13:11:02,885 [Process: 0] Evaluating...
2024-08-16 13:11:02,887 [Process: 0] EPOCH 495:
2024-08-16 13:11:02,889 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:11:04,782 [Process: 0] Synchronize training processes
2024-08-16 13:11:04,783 [Process: 0] Evaluating...
2024-08-16 13:11:04,785 [Process: 0] EPOCH 496:
2024-08-16 13:11:04,787 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1632, 0.1677, 0.1633,  ..., 0.1531, 0.1366, 0.1588],
         [0.1632, 0.1677, 0.1642,  ..., 0.1531, 0.1366, 0.1588],
         [0.1632, 0.1677, 0.1633,  ..., 0.1531, 0.1366, 0.1588],
         [0.5103, 0.4970, 0.5092,  ..., 0.5407, 0.5901, 0.5235]],
        [[0.2476, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2571, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2476, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2476, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1462, 0.1637, 0.1561,  ..., 0.1422, 0.1843, 0.1561],
         [0.1462, 0.1637, 0.1561,  ..., 0.1422, 0.1843, 0.1855],
         [0.1462, 0.1637, 0.1561,  ..., 0.1422, 0.1843, 0.1561],
         [0.5614, 0.5089, 0.5318,  ..., 0.5734, 0.4471, 0.5022]],
        [[0.1418, 0.4220, 0.3335,  ..., 0.2650, 0.2460, 0.2728],
         [0.5180, 0.2174, 0.2635,  ..., 0.3319, 0.3499, 0.2571],
         [0.2496, 0.2908, 0.2015,  ..., 0.2620, 0.2865, 0.3173],
         [0.0907, 0.0697, 0.2015,  ..., 0.1411, 0.1176, 0.1529]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 496:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1618, 0.1101, 0.1311,  ..., 0.1116, 0.1446, 0.1775],
         [0.1618, 0.1101, 0.1311,  ..., 0.1116, 0.1446, 0.1775],
         [0.1618, 0.1101, 0.1311,  ..., 0.1116, 0.1446, 0.1775],
         [0.5145, 0.6696, 0.6067,  ..., 0.6651, 0.5661, 0.4675]],
        [[0.2476, 0.2471, 0.2500,  ..., 0.2473, 0.2496, 0.2500],
         [0.2702, 0.2586, 0.2500,  ..., 0.2473, 0.2513, 0.2500],
         [0.2411, 0.2471, 0.2500,  ..., 0.2582, 0.2496, 0.2500],
         [0.2411, 0.2471, 0.2500,  ..., 0.2473, 0.2496, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:06,677 [Process: 0] Synchronize training processes
2024-08-16 13:11:06,677 [Process: 0] Evaluating...
2024-08-16 13:11:06,679 [Process: 0] EPOCH 497:
2024-08-16 13:11:06,681 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1457, 0.1505, 0.1479,  ..., 0.1699, 0.1422, 0.1450],
         [0.1457, 0.1416, 0.1479,  ..., 0.1699, 0.1358, 0.1450],
         [0.1457, 0.1416, 0.1479,  ..., 0.1699, 0.1358, 0.1450],
         [0.5629, 0.5663, 0.5563,  ..., 0.4904, 0.5862, 0.5649]],
        [[0.1769, 0.2217, 0.2439,  ..., 0.5014, 0.1368, 0.4530],
         [0.3504, 0.2318, 0.2839,  ..., 0.2550, 0.2798, 0.3402],
         [0.3104, 0.3248, 0.3567,  ..., 0.1612, 0.4466, 0.1482],
         [0.1622, 0.2217, 0.1154,  ..., 0.0824, 0.1368, 0.0587]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 497:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1261, 0.1054, 0.1602,  ..., 0.1239, 0.1277, 0.1444],
         [0.1261, 0.1054, 0.1602,  ..., 0.1239, 0.1277, 0.1444],
         [0.1261, 0.1054, 0.1602,  ..., 0.1239, 0.1277, 0.1444],
         [0.6216, 0.6839, 0.5194,  ..., 0.6283, 0.6170, 0.5667]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2552],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2483],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2483],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:08,595 [Process: 0] Synchronize training processes
2024-08-16 13:11:08,595 [Process: 0] Evaluating...
2024-08-16 13:11:08,597 [Process: 0] EPOCH 498:
2024-08-16 13:11:08,599 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1411, 0.1525, 0.1417,  ..., 0.1867, 0.1179, 0.1383],
         [0.1411, 0.1890, 0.3314,  ..., 0.1867, 0.1179, 0.2652],
         [0.1411, 0.1525, 0.1185,  ..., 0.1867, 0.1179, 0.1383],
         [0.5766, 0.5061, 0.4084,  ..., 0.4399, 0.6464, 0.4583]],
        [[0.0947, 0.2463, 0.2309,  ..., 0.2752, 0.3059, 0.2219],
         [0.0947, 0.2463, 0.2814,  ..., 0.3316, 0.1335, 0.2219],
         [0.7159, 0.2612, 0.2726,  ..., 0.2468, 0.4860, 0.3343],
         [0.0947, 0.2463, 0.2151,  ..., 0.1464, 0.0746, 0.2219]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 498:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1301, 0.1644, 0.1442,  ..., 0.1828, 0.1825, 0.1644],
         [0.1338, 0.1644, 0.1442,  ..., 0.1828, 0.1886, 0.1644],
         [0.1301, 0.1644, 0.1442,  ..., 0.1828, 0.1825, 0.1644],
         [0.6060, 0.5067, 0.5673,  ..., 0.4516, 0.4465, 0.5068]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2464],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2604],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2468],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:10,499 [Process: 0] Synchronize training processes
2024-08-16 13:11:10,499 [Process: 0] Evaluating...
2024-08-16 13:11:10,501 [Process: 0] EPOCH 499:
2024-08-16 13:11:10,503 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1610, 0.1717, 0.1319,  ..., 0.1976, 0.1876, 0.1456],
         [0.1841, 0.1717, 0.2377,  ..., 0.1976, 0.2725, 0.1456],
         [0.1610, 0.2433, 0.1405,  ..., 0.1976, 0.1876, 0.1456],
         [0.4939, 0.4133, 0.4899,  ..., 0.4073, 0.3524, 0.5632]],
        [[0.0609, 0.5690, 0.2594,  ..., 0.2566, 0.4835, 0.2500],
         [0.5648, 0.1803, 0.2438,  ..., 0.2478, 0.1722, 0.2500],
         [0.3492, 0.1254, 0.2529,  ..., 0.2478, 0.1722, 0.2500],
         [0.0251, 0.1254, 0.2438,  ..., 0.2478, 0.1722, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 499:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1376, 0.1860, 0.1929,  ..., 0.1662, 0.1929, 0.1292],
         [0.1376, 0.1860, 0.1929,  ..., 0.1662, 0.1929, 0.1357],
         [0.1376, 0.1860, 0.1929,  ..., 0.1662, 0.1929, 0.1292],
         [0.5871, 0.4419, 0.4214,  ..., 0.5013, 0.4214, 0.6059]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2892, 0.2661, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2527, 0.2473, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2291, 0.2433, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2291, 0.2433, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:12,392 [Process: 0] Synchronize training processes
2024-08-16 13:11:12,393 [Process: 0] Evaluating...
2024-08-16 13:11:12,394 [Process: 0] EPOCH 500:
2024-08-16 13:11:12,396 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2175, 0.1448, 0.1621,  ..., 0.1187, 0.2279, 0.1882],
         [0.1519, 0.1322, 0.1621,  ..., 0.1187, 0.2277, 0.1882],
         [0.1519, 0.1208, 0.1621,  ..., 0.1187, 0.3167, 0.1882],
         [0.4787, 0.6022, 0.5136,  ..., 0.6438, 0.2277, 0.4353]],
        [[0.4758, 0.2587, 0.3651,  ..., 0.2397, 0.2449, 0.2085],
         [0.1368, 0.2600, 0.2925,  ..., 0.5053, 0.3427, 0.2085],
         [0.2666, 0.2406, 0.1758,  ..., 0.1853, 0.2516, 0.3746],
         [0.1209, 0.2406, 0.1666,  ..., 0.0698, 0.1608, 0.2085]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 500:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1546, 0.1843, 0.1728,  ..., 0.1215, 0.1409, 0.1150],
         [0.1546, 0.1843, 0.1728,  ..., 0.1215, 0.1409, 0.1150],
         [0.1546, 0.1843, 0.1728,  ..., 0.1215, 0.1409, 0.1150],
         [0.5363, 0.4470, 0.4816,  ..., 0.6356, 0.5773, 0.6549]],
        [[0.2486, 0.2920, 0.2500,  ..., 0.3019, 0.2500, 0.2500],
         [0.2541, 0.2457, 0.2500,  ..., 0.2331, 0.2500, 0.2500],
         [0.2486, 0.2311, 0.2500,  ..., 0.2325, 0.2500, 0.2500],
         [0.2486, 0.2311, 0.2500,  ..., 0.2325, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:14,320 [Process: 0] Synchronize training processes
2024-08-16 13:11:14,321 [Process: 0] Evaluating...
2024-08-16 13:11:14,323 [Process: 0] EPOCH 501:
2024-08-16 13:11:14,324 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2950, 0.1056, 0.1647,  ..., 0.1472, 0.2726, 0.1497],
         [0.1314, 0.1056, 0.1647,  ..., 0.1472, 0.2722, 0.1497],
         [0.1314, 0.1056, 0.1647,  ..., 0.1472, 0.4064, 0.1497],
         [0.4422, 0.6833, 0.5058,  ..., 0.5585, 0.0487, 0.5509]],
        [[0.2068, 0.3942, 0.2110,  ..., 0.1824, 0.2920, 0.1903],
         [0.2068, 0.2645, 0.2110,  ..., 0.2899, 0.2044, 0.1903],
         [0.3795, 0.2470, 0.3671,  ..., 0.3823, 0.2993, 0.4292],
         [0.2068, 0.0943, 0.2110,  ..., 0.1454, 0.2044, 0.1903]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 501:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1916, 0.1643, 0.1800,  ..., 0.1474, 0.1405, 0.1478],
         [0.1916, 0.1681, 0.1800,  ..., 0.1474, 0.1405, 0.1478],
         [0.1916, 0.1643, 0.1800,  ..., 0.1474, 0.1405, 0.1478],
         [0.4251, 0.5034, 0.4601,  ..., 0.5579, 0.5786, 0.5567]],
        [[0.2499, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2504, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2499, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2499, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:16,277 [Process: 0] Synchronize training processes
2024-08-16 13:11:16,277 [Process: 0] Evaluating...
2024-08-16 13:11:16,279 [Process: 0] EPOCH 502:
2024-08-16 13:11:16,281 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1359, 0.1562, 0.2050,  ..., 0.1349, 0.1654, 0.1635],
         [0.1254, 0.1562, 0.2050,  ..., 0.1349, 0.1654, 0.1635],
         [0.1254, 0.1562, 0.2050,  ..., 0.1349, 0.2527, 0.1635],
         [0.6132, 0.5314, 0.3850,  ..., 0.5952, 0.4165, 0.5094]],
        [[0.1316, 0.2738, 0.1953,  ..., 0.1779, 0.2312, 0.3510],
         [0.2731, 0.3696, 0.2601,  ..., 0.1779, 0.2432, 0.2667],
         [0.4638, 0.2115, 0.3494,  ..., 0.4664, 0.4140, 0.2117],
         [0.1316, 0.1452, 0.1953,  ..., 0.1779, 0.1116, 0.1706]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 502:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1451, 0.1286, 0.1319,  ..., 0.1543, 0.1430, 0.1955],
         [0.1451, 0.1356, 0.1319,  ..., 0.1543, 0.1559, 0.1955],
         [0.1451, 0.1286, 0.1319,  ..., 0.1543, 0.1430, 0.1955],
         [0.5646, 0.6071, 0.6044,  ..., 0.5372, 0.5581, 0.4136]],
        [[0.2497, 0.2500, 0.2500,  ..., 0.2492, 0.2492, 0.2473],
         [0.2509, 0.2500, 0.2500,  ..., 0.2523, 0.2523, 0.2582],
         [0.2497, 0.2500, 0.2500,  ..., 0.2492, 0.2492, 0.2473],
         [0.2497, 0.2500, 0.2500,  ..., 0.2492, 0.2492, 0.2473]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:18,188 [Process: 0] Synchronize training processes
2024-08-16 13:11:18,189 [Process: 0] Evaluating...
2024-08-16 13:11:18,191 [Process: 0] EPOCH 503:
2024-08-16 13:11:18,192 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1137, 0.2085, 0.1151,  ..., 0.1382, 0.1748, 0.1086],
         [0.1701, 0.2085, 0.1151,  ..., 0.1382, 0.1748, 0.1117],
         [0.1137, 0.2085, 0.1151,  ..., 0.1382, 0.1748, 0.1086],
         [0.6025, 0.3746, 0.6548,  ..., 0.5854, 0.4755, 0.6711]],
        [[0.2668, 0.1903, 0.2644,  ..., 0.2669, 0.1935, 0.3040],
         [0.2361, 0.1701, 0.1526,  ..., 0.2444, 0.2473, 0.3064],
         [0.3737, 0.5324, 0.4303,  ..., 0.2444, 0.3837, 0.3003],
         [0.1234, 0.1073, 0.1526,  ..., 0.2444, 0.1756, 0.0894]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 503:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0935, 0.1544, 0.1427,  ..., 0.1259, 0.1311, 0.1826],
         [0.0935, 0.1560, 0.1427,  ..., 0.1259, 0.1311, 0.1826],
         [0.0935, 0.1544, 0.1427,  ..., 0.1259, 0.1311, 0.1826],
         [0.7194, 0.5352, 0.5718,  ..., 0.6222, 0.6068, 0.4521]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2478],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2566],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2478],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2478]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:20,092 [Process: 0] Synchronize training processes
2024-08-16 13:11:20,093 [Process: 0] Evaluating...
2024-08-16 13:11:20,095 [Process: 0] EPOCH 504:
2024-08-16 13:11:20,097 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1509, 0.2586, 0.1700,  ..., 0.1463, 0.2132, 0.1445],
         [0.1509, 0.1879, 0.1700,  ..., 0.1463, 0.2132, 0.1445],
         [0.1509, 0.1404, 0.1639,  ..., 0.1463, 0.3449, 0.1445],
         [0.5473, 0.4131, 0.4961,  ..., 0.5612, 0.2288, 0.5664]],
        [[0.3516, 0.1632, 0.2049,  ..., 0.1924, 0.3956, 0.2806],
         [0.2386, 0.4364, 0.2166,  ..., 0.3358, 0.2679, 0.2306],
         [0.2328, 0.2548, 0.3737,  ..., 0.2910, 0.2155, 0.3265],
         [0.1770, 0.1456, 0.2049,  ..., 0.1808, 0.1210, 0.1623]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 504:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1685, 0.1576, 0.1614,  ..., 0.1679, 0.1649, 0.1639],
         [0.1685, 0.1576, 0.1614,  ..., 0.1679, 0.1675, 0.1639],
         [0.1685, 0.1576, 0.1614,  ..., 0.1679, 0.1649, 0.1639],
         [0.4946, 0.5272, 0.5158,  ..., 0.4964, 0.5027, 0.5083]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2495, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2525, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2490, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2490, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:21,991 [Process: 0] Synchronize training processes
2024-08-16 13:11:21,992 [Process: 0] Evaluating...
2024-08-16 13:11:21,994 [Process: 0] EPOCH 505:
2024-08-16 13:11:21,996 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1655, 0.1881, 0.1382,  ..., 0.2012, 0.1863, 0.1703],
         [0.1655, 0.1881, 0.1929,  ..., 0.1989, 0.1863, 0.1447],
         [0.1655, 0.1881, 0.1382,  ..., 0.1283, 0.1863, 0.1447],
         [0.5036, 0.4358, 0.5308,  ..., 0.4717, 0.4411, 0.5402]],
        [[0.2858, 0.1886, 0.3651,  ..., 0.3774, 0.3681, 0.3778],
         [0.2219, 0.2435, 0.1734,  ..., 0.2674, 0.3836, 0.2672],
         [0.3630, 0.3794, 0.2882,  ..., 0.2232, 0.1669, 0.2412],
         [0.1293, 0.1886, 0.1734,  ..., 0.1320, 0.0814, 0.1138]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 505:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1844, 0.1428, 0.1516,  ..., 0.1591, 0.2203, 0.1619],
         [0.1875, 0.1428, 0.1516,  ..., 0.1591, 0.2203, 0.1619],
         [0.1844, 0.1428, 0.1516,  ..., 0.1591, 0.2203, 0.1619],
         [0.4436, 0.5717, 0.5453,  ..., 0.5228, 0.3390, 0.5142]],
        [[0.2495, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2516, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:11:23,884 [Process: 0] Synchronize training processes
2024-08-16 13:11:23,885 [Process: 0] Evaluating...
2024-08-16 13:11:23,887 [Process: 0] EPOCH 506:
2024-08-16 13:11:23,889 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1235, 0.1920, 0.1022,  ..., 0.1322, 0.4108, 0.3782],
         [0.1235, 0.1920, 0.1022,  ..., 0.1322, 0.0884, 0.2031],
         [0.1235, 0.1920, 0.1022,  ..., 0.1322, 0.4124, 0.1124],
         [0.6294, 0.4239, 0.6933,  ..., 0.6034, 0.0884, 0.3062]],
        [[0.2902, 0.2136, 0.2629,  ..., 0.2555, 0.2963, 0.3155],
         [0.2720, 0.2840, 0.2749,  ..., 0.2453, 0.2765, 0.1774],
         [0.2227, 0.3675, 0.2311,  ..., 0.2539, 0.2948, 0.4474],
         [0.2151, 0.1349, 0.2311,  ..., 0.2453, 0.1323, 0.0596]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 506:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1304, 0.1848, 0.1697,  ..., 0.1245, 0.1118, 0.0916],
         [0.1377, 0.1848, 0.1697,  ..., 0.1245, 0.1118, 0.0916],
         [0.1304, 0.1848, 0.1697,  ..., 0.1245, 0.1118, 0.0916],
         [0.6015, 0.4455, 0.4908,  ..., 0.6265, 0.6645, 0.7251]],
        [[0.2489, 0.2448, 0.2486,  ..., 0.2500, 0.2500, 0.2500],
         [0.2533, 0.2507, 0.2543,  ..., 0.2500, 0.2500, 0.2500],
         [0.2489, 0.2596, 0.2486,  ..., 0.2500, 0.2500, 0.2500],
         [0.2489, 0.2448, 0.2486,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1345, 0.1613, 0.1330,  ..., 0.1416, 0.1772, 0.1284],
         [0.1718, 0.1613, 0.1680,  ..., 0.2146, 0.1772, 0.1530],
         [0.1345, 0.1613, 0.1330,  ..., 0.1416, 0.1772, 0.1284],
         [0.5592, 0.5162, 0.5660,  ..., 0.5022, 0.4684, 0.5901]],
        [[0.2454, 0.3642, 0.2537,  ..., 0.1893, 0.3135, 0.2286],
         [0.2454, 0.1080, 0.1828,  ..., 0.1893, 0.2837, 0.3201],
         [0.2638, 0.4274, 0.4255,  ..., 0.4320, 0.2014, 0.2486],
         [0.2454, 0.1004, 0.1380,  ..., 0.1893, 0.2014, 0.2027]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:25,779 [Process: 0] Synchronize training processes
2024-08-16 13:11:25,779 [Process: 0] Evaluating...
2024-08-16 13:11:25,781 [Process: 0] EPOCH 507:
2024-08-16 13:11:25,783 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 507:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1727, 0.1738, 0.1544,  ..., 0.1255, 0.1481, 0.1331],
         [0.1727, 0.1738, 0.1544,  ..., 0.1318, 0.1481, 0.1331],
         [0.1727, 0.1738, 0.1544,  ..., 0.1255, 0.1481, 0.1331],
         [0.4819, 0.4787, 0.5368,  ..., 0.6173, 0.5557, 0.6006]],
        [[0.2500, 0.2500, 0.2464,  ..., 0.2475, 0.2468, 0.2464],
         [0.2500, 0.2500, 0.2607,  ..., 0.2574, 0.2565, 0.2609],
         [0.2500, 0.2500, 0.2464,  ..., 0.2475, 0.2499, 0.2464],
         [0.2500, 0.2500, 0.2464,  ..., 0.2475, 0.2468, 0.2464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1411, 0.1407, 0.1601,  ..., 0.1767, 0.2058, 0.1229],
         [0.2163, 0.1407, 0.1601,  ..., 0.1767, 0.2058, 0.1229],
         [0.1411, 0.1407, 0.1601,  ..., 0.1767, 0.2058, 0.1229],
         [0.5015, 0.5779, 0.5197,  ..., 0.4699, 0.3826, 0.6313]],
        [[0.3206, 0.1787, 0.2285,  ..., 0.2500, 0.2026, 0.3064],
         [0.1572, 0.1906, 0.1956,  ..., 0.2500, 0.2026, 0.1751],
         [0.4254, 0.4521, 0.3803,  ..., 0.2500, 0.3921, 0.3876],
         [0.0968, 0.1787, 0.1956,  ..., 0.2500, 0.2026, 0.1310]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 508:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:11:27,678 [Process: 0] Synchronize training processes
2024-08-16 13:11:27,679 [Process: 0] Evaluating...
2024-08-16 13:11:27,681 [Process: 0] EPOCH 508:
2024-08-16 13:11:27,683 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1795, 0.1397, 0.1413,  ..., 0.1271, 0.1287, 0.1738],
         [0.1804, 0.1397, 0.1413,  ..., 0.1271, 0.1287, 0.1738],
         [0.1795, 0.1397, 0.1413,  ..., 0.1271, 0.1287, 0.1738],
         [0.4606, 0.5809, 0.5760,  ..., 0.6188, 0.6140, 0.4787]],
        [[0.2490, 0.2500, 0.2500,  ..., 0.2489, 0.2500, 0.2500],
         [0.2530, 0.2500, 0.2500,  ..., 0.2532, 0.2500, 0.2500],
         [0.2490, 0.2500, 0.2500,  ..., 0.2489, 0.2500, 0.2500],
         [0.2490, 0.2500, 0.2500,  ..., 0.2489, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1713, 0.1669, 0.1401,  ..., 0.1248, 0.1547, 0.1511],
         [0.1713, 0.1669, 0.1401,  ..., 0.1248, 0.1547, 0.1511],
         [0.1713, 0.1669, 0.1401,  ..., 0.1248, 0.1547, 0.1511],
         [0.4860, 0.4993, 0.5797,  ..., 0.6256, 0.5359, 0.5468]],
        [[0.3224, 0.3299, 0.2500,  ..., 0.1632, 0.2500, 0.2149],
         [0.2756, 0.1869, 0.2500,  ..., 0.1286, 0.2500, 0.2153],
         [0.2736, 0.3574, 0.2500,  ..., 0.6032, 0.2500, 0.3548],
         [0.1284, 0.1258, 0.2500,  ..., 0.1050, 0.2500, 0.2149]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 509:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:11:29,577 [Process: 0] Synchronize training processes
2024-08-16 13:11:29,578 [Process: 0] Evaluating...
2024-08-16 13:11:29,580 [Process: 0] EPOCH 509:
2024-08-16 13:11:29,581 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1577, 0.1925, 0.1293,  ..., 0.1657, 0.1857, 0.1294],
         [0.1577, 0.1925, 0.1293,  ..., 0.1768, 0.1857, 0.1294],
         [0.1577, 0.1925, 0.1293,  ..., 0.1657, 0.1857, 0.1294],
         [0.5268, 0.4225, 0.6120,  ..., 0.4919, 0.4429, 0.6119]],
        [[0.2405, 0.2500, 0.2499,  ..., 0.2539, 0.2500, 0.2500],
         [0.2784, 0.2500, 0.2503,  ..., 0.2560, 0.2500, 0.2500],
         [0.2405, 0.2500, 0.2499,  ..., 0.2450, 0.2500, 0.2500],
         [0.2405, 0.2500, 0.2499,  ..., 0.2450, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1239, 0.1414, 0.1163,  ..., 0.1550, 0.2332, 0.1616],
         [0.1239, 0.1414, 0.1541,  ..., 0.1550, 0.2332, 0.1322],
         [0.1239, 0.1414, 0.1163,  ..., 0.1550, 0.2552, 0.1322],
         [0.6283, 0.5758, 0.6132,  ..., 0.5351, 0.2784, 0.5740]],
        [[0.1845, 0.1461, 0.3121,  ..., 0.3560, 0.2956, 0.2320],
         [0.2211, 0.2187, 0.2262,  ..., 0.2469, 0.1825, 0.2795],
         [0.4098, 0.4891, 0.3297,  ..., 0.2536, 0.4180, 0.2566],
         [0.1845, 0.1461, 0.1320,  ..., 0.1434, 0.1040, 0.2320]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 510:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:11:31,473 [Process: 0] Synchronize training processes
2024-08-16 13:11:31,473 [Process: 0] Evaluating...
2024-08-16 13:11:31,475 [Process: 0] EPOCH 510:
2024-08-16 13:11:31,477 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1453, 0.1774, 0.1424,  ..., 0.1528, 0.1594, 0.1446],
         [0.1508, 0.1811, 0.1424,  ..., 0.1528, 0.1594, 0.1446],
         [0.1453, 0.1774, 0.1424,  ..., 0.1528, 0.1594, 0.1446],
         [0.5585, 0.4642, 0.5728,  ..., 0.5417, 0.5218, 0.5661]],
        [[0.2492, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2524, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2492, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2492, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1517, 0.1186, 0.4402,  ..., 0.1586, 0.1367, 0.1102],
         [0.1653, 0.1186, 0.1438,  ..., 0.1586, 0.1367, 0.1102],
         [0.1517, 0.1186, 0.1176,  ..., 0.1586, 0.2184, 0.1102],
         [0.5313, 0.6443, 0.2985,  ..., 0.5241, 0.5083, 0.6693]],
        [[0.3697, 0.2592, 0.2347,  ..., 0.2472, 0.3064, 0.2093],
         [0.2599, 0.2427, 0.2347,  ..., 0.2472, 0.1800, 0.3578],
         [0.2350, 0.3291, 0.2959,  ..., 0.2585, 0.3970, 0.2236],
         [0.1353, 0.1690, 0.2347,  ..., 0.2472, 0.1166, 0.2093]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 511:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:11:33,381 [Process: 0] Synchronize training processes
2024-08-16 13:11:33,382 [Process: 0] Evaluating...
2024-08-16 13:11:33,383 [Process: 0] EPOCH 511:
2024-08-16 13:11:33,385 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2022, 0.1856, 0.1553,  ..., 0.1565, 0.1398, 0.1504],
         [0.2022, 0.1856, 0.1645,  ..., 0.1565, 0.1398, 0.1504],
         [0.2022, 0.1856, 0.1553,  ..., 0.1565, 0.1398, 0.1504],
         [0.3934, 0.4431, 0.5249,  ..., 0.5306, 0.5806, 0.5487]],
        [[0.2500, 0.2500, 0.2471,  ..., 0.2500, 0.2483, 0.2500],
         [0.2500, 0.2500, 0.2587,  ..., 0.2500, 0.2552, 0.2500],
         [0.2500, 0.2500, 0.2471,  ..., 0.2500, 0.2483, 0.2500],
         [0.2500, 0.2500, 0.2471,  ..., 0.2500, 0.2483, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2184, 0.2208, 0.1693,  ..., 0.1625, 0.0874, 0.1204],
         [0.1563, 0.2078, 0.1591,  ..., 0.1625, 0.0874, 0.1133],
         [0.1563, 0.2078, 0.1519,  ..., 0.1625, 0.0874, 0.1133],
         [0.4689, 0.3636, 0.5196,  ..., 0.5125, 0.7379, 0.6530]],
        [[0.2500, 0.1982, 0.2462,  ..., 0.2103, 0.3316, 0.2795],
         [0.2500, 0.2805, 0.2732,  ..., 0.4016, 0.3123, 0.2527],
         [0.2500, 0.4322, 0.3306,  ..., 0.2699, 0.2634, 0.2339],
         [0.2500, 0.0891, 0.1501,  ..., 0.1181, 0.0927, 0.2339]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 512:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:11:35,287 [Process: 0] Synchronize training processes
2024-08-16 13:11:35,287 [Process: 0] Evaluating...
2024-08-16 13:11:35,289 [Process: 0] EPOCH 512:
2024-08-16 13:11:35,291 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1177, 0.1273, 0.1458,  ..., 0.1353, 0.1639, 0.1597],
         [0.1177, 0.1284, 0.1458,  ..., 0.1353, 0.1639, 0.1597],
         [0.1177, 0.1273, 0.1458,  ..., 0.1353, 0.1639, 0.1597],
         [0.6469, 0.6171, 0.5625,  ..., 0.5941, 0.5082, 0.5208]],
        [[0.2500, 0.2459, 0.2500,  ..., 0.2495, 0.2500, 0.2500],
         [0.2500, 0.2622, 0.2500,  ..., 0.2516, 0.2500, 0.2500],
         [0.2500, 0.2459, 0.2500,  ..., 0.2495, 0.2500, 0.2500],
         [0.2500, 0.2459, 0.2500,  ..., 0.2495, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1510, 0.1508, 0.1965,  ..., 0.2051, 0.2500, 0.1917],
         [0.1510, 0.1665, 0.1652,  ..., 0.1837, 0.2500, 0.1917],
         [0.1510, 0.1508, 0.1652,  ..., 0.1837, 0.2500, 0.1917],
         [0.5471, 0.5319, 0.4731,  ..., 0.4275, 0.2500, 0.4248]],
        [[0.2286, 0.2791, 0.2678,  ..., 0.2379, 0.3086, 0.3490],
         [0.2286, 0.2283, 0.2294,  ..., 0.2544, 0.3625, 0.2147],
         [0.3141, 0.3552, 0.2733,  ..., 0.3333, 0.2092, 0.2271],
         [0.2286, 0.1374, 0.2294,  ..., 0.1744, 0.1197, 0.2092]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 513:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:11:37,196 [Process: 0] Synchronize training processes
2024-08-16 13:11:37,196 [Process: 0] Evaluating...
2024-08-16 13:11:37,198 [Process: 0] EPOCH 513:
2024-08-16 13:11:37,200 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1677, 0.1130, 0.1509,  ..., 0.1546, 0.1705, 0.1598],
         [0.1677, 0.1130, 0.1509,  ..., 0.1546, 0.1705, 0.1598],
         [0.1677, 0.1130, 0.1509,  ..., 0.1546, 0.1705, 0.1598],
         [0.4970, 0.6611, 0.5474,  ..., 0.5361, 0.4885, 0.5205]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1724, 0.1717, 0.1612,  ..., 0.1852, 0.5583, 0.1867],
         [0.1724, 0.1568, 0.1626,  ..., 0.1852, 0.1409, 0.1867],
         [0.1724, 0.1352, 0.1612,  ..., 0.1852, 0.1489, 0.1867],
         [0.4827, 0.5363, 0.5150,  ..., 0.4443, 0.1519, 0.4398]],
        [[0.2069, 0.2450, 0.2269,  ..., 0.1903, 0.1796, 0.1330],
         [0.2139, 0.2101, 0.2269,  ..., 0.4879, 0.2368, 0.1887],
         [0.3724, 0.4298, 0.3193,  ..., 0.2152, 0.4524, 0.5897],
         [0.2069, 0.1151, 0.2269,  ..., 0.1066, 0.1312, 0.0886]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 514:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:11:39,091 [Process: 0] Synchronize training processes
2024-08-16 13:11:39,092 [Process: 0] Evaluating...
2024-08-16 13:11:39,094 [Process: 0] EPOCH 514:
2024-08-16 13:11:39,096 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1462, 0.1631, 0.1088,  ..., 0.1260, 0.1746, 0.1629],
         [0.1462, 0.1631, 0.1088,  ..., 0.1260, 0.1759, 0.1629],
         [0.1462, 0.1631, 0.1088,  ..., 0.1260, 0.1746, 0.1629],
         [0.5615, 0.5108, 0.6735,  ..., 0.6219, 0.4749, 0.5114]],
        [[0.2457, 0.2500, 0.2500,  ..., 0.2477, 0.2500, 0.2500],
         [0.2629, 0.2500, 0.2500,  ..., 0.2569, 0.2500, 0.2500],
         [0.2457, 0.2500, 0.2500,  ..., 0.2477, 0.2500, 0.2500],
         [0.2457, 0.2500, 0.2500,  ..., 0.2477, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1128, 0.1852, 0.1222,  ..., 0.1785, 0.2500, 0.1796],
         [0.1695, 0.1852, 0.1222,  ..., 0.3076, 0.2500, 0.1796],
         [0.1128, 0.1852, 0.1222,  ..., 0.1802, 0.2500, 0.1796],
         [0.6049, 0.4445, 0.6333,  ..., 0.3338, 0.2500, 0.4612]],
        [[0.2653, 0.2971, 0.2803,  ..., 0.2162, 0.2862, 0.2408],
         [0.4554, 0.2206, 0.3974,  ..., 0.2768, 0.4290, 0.4158],
         [0.2062, 0.2876, 0.2446,  ..., 0.3454, 0.1424, 0.1911],
         [0.0731, 0.1947, 0.0777,  ..., 0.1616, 0.1424, 0.1523]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 515:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:11:40,992 [Process: 0] Synchronize training processes
2024-08-16 13:11:40,992 [Process: 0] Evaluating...
2024-08-16 13:11:40,994 [Process: 0] EPOCH 515:
2024-08-16 13:11:40,996 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:11:42,896 [Process: 0] Synchronize training processes
2024-08-16 13:11:42,896 [Process: 0] Evaluating...
2024-08-16 13:11:42,898 [Process: 0] EPOCH 516:
2024-08-16 13:11:42,900 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1282, 0.1285, 0.1142,  ..., 0.1756, 0.1416, 0.1327],
         [0.1282, 0.1285, 0.1142,  ..., 0.1878, 0.1416, 0.1327],
         [0.1282, 0.1285, 0.1142,  ..., 0.1756, 0.1416, 0.1327],
         [0.6154, 0.6144, 0.6573,  ..., 0.4611, 0.5752, 0.6020]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2489, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2532, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2489, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2489, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2875, 0.1439, 0.3134,  ..., 0.1404, 0.5736, 0.1291],
         [0.1364, 0.1743, 0.2013,  ..., 0.1404, 0.0745, 0.1454],
         [0.1364, 0.1439, 0.1555,  ..., 0.1404, 0.2286, 0.1291],
         [0.4396, 0.5380, 0.3298,  ..., 0.5789, 0.1233, 0.5964]],
        [[0.2835, 0.1457, 0.1831,  ..., 0.2998, 0.2717, 0.5105],
         [0.2244, 0.2812, 0.4006,  ..., 0.2726, 0.3066, 0.1377],
         [0.2677, 0.4274, 0.2333,  ..., 0.3081, 0.3477, 0.2452],
         [0.2244, 0.1457, 0.1831,  ..., 0.1195, 0.0740, 0.1066]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 516:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1597, 0.1272, 0.1194,  ..., 0.1473, 0.1602, 0.1462],
         [0.1729, 0.1272, 0.1194,  ..., 0.1473, 0.1602, 0.1462],
         [0.1597, 0.1272, 0.1194,  ..., 0.1473, 0.1602, 0.1462],
         [0.5078, 0.6184, 0.6418,  ..., 0.5580, 0.5193, 0.5615]],
        [[0.2500, 0.2500, 0.2609,  ..., 0.2500, 0.2500, 0.2494],
         [0.2500, 0.2500, 0.2560,  ..., 0.2500, 0.2500, 0.2517],
         [0.2500, 0.2500, 0.2415,  ..., 0.2500, 0.2500, 0.2494],
         [0.2500, 0.2500, 0.2415,  ..., 0.2500, 0.2500, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:44,792 [Process: 0] Synchronize training processes
2024-08-16 13:11:44,793 [Process: 0] Evaluating...
2024-08-16 13:11:44,795 [Process: 0] EPOCH 517:
2024-08-16 13:11:44,797 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1299, 0.1623, 0.1394,  ..., 0.1689, 0.3995, 0.1511],
         [0.1383, 0.1623, 0.1394,  ..., 0.2020, 0.1163, 0.1511],
         [0.1299, 0.1623, 0.1394,  ..., 0.1689, 0.1163, 0.1511],
         [0.6019, 0.5130, 0.5819,  ..., 0.4603, 0.3678, 0.5468]],
        [[0.2500, 0.2076, 0.2278,  ..., 0.2696, 0.1414, 0.2500],
         [0.2500, 0.2322, 0.2591,  ..., 0.2799, 0.1239, 0.2500],
         [0.2500, 0.3655, 0.4086,  ..., 0.3449, 0.6533, 0.2500],
         [0.2500, 0.1947, 0.1046,  ..., 0.1057, 0.0815, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 517:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1625, 0.1420, 0.1387,  ..., 0.1197, 0.1564, 0.1427],
         [0.1625, 0.1420, 0.1387,  ..., 0.1256, 0.1564, 0.1427],
         [0.1625, 0.1420, 0.1387,  ..., 0.1197, 0.1564, 0.1427],
         [0.5126, 0.5739, 0.5840,  ..., 0.6351, 0.5307, 0.5719]],
        [[0.2500, 0.2683, 0.2490,  ..., 0.2534, 0.2500, 0.2500],
         [0.2500, 0.2439, 0.2531,  ..., 0.2502, 0.2500, 0.2500],
         [0.2500, 0.2439, 0.2490,  ..., 0.2482, 0.2500, 0.2500],
         [0.2500, 0.2439, 0.2490,  ..., 0.2482, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:46,693 [Process: 0] Synchronize training processes
2024-08-16 13:11:46,693 [Process: 0] Evaluating...
2024-08-16 13:11:46,695 [Process: 0] EPOCH 518:
2024-08-16 13:11:46,697 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1595, 0.1275, 0.1327,  ..., 0.1368, 0.2472, 0.1866],
         [0.1471, 0.1696, 0.1521,  ..., 0.1368, 0.1560, 0.1911],
         [0.1471, 0.1202, 0.1327,  ..., 0.1368, 0.2568, 0.1866],
         [0.5463, 0.5827, 0.5824,  ..., 0.5896, 0.3400, 0.4357]],
        [[0.2626, 0.2978, 0.3300,  ..., 0.2245, 0.1530, 0.4438],
         [0.2419, 0.2430, 0.2820,  ..., 0.2009, 0.2840, 0.1677],
         [0.3208, 0.2296, 0.2561,  ..., 0.4541, 0.4651, 0.2207],
         [0.1747, 0.2296, 0.1320,  ..., 0.1206, 0.0979, 0.1677]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 518:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1419, 0.1357, 0.1919,  ..., 0.1761, 0.1447, 0.1350],
         [0.1498, 0.1357, 0.1955,  ..., 0.1761, 0.1447, 0.1350],
         [0.1419, 0.1357, 0.1919,  ..., 0.1761, 0.1447, 0.1350],
         [0.5665, 0.5930, 0.4207,  ..., 0.4717, 0.5660, 0.5950]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:48,591 [Process: 0] Synchronize training processes
2024-08-16 13:11:48,591 [Process: 0] Evaluating...
2024-08-16 13:11:48,593 [Process: 0] EPOCH 519:
2024-08-16 13:11:48,595 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2027, 0.1657, 0.1620,  ..., 0.2662, 0.1830, 0.1954],
         [0.2156, 0.1657, 0.1349,  ..., 0.1858, 0.0777, 0.1954],
         [0.1781, 0.1657, 0.1349,  ..., 0.1858, 0.5480, 0.1954],
         [0.4036, 0.5028, 0.5682,  ..., 0.3622, 0.1913, 0.4137]],
        [[0.2085, 0.1888, 0.2368,  ..., 0.2439, 0.3777, 0.2001],
         [0.2056, 0.2020, 0.2896,  ..., 0.3605, 0.2854, 0.2213],
         [0.4606, 0.4487, 0.2368,  ..., 0.2427, 0.2216, 0.3939],
         [0.1253, 0.1605, 0.2368,  ..., 0.1530, 0.1154, 0.1846]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 519:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1625, 0.1436, 0.1814,  ..., 0.1467, 0.1647, 0.1402],
         [0.1625, 0.1436, 0.1834,  ..., 0.1467, 0.1647, 0.1402],
         [0.1625, 0.1436, 0.1814,  ..., 0.1467, 0.1647, 0.1402],
         [0.5124, 0.5693, 0.4538,  ..., 0.5599, 0.5059, 0.5794]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2510, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2497, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2497, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2497, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:50,511 [Process: 0] Synchronize training processes
2024-08-16 13:11:50,512 [Process: 0] Evaluating...
2024-08-16 13:11:50,514 [Process: 0] EPOCH 520:
2024-08-16 13:11:50,515 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1621, 0.1636, 0.1444,  ..., 0.1906, 0.1865, 0.1780],
         [0.1621, 0.1636, 0.1444,  ..., 0.2405, 0.1865, 0.1780],
         [0.1621, 0.1653, 0.1444,  ..., 0.1906, 0.1865, 0.2204],
         [0.5136, 0.5075, 0.5668,  ..., 0.3782, 0.4406, 0.4236]],
        [[0.2500, 0.3083, 0.3573,  ..., 0.2100, 0.2500, 0.1775],
         [0.2500, 0.3256, 0.3271,  ..., 0.2593, 0.2500, 0.3823],
         [0.2500, 0.2191, 0.2081,  ..., 0.3353, 0.2500, 0.2734],
         [0.2500, 0.1471, 0.1074,  ..., 0.1955, 0.2500, 0.1668]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 520:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1383, 0.1283, 0.1530,  ..., 0.1705, 0.1460, 0.1440],
         [0.1412, 0.1283, 0.1530,  ..., 0.1770, 0.1486, 0.1440],
         [0.1383, 0.1283, 0.1530,  ..., 0.1705, 0.1460, 0.1440],
         [0.5822, 0.6152, 0.5409,  ..., 0.4820, 0.5594, 0.5681]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:52,423 [Process: 0] Synchronize training processes
2024-08-16 13:11:52,424 [Process: 0] Evaluating...
2024-08-16 13:11:52,426 [Process: 0] EPOCH 521:
2024-08-16 13:11:52,427 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1691, 0.1288, 0.1600,  ..., 0.1339, 0.2132, 0.1587],
         [0.1691, 0.1288, 0.1600,  ..., 0.1339, 0.2132, 0.1519],
         [0.1691, 0.1288, 0.1600,  ..., 0.1339, 0.2132, 0.1519],
         [0.4928, 0.6135, 0.5199,  ..., 0.5984, 0.3603, 0.5374]],
        [[0.2500, 0.2344, 0.3036,  ..., 0.1855, 0.2709, 0.1987],
         [0.2500, 0.2482, 0.1972,  ..., 0.2878, 0.2871, 0.3533],
         [0.2500, 0.4065, 0.3657,  ..., 0.3411, 0.2997, 0.2704],
         [0.2500, 0.1109, 0.1334,  ..., 0.1855, 0.1423, 0.1775]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 521:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1561, 0.1648, 0.1734,  ..., 0.1906, 0.1354, 0.1490],
         [0.1561, 0.1648, 0.1734,  ..., 0.1906, 0.1354, 0.1490],
         [0.1561, 0.1648, 0.1734,  ..., 0.1906, 0.1354, 0.1490],
         [0.5316, 0.5055, 0.4798,  ..., 0.4283, 0.5939, 0.5530]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2475],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2576],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2475],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2475]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:54,326 [Process: 0] Synchronize training processes
2024-08-16 13:11:54,327 [Process: 0] Evaluating...
2024-08-16 13:11:54,328 [Process: 0] EPOCH 522:
2024-08-16 13:11:54,330 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2392, 0.1936, 0.2192,  ..., 0.1787, 0.1176, 0.1519],
         [0.1700, 0.1687, 0.1803,  ..., 0.1893, 0.1176, 0.1589],
         [0.1700, 0.1217, 0.1803,  ..., 0.1787, 0.5689, 0.1519],
         [0.4208, 0.5160, 0.4202,  ..., 0.4533, 0.1959, 0.5374]],
        [[0.2055, 0.3909, 0.2423,  ..., 0.1580, 0.2463, 0.3577],
         [0.1876, 0.2204, 0.1955,  ..., 0.1921, 0.2935, 0.2179],
         [0.4494, 0.1943, 0.4150,  ..., 0.4920, 0.2957, 0.3169],
         [0.1574, 0.1943, 0.1472,  ..., 0.1580, 0.1646, 0.1074]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 522:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1389, 0.1455, 0.1560,  ..., 0.1795, 0.1730, 0.1249],
         [0.1389, 0.1495, 0.1560,  ..., 0.1874, 0.1730, 0.1249],
         [0.1389, 0.1455, 0.1560,  ..., 0.1795, 0.1730, 0.1249],
         [0.5833, 0.5596, 0.5319,  ..., 0.4535, 0.4810, 0.6252]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:56,229 [Process: 0] Synchronize training processes
2024-08-16 13:11:56,229 [Process: 0] Evaluating...
2024-08-16 13:11:56,231 [Process: 0] EPOCH 523:
2024-08-16 13:11:56,233 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1164, 0.1568, 0.1756,  ..., 0.1667, 0.1473, 0.1719],
         [0.1164, 0.2201, 0.1756,  ..., 0.1667, 0.1473, 0.2222],
         [0.1164, 0.1568, 0.1756,  ..., 0.1821, 0.3666, 0.1450],
         [0.6509, 0.4663, 0.4733,  ..., 0.4846, 0.3389, 0.4609]],
        [[0.3529, 0.2314, 0.2121,  ..., 0.2778, 0.2282, 0.3382],
         [0.1919, 0.2571, 0.3608,  ..., 0.1945, 0.2282, 0.2124],
         [0.2829, 0.2801, 0.2190,  ..., 0.4599, 0.3155, 0.2639],
         [0.1723, 0.2314, 0.2081,  ..., 0.0679, 0.2282, 0.1855]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 523:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1898, 0.1624, 0.1566,  ..., 0.1540, 0.1682, 0.1511],
         [0.1898, 0.1624, 0.1671,  ..., 0.1540, 0.1682, 0.1511],
         [0.1898, 0.1624, 0.1566,  ..., 0.1540, 0.1682, 0.1511],
         [0.4305, 0.5129, 0.5197,  ..., 0.5379, 0.4955, 0.5468]],
        [[0.2500, 0.2488, 0.2477,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2536, 0.2578,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2488, 0.2473,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2488, 0.2473,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:11:58,115 [Process: 0] Synchronize training processes
2024-08-16 13:11:58,115 [Process: 0] Evaluating...
2024-08-16 13:11:58,117 [Process: 0] EPOCH 524:
2024-08-16 13:11:58,119 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1017, 0.1529, 0.1493,  ..., 0.1680, 0.2723, 0.1537],
         [0.1017, 0.1529, 0.1493,  ..., 0.1960, 0.1757, 0.1537],
         [0.1017, 0.1529, 0.1493,  ..., 0.1680, 0.2180, 0.1537],
         [0.6948, 0.5412, 0.5521,  ..., 0.4679, 0.3341, 0.5390]],
        [[0.3554, 0.1727, 0.1494,  ..., 0.3310, 0.3485, 0.2500],
         [0.2182, 0.1727, 0.1271,  ..., 0.2389, 0.2172, 0.2500],
         [0.3307, 0.4818, 0.5963,  ..., 0.2150, 0.2172, 0.2500],
         [0.0957, 0.1727, 0.1271,  ..., 0.2150, 0.2172, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 524:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1151, 0.1530, 0.1598,  ..., 0.1716, 0.1635, 0.1393],
         [0.1151, 0.1530, 0.1598,  ..., 0.1716, 0.1635, 0.1393],
         [0.1151, 0.1530, 0.1598,  ..., 0.1716, 0.1635, 0.1393],
         [0.6548, 0.5410, 0.5205,  ..., 0.4851, 0.5094, 0.5821]],
        [[0.2500, 0.2497, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2508, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2497, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2497, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:12:00,014 [Process: 0] Synchronize training processes
2024-08-16 13:12:00,014 [Process: 0] Evaluating...
2024-08-16 13:12:00,016 [Process: 0] EPOCH 525:
2024-08-16 13:12:00,018 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1559, 0.1128, 0.1223,  ..., 0.1146, 0.1771, 0.1307],
         [0.1559, 0.1446, 0.1223,  ..., 0.1146, 0.1771, 0.1307],
         [0.1559, 0.1128, 0.1223,  ..., 0.1146, 0.1771, 0.1307],
         [0.5322, 0.6298, 0.6330,  ..., 0.6561, 0.4688, 0.6078]],
        [[0.4682, 0.2610, 0.2963,  ..., 0.3495, 0.2482, 0.2500],
         [0.2547, 0.2202, 0.2641,  ..., 0.2945, 0.2553, 0.2500],
         [0.1650, 0.4405, 0.3056,  ..., 0.2471, 0.2482, 0.2500],
         [0.1122, 0.0783, 0.1339,  ..., 0.1089, 0.2482, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 525:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1328, 0.1464, 0.1663,  ..., 0.1635, 0.1693, 0.1413],
         [0.1328, 0.1464, 0.1727,  ..., 0.1702, 0.1693, 0.1413],
         [0.1328, 0.1464, 0.1663,  ..., 0.1635, 0.1693, 0.1413],
         [0.6017, 0.5608, 0.4948,  ..., 0.5027, 0.4921, 0.5762]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1683, 0.1547, 0.1464,  ..., 0.1449, 0.1701, 0.1582],
         [0.1683, 0.1547, 0.1464,  ..., 0.1449, 0.1701, 0.1582],
         [0.1683, 0.1547, 0.1464,  ..., 0.1449, 0.2626, 0.1582],
         [0.4951, 0.5358, 0.5607,  ..., 0.5654, 0.3972, 0.5255]],
        [[0.2055, 0.2097, 0.2022,  ..., 0.2090, 0.2845, 0.4153],
         [0.3687, 0.2181, 0.2033,  ..., 0.2212, 0.2435, 0.1692],
         [0.2296, 0.4745, 0.4523,  ..., 0.3673, 0.2572, 0.3229],
         [0.1962, 0.0977, 0.1423,  ..., 0.2025, 0.2148, 0.0925]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:12:01,912 [Process: 0] Synchronize training processes
2024-08-16 13:12:01,912 [Process: 0] Evaluating...
2024-08-16 13:12:01,914 [Process: 0] EPOCH 526:
2024-08-16 13:12:01,916 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 526:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1493, 0.1489, 0.1689,  ..., 0.1346, 0.1404, 0.1567],
         [0.1493, 0.1522, 0.1689,  ..., 0.1399, 0.1404, 0.1567],
         [0.1493, 0.1489, 0.1689,  ..., 0.1346, 0.1404, 0.1567],
         [0.5522, 0.5499, 0.4933,  ..., 0.5909, 0.5787, 0.5298]],
        [[0.2500, 0.2456, 0.2500,  ..., 0.2500, 0.2500, 0.2492],
         [0.2500, 0.2631, 0.2500,  ..., 0.2500, 0.2500, 0.2524],
         [0.2500, 0.2456, 0.2500,  ..., 0.2500, 0.2500, 0.2492],
         [0.2500, 0.2456, 0.2500,  ..., 0.2500, 0.2500, 0.2492]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1104, 0.1603, 0.1531,  ..., 0.1348, 0.1828, 0.1582],
         [0.1294, 0.2086, 0.1531,  ..., 0.1437, 0.1828, 0.1582],
         [0.1104, 0.1530, 0.1531,  ..., 0.1348, 0.1828, 0.1582],
         [0.6498, 0.4781, 0.5408,  ..., 0.5867, 0.4516, 0.5255]],
        [[0.3345, 0.2500, 0.3794,  ..., 0.2851, 0.2724, 0.2355],
         [0.3022, 0.2500, 0.1932,  ..., 0.1962, 0.2273, 0.2542],
         [0.2763, 0.2500, 0.2492,  ..., 0.3533, 0.3987, 0.3895],
         [0.0870, 0.2500, 0.1782,  ..., 0.1654, 0.1016, 0.1209]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 527:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:03,821 [Process: 0] Synchronize training processes
2024-08-16 13:12:03,821 [Process: 0] Evaluating...
2024-08-16 13:12:03,823 [Process: 0] EPOCH 527:
2024-08-16 13:12:03,825 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1676, 0.1369, 0.1535,  ..., 0.1601, 0.1276, 0.1342],
         [0.1676, 0.1369, 0.1558,  ..., 0.1622, 0.1276, 0.1342],
         [0.1676, 0.1369, 0.1535,  ..., 0.1601, 0.1276, 0.1342],
         [0.4971, 0.5893, 0.5371,  ..., 0.5177, 0.6172, 0.5975]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1906, 0.1854, 0.1182,  ..., 0.1768, 0.2252, 0.1831],
         [0.1962, 0.1854, 0.1182,  ..., 0.1768, 0.2252, 0.2059],
         [0.1906, 0.1854, 0.1182,  ..., 0.1768, 0.2252, 0.1420],
         [0.4225, 0.4437, 0.6454,  ..., 0.4695, 0.3244, 0.4690]],
        [[0.2500, 0.3470, 0.2128,  ..., 0.1715, 0.3663, 0.2342],
         [0.2500, 0.2859, 0.2579,  ..., 0.2498, 0.2472, 0.3741],
         [0.2500, 0.2585, 0.3341,  ..., 0.4479, 0.2650, 0.2082],
         [0.2500, 0.1086, 0.1952,  ..., 0.1308, 0.1216, 0.1835]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 528:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:05,711 [Process: 0] Synchronize training processes
2024-08-16 13:12:05,711 [Process: 0] Evaluating...
2024-08-16 13:12:05,713 [Process: 0] EPOCH 528:
2024-08-16 13:12:05,715 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1131, 0.1427, 0.1301,  ..., 0.1465, 0.1316, 0.1212],
         [0.1131, 0.1427, 0.1301,  ..., 0.1465, 0.1344, 0.1321],
         [0.1131, 0.1427, 0.1301,  ..., 0.1465, 0.1316, 0.1212],
         [0.6607, 0.5718, 0.6097,  ..., 0.5605, 0.6024, 0.6256]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2647, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2451, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2451, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2451, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1750, 0.1634, 0.2282,  ..., 0.1340, 0.1383, 0.1308],
         [0.1506, 0.1976, 0.1868,  ..., 0.1529, 0.1383, 0.1308],
         [0.1380, 0.1634, 0.1642,  ..., 0.1261, 0.3072, 0.1308],
         [0.5365, 0.4755, 0.4208,  ..., 0.5871, 0.4162, 0.6075]],
        [[0.2297, 0.1994, 0.2546,  ..., 0.2189, 0.2505, 0.2258],
         [0.1841, 0.2465, 0.1638,  ..., 0.2941, 0.3036, 0.3102],
         [0.4536, 0.3547, 0.4249,  ..., 0.2728, 0.2230, 0.2381],
         [0.1325, 0.1994, 0.1567,  ..., 0.2142, 0.2230, 0.2258]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 529:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:07,608 [Process: 0] Synchronize training processes
2024-08-16 13:12:07,609 [Process: 0] Evaluating...
2024-08-16 13:12:07,611 [Process: 0] EPOCH 529:
2024-08-16 13:12:07,613 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1891, 0.1496, 0.1502,  ..., 0.1265, 0.1335, 0.1605],
         [0.1978, 0.1518, 0.1502,  ..., 0.1265, 0.1335, 0.1605],
         [0.1891, 0.1496, 0.1502,  ..., 0.1265, 0.1335, 0.1605],
         [0.4241, 0.5490, 0.5493,  ..., 0.6205, 0.5994, 0.5186]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2351, 0.1412, 0.1909,  ..., 0.1212, 0.2500, 0.1426],
         [0.2109, 0.1412, 0.1712,  ..., 0.1340, 0.2500, 0.1426],
         [0.1876, 0.1412, 0.1595,  ..., 0.2210, 0.2500, 0.1426],
         [0.3664, 0.5764, 0.4783,  ..., 0.5238, 0.2500, 0.5722]],
        [[0.2941, 0.2500, 0.2451,  ..., 0.2611, 0.2901, 0.2305],
         [0.2517, 0.2500, 0.2695,  ..., 0.2463, 0.1651, 0.2745],
         [0.2987, 0.2500, 0.2436,  ..., 0.2463, 0.3796, 0.2646],
         [0.1556, 0.2500, 0.2418,  ..., 0.2463, 0.1651, 0.2305]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 530:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:09,513 [Process: 0] Synchronize training processes
2024-08-16 13:12:09,513 [Process: 0] Evaluating...
2024-08-16 13:12:09,515 [Process: 0] EPOCH 530:
2024-08-16 13:12:09,517 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1237, 0.1103, 0.1817,  ..., 0.1374, 0.1537, 0.1538],
         [0.1237, 0.1103, 0.1817,  ..., 0.1374, 0.1537, 0.1538],
         [0.1237, 0.1103, 0.1817,  ..., 0.1374, 0.1537, 0.1538],
         [0.6289, 0.6691, 0.4549,  ..., 0.5878, 0.5388, 0.5385]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2491, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2527, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2491, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2491, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1418, 0.1482, 0.1423,  ..., 0.1334, 0.2744, 0.1380],
         [0.1418, 0.1751, 0.1423,  ..., 0.1334, 0.2086, 0.1380],
         [0.1418, 0.1482, 0.1958,  ..., 0.1334, 0.2086, 0.1380],
         [0.5745, 0.5286, 0.5196,  ..., 0.5997, 0.3085, 0.5859]],
        [[0.2391, 0.2799, 0.3275,  ..., 0.4578, 0.2284, 0.2650],
         [0.2675, 0.2732, 0.2602,  ..., 0.2169, 0.2284, 0.2450],
         [0.2543, 0.2235, 0.2798,  ..., 0.1801, 0.3147, 0.2450],
         [0.2391, 0.2235, 0.1325,  ..., 0.1453, 0.2284, 0.2450]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 531:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:11,412 [Process: 0] Synchronize training processes
2024-08-16 13:12:11,412 [Process: 0] Evaluating...
2024-08-16 13:12:11,414 [Process: 0] EPOCH 531:
2024-08-16 13:12:11,416 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1598, 0.1565, 0.1772,  ..., 0.1247, 0.1443, 0.1582],
         [0.1598, 0.1565, 0.1818,  ..., 0.1308, 0.1462, 0.1582],
         [0.1598, 0.1565, 0.1772,  ..., 0.1247, 0.1443, 0.1582],
         [0.5205, 0.5306, 0.4637,  ..., 0.6198, 0.5652, 0.5255]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2446, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2446, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2663, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2446, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1488, 0.1372, 0.1126,  ..., 0.1959, 0.5715, 0.1530],
         [0.1488, 0.1372, 0.1126,  ..., 0.2001, 0.0890, 0.1530],
         [0.1488, 0.1372, 0.1126,  ..., 0.1779, 0.0890, 0.2039],
         [0.5536, 0.5883, 0.6621,  ..., 0.4262, 0.2504, 0.4901]],
        [[0.2973, 0.2134, 0.2527,  ..., 0.2378, 0.2745, 0.2396],
         [0.2342, 0.3276, 0.2491,  ..., 0.2798, 0.3378, 0.2957],
         [0.2342, 0.3294, 0.2491,  ..., 0.2447, 0.1965, 0.2323],
         [0.2342, 0.1296, 0.2491,  ..., 0.2378, 0.1912, 0.2323]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 532:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:13,314 [Process: 0] Synchronize training processes
2024-08-16 13:12:13,314 [Process: 0] Evaluating...
2024-08-16 13:12:13,316 [Process: 0] EPOCH 532:
2024-08-16 13:12:13,318 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1680, 0.1446, 0.1430,  ..., 0.1694, 0.1507, 0.1545],
         [0.1680, 0.1446, 0.1430,  ..., 0.1694, 0.1507, 0.1581],
         [0.1680, 0.1446, 0.1430,  ..., 0.1694, 0.1507, 0.1545],
         [0.4959, 0.5663, 0.5709,  ..., 0.4919, 0.5479, 0.5328]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2471, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2586, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2471, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2471, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1783, 0.1967, 0.1427,  ..., 0.1690, 0.2097, 0.1213],
         [0.1783, 0.1479, 0.1552,  ..., 0.1690, 0.2559, 0.1503],
         [0.1783, 0.1479, 0.1427,  ..., 0.1690, 0.2097, 0.1213],
         [0.4651, 0.5074, 0.5594,  ..., 0.4930, 0.3248, 0.6071]],
        [[0.3641, 0.2695, 0.2784,  ..., 0.5060, 0.2201, 0.2500],
         [0.2299, 0.2373, 0.2799,  ..., 0.2459, 0.3109, 0.2500],
         [0.2030, 0.2560, 0.3003,  ..., 0.1241, 0.2993, 0.2500],
         [0.2030, 0.2373, 0.1414,  ..., 0.1241, 0.1697, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 533:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:15,294 [Process: 0] Synchronize training processes
2024-08-16 13:12:15,294 [Process: 0] Evaluating...
2024-08-16 13:12:15,296 [Process: 0] EPOCH 533:
2024-08-16 13:12:15,298 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1620, 0.1340, 0.1206,  ..., 0.1064, 0.1457, 0.1684],
         [0.1620, 0.1340, 0.1206,  ..., 0.1064, 0.1457, 0.1684],
         [0.1620, 0.1340, 0.1206,  ..., 0.1064, 0.1457, 0.1684],
         [0.5141, 0.5981, 0.6383,  ..., 0.6809, 0.5630, 0.4949]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2112, 0.1104, 0.1295,  ..., 0.2246, 0.2319, 0.1910],
         [0.2112, 0.1519, 0.1295,  ..., 0.1890, 0.2319, 0.1910],
         [0.2112, 0.1068, 0.1295,  ..., 0.1639, 0.2319, 0.1910],
         [0.3664, 0.6310, 0.6115,  ..., 0.4225, 0.3042, 0.4269]],
        [[0.2500, 0.2366, 0.2958,  ..., 0.3866, 0.1454, 0.2463],
         [0.2500, 0.2018, 0.2446,  ..., 0.3225, 0.2356, 0.2488],
         [0.2500, 0.3599, 0.2530,  ..., 0.1474, 0.4736, 0.2585],
         [0.2500, 0.2018, 0.2065,  ..., 0.1435, 0.1454, 0.2463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 534:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:17,209 [Process: 0] Synchronize training processes
2024-08-16 13:12:17,209 [Process: 0] Evaluating...
2024-08-16 13:12:17,211 [Process: 0] EPOCH 534:
2024-08-16 13:12:17,213 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1584, 0.1682, 0.1386,  ..., 0.1574, 0.1605, 0.1568],
         [0.1615, 0.1682, 0.1386,  ..., 0.1640, 0.1605, 0.1568],
         [0.1584, 0.1682, 0.1386,  ..., 0.1574, 0.1605, 0.1568],
         [0.5217, 0.4955, 0.5841,  ..., 0.5211, 0.5185, 0.5295]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1434, 0.1355, 0.1111,  ..., 0.0948, 0.2069, 0.1776],
         [0.1414, 0.1714, 0.1111,  ..., 0.0948, 0.2069, 0.1776],
         [0.1399, 0.1125, 0.1111,  ..., 0.0948, 0.2069, 0.1776],
         [0.5753, 0.5805, 0.6666,  ..., 0.7155, 0.3792, 0.4673]],
        [[0.2967, 0.2414, 0.2465,  ..., 0.1830, 0.2500, 0.2634],
         [0.2607, 0.1984, 0.2599,  ..., 0.1830, 0.2500, 0.2492],
         [0.2228, 0.4444, 0.3476,  ..., 0.4509, 0.2500, 0.2920],
         [0.2198, 0.1157, 0.1460,  ..., 0.1830, 0.2500, 0.1953]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 535:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:12:19,105 [Process: 0] Synchronize training processes
2024-08-16 13:12:19,105 [Process: 0] Evaluating...
2024-08-16 13:12:19,107 [Process: 0] EPOCH 535:
2024-08-16 13:12:19,109 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1617, 0.1267, 0.1434,  ..., 0.1126, 0.1559, 0.1688],
         [0.1617, 0.1287, 0.1434,  ..., 0.1126, 0.1559, 0.1688],
         [0.1617, 0.1267, 0.1434,  ..., 0.1126, 0.1559, 0.1688],
         [0.5148, 0.6178, 0.5697,  ..., 0.6621, 0.5322, 0.4936]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1473, 0.1619, 0.1701,  ..., 0.1445, 0.1399, 0.1432],
         [0.1473, 0.1619, 0.2219,  ..., 0.1472, 0.1399, 0.1432],
         [0.1473, 0.1619, 0.1701,  ..., 0.1445, 0.1399, 0.1432],
         [0.5580, 0.5142, 0.4379,  ..., 0.5639, 0.5802, 0.5704]],
        [[0.2990, 0.1727, 0.2433,  ..., 0.2177, 0.2687, 0.3018],
         [0.2559, 0.3597, 0.2400,  ..., 0.2962, 0.2163, 0.2677],
         [0.2347, 0.2948, 0.3679,  ..., 0.3330, 0.4263, 0.2153],
         [0.2104, 0.1727, 0.1488,  ..., 0.1532, 0.0887, 0.2153]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 536:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1603, 0.1164, 0.1665,  ..., 0.1799, 0.1522, 0.1432],
         [0.1603, 0.1264, 0.1665,  ..., 0.1811, 0.1522, 0.1437],
         [0.1603, 0.1164, 0.1665,  ..., 0.1799, 0.1522, 0.1432],
         [0.5190, 0.6409, 0.5005,  ..., 0.4592, 0.5435, 0.5699]],
        [[0.2500, 0.2500, 0.2477,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2581,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2471,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2471,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:12:21,023 [Process: 0] Synchronize training processes
2024-08-16 13:12:21,023 [Process: 0] Evaluating...
2024-08-16 13:12:21,025 [Process: 0] EPOCH 536:
2024-08-16 13:12:21,027 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:22,916 [Process: 0] Synchronize training processes
2024-08-16 13:12:22,917 [Process: 0] Evaluating...
2024-08-16 13:12:22,919 [Process: 0] EPOCH 537:
2024-08-16 13:12:22,921 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1444, 0.1488, 0.1980,  ..., 0.1677, 0.2500, 0.1407],
         [0.1444, 0.1583, 0.1980,  ..., 0.1847, 0.2500, 0.1407],
         [0.1444, 0.1488, 0.1980,  ..., 0.1677, 0.2500, 0.1407],
         [0.5668, 0.5441, 0.4060,  ..., 0.4800, 0.2500, 0.5779]],
        [[0.4013, 0.2500, 0.2402,  ..., 0.2861, 0.2650, 0.2995],
         [0.3196, 0.2500, 0.3139,  ..., 0.2727, 0.3419, 0.2588],
         [0.1575, 0.2500, 0.2229,  ..., 0.2233, 0.2544, 0.2242],
         [0.1216, 0.2500, 0.2229,  ..., 0.2179, 0.1387, 0.2175]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 537:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1615, 0.1360, 0.1322,  ..., 0.1374, 0.1852, 0.1828],
         [0.1631, 0.1360, 0.1322,  ..., 0.1374, 0.1852, 0.1828],
         [0.1615, 0.1360, 0.1322,  ..., 0.1374, 0.1852, 0.1828],
         [0.5139, 0.5920, 0.6033,  ..., 0.5877, 0.4444, 0.4516]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2513, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2496, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2496, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2496, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:12:24,820 [Process: 0] Synchronize training processes
2024-08-16 13:12:24,820 [Process: 0] Evaluating...
2024-08-16 13:12:24,822 [Process: 0] EPOCH 538:
2024-08-16 13:12:24,824 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1706, 0.1662, 0.1811,  ..., 0.1606, 0.1631, 0.1021],
         [0.1706, 0.1662, 0.1811,  ..., 0.1606, 0.1631, 0.1141],
         [0.1706, 0.1662, 0.1811,  ..., 0.1606, 0.1631, 0.1021],
         [0.4882, 0.5013, 0.4567,  ..., 0.5183, 0.5107, 0.6817]],
        [[0.1589, 0.2380, 0.2944,  ..., 0.2794, 0.2329, 0.3161],
         [0.1979, 0.2861, 0.3185,  ..., 0.2095, 0.2329, 0.3220],
         [0.4894, 0.2380, 0.2406,  ..., 0.3392, 0.3012, 0.1810],
         [0.1539, 0.2380, 0.1465,  ..., 0.1719, 0.2329, 0.1810]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 538:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1608, 0.1328, 0.1701,  ..., 0.1292, 0.1866, 0.1275],
         [0.1608, 0.1379, 0.1701,  ..., 0.1292, 0.1866, 0.1293],
         [0.1608, 0.1328, 0.1701,  ..., 0.1292, 0.1866, 0.1275],
         [0.5175, 0.5964, 0.4898,  ..., 0.6125, 0.4401, 0.6158]],
        [[0.2482, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2554, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2482, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2482, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:12:26,729 [Process: 0] Synchronize training processes
2024-08-16 13:12:26,730 [Process: 0] Evaluating...
2024-08-16 13:12:26,732 [Process: 0] EPOCH 539:
2024-08-16 13:12:26,734 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1551, 0.1115, 0.1190,  ..., 0.1745, 0.2020, 0.1795],
         [0.1646, 0.1280, 0.1190,  ..., 0.1745, 0.2020, 0.1795],
         [0.1551, 0.1009, 0.1190,  ..., 0.1745, 0.2020, 0.1795],
         [0.5252, 0.6596, 0.6431,  ..., 0.4765, 0.3939, 0.4615]],
        [[0.2931, 0.3029, 0.2162,  ..., 0.2195, 0.2675, 0.2500],
         [0.2356, 0.2258, 0.2860,  ..., 0.2864, 0.2558, 0.2500],
         [0.2356, 0.2866, 0.2816,  ..., 0.3357, 0.2384, 0.2500],
         [0.2356, 0.1848, 0.2162,  ..., 0.1584, 0.2384, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 539:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1243, 0.1966, 0.1288,  ..., 0.1532, 0.1352, 0.1765],
         [0.1243, 0.1966, 0.1288,  ..., 0.1539, 0.1352, 0.1765],
         [0.1243, 0.1966, 0.1288,  ..., 0.1532, 0.1352, 0.1765],
         [0.6271, 0.4102, 0.6136,  ..., 0.5397, 0.5945, 0.4704]],
        [[0.2500, 0.2496, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2511, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2496, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2496, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:12:28,666 [Process: 0] Synchronize training processes
2024-08-16 13:12:28,666 [Process: 0] Evaluating...
2024-08-16 13:12:28,668 [Process: 0] EPOCH 540:
2024-08-16 13:12:28,670 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1798, 0.1246, 0.1656,  ..., 0.1477, 0.1594, 0.1592],
         [0.1798, 0.1246, 0.1674,  ..., 0.1875, 0.1594, 0.1592],
         [0.1798, 0.1246, 0.1656,  ..., 0.1477, 0.1594, 0.1592],
         [0.4607, 0.6261, 0.5015,  ..., 0.5171, 0.5217, 0.5224]],
        [[0.2388, 0.2815, 0.2433,  ..., 0.2332, 0.2842, 0.3024],
         [0.2836, 0.2961, 0.3028,  ..., 0.2332, 0.2492, 0.2976],
         [0.2388, 0.2840, 0.3198,  ..., 0.3004, 0.2936, 0.2000],
         [0.2388, 0.1385, 0.1341,  ..., 0.2332, 0.1731, 0.2000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 540:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1439, 0.1582, 0.1236,  ..., 0.1225, 0.1420, 0.1358],
         [0.1439, 0.1582, 0.1236,  ..., 0.1225, 0.1431, 0.1409],
         [0.1439, 0.1582, 0.1236,  ..., 0.1225, 0.1420, 0.1358],
         [0.5684, 0.5254, 0.6292,  ..., 0.6326, 0.5729, 0.5876]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2488, 0.2500, 0.2490],
         [0.2500, 0.2500, 0.2500,  ..., 0.2582, 0.2500, 0.2531],
         [0.2500, 0.2500, 0.2500,  ..., 0.2465, 0.2500, 0.2490],
         [0.2500, 0.2500, 0.2500,  ..., 0.2465, 0.2500, 0.2490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:12:30,614 [Process: 0] Synchronize training processes
2024-08-16 13:12:30,614 [Process: 0] Evaluating...
2024-08-16 13:12:30,616 [Process: 0] EPOCH 541:
2024-08-16 13:12:30,618 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1543, 0.1289, 0.1415,  ..., 0.1730, 0.2500, 0.1570],
         [0.1543, 0.1413, 0.1415,  ..., 0.1810, 0.2500, 0.1570],
         [0.1543, 0.1289, 0.1415,  ..., 0.1757, 0.2500, 0.1570],
         [0.5370, 0.6008, 0.5755,  ..., 0.4703, 0.2500, 0.5289]],
        [[0.2151, 0.2500, 0.2186,  ..., 0.3965, 0.2152, 0.2500],
         [0.2061, 0.2500, 0.3305,  ..., 0.2849, 0.3712, 0.2500],
         [0.3727, 0.2500, 0.2322,  ..., 0.2280, 0.2187, 0.2500],
         [0.2061, 0.2500, 0.2186,  ..., 0.0906, 0.1950, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 541:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1484, 0.1546, 0.1738,  ..., 0.1615, 0.1483, 0.1547],
         [0.1484, 0.1546, 0.1738,  ..., 0.1615, 0.1498, 0.1547],
         [0.1484, 0.1546, 0.1738,  ..., 0.1615, 0.1483, 0.1547],
         [0.5547, 0.5363, 0.4786,  ..., 0.5154, 0.5536, 0.5358]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2490, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2530, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2490, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2490, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:12:32,568 [Process: 0] Synchronize training processes
2024-08-16 13:12:32,568 [Process: 0] Evaluating...
2024-08-16 13:12:32,570 [Process: 0] EPOCH 542:
2024-08-16 13:12:32,572 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1082, 0.1225, 0.1560,  ..., 0.2024, 0.1294, 0.1764],
         [0.1082, 0.1257, 0.1357,  ..., 0.2024, 0.1294, 0.1764],
         [0.1082, 0.1225, 0.1258,  ..., 0.2024, 0.1294, 0.1764],
         [0.6754, 0.6292, 0.5825,  ..., 0.3929, 0.6119, 0.4708]],
        [[0.3093, 0.3028, 0.2156,  ..., 0.2432, 0.2500, 0.3130],
         [0.2054, 0.2324, 0.3024,  ..., 0.2432, 0.2500, 0.2153],
         [0.3372, 0.2324, 0.2917,  ..., 0.2703, 0.2500, 0.2723],
         [0.1481, 0.2324, 0.1904,  ..., 0.2432, 0.2500, 0.1995]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 542:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1426, 0.1223, 0.1602,  ..., 0.1694, 0.1571, 0.1023],
         [0.1426, 0.1223, 0.1606,  ..., 0.1803, 0.1571, 0.1023],
         [0.1426, 0.1223, 0.1602,  ..., 0.1694, 0.1571, 0.1023],
         [0.5722, 0.6332, 0.5190,  ..., 0.4808, 0.5286, 0.6932]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2497, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2510, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2497, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2497, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:12:34,496 [Process: 0] Synchronize training processes
2024-08-16 13:12:34,497 [Process: 0] Evaluating...
2024-08-16 13:12:34,499 [Process: 0] EPOCH 543:
2024-08-16 13:12:34,501 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1587, 0.0945, 0.1334,  ..., 0.1481, 0.2995, 0.1385],
         [0.1722, 0.1181, 0.1527,  ..., 0.1481, 0.1523, 0.1441],
         [0.1587, 0.0945, 0.1334,  ..., 0.1481, 0.3001, 0.1385],
         [0.5104, 0.6929, 0.5806,  ..., 0.5558, 0.2481, 0.5789]],
        [[0.3118, 0.2273, 0.2474,  ..., 0.1935, 0.2391, 0.2500],
         [0.3250, 0.3181, 0.2592,  ..., 0.2380, 0.2172, 0.2500],
         [0.1987, 0.2273, 0.2467,  ..., 0.3751, 0.3266, 0.2500],
         [0.1645, 0.2273, 0.2467,  ..., 0.1935, 0.2172, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 543:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1206, 0.1373, 0.1336,  ..., 0.1159, 0.1672, 0.1118],
         [0.1206, 0.1382, 0.1346,  ..., 0.1265, 0.1672, 0.1118],
         [0.1206, 0.1373, 0.1336,  ..., 0.1159, 0.1672, 0.1118],
         [0.6381, 0.5872, 0.5983,  ..., 0.6417, 0.4985, 0.6646]],
        [[0.2500, 0.2597, 0.2500,  ..., 0.2489, 0.2500, 0.2500],
         [0.2500, 0.2490, 0.2500,  ..., 0.2533, 0.2500, 0.2500],
         [0.2500, 0.2456, 0.2500,  ..., 0.2489, 0.2500, 0.2500],
         [0.2500, 0.2456, 0.2500,  ..., 0.2489, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:12:36,406 [Process: 0] Synchronize training processes
2024-08-16 13:12:36,407 [Process: 0] Evaluating...
2024-08-16 13:12:36,409 [Process: 0] EPOCH 544:
2024-08-16 13:12:36,410 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1801, 0.1523, 0.1394,  ..., 0.1343, 0.2500, 0.1512],
         [0.2037, 0.1523, 0.1851,  ..., 0.1554, 0.2500, 0.1580],
         [0.1897, 0.1523, 0.1394,  ..., 0.1307, 0.2500, 0.1512],
         [0.4265, 0.5430, 0.5360,  ..., 0.5796, 0.2500, 0.5396]],
        [[0.2313, 0.1997, 0.2410,  ..., 0.2500, 0.2479, 0.2484],
         [0.3045, 0.3692, 0.2771,  ..., 0.2500, 0.2562, 0.2484],
         [0.2555, 0.2314, 0.2410,  ..., 0.2500, 0.2479, 0.2547],
         [0.2087, 0.1997, 0.2410,  ..., 0.2500, 0.2479, 0.2484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 544:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1885, 0.1321, 0.1519,  ..., 0.1517, 0.0934, 0.1109],
         [0.1885, 0.1468, 0.1519,  ..., 0.1517, 0.0934, 0.1171],
         [0.1885, 0.1321, 0.1519,  ..., 0.1517, 0.0934, 0.1109],
         [0.4345, 0.5890, 0.5443,  ..., 0.5449, 0.7197, 0.6612]],
        [[0.2500, 0.2482, 0.2500,  ..., 0.2615, 0.2500, 0.2500],
         [0.2500, 0.2555, 0.2500,  ..., 0.2510, 0.2500, 0.2500],
         [0.2500, 0.2482, 0.2500,  ..., 0.2438, 0.2500, 0.2500],
         [0.2500, 0.2482, 0.2500,  ..., 0.2438, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:12:38,308 [Process: 0] Synchronize training processes
2024-08-16 13:12:38,309 [Process: 0] Evaluating...
2024-08-16 13:12:38,311 [Process: 0] EPOCH 545:
2024-08-16 13:12:38,312 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1334, 0.2436, 0.1606,  ..., 0.2337, 0.1630, 0.1505],
         [0.1334, 0.1906, 0.1636,  ..., 0.1693, 0.0486, 0.1597],
         [0.1334, 0.1703, 0.1415,  ..., 0.1693, 0.7398, 0.1505],
         [0.5999, 0.3955, 0.5343,  ..., 0.4277, 0.0486, 0.5393]],
        [[0.2462, 0.2642, 0.2237,  ..., 0.2286, 0.2327, 0.2441],
         [0.2508, 0.3194, 0.2498,  ..., 0.2801, 0.2327, 0.2678],
         [0.2568, 0.2082, 0.3028,  ..., 0.2627, 0.3018, 0.2441],
         [0.2462, 0.2082, 0.2237,  ..., 0.2286, 0.2327, 0.2441]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 545:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1522, 0.1862, 0.1237,  ..., 0.1325, 0.1376, 0.1392],
         [0.1522, 0.1917, 0.1237,  ..., 0.1395, 0.1376, 0.1461],
         [0.1522, 0.1862, 0.1237,  ..., 0.1325, 0.1376, 0.1392],
         [0.5435, 0.4359, 0.6289,  ..., 0.5955, 0.5872, 0.5754]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2496],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2513],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2496],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2496]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 13:12:40,210 [Process: 0] Synchronize training processes
2024-08-16 13:12:40,210 [Process: 0] Evaluating...
2024-08-16 13:12:40,212 [Process: 0] EPOCH 546:
2024-08-16 13:12:40,214 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1785, 0.2212, 0.1045,  ..., 0.1363, 0.2316, 0.1340],
         [0.2095, 0.1790, 0.1217,  ..., 0.1372, 0.2316, 0.1633],
         [0.1785, 0.1487, 0.1045,  ..., 0.1363, 0.2316, 0.1340],
         [0.4334, 0.4512, 0.6694,  ..., 0.5903, 0.3051, 0.5688]],
        [[0.2500, 0.2928, 0.2048,  ..., 0.2614, 0.2487, 0.2499],
         [0.2500, 0.2561, 0.2699,  ..., 0.2942, 0.2487, 0.2499],
         [0.2500, 0.2265, 0.3206,  ..., 0.2332, 0.2538, 0.2504],
         [0.2500, 0.2246, 0.2048,  ..., 0.2112, 0.2487, 0.2499]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 546:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1600, 0.1296, 0.1567,  ..., 0.1396, 0.1316, 0.1568],
         [0.1610, 0.1296, 0.1567,  ..., 0.1396, 0.1327, 0.1568],
         [0.1600, 0.1296, 0.1567,  ..., 0.1396, 0.1316, 0.1568],
         [0.5189, 0.6113, 0.5300,  ..., 0.5812, 0.6041, 0.5296]],
        [[0.2495, 0.2499, 0.2500,  ..., 0.2500, 0.2500, 0.2481],
         [0.2514, 0.2502, 0.2500,  ..., 0.2500, 0.2500, 0.2557],
         [0.2495, 0.2499, 0.2500,  ..., 0.2500, 0.2500, 0.2481],
         [0.2495, 0.2499, 0.2500,  ..., 0.2500, 0.2500, 0.2481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-16 13:12:42,127 [Process: 0] Synchronize training processes
2024-08-16 13:12:42,128 [Process: 0] Evaluating...
2024-08-16 13:12:42,130 [Process: 0] EPOCH 547:
2024-08-16 13:12:42,132 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1205, 0.1539, 0.1134,  ..., 0.1438, 0.1565, 0.1306],
         [0.1208, 0.2294, 0.1138,  ..., 0.1481, 0.1565, 0.1306],
         [0.1672, 0.1539, 0.1134,  ..., 0.1438, 0.1565, 0.1306],
         [0.5915, 0.4629, 0.6594,  ..., 0.5643, 0.5306, 0.6081]],
        [[0.2026, 0.2629, 0.2500,  ..., 0.2010, 0.2182, 0.2176],
         [0.2331, 0.2848, 0.2500,  ..., 0.2917, 0.2655, 0.2515],
         [0.3617, 0.2670, 0.2500,  ..., 0.3063, 0.2981, 0.3133],
         [0.2026, 0.1852, 0.2500,  ..., 0.2010, 0.2182, 0.2176]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 547:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1172, 0.1700, 0.1140,  ..., 0.1144, 0.1839, 0.1609],
         [0.1172, 0.1700, 0.1140,  ..., 0.1144, 0.1839, 0.1609],
         [0.1172, 0.1700, 0.1140,  ..., 0.1144, 0.1839, 0.1609],
         [0.6483, 0.4901, 0.6581,  ..., 0.6568, 0.4482, 0.5174]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1179, 0.1266, 0.1362,  ..., 0.1887, 0.2002, 0.1549],
         [0.1619, 0.1262, 0.1470,  ..., 0.2048, 0.2002, 0.1586],
         [0.1179, 0.1186, 0.1362,  ..., 0.1887, 0.2002, 0.1549],
         [0.6022, 0.6286, 0.5805,  ..., 0.4177, 0.3995, 0.5316]],
        [[0.2626, 0.2500, 0.1766,  ..., 0.2742, 0.2538, 0.2500],
         [0.2800, 0.2500, 0.1766,  ..., 0.2795, 0.2487, 0.2500],
         [0.2449, 0.2500, 0.4701,  ..., 0.2232, 0.2487, 0.2500],
         [0.2126, 0.2500, 0.1766,  ..., 0.2232, 0.2487, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:12:44,034 [Process: 0] Synchronize training processes
2024-08-16 13:12:44,034 [Process: 0] Evaluating...
2024-08-16 13:12:44,036 [Process: 0] EPOCH 548:
2024-08-16 13:12:44,038 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 548:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1025, 0.1678, 0.1743,  ..., 0.1418, 0.1657, 0.1826],
         [0.1083, 0.1678, 0.1780,  ..., 0.1418, 0.1657, 0.1826],
         [0.1025, 0.1678, 0.1743,  ..., 0.1418, 0.1657, 0.1826],
         [0.6866, 0.4967, 0.4735,  ..., 0.5747, 0.5030, 0.4523]],
        [[0.2500, 0.2455, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2634, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2455, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2455, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1592, 0.1548, 0.1023,  ..., 0.1963, 0.1448, 0.1293],
         [0.1592, 0.1548, 0.1023,  ..., 0.1865, 0.1448, 0.1694],
         [0.1592, 0.1548, 0.1023,  ..., 0.1708, 0.1448, 0.1639],
         [0.5224, 0.5355, 0.6931,  ..., 0.4465, 0.5655, 0.5374]],
        [[0.2525, 0.2500, 0.2500,  ..., 0.2876, 0.3700, 0.2500],
         [0.2814, 0.2500, 0.2500,  ..., 0.2375, 0.2786, 0.2500],
         [0.2330, 0.2500, 0.2500,  ..., 0.2375, 0.1857, 0.2500],
         [0.2330, 0.2500, 0.2500,  ..., 0.2375, 0.1658, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 549:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:45,933 [Process: 0] Synchronize training processes
2024-08-16 13:12:45,933 [Process: 0] Evaluating...
2024-08-16 13:12:45,935 [Process: 0] EPOCH 549:
2024-08-16 13:12:45,937 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1263, 0.1676, 0.1200,  ..., 0.1380, 0.1582, 0.1434],
         [0.1263, 0.1676, 0.1200,  ..., 0.1380, 0.1582, 0.1434],
         [0.1263, 0.1676, 0.1200,  ..., 0.1380, 0.1582, 0.1434],
         [0.6211, 0.4971, 0.6399,  ..., 0.5860, 0.5253, 0.5699]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2510, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2530, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2480, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2480, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1479, 0.1560, 0.1684,  ..., 0.1682, 0.1436, 0.1139],
         [0.1610, 0.1433, 0.1684,  ..., 0.1682, 0.1436, 0.1139],
         [0.1479, 0.1293, 0.1684,  ..., 0.1682, 0.1436, 0.1139],
         [0.5432, 0.5714, 0.4949,  ..., 0.4954, 0.5693, 0.6583]],
        [[0.2500, 0.1880, 0.2431,  ..., 0.2606, 0.2500, 0.2500],
         [0.2500, 0.2404, 0.2772,  ..., 0.2395, 0.2500, 0.2500],
         [0.2500, 0.3837, 0.2411,  ..., 0.2691, 0.2500, 0.2500],
         [0.2500, 0.1880, 0.2387,  ..., 0.2308, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 550:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:47,829 [Process: 0] Synchronize training processes
2024-08-16 13:12:47,830 [Process: 0] Evaluating...
2024-08-16 13:12:47,832 [Process: 0] EPOCH 550:
2024-08-16 13:12:47,834 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1217, 0.1285, 0.1384,  ..., 0.1505, 0.1315, 0.1819],
         [0.1217, 0.1325, 0.1406,  ..., 0.1505, 0.1371, 0.1819],
         [0.1217, 0.1285, 0.1384,  ..., 0.1505, 0.1315, 0.1819],
         [0.6348, 0.6104, 0.5826,  ..., 0.5485, 0.5999, 0.4544]],
        [[0.2500, 0.2478, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2566, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2478, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2478, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1472, 0.1809, 0.1722,  ..., 0.1057, 0.2087, 0.2499],
         [0.1662, 0.1809, 0.1903,  ..., 0.1248, 0.2087, 0.1781],
         [0.1341, 0.1809, 0.1445,  ..., 0.1057, 0.2087, 0.1614],
         [0.5525, 0.4574, 0.4930,  ..., 0.6639, 0.3740, 0.4105]],
        [[0.2916, 0.1667, 0.2100,  ..., 0.2492, 0.3108, 0.2193],
         [0.2273, 0.2706, 0.2314,  ..., 0.2150, 0.2297, 0.2193],
         [0.2624, 0.4036, 0.3590,  ..., 0.3207, 0.2297, 0.3421],
         [0.2187, 0.1590, 0.1996,  ..., 0.2150, 0.2297, 0.2193]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 551:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:49,734 [Process: 0] Synchronize training processes
2024-08-16 13:12:49,735 [Process: 0] Evaluating...
2024-08-16 13:12:49,737 [Process: 0] EPOCH 551:
2024-08-16 13:12:49,738 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1760, 0.1838, 0.1493,  ..., 0.1457, 0.1037, 0.1420],
         [0.1760, 0.1853, 0.1493,  ..., 0.1457, 0.1074, 0.1444],
         [0.1760, 0.1838, 0.1493,  ..., 0.1457, 0.1037, 0.1420],
         [0.4719, 0.4471, 0.5520,  ..., 0.5628, 0.6853, 0.5717]],
        [[0.2500, 0.2499, 0.2447,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2503, 0.2660,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2499, 0.2447,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2499, 0.2447,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1619, 0.1987, 0.1543,  ..., 0.1139, 0.1768, 0.1435],
         [0.1619, 0.1550, 0.1543,  ..., 0.1139, 0.1768, 0.1741],
         [0.1619, 0.1492, 0.1543,  ..., 0.1139, 0.1768, 0.1339],
         [0.5144, 0.4972, 0.5371,  ..., 0.6582, 0.4696, 0.5485]],
        [[0.2885, 0.2917, 0.2500,  ..., 0.2084, 0.2363, 0.2270],
         [0.3156, 0.2418, 0.2500,  ..., 0.2652, 0.2363, 0.3368],
         [0.1980, 0.2556, 0.2500,  ..., 0.3181, 0.2910, 0.2181],
         [0.1980, 0.2109, 0.2500,  ..., 0.2084, 0.2363, 0.2181]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 552:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:51,642 [Process: 0] Synchronize training processes
2024-08-16 13:12:51,642 [Process: 0] Evaluating...
2024-08-16 13:12:51,644 [Process: 0] EPOCH 552:
2024-08-16 13:12:51,646 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1241, 0.2000, 0.1705,  ..., 0.1170, 0.1440, 0.1589],
         [0.1241, 0.2000, 0.1705,  ..., 0.1170, 0.1580, 0.1589],
         [0.1241, 0.2000, 0.1705,  ..., 0.1170, 0.1440, 0.1589],
         [0.6276, 0.3999, 0.4884,  ..., 0.6490, 0.5540, 0.5233]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1221, 0.1560, 0.1621,  ..., 0.1633, 0.1849, 0.2048],
         [0.1429, 0.1472, 0.1915,  ..., 0.1660, 0.1849, 0.1742],
         [0.1303, 0.1472, 0.1621,  ..., 0.1633, 0.1849, 0.1413],
         [0.6048, 0.5495, 0.4842,  ..., 0.5075, 0.4452, 0.4797]],
        [[0.2706, 0.2409, 0.2492,  ..., 0.1957, 0.2982, 0.3311],
         [0.2729, 0.2773, 0.2492,  ..., 0.3064, 0.2885, 0.2447],
         [0.2692, 0.2409, 0.2524,  ..., 0.3282, 0.2066, 0.2121],
         [0.1872, 0.2409, 0.2492,  ..., 0.1697, 0.2066, 0.2121]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 553:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:53,541 [Process: 0] Synchronize training processes
2024-08-16 13:12:53,542 [Process: 0] Evaluating...
2024-08-16 13:12:53,544 [Process: 0] EPOCH 553:
2024-08-16 13:12:53,546 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1224, 0.1263, 0.1550,  ..., 0.1369, 0.1497, 0.1406],
         [0.1242, 0.1263, 0.1550,  ..., 0.1369, 0.1497, 0.1406],
         [0.1224, 0.1263, 0.1550,  ..., 0.1369, 0.1497, 0.1406],
         [0.6310, 0.6210, 0.5351,  ..., 0.5892, 0.5510, 0.5781]],
        [[0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2507, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1480, 0.1204, 0.1261,  ..., 0.1723, 0.2500, 0.1743],
         [0.1480, 0.1385, 0.1261,  ..., 0.1534, 0.2500, 0.1874],
         [0.1480, 0.1204, 0.1261,  ..., 0.1534, 0.2500, 0.1743],
         [0.5559, 0.6207, 0.6217,  ..., 0.5209, 0.2500, 0.4640]],
        [[0.2249, 0.2756, 0.2500,  ..., 0.2947, 0.2373, 0.2500],
         [0.3252, 0.2352, 0.2500,  ..., 0.3200, 0.3100, 0.2500],
         [0.2249, 0.2539, 0.2500,  ..., 0.2104, 0.2271, 0.2500],
         [0.2249, 0.2352, 0.2500,  ..., 0.1749, 0.2256, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 554:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:55,439 [Process: 0] Synchronize training processes
2024-08-16 13:12:55,439 [Process: 0] Evaluating...
2024-08-16 13:12:55,441 [Process: 0] EPOCH 554:
2024-08-16 13:12:55,443 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1241, 0.1477, 0.1241,  ..., 0.1715, 0.1570, 0.1511],
         [0.1241, 0.1536, 0.1241,  ..., 0.1742, 0.1634, 0.1511],
         [0.1241, 0.1477, 0.1241,  ..., 0.1715, 0.1570, 0.1511],
         [0.6277, 0.5511, 0.6278,  ..., 0.4829, 0.5227, 0.5466]],
        [[0.2470, 0.2469, 0.2500,  ..., 0.2485, 0.2500, 0.2490],
         [0.2590, 0.2592, 0.2500,  ..., 0.2546, 0.2500, 0.2529],
         [0.2470, 0.2469, 0.2500,  ..., 0.2485, 0.2500, 0.2490],
         [0.2470, 0.2469, 0.2500,  ..., 0.2485, 0.2500, 0.2490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1447, 0.1260, 0.2187,  ..., 0.1528, 0.1654, 0.1691],
         [0.1727, 0.1260, 0.2239,  ..., 0.1721, 0.1654, 0.1806],
         [0.1447, 0.1260, 0.1824,  ..., 0.1528, 0.3629, 0.1691],
         [0.5378, 0.6219, 0.3751,  ..., 0.5224, 0.3063, 0.4811]],
        [[0.2500, 0.2640, 0.2500,  ..., 0.2397, 0.2326, 0.2500],
         [0.2500, 0.2453, 0.2500,  ..., 0.2839, 0.3023, 0.2500],
         [0.2500, 0.2453, 0.2500,  ..., 0.2977, 0.2326, 0.2500],
         [0.2500, 0.2453, 0.2500,  ..., 0.1787, 0.2326, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 555:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:12:57,337 [Process: 0] Synchronize training processes
2024-08-16 13:12:57,337 [Process: 0] Evaluating...
2024-08-16 13:12:57,339 [Process: 0] EPOCH 555:
2024-08-16 13:12:57,341 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1565, 0.1461, 0.1462,  ..., 0.1301, 0.1390, 0.1821],
         [0.1565, 0.1461, 0.1462,  ..., 0.1357, 0.1390, 0.1821],
         [0.1565, 0.1461, 0.1462,  ..., 0.1301, 0.1390, 0.1821],
         [0.5306, 0.5617, 0.5615,  ..., 0.6041, 0.5831, 0.4536]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2458, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2625, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2458, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2458, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1693, 0.1726, 0.1519,  ..., 0.1452, 0.2035, 0.1206],
         [0.1693, 0.1671, 0.1592,  ..., 0.1452, 0.2035, 0.1604],
         [0.1693, 0.1493, 0.1519,  ..., 0.1452, 0.2035, 0.1206],
         [0.4922, 0.5109, 0.5371,  ..., 0.5644, 0.3894, 0.5985]],
        [[0.2452, 0.3109, 0.2833,  ..., 0.2356, 0.2500, 0.1844],
         [0.2645, 0.3121, 0.2510,  ..., 0.2933, 0.2500, 0.3498],
         [0.2452, 0.1927, 0.2328,  ..., 0.2356, 0.2500, 0.2901],
         [0.2452, 0.1843, 0.2328,  ..., 0.2356, 0.2500, 0.1757]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 556:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:12:59,229 [Process: 0] Synchronize training processes
2024-08-16 13:12:59,229 [Process: 0] Evaluating...
2024-08-16 13:12:59,231 [Process: 0] EPOCH 556:
2024-08-16 13:12:59,233 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1560, 0.1133, 0.1522,  ..., 0.1564, 0.1266, 0.1370],
         [0.1560, 0.1133, 0.1522,  ..., 0.1564, 0.1266, 0.1370],
         [0.1560, 0.1133, 0.1522,  ..., 0.1564, 0.1266, 0.1370],
         [0.5320, 0.6601, 0.5433,  ..., 0.5307, 0.6203, 0.5889]],
        [[0.2453, 0.2500, 0.2500,  ..., 0.2500, 0.2475, 0.2500],
         [0.2641, 0.2500, 0.2500,  ..., 0.2500, 0.2574, 0.2500],
         [0.2453, 0.2500, 0.2500,  ..., 0.2500, 0.2475, 0.2500],
         [0.2453, 0.2500, 0.2500,  ..., 0.2500, 0.2475, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1472, 0.1668, 0.1642,  ..., 0.1585, 0.1808, 0.1630],
         [0.1472, 0.1668, 0.1882,  ..., 0.1523, 0.1808, 0.1630],
         [0.1472, 0.1668, 0.1642,  ..., 0.1523, 0.1808, 0.1630],
         [0.5585, 0.4995, 0.4833,  ..., 0.5369, 0.4577, 0.5109]],
        [[0.2500, 0.2406, 0.2454,  ..., 0.2445, 0.2500, 0.2500],
         [0.2500, 0.2782, 0.2638,  ..., 0.2665, 0.2500, 0.2500],
         [0.2500, 0.2406, 0.2454,  ..., 0.2445, 0.2500, 0.2500],
         [0.2500, 0.2406, 0.2454,  ..., 0.2445, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 557:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1671, 0.1272, 0.1343,  ..., 0.1266, 0.1623, 0.1490],
         [0.1671, 0.1272, 0.1343,  ..., 0.1266, 0.1623, 0.1490],
         [0.1671, 0.1272, 0.1343,  ..., 0.1266, 0.1623, 0.1490],
         [0.4988, 0.6185, 0.5971,  ..., 0.6202, 0.5132, 0.5530]],
        [[0.2480, 0.2493, 0.2492,  ..., 0.2500, 0.2458, 0.2500],
         [0.2561, 0.2521, 0.2523,  ..., 0.2500, 0.2627, 0.2500],
         [0.2480, 0.2493, 0.2492,  ..., 0.2500, 0.2458, 0.2500],
         [0.2480, 0.2493, 0.2492,  ..., 0.2500, 0.2458, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:01,124 [Process: 0] Synchronize training processes
2024-08-16 13:13:01,125 [Process: 0] Evaluating...
2024-08-16 13:13:01,127 [Process: 0] EPOCH 557:
2024-08-16 13:13:01,128 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:13:03,023 [Process: 0] Synchronize training processes
2024-08-16 13:13:03,024 [Process: 0] Evaluating...
2024-08-16 13:13:03,025 [Process: 0] EPOCH 558:
2024-08-16 13:13:03,027 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1166, 0.1238, 0.1546,  ..., 0.1734, 0.1803, 0.1523],
         [0.1319, 0.1332, 0.2014,  ..., 0.1873, 0.1803, 0.1523],
         [0.1340, 0.1275, 0.1546,  ..., 0.1734, 0.1803, 0.1523],
         [0.6175, 0.6155, 0.4895,  ..., 0.4660, 0.4590, 0.5432]],
        [[0.2481, 0.2361, 0.2955,  ..., 0.2500, 0.3119, 0.2333],
         [0.2557, 0.2916, 0.2842,  ..., 0.2500, 0.2736, 0.3117],
         [0.2481, 0.2361, 0.2294,  ..., 0.2500, 0.2154, 0.2275],
         [0.2481, 0.2361, 0.1910,  ..., 0.2500, 0.1991, 0.2275]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 558:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1638, 0.1396, 0.1267,  ..., 0.1831, 0.1450, 0.1646],
         [0.1638, 0.1396, 0.1267,  ..., 0.1975, 0.1450, 0.1646],
         [0.1638, 0.1396, 0.1267,  ..., 0.1831, 0.1450, 0.1646],
         [0.5085, 0.5812, 0.6198,  ..., 0.4362, 0.5649, 0.5062]],
        [[0.2476, 0.2485, 0.2468,  ..., 0.2500, 0.2461, 0.2500],
         [0.2573, 0.2545, 0.2597,  ..., 0.2500, 0.2618, 0.2500],
         [0.2476, 0.2485, 0.2468,  ..., 0.2500, 0.2461, 0.2500],
         [0.2476, 0.2485, 0.2468,  ..., 0.2500, 0.2461, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:04,920 [Process: 0] Synchronize training processes
2024-08-16 13:13:04,921 [Process: 0] Evaluating...
2024-08-16 13:13:04,922 [Process: 0] EPOCH 559:
2024-08-16 13:13:04,924 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1437, 0.1339, 0.1956,  ..., 0.1043, 0.1978, 0.1179],
         [0.1437, 0.1339, 0.1956,  ..., 0.1043, 0.1978, 0.1179],
         [0.1437, 0.1339, 0.1956,  ..., 0.1043, 0.1978, 0.1179],
         [0.5689, 0.5984, 0.4131,  ..., 0.6872, 0.4065, 0.6463]],
        [[0.2500, 0.2407, 0.2616,  ..., 0.2500, 0.2191, 0.2417],
         [0.2500, 0.2778, 0.2483,  ..., 0.2500, 0.3250, 0.2749],
         [0.2500, 0.2407, 0.2450,  ..., 0.2500, 0.2369, 0.2417],
         [0.2500, 0.2407, 0.2450,  ..., 0.2500, 0.2191, 0.2417]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 559:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1523, 0.1263, 0.1488,  ..., 0.1761, 0.1569, 0.1572],
         [0.1523, 0.1263, 0.1603,  ..., 0.1761, 0.1642, 0.1601],
         [0.1523, 0.1263, 0.1488,  ..., 0.1761, 0.1569, 0.1572],
         [0.5431, 0.6210, 0.5421,  ..., 0.4717, 0.5219, 0.5255]],
        [[0.2500, 0.2478, 0.2500,  ..., 0.2483, 0.2500, 0.2500],
         [0.2500, 0.2566, 0.2500,  ..., 0.2551, 0.2500, 0.2500],
         [0.2500, 0.2478, 0.2500,  ..., 0.2483, 0.2500, 0.2500],
         [0.2500, 0.2478, 0.2500,  ..., 0.2483, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:06,821 [Process: 0] Synchronize training processes
2024-08-16 13:13:06,822 [Process: 0] Evaluating...
2024-08-16 13:13:06,824 [Process: 0] EPOCH 560:
2024-08-16 13:13:06,826 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1968, 0.1063, 0.1498,  ..., 0.1402, 0.6130, 0.1908],
         [0.2146, 0.1063, 0.1498,  ..., 0.1579, 0.1484, 0.1908],
         [0.1598, 0.1063, 0.1498,  ..., 0.1377, 0.1758, 0.1908],
         [0.4288, 0.6811, 0.5505,  ..., 0.5642, 0.0629, 0.4275]],
        [[0.2500, 0.2500, 0.2460,  ..., 0.2500, 0.3083, 0.2500],
         [0.2500, 0.2500, 0.2978,  ..., 0.2500, 0.2306, 0.2500],
         [0.2500, 0.2500, 0.2281,  ..., 0.2500, 0.2306, 0.2500],
         [0.2500, 0.2500, 0.2281,  ..., 0.2500, 0.2306, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 560:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1825, 0.1415, 0.1699,  ..., 0.1421, 0.1457, 0.1916],
         [0.1899, 0.1415, 0.1735,  ..., 0.1421, 0.1512, 0.1996],
         [0.1825, 0.1415, 0.1699,  ..., 0.1421, 0.1457, 0.1916],
         [0.4452, 0.5754, 0.4867,  ..., 0.5737, 0.5573, 0.4173]],
        [[0.2500, 0.2500, 0.2484,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2549,  ..., 0.2512, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2484,  ..., 0.2494, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2484,  ..., 0.2494, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:08,731 [Process: 0] Synchronize training processes
2024-08-16 13:13:08,731 [Process: 0] Evaluating...
2024-08-16 13:13:08,733 [Process: 0] EPOCH 561:
2024-08-16 13:13:08,735 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1505, 0.1687, 0.1274,  ..., 0.1613, 0.3709, 0.1459],
         [0.1505, 0.1873, 0.1274,  ..., 0.1806, 0.1794, 0.1493],
         [0.1505, 0.1687, 0.1274,  ..., 0.1613, 0.2902, 0.1459],
         [0.5486, 0.4754, 0.6177,  ..., 0.4968, 0.1595, 0.5588]],
        [[0.2531, 0.2500, 0.2348,  ..., 0.2117, 0.2500, 0.2500],
         [0.2901, 0.2500, 0.2957,  ..., 0.3418, 0.2500, 0.2500],
         [0.2538, 0.2500, 0.2348,  ..., 0.2348, 0.2500, 0.2500],
         [0.2031, 0.2500, 0.2348,  ..., 0.2117, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 561:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1457, 0.1215, 0.1366,  ..., 0.1785, 0.1439, 0.1408],
         [0.1495, 0.1215, 0.1377,  ..., 0.1785, 0.1506, 0.1408],
         [0.1457, 0.1215, 0.1366,  ..., 0.1785, 0.1439, 0.1408],
         [0.5590, 0.6354, 0.5890,  ..., 0.4646, 0.5617, 0.5775]],
        [[0.2500, 0.2500, 0.2446,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2662,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2446,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2446,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:10,636 [Process: 0] Synchronize training processes
2024-08-16 13:13:10,636 [Process: 0] Evaluating...
2024-08-16 13:13:10,638 [Process: 0] EPOCH 562:
2024-08-16 13:13:10,640 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1575, 0.1737, 0.1273,  ..., 0.1179, 0.1799, 0.1983],
         [0.1575, 0.1786, 0.1267,  ..., 0.1279, 0.0386, 0.1983],
         [0.1575, 0.1737, 0.1507,  ..., 0.1179, 0.7548, 0.1983],
         [0.5276, 0.4740, 0.5953,  ..., 0.6363, 0.0267, 0.4052]],
        [[0.2500, 0.2478, 0.2500,  ..., 0.2563, 0.2500, 0.2500],
         [0.2500, 0.3254, 0.2500,  ..., 0.2486, 0.2500, 0.2500],
         [0.2500, 0.2319, 0.2500,  ..., 0.2513, 0.2500, 0.2500],
         [0.2500, 0.1948, 0.2500,  ..., 0.2438, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 562:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1381, 0.1319, 0.1285,  ..., 0.1227, 0.1432, 0.1292],
         [0.1381, 0.1319, 0.1285,  ..., 0.1227, 0.1432, 0.1361],
         [0.1381, 0.1319, 0.1285,  ..., 0.1227, 0.1432, 0.1292],
         [0.5858, 0.6044, 0.6145,  ..., 0.6318, 0.5705, 0.6056]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2433],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2702],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2433],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:12,532 [Process: 0] Synchronize training processes
2024-08-16 13:13:12,533 [Process: 0] Evaluating...
2024-08-16 13:13:12,535 [Process: 0] EPOCH 563:
2024-08-16 13:13:12,537 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1478, 0.1960, 0.1849,  ..., 0.1756, 0.1996, 0.1570],
         [0.1763, 0.1737, 0.1857,  ..., 0.1756, 0.1996, 0.1570],
         [0.1441, 0.1792, 0.1849,  ..., 0.1756, 0.1996, 0.1643],
         [0.5318, 0.4511, 0.4446,  ..., 0.4731, 0.4013, 0.5217]],
        [[0.2500, 0.2483, 0.2635,  ..., 0.2500, 0.2500, 0.1752],
         [0.2500, 0.2483, 0.3322,  ..., 0.2500, 0.2500, 0.2684],
         [0.2500, 0.2551, 0.2061,  ..., 0.2500, 0.2500, 0.3811],
         [0.2500, 0.2483, 0.1983,  ..., 0.2500, 0.2500, 0.1752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 563:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1607, 0.1407, 0.1728,  ..., 0.1753, 0.1411, 0.1428],
         [0.1607, 0.1407, 0.1728,  ..., 0.1753, 0.1411, 0.1428],
         [0.1607, 0.1407, 0.1728,  ..., 0.1753, 0.1411, 0.1428],
         [0.5180, 0.5779, 0.4816,  ..., 0.4741, 0.5768, 0.5715]],
        [[0.2482, 0.2500, 0.2500,  ..., 0.2500, 0.2495, 0.2500],
         [0.2553, 0.2500, 0.2500,  ..., 0.2500, 0.2514, 0.2500],
         [0.2482, 0.2500, 0.2500,  ..., 0.2500, 0.2495, 0.2500],
         [0.2482, 0.2500, 0.2500,  ..., 0.2500, 0.2495, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:14,473 [Process: 0] Synchronize training processes
2024-08-16 13:13:14,473 [Process: 0] Evaluating...
2024-08-16 13:13:14,475 [Process: 0] EPOCH 564:
2024-08-16 13:13:14,477 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0831, 0.1784, 0.1445,  ..., 0.1297, 0.2404, 0.1464],
         [0.0861, 0.1279, 0.1681,  ..., 0.1441, 0.1936, 0.1464],
         [0.0831, 0.1146, 0.1445,  ..., 0.1297, 0.2748, 0.1464],
         [0.7477, 0.5791, 0.5430,  ..., 0.5966, 0.2912, 0.5609]],
        [[0.2500, 0.2831, 0.2530,  ..., 0.2316, 0.2439, 0.2500],
         [0.2500, 0.3095, 0.3161,  ..., 0.2939, 0.2683, 0.2500],
         [0.2500, 0.2037, 0.2155,  ..., 0.2840, 0.2439, 0.2500],
         [0.2500, 0.2037, 0.2155,  ..., 0.1904, 0.2439, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 564:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1153, 0.1293, 0.1376,  ..., 0.1239, 0.1236, 0.1240],
         [0.1153, 0.1293, 0.1376,  ..., 0.1239, 0.1236, 0.1240],
         [0.1153, 0.1293, 0.1376,  ..., 0.1239, 0.1236, 0.1240],
         [0.6540, 0.6120, 0.5873,  ..., 0.6282, 0.6293, 0.6281]],
        [[0.2478, 0.2500, 0.2484,  ..., 0.2500, 0.2490, 0.2486],
         [0.2567, 0.2500, 0.2547,  ..., 0.2500, 0.2531, 0.2541],
         [0.2478, 0.2500, 0.2484,  ..., 0.2500, 0.2490, 0.2486],
         [0.2478, 0.2500, 0.2484,  ..., 0.2500, 0.2490, 0.2486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:16,419 [Process: 0] Synchronize training processes
2024-08-16 13:13:16,419 [Process: 0] Evaluating...
2024-08-16 13:13:16,421 [Process: 0] EPOCH 565:
2024-08-16 13:13:16,423 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1216, 0.1240, 0.1385,  ..., 0.2049, 0.1574, 0.1934],
         [0.1216, 0.1240, 0.1219,  ..., 0.1148, 0.1574, 0.1934],
         [0.1249, 0.1773, 0.1558,  ..., 0.1148, 0.1574, 0.1934],
         [0.6319, 0.5746, 0.5838,  ..., 0.5655, 0.5278, 0.4198]],
        [[0.1980, 0.2493, 0.2311,  ..., 0.2445, 0.2236, 0.2411],
         [0.3294, 0.2520, 0.3068,  ..., 0.3377, 0.2953, 0.3156],
         [0.2745, 0.2493, 0.2311,  ..., 0.2418, 0.3011, 0.2217],
         [0.1980, 0.2493, 0.2311,  ..., 0.1760, 0.1799, 0.2217]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 565:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1480, 0.1359, 0.1234,  ..., 0.1426, 0.1528, 0.1083],
         [0.1499, 0.1359, 0.1234,  ..., 0.1426, 0.1528, 0.1113],
         [0.1480, 0.1359, 0.1234,  ..., 0.1426, 0.1528, 0.1083],
         [0.5540, 0.5924, 0.6299,  ..., 0.5723, 0.5416, 0.6721]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2475, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2575, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2475, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2475, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:13:18,318 [Process: 0] Synchronize training processes
2024-08-16 13:13:18,318 [Process: 0] Evaluating...
2024-08-16 13:13:18,320 [Process: 0] EPOCH 566:
2024-08-16 13:13:18,322 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1499, 0.1165, 0.1148,  ..., 0.1682, 0.2235, 0.1713],
         [0.1691, 0.1165, 0.1148,  ..., 0.1566, 0.2235, 0.2027],
         [0.1484, 0.1165, 0.1148,  ..., 0.1566, 0.2235, 0.1713],
         [0.5326, 0.6505, 0.6557,  ..., 0.5185, 0.3295, 0.4548]],
        [[0.2201, 0.3125, 0.2476,  ..., 0.2500, 0.2470, 0.2500],
         [0.3396, 0.2565, 0.2573,  ..., 0.2500, 0.2792, 0.2500],
         [0.2201, 0.2155, 0.2476,  ..., 0.2500, 0.2369, 0.2500],
         [0.2201, 0.2155, 0.2476,  ..., 0.2500, 0.2369, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 566:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1471, 0.1098, 0.1265,  ..., 0.1568, 0.1372, 0.1286],
         [0.1471, 0.1098, 0.1265,  ..., 0.1568, 0.1459, 0.1286],
         [0.1471, 0.1098, 0.1265,  ..., 0.1568, 0.1372, 0.1286],
         [0.5586, 0.6707, 0.6204,  ..., 0.5296, 0.5797, 0.6142]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1247, 0.1453, 0.1332,  ..., 0.1511, 0.1740, 0.1956],
         [0.1434, 0.1453, 0.1332,  ..., 0.1820, 0.1740, 0.2124],
         [0.1247, 0.1453, 0.1332,  ..., 0.1511, 0.1740, 0.1500],
         [0.6071, 0.5642, 0.6003,  ..., 0.5158, 0.4780, 0.4420]],
        [[0.2500, 0.2461, 0.2316,  ..., 0.2496, 0.2396, 0.3140],
         [0.2500, 0.2617, 0.3053,  ..., 0.2758, 0.2811, 0.2790],
         [0.2500, 0.2461, 0.2316,  ..., 0.2373, 0.2396, 0.2035],
         [0.2500, 0.2461, 0.2316,  ..., 0.2373, 0.2396, 0.2035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:20,220 [Process: 0] Synchronize training processes
2024-08-16 13:13:20,220 [Process: 0] Evaluating...
2024-08-16 13:13:20,222 [Process: 0] EPOCH 567:
2024-08-16 13:13:20,224 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 567:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1780, 0.1182, 0.1582,  ..., 0.1109, 0.1508, 0.1618],
         [0.1780, 0.1304, 0.1582,  ..., 0.1109, 0.1547, 0.1618],
         [0.1780, 0.1182, 0.1582,  ..., 0.1109, 0.1508, 0.1618],
         [0.4661, 0.6333, 0.5253,  ..., 0.6674, 0.5437, 0.5146]],
        [[0.2457, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2629, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2457, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2457, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1695, 0.1318, 0.1261,  ..., 0.1761, 0.1375, 0.1546],
         [0.1397, 0.1318, 0.1261,  ..., 0.1761, 0.1375, 0.1546],
         [0.1375, 0.1318, 0.1261,  ..., 0.1761, 0.1375, 0.1546],
         [0.5533, 0.6045, 0.6216,  ..., 0.4717, 0.5874, 0.5361]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2980, 0.2442, 0.3414],
         [0.2500, 0.2500, 0.2500,  ..., 0.2548, 0.2675, 0.2860],
         [0.2500, 0.2500, 0.2500,  ..., 0.2781, 0.2442, 0.2183],
         [0.2500, 0.2500, 0.2500,  ..., 0.1691, 0.2442, 0.1544]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:22,114 [Process: 0] Synchronize training processes
2024-08-16 13:13:22,114 [Process: 0] Evaluating...
2024-08-16 13:13:22,116 [Process: 0] EPOCH 568:
2024-08-16 13:13:22,118 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 568:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1433, 0.1423, 0.1571,  ..., 0.1693, 0.1515, 0.1554],
         [0.1433, 0.1423, 0.1672,  ..., 0.1754, 0.1515, 0.1554],
         [0.1433, 0.1423, 0.1571,  ..., 0.1693, 0.1515, 0.1554],
         [0.5702, 0.5730, 0.5185,  ..., 0.4861, 0.5455, 0.5338]],
        [[0.2499, 0.2500, 0.2473,  ..., 0.2500, 0.2500, 0.2500],
         [0.2502, 0.2500, 0.2580,  ..., 0.2500, 0.2500, 0.2500],
         [0.2499, 0.2500, 0.2473,  ..., 0.2500, 0.2500, 0.2500],
         [0.2499, 0.2500, 0.2473,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1810, 0.1421, 0.1731,  ..., 0.1508, 0.1695, 0.1679],
         [0.2228, 0.1577, 0.1731,  ..., 0.1772, 0.1695, 0.2031],
         [0.1810, 0.1421, 0.1731,  ..., 0.1508, 0.1695, 0.1679],
         [0.4152, 0.5581, 0.4806,  ..., 0.5211, 0.4916, 0.4611]],
        [[0.1911, 0.2500, 0.2333,  ..., 0.2500, 0.2500, 0.2500],
         [0.3341, 0.2500, 0.2768,  ..., 0.2500, 0.2500, 0.2500],
         [0.3111, 0.2500, 0.2565,  ..., 0.2500, 0.2500, 0.2500],
         [0.1638, 0.2500, 0.2333,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 569:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:13:24,011 [Process: 0] Synchronize training processes
2024-08-16 13:13:24,011 [Process: 0] Evaluating...
2024-08-16 13:13:24,013 [Process: 0] EPOCH 569:
2024-08-16 13:13:24,015 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1279, 0.1627, 0.1139,  ..., 0.1759, 0.1821, 0.1657],
         [0.1279, 0.1627, 0.1140,  ..., 0.1759, 0.1821, 0.1657],
         [0.1279, 0.1627, 0.1139,  ..., 0.1759, 0.1821, 0.1657],
         [0.6164, 0.5120, 0.6582,  ..., 0.4722, 0.4536, 0.5030]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2457, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2628, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2457, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2457, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1684, 0.1495, 0.1475,  ..., 0.1847, 0.2083, 0.1445],
         [0.1784, 0.1495, 0.1532,  ..., 0.1847, 0.2083, 0.1445],
         [0.1684, 0.1567, 0.1717,  ..., 0.1847, 0.2083, 0.1445],
         [0.4849, 0.5443, 0.5275,  ..., 0.4460, 0.3752, 0.5664]],
        [[0.2500, 0.2496, 0.2500,  ..., 0.2474, 0.2500, 0.2405],
         [0.2500, 0.2513, 0.2500,  ..., 0.2577, 0.2500, 0.2785],
         [0.2500, 0.2496, 0.2500,  ..., 0.2474, 0.2500, 0.2405],
         [0.2500, 0.2496, 0.2500,  ..., 0.2474, 0.2500, 0.2405]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 570:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:13:25,913 [Process: 0] Synchronize training processes
2024-08-16 13:13:25,913 [Process: 0] Evaluating...
2024-08-16 13:13:25,915 [Process: 0] EPOCH 570:
2024-08-16 13:13:25,917 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1645, 0.1534, 0.1235,  ..., 0.1572, 0.1099, 0.1503],
         [0.1695, 0.1583, 0.1235,  ..., 0.1592, 0.1099, 0.1606],
         [0.1645, 0.1534, 0.1235,  ..., 0.1572, 0.1099, 0.1503],
         [0.5016, 0.5350, 0.6295,  ..., 0.5264, 0.6702, 0.5389]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2479, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2563, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2479, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2479, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1555, 0.1566, 0.1430,  ..., 0.1315, 0.2333, 0.1538],
         [0.1499, 0.1590, 0.1430,  ..., 0.1315, 0.2333, 0.1538],
         [0.1411, 0.1566, 0.1430,  ..., 0.1315, 0.2333, 0.1538],
         [0.5534, 0.5277, 0.5709,  ..., 0.6054, 0.3002, 0.5387]],
        [[0.2496, 0.2500, 0.2864,  ..., 0.2500, 0.2500, 0.2758],
         [0.2496, 0.2500, 0.2245,  ..., 0.2500, 0.2500, 0.2414],
         [0.2511, 0.2500, 0.2646,  ..., 0.2500, 0.2500, 0.2414],
         [0.2496, 0.2500, 0.2245,  ..., 0.2500, 0.2500, 0.2414]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 571:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:13:27,804 [Process: 0] Synchronize training processes
2024-08-16 13:13:27,805 [Process: 0] Evaluating...
2024-08-16 13:13:27,807 [Process: 0] EPOCH 571:
2024-08-16 13:13:27,808 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1355, 0.1759, 0.1428,  ..., 0.1587, 0.1587, 0.1433],
         [0.1414, 0.1759, 0.1428,  ..., 0.1674, 0.1618, 0.1546],
         [0.1355, 0.1759, 0.1428,  ..., 0.1587, 0.1587, 0.1433],
         [0.5875, 0.4722, 0.5716,  ..., 0.5153, 0.5208, 0.5589]],
        [[0.2465, 0.2480, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2605, 0.2559, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2465, 0.2480, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2465, 0.2480, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1221, 0.1668, 0.1350,  ..., 0.1446, 0.2014, 0.0963],
         [0.1221, 0.2179, 0.1504,  ..., 0.1446, 0.2014, 0.0963],
         [0.1221, 0.1641, 0.1350,  ..., 0.1446, 0.2014, 0.0963],
         [0.6336, 0.4511, 0.5796,  ..., 0.5661, 0.3959, 0.7112]],
        [[0.2500, 0.3039, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2427, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2391, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2143, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 572:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:13:29,700 [Process: 0] Synchronize training processes
2024-08-16 13:13:29,701 [Process: 0] Evaluating...
2024-08-16 13:13:29,703 [Process: 0] EPOCH 572:
2024-08-16 13:13:29,704 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1591, 0.1352, 0.1307,  ..., 0.1853, 0.1240, 0.1249],
         [0.1601, 0.1352, 0.1307,  ..., 0.1853, 0.1240, 0.1249],
         [0.1591, 0.1352, 0.1307,  ..., 0.1853, 0.1240, 0.1249],
         [0.5218, 0.5944, 0.6079,  ..., 0.4440, 0.6279, 0.6252]],
        [[0.2500, 0.2500, 0.2499,  ..., 0.2498, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2502,  ..., 0.2505, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2499,  ..., 0.2498, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2499,  ..., 0.2498, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1708, 0.1719, 0.1512,  ..., 0.1268, 0.1613, 0.1520],
         [0.1708, 0.1978, 0.1512,  ..., 0.1268, 0.1613, 0.1844],
         [0.1708, 0.1719, 0.1512,  ..., 0.1268, 0.3247, 0.1520],
         [0.4876, 0.4584, 0.5463,  ..., 0.6195, 0.3527, 0.5116]],
        [[0.2500, 0.2459, 0.2440,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2883, 0.2612,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2692, 0.2508,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.1966, 0.2440,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 573:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:13:31,612 [Process: 0] Synchronize training processes
2024-08-16 13:13:31,612 [Process: 0] Evaluating...
2024-08-16 13:13:31,614 [Process: 0] EPOCH 573:
2024-08-16 13:13:31,616 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1502, 0.1487, 0.1317,  ..., 0.1316, 0.1253, 0.1661],
         [0.1502, 0.1487, 0.1384,  ..., 0.1316, 0.1269, 0.1661],
         [0.1502, 0.1487, 0.1317,  ..., 0.1316, 0.1253, 0.1661],
         [0.5494, 0.5538, 0.5981,  ..., 0.6053, 0.6225, 0.5018]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1631, 0.1886, 0.1328,  ..., 0.1609, 0.2223, 0.1307],
         [0.1631, 0.1513, 0.1328,  ..., 0.1805, 0.2223, 0.1307],
         [0.1631, 0.1513, 0.1328,  ..., 0.1609, 0.2223, 0.1307],
         [0.5106, 0.5087, 0.6017,  ..., 0.4977, 0.3332, 0.6080]],
        [[0.2500, 0.2193, 0.2277,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2911, 0.2730,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.3242, 0.2716,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.1653, 0.2277,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 574:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:13:33,518 [Process: 0] Synchronize training processes
2024-08-16 13:13:33,518 [Process: 0] Evaluating...
2024-08-16 13:13:33,520 [Process: 0] EPOCH 574:
2024-08-16 13:13:33,522 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1438, 0.1238, 0.1659,  ..., 0.1995, 0.1461, 0.1451],
         [0.1438, 0.1238, 0.1670,  ..., 0.1995, 0.1461, 0.1451],
         [0.1438, 0.1238, 0.1659,  ..., 0.1995, 0.1461, 0.1451],
         [0.5687, 0.6287, 0.5012,  ..., 0.4015, 0.5618, 0.5646]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2485, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2545, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2485, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2485, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1771, 0.1344, 0.1281,  ..., 0.1633, 0.1703, 0.2131],
         [0.2059, 0.1344, 0.1281,  ..., 0.1675, 0.1703, 0.1765],
         [0.1771, 0.1344, 0.1281,  ..., 0.1575, 0.1703, 0.1740],
         [0.4400, 0.5969, 0.6158,  ..., 0.5118, 0.4890, 0.4364]],
        [[0.2415, 0.2500, 0.2432,  ..., 0.2452, 0.2500, 0.2500],
         [0.2754, 0.2500, 0.2432,  ..., 0.2644, 0.2500, 0.2500],
         [0.2415, 0.2500, 0.2703,  ..., 0.2452, 0.2500, 0.2500],
         [0.2415, 0.2500, 0.2432,  ..., 0.2452, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 575:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:13:35,456 [Process: 0] Synchronize training processes
2024-08-16 13:13:35,457 [Process: 0] Evaluating...
2024-08-16 13:13:35,458 [Process: 0] EPOCH 575:
2024-08-16 13:13:35,460 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1704, 0.1183, 0.1148,  ..., 0.1239, 0.1252, 0.1256],
         [0.1744, 0.1183, 0.1148,  ..., 0.1239, 0.1252, 0.1256],
         [0.1704, 0.1183, 0.1148,  ..., 0.1239, 0.1252, 0.1256],
         [0.4848, 0.6451, 0.6555,  ..., 0.6284, 0.6245, 0.6233]],
        [[0.2500, 0.2493, 0.2500,  ..., 0.2438, 0.2500, 0.2500],
         [0.2500, 0.2522, 0.2500,  ..., 0.2685, 0.2500, 0.2500],
         [0.2500, 0.2493, 0.2500,  ..., 0.2438, 0.2500, 0.2500],
         [0.2500, 0.2493, 0.2500,  ..., 0.2438, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1059, 0.1698, 0.1400,  ..., 0.1192, 0.2500, 0.1201],
         [0.1059, 0.1525, 0.1400,  ..., 0.1192, 0.2500, 0.1214],
         [0.1059, 0.1436, 0.1400,  ..., 0.1192, 0.2500, 0.1201],
         [0.6823, 0.5340, 0.5801,  ..., 0.6423, 0.2500, 0.6384]],
        [[0.1991, 0.2361, 0.2500,  ..., 0.2500, 0.2155, 0.2446],
         [0.2515, 0.2918, 0.2500,  ..., 0.2500, 0.3197, 0.2661],
         [0.4004, 0.2361, 0.2500,  ..., 0.2500, 0.2951, 0.2446],
         [0.1490, 0.2361, 0.2500,  ..., 0.2500, 0.1697, 0.2446]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 576:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:13:37,360 [Process: 0] Synchronize training processes
2024-08-16 13:13:37,360 [Process: 0] Evaluating...
2024-08-16 13:13:37,362 [Process: 0] EPOCH 576:
2024-08-16 13:13:37,364 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1708, 0.1549, 0.1762,  ..., 0.1735, 0.1465, 0.1792],
         [0.1708, 0.1549, 0.1762,  ..., 0.1735, 0.1465, 0.1792],
         [0.1708, 0.1549, 0.1762,  ..., 0.1735, 0.1465, 0.1792],
         [0.4877, 0.5354, 0.4713,  ..., 0.4795, 0.5605, 0.4624]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1692, 0.1571, 0.2058,  ..., 0.1557, 0.2246, 0.1017],
         [0.1799, 0.1846, 0.2012,  ..., 0.1474, 0.2246, 0.1231],
         [0.1692, 0.1571, 0.1509,  ..., 0.1474, 0.2246, 0.1017],
         [0.4818, 0.5012, 0.4421,  ..., 0.5495, 0.3263, 0.6735]],
        [[0.2475, 0.2705, 0.2540,  ..., 0.2678, 0.2500, 0.2482],
         [0.2575, 0.2725, 0.2487,  ..., 0.2982, 0.2500, 0.2554],
         [0.2475, 0.2285, 0.2487,  ..., 0.2170, 0.2500, 0.2482],
         [0.2475, 0.2285, 0.2487,  ..., 0.2170, 0.2500, 0.2482]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 577:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1281, 0.1659, 0.1121,  ..., 0.1029, 0.1405, 0.1443],
         [0.1337, 0.1659, 0.1121,  ..., 0.1029, 0.1405, 0.1443],
         [0.1281, 0.1659, 0.1121,  ..., 0.1029, 0.1405, 0.1443],
         [0.6101, 0.5024, 0.6638,  ..., 0.6913, 0.5785, 0.5671]],
        [[0.2481, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2463],
         [0.2557, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2610],
         [0.2481, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2463],
         [0.2481, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:39,258 [Process: 0] Synchronize training processes
2024-08-16 13:13:39,259 [Process: 0] Evaluating...
2024-08-16 13:13:39,260 [Process: 0] EPOCH 577:
2024-08-16 13:13:39,262 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1441, 0.1304, 0.1498,  ..., 0.1579, 0.2025, 0.1861],
         [0.1468, 0.1447, 0.1651,  ..., 0.1579, 0.2025, 0.1861],
         [0.1441, 0.1304, 0.1496,  ..., 0.1579, 0.2025, 0.1861],
         [0.5649, 0.5945, 0.5355,  ..., 0.5264, 0.3925, 0.4416]],
        [[0.2500, 0.2500, 0.2431,  ..., 0.2080, 0.2475, 0.2987],
         [0.2500, 0.2500, 0.2608,  ..., 0.3766, 0.2575, 0.2595],
         [0.2500, 0.2500, 0.2767,  ..., 0.2178, 0.2475, 0.2219],
         [0.2500, 0.2500, 0.2194,  ..., 0.1976, 0.2475, 0.2198]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 578:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1913, 0.1854, 0.1230,  ..., 0.1891, 0.1464, 0.1578],
         [0.1913, 0.1854, 0.1230,  ..., 0.1891, 0.1464, 0.1578],
         [0.1913, 0.1854, 0.1230,  ..., 0.1891, 0.1464, 0.1578],
         [0.4261, 0.4437, 0.6311,  ..., 0.4328, 0.5609, 0.5266]],
        [[0.2470, 0.2498, 0.2500,  ..., 0.2500, 0.2478, 0.2500],
         [0.2591, 0.2505, 0.2500,  ..., 0.2500, 0.2567, 0.2500],
         [0.2470, 0.2498, 0.2500,  ..., 0.2500, 0.2478, 0.2500],
         [0.2470, 0.2498, 0.2500,  ..., 0.2500, 0.2478, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:41,160 [Process: 0] Synchronize training processes
2024-08-16 13:13:41,160 [Process: 0] Evaluating...
2024-08-16 13:13:41,162 [Process: 0] EPOCH 578:
2024-08-16 13:13:41,164 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:13:43,089 [Process: 0] Synchronize training processes
2024-08-16 13:13:43,090 [Process: 0] Evaluating...
2024-08-16 13:13:43,091 [Process: 0] EPOCH 579:
2024-08-16 13:13:43,093 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1668, 0.1776, 0.1383,  ..., 0.1914, 0.2096, 0.1277],
         [0.1693, 0.1657, 0.1646,  ..., 0.1893, 0.2096, 0.1410],
         [0.1668, 0.1448, 0.1383,  ..., 0.1685, 0.2609, 0.1277],
         [0.4971, 0.5119, 0.5589,  ..., 0.4508, 0.3200, 0.6037]],
        [[0.2391, 0.2500, 0.2223,  ..., 0.2500, 0.2661, 0.2422],
         [0.2828, 0.2500, 0.2978,  ..., 0.2500, 0.2912, 0.2422],
         [0.2391, 0.2500, 0.2605,  ..., 0.2500, 0.2214, 0.2735],
         [0.2391, 0.2500, 0.2194,  ..., 0.2500, 0.2214, 0.2422]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 579:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1292, 0.1557, 0.1380,  ..., 0.1413, 0.1641, 0.1719],
         [0.1292, 0.1557, 0.1380,  ..., 0.1413, 0.1641, 0.1719],
         [0.1292, 0.1557, 0.1380,  ..., 0.1413, 0.1641, 0.1719],
         [0.6123, 0.5329, 0.5859,  ..., 0.5761, 0.5076, 0.4844]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2492, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2524, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2492, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2492, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:44,991 [Process: 0] Synchronize training processes
2024-08-16 13:13:44,992 [Process: 0] Evaluating...
2024-08-16 13:13:44,994 [Process: 0] EPOCH 580:
2024-08-16 13:13:44,996 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1132, 0.1471, 0.1161,  ..., 0.1731, 0.2265, 0.1671],
         [0.1132, 0.1716, 0.1206,  ..., 0.1731, 0.2265, 0.1671],
         [0.1132, 0.1471, 0.1161,  ..., 0.1731, 0.2265, 0.1671],
         [0.6604, 0.5342, 0.6473,  ..., 0.4807, 0.3205, 0.4986]],
        [[0.1951, 0.2500, 0.2500,  ..., 0.2588, 0.2148, 0.2233],
         [0.3179, 0.2500, 0.2500,  ..., 0.2471, 0.3016, 0.3302],
         [0.3010, 0.2500, 0.2500,  ..., 0.2471, 0.3224, 0.2233],
         [0.1859, 0.2500, 0.2500,  ..., 0.2471, 0.1612, 0.2233]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 580:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1555, 0.1546, 0.1674,  ..., 0.1186, 0.1496, 0.1867],
         [0.1555, 0.1546, 0.1674,  ..., 0.1186, 0.1496, 0.1867],
         [0.1555, 0.1546, 0.1674,  ..., 0.1186, 0.1496, 0.1867],
         [0.5336, 0.5363, 0.4977,  ..., 0.6443, 0.5513, 0.4399]],
        [[0.2500, 0.2500, 0.2451,  ..., 0.2482, 0.2471, 0.2469],
         [0.2500, 0.2500, 0.2647,  ..., 0.2554, 0.2587, 0.2593],
         [0.2500, 0.2500, 0.2451,  ..., 0.2482, 0.2471, 0.2469],
         [0.2500, 0.2500, 0.2451,  ..., 0.2482, 0.2471, 0.2469]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:46,896 [Process: 0] Synchronize training processes
2024-08-16 13:13:46,896 [Process: 0] Evaluating...
2024-08-16 13:13:46,898 [Process: 0] EPOCH 581:
2024-08-16 13:13:46,900 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1637, 0.1459, 0.1350,  ..., 0.1356, 0.2148, 0.1528],
         [0.1334, 0.1459, 0.1350,  ..., 0.1443, 0.2148, 0.1982],
         [0.1334, 0.1459, 0.1350,  ..., 0.1356, 0.2966, 0.1528],
         [0.5695, 0.5622, 0.5951,  ..., 0.5845, 0.2737, 0.4962]],
        [[0.2486, 0.2500, 0.2644,  ..., 0.2400, 0.2500, 0.2500],
         [0.3328, 0.2500, 0.2480,  ..., 0.3635, 0.2500, 0.2500],
         [0.2093, 0.2500, 0.2531,  ..., 0.1983, 0.2500, 0.2500],
         [0.2093, 0.2500, 0.2346,  ..., 0.1983, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 581:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1316, 0.1602, 0.1524,  ..., 0.1312, 0.1246, 0.1631],
         [0.1316, 0.1602, 0.1524,  ..., 0.1312, 0.1246, 0.1631],
         [0.1316, 0.1602, 0.1524,  ..., 0.1312, 0.1246, 0.1631],
         [0.6052, 0.5194, 0.5428,  ..., 0.6063, 0.6263, 0.5106]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:48,808 [Process: 0] Synchronize training processes
2024-08-16 13:13:48,808 [Process: 0] Evaluating...
2024-08-16 13:13:48,810 [Process: 0] EPOCH 582:
2024-08-16 13:13:48,812 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1744, 0.1772, 0.2068,  ..., 0.1504, 0.1297, 0.1594],
         [0.1744, 0.1772, 0.2345,  ..., 0.1504, 0.1297, 0.1631],
         [0.1744, 0.1772, 0.2335,  ..., 0.1504, 0.1297, 0.1594],
         [0.4769, 0.4684, 0.3251,  ..., 0.5488, 0.6108, 0.5182]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2477, 0.2462, 0.2216],
         [0.2500, 0.2500, 0.2500,  ..., 0.2568, 0.2615, 0.3153],
         [0.2500, 0.2500, 0.2500,  ..., 0.2477, 0.2462, 0.2415],
         [0.2500, 0.2500, 0.2500,  ..., 0.2477, 0.2462, 0.2216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 582:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1868, 0.1432, 0.1606,  ..., 0.1566, 0.1429, 0.1375],
         [0.1868, 0.1432, 0.1639,  ..., 0.1566, 0.1429, 0.1375],
         [0.1868, 0.1432, 0.1606,  ..., 0.1566, 0.1429, 0.1375],
         [0.4396, 0.5703, 0.5149,  ..., 0.5303, 0.5712, 0.5876]],
        [[0.2500, 0.2500, 0.2434,  ..., 0.2467, 0.2519, 0.2475],
         [0.2500, 0.2500, 0.2699,  ..., 0.2598, 0.2494, 0.2576],
         [0.2500, 0.2500, 0.2434,  ..., 0.2467, 0.2494, 0.2475],
         [0.2500, 0.2500, 0.2434,  ..., 0.2467, 0.2494, 0.2475]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:50,709 [Process: 0] Synchronize training processes
2024-08-16 13:13:50,709 [Process: 0] Evaluating...
2024-08-16 13:13:50,711 [Process: 0] EPOCH 583:
2024-08-16 13:13:50,713 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1594, 0.1211, 0.1530,  ..., 0.1385, 0.1720, 0.1307],
         [0.1594, 0.1211, 0.1530,  ..., 0.1385, 0.1720, 0.1307],
         [0.1594, 0.1211, 0.1530,  ..., 0.1602, 0.2161, 0.1307],
         [0.5218, 0.6367, 0.5410,  ..., 0.5628, 0.4399, 0.6080]],
        [[0.2498, 0.2160, 0.2432,  ..., 0.2322, 0.2495, 0.2500],
         [0.2498, 0.2405, 0.2579,  ..., 0.3097, 0.2514, 0.2500],
         [0.2506, 0.3275, 0.2557,  ..., 0.2920, 0.2495, 0.2500],
         [0.2498, 0.2160, 0.2432,  ..., 0.1661, 0.2495, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 583:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1642, 0.1642, 0.1651,  ..., 0.1154, 0.1487, 0.1683],
         [0.1642, 0.1642, 0.1651,  ..., 0.1154, 0.1488, 0.1683],
         [0.1642, 0.1642, 0.1651,  ..., 0.1154, 0.1487, 0.1683],
         [0.5075, 0.5073, 0.5047,  ..., 0.6537, 0.5539, 0.4950]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2485],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2546],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2485],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2485]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:52,610 [Process: 0] Synchronize training processes
2024-08-16 13:13:52,610 [Process: 0] Evaluating...
2024-08-16 13:13:52,612 [Process: 0] EPOCH 584:
2024-08-16 13:13:52,614 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1822, 0.1499, 0.2139,  ..., 0.1378, 0.2277, 0.1754],
         [0.1822, 0.1499, 0.2139,  ..., 0.1416, 0.2277, 0.1767],
         [0.1822, 0.1499, 0.2139,  ..., 0.1343, 0.2277, 0.1754],
         [0.4534, 0.5502, 0.3582,  ..., 0.5864, 0.3168, 0.4726]],
        [[0.2055, 0.2294, 0.2500,  ..., 0.2140, 0.2500, 0.2500],
         [0.3503, 0.3117, 0.2500,  ..., 0.3181, 0.2500, 0.2501],
         [0.2387, 0.2294, 0.2500,  ..., 0.2539, 0.2500, 0.2500],
         [0.2055, 0.2294, 0.2500,  ..., 0.2140, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 584:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0969, 0.1332, 0.1449,  ..., 0.1519, 0.1779, 0.1420],
         [0.0969, 0.1332, 0.1449,  ..., 0.1519, 0.1779, 0.1420],
         [0.0969, 0.1332, 0.1449,  ..., 0.1519, 0.1779, 0.1420],
         [0.7093, 0.6003, 0.5653,  ..., 0.5444, 0.4662, 0.5739]],
        [[0.2500, 0.2749, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2694, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2278, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2278, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:54,508 [Process: 0] Synchronize training processes
2024-08-16 13:13:54,509 [Process: 0] Evaluating...
2024-08-16 13:13:54,511 [Process: 0] EPOCH 585:
2024-08-16 13:13:54,513 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1194, 0.1620, 0.1440,  ..., 0.1411, 0.2500, 0.0774],
         [0.1194, 0.1620, 0.1461,  ..., 0.1423, 0.2500, 0.0774],
         [0.1194, 0.1620, 0.1401,  ..., 0.1411, 0.2500, 0.0774],
         [0.6418, 0.5139, 0.5698,  ..., 0.5755, 0.2500, 0.7679]],
        [[0.2645, 0.2500, 0.2500,  ..., 0.2500, 0.2462, 0.2500],
         [0.2845, 0.2500, 0.2500,  ..., 0.2500, 0.2613, 0.2500],
         [0.2255, 0.2500, 0.2500,  ..., 0.2500, 0.2462, 0.2500],
         [0.2255, 0.2500, 0.2500,  ..., 0.2500, 0.2462, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 585:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1410, 0.1751, 0.1242,  ..., 0.1277, 0.1407, 0.1231],
         [0.1410, 0.1751, 0.1242,  ..., 0.1277, 0.1407, 0.1231],
         [0.1410, 0.1751, 0.1242,  ..., 0.1277, 0.1407, 0.1231],
         [0.5770, 0.4746, 0.6274,  ..., 0.6168, 0.5779, 0.6306]],
        [[0.2500, 0.2500, 0.2478,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2567,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2478,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2478,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:13:56,399 [Process: 0] Synchronize training processes
2024-08-16 13:13:56,400 [Process: 0] Evaluating...
2024-08-16 13:13:56,402 [Process: 0] EPOCH 586:
2024-08-16 13:13:56,404 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2081, 0.3048, 0.1404,  ..., 0.3472, 0.1465, 0.1205],
         [0.1462, 0.2058, 0.1777,  ..., 0.1559, 0.1465, 0.1258],
         [0.1427, 0.1703, 0.1404,  ..., 0.1559, 0.1465, 0.1205],
         [0.5030, 0.3192, 0.5415,  ..., 0.3410, 0.5604, 0.6332]],
        [[0.2500, 0.2405, 0.2500,  ..., 0.2500, 0.2496, 0.4179],
         [0.2500, 0.2785, 0.2500,  ..., 0.2500, 0.2512, 0.2281],
         [0.2500, 0.2405, 0.2500,  ..., 0.2500, 0.2496, 0.1770],
         [0.2500, 0.2405, 0.2500,  ..., 0.2500, 0.2496, 0.1770]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 586:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1458, 0.1608, 0.1618,  ..., 0.1578, 0.1324, 0.1323],
         [0.1458, 0.1608, 0.1618,  ..., 0.1578, 0.1324, 0.1323],
         [0.1458, 0.1608, 0.1618,  ..., 0.1578, 0.1324, 0.1323],
         [0.5626, 0.5177, 0.5147,  ..., 0.5266, 0.6028, 0.6032]],
        [[0.2500, 0.2398, 0.2476,  ..., 0.2500, 0.2499, 0.2472],
         [0.2500, 0.2806, 0.2573,  ..., 0.2500, 0.2503, 0.2584],
         [0.2500, 0.2398, 0.2476,  ..., 0.2500, 0.2499, 0.2472],
         [0.2500, 0.2398, 0.2476,  ..., 0.2500, 0.2499, 0.2472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1376, 0.1520, 0.1261,  ..., 0.1212, 0.3514, 0.1499],
         [0.1376, 0.1975, 0.1566,  ..., 0.1493, 0.2051, 0.1499],
         [0.1376, 0.1520, 0.1261,  ..., 0.1212, 0.2051, 0.1499],
         [0.5871, 0.4986, 0.5912,  ..., 0.6083, 0.2384, 0.5502]],
        [[0.2500, 0.2500, 0.2917,  ..., 0.2163, 0.2439, 0.2903],
         [0.2500, 0.2500, 0.2361,  ..., 0.3156, 0.3479, 0.2366],
         [0.2500, 0.2500, 0.2361,  ..., 0.2698, 0.2355, 0.2366],
         [0.2500, 0.2500, 0.2361,  ..., 0.1984, 0.1728, 0.2366]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:13:58,293 [Process: 0] Synchronize training processes
2024-08-16 13:13:58,294 [Process: 0] Evaluating...
2024-08-16 13:13:58,295 [Process: 0] EPOCH 587:
2024-08-16 13:13:58,297 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 587:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1348, 0.1564, 0.1565,  ..., 0.1206, 0.1562, 0.1416],
         [0.1348, 0.1564, 0.1565,  ..., 0.1206, 0.1562, 0.1416],
         [0.1348, 0.1564, 0.1565,  ..., 0.1206, 0.1562, 0.1416],
         [0.5957, 0.5308, 0.5306,  ..., 0.6381, 0.5313, 0.5752]],
        [[0.2476, 0.2500, 0.2472,  ..., 0.2500, 0.2500, 0.2500],
         [0.2573, 0.2500, 0.2622,  ..., 0.2500, 0.2500, 0.2500],
         [0.2476, 0.2500, 0.2453,  ..., 0.2500, 0.2500, 0.2500],
         [0.2476, 0.2500, 0.2453,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0856, 0.1439, 0.1088,  ..., 0.1593, 0.1498, 0.1289],
         [0.1094, 0.1473, 0.1088,  ..., 0.1807, 0.1498, 0.1489],
         [0.0856, 0.1439, 0.1088,  ..., 0.1593, 0.1498, 0.1268],
         [0.7193, 0.5650, 0.6737,  ..., 0.5007, 0.5505, 0.5953]],
        [[0.2500, 0.2359, 0.2679,  ..., 0.2360, 0.2600, 0.2452],
         [0.2500, 0.2965, 0.2578,  ..., 0.2919, 0.3173, 0.2644],
         [0.2500, 0.2338, 0.2519,  ..., 0.2360, 0.2157, 0.2452],
         [0.2500, 0.2338, 0.2224,  ..., 0.2360, 0.2070, 0.2452]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 588:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:14:00,184 [Process: 0] Synchronize training processes
2024-08-16 13:14:00,184 [Process: 0] Evaluating...
2024-08-16 13:14:00,186 [Process: 0] EPOCH 588:
2024-08-16 13:14:00,188 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1802, 0.1324, 0.1358,  ..., 0.1356, 0.1890, 0.1442],
         [0.1802, 0.1324, 0.1358,  ..., 0.1356, 0.1912, 0.1442],
         [0.1802, 0.1324, 0.1358,  ..., 0.1356, 0.1890, 0.1442],
         [0.4594, 0.6029, 0.5926,  ..., 0.5931, 0.4307, 0.5674]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1576, 0.1625, 0.1472,  ..., 0.1702, 0.2029, 0.1550],
         [0.1730, 0.1896, 0.1482,  ..., 0.1892, 0.2029, 0.1659],
         [0.1576, 0.1625, 0.1472,  ..., 0.1702, 0.2029, 0.1779],
         [0.5117, 0.4855, 0.5574,  ..., 0.4704, 0.3912, 0.5012]],
        [[0.2015, 0.2490, 0.2500,  ..., 0.2500, 0.2500, 0.2471],
         [0.2369, 0.2529, 0.2500,  ..., 0.2500, 0.2500, 0.2605],
         [0.3863, 0.2490, 0.2500,  ..., 0.2500, 0.2500, 0.2462],
         [0.1753, 0.2490, 0.2500,  ..., 0.2500, 0.2500, 0.2462]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 589:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:14:02,078 [Process: 0] Synchronize training processes
2024-08-16 13:14:02,078 [Process: 0] Evaluating...
2024-08-16 13:14:02,080 [Process: 0] EPOCH 589:
2024-08-16 13:14:02,082 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1511, 0.1402, 0.1413,  ..., 0.1311, 0.1851, 0.1116],
         [0.1511, 0.1402, 0.1413,  ..., 0.1311, 0.1851, 0.1116],
         [0.1511, 0.1402, 0.1413,  ..., 0.1311, 0.1851, 0.1116],
         [0.5467, 0.5793, 0.5762,  ..., 0.6067, 0.4448, 0.6653]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2465, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2604, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2465, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2465, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1594, 0.1703, 0.1271,  ..., 0.1122, 0.1788, 0.2074],
         [0.1594, 0.2269, 0.1701,  ..., 0.1122, 0.1788, 0.1692],
         [0.1600, 0.2596, 0.1690,  ..., 0.1122, 0.1788, 0.1501],
         [0.5213, 0.3431, 0.5338,  ..., 0.6633, 0.4636, 0.4733]],
        [[0.2806, 0.2364, 0.1906,  ..., 0.2247, 0.2500, 0.2436],
         [0.2120, 0.2845, 0.2399,  ..., 0.3260, 0.2500, 0.2693],
         [0.3235, 0.2564, 0.3789,  ..., 0.2247, 0.2500, 0.2436],
         [0.1839, 0.2228, 0.1906,  ..., 0.2247, 0.2500, 0.2436]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 590:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:14:03,972 [Process: 0] Synchronize training processes
2024-08-16 13:14:03,972 [Process: 0] Evaluating...
2024-08-16 13:14:03,974 [Process: 0] EPOCH 590:
2024-08-16 13:14:03,976 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1176, 0.1498, 0.1327,  ..., 0.1610, 0.1455, 0.1370],
         [0.1176, 0.1498, 0.1327,  ..., 0.1610, 0.1455, 0.1370],
         [0.1176, 0.1498, 0.1327,  ..., 0.1610, 0.1455, 0.1370],
         [0.6473, 0.5506, 0.6018,  ..., 0.5169, 0.5635, 0.5889]],
        [[0.2585, 0.2500, 0.2500,  ..., 0.2500, 0.2477, 0.2492],
         [0.2543, 0.2500, 0.2500,  ..., 0.2500, 0.2570, 0.2525],
         [0.2436, 0.2500, 0.2500,  ..., 0.2500, 0.2477, 0.2492],
         [0.2436, 0.2500, 0.2500,  ..., 0.2500, 0.2477, 0.2492]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1525, 0.1593, 0.1534,  ..., 0.1324, 0.1442, 0.1715],
         [0.1676, 0.1593, 0.1534,  ..., 0.1703, 0.1442, 0.2068],
         [0.1548, 0.1593, 0.1534,  ..., 0.1240, 0.1442, 0.1715],
         [0.5251, 0.5222, 0.5397,  ..., 0.5733, 0.5674, 0.4502]],
        [[0.2394, 0.2486, 0.2500,  ..., 0.2246, 0.2923, 0.2451],
         [0.2394, 0.2542, 0.2500,  ..., 0.3294, 0.2359, 0.2451],
         [0.2817, 0.2486, 0.2500,  ..., 0.2657, 0.2359, 0.2647],
         [0.2394, 0.2486, 0.2500,  ..., 0.1804, 0.2359, 0.2451]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 591:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:14:05,877 [Process: 0] Synchronize training processes
2024-08-16 13:14:05,878 [Process: 0] Evaluating...
2024-08-16 13:14:05,880 [Process: 0] EPOCH 591:
2024-08-16 13:14:05,882 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1777, 0.1007, 0.1450,  ..., 0.1626, 0.1733, 0.1624],
         [0.1777, 0.1007, 0.1450,  ..., 0.1626, 0.1733, 0.1624],
         [0.1777, 0.1007, 0.1450,  ..., 0.1626, 0.1733, 0.1624],
         [0.4669, 0.6979, 0.5649,  ..., 0.5123, 0.4800, 0.5129]],
        [[0.2474, 0.2450, 0.2500,  ..., 0.2480, 0.2498, 0.2500],
         [0.2577, 0.2649, 0.2500,  ..., 0.2560, 0.2507, 0.2500],
         [0.2474, 0.2450, 0.2500,  ..., 0.2480, 0.2498, 0.2500],
         [0.2474, 0.2450, 0.2500,  ..., 0.2480, 0.2498, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1265, 0.1538, 0.1334,  ..., 0.0988, 0.1413, 0.1720],
         [0.1343, 0.1538, 0.1334,  ..., 0.0988, 0.1413, 0.1234],
         [0.1619, 0.1538, 0.1334,  ..., 0.0988, 0.1413, 0.1625],
         [0.5772, 0.5385, 0.5998,  ..., 0.7036, 0.5760, 0.5421]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2348, 0.2195, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2588, 0.3676, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.3345, 0.2401, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.1719, 0.1728, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 592:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:14:07,774 [Process: 0] Synchronize training processes
2024-08-16 13:14:07,775 [Process: 0] Evaluating...
2024-08-16 13:14:07,777 [Process: 0] EPOCH 592:
2024-08-16 13:14:07,779 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1401, 0.1459, 0.1680,  ..., 0.1382, 0.1487, 0.1364],
         [0.1401, 0.1459, 0.1680,  ..., 0.1382, 0.1487, 0.1364],
         [0.1401, 0.1459, 0.1680,  ..., 0.1382, 0.1487, 0.1364],
         [0.5797, 0.5624, 0.4961,  ..., 0.5854, 0.5540, 0.5909]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2587, 0.2484, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2471, 0.2547, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2471, 0.2484, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2471, 0.2484, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1385, 0.1744, 0.1116,  ..., 0.1938, 0.1110, 0.1569],
         [0.1385, 0.1744, 0.1155,  ..., 0.2439, 0.1110, 0.1569],
         [0.1385, 0.1744, 0.1243,  ..., 0.1646, 0.1110, 0.1569],
         [0.5846, 0.4769, 0.6486,  ..., 0.3977, 0.6670, 0.5293]],
        [[0.2428, 0.2056, 0.2366,  ..., 0.2149, 0.2500, 0.2397],
         [0.2717, 0.2680, 0.2903,  ..., 0.3336, 0.2500, 0.2397],
         [0.2428, 0.3298, 0.2366,  ..., 0.2367, 0.2500, 0.2809],
         [0.2428, 0.1965, 0.2366,  ..., 0.2149, 0.2500, 0.2397]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 593:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:14:09,673 [Process: 0] Synchronize training processes
2024-08-16 13:14:09,674 [Process: 0] Evaluating...
2024-08-16 13:14:09,676 [Process: 0] EPOCH 593:
2024-08-16 13:14:09,678 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1529, 0.1618, 0.1177,  ..., 0.1311, 0.1315, 0.1268],
         [0.1529, 0.1618, 0.1177,  ..., 0.1311, 0.1315, 0.1268],
         [0.1529, 0.1618, 0.1177,  ..., 0.1311, 0.1315, 0.1268],
         [0.5414, 0.5145, 0.6468,  ..., 0.6067, 0.6054, 0.6196]],
        [[0.2500, 0.2462, 0.2500,  ..., 0.2500, 0.2500, 0.2487],
         [0.2500, 0.2613, 0.2500,  ..., 0.2500, 0.2500, 0.2538],
         [0.2500, 0.2462, 0.2500,  ..., 0.2500, 0.2500, 0.2487],
         [0.2500, 0.2462, 0.2500,  ..., 0.2500, 0.2500, 0.2487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1739, 0.1390, 0.1220,  ..., 0.1323, 0.1483, 0.1456],
         [0.1976, 0.1390, 0.1220,  ..., 0.1359, 0.1483, 0.1456],
         [0.1739, 0.1390, 0.1220,  ..., 0.1323, 0.1483, 0.1456],
         [0.4545, 0.5830, 0.6340,  ..., 0.5996, 0.5550, 0.5633]],
        [[0.2375, 0.2500, 0.2500,  ..., 0.2482, 0.2374, 0.2156],
         [0.2874, 0.2500, 0.2500,  ..., 0.2554, 0.3318, 0.3203],
         [0.2375, 0.2500, 0.2500,  ..., 0.2482, 0.2402, 0.2646],
         [0.2375, 0.2500, 0.2500,  ..., 0.2482, 0.1906, 0.1995]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 594:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-16 13:14:11,572 [Process: 0] Synchronize training processes
2024-08-16 13:14:11,572 [Process: 0] Evaluating...
2024-08-16 13:14:11,574 [Process: 0] EPOCH 594:
2024-08-16 13:14:11,576 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1654, 0.1608, 0.1540,  ..., 0.1539, 0.1263, 0.1485],
         [0.1654, 0.1643, 0.1540,  ..., 0.1539, 0.1294, 0.1498],
         [0.1654, 0.1608, 0.1540,  ..., 0.1539, 0.1263, 0.1485],
         [0.5039, 0.5142, 0.5379,  ..., 0.5382, 0.6181, 0.5532]],
        [[0.2482, 0.2500, 0.2500,  ..., 0.2500, 0.2486, 0.2492],
         [0.2553, 0.2500, 0.2500,  ..., 0.2500, 0.2542, 0.2523],
         [0.2482, 0.2500, 0.2500,  ..., 0.2500, 0.2486, 0.2492],
         [0.2482, 0.2500, 0.2500,  ..., 0.2500, 0.2486, 0.2492]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2047, 0.1609, 0.2031,  ..., 0.1673, 0.1623, 0.1694],
         [0.2047, 0.1609, 0.2031,  ..., 0.1673, 0.0730, 0.1694],
         [0.2047, 0.1742, 0.2031,  ..., 0.1673, 0.6437, 0.1694],
         [0.3860, 0.5041, 0.3906,  ..., 0.4982, 0.1210, 0.4917]],
        [[0.2357, 0.2719, 0.1601,  ..., 0.3796, 0.2753, 0.2500],
         [0.2930, 0.3755, 0.3442,  ..., 0.2512, 0.2416, 0.2500],
         [0.2357, 0.1763, 0.3377,  ..., 0.2267, 0.2416, 0.2500],
         [0.2357, 0.1763, 0.1581,  ..., 0.1425, 0.2416, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 595:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:14:13,464 [Process: 0] Synchronize training processes
2024-08-16 13:14:13,464 [Process: 0] Evaluating...
2024-08-16 13:14:13,466 [Process: 0] EPOCH 595:
2024-08-16 13:14:13,468 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1581, 0.1269, 0.1574,  ..., 0.1715, 0.1131, 0.1057],
         [0.1581, 0.1269, 0.1574,  ..., 0.1752, 0.1131, 0.1057],
         [0.1581, 0.1269, 0.1574,  ..., 0.1715, 0.1131, 0.1057],
         [0.5257, 0.6194, 0.5278,  ..., 0.4818, 0.6607, 0.6829]],
        [[0.2500, 0.2449, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2654, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2449, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2449, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1480, 0.1344, 0.1680,  ..., 0.1698, 0.2364, 0.1144],
         [0.1480, 0.1344, 0.1994,  ..., 0.1866, 0.2364, 0.1190],
         [0.1480, 0.1344, 0.1972,  ..., 0.1698, 0.2364, 0.1308],
         [0.5560, 0.5968, 0.4354,  ..., 0.4738, 0.2908, 0.6357]],
        [[0.2032, 0.2109, 0.2299,  ..., 0.2500, 0.2500, 0.2500],
         [0.2450, 0.3279, 0.3102,  ..., 0.2500, 0.2500, 0.2500],
         [0.3487, 0.2503, 0.2299,  ..., 0.2500, 0.2500, 0.2500],
         [0.2031, 0.2109, 0.2299,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 596:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1530, 0.1657, 0.1791,  ..., 0.1657, 0.1544, 0.1298],
         [0.1618, 0.1657, 0.1791,  ..., 0.1657, 0.1544, 0.1298],
         [0.1530, 0.1657, 0.1791,  ..., 0.1657, 0.1544, 0.1298],
         [0.5322, 0.5028, 0.4628,  ..., 0.5029, 0.5369, 0.6105]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:14:15,420 [Process: 0] Synchronize training processes
2024-08-16 13:14:15,420 [Process: 0] Evaluating...
2024-08-16 13:14:15,423 [Process: 0] EPOCH 596:
2024-08-16 13:14:15,425 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1441, 0.1183, 0.1799,  ..., 0.1528, 0.1889, 0.1167],
         [0.1441, 0.1183, 0.1854,  ..., 0.1559, 0.1889, 0.1167],
         [0.1441, 0.1183, 0.1799,  ..., 0.1520, 0.2073, 0.1167],
         [0.5678, 0.6452, 0.4548,  ..., 0.5393, 0.4148, 0.6499]],
        [[0.2330, 0.2491, 0.2500,  ..., 0.2500, 0.2439, 0.2397],
         [0.3009, 0.2526, 0.2500,  ..., 0.2500, 0.2441, 0.2809],
         [0.2330, 0.2491, 0.2500,  ..., 0.2500, 0.2681, 0.2397],
         [0.2330, 0.2491, 0.2500,  ..., 0.2500, 0.2439, 0.2397]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 597:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1339, 0.1490, 0.1363,  ..., 0.2120, 0.1292, 0.1542],
         [0.1339, 0.1490, 0.1363,  ..., 0.2120, 0.1292, 0.1542],
         [0.1339, 0.1490, 0.1363,  ..., 0.2120, 0.1292, 0.1542],
         [0.5983, 0.5531, 0.5910,  ..., 0.3639, 0.6125, 0.5374]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2519],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:14:17,333 [Process: 0] Synchronize training processes
2024-08-16 13:14:17,333 [Process: 0] Evaluating...
2024-08-16 13:14:17,335 [Process: 0] EPOCH 597:
2024-08-16 13:14:17,337 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1513, 0.1507, 0.1280,  ..., 0.1562, 0.1566, 0.1568],
         [0.1855, 0.1711, 0.1541,  ..., 0.1280, 0.1566, 0.1568],
         [0.1513, 0.1507, 0.1280,  ..., 0.1230, 0.1566, 0.1568],
         [0.5119, 0.5274, 0.5899,  ..., 0.5928, 0.5301, 0.5297]],
        [[0.1964, 0.2397, 0.2500,  ..., 0.2500, 0.2708, 0.2446],
         [0.3073, 0.2636, 0.2500,  ..., 0.2500, 0.2431, 0.2662],
         [0.2999, 0.2569, 0.2500,  ..., 0.2500, 0.2431, 0.2446],
         [0.1964, 0.2397, 0.2500,  ..., 0.2500, 0.2431, 0.2446]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 598:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1681, 0.1556, 0.1288,  ..., 0.1763, 0.1761, 0.1563],
         [0.1681, 0.1556, 0.1288,  ..., 0.1763, 0.1761, 0.1563],
         [0.1681, 0.1556, 0.1288,  ..., 0.1763, 0.1761, 0.1563],
         [0.4958, 0.5333, 0.6135,  ..., 0.4711, 0.4716, 0.5312]],
        [[0.2500, 0.2491, 0.2500,  ..., 0.2478, 0.2490, 0.2500],
         [0.2500, 0.2526, 0.2500,  ..., 0.2566, 0.2531, 0.2500],
         [0.2500, 0.2491, 0.2500,  ..., 0.2478, 0.2490, 0.2500],
         [0.2500, 0.2491, 0.2500,  ..., 0.2478, 0.2490, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:14:19,218 [Process: 0] Synchronize training processes
2024-08-16 13:14:19,219 [Process: 0] Evaluating...
2024-08-16 13:14:19,221 [Process: 0] EPOCH 598:
2024-08-16 13:14:19,223 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:14:21,126 [Process: 0] Synchronize training processes
2024-08-16 13:14:21,127 [Process: 0] Evaluating...
2024-08-16 13:14:21,129 [Process: 0] EPOCH 599:
2024-08-16 13:14:21,131 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1552, 0.1156, 0.1497,  ..., 0.1432, 0.1790, 0.1311],
         [0.1591, 0.1156, 0.1631,  ..., 0.1432, 0.1774, 0.1501],
         [0.1552, 0.1156, 0.1497,  ..., 0.1432, 0.2022, 0.1311],
         [0.5306, 0.6531, 0.5376,  ..., 0.5704, 0.4413, 0.5877]],
        [[0.2500, 0.2500, 0.2667,  ..., 0.2292, 0.2193, 0.2263],
         [0.2500, 0.2500, 0.2102,  ..., 0.2669, 0.2814, 0.3210],
         [0.2500, 0.2500, 0.3375,  ..., 0.2746, 0.3390, 0.2263],
         [0.2500, 0.2500, 0.1855,  ..., 0.2292, 0.1603, 0.2263]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 599:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1711, 0.1613, 0.1374,  ..., 0.1524, 0.1154, 0.1730],
         [0.1711, 0.1613, 0.1374,  ..., 0.1524, 0.1154, 0.1741],
         [0.1711, 0.1613, 0.1374,  ..., 0.1524, 0.1154, 0.1730],
         [0.4867, 0.5161, 0.5878,  ..., 0.5428, 0.6538, 0.4799]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:14:23,027 [Process: 0] Synchronize training processes
2024-08-16 13:14:23,027 [Process: 0] Evaluating...
2024-08-16 13:14:23,029 [Process: 0] EPOCH 600:
2024-08-16 13:14:23,031 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1279, 0.1050, 0.1679,  ..., 0.2008, 0.2031, 0.1685],
         [0.1469, 0.1115, 0.1398,  ..., 0.2290, 0.2031, 0.1796],
         [0.1253, 0.1050, 0.1375,  ..., 0.2008, 0.2031, 0.1685],
         [0.5999, 0.6785, 0.5548,  ..., 0.3694, 0.3906, 0.4834]],
        [[0.2471, 0.2451, 0.2500,  ..., 0.2224, 0.2500, 0.2734],
         [0.2471, 0.2607, 0.2500,  ..., 0.2922, 0.2500, 0.2422],
         [0.2588, 0.2490, 0.2500,  ..., 0.2630, 0.2500, 0.2422],
         [0.2471, 0.2451, 0.2500,  ..., 0.2224, 0.2500, 0.2422]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 600:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1727, 0.1076, 0.1398,  ..., 0.1534, 0.1218, 0.1504],
         [0.1727, 0.1116, 0.1400,  ..., 0.1534, 0.1250, 0.1504],
         [0.1727, 0.1076, 0.1398,  ..., 0.1534, 0.1218, 0.1504],
         [0.4819, 0.6733, 0.5804,  ..., 0.5399, 0.6313, 0.5487]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2474, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2578, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2474, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2474, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:14:24,937 [Process: 0] Synchronize training processes
2024-08-16 13:14:24,937 [Process: 0] Evaluating...
2024-08-16 13:14:24,939 [Process: 0] EPOCH 601:
2024-08-16 13:14:24,941 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1174, 0.1699, 0.1004,  ..., 0.1114, 0.1567, 0.1659],
         [0.1238, 0.1784, 0.1058,  ..., 0.1245, 0.1567, 0.2013],
         [0.1174, 0.1699, 0.1004,  ..., 0.1551, 0.1567, 0.1606],
         [0.6414, 0.4819, 0.6934,  ..., 0.6089, 0.5299, 0.4722]],
        [[0.2437, 0.2500, 0.2424,  ..., 0.2862, 0.2350, 0.2696],
         [0.2688, 0.2500, 0.2424,  ..., 0.2658, 0.2634, 0.3082],
         [0.2437, 0.2500, 0.2729,  ..., 0.2240, 0.2667, 0.2267],
         [0.2437, 0.2500, 0.2424,  ..., 0.2240, 0.2350, 0.1955]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 601:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1133, 0.1368, 0.1127,  ..., 0.1645, 0.1631, 0.1731],
         [0.1143, 0.1420, 0.1127,  ..., 0.1645, 0.1650, 0.1795],
         [0.1133, 0.1368, 0.1127,  ..., 0.1645, 0.1631, 0.1731],
         [0.6591, 0.5845, 0.6619,  ..., 0.5064, 0.5089, 0.4743]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:14:26,839 [Process: 0] Synchronize training processes
2024-08-16 13:14:26,839 [Process: 0] Evaluating...
2024-08-16 13:14:26,841 [Process: 0] EPOCH 602:
2024-08-16 13:14:26,843 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1161, 0.1275, 0.1474,  ..., 0.1110, 0.1553, 0.1349],
         [0.1280, 0.1530, 0.1752,  ..., 0.1110, 0.1761, 0.1526],
         [0.1161, 0.1275, 0.1472,  ..., 0.1110, 0.1553, 0.1349],
         [0.6399, 0.5921, 0.5303,  ..., 0.6669, 0.5133, 0.5776]],
        [[0.2500, 0.2500, 0.2004,  ..., 0.2218, 0.2500, 0.2056],
         [0.2500, 0.2500, 0.2469,  ..., 0.2685, 0.2500, 0.3457],
         [0.2500, 0.2500, 0.3524,  ..., 0.2878, 0.2500, 0.2430],
         [0.2500, 0.2500, 0.2004,  ..., 0.2218, 0.2500, 0.2056]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 602:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1681, 0.1683, 0.1375,  ..., 0.1811, 0.1736, 0.1443],
         [0.1681, 0.1683, 0.1375,  ..., 0.1811, 0.1736, 0.1443],
         [0.1681, 0.1683, 0.1375,  ..., 0.1811, 0.1736, 0.1443],
         [0.4958, 0.4951, 0.5876,  ..., 0.4567, 0.4791, 0.5670]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:14:28,734 [Process: 0] Synchronize training processes
2024-08-16 13:14:28,734 [Process: 0] Evaluating...
2024-08-16 13:14:28,736 [Process: 0] EPOCH 603:
2024-08-16 13:14:28,738 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1334, 0.1538, 0.1218,  ..., 0.1465, 0.2495, 0.1334],
         [0.1417, 0.1538, 0.1218,  ..., 0.1607, 0.2495, 0.1412],
         [0.1334, 0.1538, 0.1218,  ..., 0.1465, 0.2495, 0.1334],
         [0.5914, 0.5387, 0.6347,  ..., 0.5463, 0.2514, 0.5921]],
        [[0.2101, 0.2500, 0.2500,  ..., 0.2678, 0.2965, 0.2378],
         [0.2753, 0.2500, 0.2500,  ..., 0.3191, 0.3234, 0.3464],
         [0.3044, 0.2500, 0.2500,  ..., 0.2065, 0.2379, 0.2079],
         [0.2101, 0.2500, 0.2500,  ..., 0.2065, 0.1423, 0.2079]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 603:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1383, 0.2122, 0.1640,  ..., 0.1325, 0.1328, 0.1071],
         [0.1383, 0.2122, 0.1640,  ..., 0.1363, 0.1328, 0.1148],
         [0.1383, 0.2122, 0.1640,  ..., 0.1325, 0.1328, 0.1071],
         [0.5852, 0.3634, 0.5080,  ..., 0.5986, 0.6016, 0.6710]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:14:30,641 [Process: 0] Synchronize training processes
2024-08-16 13:14:30,642 [Process: 0] Evaluating...
2024-08-16 13:14:30,644 [Process: 0] EPOCH 604:
2024-08-16 13:14:30,645 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1693, 0.1415, 0.1806,  ..., 0.1053, 0.2288, 0.1585],
         [0.1693, 0.1415, 0.1658,  ..., 0.1053, 0.1466, 0.1585],
         [0.1996, 0.1630, 0.1658,  ..., 0.1053, 0.1466, 0.1585],
         [0.4617, 0.5540, 0.4879,  ..., 0.6841, 0.4780, 0.5245]],
        [[0.2526, 0.2607, 0.2500,  ..., 0.2793, 0.2500, 0.1928],
         [0.2491, 0.2464, 0.2500,  ..., 0.2722, 0.2500, 0.2888],
         [0.2491, 0.2464, 0.2500,  ..., 0.2320, 0.2500, 0.3255],
         [0.2491, 0.2464, 0.2500,  ..., 0.2165, 0.2500, 0.1928]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 604:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1799, 0.1556, 0.1352,  ..., 0.1469, 0.1944, 0.1287],
         [0.1848, 0.1556, 0.1352,  ..., 0.1469, 0.1944, 0.1287],
         [0.1799, 0.1556, 0.1352,  ..., 0.1469, 0.1944, 0.1287],
         [0.4554, 0.5333, 0.5945,  ..., 0.5592, 0.4167, 0.6140]],
        [[0.2500, 0.2500, 0.2494,  ..., 0.2500, 0.2505, 0.2490],
         [0.2500, 0.2500, 0.2517,  ..., 0.2500, 0.2498, 0.2529],
         [0.2500, 0.2500, 0.2494,  ..., 0.2500, 0.2498, 0.2490],
         [0.2500, 0.2500, 0.2494,  ..., 0.2500, 0.2498, 0.2490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:14:32,552 [Process: 0] Synchronize training processes
2024-08-16 13:14:32,552 [Process: 0] Evaluating...
2024-08-16 13:14:32,554 [Process: 0] EPOCH 605:
2024-08-16 13:14:32,556 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1407, 0.1253, 0.1542,  ..., 0.1095, 0.1084, 0.1602],
         [0.1407, 0.1253, 0.1542,  ..., 0.1095, 0.1084, 0.1602],
         [0.1407, 0.1253, 0.1542,  ..., 0.1142, 0.1084, 0.1602],
         [0.5778, 0.6242, 0.5375,  ..., 0.6668, 0.6748, 0.5195]],
        [[0.2440, 0.2360, 0.2543,  ..., 0.2754, 0.2500, 0.2500],
         [0.2679, 0.2920, 0.2486,  ..., 0.2605, 0.2500, 0.2500],
         [0.2440, 0.2360, 0.2486,  ..., 0.2320, 0.2500, 0.2500],
         [0.2440, 0.2360, 0.2486,  ..., 0.2320, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 605:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1556, 0.1546, 0.1850,  ..., 0.1032, 0.1512, 0.1668],
         [0.1556, 0.1546, 0.1855,  ..., 0.1032, 0.1512, 0.1668],
         [0.1556, 0.1546, 0.1850,  ..., 0.1032, 0.1512, 0.1668],
         [0.5332, 0.5362, 0.4445,  ..., 0.6905, 0.5465, 0.4996]],
        [[0.2500, 0.2493, 0.2499,  ..., 0.2884, 0.2500, 0.2500],
         [0.2500, 0.2520, 0.2503,  ..., 0.2372, 0.2500, 0.2500],
         [0.2500, 0.2493, 0.2499,  ..., 0.2372, 0.2500, 0.2500],
         [0.2500, 0.2493, 0.2499,  ..., 0.2372, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1553, 0.1215, 0.1639,  ..., 0.2135, 0.1141, 0.1234],
         [0.1490, 0.1215, 0.1729,  ..., 0.2135, 0.1141, 0.1234],
         [0.1851, 0.1215, 0.1639,  ..., 0.2135, 0.1141, 0.1234],
         [0.5106, 0.6355, 0.4992,  ..., 0.3596, 0.6578, 0.6299]],
        [[0.2967, 0.2500, 0.2304,  ..., 0.2500, 0.2500, 0.2390],
         [0.2571, 0.2500, 0.2872,  ..., 0.2500, 0.2500, 0.2390],
         [0.2231, 0.2500, 0.2521,  ..., 0.2500, 0.2500, 0.2829],
         [0.2231, 0.2500, 0.2304,  ..., 0.2500, 0.2500, 0.2390]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:14:34,464 [Process: 0] Synchronize training processes
2024-08-16 13:14:34,464 [Process: 0] Evaluating...
2024-08-16 13:14:34,466 [Process: 0] EPOCH 606:
2024-08-16 13:14:34,468 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 606:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1463, 0.1566, 0.1592,  ..., 0.1472, 0.1808, 0.1470],
         [0.1522, 0.1566, 0.1592,  ..., 0.1472, 0.1817, 0.1470],
         [0.1463, 0.1566, 0.1592,  ..., 0.1472, 0.1808, 0.1470],
         [0.5551, 0.5301, 0.5225,  ..., 0.5583, 0.4567, 0.5590]],
        [[0.2500, 0.2403, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2790, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2403, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2403, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2239, 0.1244, 0.1396,  ..., 0.1049, 0.1451, 0.1003],
         [0.2058, 0.1247, 0.1417,  ..., 0.1049, 0.1451, 0.1123],
         [0.1656, 0.1244, 0.1396,  ..., 0.1049, 0.1451, 0.1000],
         [0.4047, 0.6265, 0.5792,  ..., 0.6854, 0.5646, 0.6874]],
        [[0.2933, 0.2384, 0.2500,  ..., 0.2500, 0.2416, 0.2500],
         [0.2773, 0.2872, 0.2500,  ..., 0.2500, 0.2416, 0.2500],
         [0.2161, 0.2372, 0.2500,  ..., 0.2500, 0.2753, 0.2500],
         [0.2133, 0.2372, 0.2500,  ..., 0.2500, 0.2416, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:14:36,379 [Process: 0] Synchronize training processes
2024-08-16 13:14:36,379 [Process: 0] Evaluating...
2024-08-16 13:14:36,381 [Process: 0] EPOCH 607:
2024-08-16 13:14:36,383 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 607:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1343, 0.1267, 0.1356,  ..., 0.1649, 0.1702, 0.1420],
         [0.1343, 0.1267, 0.1356,  ..., 0.1649, 0.1702, 0.1420],
         [0.1343, 0.1267, 0.1356,  ..., 0.1649, 0.1702, 0.1420],
         [0.5971, 0.6198, 0.5931,  ..., 0.5052, 0.4895, 0.5741]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1284, 0.1298, 0.1200,  ..., 0.1072, 0.1527, 0.2060],
         [0.1284, 0.1293, 0.1348,  ..., 0.1268, 0.1527, 0.2060],
         [0.1284, 0.1292, 0.1200,  ..., 0.1319, 0.1527, 0.2060],
         [0.6149, 0.6117, 0.6252,  ..., 0.6341, 0.5420, 0.3820]],
        [[0.2366, 0.2495, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2902, 0.2516, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2366, 0.2495, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2366, 0.2495, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 608:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:14:38,281 [Process: 0] Synchronize training processes
2024-08-16 13:14:38,282 [Process: 0] Evaluating...
2024-08-16 13:14:38,284 [Process: 0] EPOCH 608:
2024-08-16 13:14:38,286 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1727, 0.1436, 0.1786,  ..., 0.1483, 0.1320, 0.1741],
         [0.1727, 0.1449, 0.1786,  ..., 0.1483, 0.1320, 0.1741],
         [0.1727, 0.1436, 0.1786,  ..., 0.1483, 0.1320, 0.1741],
         [0.4819, 0.5678, 0.4641,  ..., 0.5551, 0.6040, 0.4778]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1571, 0.1692, 0.1474,  ..., 0.1941, 0.1079, 0.1670],
         [0.1735, 0.1692, 0.1646,  ..., 0.1941, 0.1079, 0.1670],
         [0.1571, 0.1692, 0.1474,  ..., 0.1941, 0.1079, 0.1670],
         [0.5124, 0.4923, 0.5407,  ..., 0.4178, 0.6764, 0.4991]],
        [[0.2492, 0.2357, 0.2500,  ..., 0.2500, 0.2500, 0.2528],
         [0.2860, 0.2740, 0.2500,  ..., 0.2500, 0.2500, 0.2579],
         [0.2324, 0.2709, 0.2500,  ..., 0.2500, 0.2500, 0.2447],
         [0.2324, 0.2194, 0.2500,  ..., 0.2500, 0.2500, 0.2447]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 609:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:14:40,183 [Process: 0] Synchronize training processes
2024-08-16 13:14:40,183 [Process: 0] Evaluating...
2024-08-16 13:14:40,185 [Process: 0] EPOCH 609:
2024-08-16 13:14:40,187 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1550, 0.1397, 0.1589,  ..., 0.1526, 0.1444, 0.1513],
         [0.1550, 0.1397, 0.1589,  ..., 0.1576, 0.1444, 0.1513],
         [0.1550, 0.1397, 0.1589,  ..., 0.1526, 0.1444, 0.1513],
         [0.5351, 0.5809, 0.5232,  ..., 0.5372, 0.5667, 0.5462]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2488, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2537, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2488, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2488, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1564, 0.1288, 0.1308,  ..., 0.1884, 0.1851, 0.1298],
         [0.1564, 0.1288, 0.1308,  ..., 0.1884, 0.1851, 0.1298],
         [0.1564, 0.1324, 0.1308,  ..., 0.1884, 0.1851, 0.1298],
         [0.5309, 0.6100, 0.6076,  ..., 0.4349, 0.4448, 0.6107]],
        [[0.2495, 0.2331, 0.2653,  ..., 0.2500, 0.2500, 0.2524],
         [0.2515, 0.3007, 0.2698,  ..., 0.2500, 0.2500, 0.3106],
         [0.2495, 0.2331, 0.2325,  ..., 0.2500, 0.2500, 0.2185],
         [0.2495, 0.2331, 0.2325,  ..., 0.2500, 0.2500, 0.2185]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 610:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:14:42,087 [Process: 0] Synchronize training processes
2024-08-16 13:14:42,087 [Process: 0] Evaluating...
2024-08-16 13:14:42,089 [Process: 0] EPOCH 610:
2024-08-16 13:14:42,091 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1726, 0.1469, 0.1460,  ..., 0.1343, 0.1636, 0.1528],
         [0.1726, 0.1469, 0.1460,  ..., 0.1343, 0.1636, 0.1528],
         [0.1726, 0.1469, 0.1460,  ..., 0.1343, 0.1636, 0.1528],
         [0.4821, 0.5594, 0.5619,  ..., 0.5971, 0.5092, 0.5416]],
        [[0.2500, 0.2490, 0.2500,  ..., 0.2500, 0.2500, 0.2422],
         [0.2500, 0.2531, 0.2500,  ..., 0.2500, 0.2500, 0.2735],
         [0.2500, 0.2490, 0.2500,  ..., 0.2500, 0.2500, 0.2422],
         [0.2500, 0.2490, 0.2500,  ..., 0.2500, 0.2500, 0.2422]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1463, 0.1437, 0.1283,  ..., 0.1612, 0.1084, 0.1757],
         [0.1463, 0.1437, 0.1424,  ..., 0.1690, 0.1084, 0.1757],
         [0.1463, 0.1437, 0.1801,  ..., 0.2049, 0.1084, 0.1757],
         [0.5611, 0.5688, 0.5491,  ..., 0.4649, 0.6749, 0.4729]],
        [[0.2358, 0.2340, 0.2162,  ..., 0.2422, 0.2500, 0.2476],
         [0.3564, 0.2340, 0.2849,  ..., 0.2876, 0.2500, 0.2571],
         [0.2185, 0.2979, 0.2826,  ..., 0.2351, 0.2500, 0.2476],
         [0.1893, 0.2340, 0.2162,  ..., 0.2351, 0.2500, 0.2476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 611:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:14:43,990 [Process: 0] Synchronize training processes
2024-08-16 13:14:43,991 [Process: 0] Evaluating...
2024-08-16 13:14:43,993 [Process: 0] EPOCH 611:
2024-08-16 13:14:43,995 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1412, 0.1187, 0.1471,  ..., 0.1777, 0.1219, 0.1301],
         [0.1412, 0.1187, 0.1471,  ..., 0.1777, 0.1219, 0.1301],
         [0.1412, 0.1187, 0.1471,  ..., 0.1777, 0.1219, 0.1301],
         [0.5765, 0.6439, 0.5588,  ..., 0.4669, 0.6344, 0.6097]],
        [[0.2500, 0.2480, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2561, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2480, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2480, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1139, 0.1265, 0.1562,  ..., 0.1590, 0.1379, 0.1318],
         [0.1139, 0.1265, 0.1562,  ..., 0.1590, 0.1379, 0.1318],
         [0.1139, 0.1266, 0.1562,  ..., 0.1590, 0.1379, 0.1318],
         [0.6584, 0.6204, 0.5314,  ..., 0.5229, 0.5862, 0.6046]],
        [[0.2500, 0.2416, 0.2664,  ..., 0.2441, 0.2500, 0.2304],
         [0.2500, 0.2752, 0.2904,  ..., 0.2676, 0.2500, 0.2558],
         [0.2500, 0.2416, 0.2216,  ..., 0.2441, 0.2500, 0.2835],
         [0.2500, 0.2416, 0.2216,  ..., 0.2441, 0.2500, 0.2304]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 612:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:14:45,893 [Process: 0] Synchronize training processes
2024-08-16 13:14:45,894 [Process: 0] Evaluating...
2024-08-16 13:14:45,896 [Process: 0] EPOCH 612:
2024-08-16 13:14:45,898 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1501, 0.1695, 0.1504,  ..., 0.1423, 0.1152, 0.1212],
         [0.1501, 0.1695, 0.1539,  ..., 0.1459, 0.1174, 0.1212],
         [0.1501, 0.1695, 0.1504,  ..., 0.1423, 0.1152, 0.1212],
         [0.5498, 0.4916, 0.5453,  ..., 0.5695, 0.6522, 0.6363]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2480, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2560, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2480, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2480, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1569, 0.1229, 0.1232,  ..., 0.1265, 0.1770, 0.1120],
         [0.1585, 0.1229, 0.1232,  ..., 0.1418, 0.1770, 0.1120],
         [0.1897, 0.1418, 0.1232,  ..., 0.1515, 0.1770, 0.1120],
         [0.4949, 0.6124, 0.6305,  ..., 0.5802, 0.4689, 0.6640]],
        [[0.2436, 0.2271, 0.2500,  ..., 0.2500, 0.3170, 0.2422],
         [0.2693, 0.2693, 0.2500,  ..., 0.2500, 0.2373, 0.2735],
         [0.2436, 0.2765, 0.2500,  ..., 0.2500, 0.2228, 0.2422],
         [0.2436, 0.2271, 0.2500,  ..., 0.2500, 0.2228, 0.2422]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 613:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:14:47,823 [Process: 0] Synchronize training processes
2024-08-16 13:14:47,823 [Process: 0] Evaluating...
2024-08-16 13:14:47,825 [Process: 0] EPOCH 613:
2024-08-16 13:14:47,827 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1686, 0.1475, 0.1488,  ..., 0.1395, 0.1684, 0.1541],
         [0.1734, 0.1475, 0.1488,  ..., 0.1395, 0.1724, 0.1541],
         [0.1686, 0.1475, 0.1488,  ..., 0.1395, 0.1684, 0.1541],
         [0.4895, 0.5575, 0.5537,  ..., 0.5816, 0.4908, 0.5378]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1674, 0.0838, 0.1436,  ..., 0.1833, 0.1772, 0.1494],
         [0.1545, 0.0838, 0.1436,  ..., 0.1761, 0.1772, 0.1472],
         [0.1456, 0.0838, 0.1436,  ..., 0.1761, 0.1772, 0.1472],
         [0.5326, 0.7485, 0.5693,  ..., 0.4645, 0.4684, 0.5563]],
        [[0.2500, 0.2500, 0.2352,  ..., 0.2944, 0.2500, 0.2385],
         [0.2500, 0.2500, 0.2683,  ..., 0.2875, 0.2500, 0.2846],
         [0.2500, 0.2500, 0.2613,  ..., 0.2475, 0.2500, 0.2385],
         [0.2500, 0.2500, 0.2352,  ..., 0.1706, 0.2500, 0.2385]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 614:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:14:49,739 [Process: 0] Synchronize training processes
2024-08-16 13:14:49,739 [Process: 0] Evaluating...
2024-08-16 13:14:49,741 [Process: 0] EPOCH 614:
2024-08-16 13:14:49,743 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1532, 0.1547, 0.1633,  ..., 0.1307, 0.1708, 0.1448],
         [0.1532, 0.1547, 0.1633,  ..., 0.1307, 0.1708, 0.1448],
         [0.1532, 0.1547, 0.1633,  ..., 0.1307, 0.1708, 0.1448],
         [0.5404, 0.5359, 0.5102,  ..., 0.6078, 0.4877, 0.5655]],
        [[0.2498, 0.2500, 0.2480,  ..., 0.2500, 0.2480, 0.2500],
         [0.2506, 0.2500, 0.2560,  ..., 0.2500, 0.2563, 0.2500],
         [0.2498, 0.2500, 0.2480,  ..., 0.2500, 0.2478, 0.2500],
         [0.2498, 0.2500, 0.2480,  ..., 0.2500, 0.2478, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1359, 0.1427, 0.2001,  ..., 0.1622, 0.2372, 0.1595],
         [0.1359, 0.1567, 0.2001,  ..., 0.1622, 0.2372, 0.1595],
         [0.1359, 0.1427, 0.2001,  ..., 0.1622, 0.2372, 0.1595],
         [0.5922, 0.5578, 0.3997,  ..., 0.5134, 0.2885, 0.5214]],
        [[0.2328, 0.2609, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2328, 0.2588, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.3016, 0.2401, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2328, 0.2401, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 615:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:14:51,635 [Process: 0] Synchronize training processes
2024-08-16 13:14:51,635 [Process: 0] Evaluating...
2024-08-16 13:14:51,637 [Process: 0] EPOCH 615:
2024-08-16 13:14:51,639 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1402, 0.1381, 0.1389,  ..., 0.1405, 0.1673, 0.1577],
         [0.1402, 0.1381, 0.1389,  ..., 0.1450, 0.1673, 0.1577],
         [0.1402, 0.1381, 0.1389,  ..., 0.1405, 0.1673, 0.1577],
         [0.5793, 0.5856, 0.5832,  ..., 0.5740, 0.4980, 0.5269]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2473, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2580, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2473, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2473, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2043, 0.1509, 0.1262,  ..., 0.1680, 0.1339, 0.1582],
         [0.2117, 0.1509, 0.1317,  ..., 0.1680, 0.1339, 0.1634],
         [0.2043, 0.1509, 0.1262,  ..., 0.1680, 0.1339, 0.1527],
         [0.3797, 0.5472, 0.6159,  ..., 0.4961, 0.5983, 0.5257]],
        [[0.2090, 0.3226, 0.2500,  ..., 0.2448, 0.2500, 0.2500],
         [0.2562, 0.2280, 0.2500,  ..., 0.2480, 0.2500, 0.2500],
         [0.3259, 0.2307, 0.2500,  ..., 0.2625, 0.2500, 0.2500],
         [0.2090, 0.2187, 0.2500,  ..., 0.2448, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 616:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1539, 0.1431, 0.1574,  ..., 0.1630, 0.1437, 0.1690],
         [0.1564, 0.1469, 0.1574,  ..., 0.1630, 0.1437, 0.1690],
         [0.1539, 0.1431, 0.1574,  ..., 0.1630, 0.1437, 0.1690],
         [0.5357, 0.5669, 0.5279,  ..., 0.5110, 0.5688, 0.4929]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2517],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:14:53,562 [Process: 0] Synchronize training processes
2024-08-16 13:14:53,562 [Process: 0] Evaluating...
2024-08-16 13:14:53,564 [Process: 0] EPOCH 616:
2024-08-16 13:14:53,566 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1587, 0.1937, 0.1792,  ..., 0.1565, 0.1360, 0.1475],
         [0.1554, 0.1998, 0.1792,  ..., 0.1571, 0.1360, 0.1653],
         [0.1554, 0.1852, 0.1792,  ..., 0.1565, 0.1360, 0.1469],
         [0.5304, 0.4213, 0.4623,  ..., 0.5299, 0.5919, 0.5403]],
        [[0.2500, 0.2765, 0.2312,  ..., 0.2508, 0.2500, 0.2500],
         [0.2500, 0.2671, 0.2548,  ..., 0.2554, 0.2500, 0.2500],
         [0.2500, 0.2282, 0.3502,  ..., 0.2909, 0.2500, 0.2500],
         [0.2500, 0.2282, 0.1637,  ..., 0.2029, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 617:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1215, 0.1303, 0.1710,  ..., 0.1658, 0.1614, 0.1250],
         [0.1215, 0.1303, 0.1710,  ..., 0.1658, 0.1614, 0.1272],
         [0.1215, 0.1303, 0.1710,  ..., 0.1658, 0.1614, 0.1250],
         [0.6354, 0.6092, 0.4871,  ..., 0.5027, 0.5158, 0.6228]],
        [[0.2489, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2534, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:14:55,454 [Process: 0] Synchronize training processes
2024-08-16 13:14:55,454 [Process: 0] Evaluating...
2024-08-16 13:14:55,456 [Process: 0] EPOCH 617:
2024-08-16 13:14:55,458 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1339, 0.1647, 0.1431,  ..., 0.1753, 0.1603, 0.1363],
         [0.1428, 0.1647, 0.1431,  ..., 0.1577, 0.1603, 0.1490],
         [0.1339, 0.1647, 0.1431,  ..., 0.1577, 0.1664, 0.1363],
         [0.5893, 0.5059, 0.5706,  ..., 0.5092, 0.5130, 0.5784]],
        [[0.2434, 0.2340, 0.2489,  ..., 0.2586, 0.2500, 0.3029],
         [0.2699, 0.2661, 0.2534,  ..., 0.2613, 0.2500, 0.2437],
         [0.2434, 0.3018, 0.2489,  ..., 0.2441, 0.2500, 0.2267],
         [0.2434, 0.1980, 0.2489,  ..., 0.2361, 0.2500, 0.2267]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 618:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1451, 0.1472, 0.1641,  ..., 0.1580, 0.1288, 0.1200],
         [0.1451, 0.1472, 0.1641,  ..., 0.1580, 0.1288, 0.1200],
         [0.1451, 0.1472, 0.1641,  ..., 0.1580, 0.1288, 0.1200],
         [0.5647, 0.5583, 0.5078,  ..., 0.5259, 0.6136, 0.6401]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2477, 0.2500, 0.2500],
         [0.2500, 0.2501, 0.2500,  ..., 0.2568, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2477, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2477, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:14:57,381 [Process: 0] Synchronize training processes
2024-08-16 13:14:57,381 [Process: 0] Evaluating...
2024-08-16 13:14:57,383 [Process: 0] EPOCH 618:
2024-08-16 13:14:57,385 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1472, 0.1600, 0.1710,  ..., 0.1462, 0.1431, 0.1204],
         [0.1472, 0.1615, 0.1710,  ..., 0.1510, 0.1431, 0.1204],
         [0.1472, 0.1600, 0.1710,  ..., 0.1462, 0.1431, 0.1204],
         [0.5583, 0.5186, 0.4869,  ..., 0.5566, 0.5708, 0.6388]],
        [[0.2769, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2672],
         [0.2629, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2644],
         [0.2301, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2342],
         [0.2301, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2342]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 619:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1468, 0.1630, 0.1482,  ..., 0.1339, 0.1478, 0.1526],
         [0.1468, 0.1630, 0.1482,  ..., 0.1339, 0.1478, 0.1533],
         [0.1468, 0.1630, 0.1482,  ..., 0.1339, 0.1478, 0.1526],
         [0.5595, 0.5109, 0.5554,  ..., 0.5983, 0.5565, 0.5415]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:14:59,275 [Process: 0] Synchronize training processes
2024-08-16 13:14:59,275 [Process: 0] Evaluating...
2024-08-16 13:14:59,277 [Process: 0] EPOCH 619:
2024-08-16 13:14:59,279 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:15:01,182 [Process: 0] Synchronize training processes
2024-08-16 13:15:01,182 [Process: 0] Evaluating...
2024-08-16 13:15:01,184 [Process: 0] EPOCH 620:
2024-08-16 13:15:01,186 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1423, 0.1392, 0.1314,  ..., 0.1646, 0.1572, 0.1612],
         [0.1255, 0.1450, 0.1204,  ..., 0.1646, 0.1572, 0.1793],
         [0.1227, 0.1357, 0.1256,  ..., 0.1646, 0.1572, 0.1612],
         [0.6094, 0.5801, 0.6225,  ..., 0.5063, 0.5284, 0.4984]],
        [[0.2500, 0.2641, 0.2502,  ..., 0.2477, 0.2491, 0.2374],
         [0.2500, 0.2339, 0.2683,  ..., 0.3208, 0.2528, 0.2878],
         [0.2500, 0.2682, 0.2540,  ..., 0.2158, 0.2491, 0.2374],
         [0.2500, 0.2339, 0.2276,  ..., 0.2158, 0.2491, 0.2374]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 620:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1808, 0.1362, 0.1767,  ..., 0.1195, 0.1339, 0.1521],
         [0.1808, 0.1362, 0.1767,  ..., 0.1195, 0.1339, 0.1521],
         [0.1808, 0.1362, 0.1767,  ..., 0.1195, 0.1339, 0.1521],
         [0.4576, 0.5913, 0.4698,  ..., 0.6416, 0.5984, 0.5436]],
        [[0.2500, 0.2497, 0.2500,  ..., 0.2489, 0.2500, 0.2500],
         [0.2500, 0.2509, 0.2500,  ..., 0.2533, 0.2500, 0.2500],
         [0.2500, 0.2497, 0.2500,  ..., 0.2489, 0.2500, 0.2500],
         [0.2500, 0.2497, 0.2500,  ..., 0.2489, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:03,105 [Process: 0] Synchronize training processes
2024-08-16 13:15:03,105 [Process: 0] Evaluating...
2024-08-16 13:15:03,107 [Process: 0] EPOCH 621:
2024-08-16 13:15:03,109 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1636, 0.1299, 0.1786,  ..., 0.1126, 0.1514, 0.1823],
         [0.1560, 0.1301, 0.1754,  ..., 0.1126, 0.1514, 0.1957],
         [0.1560, 0.1299, 0.1754,  ..., 0.1126, 0.1514, 0.1823],
         [0.5245, 0.6101, 0.4707,  ..., 0.6622, 0.5458, 0.4397]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2471, 0.2500, 0.2299],
         [0.2500, 0.2500, 0.2500,  ..., 0.2471, 0.2500, 0.3103],
         [0.2500, 0.2500, 0.2500,  ..., 0.2586, 0.2500, 0.2299],
         [0.2500, 0.2500, 0.2500,  ..., 0.2471, 0.2500, 0.2299]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 621:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1446, 0.1493, 0.1408,  ..., 0.1736, 0.1516, 0.1344],
         [0.1446, 0.1493, 0.1408,  ..., 0.1736, 0.1572, 0.1344],
         [0.1446, 0.1493, 0.1408,  ..., 0.1736, 0.1516, 0.1344],
         [0.5661, 0.5521, 0.5775,  ..., 0.4792, 0.5396, 0.5968]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2489, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2533, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2489, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2489, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:05,007 [Process: 0] Synchronize training processes
2024-08-16 13:15:05,007 [Process: 0] Evaluating...
2024-08-16 13:15:05,009 [Process: 0] EPOCH 622:
2024-08-16 13:15:05,011 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1288, 0.1346, 0.1320,  ..., 0.1715, 0.1576, 0.1349],
         [0.1288, 0.1396, 0.1320,  ..., 0.1499, 0.1576, 0.1418],
         [0.1288, 0.1346, 0.1383,  ..., 0.1499, 0.1576, 0.1389],
         [0.6135, 0.5912, 0.5976,  ..., 0.5287, 0.5271, 0.5844]],
        [[0.2500, 0.2537, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2794, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2335, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2335, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 622:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1180, 0.1231, 0.1223,  ..., 0.1446, 0.1127, 0.1104],
         [0.1180, 0.1263, 0.1223,  ..., 0.1446, 0.1127, 0.1104],
         [0.1180, 0.1231, 0.1223,  ..., 0.1446, 0.1127, 0.1104],
         [0.6460, 0.6275, 0.6332,  ..., 0.5663, 0.6618, 0.6687]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:06,927 [Process: 0] Synchronize training processes
2024-08-16 13:15:06,928 [Process: 0] Evaluating...
2024-08-16 13:15:06,930 [Process: 0] EPOCH 623:
2024-08-16 13:15:06,931 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1234, 0.1155, 0.1195,  ..., 0.1416, 0.1515, 0.1015],
         [0.1234, 0.1228, 0.1195,  ..., 0.1416, 0.1515, 0.1055],
         [0.1234, 0.1155, 0.1195,  ..., 0.1416, 0.1515, 0.1015],
         [0.6297, 0.6462, 0.6414,  ..., 0.5751, 0.5454, 0.6914]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 623:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1413, 0.1487, 0.1465,  ..., 0.1813, 0.1352, 0.1450],
         [0.1413, 0.1487, 0.1468,  ..., 0.1884, 0.1352, 0.1450],
         [0.1413, 0.1487, 0.1465,  ..., 0.1813, 0.1352, 0.1450],
         [0.5761, 0.5540, 0.5602,  ..., 0.4489, 0.5943, 0.5649]],
        [[0.2496, 0.2500, 0.2494,  ..., 0.2500, 0.2500, 0.2500],
         [0.2512, 0.2500, 0.2518,  ..., 0.2500, 0.2500, 0.2500],
         [0.2496, 0.2500, 0.2494,  ..., 0.2500, 0.2500, 0.2500],
         [0.2496, 0.2500, 0.2494,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:08,823 [Process: 0] Synchronize training processes
2024-08-16 13:15:08,823 [Process: 0] Evaluating...
2024-08-16 13:15:08,825 [Process: 0] EPOCH 624:
2024-08-16 13:15:08,827 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1518, 0.1785, 0.0683,  ..., 0.1584, 0.0586, 0.1510],
         [0.1518, 0.1785, 0.0683,  ..., 0.1584, 0.0586, 0.1510],
         [0.1518, 0.1785, 0.0683,  ..., 0.1584, 0.0586, 0.1510],
         [0.5446, 0.4644, 0.7952,  ..., 0.5247, 0.8243, 0.5471]],
        [[0.2190, 0.2479, 0.2500,  ..., 0.2493, 0.2500, 0.2500],
         [0.2875, 0.2488, 0.2500,  ..., 0.2522, 0.2500, 0.2500],
         [0.2745, 0.2555, 0.2500,  ..., 0.2493, 0.2500, 0.2500],
         [0.2190, 0.2479, 0.2500,  ..., 0.2493, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 624:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1497, 0.1215, 0.1334,  ..., 0.1400, 0.1343, 0.1376],
         [0.1497, 0.1301, 0.1336,  ..., 0.1400, 0.1343, 0.1376],
         [0.1497, 0.1215, 0.1334,  ..., 0.1400, 0.1343, 0.1376],
         [0.5508, 0.6268, 0.5996,  ..., 0.5799, 0.5971, 0.5873]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2467, 0.2663, 0.2486],
         [0.2500, 0.2500, 0.2500,  ..., 0.2599, 0.2455, 0.2543],
         [0.2500, 0.2500, 0.2500,  ..., 0.2467, 0.2441, 0.2486],
         [0.2500, 0.2500, 0.2500,  ..., 0.2467, 0.2441, 0.2486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:10,730 [Process: 0] Synchronize training processes
2024-08-16 13:15:10,730 [Process: 0] Evaluating...
2024-08-16 13:15:10,732 [Process: 0] EPOCH 625:
2024-08-16 13:15:10,734 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1160, 0.1454, 0.1362,  ..., 0.0997, 0.1617, 0.1319],
         [0.1160, 0.1454, 0.1362,  ..., 0.0997, 0.1543, 0.1319],
         [0.1160, 0.1454, 0.1362,  ..., 0.0997, 0.1543, 0.1319],
         [0.6519, 0.5639, 0.5915,  ..., 0.7010, 0.5296, 0.6042]],
        [[0.2631, 0.2500, 0.2879,  ..., 0.2376, 0.2406, 0.2483],
         [0.2859, 0.2500, 0.2792,  ..., 0.2872, 0.2783, 0.2483],
         [0.2494, 0.2500, 0.2288,  ..., 0.2376, 0.2406, 0.2551],
         [0.2016, 0.2500, 0.2042,  ..., 0.2376, 0.2406, 0.2483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 625:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1560, 0.1314, 0.1608,  ..., 0.1749, 0.1505, 0.1591],
         [0.1560, 0.1387, 0.1608,  ..., 0.1749, 0.1518, 0.1591],
         [0.1560, 0.1314, 0.1608,  ..., 0.1749, 0.1505, 0.1591],
         [0.5319, 0.5984, 0.5175,  ..., 0.4752, 0.5471, 0.5226]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2496],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2511],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2496],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2496]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:15:12,627 [Process: 0] Synchronize training processes
2024-08-16 13:15:12,628 [Process: 0] Evaluating...
2024-08-16 13:15:12,630 [Process: 0] EPOCH 626:
2024-08-16 13:15:12,631 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1531, 0.0994, 0.1210,  ..., 0.1615, 0.2194, 0.1140],
         [0.1531, 0.0994, 0.1210,  ..., 0.1569, 0.2194, 0.1170],
         [0.1531, 0.0994, 0.1218,  ..., 0.1569, 0.2194, 0.1143],
         [0.5408, 0.7019, 0.6363,  ..., 0.5246, 0.3418, 0.6547]],
        [[0.2548, 0.2678, 0.2641,  ..., 0.2500, 0.2276, 0.2126],
         [0.2757, 0.2576, 0.2759,  ..., 0.2500, 0.2956, 0.3180],
         [0.2417, 0.2373, 0.2621,  ..., 0.2500, 0.2492, 0.2569],
         [0.2278, 0.2373, 0.1978,  ..., 0.2500, 0.2276, 0.2126]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 626:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1496, 0.1577, 0.1765,  ..., 0.1518, 0.1241, 0.1103],
         [0.1496, 0.1577, 0.1765,  ..., 0.1518, 0.1241, 0.1103],
         [0.1496, 0.1577, 0.1765,  ..., 0.1518, 0.1241, 0.1103],
         [0.5512, 0.5270, 0.4705,  ..., 0.5445, 0.6276, 0.6692]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2484, 0.2500, 0.2480],
         [0.2500, 0.2500, 0.2500,  ..., 0.2547, 0.2500, 0.2559],
         [0.2500, 0.2500, 0.2500,  ..., 0.2484, 0.2500, 0.2480],
         [0.2500, 0.2500, 0.2500,  ..., 0.2484, 0.2500, 0.2480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1635, 0.1450, 0.1619,  ..., 0.1416, 0.1220, 0.1228],
         [0.1635, 0.1450, 0.1482,  ..., 0.1416, 0.1220, 0.1228],
         [0.1635, 0.1450, 0.1482,  ..., 0.1416, 0.1220, 0.1228],
         [0.5096, 0.5651, 0.5418,  ..., 0.5751, 0.6339, 0.6316]],
        [[0.2675, 0.2540, 0.2500,  ..., 0.2450, 0.2276, 0.2407],
         [0.2580, 0.2642, 0.2500,  ..., 0.2650, 0.2481, 0.2551],
         [0.2373, 0.2552, 0.2500,  ..., 0.2450, 0.3235, 0.2670],
         [0.2373, 0.2266, 0.2500,  ..., 0.2450, 0.2008, 0.2372]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:14,559 [Process: 0] Synchronize training processes
2024-08-16 13:15:14,559 [Process: 0] Evaluating...
2024-08-16 13:15:14,561 [Process: 0] EPOCH 627:
2024-08-16 13:15:14,563 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 627:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1297, 0.1117, 0.1358,  ..., 0.1664, 0.1414, 0.1910],
         [0.1297, 0.1117, 0.1395,  ..., 0.1679, 0.1414, 0.1910],
         [0.1297, 0.1117, 0.1358,  ..., 0.1664, 0.1414, 0.1910],
         [0.6110, 0.6650, 0.5889,  ..., 0.4993, 0.5758, 0.4270]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2487, 0.2500, 0.2442],
         [0.2500, 0.2500, 0.2500,  ..., 0.2538, 0.2500, 0.2675],
         [0.2500, 0.2500, 0.2500,  ..., 0.2487, 0.2500, 0.2442],
         [0.2500, 0.2500, 0.2500,  ..., 0.2487, 0.2500, 0.2442]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1818, 0.1299, 0.1553,  ..., 0.1730, 0.1401, 0.1064],
         [0.1818, 0.1299, 0.1553,  ..., 0.1730, 0.1591, 0.1064],
         [0.1818, 0.1299, 0.1553,  ..., 0.1738, 0.1401, 0.1064],
         [0.4547, 0.6103, 0.5341,  ..., 0.4802, 0.5606, 0.6808]],
        [[0.2940, 0.2500, 0.2305,  ..., 0.2500, 0.2433, 0.3644],
         [0.2614, 0.2500, 0.2390,  ..., 0.2500, 0.2810, 0.2462],
         [0.2223, 0.2500, 0.2999,  ..., 0.2500, 0.2379, 0.2340],
         [0.2223, 0.2500, 0.2305,  ..., 0.2500, 0.2379, 0.1554]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:16,506 [Process: 0] Synchronize training processes
2024-08-16 13:15:16,507 [Process: 0] Evaluating...
2024-08-16 13:15:16,509 [Process: 0] EPOCH 628:
2024-08-16 13:15:16,510 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 628:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1485, 0.1695, 0.1627,  ..., 0.1455, 0.1667, 0.1643],
         [0.1485, 0.1695, 0.1627,  ..., 0.1455, 0.1667, 0.1643],
         [0.1485, 0.1695, 0.1627,  ..., 0.1455, 0.1667, 0.1643],
         [0.5546, 0.4916, 0.5120,  ..., 0.5634, 0.4999, 0.5070]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2481, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2558, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2481, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2481, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1728, 0.1612, 0.1937,  ..., 0.1362, 0.1410, 0.2067],
         [0.1873, 0.1694, 0.2054,  ..., 0.1362, 0.1410, 0.2067],
         [0.1878, 0.1612, 0.1937,  ..., 0.1362, 0.1572, 0.2067],
         [0.4521, 0.5082, 0.4071,  ..., 0.5915, 0.5607, 0.3800]],
        [[0.2875, 0.2218, 0.2489,  ..., 0.3337, 0.3530, 0.2948],
         [0.2375, 0.3192, 0.2532,  ..., 0.2238, 0.2240, 0.2497],
         [0.2375, 0.2806, 0.2489,  ..., 0.2256, 0.2115, 0.2277],
         [0.2375, 0.1784, 0.2489,  ..., 0.2170, 0.2115, 0.2277]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 629:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:15:18,406 [Process: 0] Synchronize training processes
2024-08-16 13:15:18,407 [Process: 0] Evaluating...
2024-08-16 13:15:18,408 [Process: 0] EPOCH 629:
2024-08-16 13:15:18,410 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1479, 0.1390, 0.1650,  ..., 0.1129, 0.1387, 0.1641],
         [0.1479, 0.1390, 0.1650,  ..., 0.1129, 0.1387, 0.1725],
         [0.1479, 0.1390, 0.1650,  ..., 0.1129, 0.1387, 0.1641],
         [0.5564, 0.5831, 0.5050,  ..., 0.6614, 0.5839, 0.4993]],
        [[0.2500, 0.2500, 0.2490,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2529,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2490,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2490,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1686, 0.1536, 0.1962,  ..., 0.1197, 0.0036, 0.1468],
         [0.1751, 0.1900, 0.2374,  ..., 0.1443, 0.0036, 0.1816],
         [0.1800, 0.1536, 0.1849,  ..., 0.1197, 0.9892, 0.1468],
         [0.4763, 0.5028, 0.3816,  ..., 0.6163, 0.0036, 0.5247]],
        [[0.2349, 0.2411, 0.2495,  ..., 0.2459, 0.2445, 0.2500],
         [0.2954, 0.2767, 0.2516,  ..., 0.2459, 0.2665, 0.2500],
         [0.2349, 0.2411, 0.2495,  ..., 0.2623, 0.2445, 0.2500],
         [0.2349, 0.2411, 0.2495,  ..., 0.2459, 0.2445, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 630:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:15:20,297 [Process: 0] Synchronize training processes
2024-08-16 13:15:20,297 [Process: 0] Evaluating...
2024-08-16 13:15:20,299 [Process: 0] EPOCH 630:
2024-08-16 13:15:20,301 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1333, 0.1409, 0.1637,  ..., 0.1197, 0.1666, 0.1447],
         [0.1380, 0.1409, 0.1637,  ..., 0.1197, 0.1745, 0.1447],
         [0.1333, 0.1409, 0.1637,  ..., 0.1197, 0.1666, 0.1447],
         [0.5954, 0.5772, 0.5089,  ..., 0.6409, 0.4922, 0.5658]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 13:15:22,226 [Process: 0] Synchronize training processes
2024-08-16 13:15:22,227 [Process: 0] Evaluating...
2024-08-16 13:15:22,229 [Process: 0] EPOCH 631:
2024-08-16 13:15:22,231 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1794, 0.1681, 0.1412,  ..., 0.2712, 0.1449, 0.1411],
         [0.2101, 0.1652, 0.1412,  ..., 0.1789, 0.1449, 0.1411],
         [0.1794, 0.1626, 0.1412,  ..., 0.1789, 0.1449, 0.1470],
         [0.4310, 0.5041, 0.5764,  ..., 0.3710, 0.5652, 0.5708]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2494, 0.2485, 0.2445],
         [0.2500, 0.2500, 0.2500,  ..., 0.2828, 0.2545, 0.2762],
         [0.2500, 0.2500, 0.2500,  ..., 0.2339, 0.2485, 0.2396],
         [0.2500, 0.2500, 0.2500,  ..., 0.2339, 0.2485, 0.2396]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 631:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1874, 0.1595, 0.1705,  ..., 0.1491, 0.1616, 0.1427],
         [0.1874, 0.1595, 0.1705,  ..., 0.1491, 0.1637, 0.1427],
         [0.1874, 0.1595, 0.1705,  ..., 0.1491, 0.1616, 0.1427],
         [0.4378, 0.5215, 0.4885,  ..., 0.5526, 0.5130, 0.5720]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:15:24,207 [Process: 0] Synchronize training processes
2024-08-16 13:15:24,207 [Process: 0] Evaluating...
2024-08-16 13:15:24,209 [Process: 0] EPOCH 632:
2024-08-16 13:15:24,211 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1244, 0.0948, 0.1505,  ..., 0.1523, 0.1655, 0.1612],
         [0.1365, 0.1027, 0.1654,  ..., 0.1523, 0.1655, 0.1628],
         [0.1244, 0.0948, 0.1505,  ..., 0.1523, 0.2211, 0.1612],
         [0.6146, 0.7077, 0.5335,  ..., 0.5432, 0.4479, 0.5148]],
        [[0.2500, 0.2404, 0.2464,  ..., 0.2500, 0.2521, 0.2064],
         [0.2500, 0.2788, 0.2607,  ..., 0.2500, 0.2875, 0.3593],
         [0.2500, 0.2404, 0.2464,  ..., 0.2500, 0.2548, 0.2292],
         [0.2500, 0.2404, 0.2464,  ..., 0.2500, 0.2057, 0.2051]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 632:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1438, 0.1354, 0.1365,  ..., 0.1587, 0.1752, 0.1561],
         [0.1438, 0.1354, 0.1365,  ..., 0.1587, 0.1752, 0.1561],
         [0.1438, 0.1354, 0.1365,  ..., 0.1587, 0.1752, 0.1561],
         [0.5686, 0.5937, 0.5906,  ..., 0.5239, 0.4744, 0.5316]],
        [[0.2500, 0.2485, 0.2500,  ..., 0.2500, 0.2498, 0.2500],
         [0.2500, 0.2545, 0.2500,  ..., 0.2500, 0.2505, 0.2500],
         [0.2500, 0.2485, 0.2500,  ..., 0.2500, 0.2498, 0.2500],
         [0.2500, 0.2485, 0.2500,  ..., 0.2500, 0.2498, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:15:26,232 [Process: 0] Synchronize training processes
2024-08-16 13:15:26,232 [Process: 0] Evaluating...
2024-08-16 13:15:26,234 [Process: 0] EPOCH 633:
2024-08-16 13:15:26,236 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1455, 0.1430, 0.1427,  ..., 0.1393, 0.1718, 0.1969],
         [0.1455, 0.1561, 0.1427,  ..., 0.1393, 0.1718, 0.1988],
         [0.1455, 0.1430, 0.1427,  ..., 0.1506, 0.1718, 0.1969],
         [0.5636, 0.5578, 0.5718,  ..., 0.5707, 0.4847, 0.4073]],
        [[0.2420, 0.2952, 0.2424,  ..., 0.2951, 0.2321, 0.2242],
         [0.2869, 0.3002, 0.2729,  ..., 0.2350, 0.3021, 0.2699],
         [0.2356, 0.2303, 0.2424,  ..., 0.2350, 0.2703, 0.2818],
         [0.2356, 0.1743, 0.2424,  ..., 0.2350, 0.1956, 0.2242]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 633:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1540, 0.1390, 0.1751,  ..., 0.1371, 0.1124, 0.1183],
         [0.1540, 0.1390, 0.1751,  ..., 0.1371, 0.1124, 0.1183],
         [0.1540, 0.1390, 0.1751,  ..., 0.1371, 0.1124, 0.1183],
         [0.5379, 0.5829, 0.4747,  ..., 0.5888, 0.6627, 0.6450]],
        [[0.2500, 0.2500, 0.2481,  ..., 0.2500, 0.2480, 0.2500],
         [0.2500, 0.2500, 0.2558,  ..., 0.2500, 0.2561, 0.2500],
         [0.2500, 0.2500, 0.2481,  ..., 0.2500, 0.2480, 0.2500],
         [0.2500, 0.2500, 0.2481,  ..., 0.2500, 0.2480, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:28,304 [Process: 0] Synchronize training processes
2024-08-16 13:15:28,304 [Process: 0] Evaluating...
2024-08-16 13:15:28,306 [Process: 0] EPOCH 634:
2024-08-16 13:15:28,308 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1006, 0.1398, 0.1458,  ..., 0.1394, 0.1909, 0.1421],
         [0.1006, 0.1487, 0.1398,  ..., 0.1482, 0.1877, 0.1538],
         [0.1006, 0.1398, 0.1398,  ..., 0.1394, 0.1951, 0.1421],
         [0.6983, 0.5717, 0.5746,  ..., 0.5729, 0.4263, 0.5619]],
        [[0.2378, 0.2500, 0.2205,  ..., 0.2490, 0.2569, 0.2469],
         [0.2867, 0.2500, 0.2993,  ..., 0.2529, 0.2574, 0.2880],
         [0.2378, 0.2500, 0.2597,  ..., 0.2490, 0.2428, 0.2326],
         [0.2378, 0.2500, 0.2205,  ..., 0.2490, 0.2428, 0.2326]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 634:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1439, 0.1388, 0.1276,  ..., 0.1537, 0.1360, 0.1357],
         [0.1439, 0.1388, 0.1276,  ..., 0.1537, 0.1382, 0.1357],
         [0.1439, 0.1388, 0.1276,  ..., 0.1537, 0.1360, 0.1357],
         [0.5684, 0.5836, 0.6171,  ..., 0.5388, 0.5899, 0.5928]],
        [[0.2500, 0.2500, 0.2494,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2519,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2494,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2494,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:30,285 [Process: 0] Synchronize training processes
2024-08-16 13:15:30,285 [Process: 0] Evaluating...
2024-08-16 13:15:30,287 [Process: 0] EPOCH 635:
2024-08-16 13:15:30,289 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1327, 0.1339, 0.1247,  ..., 0.1465, 0.1305, 0.1652],
         [0.1327, 0.1339, 0.1247,  ..., 0.1465, 0.2561, 0.1652],
         [0.1327, 0.1339, 0.1247,  ..., 0.1465, 0.2346, 0.1652],
         [0.6019, 0.5984, 0.6260,  ..., 0.5606, 0.3788, 0.5044]],
        [[0.2500, 0.2443, 0.2458,  ..., 0.2318, 0.2500, 0.2188],
         [0.2500, 0.2672, 0.2625,  ..., 0.3047, 0.2500, 0.3003],
         [0.2500, 0.2443, 0.2458,  ..., 0.2318, 0.2500, 0.2684],
         [0.2500, 0.2443, 0.2458,  ..., 0.2318, 0.2500, 0.2125]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 635:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1208, 0.0979, 0.1545,  ..., 0.1429, 0.0993, 0.1603],
         [0.1208, 0.0979, 0.1545,  ..., 0.1429, 0.0993, 0.1632],
         [0.1208, 0.0979, 0.1545,  ..., 0.1429, 0.0993, 0.1603],
         [0.6376, 0.7063, 0.5364,  ..., 0.5714, 0.7020, 0.5163]],
        [[0.2500, 0.2500, 0.2495,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2515,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2495,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2495,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
2024-08-16 13:15:32,230 [Process: 0] Synchronize training processes
2024-08-16 13:15:32,230 [Process: 0] Evaluating...
2024-08-16 13:15:32,232 [Process: 0] EPOCH 636:
2024-08-16 13:15:32,234 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1462, 0.1589, 0.1583,  ..., 0.1667, 0.1821, 0.1438],
         [0.1462, 0.1589, 0.1583,  ..., 0.1667, 0.1821, 0.1438],
         [0.1462, 0.1589, 0.1583,  ..., 0.1667, 0.2308, 0.1438],
         [0.5614, 0.5233, 0.5250,  ..., 0.5000, 0.4051, 0.5687]],
        [[0.2500, 0.2379, 0.2500,  ..., 0.2500, 0.2500, 0.2440],
         [0.2500, 0.2703, 0.2500,  ..., 0.2500, 0.2500, 0.2679],
         [0.2500, 0.2540, 0.2500,  ..., 0.2500, 0.2500, 0.2440],
         [0.2500, 0.2379, 0.2500,  ..., 0.2500, 0.2500, 0.2440]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 636:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1561, 0.1801, 0.1533,  ..., 0.1765, 0.1555, 0.1289],
         [0.1561, 0.1801, 0.1533,  ..., 0.1765, 0.1555, 0.1289],
         [0.1561, 0.1801, 0.1533,  ..., 0.1765, 0.1555, 0.1289],
         [0.5317, 0.4597, 0.5400,  ..., 0.4706, 0.5334, 0.6133]],
        [[0.2489, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2534, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:34,381 [Process: 0] Synchronize training processes
2024-08-16 13:15:34,382 [Process: 0] Evaluating...
2024-08-16 13:15:34,384 [Process: 0] EPOCH 637:
2024-08-16 13:15:34,386 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1483, 0.1511, 0.1332,  ..., 0.1709, 0.2007, 0.1545],
         [0.1483, 0.1630, 0.1332,  ..., 0.1709, 0.2015, 0.1649],
         [0.1483, 0.1511, 0.1332,  ..., 0.1709, 0.2275, 0.1545],
         [0.5550, 0.5349, 0.6004,  ..., 0.4872, 0.3703, 0.5260]],
        [[0.2067, 0.2500, 0.2443,  ..., 0.2500, 0.2500, 0.2151],
         [0.2887, 0.2500, 0.2443,  ..., 0.2500, 0.2500, 0.2444],
         [0.2980, 0.2500, 0.2670,  ..., 0.2500, 0.2500, 0.3307],
         [0.2067, 0.2500, 0.2443,  ..., 0.2500, 0.2500, 0.2097]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 637:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1611, 0.1459, 0.1650,  ..., 0.1562, 0.1663, 0.1369],
         [0.1611, 0.1523, 0.1765,  ..., 0.1562, 0.1663, 0.1369],
         [0.1611, 0.1459, 0.1650,  ..., 0.1562, 0.1663, 0.1369],
         [0.5168, 0.5559, 0.4934,  ..., 0.5315, 0.5011, 0.5893]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:36,360 [Process: 0] Synchronize training processes
2024-08-16 13:15:36,360 [Process: 0] Evaluating...
2024-08-16 13:15:36,362 [Process: 0] EPOCH 638:
2024-08-16 13:15:36,364 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1504, 0.1785, 0.1458,  ..., 0.1558, 0.1460, 0.1314],
         [0.1504, 0.1785, 0.1470,  ..., 0.1558, 0.1572, 0.1314],
         [0.1504, 0.1785, 0.1458,  ..., 0.1558, 0.1527, 0.1314],
         [0.5488, 0.4646, 0.5614,  ..., 0.5327, 0.5440, 0.6059]],
        [[0.2274, 0.2500, 0.2500,  ..., 0.2500, 0.2684, 0.2500],
         [0.2698, 0.2500, 0.2500,  ..., 0.2500, 0.2325, 0.2500],
         [0.2754, 0.2500, 0.2500,  ..., 0.2500, 0.2665, 0.2500],
         [0.2274, 0.2500, 0.2500,  ..., 0.2500, 0.2325, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 638:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1264, 0.1535, 0.1624,  ..., 0.1521, 0.1777, 0.1340],
         [0.1264, 0.1535, 0.1624,  ..., 0.1521, 0.1777, 0.1340],
         [0.1264, 0.1535, 0.1624,  ..., 0.1521, 0.1777, 0.1340],
         [0.6209, 0.5396, 0.5128,  ..., 0.5437, 0.4668, 0.5980]],
        [[0.2481, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2556, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2481, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2481, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:38,413 [Process: 0] Synchronize training processes
2024-08-16 13:15:38,414 [Process: 0] Evaluating...
2024-08-16 13:15:38,416 [Process: 0] EPOCH 639:
2024-08-16 13:15:38,418 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1600, 0.1343, 0.1686,  ..., 0.1477, 0.0763, 0.1973],
         [0.1704, 0.1561, 0.1686,  ..., 0.1686, 0.0763, 0.2015],
         [0.1550, 0.1715, 0.1686,  ..., 0.1477, 0.7711, 0.1714],
         [0.5146, 0.5381, 0.4941,  ..., 0.5361, 0.0763, 0.4298]],
        [[0.2179, 0.2298, 0.2421,  ..., 0.2500, 0.2363, 0.2500],
         [0.3014, 0.2632, 0.2728,  ..., 0.2500, 0.2306, 0.2500],
         [0.2628, 0.2771, 0.2915,  ..., 0.2500, 0.3239, 0.2500],
         [0.2179, 0.2298, 0.1936,  ..., 0.2500, 0.2091, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 639:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1555, 0.1584, 0.1177,  ..., 0.1371, 0.1732, 0.1662],
         [0.1555, 0.1635, 0.1177,  ..., 0.1371, 0.1732, 0.1662],
         [0.1555, 0.1584, 0.1177,  ..., 0.1371, 0.1732, 0.1662],
         [0.5334, 0.5198, 0.6470,  ..., 0.5886, 0.4803, 0.5013]],
        [[0.2500, 0.2498, 0.2469,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2507, 0.2592,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2469,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2469,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:40,423 [Process: 0] Synchronize training processes
2024-08-16 13:15:40,424 [Process: 0] Evaluating...
2024-08-16 13:15:40,426 [Process: 0] EPOCH 640:
2024-08-16 13:15:40,428 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1282, 0.1557, 0.1659,  ..., 0.1418, 0.2019, 0.1272],
         [0.1282, 0.1557, 0.1398,  ..., 0.1418, 0.2019, 0.1272],
         [0.1282, 0.1557, 0.1398,  ..., 0.1418, 0.2019, 0.1272],
         [0.6155, 0.5330, 0.5546,  ..., 0.5745, 0.3943, 0.6185]],
        [[0.2282, 0.2481, 0.2720,  ..., 0.2415, 0.2500, 0.2500],
         [0.2341, 0.2954, 0.3321,  ..., 0.2537, 0.2500, 0.2500],
         [0.3147, 0.2450, 0.1979,  ..., 0.2632, 0.2500, 0.2500],
         [0.2230, 0.2116, 0.1979,  ..., 0.2415, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 640:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1380, 0.1191, 0.1329,  ..., 0.1385, 0.1736, 0.1400],
         [0.1380, 0.1191, 0.1329,  ..., 0.1385, 0.1736, 0.1400],
         [0.1380, 0.1191, 0.1329,  ..., 0.1385, 0.1736, 0.1400],
         [0.5859, 0.6427, 0.6012,  ..., 0.5845, 0.4791, 0.5799]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2487, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2592, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2460, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2460, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:42,433 [Process: 0] Synchronize training processes
2024-08-16 13:15:42,433 [Process: 0] Evaluating...
2024-08-16 13:15:42,435 [Process: 0] EPOCH 641:
2024-08-16 13:15:42,437 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1280, 0.1818, 0.1097,  ..., 0.1424, 0.2965, 0.1110],
         [0.1503, 0.1601, 0.1097,  ..., 0.1424, 0.1998, 0.1238],
         [0.1280, 0.1350, 0.1097,  ..., 0.1424, 0.2465, 0.1110],
         [0.5936, 0.5230, 0.6709,  ..., 0.5729, 0.2573, 0.6543]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2482, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2553, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2482, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2482, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 641:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1145, 0.1832, 0.1657,  ..., 0.1298, 0.1402, 0.1218],
         [0.1145, 0.1832, 0.1657,  ..., 0.1298, 0.1402, 0.1218],
         [0.1145, 0.1832, 0.1657,  ..., 0.1298, 0.1402, 0.1218],
         [0.6566, 0.4505, 0.5029,  ..., 0.6105, 0.5793, 0.6347]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:44,369 [Process: 0] Synchronize training processes
2024-08-16 13:15:44,370 [Process: 0] Evaluating...
2024-08-16 13:15:44,371 [Process: 0] EPOCH 642:
2024-08-16 13:15:44,373 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0971, 0.1493, 0.1835,  ..., 0.1243, 0.3420, 0.1256],
         [0.0971, 0.1493, 0.1835,  ..., 0.1243, 0.2173, 0.1256],
         [0.0971, 0.1493, 0.1835,  ..., 0.1243, 0.2881, 0.1256],
         [0.7086, 0.5521, 0.4496,  ..., 0.6271, 0.1526, 0.6233]],
        [[0.2500, 0.2500, 0.2402,  ..., 0.2446, 0.2500, 0.2229],
         [0.2500, 0.2500, 0.2793,  ..., 0.2446, 0.2500, 0.3258],
         [0.2500, 0.2500, 0.2402,  ..., 0.2663, 0.2500, 0.2284],
         [0.2500, 0.2500, 0.2402,  ..., 0.2446, 0.2500, 0.2229]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 642:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1586, 0.1331, 0.1795,  ..., 0.1444, 0.1191, 0.1248],
         [0.1586, 0.1331, 0.1795,  ..., 0.1444, 0.1191, 0.1248],
         [0.1586, 0.1331, 0.1795,  ..., 0.1444, 0.1191, 0.1248],
         [0.5242, 0.6008, 0.4615,  ..., 0.5669, 0.6427, 0.6256]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:46,343 [Process: 0] Synchronize training processes
2024-08-16 13:15:46,343 [Process: 0] Evaluating...
2024-08-16 13:15:46,345 [Process: 0] EPOCH 643:
2024-08-16 13:15:46,347 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0787, 0.1325, 0.1590,  ..., 0.1485, 0.1667, 0.1370],
         [0.0787, 0.1325, 0.1691,  ..., 0.1559, 0.1667, 0.1370],
         [0.0787, 0.1325, 0.1590,  ..., 0.1485, 0.1667, 0.1370],
         [0.7640, 0.6024, 0.5129,  ..., 0.5470, 0.4999, 0.5891]],
        [[0.2714, 0.2705, 0.2500,  ..., 0.2500, 0.2511, 0.2404],
         [0.2455, 0.2685, 0.2500,  ..., 0.2500, 0.2496, 0.2798],
         [0.2416, 0.2305, 0.2500,  ..., 0.2500, 0.2496, 0.2409],
         [0.2416, 0.2305, 0.2500,  ..., 0.2500, 0.2496, 0.2389]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 643:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1642, 0.1246, 0.1441,  ..., 0.1192, 0.1558, 0.1362],
         [0.1642, 0.1246, 0.1441,  ..., 0.1192, 0.1558, 0.1362],
         [0.1642, 0.1246, 0.1441,  ..., 0.1192, 0.1558, 0.1362],
         [0.5074, 0.6262, 0.5677,  ..., 0.6423, 0.5326, 0.5913]],
        [[0.2500, 0.2497, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2508, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2497, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2497, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:15:48,257 [Process: 0] Synchronize training processes
2024-08-16 13:15:48,257 [Process: 0] Evaluating...
2024-08-16 13:15:48,259 [Process: 0] EPOCH 644:
2024-08-16 13:15:48,261 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1407, 0.1851, 0.1168,  ..., 0.1619, 0.1400, 0.1521],
         [0.1407, 0.1851, 0.1245,  ..., 0.1711, 0.1400, 0.1521],
         [0.1407, 0.1851, 0.1168,  ..., 0.1619, 0.1400, 0.1521],
         [0.5780, 0.4446, 0.6419,  ..., 0.5051, 0.5800, 0.5437]],
        [[0.2093, 0.2904, 0.2500,  ..., 0.2485, 0.2500, 0.2500],
         [0.3304, 0.2546, 0.2500,  ..., 0.2544, 0.2500, 0.2500],
         [0.2510, 0.2275, 0.2500,  ..., 0.2485, 0.2500, 0.2500],
         [0.2093, 0.2275, 0.2500,  ..., 0.2485, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 644:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1498, 0.1443, 0.1709,  ..., 0.1466, 0.1612, 0.1587],
         [0.1498, 0.1443, 0.1709,  ..., 0.1466, 0.1612, 0.1634],
         [0.1498, 0.1443, 0.1709,  ..., 0.1466, 0.1612, 0.1587],
         [0.5506, 0.5671, 0.4872,  ..., 0.5602, 0.5163, 0.5192]],
        [[0.2466, 0.2476, 0.2500,  ..., 0.2500, 0.2500, 0.2493],
         [0.2603, 0.2572, 0.2500,  ..., 0.2500, 0.2500, 0.2521],
         [0.2466, 0.2476, 0.2500,  ..., 0.2500, 0.2500, 0.2493],
         [0.2466, 0.2476, 0.2500,  ..., 0.2500, 0.2500, 0.2493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1915, 0.1797, 0.1213,  ..., 0.1251, 0.1286, 0.1458],
         [0.1578, 0.1797, 0.1347,  ..., 0.1251, 0.1286, 0.1483],
         [0.1578, 0.1797, 0.1213,  ..., 0.1251, 0.1433, 0.1458],
         [0.4930, 0.4609, 0.6227,  ..., 0.6246, 0.5995, 0.5601]],
        [[0.2500, 0.2500, 0.2331,  ..., 0.2448, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.3008,  ..., 0.2655, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2331,  ..., 0.2448, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2331,  ..., 0.2448, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:50,160 [Process: 0] Synchronize training processes
2024-08-16 13:15:50,160 [Process: 0] Evaluating...
2024-08-16 13:15:50,162 [Process: 0] EPOCH 645:
2024-08-16 13:15:50,164 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 645:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1154, 0.1280, 0.1126,  ..., 0.1427, 0.1439, 0.1453],
         [0.1154, 0.1280, 0.1231,  ..., 0.1427, 0.1439, 0.1453],
         [0.1154, 0.1280, 0.1126,  ..., 0.1427, 0.1439, 0.1453],
         [0.6538, 0.6160, 0.6516,  ..., 0.5719, 0.5683, 0.5640]],
        [[0.2500, 0.2466, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2602, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2466, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2466, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1233, 0.1444, 0.1365,  ..., 0.1464, 0.2124, 0.1620],
         [0.1233, 0.1444, 0.1409,  ..., 0.1464, 0.2124, 0.1620],
         [0.1233, 0.1444, 0.1365,  ..., 0.1464, 0.2124, 0.1620],
         [0.6301, 0.5668, 0.5861,  ..., 0.5608, 0.3627, 0.5139]],
        [[0.2500, 0.2500, 0.2232,  ..., 0.2456, 0.2905, 0.2500],
         [0.2500, 0.2500, 0.2557,  ..., 0.2752, 0.2436, 0.2500],
         [0.2500, 0.2500, 0.2980,  ..., 0.2396, 0.2522, 0.2500],
         [0.2500, 0.2500, 0.2232,  ..., 0.2396, 0.2138, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:52,123 [Process: 0] Synchronize training processes
2024-08-16 13:15:52,123 [Process: 0] Evaluating...
2024-08-16 13:15:52,125 [Process: 0] EPOCH 646:
2024-08-16 13:15:52,128 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 646:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1540, 0.1817, 0.1964,  ..., 0.1683, 0.1439, 0.1415],
         [0.1540, 0.1817, 0.2003,  ..., 0.1683, 0.1453, 0.1415],
         [0.1540, 0.1817, 0.1823,  ..., 0.1683, 0.1439, 0.1415],
         [0.5381, 0.4549, 0.4210,  ..., 0.4950, 0.5669, 0.5754]],
        [[0.2500, 0.2476, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2571, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2476, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2476, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2068, 0.1315, 0.1162,  ..., 0.1351, 0.2497, 0.1060],
         [0.1991, 0.1315, 0.1173,  ..., 0.1429, 0.2497, 0.1070],
         [0.1745, 0.1315, 0.1162,  ..., 0.1351, 0.2497, 0.1472],
         [0.4195, 0.6054, 0.6504,  ..., 0.5868, 0.2508, 0.6397]],
        [[0.2500, 0.2798, 0.2500,  ..., 0.2485, 0.2477, 0.2500],
         [0.2500, 0.2809, 0.2500,  ..., 0.2546, 0.2570, 0.2500],
         [0.2500, 0.2208, 0.2500,  ..., 0.2485, 0.2477, 0.2500],
         [0.2500, 0.2185, 0.2500,  ..., 0.2485, 0.2477, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:54,149 [Process: 0] Synchronize training processes
2024-08-16 13:15:54,149 [Process: 0] Evaluating...
2024-08-16 13:15:54,151 [Process: 0] EPOCH 647:
2024-08-16 13:15:54,153 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 647:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1299, 0.1503, 0.1115,  ..., 0.1579, 0.1258, 0.1522],
         [0.1299, 0.1590, 0.1119,  ..., 0.1579, 0.1258, 0.1522],
         [0.1299, 0.1503, 0.1115,  ..., 0.1579, 0.1258, 0.1522],
         [0.6104, 0.5403, 0.6650,  ..., 0.5262, 0.6225, 0.5435]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2482, 0.2478, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2554, 0.2566, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2482, 0.2478, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2482, 0.2478, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1068, 0.1762, 0.1770,  ..., 0.1285, 0.1359, 0.1110],
         [0.1131, 0.1827, 0.2027,  ..., 0.1285, 0.1359, 0.1179],
         [0.1068, 0.1762, 0.1770,  ..., 0.1285, 0.1359, 0.1110],
         [0.6734, 0.4649, 0.4433,  ..., 0.6144, 0.5924, 0.6601]],
        [[0.2500, 0.2841, 0.2500,  ..., 0.2500, 0.2434, 0.2500],
         [0.2500, 0.2809, 0.2500,  ..., 0.2500, 0.2935, 0.2500],
         [0.2500, 0.2175, 0.2500,  ..., 0.2500, 0.2443, 0.2500],
         [0.2500, 0.2175, 0.2500,  ..., 0.2500, 0.2188, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:56,135 [Process: 0] Synchronize training processes
2024-08-16 13:15:56,135 [Process: 0] Evaluating...
2024-08-16 13:15:56,137 [Process: 0] EPOCH 648:
2024-08-16 13:15:56,139 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 648:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1372, 0.1150, 0.1500,  ..., 0.1468, 0.1330, 0.1203],
         [0.1372, 0.1150, 0.1500,  ..., 0.1468, 0.1330, 0.1203],
         [0.1372, 0.1150, 0.1500,  ..., 0.1468, 0.1330, 0.1203],
         [0.5885, 0.6549, 0.5501,  ..., 0.5596, 0.6011, 0.6392]],
        [[0.2500, 0.2755, 0.2455,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2415, 0.2634,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2415, 0.2455,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2415, 0.2455,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1677, 0.1494, 0.2016,  ..., 0.1625, 0.1425, 0.1020],
         [0.1744, 0.1576, 0.2016,  ..., 0.1781, 0.1425, 0.1020],
         [0.1763, 0.1494, 0.2016,  ..., 0.1625, 0.2874, 0.1098],
         [0.4815, 0.5437, 0.3953,  ..., 0.4968, 0.4276, 0.6862]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2530, 0.2500, 0.2384],
         [0.2500, 0.2500, 0.2500,  ..., 0.2791, 0.2500, 0.2624],
         [0.2500, 0.2500, 0.2500,  ..., 0.2340, 0.2500, 0.2758],
         [0.2500, 0.2500, 0.2500,  ..., 0.2340, 0.2500, 0.2234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:15:58,112 [Process: 0] Synchronize training processes
2024-08-16 13:15:58,112 [Process: 0] Evaluating...
2024-08-16 13:15:58,114 [Process: 0] EPOCH 649:
2024-08-16 13:15:58,116 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 649:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1560, 0.1796, 0.1154,  ..., 0.1118, 0.1720, 0.1664],
         [0.1560, 0.1796, 0.1154,  ..., 0.1118, 0.1720, 0.1664],
         [0.1560, 0.1796, 0.1154,  ..., 0.1118, 0.1720, 0.1664],
         [0.5319, 0.4611, 0.6538,  ..., 0.6647, 0.4841, 0.5008]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1560, 0.1537, 0.1395,  ..., 0.1054, 0.1640, 0.1325],
         [0.1431, 0.1570, 0.1429,  ..., 0.1054, 0.1640, 0.1325],
         [0.1431, 0.1333, 0.1395,  ..., 0.1054, 0.1640, 0.1325],
         [0.5578, 0.5559, 0.5782,  ..., 0.6838, 0.5080, 0.6025]],
        [[0.2500, 0.2385, 0.2500,  ..., 0.2500, 0.2500, 0.2419],
         [0.2500, 0.2705, 0.2500,  ..., 0.2500, 0.2500, 0.2856],
         [0.2500, 0.2526, 0.2500,  ..., 0.2500, 0.2500, 0.2440],
         [0.2500, 0.2385, 0.2500,  ..., 0.2500, 0.2500, 0.2285]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:16:00,135 [Process: 0] Synchronize training processes
2024-08-16 13:16:00,136 [Process: 0] Evaluating...
2024-08-16 13:16:00,138 [Process: 0] EPOCH 650:
2024-08-16 13:16:00,140 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 650:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1870, 0.1271, 0.1711,  ..., 0.1461, 0.2115, 0.1570],
         [0.1870, 0.1271, 0.1741,  ..., 0.1461, 0.2115, 0.1570],
         [0.1870, 0.1271, 0.1711,  ..., 0.1461, 0.2115, 0.1570],
         [0.4390, 0.6186, 0.4837,  ..., 0.5618, 0.3655, 0.5290]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2476, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2571, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2476, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2476, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1611, 0.1429, 0.1468,  ..., 0.1734, 0.1624, 0.1694],
         [0.1611, 0.1429, 0.1570,  ..., 0.1734, 0.1624, 0.1694],
         [0.1611, 0.1429, 0.1468,  ..., 0.1734, 0.1624, 0.1694],
         [0.5167, 0.5713, 0.5495,  ..., 0.4799, 0.5129, 0.4918]],
        [[0.2329, 0.2579, 0.2314,  ..., 0.2273, 0.4017, 0.2523],
         [0.3014, 0.2675, 0.3039,  ..., 0.2652, 0.2974, 0.2659],
         [0.2329, 0.2373, 0.2333,  ..., 0.3402, 0.1504, 0.3246],
         [0.2329, 0.2373, 0.2314,  ..., 0.1674, 0.1504, 0.1572]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:16:02,175 [Process: 0] Synchronize training processes
2024-08-16 13:16:02,176 [Process: 0] Evaluating...
2024-08-16 13:16:02,177 [Process: 0] EPOCH 651:
2024-08-16 13:16:02,179 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 651:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1472, 0.1710, 0.1653,  ..., 0.1420, 0.1711, 0.1563],
         [0.1472, 0.1710, 0.1653,  ..., 0.1420, 0.1711, 0.1563],
         [0.1472, 0.1710, 0.1653,  ..., 0.1420, 0.1711, 0.1563],
         [0.5585, 0.4871, 0.5041,  ..., 0.5741, 0.4867, 0.5312]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1862, 0.1782, 0.1533,  ..., 0.1122, 0.2072, 0.1421],
         [0.1927, 0.1887, 0.1572,  ..., 0.1128, 0.2072, 0.1421],
         [0.1862, 0.1782, 0.1533,  ..., 0.1122, 0.2072, 0.1421],
         [0.4350, 0.4550, 0.5362,  ..., 0.6628, 0.3785, 0.5736]],
        [[0.2310, 0.2209, 0.2511,  ..., 0.2753, 0.2333, 0.2897],
         [0.3071, 0.2656, 0.2366,  ..., 0.2416, 0.2736, 0.2368],
         [0.2310, 0.2925, 0.3187,  ..., 0.2416, 0.2598, 0.2368],
         [0.2310, 0.2209, 0.1936,  ..., 0.2416, 0.2333, 0.2368]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:16:04,196 [Process: 0] Synchronize training processes
2024-08-16 13:16:04,196 [Process: 0] Evaluating...
2024-08-16 13:16:04,198 [Process: 0] EPOCH 652:
2024-08-16 13:16:04,200 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 652:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1179, 0.1426, 0.1239,  ..., 0.1013, 0.1408, 0.1533],
         [0.1179, 0.1426, 0.1239,  ..., 0.1013, 0.1409, 0.1533],
         [0.1179, 0.1426, 0.1239,  ..., 0.1013, 0.1408, 0.1533],
         [0.6464, 0.5721, 0.6284,  ..., 0.6960, 0.5776, 0.5401]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1338, 0.1394, 0.1994,  ..., 0.1703, 0.1516, 0.1416],
         [0.1522, 0.1514, 0.1735,  ..., 0.2015, 0.1516, 0.1713],
         [0.1338, 0.1394, 0.1381,  ..., 0.1480, 0.5453, 0.1659],
         [0.5802, 0.5698, 0.4890,  ..., 0.4802, 0.1516, 0.5212]],
        [[0.2602, 0.2296, 0.2466,  ..., 0.2358, 0.2495, 0.2671],
         [0.2619, 0.2296, 0.2601,  ..., 0.3207, 0.2516, 0.2253],
         [0.2389, 0.3112, 0.2466,  ..., 0.2218, 0.2495, 0.3175],
         [0.2389, 0.2296, 0.2466,  ..., 0.2218, 0.2495, 0.1901]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:16:06,198 [Process: 0] Synchronize training processes
2024-08-16 13:16:06,199 [Process: 0] Evaluating...
2024-08-16 13:16:06,200 [Process: 0] EPOCH 653:
2024-08-16 13:16:06,202 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 653:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1084, 0.1525, 0.1632,  ..., 0.1387, 0.1487, 0.1524],
         [0.1084, 0.1525, 0.1632,  ..., 0.1387, 0.1487, 0.1524],
         [0.1084, 0.1525, 0.1632,  ..., 0.1387, 0.1487, 0.1524],
         [0.6749, 0.5424, 0.5103,  ..., 0.5840, 0.5539, 0.5429]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1434, 0.1398, 0.1813,  ..., 0.1815, 0.1840, 0.1820],
         [0.1535, 0.1398, 0.1575,  ..., 0.1948, 0.1840, 0.1820],
         [0.1434, 0.1398, 0.1564,  ..., 0.1815, 0.2534, 0.1820],
         [0.5597, 0.5805, 0.5048,  ..., 0.4423, 0.3786, 0.4540]],
        [[0.2500, 0.2738, 0.2500,  ..., 0.2298, 0.3242, 0.3353],
         [0.2500, 0.2421, 0.2500,  ..., 0.2298, 0.2305, 0.2667],
         [0.2500, 0.2421, 0.2500,  ..., 0.3107, 0.2280, 0.1990],
         [0.2500, 0.2421, 0.2500,  ..., 0.2298, 0.2173, 0.1990]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:16:08,189 [Process: 0] Synchronize training processes
2024-08-16 13:16:08,189 [Process: 0] Evaluating...
2024-08-16 13:16:08,191 [Process: 0] EPOCH 654:
2024-08-16 13:16:08,193 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 654:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1786, 0.1701, 0.1548,  ..., 0.1521, 0.1660, 0.1582],
         [0.1786, 0.1715, 0.1548,  ..., 0.1521, 0.1660, 0.1582],
         [0.1786, 0.1701, 0.1548,  ..., 0.1521, 0.1660, 0.1582],
         [0.4642, 0.4882, 0.5356,  ..., 0.5438, 0.5019, 0.5253]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2501],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1780, 0.1688, 0.1720,  ..., 0.2152, 0.2189, 0.1542],
         [0.1780, 0.1688, 0.1720,  ..., 0.1438, 0.2189, 0.1298],
         [0.1946, 0.1688, 0.1720,  ..., 0.1725, 0.2189, 0.1298],
         [0.4494, 0.4937, 0.4840,  ..., 0.4684, 0.3432, 0.5862]],
        [[0.2706, 0.2141, 0.2500,  ..., 0.3936, 0.4063, 0.2158],
         [0.3101, 0.2713, 0.2500,  ..., 0.2116, 0.2234, 0.3050],
         [0.2173, 0.3526, 0.2500,  ..., 0.2511, 0.1852, 0.2635],
         [0.2020, 0.1620, 0.2500,  ..., 0.1437, 0.1852, 0.2158]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 655:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:10,131 [Process: 0] Synchronize training processes
2024-08-16 13:16:10,132 [Process: 0] Evaluating...
2024-08-16 13:16:10,134 [Process: 0] EPOCH 655:
2024-08-16 13:16:10,135 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1360, 0.1722, 0.1416,  ..., 0.1507, 0.1568, 0.1812],
         [0.1360, 0.1722, 0.1416,  ..., 0.1567, 0.1577, 0.1884],
         [0.1360, 0.1722, 0.1416,  ..., 0.1507, 0.1568, 0.1812],
         [0.5920, 0.4834, 0.5753,  ..., 0.5419, 0.5286, 0.4492]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1273, 0.1987, 0.1492,  ..., 0.1398, 0.1187, 0.1276],
         [0.1373, 0.1987, 0.1492,  ..., 0.1435, 0.1187, 0.1548],
         [0.1273, 0.1987, 0.1492,  ..., 0.1398, 0.1737, 0.1276],
         [0.6082, 0.4039, 0.5524,  ..., 0.5769, 0.5888, 0.5901]],
        [[0.3570, 0.2334, 0.2061,  ..., 0.2455, 0.2636, 0.2500],
         [0.2246, 0.2999, 0.3100,  ..., 0.2455, 0.2638, 0.2500],
         [0.2279, 0.2334, 0.2778,  ..., 0.2635, 0.2363, 0.2500],
         [0.1905, 0.2334, 0.2061,  ..., 0.2455, 0.2363, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 656:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:12,092 [Process: 0] Synchronize training processes
2024-08-16 13:16:12,093 [Process: 0] Evaluating...
2024-08-16 13:16:12,094 [Process: 0] EPOCH 656:
2024-08-16 13:16:12,096 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1424, 0.1794, 0.1551,  ..., 0.1398, 0.1118, 0.1624],
         [0.1424, 0.1904, 0.1551,  ..., 0.1398, 0.1118, 0.1624],
         [0.1424, 0.1794, 0.1551,  ..., 0.1398, 0.1118, 0.1624],
         [0.5727, 0.4507, 0.5346,  ..., 0.5806, 0.6647, 0.5128]],
        [[0.2500, 0.2500, 0.2476,  ..., 0.2500, 0.2497, 0.2494],
         [0.2500, 0.2500, 0.2573,  ..., 0.2500, 0.2508, 0.2518],
         [0.2500, 0.2500, 0.2476,  ..., 0.2500, 0.2497, 0.2494],
         [0.2500, 0.2500, 0.2476,  ..., 0.2500, 0.2497, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1451, 0.1062, 0.1075,  ..., 0.1837, 0.0914, 0.1688],
         [0.1451, 0.1156, 0.1275,  ..., 0.1645, 0.0914, 0.1688],
         [0.1451, 0.1062, 0.1075,  ..., 0.1845, 0.5022, 0.1688],
         [0.5646, 0.6721, 0.6575,  ..., 0.4673, 0.3149, 0.4937]],
        [[0.3871, 0.2373, 0.2459,  ..., 0.6336, 0.3545, 0.2990],
         [0.2139, 0.2882, 0.2623,  ..., 0.1377, 0.2651, 0.2337],
         [0.2319, 0.2373, 0.2459,  ..., 0.1435, 0.1902, 0.2337],
         [0.1671, 0.2373, 0.2459,  ..., 0.0853, 0.1902, 0.2337]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 657:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:14,055 [Process: 0] Synchronize training processes
2024-08-16 13:16:14,055 [Process: 0] Evaluating...
2024-08-16 13:16:14,057 [Process: 0] EPOCH 657:
2024-08-16 13:16:14,059 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1633, 0.1632, 0.1329,  ..., 0.1569, 0.1692, 0.1542],
         [0.1633, 0.1632, 0.1329,  ..., 0.1569, 0.1692, 0.1542],
         [0.1633, 0.1632, 0.1329,  ..., 0.1569, 0.1692, 0.1542],
         [0.5101, 0.5103, 0.6012,  ..., 0.5293, 0.4923, 0.5374]],
        [[0.2500, 0.2500, 0.2463,  ..., 0.2460, 0.2500, 0.2463],
         [0.2500, 0.2500, 0.2612,  ..., 0.2619, 0.2500, 0.2610],
         [0.2500, 0.2500, 0.2463,  ..., 0.2460, 0.2500, 0.2463],
         [0.2500, 0.2500, 0.2463,  ..., 0.2460, 0.2500, 0.2463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1504, 0.1393, 0.1917,  ..., 0.1524, 0.2363, 0.1691],
         [0.1652, 0.1518, 0.1898,  ..., 0.1524, 0.1515, 0.1880],
         [0.1504, 0.1678, 0.1643,  ..., 0.1524, 0.2088, 0.1691],
         [0.5340, 0.5411, 0.4542,  ..., 0.5427, 0.4034, 0.4739]],
        [[0.3779, 0.2466, 0.2432,  ..., 0.2374, 0.1735, 0.2500],
         [0.2251, 0.2602, 0.2432,  ..., 0.2877, 0.2302, 0.2500],
         [0.1985, 0.2466, 0.2705,  ..., 0.2374, 0.4227, 0.2500],
         [0.1985, 0.2466, 0.2432,  ..., 0.2374, 0.1735, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:16:16,024 [Process: 0] Synchronize training processes
2024-08-16 13:16:16,024 [Process: 0] Evaluating...
2024-08-16 13:16:16,026 [Process: 0] EPOCH 658:
2024-08-16 13:16:16,028 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 658:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1547, 0.1344, 0.1283,  ..., 0.1580, 0.1651, 0.1849],
         [0.1547, 0.1344, 0.1283,  ..., 0.1580, 0.1651, 0.1849],
         [0.1547, 0.1344, 0.1283,  ..., 0.1580, 0.1651, 0.1849],
         [0.5358, 0.5968, 0.6150,  ..., 0.5259, 0.5048, 0.4453]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2439, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2683, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2439, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2439, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1387, 0.1290, 0.1655,  ..., 0.1618, 0.1601, 0.1280],
         [0.1387, 0.1290, 0.1655,  ..., 0.1774, 0.0880, 0.1400],
         [0.1387, 0.1290, 0.1655,  ..., 0.1618, 0.0880, 0.1280],
         [0.5838, 0.6130, 0.5036,  ..., 0.4989, 0.6640, 0.6041]],
        [[0.2663, 0.2500, 0.2483,  ..., 0.2436, 0.2308, 0.2500],
         [0.3043, 0.2500, 0.2552,  ..., 0.3471, 0.2991, 0.2500],
         [0.2586, 0.2500, 0.2483,  ..., 0.2189, 0.2392, 0.2500],
         [0.1708, 0.2500, 0.2483,  ..., 0.1904, 0.2308, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 659:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:17,978 [Process: 0] Synchronize training processes
2024-08-16 13:16:17,979 [Process: 0] Evaluating...
2024-08-16 13:16:17,980 [Process: 0] EPOCH 659:
2024-08-16 13:16:17,982 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1773, 0.1019, 0.1702,  ..., 0.1050, 0.1537, 0.1395],
         [0.1773, 0.1019, 0.1702,  ..., 0.1096, 0.1537, 0.1395],
         [0.1773, 0.1019, 0.1702,  ..., 0.1050, 0.1537, 0.1395],
         [0.4681, 0.6943, 0.4893,  ..., 0.6804, 0.5388, 0.5814]],
        [[0.2472, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2497],
         [0.2585, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2509],
         [0.2472, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2497],
         [0.2472, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1623, 0.1851, 0.0901,  ..., 0.1461, 0.4774, 0.1690],
         [0.1623, 0.1851, 0.0901,  ..., 0.1461, 0.0349, 0.1690],
         [0.1623, 0.1851, 0.0901,  ..., 0.1461, 0.4527, 0.1690],
         [0.5131, 0.4448, 0.7298,  ..., 0.5617, 0.0349, 0.4930]],
        [[0.2354, 0.2442, 0.2203,  ..., 0.2436, 0.3013, 0.2349],
         [0.2938, 0.2673, 0.3392,  ..., 0.2692, 0.3624, 0.2954],
         [0.2354, 0.2442, 0.2203,  ..., 0.2436, 0.1707, 0.2349],
         [0.2354, 0.2442, 0.2203,  ..., 0.2436, 0.1656, 0.2349]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 660:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:19,922 [Process: 0] Synchronize training processes
2024-08-16 13:16:19,923 [Process: 0] Evaluating...
2024-08-16 13:16:19,925 [Process: 0] EPOCH 660:
2024-08-16 13:16:19,927 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1658, 0.1475, 0.1437,  ..., 0.1629, 0.1468, 0.1491],
         [0.1674, 0.1475, 0.1437,  ..., 0.1629, 0.1468, 0.1493],
         [0.1658, 0.1475, 0.1437,  ..., 0.1629, 0.1468, 0.1491],
         [0.5011, 0.5575, 0.5690,  ..., 0.5114, 0.5597, 0.5524]],
        [[0.2474, 0.2500, 0.2477,  ..., 0.2451, 0.2500, 0.2500],
         [0.2579, 0.2500, 0.2569,  ..., 0.2646, 0.2500, 0.2500],
         [0.2474, 0.2500, 0.2477,  ..., 0.2451, 0.2500, 0.2500],
         [0.2474, 0.2500, 0.2477,  ..., 0.2451, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2908, 0.1988, 0.1376,  ..., 0.1512, 0.1072, 0.2059],
         [0.1989, 0.1809, 0.1396,  ..., 0.1294, 0.1072, 0.1981],
         [0.1628, 0.1809, 0.1376,  ..., 0.0973, 0.1317, 0.1487],
         [0.3475, 0.4393, 0.5853,  ..., 0.6221, 0.6538, 0.4473]],
        [[0.2500, 0.2490, 0.2463,  ..., 0.2067, 0.2471, 0.2500],
         [0.2500, 0.2530, 0.2610,  ..., 0.3799, 0.2588, 0.2500],
         [0.2500, 0.2490, 0.2463,  ..., 0.2067, 0.2471, 0.2500],
         [0.2500, 0.2490, 0.2463,  ..., 0.2067, 0.2471, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 661:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:21,874 [Process: 0] Synchronize training processes
2024-08-16 13:16:21,874 [Process: 0] Evaluating...
2024-08-16 13:16:21,876 [Process: 0] EPOCH 661:
2024-08-16 13:16:21,878 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1646, 0.1727, 0.1340,  ..., 0.1234, 0.1542, 0.0909],
         [0.1646, 0.1727, 0.1340,  ..., 0.1234, 0.1542, 0.0909],
         [0.1646, 0.1727, 0.1340,  ..., 0.1234, 0.1542, 0.0909],
         [0.5061, 0.4818, 0.5980,  ..., 0.6297, 0.5373, 0.7272]],
        [[0.2457, 0.2433, 0.2500,  ..., 0.2500, 0.2483, 0.2500],
         [0.2629, 0.2701, 0.2500,  ..., 0.2500, 0.2550, 0.2500],
         [0.2457, 0.2433, 0.2500,  ..., 0.2500, 0.2483, 0.2500],
         [0.2457, 0.2433, 0.2500,  ..., 0.2500, 0.2483, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1449, 0.1482, 0.1732,  ..., 0.1588, 0.2759, 0.1360],
         [0.1449, 0.1482, 0.1732,  ..., 0.1588, 0.0803, 0.1360],
         [0.1449, 0.1482, 0.1732,  ..., 0.1588, 0.2566, 0.1360],
         [0.5652, 0.5553, 0.4805,  ..., 0.5235, 0.3873, 0.5920]],
        [[0.3199, 0.2240, 0.1448,  ..., 0.3712, 0.2500, 0.2397],
         [0.3512, 0.3280, 0.5011,  ..., 0.2096, 0.2500, 0.3540],
         [0.1644, 0.2240, 0.2350,  ..., 0.2096, 0.2500, 0.2032],
         [0.1644, 0.2240, 0.1190,  ..., 0.2096, 0.2500, 0.2032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 662:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:23,809 [Process: 0] Synchronize training processes
2024-08-16 13:16:23,809 [Process: 0] Evaluating...
2024-08-16 13:16:23,811 [Process: 0] EPOCH 662:
2024-08-16 13:16:23,813 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1312, 0.1440, 0.1527,  ..., 0.1542, 0.1403, 0.1564],
         [0.1312, 0.1533, 0.1527,  ..., 0.1542, 0.1403, 0.1564],
         [0.1312, 0.1440, 0.1527,  ..., 0.1542, 0.1403, 0.1564],
         [0.6065, 0.5587, 0.5418,  ..., 0.5374, 0.5790, 0.5308]],
        [[0.2462, 0.2470, 0.2500,  ..., 0.2485, 0.2500, 0.2492],
         [0.2614, 0.2591, 0.2500,  ..., 0.2545, 0.2500, 0.2523],
         [0.2462, 0.2470, 0.2500,  ..., 0.2485, 0.2500, 0.2492],
         [0.2462, 0.2470, 0.2500,  ..., 0.2485, 0.2500, 0.2492]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1302, 0.1437, 0.1419,  ..., 0.1717, 0.1869, 0.1473],
         [0.1734, 0.1648, 0.1419,  ..., 0.1854, 0.1869, 0.1473],
         [0.1211, 0.1694, 0.1419,  ..., 0.1717, 0.1869, 0.1602],
         [0.5753, 0.5221, 0.5744,  ..., 0.4712, 0.4394, 0.5451]],
        [[0.2236, 0.2139, 0.2223,  ..., 0.2169, 0.2500, 0.2500],
         [0.3292, 0.3790, 0.3332,  ..., 0.2778, 0.2500, 0.2500],
         [0.2236, 0.2035, 0.2223,  ..., 0.2884, 0.2500, 0.2500],
         [0.2236, 0.2035, 0.2223,  ..., 0.2169, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 663:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:25,824 [Process: 0] Synchronize training processes
2024-08-16 13:16:25,825 [Process: 0] Evaluating...
2024-08-16 13:16:25,827 [Process: 0] EPOCH 663:
2024-08-16 13:16:25,829 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1529, 0.1348, 0.1421,  ..., 0.1177, 0.1338, 0.1331],
         [0.1529, 0.1348, 0.1421,  ..., 0.1177, 0.1338, 0.1331],
         [0.1529, 0.1348, 0.1421,  ..., 0.1177, 0.1338, 0.1331],
         [0.5413, 0.5956, 0.5736,  ..., 0.6470, 0.5985, 0.6007]],
        [[0.2498, 0.2498, 0.2500,  ..., 0.2479, 0.2474, 0.2500],
         [0.2506, 0.2586, 0.2500,  ..., 0.2563, 0.2579, 0.2500],
         [0.2498, 0.2458, 0.2500,  ..., 0.2479, 0.2474, 0.2500],
         [0.2498, 0.2458, 0.2500,  ..., 0.2479, 0.2474, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1447, 0.2134, 0.3867,  ..., 0.1892, 0.1166, 0.2497],
         [0.1521, 0.2121, 0.1838,  ..., 0.2427, 0.1166, 0.1342],
         [0.1270, 0.1655, 0.1359,  ..., 0.2272, 0.1234, 0.1342],
         [0.5761, 0.4090, 0.2936,  ..., 0.3408, 0.6435, 0.4819]],
        [[0.2500, 0.2408, 0.2500,  ..., 0.2483, 0.2316, 0.2072],
         [0.2500, 0.2777, 0.2500,  ..., 0.2550, 0.3052, 0.2765],
         [0.2500, 0.2408, 0.2500,  ..., 0.2483, 0.2316, 0.3092],
         [0.2500, 0.2408, 0.2500,  ..., 0.2483, 0.2316, 0.2072]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 664:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:27,821 [Process: 0] Synchronize training processes
2024-08-16 13:16:27,822 [Process: 0] Evaluating...
2024-08-16 13:16:27,824 [Process: 0] EPOCH 664:
2024-08-16 13:16:27,826 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1701, 0.1568, 0.1544,  ..., 0.1490, 0.1511, 0.1365],
         [0.1710, 0.1568, 0.1544,  ..., 0.1532, 0.1529, 0.1365],
         [0.1701, 0.1568, 0.1544,  ..., 0.1490, 0.1511, 0.1365],
         [0.4889, 0.5295, 0.5368,  ..., 0.5487, 0.5448, 0.5906]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2506, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2897, 0.3798, 0.5150,  ..., 0.3833, 0.1958, 0.2325],
         [0.2204, 0.1881, 0.1719,  ..., 0.1207, 0.1958, 0.2225],
         [0.1970, 0.1016, 0.0849,  ..., 0.1257, 0.2319, 0.1329],
         [0.2928, 0.3305, 0.2283,  ..., 0.3703, 0.3766, 0.4121]],
        [[0.2469, 0.2358, 0.2449,  ..., 0.3014, 0.3087, 0.2500],
         [0.2592, 0.2926, 0.2846,  ..., 0.2664, 0.2532, 0.2500],
         [0.2469, 0.2358, 0.2486,  ..., 0.2161, 0.2190, 0.2500],
         [0.2469, 0.2358, 0.2219,  ..., 0.2161, 0.2190, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 665:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:29,731 [Process: 0] Synchronize training processes
2024-08-16 13:16:29,731 [Process: 0] Evaluating...
2024-08-16 13:16:29,733 [Process: 0] EPOCH 665:
2024-08-16 13:16:29,735 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1634, 0.1548, 0.1585,  ..., 0.1519, 0.1593, 0.1380],
         [0.1634, 0.1548, 0.1585,  ..., 0.1560, 0.1593, 0.1380],
         [0.1634, 0.1548, 0.1585,  ..., 0.1519, 0.1593, 0.1380],
         [0.5098, 0.5355, 0.5246,  ..., 0.5403, 0.5221, 0.5861]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1593, 0.1458, 0.1414,  ..., 0.1406, 0.0369, 0.1791],
         [0.1593, 0.1355, 0.2827,  ..., 0.1875, 0.0369, 0.2305],
         [0.1593, 0.1659, 0.1414,  ..., 0.1406, 0.7753, 0.1791],
         [0.5221, 0.5527, 0.4346,  ..., 0.5314, 0.1510, 0.4113]],
        [[0.2401, 0.2629, 0.2479,  ..., 0.2144, 0.2091, 0.2500],
         [0.2798, 0.2221, 0.2562,  ..., 0.3567, 0.3727, 0.2500],
         [0.2401, 0.2929, 0.2479,  ..., 0.2144, 0.2091, 0.2500],
         [0.2401, 0.2221, 0.2479,  ..., 0.2144, 0.2091, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 666:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:31,718 [Process: 0] Synchronize training processes
2024-08-16 13:16:31,719 [Process: 0] Evaluating...
2024-08-16 13:16:31,721 [Process: 0] EPOCH 666:
2024-08-16 13:16:31,723 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1091, 0.1768, 0.1423,  ..., 0.1623, 0.1547, 0.1612],
         [0.1100, 0.1768, 0.1466,  ..., 0.1647, 0.1547, 0.1612],
         [0.1091, 0.1768, 0.1423,  ..., 0.1623, 0.1547, 0.1612],
         [0.6719, 0.4695, 0.5688,  ..., 0.5107, 0.5360, 0.5163]],
        [[0.2500, 0.2500, 0.2489,  ..., 0.2500, 0.2500, 0.2493],
         [0.2500, 0.2500, 0.2532,  ..., 0.2500, 0.2500, 0.2521],
         [0.2500, 0.2500, 0.2489,  ..., 0.2500, 0.2500, 0.2493],
         [0.2500, 0.2500, 0.2489,  ..., 0.2500, 0.2500, 0.2493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1398, 0.1055, 0.1685,  ..., 0.1624, 0.1355, 0.1459],
         [0.1585, 0.1193, 0.1685,  ..., 0.1526, 0.1355, 0.1459],
         [0.1398, 0.1055, 0.1685,  ..., 0.1526, 0.4000, 0.1459],
         [0.5619, 0.6696, 0.4944,  ..., 0.5323, 0.3289, 0.5624]],
        [[0.2477, 0.2635, 0.2500,  ..., 0.2362, 0.2500, 0.2340],
         [0.2570, 0.4653, 0.2500,  ..., 0.4085, 0.2500, 0.2893],
         [0.2477, 0.1616, 0.2500,  ..., 0.1867, 0.2500, 0.2427],
         [0.2477, 0.1095, 0.2500,  ..., 0.1685, 0.2500, 0.2340]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 667:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:33,803 [Process: 0] Synchronize training processes
2024-08-16 13:16:33,803 [Process: 0] Evaluating...
2024-08-16 13:16:33,805 [Process: 0] EPOCH 667:
2024-08-16 13:16:33,807 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1869, 0.1220, 0.0989,  ..., 0.1188, 0.1748, 0.1374],
         [0.1869, 0.1256, 0.0989,  ..., 0.1188, 0.1748, 0.1374],
         [0.1869, 0.1220, 0.0989,  ..., 0.1188, 0.1748, 0.1374],
         [0.4394, 0.6305, 0.7032,  ..., 0.6435, 0.4756, 0.5878]],
        [[0.2484, 0.2500, 0.2477,  ..., 0.2500, 0.2500, 0.2500],
         [0.2547, 0.2500, 0.2569,  ..., 0.2500, 0.2500, 0.2500],
         [0.2484, 0.2500, 0.2477,  ..., 0.2500, 0.2500, 0.2500],
         [0.2484, 0.2500, 0.2477,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1619, 0.2824, 0.2193,  ..., 0.1682, 0.1114, 0.1310],
         [0.1619, 0.1851, 0.1323,  ..., 0.1510, 0.1114, 0.1395],
         [0.1619, 0.1851, 0.1323,  ..., 0.1643, 0.1534, 0.1310],
         [0.5142, 0.3474, 0.5160,  ..., 0.5165, 0.6238, 0.5985]],
        [[0.2428, 0.2500, 0.3234,  ..., 0.3295, 0.2495, 0.3231],
         [0.2717, 0.2500, 0.2536,  ..., 0.2833, 0.2514, 0.3099],
         [0.2428, 0.2500, 0.2115,  ..., 0.1936, 0.2495, 0.1835],
         [0.2428, 0.2500, 0.2115,  ..., 0.1936, 0.2495, 0.1835]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 668:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:35,882 [Process: 0] Synchronize training processes
2024-08-16 13:16:35,882 [Process: 0] Evaluating...
2024-08-16 13:16:35,885 [Process: 0] EPOCH 668:
2024-08-16 13:16:35,887 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1402, 0.1487, 0.1165,  ..., 0.1425, 0.1439, 0.1799],
         [0.1402, 0.1487, 0.1202,  ..., 0.1425, 0.1439, 0.1867],
         [0.1402, 0.1487, 0.1165,  ..., 0.1425, 0.1439, 0.1799],
         [0.5793, 0.5538, 0.6467,  ..., 0.5726, 0.5684, 0.4536]],
        [[0.2450, 0.2500, 0.2500,  ..., 0.2482, 0.2500, 0.2500],
         [0.2649, 0.2500, 0.2500,  ..., 0.2555, 0.2500, 0.2500],
         [0.2450, 0.2500, 0.2500,  ..., 0.2482, 0.2500, 0.2500],
         [0.2450, 0.2500, 0.2500,  ..., 0.2482, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1607, 0.1501, 0.1616,  ..., 0.1642, 0.1540, 0.0947],
         [0.1907, 0.1501, 0.1618,  ..., 0.1700, 0.1540, 0.0947],
         [0.1607, 0.1501, 0.1616,  ..., 0.1642, 0.4359, 0.0947],
         [0.4879, 0.5497, 0.5150,  ..., 0.5016, 0.2561, 0.7160]],
        [[0.2500, 0.2500, 0.3108,  ..., 0.2515, 0.3311, 0.2500],
         [0.2500, 0.2500, 0.2297,  ..., 0.3154, 0.2348, 0.2500],
         [0.2500, 0.2500, 0.2297,  ..., 0.2166, 0.2171, 0.2500],
         [0.2500, 0.2500, 0.2297,  ..., 0.2166, 0.2171, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 669:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:37,889 [Process: 0] Synchronize training processes
2024-08-16 13:16:37,889 [Process: 0] Evaluating...
2024-08-16 13:16:37,891 [Process: 0] EPOCH 669:
2024-08-16 13:16:37,893 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1575, 0.1198, 0.1427,  ..., 0.1216, 0.1312, 0.1344],
         [0.1575, 0.1198, 0.1427,  ..., 0.1216, 0.1312, 0.1344],
         [0.1575, 0.1198, 0.1427,  ..., 0.1216, 0.1312, 0.1344],
         [0.5274, 0.6405, 0.5719,  ..., 0.6353, 0.6065, 0.5969]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2491, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2527, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2491, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2491, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1038, 0.1220, 0.1208,  ..., 0.1768, 0.2915, 0.2550],
         [0.1108, 0.1249, 0.1406,  ..., 0.2184, 0.0865, 0.2723],
         [0.1038, 0.1220, 0.1208,  ..., 0.1768, 0.5610, 0.1685],
         [0.6817, 0.6311, 0.6179,  ..., 0.4281, 0.0611, 0.3042]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2496, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2512, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2496, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2496, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 670:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:39,831 [Process: 0] Synchronize training processes
2024-08-16 13:16:39,832 [Process: 0] Evaluating...
2024-08-16 13:16:39,834 [Process: 0] EPOCH 670:
2024-08-16 13:16:39,836 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1383, 0.1784, 0.1439,  ..., 0.1820, 0.1100, 0.1525],
         [0.1383, 0.1784, 0.1439,  ..., 0.1820, 0.1100, 0.1525],
         [0.1383, 0.1784, 0.1439,  ..., 0.1820, 0.1100, 0.1525],
         [0.5851, 0.4649, 0.5682,  ..., 0.4539, 0.6699, 0.5426]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2501, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1587, 0.1728, 0.1456,  ..., 0.1569, 0.2154, 0.2171],
         [0.1587, 0.1728, 0.1456,  ..., 0.1629, 0.2154, 0.2171],
         [0.1587, 0.1728, 0.1456,  ..., 0.1569, 0.2269, 0.2171],
         [0.5238, 0.4817, 0.5632,  ..., 0.5233, 0.3423, 0.3488]],
        [[0.2455, 0.3188, 0.3139,  ..., 0.3307, 0.2430, 0.2722],
         [0.2634, 0.2356, 0.2383,  ..., 0.2015, 0.2430, 0.2561],
         [0.2455, 0.2228, 0.2739,  ..., 0.2662, 0.2711, 0.2359],
         [0.2455, 0.2228, 0.1740,  ..., 0.2015, 0.2430, 0.2359]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 671:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:41,768 [Process: 0] Synchronize training processes
2024-08-16 13:16:41,769 [Process: 0] Evaluating...
2024-08-16 13:16:41,771 [Process: 0] EPOCH 671:
2024-08-16 13:16:41,773 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1735, 0.1694, 0.1602,  ..., 0.1449, 0.1736, 0.1589],
         [0.1735, 0.1694, 0.1602,  ..., 0.1449, 0.1736, 0.1589],
         [0.1735, 0.1694, 0.1602,  ..., 0.1449, 0.1736, 0.1589],
         [0.4795, 0.4918, 0.5195,  ..., 0.5652, 0.4793, 0.5233]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2498, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2505, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2498, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2498, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0880, 0.1167, 0.1554,  ..., 0.1470, 0.2056, 0.1353],
         [0.0880, 0.1167, 0.1593,  ..., 0.1517, 0.2056, 0.1353],
         [0.0880, 0.1167, 0.1554,  ..., 0.1470, 0.3831, 0.1611],
         [0.7361, 0.6500, 0.5300,  ..., 0.5543, 0.2056, 0.5683]],
        [[0.2500, 0.2500, 0.2673,  ..., 0.2172, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2915,  ..., 0.3387, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2206,  ..., 0.2269, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2206,  ..., 0.2172, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 672:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:43,785 [Process: 0] Synchronize training processes
2024-08-16 13:16:43,785 [Process: 0] Evaluating...
2024-08-16 13:16:43,787 [Process: 0] EPOCH 672:
2024-08-16 13:16:43,789 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1612, 0.1377, 0.1012,  ..., 0.1381, 0.1780, 0.1621],
         [0.1612, 0.1397, 0.1012,  ..., 0.1381, 0.1780, 0.1621],
         [0.1612, 0.1377, 0.1012,  ..., 0.1381, 0.1780, 0.1621],
         [0.5165, 0.5848, 0.6965,  ..., 0.5858, 0.4660, 0.5138]],
        [[0.2500, 0.2491, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2527, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2491, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2491, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1689, 0.1212, 0.1131,  ..., 0.1258, 0.1312, 0.1500],
         [0.1823, 0.1271, 0.1187,  ..., 0.1258, 0.1312, 0.1500],
         [0.1689, 0.1212, 0.1131,  ..., 0.1258, 0.5807, 0.1500],
         [0.4798, 0.6306, 0.6550,  ..., 0.6226, 0.1570, 0.5499]],
        [[0.2500, 0.2488, 0.2657,  ..., 0.2500, 0.2500, 0.2388],
         [0.2500, 0.2537, 0.2448,  ..., 0.2500, 0.2500, 0.2388],
         [0.2500, 0.2488, 0.2448,  ..., 0.2500, 0.2500, 0.2837],
         [0.2500, 0.2488, 0.2448,  ..., 0.2500, 0.2500, 0.2388]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 673:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:45,740 [Process: 0] Synchronize training processes
2024-08-16 13:16:45,741 [Process: 0] Evaluating...
2024-08-16 13:16:45,742 [Process: 0] EPOCH 673:
2024-08-16 13:16:45,744 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1138, 0.1131, 0.1462,  ..., 0.1196, 0.1714, 0.1053],
         [0.1138, 0.1131, 0.1543,  ..., 0.1196, 0.1714, 0.1053],
         [0.1138, 0.1131, 0.1462,  ..., 0.1196, 0.1714, 0.1053],
         [0.6585, 0.6608, 0.5533,  ..., 0.6412, 0.4859, 0.6840]],
        [[0.2500, 0.2483, 0.2500,  ..., 0.2500, 0.2500, 0.2481],
         [0.2500, 0.2550, 0.2500,  ..., 0.2500, 0.2500, 0.2557],
         [0.2500, 0.2483, 0.2500,  ..., 0.2500, 0.2500, 0.2481],
         [0.2500, 0.2483, 0.2500,  ..., 0.2500, 0.2500, 0.2481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1960, 0.1408, 0.1154,  ..., 0.1636, 0.0937, 0.1333],
         [0.1243, 0.1408, 0.1154,  ..., 0.1503, 0.0387, 0.1333],
         [0.1999, 0.1408, 0.1154,  ..., 0.1503, 0.8184, 0.1333],
         [0.4798, 0.5776, 0.6539,  ..., 0.5357, 0.0492, 0.6000]],
        [[0.2433, 0.2439, 0.4451,  ..., 0.4102, 0.2815, 0.4044],
         [0.2702, 0.2771, 0.2282,  ..., 0.2533, 0.2395, 0.2365],
         [0.2433, 0.2437, 0.1780,  ..., 0.2129, 0.2395, 0.1795],
         [0.2433, 0.2353, 0.1488,  ..., 0.1237, 0.2395, 0.1795]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 674:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:47,650 [Process: 0] Synchronize training processes
2024-08-16 13:16:47,651 [Process: 0] Evaluating...
2024-08-16 13:16:47,653 [Process: 0] EPOCH 674:
2024-08-16 13:16:47,655 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1521, 0.1480, 0.1655,  ..., 0.1185, 0.1444, 0.1547],
         [0.1521, 0.1480, 0.1655,  ..., 0.1185, 0.1444, 0.1547],
         [0.1521, 0.1480, 0.1655,  ..., 0.1185, 0.1444, 0.1547],
         [0.5436, 0.5561, 0.5035,  ..., 0.6444, 0.5668, 0.5359]],
        [[0.2500, 0.2500, 0.2488,  ..., 0.2475, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2535,  ..., 0.2574, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2488,  ..., 0.2475, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2488,  ..., 0.2475, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1515, 0.0963, 0.1075,  ..., 0.1201, 0.1516, 0.0514],
         [0.2007, 0.1013, 0.1304,  ..., 0.1627, 0.1516, 0.0514],
         [0.1515, 0.0963, 0.1075,  ..., 0.1201, 0.4828, 0.0514],
         [0.4964, 0.7061, 0.6546,  ..., 0.5972, 0.2140, 0.8457]],
        [[0.2412, 0.2278, 0.2500,  ..., 0.2500, 0.2000, 0.2500],
         [0.2764, 0.3141, 0.2500,  ..., 0.2500, 0.2107, 0.2500],
         [0.2412, 0.2302, 0.2500,  ..., 0.2500, 0.3892, 0.2500],
         [0.2412, 0.2278, 0.2500,  ..., 0.2500, 0.2000, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 675:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:16:49,536 [Process: 0] Synchronize training processes
2024-08-16 13:16:49,537 [Process: 0] Evaluating...
2024-08-16 13:16:49,539 [Process: 0] EPOCH 675:
2024-08-16 13:16:49,541 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1535, 0.1505, 0.1544,  ..., 0.1545, 0.1342, 0.1424],
         [0.1535, 0.1505, 0.1544,  ..., 0.1545, 0.1355, 0.1424],
         [0.1535, 0.1505, 0.1544,  ..., 0.1545, 0.1342, 0.1424],
         [0.5394, 0.5486, 0.5369,  ..., 0.5366, 0.5961, 0.5729]],
        [[0.2498, 0.2500, 0.2499,  ..., 0.2500, 0.2500, 0.2500],
         [0.2507, 0.2500, 0.2504,  ..., 0.2500, 0.2500, 0.2500],
         [0.2498, 0.2500, 0.2499,  ..., 0.2500, 0.2500, 0.2500],
         [0.2498, 0.2500, 0.2499,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1073, 0.1314, 0.1383,  ..., 0.1567, 0.1371, 0.1415],
         [0.1085, 0.1386, 0.1452,  ..., 0.1826, 0.1371, 0.1421],
         [0.1073, 0.1314, 0.1383,  ..., 0.1567, 0.4068, 0.1415],
         [0.6770, 0.5987, 0.5782,  ..., 0.5040, 0.3190, 0.5749]],
        [[0.2500, 0.2443, 0.2477,  ..., 0.2500, 0.2432, 0.2320],
         [0.2500, 0.2671, 0.2568,  ..., 0.2500, 0.2704, 0.3041],
         [0.2500, 0.2443, 0.2477,  ..., 0.2500, 0.2432, 0.2320],
         [0.2500, 0.2443, 0.2477,  ..., 0.2500, 0.2432, 0.2320]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 676:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1616, 0.1642, 0.1422,  ..., 0.1406, 0.1740, 0.1474],
         [0.1616, 0.1642, 0.1422,  ..., 0.1467, 0.1740, 0.1474],
         [0.1616, 0.1642, 0.1422,  ..., 0.1406, 0.1740, 0.1474],
         [0.5152, 0.5075, 0.5735,  ..., 0.5722, 0.4781, 0.5578]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:16:51,425 [Process: 0] Synchronize training processes
2024-08-16 13:16:51,425 [Process: 0] Evaluating...
2024-08-16 13:16:51,427 [Process: 0] EPOCH 676:
2024-08-16 13:16:51,429 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:16:53,322 [Process: 0] Synchronize training processes
2024-08-16 13:16:53,323 [Process: 0] Evaluating...
2024-08-16 13:16:53,324 [Process: 0] EPOCH 677:
2024-08-16 13:16:53,327 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1089, 0.1341, 0.0696,  ..., 0.1696, 0.2300, 0.2042],
         [0.1089, 0.1498, 0.0696,  ..., 0.2104, 0.2223, 0.2266],
         [0.1089, 0.1341, 0.0696,  ..., 0.1696, 0.3254, 0.2042],
         [0.6733, 0.5821, 0.7912,  ..., 0.4503, 0.2223, 0.3651]],
        [[0.2452, 0.2500, 0.2503,  ..., 0.2416, 0.2500, 0.2332],
         [0.2644, 0.2500, 0.2831,  ..., 0.2753, 0.2500, 0.3005],
         [0.2452, 0.2500, 0.2333,  ..., 0.2416, 0.2500, 0.2332],
         [0.2452, 0.2500, 0.2333,  ..., 0.2416, 0.2500, 0.2332]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 677:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1788, 0.1245, 0.1400,  ..., 0.1406, 0.1291, 0.1373],
         [0.1788, 0.1245, 0.1400,  ..., 0.1406, 0.1291, 0.1373],
         [0.1788, 0.1245, 0.1400,  ..., 0.1406, 0.1291, 0.1373],
         [0.4637, 0.6264, 0.5800,  ..., 0.5782, 0.6127, 0.5882]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2499, 0.2471],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2503, 0.2587],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2499, 0.2471],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2499, 0.2471]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:16:55,201 [Process: 0] Synchronize training processes
2024-08-16 13:16:55,201 [Process: 0] Evaluating...
2024-08-16 13:16:55,203 [Process: 0] EPOCH 678:
2024-08-16 13:16:55,205 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1550, 0.1400, 0.1304,  ..., 0.1234, 0.3417, 0.1192],
         [0.1576, 0.1400, 0.1304,  ..., 0.1234, 0.1685, 0.1201],
         [0.1550, 0.1400, 0.1304,  ..., 0.1234, 0.2555, 0.1192],
         [0.5324, 0.5801, 0.6089,  ..., 0.6298, 0.2342, 0.6414]],
        [[0.2372, 0.2433, 0.2485,  ..., 0.2557, 0.2301, 0.2500],
         [0.2883, 0.2700, 0.2544,  ..., 0.2688, 0.3096, 0.2500],
         [0.2372, 0.2433, 0.2485,  ..., 0.2377, 0.2301, 0.2500],
         [0.2372, 0.2433, 0.2485,  ..., 0.2377, 0.2301, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 678:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1439, 0.1736, 0.1457,  ..., 0.1168, 0.1594, 0.1679],
         [0.1439, 0.1736, 0.1457,  ..., 0.1168, 0.1594, 0.1679],
         [0.1439, 0.1736, 0.1457,  ..., 0.1168, 0.1594, 0.1679],
         [0.5682, 0.4791, 0.5630,  ..., 0.6495, 0.5217, 0.4964]],
        [[0.2464, 0.2500, 0.2500,  ..., 0.2492, 0.2500, 0.2500],
         [0.2607, 0.2500, 0.2500,  ..., 0.2523, 0.2500, 0.2500],
         [0.2464, 0.2500, 0.2500,  ..., 0.2492, 0.2500, 0.2500],
         [0.2464, 0.2500, 0.2500,  ..., 0.2492, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:16:57,075 [Process: 0] Synchronize training processes
2024-08-16 13:16:57,075 [Process: 0] Evaluating...
2024-08-16 13:16:57,077 [Process: 0] EPOCH 679:
2024-08-16 13:16:57,079 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0909, 0.1367, 0.1369,  ..., 0.1668, 0.2668, 0.2021],
         [0.0909, 0.1419, 0.1369,  ..., 0.1668, 0.1787, 0.2021],
         [0.0909, 0.1367, 0.1369,  ..., 0.1668, 0.1787, 0.2021],
         [0.7273, 0.5846, 0.5892,  ..., 0.4997, 0.3759, 0.3936]],
        [[0.2487, 0.2419, 0.2356,  ..., 0.2601, 0.2500, 0.2500],
         [0.2539, 0.2742, 0.3122,  ..., 0.2466, 0.2500, 0.2500],
         [0.2487, 0.2419, 0.2261,  ..., 0.2466, 0.2500, 0.2500],
         [0.2487, 0.2419, 0.2261,  ..., 0.2466, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 679:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1379, 0.1396, 0.1244,  ..., 0.1598, 0.1627, 0.1288],
         [0.1379, 0.1396, 0.1244,  ..., 0.1598, 0.1627, 0.1288],
         [0.1379, 0.1396, 0.1244,  ..., 0.1598, 0.1627, 0.1288],
         [0.5864, 0.5811, 0.6269,  ..., 0.5206, 0.5119, 0.6135]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:16:58,952 [Process: 0] Synchronize training processes
2024-08-16 13:16:58,952 [Process: 0] Evaluating...
2024-08-16 13:16:58,954 [Process: 0] EPOCH 680:
2024-08-16 13:16:58,956 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1688, 0.1321, 0.1759,  ..., 0.1187, 0.2820, 0.1307],
         [0.1688, 0.1484, 0.1781,  ..., 0.1187, 0.2325, 0.1307],
         [0.1688, 0.1321, 0.1759,  ..., 0.1187, 0.2531, 0.1307],
         [0.4937, 0.5873, 0.4701,  ..., 0.6438, 0.2325, 0.6079]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2458, 0.2376],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2625, 0.2871],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2458, 0.2376],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2458, 0.2376]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 680:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1328, 0.1822, 0.1645,  ..., 0.1225, 0.1752, 0.1474],
         [0.1328, 0.1822, 0.1645,  ..., 0.1225, 0.1752, 0.1474],
         [0.1328, 0.1822, 0.1645,  ..., 0.1225, 0.1752, 0.1474],
         [0.6017, 0.4533, 0.5066,  ..., 0.6324, 0.4745, 0.5578]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:17:00,827 [Process: 0] Synchronize training processes
2024-08-16 13:17:00,827 [Process: 0] Evaluating...
2024-08-16 13:17:00,829 [Process: 0] EPOCH 681:
2024-08-16 13:17:00,831 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1337, 0.1530, 0.1089,  ..., 0.1118, 0.1900, 0.1398],
         [0.1398, 0.1705, 0.1266,  ..., 0.1180, 0.1900, 0.1398],
         [0.1337, 0.1530, 0.1089,  ..., 0.1118, 0.2607, 0.1398],
         [0.5928, 0.5235, 0.6557,  ..., 0.6584, 0.3593, 0.5805]],
        [[0.2500, 0.2500, 0.2321,  ..., 0.2500, 0.2750, 0.2500],
         [0.2500, 0.2500, 0.3037,  ..., 0.2500, 0.2300, 0.2500],
         [0.2500, 0.2500, 0.2321,  ..., 0.2500, 0.2651, 0.2500],
         [0.2500, 0.2500, 0.2321,  ..., 0.2500, 0.2300, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 681:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1725, 0.1717, 0.1572,  ..., 0.1223, 0.1635, 0.1412],
         [0.1725, 0.1717, 0.1572,  ..., 0.1223, 0.1635, 0.1412],
         [0.1725, 0.1717, 0.1572,  ..., 0.1223, 0.1635, 0.1412],
         [0.4824, 0.4850, 0.5284,  ..., 0.6330, 0.5094, 0.5763]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2483, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2551, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2483, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2483, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:17:02,712 [Process: 0] Synchronize training processes
2024-08-16 13:17:02,712 [Process: 0] Evaluating...
2024-08-16 13:17:02,714 [Process: 0] EPOCH 682:
2024-08-16 13:17:02,716 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1390, 0.1557, 0.1479,  ..., 0.1345, 0.2008, 0.1458],
         [0.1390, 0.1521, 0.1484,  ..., 0.1413, 0.2008, 0.1558],
         [0.1390, 0.1521, 0.1479,  ..., 0.1345, 0.2008, 0.1458],
         [0.5830, 0.5402, 0.5559,  ..., 0.5898, 0.3975, 0.5526]],
        [[0.2426, 0.2477, 0.2148,  ..., 0.2500, 0.2500, 0.3103],
         [0.2722, 0.2569, 0.3556,  ..., 0.2500, 0.2500, 0.2730],
         [0.2426, 0.2477, 0.2148,  ..., 0.2500, 0.2500, 0.2084],
         [0.2426, 0.2477, 0.2148,  ..., 0.2500, 0.2500, 0.2084]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 682:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1961, 0.1080, 0.1492,  ..., 0.1516, 0.1710, 0.1207],
         [0.1961, 0.1080, 0.1492,  ..., 0.1516, 0.1710, 0.1207],
         [0.1961, 0.1080, 0.1492,  ..., 0.1516, 0.1710, 0.1207],
         [0.4118, 0.6761, 0.5524,  ..., 0.5453, 0.4870, 0.6378]],
        [[0.2500, 0.2500, 0.2488,  ..., 0.2488, 0.2483, 0.2500],
         [0.2500, 0.2500, 0.2536,  ..., 0.2537, 0.2552, 0.2500],
         [0.2500, 0.2500, 0.2488,  ..., 0.2488, 0.2483, 0.2500],
         [0.2500, 0.2500, 0.2488,  ..., 0.2488, 0.2483, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:17:04,590 [Process: 0] Synchronize training processes
2024-08-16 13:17:04,591 [Process: 0] Evaluating...
2024-08-16 13:17:04,593 [Process: 0] EPOCH 683:
2024-08-16 13:17:04,595 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1202, 0.1449, 0.1381,  ..., 0.0967, 0.1581, 0.1415],
         [0.1202, 0.1449, 0.1381,  ..., 0.0967, 0.1581, 0.1665],
         [0.1202, 0.1449, 0.1381,  ..., 0.0967, 0.3389, 0.1415],
         [0.6394, 0.5654, 0.5856,  ..., 0.7100, 0.3450, 0.5504]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2346, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2530, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2834, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2290, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 683:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1492, 0.1119, 0.1203,  ..., 0.1536, 0.1725, 0.1421],
         [0.1492, 0.1121, 0.1203,  ..., 0.1536, 0.1725, 0.1421],
         [0.1492, 0.1119, 0.1203,  ..., 0.1536, 0.1725, 0.1421],
         [0.5525, 0.6642, 0.6392,  ..., 0.5392, 0.4824, 0.5738]],
        [[0.2499, 0.2484, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2502, 0.2549, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2499, 0.2484, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2499, 0.2484, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:17:06,491 [Process: 0] Synchronize training processes
2024-08-16 13:17:06,492 [Process: 0] Evaluating...
2024-08-16 13:17:06,493 [Process: 0] EPOCH 684:
2024-08-16 13:17:06,495 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1476, 0.1544, 0.1178,  ..., 0.1113, 0.2063, 0.1455],
         [0.1530, 0.1544, 0.1178,  ..., 0.1113, 0.2063, 0.1455],
         [0.1476, 0.1544, 0.1178,  ..., 0.1113, 0.3474, 0.1455],
         [0.5518, 0.5368, 0.6467,  ..., 0.6660, 0.2399, 0.5636]],
        [[0.2500, 0.2394, 0.2500,  ..., 0.2500, 0.2352, 0.2435],
         [0.2500, 0.2819, 0.2500,  ..., 0.2500, 0.2943, 0.2694],
         [0.2500, 0.2394, 0.2500,  ..., 0.2500, 0.2352, 0.2435],
         [0.2500, 0.2394, 0.2500,  ..., 0.2500, 0.2352, 0.2435]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 684:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1559, 0.1582, 0.1367,  ..., 0.1253, 0.1387, 0.1786],
         [0.1559, 0.1582, 0.1367,  ..., 0.1253, 0.1387, 0.1786],
         [0.1559, 0.1582, 0.1367,  ..., 0.1253, 0.1387, 0.1786],
         [0.5322, 0.5254, 0.5898,  ..., 0.6240, 0.5838, 0.4643]],
        [[0.2546, 0.2479, 0.2500,  ..., 0.2500, 0.2500, 0.2489],
         [0.2534, 0.2562, 0.2500,  ..., 0.2500, 0.2500, 0.2534],
         [0.2460, 0.2479, 0.2500,  ..., 0.2500, 0.2500, 0.2489],
         [0.2460, 0.2479, 0.2500,  ..., 0.2500, 0.2500, 0.2489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1744, 0.1191, 0.1369,  ..., 0.1597, 0.2281, 0.1375],
         [0.1744, 0.1225, 0.1369,  ..., 0.1729, 0.1451, 0.1375],
         [0.1744, 0.1191, 0.1369,  ..., 0.1597, 0.2593, 0.1375],
         [0.4767, 0.6392, 0.5894,  ..., 0.5078, 0.3675, 0.5876]],
        [[0.2035, 0.2499, 0.2454,  ..., 0.2500, 0.2806, 0.2500],
         [0.3276, 0.2504, 0.2638,  ..., 0.2500, 0.3301, 0.2500],
         [0.2653, 0.2499, 0.2454,  ..., 0.2500, 0.1946, 0.2500],
         [0.2035, 0.2499, 0.2454,  ..., 0.2500, 0.1946, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:17:08,370 [Process: 0] Synchronize training processes
2024-08-16 13:17:08,370 [Process: 0] Evaluating...
2024-08-16 13:17:08,372 [Process: 0] EPOCH 685:
2024-08-16 13:17:08,374 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 685:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1734, 0.1375, 0.1599,  ..., 0.1495, 0.1628, 0.1590],
         [0.1734, 0.1375, 0.1599,  ..., 0.1495, 0.1628, 0.1590],
         [0.1734, 0.1375, 0.1599,  ..., 0.1495, 0.1628, 0.1590],
         [0.4797, 0.5875, 0.5202,  ..., 0.5515, 0.5116, 0.5231]],
        [[0.2500, 0.2500, 0.2486,  ..., 0.2476, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2541,  ..., 0.2571, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2486,  ..., 0.2476, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2486,  ..., 0.2476, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1289, 0.1136, 0.1357,  ..., 0.1542, 0.1827, 0.1208],
         [0.1289, 0.1136, 0.1357,  ..., 0.1542, 0.1500, 0.1208],
         [0.1289, 0.1136, 0.1357,  ..., 0.1542, 0.1942, 0.1406],
         [0.6133, 0.6592, 0.5928,  ..., 0.5374, 0.4731, 0.6177]],
        [[0.2542, 0.2952, 0.2398,  ..., 0.2500, 0.2438, 0.3093],
         [0.2987, 0.2401, 0.2805,  ..., 0.2500, 0.2686, 0.2533],
         [0.2236, 0.2324, 0.2398,  ..., 0.2500, 0.2438, 0.2187],
         [0.2236, 0.2324, 0.2398,  ..., 0.2500, 0.2438, 0.2187]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 686:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:17:10,261 [Process: 0] Synchronize training processes
2024-08-16 13:17:10,262 [Process: 0] Evaluating...
2024-08-16 13:17:10,264 [Process: 0] EPOCH 686:
2024-08-16 13:17:10,266 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1599, 0.1602, 0.1311,  ..., 0.1590, 0.1709, 0.1772],
         [0.1599, 0.1602, 0.1311,  ..., 0.1590, 0.1709, 0.1772],
         [0.1599, 0.1602, 0.1311,  ..., 0.1590, 0.1709, 0.1772],
         [0.5204, 0.5193, 0.6068,  ..., 0.5229, 0.4873, 0.4683]],
        [[0.2492, 0.2500, 0.2500,  ..., 0.2463, 0.2500, 0.2500],
         [0.2524, 0.2500, 0.2500,  ..., 0.2612, 0.2500, 0.2500],
         [0.2492, 0.2500, 0.2500,  ..., 0.2463, 0.2500, 0.2500],
         [0.2492, 0.2500, 0.2500,  ..., 0.2463, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1348, 0.1123, 0.1262,  ..., 0.1231, 0.1719, 0.1383],
         [0.1348, 0.1123, 0.1262,  ..., 0.1231, 0.1295, 0.1517],
         [0.1348, 0.1123, 0.1262,  ..., 0.1231, 0.3269, 0.1383],
         [0.5957, 0.6631, 0.6215,  ..., 0.6308, 0.3717, 0.5716]],
        [[0.2654, 0.2500, 0.2500,  ..., 0.1842, 0.2500, 0.2500],
         [0.3181, 0.2500, 0.2500,  ..., 0.3281, 0.2500, 0.2500],
         [0.2083, 0.2500, 0.2500,  ..., 0.3035, 0.2500, 0.2500],
         [0.2083, 0.2500, 0.2500,  ..., 0.1842, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 687:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:17:12,217 [Process: 0] Synchronize training processes
2024-08-16 13:17:12,217 [Process: 0] Evaluating...
2024-08-16 13:17:12,219 [Process: 0] EPOCH 687:
2024-08-16 13:17:12,221 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1471, 0.1411, 0.1360,  ..., 0.1312, 0.1722, 0.1481],
         [0.1471, 0.1411, 0.1360,  ..., 0.1312, 0.1722, 0.1481],
         [0.1471, 0.1411, 0.1360,  ..., 0.1312, 0.1722, 0.1481],
         [0.5586, 0.5767, 0.5920,  ..., 0.6064, 0.4835, 0.5558]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2497],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2510],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2497],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2006, 0.1434, 0.1533,  ..., 0.1457, 0.1878, 0.1402],
         [0.1732, 0.1434, 0.1533,  ..., 0.1727, 0.1878, 0.1488],
         [0.1732, 0.1434, 0.1533,  ..., 0.1741, 0.1878, 0.1854],
         [0.4529, 0.5699, 0.5400,  ..., 0.5075, 0.4365, 0.5256]],
        [[0.2447, 0.3719, 0.2811,  ..., 0.2500, 0.2495, 0.2120],
         [0.2660, 0.2282, 0.3080,  ..., 0.2500, 0.2531, 0.2793],
         [0.2447, 0.2000, 0.2253,  ..., 0.2500, 0.2487, 0.2967],
         [0.2447, 0.2000, 0.1856,  ..., 0.2500, 0.2487, 0.2120]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 688:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:17:14,120 [Process: 0] Synchronize training processes
2024-08-16 13:17:14,121 [Process: 0] Evaluating...
2024-08-16 13:17:14,123 [Process: 0] EPOCH 688:
2024-08-16 13:17:14,125 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1542, 0.1483, 0.1546,  ..., 0.1528, 0.1263, 0.1474],
         [0.1542, 0.1483, 0.1546,  ..., 0.1528, 0.1263, 0.1474],
         [0.1542, 0.1483, 0.1546,  ..., 0.1528, 0.1263, 0.1474],
         [0.5374, 0.5550, 0.5361,  ..., 0.5415, 0.6210, 0.5578]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1696, 0.1342, 0.1157,  ..., 0.1262, 0.6211, 0.1070],
         [0.2070, 0.1342, 0.1157,  ..., 0.1243, 0.0701, 0.0950],
         [0.1696, 0.1342, 0.1157,  ..., 0.1243, 0.2967, 0.0950],
         [0.4537, 0.5974, 0.6529,  ..., 0.6252, 0.0121, 0.7029]],
        [[0.2500, 0.2500, 0.2222,  ..., 0.2326, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.3333,  ..., 0.3023, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2222,  ..., 0.2326, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2222,  ..., 0.2326, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 689:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:17:15,999 [Process: 0] Synchronize training processes
2024-08-16 13:17:16,000 [Process: 0] Evaluating...
2024-08-16 13:17:16,002 [Process: 0] EPOCH 689:
2024-08-16 13:17:16,003 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1778, 0.1662, 0.1259,  ..., 0.1750, 0.1357, 0.1437],
         [0.1778, 0.1662, 0.1259,  ..., 0.1750, 0.1357, 0.1437],
         [0.1778, 0.1662, 0.1259,  ..., 0.1750, 0.1357, 0.1437],
         [0.4665, 0.5013, 0.6224,  ..., 0.4751, 0.5929, 0.5690]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2497, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2508, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2497, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2497, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1463, 0.1514, 0.1247,  ..., 0.1457, 0.1786, 0.1104],
         [0.1548, 0.1570, 0.1247,  ..., 0.1618, 0.1715, 0.1286],
         [0.1463, 0.1514, 0.1247,  ..., 0.1457, 0.1715, 0.1104],
         [0.5526, 0.5401, 0.6258,  ..., 0.5468, 0.4783, 0.6505]],
        [[0.2360, 0.2500, 0.2500,  ..., 0.2407, 0.2503, 0.2500],
         [0.2678, 0.2500, 0.2500,  ..., 0.2779, 0.2499, 0.2500],
         [0.2875, 0.2500, 0.2500,  ..., 0.2407, 0.2499, 0.2500],
         [0.2087, 0.2500, 0.2500,  ..., 0.2407, 0.2499, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 690:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:17:17,877 [Process: 0] Synchronize training processes
2024-08-16 13:17:17,878 [Process: 0] Evaluating...
2024-08-16 13:17:17,880 [Process: 0] EPOCH 690:
2024-08-16 13:17:17,882 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1471, 0.1319, 0.1607,  ..., 0.1482, 0.1534, 0.1428],
         [0.1471, 0.1319, 0.1607,  ..., 0.1482, 0.1534, 0.1428],
         [0.1471, 0.1319, 0.1607,  ..., 0.1482, 0.1534, 0.1428],
         [0.5588, 0.6044, 0.5178,  ..., 0.5554, 0.5399, 0.5717]],
        [[0.2500, 0.2477, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2568, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2477, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2477, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1787, 0.1327, 0.1226,  ..., 0.1301, 0.1777, 0.1319],
         [0.1768, 0.1327, 0.1226,  ..., 0.1301, 0.2023, 0.1319],
         [0.1626, 0.1327, 0.1226,  ..., 0.1301, 0.1738, 0.1319],
         [0.4819, 0.6020, 0.6323,  ..., 0.6096, 0.4463, 0.6044]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2379, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2864, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2379, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2379, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 691:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:17:19,768 [Process: 0] Synchronize training processes
2024-08-16 13:17:19,768 [Process: 0] Evaluating...
2024-08-16 13:17:19,770 [Process: 0] EPOCH 691:
2024-08-16 13:17:19,772 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1228, 0.1456, 0.1934,  ..., 0.1657, 0.0961, 0.1513],
         [0.1228, 0.1456, 0.1934,  ..., 0.1657, 0.0961, 0.1513],
         [0.1228, 0.1456, 0.1934,  ..., 0.1657, 0.0961, 0.1513],
         [0.6317, 0.5631, 0.4198,  ..., 0.5029, 0.7116, 0.5462]],
        [[0.2500, 0.2500, 0.2498,  ..., 0.2500, 0.2492, 0.2500],
         [0.2500, 0.2500, 0.2507,  ..., 0.2500, 0.2524, 0.2500],
         [0.2500, 0.2500, 0.2498,  ..., 0.2500, 0.2492, 0.2500],
         [0.2500, 0.2500, 0.2498,  ..., 0.2500, 0.2492, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1024, 0.1720, 0.1432,  ..., 0.1443, 0.2927, 0.0965],
         [0.1109, 0.1712, 0.1579,  ..., 0.1545, 0.2209, 0.1037],
         [0.1024, 0.1565, 0.1432,  ..., 0.1607, 0.2209, 0.0965],
         [0.6844, 0.5002, 0.5557,  ..., 0.5405, 0.2654, 0.7034]],
        [[0.2364, 0.2638, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2907, 0.2454, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2364, 0.2454, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2364, 0.2454, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 692:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:17:21,652 [Process: 0] Synchronize training processes
2024-08-16 13:17:21,652 [Process: 0] Evaluating...
2024-08-16 13:17:21,654 [Process: 0] EPOCH 692:
2024-08-16 13:17:21,657 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2030, 0.1484, 0.1147,  ..., 0.1479, 0.1391, 0.1529],
         [0.2030, 0.1484, 0.1147,  ..., 0.1479, 0.1391, 0.1529],
         [0.2030, 0.1484, 0.1147,  ..., 0.1479, 0.1391, 0.1529],
         [0.3911, 0.5548, 0.6558,  ..., 0.5564, 0.5826, 0.5413]],
        [[0.2500, 0.2457, 0.2483,  ..., 0.2486, 0.2483, 0.2500],
         [0.2500, 0.2630, 0.2552,  ..., 0.2541, 0.2552, 0.2500],
         [0.2500, 0.2457, 0.2483,  ..., 0.2486, 0.2483, 0.2500],
         [0.2500, 0.2457, 0.2483,  ..., 0.2486, 0.2483, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0943, 0.1276, 0.1349,  ..., 0.1511, 0.2268, 0.1109],
         [0.1004, 0.1381, 0.1496,  ..., 0.1775, 0.2268, 0.1114],
         [0.0943, 0.1276, 0.1349,  ..., 0.1511, 0.2268, 0.1109],
         [0.7111, 0.6068, 0.5807,  ..., 0.5203, 0.3197, 0.6669]],
        [[0.2458, 0.2500, 0.2337,  ..., 0.2500, 0.2500, 0.2416],
         [0.2458, 0.2500, 0.2939,  ..., 0.2500, 0.2500, 0.2752],
         [0.2626, 0.2500, 0.2388,  ..., 0.2500, 0.2500, 0.2416],
         [0.2458, 0.2500, 0.2337,  ..., 0.2500, 0.2500, 0.2416]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 693:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1412, 0.1496, 0.1230,  ..., 0.1625, 0.1734, 0.1468],
         [0.1459, 0.1507, 0.1230,  ..., 0.1625, 0.1734, 0.1468],
         [0.1412, 0.1496, 0.1230,  ..., 0.1625, 0.1734, 0.1468],
         [0.5717, 0.5501, 0.6309,  ..., 0.5126, 0.4797, 0.5595]],
        [[0.2498, 0.2500, 0.2500,  ..., 0.2470, 0.2484, 0.2475],
         [0.2506, 0.2500, 0.2500,  ..., 0.2590, 0.2549, 0.2574],
         [0.2498, 0.2500, 0.2500,  ..., 0.2470, 0.2484, 0.2475],
         [0.2498, 0.2500, 0.2500,  ..., 0.2470, 0.2484, 0.2475]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:17:23,530 [Process: 0] Synchronize training processes
2024-08-16 13:17:23,530 [Process: 0] Evaluating...
2024-08-16 13:17:23,532 [Process: 0] EPOCH 693:
2024-08-16 13:17:23,534 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:17:25,423 [Process: 0] Synchronize training processes
2024-08-16 13:17:25,424 [Process: 0] Evaluating...
2024-08-16 13:17:25,425 [Process: 0] EPOCH 694:
2024-08-16 13:17:25,427 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1485, 0.1172, 0.1695,  ..., 0.0925, 0.1662, 0.1256],
         [0.1485, 0.1296, 0.1695,  ..., 0.0925, 0.1662, 0.1260],
         [0.1485, 0.1113, 0.1695,  ..., 0.0925, 0.3056, 0.1256],
         [0.5546, 0.6419, 0.4915,  ..., 0.7226, 0.3621, 0.6227]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2445, 0.2343],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2665, 0.2972],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2445, 0.2343],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2445, 0.2343]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 694:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1598, 0.1720, 0.1849,  ..., 0.1085, 0.1383, 0.1736],
         [0.1598, 0.1720, 0.1849,  ..., 0.1085, 0.1383, 0.1736],
         [0.1598, 0.1720, 0.1849,  ..., 0.1085, 0.1383, 0.1736],
         [0.5207, 0.4841, 0.4454,  ..., 0.6745, 0.5850, 0.4791]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:17:27,359 [Process: 0] Synchronize training processes
2024-08-16 13:17:27,359 [Process: 0] Evaluating...
2024-08-16 13:17:27,361 [Process: 0] EPOCH 695:
2024-08-16 13:17:27,363 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1575, 0.1237, 0.1162,  ..., 0.1465, 0.1991, 0.1750],
         [0.1575, 0.1237, 0.1162,  ..., 0.1465, 0.1991, 0.1454],
         [0.1575, 0.1237, 0.1162,  ..., 0.1465, 0.1991, 0.1702],
         [0.5276, 0.6290, 0.6513,  ..., 0.5605, 0.4027, 0.5094]],
        [[0.2320, 0.2500, 0.2500,  ..., 0.2457, 0.2494, 0.2809],
         [0.2751, 0.2500, 0.2500,  ..., 0.2457, 0.2494, 0.2463],
         [0.2609, 0.2500, 0.2500,  ..., 0.2629, 0.2519, 0.2364],
         [0.2320, 0.2500, 0.2500,  ..., 0.2457, 0.2494, 0.2364]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 695:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1507, 0.1719, 0.1464,  ..., 0.1844, 0.1309, 0.1374],
         [0.1507, 0.1719, 0.1464,  ..., 0.1844, 0.1309, 0.1374],
         [0.1507, 0.1719, 0.1464,  ..., 0.1844, 0.1309, 0.1374],
         [0.5480, 0.4842, 0.5608,  ..., 0.4469, 0.6072, 0.5878]],
        [[0.2500, 0.2475, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2574, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2475, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2475, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:17:29,272 [Process: 0] Synchronize training processes
2024-08-16 13:17:29,272 [Process: 0] Evaluating...
2024-08-16 13:17:29,274 [Process: 0] EPOCH 696:
2024-08-16 13:17:29,276 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2001, 0.1433, 0.1377,  ..., 0.1819, 0.1233, 0.1431],
         [0.1775, 0.1344, 0.1331,  ..., 0.1819, 0.0844, 0.1431],
         [0.1775, 0.1344, 0.1321,  ..., 0.1819, 0.7041, 0.1431],
         [0.4450, 0.5879, 0.5971,  ..., 0.4544, 0.0881, 0.5708]],
        [[0.2362, 0.2500, 0.2437,  ..., 0.2439, 0.2102, 0.2861],
         [0.2914, 0.2500, 0.2690,  ..., 0.2682, 0.3047, 0.3200],
         [0.2362, 0.2500, 0.2437,  ..., 0.2439, 0.2749, 0.2118],
         [0.2362, 0.2500, 0.2437,  ..., 0.2439, 0.2102, 0.1821]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 696:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1233, 0.1652, 0.1583,  ..., 0.2022, 0.1565, 0.1688],
         [0.1252, 0.1652, 0.1583,  ..., 0.2022, 0.1565, 0.1688],
         [0.1233, 0.1652, 0.1583,  ..., 0.2022, 0.1565, 0.1688],
         [0.6281, 0.5044, 0.5252,  ..., 0.3935, 0.5305, 0.4935]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:17:31,166 [Process: 0] Synchronize training processes
2024-08-16 13:17:31,166 [Process: 0] Evaluating...
2024-08-16 13:17:31,168 [Process: 0] EPOCH 697:
2024-08-16 13:17:31,170 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1680, 0.1414, 0.1545,  ..., 0.1236, 0.1731, 0.1109],
         [0.1680, 0.1414, 0.1545,  ..., 0.1236, 0.1655, 0.1109],
         [0.1680, 0.1414, 0.1545,  ..., 0.1236, 0.4729, 0.1109],
         [0.4961, 0.5758, 0.5365,  ..., 0.6292, 0.1886, 0.6672]],
        [[0.2783, 0.2500, 0.2206,  ..., 0.2500, 0.2500, 0.2522],
         [0.2406, 0.2500, 0.2206,  ..., 0.2500, 0.2500, 0.3386],
         [0.2406, 0.2500, 0.3383,  ..., 0.2500, 0.2500, 0.2046],
         [0.2406, 0.2500, 0.2206,  ..., 0.2500, 0.2500, 0.2046]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 697:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1251, 0.1295, 0.1247,  ..., 0.1858, 0.1536, 0.1618],
         [0.1251, 0.1295, 0.1247,  ..., 0.1858, 0.1556, 0.1618],
         [0.1251, 0.1295, 0.1247,  ..., 0.1858, 0.1536, 0.1618],
         [0.6248, 0.6115, 0.6258,  ..., 0.4425, 0.5372, 0.5145]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2496, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2512, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2496, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2496, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:17:33,044 [Process: 0] Synchronize training processes
2024-08-16 13:17:33,045 [Process: 0] Evaluating...
2024-08-16 13:17:33,047 [Process: 0] EPOCH 698:
2024-08-16 13:17:33,049 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1017, 0.1273, 0.0793,  ..., 0.1091, 0.1510, 0.1406],
         [0.1032, 0.1273, 0.0793,  ..., 0.1091, 0.1510, 0.1406],
         [0.1013, 0.1273, 0.0793,  ..., 0.1091, 0.5469, 0.1406],
         [0.6938, 0.6181, 0.7622,  ..., 0.6728, 0.1510, 0.5781]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2413, 0.2500, 0.2204],
         [0.2500, 0.2500, 0.2500,  ..., 0.2762, 0.2500, 0.3388],
         [0.2500, 0.2500, 0.2500,  ..., 0.2413, 0.2500, 0.2204],
         [0.2500, 0.2500, 0.2500,  ..., 0.2413, 0.2500, 0.2204]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 698:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1636, 0.1006, 0.1618,  ..., 0.1312, 0.1755, 0.1450],
         [0.1636, 0.1006, 0.1618,  ..., 0.1312, 0.1755, 0.1456],
         [0.1636, 0.1006, 0.1618,  ..., 0.1312, 0.1755, 0.1450],
         [0.5092, 0.6981, 0.5146,  ..., 0.6065, 0.4734, 0.5645]],
        [[0.2500, 0.2500, 0.2487,  ..., 0.2481, 0.2500, 0.2499],
         [0.2500, 0.2500, 0.2539,  ..., 0.2558, 0.2500, 0.2503],
         [0.2500, 0.2500, 0.2487,  ..., 0.2481, 0.2500, 0.2499],
         [0.2500, 0.2500, 0.2487,  ..., 0.2481, 0.2500, 0.2499]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:17:34,949 [Process: 0] Synchronize training processes
2024-08-16 13:17:34,950 [Process: 0] Evaluating...
2024-08-16 13:17:34,952 [Process: 0] EPOCH 699:
2024-08-16 13:17:34,954 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0757, 0.1264, 0.1105,  ..., 0.1435, 0.1254, 0.1274],
         [0.0757, 0.1264, 0.1105,  ..., 0.1497, 0.1074, 0.1274],
         [0.0757, 0.1264, 0.1105,  ..., 0.1423, 0.6598, 0.1274],
         [0.7729, 0.6208, 0.6686,  ..., 0.5645, 0.1074, 0.6178]],
        [[0.2500, 0.2415, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2754, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2415, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2415, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 699:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1593, 0.1733, 0.1535,  ..., 0.1436, 0.1395, 0.1250],
         [0.1593, 0.1733, 0.1535,  ..., 0.1436, 0.1395, 0.1250],
         [0.1593, 0.1733, 0.1535,  ..., 0.1436, 0.1395, 0.1250],
         [0.5221, 0.4802, 0.5395,  ..., 0.5692, 0.5815, 0.6250]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2486, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2541, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2486, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2486, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:17:36,826 [Process: 0] Synchronize training processes
2024-08-16 13:17:36,826 [Process: 0] Evaluating...
2024-08-16 13:17:36,828 [Process: 0] EPOCH 700:
2024-08-16 13:17:36,830 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1319, 0.1350, 0.1106,  ..., 0.1350, 0.4102, 0.1273],
         [0.1619, 0.1350, 0.1241,  ..., 0.1350, 0.0363, 0.1248],
         [0.1337, 0.1350, 0.1106,  ..., 0.1350, 0.5253, 0.1248],
         [0.5725, 0.5949, 0.6547,  ..., 0.5951, 0.0282, 0.6232]],
        [[0.2500, 0.2500, 0.2381,  ..., 0.2480, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2991,  ..., 0.2560, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2314,  ..., 0.2480, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2314,  ..., 0.2480, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 700:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1342, 0.1408, 0.1582,  ..., 0.1150, 0.1438, 0.1408],
         [0.1342, 0.1408, 0.1650,  ..., 0.1150, 0.1442, 0.1408],
         [0.1342, 0.1408, 0.1582,  ..., 0.1150, 0.1438, 0.1408],
         [0.5975, 0.5775, 0.5185,  ..., 0.6551, 0.5681, 0.5777]],
        [[0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2561, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:17:38,712 [Process: 0] Synchronize training processes
2024-08-16 13:17:38,712 [Process: 0] Evaluating...
2024-08-16 13:17:38,714 [Process: 0] EPOCH 701:
2024-08-16 13:17:38,716 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1547, 0.1904, 0.1370,  ..., 0.1641, 0.5610, 0.1222],
         [0.1634, 0.1490, 0.1370,  ..., 0.1641, 0.0825, 0.1222],
         [0.1547, 0.1573, 0.1370,  ..., 0.1641, 0.2773, 0.1222],
         [0.5273, 0.5034, 0.5890,  ..., 0.5077, 0.0792, 0.6334]],
        [[0.2549, 0.2350, 0.2462,  ..., 0.2261, 0.2500, 0.2539],
         [0.2484, 0.2951, 0.2613,  ..., 0.3218, 0.2500, 0.3033],
         [0.2484, 0.2350, 0.2462,  ..., 0.2261, 0.2500, 0.2214],
         [0.2484, 0.2350, 0.2462,  ..., 0.2261, 0.2500, 0.2214]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 701:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1328, 0.1115, 0.1470,  ..., 0.1332, 0.1525, 0.1523],
         [0.1328, 0.1131, 0.1470,  ..., 0.1332, 0.1525, 0.1523],
         [0.1328, 0.1115, 0.1470,  ..., 0.1332, 0.1525, 0.1523],
         [0.6016, 0.6638, 0.5589,  ..., 0.6003, 0.5426, 0.5431]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2496, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2513, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2496, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2496, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:17:40,601 [Process: 0] Synchronize training processes
2024-08-16 13:17:40,601 [Process: 0] Evaluating...
2024-08-16 13:17:40,603 [Process: 0] EPOCH 702:
2024-08-16 13:17:40,605 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1384, 0.1157, 0.1785,  ..., 0.1576, 0.2443, 0.1193],
         [0.1384, 0.1333, 0.1785,  ..., 0.1815, 0.0585, 0.1194],
         [0.1384, 0.1157, 0.1785,  ..., 0.1576, 0.6595, 0.1193],
         [0.5848, 0.6353, 0.4646,  ..., 0.5032, 0.0378, 0.6420]],
        [[0.2500, 0.2373, 0.2500,  ..., 0.2768, 0.2391, 0.2484],
         [0.2500, 0.2940, 0.2500,  ..., 0.2664, 0.2828, 0.2548],
         [0.2500, 0.2344, 0.2500,  ..., 0.2284, 0.2391, 0.2484],
         [0.2500, 0.2344, 0.2500,  ..., 0.2284, 0.2391, 0.2484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 702:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1579, 0.1434, 0.1531,  ..., 0.1323, 0.1450, 0.1321],
         [0.1579, 0.1464, 0.1615,  ..., 0.1323, 0.1531, 0.1321],
         [0.1579, 0.1434, 0.1531,  ..., 0.1323, 0.1450, 0.1321],
         [0.5262, 0.5669, 0.5324,  ..., 0.6030, 0.5569, 0.6038]],
        [[0.2491, 0.2472, 0.2468,  ..., 0.2500, 0.2453, 0.2500],
         [0.2526, 0.2583, 0.2596,  ..., 0.2500, 0.2642, 0.2500],
         [0.2491, 0.2472, 0.2468,  ..., 0.2500, 0.2453, 0.2500],
         [0.2491, 0.2472, 0.2468,  ..., 0.2500, 0.2453, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1348, 0.1224, 0.1478,  ..., 0.1194, 0.1387, 0.1489],
         [0.1348, 0.1224, 0.1478,  ..., 0.1194, 0.1387, 0.1563],
         [0.1348, 0.1224, 0.1478,  ..., 0.1194, 0.1387, 0.1489],
         [0.5955, 0.6327, 0.5567,  ..., 0.6419, 0.5838, 0.5459]],
        [[0.2500, 0.2350, 0.2500,  ..., 0.2493, 0.2446, 0.2500],
         [0.2500, 0.2950, 0.2500,  ..., 0.2521, 0.2462, 0.2500],
         [0.2500, 0.2350, 0.2500,  ..., 0.2493, 0.2646, 0.2500],
         [0.2500, 0.2350, 0.2500,  ..., 0.2493, 0.2446, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:17:42,477 [Process: 0] Synchronize training processes
2024-08-16 13:17:42,478 [Process: 0] Evaluating...
2024-08-16 13:17:42,480 [Process: 0] EPOCH 703:
2024-08-16 13:17:42,482 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 703:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1487, 0.1495, 0.1838,  ..., 0.1185, 0.1549, 0.1352],
         [0.1487, 0.1495, 0.1838,  ..., 0.1185, 0.1549, 0.1352],
         [0.1487, 0.1495, 0.1838,  ..., 0.1185, 0.1549, 0.1352],
         [0.5539, 0.5516, 0.4487,  ..., 0.6445, 0.5353, 0.5945]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0988, 0.1210, 0.1118,  ..., 0.1484, 0.1850, 0.1193],
         [0.0988, 0.1237, 0.1118,  ..., 0.1484, 0.1850, 0.1193],
         [0.0988, 0.1210, 0.1118,  ..., 0.1484, 0.1850, 0.1193],
         [0.7036, 0.6343, 0.6647,  ..., 0.5549, 0.4451, 0.6421]],
        [[0.2500, 0.2550, 0.2500,  ..., 0.2500, 0.2448, 0.2409],
         [0.2500, 0.2483, 0.2500,  ..., 0.2500, 0.2655, 0.2772],
         [0.2500, 0.2483, 0.2500,  ..., 0.2500, 0.2448, 0.2409],
         [0.2500, 0.2483, 0.2500,  ..., 0.2500, 0.2448, 0.2409]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 704:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:17:44,367 [Process: 0] Synchronize training processes
2024-08-16 13:17:44,367 [Process: 0] Evaluating...
2024-08-16 13:17:44,369 [Process: 0] EPOCH 704:
2024-08-16 13:17:44,371 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1379, 0.1679, 0.1526,  ..., 0.1926, 0.1982, 0.1454],
         [0.1379, 0.1679, 0.1526,  ..., 0.1926, 0.1982, 0.1454],
         [0.1379, 0.1679, 0.1526,  ..., 0.1926, 0.1982, 0.1454],
         [0.5862, 0.4962, 0.5423,  ..., 0.4221, 0.4053, 0.5637]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1341, 0.1618, 0.1212,  ..., 0.1225, 0.2321, 0.1464],
         [0.1341, 0.1618, 0.1212,  ..., 0.1225, 0.1840, 0.1554],
         [0.1341, 0.1618, 0.1212,  ..., 0.1225, 0.2840, 0.1464],
         [0.5978, 0.5145, 0.6365,  ..., 0.6325, 0.2999, 0.5518]],
        [[0.2328, 0.2500, 0.2484,  ..., 0.2500, 0.2177, 0.2500],
         [0.2978, 0.2500, 0.2549,  ..., 0.2500, 0.2934, 0.2500],
         [0.2365, 0.2500, 0.2484,  ..., 0.2500, 0.2712, 0.2500],
         [0.2328, 0.2500, 0.2484,  ..., 0.2500, 0.2177, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 705:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:17:46,250 [Process: 0] Synchronize training processes
2024-08-16 13:17:46,250 [Process: 0] Evaluating...
2024-08-16 13:17:46,252 [Process: 0] EPOCH 705:
2024-08-16 13:17:46,254 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1179, 0.1599, 0.1677,  ..., 0.1600, 0.1727, 0.1790],
         [0.1179, 0.1599, 0.1677,  ..., 0.1600, 0.1727, 0.1790],
         [0.1179, 0.1599, 0.1677,  ..., 0.1600, 0.1727, 0.1790],
         [0.6463, 0.5204, 0.4970,  ..., 0.5199, 0.4818, 0.4629]],
        [[0.2500, 0.2500, 0.2475,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2575,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2475,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2475,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1588, 0.1707, 0.1209,  ..., 0.1764, 0.1801, 0.1558],
         [0.1648, 0.1707, 0.1324,  ..., 0.1764, 0.1801, 0.1581],
         [0.1588, 0.1707, 0.1209,  ..., 0.1764, 0.1801, 0.1558],
         [0.5177, 0.4878, 0.6258,  ..., 0.4708, 0.4597, 0.5303]],
        [[0.2485, 0.2500, 0.2500,  ..., 0.2179, 0.2500, 0.2464],
         [0.2546, 0.2500, 0.2500,  ..., 0.2351, 0.2500, 0.2506],
         [0.2485, 0.2500, 0.2500,  ..., 0.3291, 0.2500, 0.2677],
         [0.2485, 0.2500, 0.2500,  ..., 0.2179, 0.2500, 0.2353]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 706:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:17:48,142 [Process: 0] Synchronize training processes
2024-08-16 13:17:48,142 [Process: 0] Evaluating...
2024-08-16 13:17:48,144 [Process: 0] EPOCH 706:
2024-08-16 13:17:48,146 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1766, 0.1182, 0.1270,  ..., 0.0780, 0.1144, 0.1740],
         [0.1776, 0.1182, 0.1270,  ..., 0.0780, 0.1144, 0.1740],
         [0.1766, 0.1182, 0.1270,  ..., 0.0780, 0.1144, 0.1740],
         [0.4693, 0.6455, 0.6190,  ..., 0.7661, 0.6569, 0.4779]],
        [[0.2489, 0.2489, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2534, 0.2534, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2489, 0.2489, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2489, 0.2489, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1522, 0.1094, 0.1514,  ..., 0.0837, 0.1545, 0.1539],
         [0.1532, 0.1094, 0.1475,  ..., 0.0847, 0.1545, 0.1539],
         [0.1522, 0.1094, 0.1418,  ..., 0.0837, 0.1545, 0.1539],
         [0.5425, 0.6717, 0.5593,  ..., 0.7480, 0.5364, 0.5384]],
        [[0.2500, 0.2305, 0.2707,  ..., 0.2500, 0.2500, 0.2387],
         [0.2500, 0.2325, 0.2536,  ..., 0.2500, 0.2500, 0.3219],
         [0.2500, 0.3257, 0.2378,  ..., 0.2500, 0.2500, 0.2197],
         [0.2500, 0.2113, 0.2378,  ..., 0.2500, 0.2500, 0.2197]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 707:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:17:50,015 [Process: 0] Synchronize training processes
2024-08-16 13:17:50,016 [Process: 0] Evaluating...
2024-08-16 13:17:50,018 [Process: 0] EPOCH 707:
2024-08-16 13:17:50,020 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1421, 0.1206, 0.1558,  ..., 0.1286, 0.1567, 0.1587],
         [0.1421, 0.1206, 0.1558,  ..., 0.1286, 0.1631, 0.1587],
         [0.1421, 0.1206, 0.1558,  ..., 0.1286, 0.1567, 0.1587],
         [0.5736, 0.6382, 0.5327,  ..., 0.6142, 0.5236, 0.5238]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2475, 0.2498, 0.2482],
         [0.2500, 0.2500, 0.2500,  ..., 0.2574, 0.2507, 0.2553],
         [0.2500, 0.2500, 0.2500,  ..., 0.2475, 0.2498, 0.2482],
         [0.2500, 0.2500, 0.2500,  ..., 0.2475, 0.2498, 0.2482]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1439, 0.1300, 0.1012,  ..., 0.0867, 0.1691, 0.1400],
         [0.1544, 0.1300, 0.1012,  ..., 0.0888, 0.1691, 0.1400],
         [0.1439, 0.1300, 0.1012,  ..., 0.0867, 0.1691, 0.1400],
         [0.5578, 0.6101, 0.6965,  ..., 0.7378, 0.4926, 0.5801]],
        [[0.2328, 0.2215, 0.2636,  ..., 0.2746, 0.2500, 0.2509],
         [0.3017, 0.2722, 0.2660,  ..., 0.2418, 0.2500, 0.2623],
         [0.2328, 0.2925, 0.2352,  ..., 0.2418, 0.2500, 0.2434],
         [0.2328, 0.2138, 0.2352,  ..., 0.2418, 0.2500, 0.2434]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 708:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:17:51,908 [Process: 0] Synchronize training processes
2024-08-16 13:17:51,909 [Process: 0] Evaluating...
2024-08-16 13:17:51,911 [Process: 0] EPOCH 708:
2024-08-16 13:17:51,912 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1240, 0.1422, 0.1210,  ..., 0.1557, 0.1342, 0.1293],
         [0.1240, 0.1422, 0.1210,  ..., 0.1557, 0.1342, 0.1293],
         [0.1240, 0.1422, 0.1210,  ..., 0.1557, 0.1342, 0.1293],
         [0.6279, 0.5735, 0.6370,  ..., 0.5328, 0.5973, 0.6121]],
        [[0.2475, 0.2500, 0.2500,  ..., 0.2500, 0.2478, 0.2500],
         [0.2574, 0.2500, 0.2500,  ..., 0.2500, 0.2565, 0.2500],
         [0.2475, 0.2500, 0.2500,  ..., 0.2500, 0.2478, 0.2500],
         [0.2475, 0.2500, 0.2500,  ..., 0.2500, 0.2478, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0988, 0.1761, 0.1046,  ..., 0.1126, 0.3049, 0.1528],
         [0.0988, 0.1585, 0.1046,  ..., 0.1126, 0.1444, 0.1641],
         [0.0988, 0.1585, 0.1046,  ..., 0.1126, 0.4063, 0.1528],
         [0.7037, 0.5069, 0.6861,  ..., 0.6622, 0.1444, 0.5303]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2477],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2569],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2477],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2477]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 709:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:17:53,795 [Process: 0] Synchronize training processes
2024-08-16 13:17:53,796 [Process: 0] Evaluating...
2024-08-16 13:17:53,798 [Process: 0] EPOCH 709:
2024-08-16 13:17:53,799 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1582, 0.1542, 0.1356,  ..., 0.1370, 0.1719, 0.0834],
         [0.1582, 0.1542, 0.1356,  ..., 0.1370, 0.1719, 0.0834],
         [0.1582, 0.1542, 0.1356,  ..., 0.1370, 0.1719, 0.0834],
         [0.5253, 0.5374, 0.5931,  ..., 0.5889, 0.4842, 0.7497]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1529, 0.1300, 0.1249,  ..., 0.1636, 0.2211, 0.1210],
         [0.1529, 0.1300, 0.1323,  ..., 0.1636, 0.1275, 0.1226],
         [0.1529, 0.1300, 0.1249,  ..., 0.1636, 0.5690, 0.1210],
         [0.5414, 0.6099, 0.6179,  ..., 0.5091, 0.0825, 0.6354]],
        [[0.2478, 0.2500, 0.2500,  ..., 0.2417, 0.2495, 0.2592],
         [0.2565, 0.2500, 0.2500,  ..., 0.2748, 0.2515, 0.2502],
         [0.2478, 0.2500, 0.2500,  ..., 0.2417, 0.2495, 0.2453],
         [0.2478, 0.2500, 0.2500,  ..., 0.2417, 0.2495, 0.2453]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 710:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:17:55,678 [Process: 0] Synchronize training processes
2024-08-16 13:17:55,678 [Process: 0] Evaluating...
2024-08-16 13:17:55,680 [Process: 0] EPOCH 710:
2024-08-16 13:17:55,682 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1478, 0.1338, 0.1283,  ..., 0.1488, 0.1412, 0.1450],
         [0.1478, 0.1338, 0.1283,  ..., 0.1488, 0.1412, 0.1450],
         [0.1478, 0.1338, 0.1283,  ..., 0.1488, 0.1412, 0.1450],
         [0.5565, 0.5987, 0.6151,  ..., 0.5537, 0.5765, 0.5650]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1762, 0.1623, 0.1527,  ..., 0.1353, 0.1481, 0.1592],
         [0.1762, 0.1623, 0.1527,  ..., 0.1353, 0.1481, 0.1592],
         [0.1762, 0.1623, 0.1527,  ..., 0.1353, 0.1481, 0.1592],
         [0.4715, 0.5131, 0.5420,  ..., 0.5940, 0.5556, 0.5223]],
        [[0.2521, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2444],
         [0.2493, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2525],
         [0.2493, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2587],
         [0.2493, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2444]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 711:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-16 13:17:57,790 [Process: 0] Synchronize training processes
2024-08-16 13:17:57,791 [Process: 0] Evaluating...
2024-08-16 13:17:57,793 [Process: 0] EPOCH 711:
2024-08-16 13:17:57,795 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1140, 0.1335, 0.1799,  ..., 0.1949, 0.1620, 0.1797],
         [0.1140, 0.1335, 0.1799,  ..., 0.1949, 0.1630, 0.1797],
         [0.1140, 0.1335, 0.1799,  ..., 0.1949, 0.1620, 0.1797],
         [0.6581, 0.5996, 0.4603,  ..., 0.4154, 0.5130, 0.4610]],
        [[0.2500, 0.2446, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2661, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2446, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2446, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1201, 0.1550, 0.1128,  ..., 0.1571, 0.1279, 0.1233],
         [0.1201, 0.1550, 0.1128,  ..., 0.1557, 0.1279, 0.1300],
         [0.1201, 0.1550, 0.1128,  ..., 0.1557, 0.1279, 0.1346],
         [0.6397, 0.5351, 0.6617,  ..., 0.5315, 0.6164, 0.6121]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2642, 0.2500],
         [0.2501, 0.2500, 0.2500,  ..., 0.2500, 0.2309, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2739, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2309, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 712:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1774, 0.1421, 0.1445,  ..., 0.1648, 0.1724, 0.1201],
         [0.1774, 0.1421, 0.1445,  ..., 0.1648, 0.1724, 0.1201],
         [0.1774, 0.1421, 0.1445,  ..., 0.1648, 0.1724, 0.1201],
         [0.4677, 0.5738, 0.5665,  ..., 0.5057, 0.4829, 0.6398]],
        [[0.2471, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2586, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2471, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2471, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:17:59,680 [Process: 0] Synchronize training processes
2024-08-16 13:17:59,681 [Process: 0] Evaluating...
2024-08-16 13:17:59,682 [Process: 0] EPOCH 712:
2024-08-16 13:17:59,684 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1262, 0.1425, 0.1893,  ..., 0.1033, 0.1593, 0.1471],
         [0.1395, 0.1425, 0.1893,  ..., 0.1033, 0.1593, 0.1471],
         [0.1262, 0.1425, 0.1893,  ..., 0.1033, 0.1593, 0.1471],
         [0.6081, 0.5725, 0.4320,  ..., 0.6900, 0.5220, 0.5588]],
        [[0.2500, 0.2500, 0.2439,  ..., 0.2500, 0.2451, 0.2389],
         [0.2500, 0.2500, 0.2486,  ..., 0.2500, 0.2746, 0.2833],
         [0.2500, 0.2500, 0.2635,  ..., 0.2500, 0.2404, 0.2389],
         [0.2500, 0.2500, 0.2439,  ..., 0.2500, 0.2399, 0.2389]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 713:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1444, 0.1927, 0.1520,  ..., 0.1308, 0.1326, 0.1410],
         [0.1444, 0.1927, 0.1520,  ..., 0.1308, 0.1350, 0.1410],
         [0.1444, 0.1927, 0.1520,  ..., 0.1308, 0.1326, 0.1410],
         [0.5667, 0.4219, 0.5440,  ..., 0.6076, 0.5998, 0.5771]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2466, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2602, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2466, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2466, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:01,563 [Process: 0] Synchronize training processes
2024-08-16 13:18:01,563 [Process: 0] Evaluating...
2024-08-16 13:18:01,565 [Process: 0] EPOCH 713:
2024-08-16 13:18:01,567 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:18:03,439 [Process: 0] Synchronize training processes
2024-08-16 13:18:03,439 [Process: 0] Evaluating...
2024-08-16 13:18:03,441 [Process: 0] EPOCH 714:
2024-08-16 13:18:03,444 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1531, 0.1329, 0.1431,  ..., 0.1488, 0.1369, 0.1518],
         [0.1587, 0.1329, 0.1431,  ..., 0.1488, 0.1369, 0.1540],
         [0.1334, 0.1329, 0.1431,  ..., 0.1488, 0.1487, 0.1518],
         [0.5549, 0.6013, 0.5708,  ..., 0.5536, 0.5775, 0.5423]],
        [[0.3118, 0.2661, 0.2500,  ..., 0.2500, 0.2479, 0.2583],
         [0.2537, 0.2603, 0.2500,  ..., 0.2500, 0.2618, 0.2472],
         [0.2173, 0.2568, 0.2500,  ..., 0.2500, 0.2451, 0.2472],
         [0.2173, 0.2169, 0.2500,  ..., 0.2500, 0.2451, 0.2472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 714:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1720, 0.1488, 0.1239,  ..., 0.1321, 0.1577, 0.1548],
         [0.1720, 0.1488, 0.1239,  ..., 0.1321, 0.1577, 0.1548],
         [0.1720, 0.1488, 0.1239,  ..., 0.1321, 0.1577, 0.1548],
         [0.4841, 0.5535, 0.6282,  ..., 0.6037, 0.5269, 0.5355]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:05,333 [Process: 0] Synchronize training processes
2024-08-16 13:18:05,333 [Process: 0] Evaluating...
2024-08-16 13:18:05,335 [Process: 0] EPOCH 715:
2024-08-16 13:18:05,337 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1321, 0.1176, 0.1350,  ..., 0.1573, 0.1713, 0.1596],
         [0.1321, 0.1176, 0.1439,  ..., 0.1573, 0.1514, 0.1596],
         [0.1321, 0.1176, 0.1657,  ..., 0.1573, 0.3111, 0.1596],
         [0.6037, 0.6473, 0.5554,  ..., 0.5281, 0.3662, 0.5212]],
        [[0.2550, 0.2392, 0.2491,  ..., 0.2326, 0.2401, 0.2500],
         [0.2740, 0.2824, 0.2491,  ..., 0.3023, 0.2798, 0.2500],
         [0.2355, 0.2392, 0.2526,  ..., 0.2326, 0.2401, 0.2500],
         [0.2355, 0.2392, 0.2491,  ..., 0.2326, 0.2401, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 715:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1138, 0.1539, 0.1463,  ..., 0.1311, 0.1463, 0.1614],
         [0.1138, 0.1539, 0.1463,  ..., 0.1311, 0.1463, 0.1614],
         [0.1138, 0.1539, 0.1463,  ..., 0.1311, 0.1463, 0.1614],
         [0.6586, 0.5384, 0.5610,  ..., 0.6066, 0.5610, 0.5158]],
        [[0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2462, 0.2463],
         [0.2500, 0.2500, 0.2525,  ..., 0.2500, 0.2615, 0.2610],
         [0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2462, 0.2463],
         [0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2462, 0.2463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:07,213 [Process: 0] Synchronize training processes
2024-08-16 13:18:07,213 [Process: 0] Evaluating...
2024-08-16 13:18:07,215 [Process: 0] EPOCH 716:
2024-08-16 13:18:07,217 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1125, 0.1740, 0.1739,  ..., 0.1785, 0.1468, 0.1220],
         [0.1265, 0.1740, 0.1769,  ..., 0.2012, 0.1468, 0.1220],
         [0.1125, 0.1740, 0.1739,  ..., 0.1785, 0.1468, 0.1220],
         [0.6484, 0.4780, 0.4754,  ..., 0.4419, 0.5595, 0.6341]],
        [[0.2500, 0.2500, 0.2088,  ..., 0.2464, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.3092,  ..., 0.2607, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2732,  ..., 0.2464, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2088,  ..., 0.2464, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 716:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1245, 0.1233, 0.1376,  ..., 0.1237, 0.1511, 0.1753],
         [0.1245, 0.1233, 0.1376,  ..., 0.1237, 0.1511, 0.1753],
         [0.1245, 0.1233, 0.1376,  ..., 0.1237, 0.1511, 0.1753],
         [0.6265, 0.6302, 0.5872,  ..., 0.6290, 0.5466, 0.4741]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:09,097 [Process: 0] Synchronize training processes
2024-08-16 13:18:09,097 [Process: 0] Evaluating...
2024-08-16 13:18:09,099 [Process: 0] EPOCH 717:
2024-08-16 13:18:09,101 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1127, 0.1218, 0.1562,  ..., 0.1273, 0.2115, 0.1739],
         [0.1127, 0.1316, 0.1562,  ..., 0.1273, 0.1849, 0.1739],
         [0.1127, 0.1218, 0.1562,  ..., 0.1273, 0.2420, 0.1739],
         [0.6620, 0.6248, 0.5315,  ..., 0.6181, 0.3616, 0.4783]],
        [[0.2491, 0.2500, 0.2494,  ..., 0.2500, 0.2460, 0.2353],
         [0.2527, 0.2500, 0.2494,  ..., 0.2500, 0.2966, 0.2942],
         [0.2491, 0.2500, 0.2517,  ..., 0.2500, 0.2287, 0.2353],
         [0.2491, 0.2500, 0.2494,  ..., 0.2500, 0.2287, 0.2353]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 717:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1549, 0.1559, 0.1374,  ..., 0.1393, 0.1620, 0.1695],
         [0.1549, 0.1559, 0.1374,  ..., 0.1393, 0.1635, 0.1695],
         [0.1549, 0.1559, 0.1374,  ..., 0.1393, 0.1620, 0.1695],
         [0.5354, 0.5324, 0.5877,  ..., 0.5822, 0.5126, 0.4916]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2489],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2532],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2489],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:10,976 [Process: 0] Synchronize training processes
2024-08-16 13:18:10,977 [Process: 0] Evaluating...
2024-08-16 13:18:10,979 [Process: 0] EPOCH 718:
2024-08-16 13:18:10,981 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1347, 0.1654, 0.1366,  ..., 0.1861, 0.2260, 0.1100],
         [0.1381, 0.1654, 0.1366,  ..., 0.1935, 0.2432, 0.1100],
         [0.1347, 0.1654, 0.1366,  ..., 0.1861, 0.2001, 0.1100],
         [0.5925, 0.5037, 0.5902,  ..., 0.4344, 0.3307, 0.6700]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2440, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2681, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2440, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2440, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 718:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1285, 0.1736, 0.1569,  ..., 0.1184, 0.1345, 0.1389],
         [0.1285, 0.1736, 0.1569,  ..., 0.1187, 0.1345, 0.1389],
         [0.1285, 0.1736, 0.1569,  ..., 0.1184, 0.1345, 0.1389],
         [0.6146, 0.4793, 0.5294,  ..., 0.6446, 0.5966, 0.5832]],
        [[0.2481, 0.2500, 0.2485,  ..., 0.2500, 0.2500, 0.2500],
         [0.2556, 0.2500, 0.2545,  ..., 0.2500, 0.2500, 0.2500],
         [0.2481, 0.2500, 0.2485,  ..., 0.2500, 0.2500, 0.2500],
         [0.2481, 0.2500, 0.2485,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:12,856 [Process: 0] Synchronize training processes
2024-08-16 13:18:12,856 [Process: 0] Evaluating...
2024-08-16 13:18:12,858 [Process: 0] EPOCH 719:
2024-08-16 13:18:12,860 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1141, 0.1428, 0.1214,  ..., 0.1146, 0.1664, 0.1489],
         [0.1321, 0.1428, 0.1171,  ..., 0.1244, 0.1664, 0.1489],
         [0.1141, 0.1428, 0.1171,  ..., 0.1146, 0.1664, 0.1489],
         [0.6396, 0.5715, 0.6445,  ..., 0.6465, 0.5007, 0.5532]],
        [[0.2500, 0.2500, 0.2495,  ..., 0.2500, 0.2500, 0.2483],
         [0.2500, 0.2500, 0.2516,  ..., 0.2500, 0.2500, 0.2552],
         [0.2500, 0.2500, 0.2495,  ..., 0.2500, 0.2500, 0.2483],
         [0.2500, 0.2500, 0.2495,  ..., 0.2500, 0.2500, 0.2483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 719:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1378, 0.1298, 0.1349,  ..., 0.1249, 0.1479, 0.1395],
         [0.1378, 0.1298, 0.1349,  ..., 0.1249, 0.1479, 0.1395],
         [0.1378, 0.1298, 0.1349,  ..., 0.1249, 0.1479, 0.1395],
         [0.5866, 0.6105, 0.5953,  ..., 0.6254, 0.5563, 0.5814]],
        [[0.2500, 0.2500, 0.2616,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2590,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2397,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2397,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:18:14,748 [Process: 0] Synchronize training processes
2024-08-16 13:18:14,748 [Process: 0] Evaluating...
2024-08-16 13:18:14,750 [Process: 0] EPOCH 720:
2024-08-16 13:18:14,752 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1532, 0.1312, 0.1503,  ..., 0.1650, 0.2549, 0.1539],
         [0.1613, 0.1312, 0.1503,  ..., 0.1650, 0.1967, 0.1539],
         [0.1532, 0.1312, 0.1503,  ..., 0.1650, 0.2096, 0.1539],
         [0.5324, 0.6063, 0.5492,  ..., 0.5051, 0.3388, 0.5382]],
        [[0.2474, 0.2500, 0.2500,  ..., 0.2500, 0.2329, 0.2414],
         [0.2579, 0.2500, 0.2500,  ..., 0.2500, 0.2329, 0.2583],
         [0.2474, 0.2500, 0.2500,  ..., 0.2500, 0.3012, 0.2590],
         [0.2474, 0.2500, 0.2500,  ..., 0.2500, 0.2329, 0.2414]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 720:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1876, 0.1701, 0.1624,  ..., 0.1707, 0.1663, 0.1094],
         [0.1876, 0.1701, 0.1624,  ..., 0.1707, 0.1663, 0.1094],
         [0.1876, 0.1701, 0.1624,  ..., 0.1707, 0.1663, 0.1094],
         [0.4371, 0.4898, 0.5128,  ..., 0.4880, 0.5011, 0.6717]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1068, 0.0783, 0.1635,  ..., 0.1397, 0.2423, 0.1531],
         [0.1113, 0.0783, 0.1635,  ..., 0.1397, 0.1871, 0.1531],
         [0.1068, 0.0783, 0.1635,  ..., 0.1397, 0.1759, 0.1531],
         [0.6750, 0.7650, 0.5096,  ..., 0.5810, 0.3946, 0.5408]],
        [[0.2500, 0.2364, 0.2648,  ..., 0.2500, 0.2500, 0.2437],
         [0.2500, 0.2908, 0.2345,  ..., 0.2500, 0.2500, 0.2688],
         [0.2500, 0.2364, 0.2662,  ..., 0.2500, 0.2500, 0.2437],
         [0.2500, 0.2364, 0.2345,  ..., 0.2500, 0.2500, 0.2437]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:16,628 [Process: 0] Synchronize training processes
2024-08-16 13:18:16,629 [Process: 0] Evaluating...
2024-08-16 13:18:16,631 [Process: 0] EPOCH 721:
2024-08-16 13:18:16,632 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 721:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1130, 0.1679, 0.1585,  ..., 0.1368, 0.1613, 0.1548],
         [0.1130, 0.1679, 0.1585,  ..., 0.1368, 0.1613, 0.1548],
         [0.1130, 0.1679, 0.1585,  ..., 0.1368, 0.1613, 0.1548],
         [0.6609, 0.4962, 0.5246,  ..., 0.5895, 0.5162, 0.5356]],
        [[0.2500, 0.2473, 0.2490,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2582, 0.2553,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2473, 0.2479,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2473, 0.2479,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1256, 0.1044, 0.1126,  ..., 0.1559, 0.1796, 0.1575],
         [0.1256, 0.1044, 0.1169,  ..., 0.1567, 0.1780, 0.1615],
         [0.1256, 0.1044, 0.1126,  ..., 0.1559, 0.2005, 0.1575],
         [0.6233, 0.6867, 0.6579,  ..., 0.5315, 0.4418, 0.5235]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2480, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2559, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2480, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2480, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 722:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:18:18,512 [Process: 0] Synchronize training processes
2024-08-16 13:18:18,513 [Process: 0] Evaluating...
2024-08-16 13:18:18,515 [Process: 0] EPOCH 722:
2024-08-16 13:18:18,517 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1331, 0.1279, 0.1188,  ..., 0.1782, 0.1359, 0.1588],
         [0.1331, 0.1279, 0.1188,  ..., 0.1782, 0.1359, 0.1588],
         [0.1331, 0.1279, 0.1188,  ..., 0.1782, 0.1359, 0.1588],
         [0.6007, 0.6164, 0.6436,  ..., 0.4654, 0.5922, 0.5237]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1958, 0.1258, 0.1415,  ..., 0.2035, 0.2396, 0.1322],
         [0.1581, 0.1361, 0.1244,  ..., 0.1587, 0.2396, 0.1337],
         [0.1563, 0.1258, 0.1244,  ..., 0.1430, 0.2396, 0.1322],
         [0.4899, 0.6123, 0.6098,  ..., 0.4949, 0.2811, 0.6019]],
        [[0.2459, 0.2500, 0.2476,  ..., 0.2500, 0.3221, 0.2500],
         [0.2623, 0.2500, 0.2573,  ..., 0.2500, 0.2813, 0.2500],
         [0.2459, 0.2500, 0.2476,  ..., 0.2500, 0.1983, 0.2500],
         [0.2459, 0.2500, 0.2476,  ..., 0.2500, 0.1983, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 723:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:18:20,391 [Process: 0] Synchronize training processes
2024-08-16 13:18:20,391 [Process: 0] Evaluating...
2024-08-16 13:18:20,393 [Process: 0] EPOCH 723:
2024-08-16 13:18:20,395 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1220, 0.1610, 0.1306,  ..., 0.1593, 0.1341, 0.1803],
         [0.1220, 0.1610, 0.1306,  ..., 0.1593, 0.1341, 0.1803],
         [0.1220, 0.1610, 0.1306,  ..., 0.1593, 0.1341, 0.1803],
         [0.6341, 0.5170, 0.6083,  ..., 0.5221, 0.5977, 0.4591]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1232, 0.1641, 0.1220,  ..., 0.1359, 0.1676, 0.1508],
         [0.1236, 0.1641, 0.1220,  ..., 0.1597, 0.1676, 0.1526],
         [0.1232, 0.1641, 0.1220,  ..., 0.1359, 0.2598, 0.1508],
         [0.6300, 0.5076, 0.6339,  ..., 0.5684, 0.4050, 0.5458]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 724:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:18:22,364 [Process: 0] Synchronize training processes
2024-08-16 13:18:22,364 [Process: 0] Evaluating...
2024-08-16 13:18:22,366 [Process: 0] EPOCH 724:
2024-08-16 13:18:22,368 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1593, 0.1557, 0.1756,  ..., 0.1242, 0.1389, 0.1427],
         [0.1593, 0.1557, 0.1794,  ..., 0.1242, 0.1389, 0.1427],
         [0.1593, 0.1557, 0.1756,  ..., 0.1242, 0.1389, 0.1427],
         [0.5222, 0.5329, 0.4694,  ..., 0.6275, 0.5834, 0.5720]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1350, 0.1154, 0.1430,  ..., 0.1633, 0.1827, 0.1234],
         [0.1378, 0.1154, 0.1513,  ..., 0.1633, 0.1827, 0.1234],
         [0.1350, 0.1154, 0.1430,  ..., 0.1633, 0.4067, 0.1234],
         [0.5922, 0.6538, 0.5628,  ..., 0.5102, 0.2278, 0.6297]],
        [[0.2445, 0.2500, 0.2691,  ..., 0.2500, 0.2903, 0.2500],
         [0.2664, 0.2500, 0.2513,  ..., 0.2500, 0.2694, 0.2500],
         [0.2445, 0.2500, 0.2398,  ..., 0.2500, 0.2202, 0.2500],
         [0.2445, 0.2500, 0.2398,  ..., 0.2500, 0.2202, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 725:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:18:24,266 [Process: 0] Synchronize training processes
2024-08-16 13:18:24,267 [Process: 0] Evaluating...
2024-08-16 13:18:24,268 [Process: 0] EPOCH 725:
2024-08-16 13:18:24,270 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1692, 0.1567, 0.1854,  ..., 0.1307, 0.1692, 0.1539],
         [0.1692, 0.1583, 0.1854,  ..., 0.1307, 0.1692, 0.1539],
         [0.1692, 0.1567, 0.1854,  ..., 0.1307, 0.1692, 0.1539],
         [0.4924, 0.5284, 0.4439,  ..., 0.6078, 0.4923, 0.5382]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1373, 0.1588, 0.1670,  ..., 0.1126, 0.1492, 0.1753],
         [0.1373, 0.1726, 0.1569,  ..., 0.1126, 0.1492, 0.1769],
         [0.1373, 0.1588, 0.1476,  ..., 0.1126, 0.3903, 0.1753],
         [0.5880, 0.5099, 0.5285,  ..., 0.6622, 0.3114, 0.4726]],
        [[0.2873, 0.2430, 0.3561,  ..., 0.2577, 0.2305, 0.3034],
         [0.2439, 0.2709, 0.2774,  ..., 0.2403, 0.3093, 0.2322],
         [0.2344, 0.2430, 0.2108,  ..., 0.2647, 0.2446, 0.2322],
         [0.2344, 0.2430, 0.1558,  ..., 0.2373, 0.2156, 0.2322]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 726:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:18:26,155 [Process: 0] Synchronize training processes
2024-08-16 13:18:26,155 [Process: 0] Evaluating...
2024-08-16 13:18:26,157 [Process: 0] EPOCH 726:
2024-08-16 13:18:26,160 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1530, 0.1676, 0.1855,  ..., 0.1635, 0.1409, 0.1364],
         [0.1530, 0.1676, 0.1855,  ..., 0.1651, 0.1409, 0.1364],
         [0.1530, 0.1676, 0.1855,  ..., 0.1635, 0.1409, 0.1364],
         [0.5411, 0.4971, 0.4434,  ..., 0.5079, 0.5773, 0.5910]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2484],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2549],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2484],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1422, 0.1032, 0.1153,  ..., 0.1418, 0.1882, 0.1598],
         [0.1422, 0.1032, 0.1187,  ..., 0.1474, 0.1882, 0.1729],
         [0.1422, 0.1032, 0.1153,  ..., 0.1418, 0.1882, 0.1598],
         [0.5735, 0.6905, 0.6506,  ..., 0.5689, 0.4355, 0.5075]],
        [[0.2455, 0.2420, 0.2350,  ..., 0.2500, 0.2500, 0.2500],
         [0.2636, 0.2740, 0.2949,  ..., 0.2500, 0.2500, 0.2500],
         [0.2455, 0.2420, 0.2350,  ..., 0.2500, 0.2500, 0.2500],
         [0.2455, 0.2420, 0.2350,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 727:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:18:28,103 [Process: 0] Synchronize training processes
2024-08-16 13:18:28,103 [Process: 0] Evaluating...
2024-08-16 13:18:28,105 [Process: 0] EPOCH 727:
2024-08-16 13:18:28,107 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1565, 0.1313, 0.1645,  ..., 0.1644, 0.1343, 0.1361],
         [0.1565, 0.1313, 0.1645,  ..., 0.1644, 0.1343, 0.1361],
         [0.1565, 0.1313, 0.1645,  ..., 0.1644, 0.1343, 0.1361],
         [0.5306, 0.6061, 0.5065,  ..., 0.5068, 0.5972, 0.5918]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1109, 0.1462, 0.1218,  ..., 0.1279, 0.1914, 0.1355],
         [0.1109, 0.1553, 0.1218,  ..., 0.1279, 0.1914, 0.1355],
         [0.1109, 0.1462, 0.1218,  ..., 0.1279, 0.2213, 0.1355],
         [0.6674, 0.5522, 0.6347,  ..., 0.6162, 0.3959, 0.5936]],
        [[0.2445, 0.2441, 0.2565,  ..., 0.2500, 0.2470, 0.2500],
         [0.2445, 0.2678, 0.2478,  ..., 0.2500, 0.2589, 0.2500],
         [0.2665, 0.2441, 0.2478,  ..., 0.2500, 0.2470, 0.2500],
         [0.2445, 0.2441, 0.2478,  ..., 0.2500, 0.2470, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 728:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:18:29,994 [Process: 0] Synchronize training processes
2024-08-16 13:18:29,994 [Process: 0] Evaluating...
2024-08-16 13:18:29,996 [Process: 0] EPOCH 728:
2024-08-16 13:18:29,998 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1599, 0.1559, 0.1660,  ..., 0.1497, 0.1392, 0.1547],
         [0.1599, 0.1559, 0.1660,  ..., 0.1540, 0.1392, 0.1596],
         [0.1599, 0.1559, 0.1660,  ..., 0.1497, 0.1392, 0.1547],
         [0.5202, 0.5322, 0.5021,  ..., 0.5467, 0.5825, 0.5311]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1093, 0.1626, 0.1600,  ..., 0.1752, 0.2444, 0.1409],
         [0.1047, 0.1626, 0.1600,  ..., 0.1752, 0.2444, 0.1412],
         [0.1047, 0.1626, 0.1600,  ..., 0.1752, 0.2444, 0.1409],
         [0.6814, 0.5121, 0.5199,  ..., 0.4743, 0.2668, 0.5769]],
        [[0.2500, 0.2500, 0.2403,  ..., 0.2500, 0.2251, 0.2500],
         [0.2500, 0.2500, 0.3044,  ..., 0.2500, 0.2616, 0.2500],
         [0.2500, 0.2500, 0.2316,  ..., 0.2500, 0.2881, 0.2500],
         [0.2500, 0.2500, 0.2237,  ..., 0.2500, 0.2251, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 729:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:18:31,912 [Process: 0] Synchronize training processes
2024-08-16 13:18:31,912 [Process: 0] Evaluating...
2024-08-16 13:18:31,914 [Process: 0] EPOCH 729:
2024-08-16 13:18:31,916 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1667, 0.1634, 0.1399,  ..., 0.1320, 0.1306, 0.1512],
         [0.1667, 0.1634, 0.1399,  ..., 0.1320, 0.1306, 0.1533],
         [0.1667, 0.1634, 0.1399,  ..., 0.1320, 0.1306, 0.1512],
         [0.5000, 0.5099, 0.5802,  ..., 0.6040, 0.6082, 0.5443]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1479, 0.1081, 0.1231,  ..., 0.1235, 0.2867, 0.1511],
         [0.1479, 0.1081, 0.1231,  ..., 0.1235, 0.1846, 0.1689],
         [0.1479, 0.1081, 0.1231,  ..., 0.1235, 0.1846, 0.1511],
         [0.5563, 0.6757, 0.6307,  ..., 0.6294, 0.3442, 0.5289]],
        [[0.2481, 0.2500, 0.2476,  ..., 0.2500, 0.2500, 0.2500],
         [0.2556, 0.2500, 0.2572,  ..., 0.2500, 0.2500, 0.2500],
         [0.2481, 0.2500, 0.2476,  ..., 0.2500, 0.2500, 0.2500],
         [0.2481, 0.2500, 0.2476,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 730:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1796, 0.1603, 0.1451,  ..., 0.1390, 0.1274, 0.1291],
         [0.1796, 0.1603, 0.1451,  ..., 0.1396, 0.1276, 0.1354],
         [0.1796, 0.1603, 0.1451,  ..., 0.1390, 0.1274, 0.1291],
         [0.4613, 0.5190, 0.5646,  ..., 0.5824, 0.6175, 0.6064]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:33,795 [Process: 0] Synchronize training processes
2024-08-16 13:18:33,795 [Process: 0] Evaluating...
2024-08-16 13:18:33,797 [Process: 0] EPOCH 730:
2024-08-16 13:18:33,799 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1560, 0.1461, 0.1211,  ..., 0.1089, 0.3428, 0.1601],
         [0.1560, 0.1458, 0.1211,  ..., 0.1089, 0.1445, 0.1601],
         [0.1647, 0.1458, 0.1211,  ..., 0.1089, 0.1439, 0.1601],
         [0.5234, 0.5624, 0.6367,  ..., 0.6733, 0.3688, 0.5196]],
        [[0.2500, 0.2500, 0.2483,  ..., 0.2497, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2552,  ..., 0.2510, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2483,  ..., 0.2497, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2483,  ..., 0.2497, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 731:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1337, 0.1528, 0.1457,  ..., 0.1647, 0.1334, 0.1308],
         [0.1337, 0.1528, 0.1500,  ..., 0.1647, 0.1334, 0.1308],
         [0.1337, 0.1528, 0.1457,  ..., 0.1647, 0.1334, 0.1308],
         [0.5989, 0.5417, 0.5586,  ..., 0.5060, 0.5998, 0.6077]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:35,679 [Process: 0] Synchronize training processes
2024-08-16 13:18:35,679 [Process: 0] Evaluating...
2024-08-16 13:18:35,681 [Process: 0] EPOCH 731:
2024-08-16 13:18:35,683 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:18:37,558 [Process: 0] Synchronize training processes
2024-08-16 13:18:37,558 [Process: 0] Evaluating...
2024-08-16 13:18:37,560 [Process: 0] EPOCH 732:
2024-08-16 13:18:37,562 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1283, 0.1230, 0.1543,  ..., 0.1796, 0.1115, 0.1776],
         [0.1283, 0.1206, 0.1586,  ..., 0.1800, 0.1115, 0.1776],
         [0.1949, 0.1671, 0.1543,  ..., 0.1796, 0.1115, 0.1823],
         [0.5484, 0.5893, 0.5329,  ..., 0.4608, 0.6655, 0.4624]],
        [[0.3476, 0.2391, 0.2524,  ..., 0.2500, 0.4593, 0.3352],
         [0.2247, 0.2619, 0.2186,  ..., 0.2500, 0.2073, 0.2216],
         [0.2165, 0.2599, 0.3509,  ..., 0.2500, 0.1914, 0.2216],
         [0.2113, 0.2391, 0.1780,  ..., 0.2500, 0.1419, 0.2216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 732:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1676, 0.1226, 0.1368,  ..., 0.1235, 0.1627, 0.1540],
         [0.1676, 0.1226, 0.1368,  ..., 0.1235, 0.1627, 0.1540],
         [0.1676, 0.1226, 0.1368,  ..., 0.1235, 0.1627, 0.1540],
         [0.4971, 0.6322, 0.5897,  ..., 0.6296, 0.5120, 0.5380]],
        [[0.2500, 0.2486, 0.2500,  ..., 0.2495, 0.2500, 0.2500],
         [0.2500, 0.2542, 0.2500,  ..., 0.2516, 0.2500, 0.2500],
         [0.2500, 0.2486, 0.2500,  ..., 0.2495, 0.2500, 0.2500],
         [0.2500, 0.2486, 0.2500,  ..., 0.2495, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:39,444 [Process: 0] Synchronize training processes
2024-08-16 13:18:39,445 [Process: 0] Evaluating...
2024-08-16 13:18:39,446 [Process: 0] EPOCH 733:
2024-08-16 13:18:39,449 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1386, 0.1770, 0.1057,  ..., 0.1532, 0.2038, 0.1207],
         [0.1369, 0.1770, 0.1057,  ..., 0.1532, 0.2012, 0.1212],
         [0.1369, 0.1770, 0.1057,  ..., 0.1532, 0.2791, 0.1207],
         [0.5876, 0.4689, 0.6830,  ..., 0.5405, 0.3160, 0.6373]],
        [[0.2458, 0.2500, 0.2500,  ..., 0.2496, 0.2500, 0.2500],
         [0.2458, 0.2500, 0.2500,  ..., 0.2512, 0.2500, 0.2500],
         [0.2626, 0.2500, 0.2500,  ..., 0.2496, 0.2500, 0.2500],
         [0.2458, 0.2500, 0.2500,  ..., 0.2496, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 733:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1370, 0.1348, 0.1335,  ..., 0.1647, 0.1557, 0.1380],
         [0.1370, 0.1348, 0.1335,  ..., 0.1647, 0.1557, 0.1380],
         [0.1370, 0.1348, 0.1335,  ..., 0.1647, 0.1557, 0.1380],
         [0.5890, 0.5956, 0.5994,  ..., 0.5058, 0.5330, 0.5859]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:41,328 [Process: 0] Synchronize training processes
2024-08-16 13:18:41,328 [Process: 0] Evaluating...
2024-08-16 13:18:41,330 [Process: 0] EPOCH 734:
2024-08-16 13:18:41,332 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0834, 0.1490, 0.1179,  ..., 0.1213, 0.1994, 0.0902],
         [0.0834, 0.1490, 0.1179,  ..., 0.1213, 0.1050, 0.0902],
         [0.0834, 0.1490, 0.1179,  ..., 0.1213, 0.6487, 0.0902],
         [0.7498, 0.5531, 0.6463,  ..., 0.6362, 0.0469, 0.7295]],
        [[0.2500, 0.2465, 0.2491,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2465, 0.2527,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2605, 0.2491,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2465, 0.2491,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 734:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1432, 0.1202, 0.1303,  ..., 0.1739, 0.1703, 0.1626],
         [0.1432, 0.1202, 0.1303,  ..., 0.1739, 0.1703, 0.1626],
         [0.1432, 0.1202, 0.1303,  ..., 0.1739, 0.1703, 0.1626],
         [0.5704, 0.6393, 0.6091,  ..., 0.4784, 0.4891, 0.5123]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2478],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2566],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2478],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2478]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:43,230 [Process: 0] Synchronize training processes
2024-08-16 13:18:43,231 [Process: 0] Evaluating...
2024-08-16 13:18:43,233 [Process: 0] EPOCH 735:
2024-08-16 13:18:43,234 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1224, 0.1719, 0.1099,  ..., 0.1673, 0.4758, 0.0859],
         [0.1224, 0.1719, 0.1099,  ..., 0.1673, 0.1361, 0.0859],
         [0.1224, 0.1719, 0.1099,  ..., 0.1673, 0.3520, 0.0859],
         [0.6329, 0.4843, 0.6702,  ..., 0.4980, 0.0361, 0.7424]],
        [[0.2500, 0.2500, 0.2480,  ..., 0.2500, 0.2500, 0.2232],
         [0.2500, 0.2500, 0.2266,  ..., 0.2500, 0.2500, 0.2232],
         [0.2500, 0.2500, 0.2988,  ..., 0.2500, 0.2500, 0.3303],
         [0.2500, 0.2500, 0.2266,  ..., 0.2500, 0.2500, 0.2232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 735:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1433, 0.1662, 0.1552,  ..., 0.1370, 0.1305, 0.1580],
         [0.1477, 0.1662, 0.1552,  ..., 0.1370, 0.1305, 0.1583],
         [0.1433, 0.1662, 0.1552,  ..., 0.1370, 0.1305, 0.1580],
         [0.5657, 0.5014, 0.5345,  ..., 0.5890, 0.6086, 0.5256]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:45,122 [Process: 0] Synchronize training processes
2024-08-16 13:18:45,122 [Process: 0] Evaluating...
2024-08-16 13:18:45,124 [Process: 0] EPOCH 736:
2024-08-16 13:18:45,126 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1616, 0.0886, 0.0951,  ..., 0.1707, 0.2146, 0.1370],
         [0.1616, 0.0886, 0.0968,  ..., 0.1707, 0.2146, 0.1480],
         [0.1616, 0.0886, 0.0951,  ..., 0.1707, 0.2146, 0.1370],
         [0.5151, 0.7341, 0.7130,  ..., 0.4878, 0.3563, 0.5780]],
        [[0.2497, 0.2500, 0.2474,  ..., 0.2741, 0.2436, 0.2500],
         [0.2510, 0.2500, 0.2474,  ..., 0.2563, 0.2656, 0.2500],
         [0.2497, 0.2500, 0.2578,  ..., 0.2348, 0.2472, 0.2500],
         [0.2497, 0.2500, 0.2474,  ..., 0.2348, 0.2436, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 736:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1738, 0.1598, 0.1628,  ..., 0.1602, 0.1288, 0.1434],
         [0.1738, 0.1611, 0.1764,  ..., 0.1602, 0.1288, 0.1434],
         [0.1738, 0.1598, 0.1628,  ..., 0.1602, 0.1288, 0.1434],
         [0.4787, 0.5192, 0.4979,  ..., 0.5195, 0.6136, 0.5699]],
        [[0.2445, 0.2497, 0.2499,  ..., 0.2449, 0.2500, 0.2704],
         [0.2664, 0.2509, 0.2503,  ..., 0.2653, 0.2500, 0.2458],
         [0.2445, 0.2497, 0.2499,  ..., 0.2449, 0.2500, 0.2419],
         [0.2445, 0.2497, 0.2499,  ..., 0.2449, 0.2500, 0.2419]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:47,035 [Process: 0] Synchronize training processes
2024-08-16 13:18:47,035 [Process: 0] Evaluating...
2024-08-16 13:18:47,037 [Process: 0] EPOCH 737:
2024-08-16 13:18:47,039 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1221, 0.1177, 0.1034,  ..., 0.1588, 0.2274, 0.1176],
         [0.1275, 0.1177, 0.1034,  ..., 0.1588, 0.2274, 0.1176],
         [0.1221, 0.1177, 0.1034,  ..., 0.1588, 0.2274, 0.1176],
         [0.6282, 0.6469, 0.6898,  ..., 0.5236, 0.3177, 0.6473]],
        [[0.2469, 0.2500, 0.2500,  ..., 0.2500, 0.2528, 0.2500],
         [0.2594, 0.2500, 0.2500,  ..., 0.2500, 0.2491, 0.2500],
         [0.2469, 0.2500, 0.2500,  ..., 0.2500, 0.2491, 0.2500],
         [0.2469, 0.2500, 0.2500,  ..., 0.2500, 0.2491, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 737:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1335, 0.1454, 0.1536,  ..., 0.1309, 0.1418, 0.1677],
         [0.1354, 0.1454, 0.1536,  ..., 0.1357, 0.1418, 0.1677],
         [0.1335, 0.1454, 0.1536,  ..., 0.1309, 0.1418, 0.1677],
         [0.5977, 0.5639, 0.5393,  ..., 0.6024, 0.5746, 0.4970]],
        [[0.2491, 0.2500, 0.2500,  ..., 0.2500, 0.2493, 0.2491],
         [0.2528, 0.2500, 0.2500,  ..., 0.2500, 0.2520, 0.2527],
         [0.2491, 0.2500, 0.2500,  ..., 0.2500, 0.2493, 0.2491],
         [0.2491, 0.2500, 0.2500,  ..., 0.2500, 0.2493, 0.2491]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:48,920 [Process: 0] Synchronize training processes
2024-08-16 13:18:48,920 [Process: 0] Evaluating...
2024-08-16 13:18:48,922 [Process: 0] EPOCH 738:
2024-08-16 13:18:48,924 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1586, 0.1496, 0.0900,  ..., 0.1121, 0.2189, 0.1314],
         [0.1586, 0.1496, 0.0900,  ..., 0.1121, 0.2189, 0.1332],
         [0.1586, 0.1496, 0.0900,  ..., 0.1121, 0.2189, 0.1314],
         [0.5242, 0.5513, 0.7301,  ..., 0.6637, 0.3433, 0.6040]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 738:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1546, 0.1298, 0.1591,  ..., 0.1330, 0.1501, 0.1530],
         [0.1546, 0.1298, 0.1591,  ..., 0.1330, 0.1501, 0.1552],
         [0.1546, 0.1298, 0.1591,  ..., 0.1330, 0.1501, 0.1530],
         [0.5362, 0.6106, 0.5227,  ..., 0.6011, 0.5497, 0.5388]],
        [[0.2500, 0.2494, 0.2460,  ..., 0.2500, 0.2473, 0.2462],
         [0.2500, 0.2518, 0.2621,  ..., 0.2500, 0.2581, 0.2614],
         [0.2500, 0.2494, 0.2460,  ..., 0.2500, 0.2473, 0.2462],
         [0.2500, 0.2494, 0.2460,  ..., 0.2500, 0.2473, 0.2462]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:18:50,819 [Process: 0] Synchronize training processes
2024-08-16 13:18:50,819 [Process: 0] Evaluating...
2024-08-16 13:18:50,821 [Process: 0] EPOCH 739:
2024-08-16 13:18:50,823 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1607, 0.1633, 0.0756,  ..., 0.1061, 0.1548, 0.1544],
         [0.1607, 0.1633, 0.0756,  ..., 0.1061, 0.1548, 0.1544],
         [0.1607, 0.1633, 0.0756,  ..., 0.1061, 0.1548, 0.1544],
         [0.5180, 0.5101, 0.7732,  ..., 0.6818, 0.5356, 0.5367]],
        [[0.2485, 0.2500, 0.2484,  ..., 0.2500, 0.2500, 0.2500],
         [0.2882, 0.2500, 0.2549,  ..., 0.2500, 0.2500, 0.2500],
         [0.2316, 0.2500, 0.2484,  ..., 0.2500, 0.2500, 0.2500],
         [0.2316, 0.2500, 0.2484,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 739:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1355, 0.2027, 0.1773,  ..., 0.1271, 0.1388, 0.1538],
         [0.1357, 0.2027, 0.1773,  ..., 0.1271, 0.1388, 0.1591],
         [0.1355, 0.2027, 0.1773,  ..., 0.1271, 0.1388, 0.1538],
         [0.5934, 0.3918, 0.4682,  ..., 0.6186, 0.5836, 0.5334]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2490, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2531, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2490, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2490, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1230, 0.1864, 0.0941,  ..., 0.1397, 0.2047, 0.1242],
         [0.1230, 0.1864, 0.0941,  ..., 0.1397, 0.2047, 0.1242],
         [0.1230, 0.1864, 0.0941,  ..., 0.1397, 0.3404, 0.1242],
         [0.6309, 0.4409, 0.7177,  ..., 0.5810, 0.2502, 0.6274]],
        [[0.2688, 0.2451, 0.2490,  ..., 0.2453, 0.2941, 0.2500],
         [0.2437, 0.2646, 0.2885,  ..., 0.2640, 0.2933, 0.2500],
         [0.2437, 0.2451, 0.2313,  ..., 0.2453, 0.2064, 0.2500],
         [0.2437, 0.2451, 0.2313,  ..., 0.2453, 0.2062, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:18:52,701 [Process: 0] Synchronize training processes
2024-08-16 13:18:52,701 [Process: 0] Evaluating...
2024-08-16 13:18:52,703 [Process: 0] EPOCH 740:
2024-08-16 13:18:52,705 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 740:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1480, 0.1318, 0.1791,  ..., 0.1440, 0.1541, 0.1406],
         [0.1480, 0.1318, 0.1791,  ..., 0.1440, 0.1592, 0.1406],
         [0.1480, 0.1318, 0.1791,  ..., 0.1440, 0.1541, 0.1406],
         [0.5559, 0.6045, 0.4627,  ..., 0.5681, 0.5326, 0.5782]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2506, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1184, 0.0815, 0.1545,  ..., 0.1465, 0.2232, 0.1360],
         [0.1184, 0.0815, 0.1545,  ..., 0.1465, 0.2232, 0.1360],
         [0.1184, 0.0815, 0.1545,  ..., 0.1465, 0.2232, 0.1360],
         [0.6447, 0.7555, 0.5366,  ..., 0.5606, 0.3303, 0.5919]],
        [[0.2777, 0.2500, 0.2445,  ..., 0.2500, 0.2500, 0.2500],
         [0.2408, 0.2500, 0.2666,  ..., 0.2500, 0.2500, 0.2500],
         [0.2408, 0.2500, 0.2445,  ..., 0.2500, 0.2500, 0.2500],
         [0.2408, 0.2500, 0.2445,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 741:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:18:54,589 [Process: 0] Synchronize training processes
2024-08-16 13:18:54,590 [Process: 0] Evaluating...
2024-08-16 13:18:54,592 [Process: 0] EPOCH 741:
2024-08-16 13:18:54,594 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1304, 0.1349, 0.1271,  ..., 0.1047, 0.1382, 0.1422],
         [0.1304, 0.1349, 0.1271,  ..., 0.1047, 0.1382, 0.1422],
         [0.1304, 0.1349, 0.1271,  ..., 0.1047, 0.1382, 0.1422],
         [0.6087, 0.5953, 0.6187,  ..., 0.6860, 0.5854, 0.5734]],
        [[0.2500, 0.2480, 0.2500,  ..., 0.2492, 0.2500, 0.2476],
         [0.2500, 0.2560, 0.2500,  ..., 0.2525, 0.2500, 0.2572],
         [0.2500, 0.2480, 0.2500,  ..., 0.2492, 0.2500, 0.2476],
         [0.2500, 0.2480, 0.2500,  ..., 0.2492, 0.2500, 0.2476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1009, 0.1559, 0.1266,  ..., 0.1326, 0.2845, 0.1226],
         [0.1009, 0.1559, 0.1387,  ..., 0.1326, 0.1443, 0.1226],
         [0.1009, 0.1559, 0.1266,  ..., 0.1326, 0.1227, 0.1226],
         [0.6973, 0.5322, 0.6081,  ..., 0.6021, 0.4485, 0.6322]],
        [[0.2500, 0.2419, 0.2500,  ..., 0.2420, 0.2449, 0.2500],
         [0.2500, 0.2419, 0.2500,  ..., 0.2739, 0.2449, 0.2500],
         [0.2500, 0.2744, 0.2500,  ..., 0.2420, 0.2652, 0.2500],
         [0.2500, 0.2419, 0.2500,  ..., 0.2420, 0.2449, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 742:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:18:56,478 [Process: 0] Synchronize training processes
2024-08-16 13:18:56,479 [Process: 0] Evaluating...
2024-08-16 13:18:56,481 [Process: 0] EPOCH 742:
2024-08-16 13:18:56,482 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1430, 0.1346, 0.1435,  ..., 0.1431, 0.1619, 0.1684],
         [0.1441, 0.1346, 0.1435,  ..., 0.1431, 0.1652, 0.1684],
         [0.1430, 0.1346, 0.1435,  ..., 0.1431, 0.1619, 0.1684],
         [0.5698, 0.5963, 0.5696,  ..., 0.5708, 0.5111, 0.4949]],
        [[0.2500, 0.2500, 0.2460,  ..., 0.2500, 0.2488, 0.2500],
         [0.2500, 0.2500, 0.2620,  ..., 0.2500, 0.2536, 0.2500],
         [0.2500, 0.2500, 0.2460,  ..., 0.2500, 0.2488, 0.2500],
         [0.2500, 0.2500, 0.2460,  ..., 0.2500, 0.2488, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1023, 0.1308, 0.1068,  ..., 0.1670, 0.4184, 0.1312],
         [0.1127, 0.1400, 0.1068,  ..., 0.1670, 0.1480, 0.1312],
         [0.1023, 0.1308, 0.1068,  ..., 0.1670, 0.1304, 0.1312],
         [0.6827, 0.5984, 0.6797,  ..., 0.4989, 0.3033, 0.6065]],
        [[0.2449, 0.2500, 0.2311,  ..., 0.2500, 0.2500, 0.2346],
         [0.2449, 0.2500, 0.2241,  ..., 0.2500, 0.2500, 0.2583],
         [0.2652, 0.2500, 0.3207,  ..., 0.2500, 0.2500, 0.2725],
         [0.2449, 0.2500, 0.2241,  ..., 0.2500, 0.2500, 0.2346]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 743:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:18:58,375 [Process: 0] Synchronize training processes
2024-08-16 13:18:58,375 [Process: 0] Evaluating...
2024-08-16 13:18:58,377 [Process: 0] EPOCH 743:
2024-08-16 13:18:58,379 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1565, 0.1739, 0.1329,  ..., 0.1277, 0.1728, 0.1396],
         [0.1565, 0.1739, 0.1329,  ..., 0.1277, 0.1728, 0.1396],
         [0.1565, 0.1739, 0.1329,  ..., 0.1277, 0.1728, 0.1396],
         [0.5304, 0.4784, 0.6012,  ..., 0.6170, 0.4817, 0.5811]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1353, 0.1166, 0.1276,  ..., 0.1333, 0.2860, 0.1345],
         [0.1353, 0.1166, 0.1325,  ..., 0.1541, 0.2368, 0.1345],
         [0.1353, 0.1166, 0.1276,  ..., 0.1333, 0.1448, 0.1345],
         [0.5942, 0.6501, 0.6124,  ..., 0.5793, 0.3324, 0.5964]],
        [[0.2500, 0.2324, 0.2382,  ..., 0.2441, 0.2418, 0.2504],
         [0.2500, 0.2337, 0.2855,  ..., 0.2887, 0.2456, 0.2499],
         [0.2500, 0.3141, 0.2382,  ..., 0.2336, 0.2708, 0.2499],
         [0.2500, 0.2198, 0.2382,  ..., 0.2336, 0.2418, 0.2499]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 744:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:19:00,272 [Process: 0] Synchronize training processes
2024-08-16 13:19:00,272 [Process: 0] Evaluating...
2024-08-16 13:19:00,274 [Process: 0] EPOCH 744:
2024-08-16 13:19:00,276 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1435, 0.1637, 0.1384,  ..., 0.1297, 0.1492, 0.1565],
         [0.1435, 0.1637, 0.1384,  ..., 0.1297, 0.1512, 0.1565],
         [0.1435, 0.1637, 0.1384,  ..., 0.1297, 0.1492, 0.1565],
         [0.5694, 0.5090, 0.5848,  ..., 0.6110, 0.5504, 0.5305]],
        [[0.2467, 0.2500, 0.2500,  ..., 0.2565, 0.2483, 0.2496],
         [0.2598, 0.2500, 0.2500,  ..., 0.2478, 0.2551, 0.2513],
         [0.2467, 0.2500, 0.2500,  ..., 0.2478, 0.2483, 0.2496],
         [0.2467, 0.2500, 0.2500,  ..., 0.2478, 0.2483, 0.2496]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1458, 0.1973, 0.1068,  ..., 0.1019, 0.1597, 0.1466],
         [0.1459, 0.1742, 0.1068,  ..., 0.1019, 0.1358, 0.1466],
         [0.1458, 0.1742, 0.1068,  ..., 0.1019, 0.1584, 0.1466],
         [0.5626, 0.4543, 0.6797,  ..., 0.6942, 0.5461, 0.5602]],
        [[0.2500, 0.2406, 0.2500,  ..., 0.2401, 0.2469, 0.2500],
         [0.2500, 0.2406, 0.2500,  ..., 0.2401, 0.2592, 0.2500],
         [0.2500, 0.2781, 0.2500,  ..., 0.2796, 0.2469, 0.2500],
         [0.2500, 0.2406, 0.2500,  ..., 0.2401, 0.2469, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 745:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:19:02,169 [Process: 0] Synchronize training processes
2024-08-16 13:19:02,169 [Process: 0] Evaluating...
2024-08-16 13:19:02,171 [Process: 0] EPOCH 745:
2024-08-16 13:19:02,173 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1537, 0.1339, 0.1674,  ..., 0.1524, 0.1499, 0.1343],
         [0.1537, 0.1339, 0.1674,  ..., 0.1524, 0.1499, 0.1343],
         [0.1537, 0.1339, 0.1674,  ..., 0.1524, 0.1499, 0.1343],
         [0.5389, 0.5982, 0.4978,  ..., 0.5427, 0.5502, 0.5972]],
        [[0.2480, 0.2493, 0.2500,  ..., 0.2500, 0.2486, 0.2500],
         [0.2561, 0.2521, 0.2500,  ..., 0.2500, 0.2543, 0.2500],
         [0.2480, 0.2493, 0.2500,  ..., 0.2500, 0.2486, 0.2500],
         [0.2480, 0.2493, 0.2500,  ..., 0.2500, 0.2486, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1590, 0.1761, 0.1668,  ..., 0.1320, 0.2504, 0.1558],
         [0.1590, 0.1761, 0.1701,  ..., 0.1531, 0.1723, 0.1558],
         [0.1590, 0.1761, 0.1668,  ..., 0.1547, 0.3386, 0.1558],
         [0.5229, 0.4717, 0.4962,  ..., 0.5602, 0.2387, 0.5326]],
        [[0.2500, 0.3194, 0.2821,  ..., 0.4250, 0.3027, 0.3838],
         [0.2500, 0.2623, 0.2520,  ..., 0.1917, 0.2536, 0.2297],
         [0.2500, 0.2331, 0.2656,  ..., 0.1917, 0.2552, 0.2119],
         [0.2500, 0.1852, 0.2003,  ..., 0.1917, 0.1885, 0.1746]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 746:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:19:04,075 [Process: 0] Synchronize training processes
2024-08-16 13:19:04,075 [Process: 0] Evaluating...
2024-08-16 13:19:04,077 [Process: 0] EPOCH 746:
2024-08-16 13:19:04,079 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1326, 0.1586, 0.1361,  ..., 0.1372, 0.1736, 0.1481],
         [0.1326, 0.1586, 0.1361,  ..., 0.1372, 0.1736, 0.1481],
         [0.1326, 0.1586, 0.1361,  ..., 0.1372, 0.1736, 0.1481],
         [0.6021, 0.5241, 0.5916,  ..., 0.5884, 0.4792, 0.5556]],
        [[0.2500, 0.2500, 0.2469,  ..., 0.2500, 0.2500, 0.2493],
         [0.2500, 0.2500, 0.2592,  ..., 0.2500, 0.2500, 0.2521],
         [0.2500, 0.2500, 0.2469,  ..., 0.2500, 0.2500, 0.2493],
         [0.2500, 0.2500, 0.2469,  ..., 0.2500, 0.2500, 0.2493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1407, 0.1188, 0.1222,  ..., 0.1544, 0.2799, 0.1495],
         [0.1457, 0.1188, 0.1222,  ..., 0.1544, 0.1464, 0.1495],
         [0.1407, 0.1188, 0.1222,  ..., 0.1544, 0.1464, 0.1495],
         [0.5728, 0.6435, 0.6335,  ..., 0.5368, 0.4274, 0.5516]],
        [[0.2420, 0.2431, 0.2633,  ..., 0.2312, 0.2192, 0.2796],
         [0.2740, 0.2431, 0.2480,  ..., 0.2386, 0.2680, 0.2401],
         [0.2420, 0.2706, 0.2444,  ..., 0.2990, 0.2935, 0.2401],
         [0.2420, 0.2431, 0.2444,  ..., 0.2312, 0.2192, 0.2401]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 747:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:19:06,035 [Process: 0] Synchronize training processes
2024-08-16 13:19:06,036 [Process: 0] Evaluating...
2024-08-16 13:19:06,038 [Process: 0] EPOCH 747:
2024-08-16 13:19:06,039 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1155, 0.1354, 0.1390,  ..., 0.1133, 0.1458, 0.1200],
         [0.1155, 0.1354, 0.1405,  ..., 0.1133, 0.1458, 0.1200],
         [0.1155, 0.1354, 0.1390,  ..., 0.1133, 0.1458, 0.1200],
         [0.6536, 0.5937, 0.5814,  ..., 0.6600, 0.5626, 0.6400]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2497],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2510],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2497],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1311, 0.1256, 0.1880,  ..., 0.1362, 0.4211, 0.1268],
         [0.1311, 0.1256, 0.1880,  ..., 0.1362, 0.2430, 0.1296],
         [0.1311, 0.1256, 0.1880,  ..., 0.1362, 0.2379, 0.1268],
         [0.6068, 0.6232, 0.4360,  ..., 0.5914, 0.0980, 0.6168]],
        [[0.2449, 0.2500, 0.2500,  ..., 0.2445, 0.2500, 0.2500],
         [0.2606, 0.2500, 0.2500,  ..., 0.2445, 0.2500, 0.2500],
         [0.2496, 0.2500, 0.2500,  ..., 0.2666, 0.2500, 0.2500],
         [0.2449, 0.2500, 0.2500,  ..., 0.2445, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 748:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:19:07,923 [Process: 0] Synchronize training processes
2024-08-16 13:19:07,923 [Process: 0] Evaluating...
2024-08-16 13:19:07,925 [Process: 0] EPOCH 748:
2024-08-16 13:19:07,927 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1437, 0.1642, 0.1364,  ..., 0.1366, 0.0916, 0.1130],
         [0.1437, 0.1642, 0.1427,  ..., 0.1366, 0.0916, 0.1130],
         [0.1437, 0.1642, 0.1364,  ..., 0.1366, 0.0916, 0.1130],
         [0.5688, 0.5074, 0.5845,  ..., 0.5902, 0.7252, 0.6609]],
        [[0.2474, 0.2500, 0.2500,  ..., 0.2495, 0.2500, 0.2500],
         [0.2579, 0.2500, 0.2500,  ..., 0.2619, 0.2500, 0.2500],
         [0.2474, 0.2500, 0.2500,  ..., 0.2443, 0.2500, 0.2500],
         [0.2474, 0.2500, 0.2500,  ..., 0.2443, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1105, 0.1406, 0.1088,  ..., 0.1088, 0.2657, 0.1242],
         [0.1105, 0.1406, 0.1088,  ..., 0.1091, 0.2139, 0.1271],
         [0.1105, 0.1406, 0.1088,  ..., 0.1088, 0.3584, 0.1242],
         [0.6685, 0.5782, 0.6737,  ..., 0.6733, 0.1621, 0.6245]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2483],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2813],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2352],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2352]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 749:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1480, 0.1300, 0.1123,  ..., 0.1551, 0.1340, 0.1287],
         [0.1483, 0.1306, 0.1123,  ..., 0.1555, 0.1340, 0.1287],
         [0.1480, 0.1300, 0.1123,  ..., 0.1551, 0.1340, 0.1287],
         [0.5557, 0.6095, 0.6630,  ..., 0.5343, 0.5981, 0.6140]],
        [[0.2500, 0.2500, 0.2470,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2590,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2470,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2470,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:09,894 [Process: 0] Synchronize training processes
2024-08-16 13:19:09,894 [Process: 0] Evaluating...
2024-08-16 13:19:09,896 [Process: 0] EPOCH 749:
2024-08-16 13:19:09,898 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1330, 0.1271, 0.2020,  ..., 0.1154, 0.2604, 0.0871],
         [0.1330, 0.1271, 0.1828,  ..., 0.1154, 0.2085, 0.0871],
         [0.1330, 0.1271, 0.1788,  ..., 0.1154, 0.3939, 0.0871],
         [0.6010, 0.6188, 0.4365,  ..., 0.6539, 0.1373, 0.7386]],
        [[0.2500, 0.2894, 0.2500,  ..., 0.2485, 0.2500, 0.2500],
         [0.2500, 0.2530, 0.2500,  ..., 0.2485, 0.2500, 0.2500],
         [0.2500, 0.2288, 0.2500,  ..., 0.2546, 0.2500, 0.2500],
         [0.2500, 0.2288, 0.2500,  ..., 0.2485, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 750:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1379, 0.1371, 0.1341,  ..., 0.1578, 0.1562, 0.1473],
         [0.1379, 0.1371, 0.1341,  ..., 0.1578, 0.1562, 0.1473],
         [0.1379, 0.1371, 0.1341,  ..., 0.1578, 0.1562, 0.1473],
         [0.5864, 0.5887, 0.5978,  ..., 0.5266, 0.5313, 0.5580]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2487, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2594, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2459, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2459, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:11,788 [Process: 0] Synchronize training processes
2024-08-16 13:19:11,789 [Process: 0] Evaluating...
2024-08-16 13:19:11,791 [Process: 0] EPOCH 750:
2024-08-16 13:19:11,793 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1446, 0.1023, 0.0956,  ..., 0.1080, 0.1974, 0.1511],
         [0.1446, 0.1023, 0.0956,  ..., 0.1151, 0.1886, 0.1511],
         [0.1446, 0.1023, 0.0956,  ..., 0.1080, 0.3296, 0.1511],
         [0.5661, 0.6930, 0.7131,  ..., 0.6690, 0.2844, 0.5466]],
        [[0.2425, 0.2435, 0.2500,  ..., 0.2500, 0.2500, 0.2338],
         [0.2518, 0.2435, 0.2500,  ..., 0.2500, 0.2500, 0.2338],
         [0.2631, 0.2696, 0.2500,  ..., 0.2500, 0.2500, 0.2987],
         [0.2425, 0.2435, 0.2500,  ..., 0.2500, 0.2500, 0.2338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 751:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1379, 0.1393, 0.1553,  ..., 0.1488, 0.1151, 0.1700],
         [0.1379, 0.1393, 0.1597,  ..., 0.1488, 0.1151, 0.1700],
         [0.1379, 0.1393, 0.1553,  ..., 0.1488, 0.1151, 0.1700],
         [0.5864, 0.5822, 0.5296,  ..., 0.5535, 0.6547, 0.4899]],
        [[0.2489, 0.2500, 0.2484,  ..., 0.2471, 0.2500, 0.2500],
         [0.2534, 0.2500, 0.2548,  ..., 0.2586, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2484,  ..., 0.2471, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2484,  ..., 0.2471, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:13,698 [Process: 0] Synchronize training processes
2024-08-16 13:19:13,699 [Process: 0] Evaluating...
2024-08-16 13:19:13,701 [Process: 0] EPOCH 751:
2024-08-16 13:19:13,703 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:19:15,612 [Process: 0] Synchronize training processes
2024-08-16 13:19:15,612 [Process: 0] Evaluating...
2024-08-16 13:19:15,614 [Process: 0] EPOCH 752:
2024-08-16 13:19:15,616 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1174, 0.1186, 0.1750,  ..., 0.1449, 0.2238, 0.1509],
         [0.1174, 0.1186, 0.1750,  ..., 0.1449, 0.1605, 0.1509],
         [0.1174, 0.1186, 0.1750,  ..., 0.1449, 0.1605, 0.1509],
         [0.6477, 0.6441, 0.4750,  ..., 0.5652, 0.4551, 0.5472]],
        [[0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2560, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 752:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1578, 0.1343, 0.1563,  ..., 0.1281, 0.1522, 0.1702],
         [0.1578, 0.1343, 0.1563,  ..., 0.1281, 0.1522, 0.1702],
         [0.1578, 0.1343, 0.1563,  ..., 0.1281, 0.1522, 0.1702],
         [0.5265, 0.5971, 0.5310,  ..., 0.6157, 0.5434, 0.4894]],
        [[0.2500, 0.2480, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2559, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2480, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2480, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:17,544 [Process: 0] Synchronize training processes
2024-08-16 13:19:17,544 [Process: 0] Evaluating...
2024-08-16 13:19:17,546 [Process: 0] EPOCH 753:
2024-08-16 13:19:17,548 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1277, 0.1172, 0.1229,  ..., 0.1527, 0.2102, 0.1365],
         [0.1277, 0.1172, 0.1229,  ..., 0.1363, 0.2167, 0.1365],
         [0.1277, 0.1172, 0.1229,  ..., 0.1363, 0.2228, 0.1365],
         [0.6170, 0.6483, 0.6314,  ..., 0.5746, 0.3504, 0.5904]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2460, 0.2622, 0.2917],
         [0.2500, 0.2500, 0.2500,  ..., 0.2621, 0.2459, 0.2422],
         [0.2500, 0.2500, 0.2500,  ..., 0.2460, 0.2459, 0.2331],
         [0.2500, 0.2500, 0.2500,  ..., 0.2460, 0.2459, 0.2331]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 753:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1129, 0.1120, 0.1369,  ..., 0.1266, 0.1253, 0.1629],
         [0.1129, 0.1120, 0.1369,  ..., 0.1266, 0.1253, 0.1629],
         [0.1129, 0.1120, 0.1369,  ..., 0.1266, 0.1253, 0.1629],
         [0.6614, 0.6641, 0.5893,  ..., 0.6203, 0.6242, 0.5112]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2469, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2594, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2469, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2469, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:19,522 [Process: 0] Synchronize training processes
2024-08-16 13:19:19,522 [Process: 0] Evaluating...
2024-08-16 13:19:19,524 [Process: 0] EPOCH 754:
2024-08-16 13:19:19,526 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1786, 0.1233, 0.1546,  ..., 0.1527, 0.1531, 0.1599],
         [0.1786, 0.1233, 0.1561,  ..., 0.1442, 0.1531, 0.1599],
         [0.1786, 0.1233, 0.1546,  ..., 0.1442, 0.1531, 0.1599],
         [0.4642, 0.6301, 0.5346,  ..., 0.5589, 0.5408, 0.5203]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2866, 0.2366],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2901, 0.2366],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2117, 0.2902],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2117, 0.2366]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 754:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1301, 0.1474, 0.1562,  ..., 0.1636, 0.1852, 0.1585],
         [0.1301, 0.1474, 0.1562,  ..., 0.1636, 0.1852, 0.1585],
         [0.1301, 0.1474, 0.1562,  ..., 0.1636, 0.1852, 0.1585],
         [0.6098, 0.5578, 0.5315,  ..., 0.5092, 0.4444, 0.5245]],
        [[0.2446, 0.2485, 0.2500,  ..., 0.2496, 0.2458, 0.2483],
         [0.2662, 0.2545, 0.2500,  ..., 0.2513, 0.2626, 0.2550],
         [0.2446, 0.2485, 0.2500,  ..., 0.2496, 0.2458, 0.2483],
         [0.2446, 0.2485, 0.2500,  ..., 0.2496, 0.2458, 0.2483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:21,531 [Process: 0] Synchronize training processes
2024-08-16 13:19:21,532 [Process: 0] Evaluating...
2024-08-16 13:19:21,534 [Process: 0] EPOCH 755:
2024-08-16 13:19:21,536 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1918, 0.1594, 0.1826,  ..., 0.1607, 0.3991, 0.1590],
         [0.1918, 0.1659, 0.1826,  ..., 0.1630, 0.1566, 0.1743],
         [0.1918, 0.1594, 0.1994,  ..., 0.1607, 0.2440, 0.1590],
         [0.4245, 0.5152, 0.4353,  ..., 0.5156, 0.2003, 0.5077]],
        [[0.3168, 0.2000, 0.3347,  ..., 0.2117, 0.2500, 0.2500],
         [0.2407, 0.2000, 0.2377,  ..., 0.2559, 0.2500, 0.2500],
         [0.2346, 0.4001, 0.2864,  ..., 0.3207, 0.2500, 0.2500],
         [0.2079, 0.2000, 0.1412,  ..., 0.2117, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 755:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1215, 0.1583, 0.1598,  ..., 0.1314, 0.1416, 0.1416],
         [0.1215, 0.1583, 0.1598,  ..., 0.1314, 0.1416, 0.1416],
         [0.1215, 0.1583, 0.1598,  ..., 0.1314, 0.1416, 0.1416],
         [0.6356, 0.5252, 0.5205,  ..., 0.6059, 0.5753, 0.5753]],
        [[0.2500, 0.2500, 0.2496,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2512,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2496,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2496,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:23,527 [Process: 0] Synchronize training processes
2024-08-16 13:19:23,527 [Process: 0] Evaluating...
2024-08-16 13:19:23,529 [Process: 0] EPOCH 756:
2024-08-16 13:19:23,532 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0986, 0.1553, 0.1431,  ..., 0.1319, 0.5530, 0.1173],
         [0.0986, 0.1553, 0.1431,  ..., 0.1319, 0.1727, 0.1173],
         [0.0986, 0.1553, 0.1431,  ..., 0.1319, 0.1854, 0.1173],
         [0.7041, 0.5340, 0.5706,  ..., 0.6044, 0.0888, 0.6481]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2480, 0.2440, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2559, 0.2776, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2480, 0.2392, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2480, 0.2392, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 756:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1411, 0.1649, 0.1628,  ..., 0.1406, 0.1063, 0.1747],
         [0.1411, 0.1649, 0.1628,  ..., 0.1406, 0.1063, 0.1786],
         [0.1411, 0.1649, 0.1628,  ..., 0.1406, 0.1063, 0.1747],
         [0.5767, 0.5052, 0.5117,  ..., 0.5783, 0.6810, 0.4721]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:25,451 [Process: 0] Synchronize training processes
2024-08-16 13:19:25,452 [Process: 0] Evaluating...
2024-08-16 13:19:25,454 [Process: 0] EPOCH 757:
2024-08-16 13:19:25,456 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1211, 0.1408, 0.1145,  ..., 0.1316, 0.2922, 0.1433],
         [0.1211, 0.1402, 0.1151,  ..., 0.1316, 0.1816, 0.1594],
         [0.1211, 0.1402, 0.1145,  ..., 0.1316, 0.4378, 0.1433],
         [0.6367, 0.5788, 0.6558,  ..., 0.6053, 0.0884, 0.5539]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2476, 0.2494, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2476, 0.2518, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2571, 0.2494, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2476, 0.2494, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 757:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1561, 0.1527, 0.1261,  ..., 0.1257, 0.1748, 0.1750],
         [0.1561, 0.1527, 0.1291,  ..., 0.1257, 0.1748, 0.1750],
         [0.1561, 0.1527, 0.1261,  ..., 0.1257, 0.1748, 0.1750],
         [0.5318, 0.5418, 0.6187,  ..., 0.6229, 0.4756, 0.4750]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2487, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2538, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2487, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2487, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:27,389 [Process: 0] Synchronize training processes
2024-08-16 13:19:27,390 [Process: 0] Evaluating...
2024-08-16 13:19:27,392 [Process: 0] EPOCH 758:
2024-08-16 13:19:27,394 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1661, 0.1259, 0.1457,  ..., 0.1103, 0.1470, 0.1502],
         [0.1661, 0.1280, 0.1595,  ..., 0.1103, 0.1968, 0.1515],
         [0.1661, 0.1259, 0.1457,  ..., 0.1103, 0.2829, 0.1502],
         [0.5018, 0.6201, 0.5491,  ..., 0.6691, 0.3733, 0.5481]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2442, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2673, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2442, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2442, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 758:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1825, 0.1184, 0.1361,  ..., 0.1413, 0.1487, 0.1628],
         [0.1825, 0.1184, 0.1361,  ..., 0.1413, 0.1487, 0.1628],
         [0.1825, 0.1184, 0.1361,  ..., 0.1413, 0.1487, 0.1628],
         [0.4526, 0.6447, 0.5918,  ..., 0.5762, 0.5540, 0.5117]],
        [[0.2499, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2503, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2499, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2499, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:29,318 [Process: 0] Synchronize training processes
2024-08-16 13:19:29,319 [Process: 0] Evaluating...
2024-08-16 13:19:29,321 [Process: 0] EPOCH 759:
2024-08-16 13:19:29,323 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1483, 0.1168, 0.0903,  ..., 0.1322, 0.1522, 0.1362],
         [0.1483, 0.1177, 0.0903,  ..., 0.1335, 0.1595, 0.1362],
         [0.1483, 0.1168, 0.0903,  ..., 0.1322, 0.2080, 0.1362],
         [0.5550, 0.6487, 0.7290,  ..., 0.6022, 0.4802, 0.5913]],
        [[0.2500, 0.2429, 0.2500,  ..., 0.2500, 0.2433, 0.2500],
         [0.2500, 0.2713, 0.2500,  ..., 0.2500, 0.2701, 0.2500],
         [0.2500, 0.2429, 0.2500,  ..., 0.2500, 0.2433, 0.2500],
         [0.2500, 0.2429, 0.2500,  ..., 0.2500, 0.2433, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 759:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1549, 0.1200, 0.1120,  ..., 0.1161, 0.1476, 0.1646],
         [0.1549, 0.1200, 0.1120,  ..., 0.1161, 0.1476, 0.1646],
         [0.1549, 0.1200, 0.1120,  ..., 0.1161, 0.1476, 0.1646],
         [0.5353, 0.6400, 0.6639,  ..., 0.6516, 0.5572, 0.5062]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:31,241 [Process: 0] Synchronize training processes
2024-08-16 13:19:31,242 [Process: 0] Evaluating...
2024-08-16 13:19:31,244 [Process: 0] EPOCH 760:
2024-08-16 13:19:31,246 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1293, 0.1587, 0.1159,  ..., 0.1130, 0.4987, 0.1066],
         [0.1293, 0.1587, 0.1159,  ..., 0.1130, 0.1992, 0.1066],
         [0.1293, 0.1587, 0.1159,  ..., 0.1130, 0.2421, 0.1066],
         [0.6121, 0.5239, 0.6523,  ..., 0.6609, 0.0600, 0.6803]],
        [[0.2487, 0.2500, 0.2500,  ..., 0.2500, 0.2454, 0.2500],
         [0.2487, 0.2500, 0.2500,  ..., 0.2500, 0.2454, 0.2500],
         [0.2538, 0.2500, 0.2500,  ..., 0.2500, 0.2639, 0.2500],
         [0.2487, 0.2500, 0.2500,  ..., 0.2500, 0.2454, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 760:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1753, 0.1801, 0.1611,  ..., 0.1706, 0.1678, 0.1283],
         [0.1753, 0.1801, 0.1611,  ..., 0.1706, 0.1678, 0.1283],
         [0.1753, 0.1801, 0.1611,  ..., 0.1706, 0.1678, 0.1283],
         [0.4742, 0.4596, 0.5168,  ..., 0.4883, 0.4965, 0.6150]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:33,138 [Process: 0] Synchronize training processes
2024-08-16 13:19:33,139 [Process: 0] Evaluating...
2024-08-16 13:19:33,141 [Process: 0] EPOCH 761:
2024-08-16 13:19:33,143 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1389, 0.1419, 0.1303,  ..., 0.1344, 0.1657, 0.1495],
         [0.1389, 0.1419, 0.1366,  ..., 0.1344, 0.1657, 0.1495],
         [0.1389, 0.1419, 0.1303,  ..., 0.1344, 0.2439, 0.1495],
         [0.5833, 0.5742, 0.6027,  ..., 0.5967, 0.4248, 0.5515]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2474, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2579, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2474, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2474, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 761:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1033, 0.1622, 0.1385,  ..., 0.1155, 0.1650, 0.1504],
         [0.1033, 0.1622, 0.1385,  ..., 0.1155, 0.1650, 0.1504],
         [0.1033, 0.1622, 0.1385,  ..., 0.1155, 0.1650, 0.1504],
         [0.6902, 0.5135, 0.5846,  ..., 0.6536, 0.5050, 0.5489]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2494, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2519, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2494, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2494, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:35,043 [Process: 0] Synchronize training processes
2024-08-16 13:19:35,044 [Process: 0] Evaluating...
2024-08-16 13:19:35,046 [Process: 0] EPOCH 762:
2024-08-16 13:19:35,048 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1820, 0.1405, 0.1479,  ..., 0.1616, 0.1734, 0.1352],
         [0.1750, 0.1180, 0.1479,  ..., 0.1616, 0.1734, 0.1352],
         [0.1703, 0.1170, 0.1479,  ..., 0.1616, 0.1734, 0.1352],
         [0.4727, 0.6245, 0.5564,  ..., 0.5153, 0.4799, 0.5945]],
        [[0.2348, 0.2500, 0.2500,  ..., 0.2516, 0.2500, 0.2500],
         [0.2956, 0.2500, 0.2500,  ..., 0.2495, 0.2500, 0.2500],
         [0.2348, 0.2500, 0.2500,  ..., 0.2495, 0.2500, 0.2500],
         [0.2348, 0.2500, 0.2500,  ..., 0.2495, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 762:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1693, 0.1451, 0.1662,  ..., 0.1972, 0.1053, 0.1397],
         [0.1693, 0.1451, 0.1662,  ..., 0.1972, 0.1053, 0.1397],
         [0.1693, 0.1451, 0.1662,  ..., 0.1972, 0.1053, 0.1397],
         [0.4920, 0.5648, 0.5015,  ..., 0.4083, 0.6840, 0.5808]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2487],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2538],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2487],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1238, 0.1153, 0.1587,  ..., 0.1259, 0.1165, 0.1398],
         [0.1238, 0.1153, 0.1587,  ..., 0.1259, 0.1165, 0.1431],
         [0.1238, 0.1153, 0.1587,  ..., 0.1259, 0.1165, 0.1398],
         [0.6287, 0.6542, 0.5239,  ..., 0.6222, 0.6505, 0.5773]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2852, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2559, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2294, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2294, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:36,934 [Process: 0] Synchronize training processes
2024-08-16 13:19:36,935 [Process: 0] Evaluating...
2024-08-16 13:19:36,937 [Process: 0] EPOCH 763:
2024-08-16 13:19:36,939 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 763:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1202, 0.1482, 0.1826,  ..., 0.1779, 0.1526, 0.1338],
         [0.1202, 0.1482, 0.1826,  ..., 0.1779, 0.1526, 0.1338],
         [0.1202, 0.1482, 0.1826,  ..., 0.1779, 0.1526, 0.1338],
         [0.6393, 0.5555, 0.4521,  ..., 0.4662, 0.5423, 0.5987]],
        [[0.2482, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2555, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2482, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2482, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1139, 0.1187, 0.1144,  ..., 0.1354, 0.1107, 0.1363],
         [0.1139, 0.1187, 0.1144,  ..., 0.1354, 0.1107, 0.1363],
         [0.1139, 0.1187, 0.1144,  ..., 0.1354, 0.1107, 0.1363],
         [0.6584, 0.6439, 0.6567,  ..., 0.5937, 0.6679, 0.5912]],
        [[0.2500, 0.3124, 0.2500,  ..., 0.2931, 0.2500, 0.2631],
         [0.2500, 0.2654, 0.2500,  ..., 0.2584, 0.2500, 0.2762],
         [0.2500, 0.2111, 0.2500,  ..., 0.2243, 0.2500, 0.2303],
         [0.2500, 0.2111, 0.2500,  ..., 0.2243, 0.2500, 0.2303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:38,826 [Process: 0] Synchronize training processes
2024-08-16 13:19:38,826 [Process: 0] Evaluating...
2024-08-16 13:19:38,828 [Process: 0] EPOCH 764:
2024-08-16 13:19:38,830 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 764:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1462, 0.1822, 0.1665,  ..., 0.1725, 0.1348, 0.1432],
         [0.1462, 0.1822, 0.1665,  ..., 0.1725, 0.1348, 0.1432],
         [0.1462, 0.1822, 0.1665,  ..., 0.1725, 0.1348, 0.1432],
         [0.5615, 0.4535, 0.5006,  ..., 0.4825, 0.5956, 0.5703]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1303, 0.1585, 0.1136,  ..., 0.1308, 0.1699, 0.1317],
         [0.1303, 0.1620, 0.1136,  ..., 0.1308, 0.1699, 0.1282],
         [0.1303, 0.1585, 0.1136,  ..., 0.1308, 0.1699, 0.1282],
         [0.6092, 0.5211, 0.6591,  ..., 0.6077, 0.4904, 0.6119]],
        [[0.2500, 0.2500, 0.2260,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.3255,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2247,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2238,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 765:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:19:40,749 [Process: 0] Synchronize training processes
2024-08-16 13:19:40,750 [Process: 0] Evaluating...
2024-08-16 13:19:40,752 [Process: 0] EPOCH 765:
2024-08-16 13:19:40,754 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1673, 0.1236, 0.0974,  ..., 0.1971, 0.1761, 0.1331],
         [0.1673, 0.1236, 0.0974,  ..., 0.1971, 0.1761, 0.1331],
         [0.1673, 0.1236, 0.0974,  ..., 0.1971, 0.1761, 0.1331],
         [0.4981, 0.6291, 0.7079,  ..., 0.4086, 0.4718, 0.6006]],
        [[0.2500, 0.2456, 0.2500,  ..., 0.2447, 0.2500, 0.2500],
         [0.2500, 0.2633, 0.2500,  ..., 0.2658, 0.2500, 0.2500],
         [0.2500, 0.2456, 0.2500,  ..., 0.2447, 0.2500, 0.2500],
         [0.2500, 0.2456, 0.2500,  ..., 0.2447, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1711, 0.1192, 0.1255,  ..., 0.1507, 0.3211, 0.1327],
         [0.1711, 0.1192, 0.1255,  ..., 0.1507, 0.2112, 0.1327],
         [0.1711, 0.1192, 0.1255,  ..., 0.1507, 0.2515, 0.1327],
         [0.4868, 0.6424, 0.6234,  ..., 0.5480, 0.2161, 0.6018]],
        [[0.2500, 0.2500, 0.2461,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2616,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2461,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2461,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 766:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:19:42,649 [Process: 0] Synchronize training processes
2024-08-16 13:19:42,649 [Process: 0] Evaluating...
2024-08-16 13:19:42,651 [Process: 0] EPOCH 766:
2024-08-16 13:19:42,653 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1166, 0.1079, 0.1628,  ..., 0.1406, 0.1348, 0.1215],
         [0.1166, 0.1079, 0.1686,  ..., 0.1406, 0.1348, 0.1222],
         [0.1166, 0.1079, 0.1628,  ..., 0.1406, 0.1348, 0.1215],
         [0.6501, 0.6762, 0.5059,  ..., 0.5781, 0.5957, 0.6348]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2564, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2479, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2479, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2479, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1474, 0.0998, 0.1625,  ..., 0.1081, 0.2029, 0.1384],
         [0.1474, 0.0988, 0.1625,  ..., 0.1093, 0.1263, 0.1384],
         [0.1474, 0.1035, 0.1625,  ..., 0.1081, 0.5471, 0.1384],
         [0.5577, 0.6980, 0.5125,  ..., 0.6746, 0.1236, 0.5847]],
        [[0.2500, 0.2410, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2410, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2770, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2410, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 767:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:19:44,550 [Process: 0] Synchronize training processes
2024-08-16 13:19:44,550 [Process: 0] Evaluating...
2024-08-16 13:19:44,552 [Process: 0] EPOCH 767:
2024-08-16 13:19:44,554 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1515, 0.1492, 0.1364,  ..., 0.1289, 0.1402, 0.1506],
         [0.1521, 0.1492, 0.1364,  ..., 0.1289, 0.1435, 0.1506],
         [0.1515, 0.1492, 0.1364,  ..., 0.1289, 0.1402, 0.1506],
         [0.5448, 0.5523, 0.5907,  ..., 0.6133, 0.5761, 0.5483]],
        [[0.2500, 0.2482, 0.2486,  ..., 0.2500, 0.2500, 0.2468],
         [0.2500, 0.2554, 0.2542,  ..., 0.2500, 0.2500, 0.2595],
         [0.2500, 0.2482, 0.2486,  ..., 0.2500, 0.2500, 0.2468],
         [0.2500, 0.2482, 0.2486,  ..., 0.2500, 0.2500, 0.2468]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1091, 0.1757, 0.1400,  ..., 0.1312, 0.1286, 0.1130],
         [0.1109, 0.1757, 0.1400,  ..., 0.1312, 0.1286, 0.1130],
         [0.1091, 0.1757, 0.1400,  ..., 0.1312, 0.1286, 0.1130],
         [0.6710, 0.4730, 0.5801,  ..., 0.6064, 0.6142, 0.6610]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2403],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2403],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2792],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2403]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 768:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:19:46,434 [Process: 0] Synchronize training processes
2024-08-16 13:19:46,434 [Process: 0] Evaluating...
2024-08-16 13:19:46,436 [Process: 0] EPOCH 768:
2024-08-16 13:19:46,438 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1315, 0.1068, 0.1603,  ..., 0.1256, 0.1539, 0.1008],
         [0.1315, 0.1068, 0.1603,  ..., 0.1256, 0.1539, 0.1008],
         [0.1315, 0.1068, 0.1603,  ..., 0.1256, 0.1539, 0.1008],
         [0.6055, 0.6795, 0.5191,  ..., 0.6232, 0.5383, 0.6977]],
        [[0.2500, 0.2461, 0.2500,  ..., 0.2480, 0.2497, 0.2500],
         [0.2500, 0.2619, 0.2500,  ..., 0.2560, 0.2508, 0.2500],
         [0.2500, 0.2460, 0.2500,  ..., 0.2480, 0.2497, 0.2500],
         [0.2500, 0.2460, 0.2500,  ..., 0.2480, 0.2497, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1224, 0.1499, 0.1764,  ..., 0.1467, 0.3438, 0.1626],
         [0.1292, 0.1499, 0.1764,  ..., 0.1645, 0.1991, 0.1626],
         [0.1224, 0.1499, 0.1764,  ..., 0.1467, 0.2520, 0.1626],
         [0.6260, 0.5504, 0.4707,  ..., 0.5421, 0.2050, 0.5121]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2470, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2470, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2591, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2470, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 769:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:19:48,308 [Process: 0] Synchronize training processes
2024-08-16 13:19:48,309 [Process: 0] Evaluating...
2024-08-16 13:19:48,311 [Process: 0] EPOCH 769:
2024-08-16 13:19:48,313 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1406, 0.1490, 0.1517,  ..., 0.1526, 0.1351, 0.1683],
         [0.1406, 0.1490, 0.1517,  ..., 0.1526, 0.1351, 0.1683],
         [0.1406, 0.1490, 0.1517,  ..., 0.1526, 0.1351, 0.1683],
         [0.5781, 0.5529, 0.5449,  ..., 0.5421, 0.5948, 0.4952]],
        [[0.2500, 0.2511, 0.2500,  ..., 0.2475, 0.2519, 0.2500],
         [0.2500, 0.2548, 0.2500,  ..., 0.2575, 0.2494, 0.2500],
         [0.2500, 0.2470, 0.2500,  ..., 0.2475, 0.2494, 0.2500],
         [0.2500, 0.2470, 0.2500,  ..., 0.2475, 0.2494, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1086, 0.1030, 0.1341,  ..., 0.1527, 0.2581, 0.1196],
         [0.1086, 0.1046, 0.1341,  ..., 0.1527, 0.1835, 0.1313],
         [0.1086, 0.1030, 0.1341,  ..., 0.1527, 0.3882, 0.1196],
         [0.6741, 0.6893, 0.5978,  ..., 0.5418, 0.1702, 0.6295]],
        [[0.2500, 0.2500, 0.2415,  ..., 0.2563, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2755,  ..., 0.2423, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2415,  ..., 0.2621, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2415,  ..., 0.2394, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 770:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:19:50,199 [Process: 0] Synchronize training processes
2024-08-16 13:19:50,200 [Process: 0] Evaluating...
2024-08-16 13:19:50,201 [Process: 0] EPOCH 770:
2024-08-16 13:19:50,203 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1454, 0.1703, 0.1670,  ..., 0.1965, 0.1291, 0.1532],
         [0.1454, 0.1703, 0.1670,  ..., 0.1965, 0.1291, 0.1532],
         [0.1454, 0.1703, 0.1670,  ..., 0.1965, 0.1291, 0.1532],
         [0.5637, 0.4890, 0.4989,  ..., 0.4105, 0.6127, 0.5404]],
        [[0.2500, 0.2445, 0.2500,  ..., 0.2491, 0.2496, 0.2500],
         [0.2500, 0.2666, 0.2500,  ..., 0.2527, 0.2511, 0.2500],
         [0.2500, 0.2445, 0.2500,  ..., 0.2491, 0.2496, 0.2500],
         [0.2500, 0.2445, 0.2500,  ..., 0.2491, 0.2496, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1545, 0.1577, 0.1416,  ..., 0.1150, 0.1423, 0.1362],
         [0.1687, 0.1577, 0.1441,  ..., 0.1192, 0.1423, 0.1460],
         [0.1545, 0.1577, 0.1416,  ..., 0.1150, 0.1743, 0.1362],
         [0.5222, 0.5268, 0.5727,  ..., 0.6509, 0.5411, 0.5817]],
        [[0.2511, 0.2500, 0.2643,  ..., 0.2500, 0.2500, 0.2743],
         [0.2496, 0.2500, 0.2504,  ..., 0.2500, 0.2500, 0.2419],
         [0.2496, 0.2500, 0.2604,  ..., 0.2500, 0.2500, 0.2419],
         [0.2496, 0.2500, 0.2250,  ..., 0.2500, 0.2500, 0.2419]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 771:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:19:52,115 [Process: 0] Synchronize training processes
2024-08-16 13:19:52,115 [Process: 0] Evaluating...
2024-08-16 13:19:52,117 [Process: 0] EPOCH 771:
2024-08-16 13:19:52,119 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1251, 0.1655, 0.1547,  ..., 0.1930, 0.1231, 0.1525],
         [0.1251, 0.1655, 0.1547,  ..., 0.1930, 0.1231, 0.1525],
         [0.1251, 0.1655, 0.1547,  ..., 0.1930, 0.1231, 0.1525],
         [0.6246, 0.5036, 0.5360,  ..., 0.4211, 0.6308, 0.5425]],
        [[0.2789, 0.2500, 0.2493,  ..., 0.2492, 0.2493, 0.2502],
         [0.2404, 0.2500, 0.2520,  ..., 0.2523, 0.2520, 0.2503],
         [0.2403, 0.2500, 0.2493,  ..., 0.2492, 0.2493, 0.2497],
         [0.2403, 0.2500, 0.2493,  ..., 0.2492, 0.2493, 0.2497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1267, 0.1077, 0.1444,  ..., 0.1404, 0.1623, 0.0989],
         [0.1271, 0.1077, 0.1444,  ..., 0.1404, 0.1623, 0.1050],
         [0.1267, 0.1077, 0.1444,  ..., 0.1404, 0.1623, 0.0989],
         [0.6195, 0.6768, 0.5667,  ..., 0.5789, 0.5130, 0.6972]],
        [[0.3027, 0.2500, 0.2500,  ..., 0.2901, 0.2672, 0.2478],
         [0.2340, 0.2500, 0.2500,  ..., 0.2548, 0.2648, 0.2565],
         [0.2316, 0.2500, 0.2500,  ..., 0.2407, 0.2340, 0.2478],
         [0.2316, 0.2500, 0.2500,  ..., 0.2144, 0.2340, 0.2478]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 772:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1378, 0.1191, 0.1570,  ..., 0.1714, 0.1624, 0.1362],
         [0.1378, 0.1191, 0.1570,  ..., 0.1714, 0.1624, 0.1362],
         [0.1378, 0.1191, 0.1570,  ..., 0.1714, 0.1624, 0.1362],
         [0.5865, 0.6426, 0.5289,  ..., 0.4859, 0.5129, 0.5915]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2498],
         [0.2500, 0.2500, 0.2500,  ..., 0.2506, 0.2500, 0.2572],
         [0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2465],
         [0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2465]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:54,018 [Process: 0] Synchronize training processes
2024-08-16 13:19:54,018 [Process: 0] Evaluating...
2024-08-16 13:19:54,020 [Process: 0] EPOCH 772:
2024-08-16 13:19:54,022 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1624, 0.1227, 0.1581,  ..., 0.1412, 0.1563, 0.1672],
         [0.1624, 0.1227, 0.1613,  ..., 0.1412, 0.1563, 0.1672],
         [0.1624, 0.1227, 0.1581,  ..., 0.1412, 0.1648, 0.1672],
         [0.5129, 0.6318, 0.5224,  ..., 0.5764, 0.5227, 0.4983]],
        [[0.2500, 0.2500, 0.2408,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2776,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2408,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2408,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 773:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1727, 0.1438, 0.1420,  ..., 0.1741, 0.1490, 0.1694],
         [0.1727, 0.1438, 0.1420,  ..., 0.1741, 0.1490, 0.1694],
         [0.1727, 0.1438, 0.1420,  ..., 0.1741, 0.1490, 0.1694],
         [0.4818, 0.5686, 0.5741,  ..., 0.4777, 0.5531, 0.4917]],
        [[0.2500, 0.2448, 0.2499,  ..., 0.2601, 0.2687, 0.2472],
         [0.2500, 0.2656, 0.2503,  ..., 0.2601, 0.2454, 0.2584],
         [0.2500, 0.2448, 0.2499,  ..., 0.2399, 0.2430, 0.2472],
         [0.2500, 0.2448, 0.2499,  ..., 0.2399, 0.2430, 0.2472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:55,917 [Process: 0] Synchronize training processes
2024-08-16 13:19:55,917 [Process: 0] Evaluating...
2024-08-16 13:19:55,919 [Process: 0] EPOCH 773:
2024-08-16 13:19:55,921 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1698, 0.1703, 0.1190,  ..., 0.1231, 0.1241, 0.1542],
         [0.1698, 0.1703, 0.1190,  ..., 0.1231, 0.1241, 0.1542],
         [0.1698, 0.1703, 0.1190,  ..., 0.1231, 0.1241, 0.1542],
         [0.4905, 0.4892, 0.6430,  ..., 0.6308, 0.6277, 0.5374]],
        [[0.2500, 0.2508, 0.2500,  ..., 0.2500, 0.2490, 0.2458],
         [0.2500, 0.3072, 0.2500,  ..., 0.2500, 0.2530, 0.2627],
         [0.2500, 0.2210, 0.2500,  ..., 0.2500, 0.2490, 0.2458],
         [0.2500, 0.2210, 0.2500,  ..., 0.2500, 0.2490, 0.2458]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 774:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1625, 0.1526, 0.1259,  ..., 0.1549, 0.1436, 0.1207],
         [0.1625, 0.1526, 0.1259,  ..., 0.1549, 0.1436, 0.1207],
         [0.1625, 0.1526, 0.1259,  ..., 0.1549, 0.1436, 0.1207],
         [0.5124, 0.5421, 0.6222,  ..., 0.5352, 0.5693, 0.6379]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:57,808 [Process: 0] Synchronize training processes
2024-08-16 13:19:57,808 [Process: 0] Evaluating...
2024-08-16 13:19:57,810 [Process: 0] EPOCH 774:
2024-08-16 13:19:57,812 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1142, 0.1118, 0.1158,  ..., 0.1427, 0.3840, 0.1186],
         [0.1142, 0.1118, 0.1158,  ..., 0.1427, 0.2192, 0.1186],
         [0.1142, 0.1118, 0.1158,  ..., 0.1427, 0.2272, 0.1186],
         [0.6574, 0.6647, 0.6525,  ..., 0.5719, 0.1696, 0.6443]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 775:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1382, 0.1410, 0.1013,  ..., 0.1117, 0.1452, 0.1618],
         [0.1382, 0.1424, 0.1013,  ..., 0.1117, 0.1537, 0.1681],
         [0.1382, 0.1410, 0.1013,  ..., 0.1117, 0.1452, 0.1618],
         [0.5853, 0.5756, 0.6960,  ..., 0.6650, 0.5559, 0.5083]],
        [[0.2497, 0.2477, 0.2500,  ..., 0.2500, 0.2500, 0.2488],
         [0.2508, 0.2568, 0.2501,  ..., 0.2500, 0.2500, 0.2536],
         [0.2497, 0.2477, 0.2500,  ..., 0.2500, 0.2500, 0.2488],
         [0.2497, 0.2477, 0.2500,  ..., 0.2500, 0.2500, 0.2488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:19:59,695 [Process: 0] Synchronize training processes
2024-08-16 13:19:59,695 [Process: 0] Evaluating...
2024-08-16 13:19:59,697 [Process: 0] EPOCH 775:
2024-08-16 13:19:59,699 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:20:01,576 [Process: 0] Synchronize training processes
2024-08-16 13:20:01,576 [Process: 0] Evaluating...
2024-08-16 13:20:01,578 [Process: 0] EPOCH 776:
2024-08-16 13:20:01,580 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1256, 0.1304, 0.0990,  ..., 0.1687, 0.1774, 0.1356],
         [0.1256, 0.1304, 0.0990,  ..., 0.1687, 0.1523, 0.1356],
         [0.1256, 0.1375, 0.0990,  ..., 0.1687, 0.3377, 0.1356],
         [0.6232, 0.6017, 0.7029,  ..., 0.4940, 0.3326, 0.5931]],
        [[0.2500, 0.2491, 0.2330,  ..., 0.2548, 0.2500, 0.2500],
         [0.2500, 0.2491, 0.3011,  ..., 0.2484, 0.2500, 0.2500],
         [0.2500, 0.2526, 0.2330,  ..., 0.2484, 0.2500, 0.2500],
         [0.2500, 0.2491, 0.2330,  ..., 0.2484, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 776:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1444, 0.1123, 0.1500,  ..., 0.1108, 0.1228, 0.1300],
         [0.1444, 0.1123, 0.1500,  ..., 0.1108, 0.1279, 0.1300],
         [0.1444, 0.1123, 0.1500,  ..., 0.1108, 0.1228, 0.1300],
         [0.5669, 0.6630, 0.5501,  ..., 0.6676, 0.6265, 0.6099]],
        [[0.2500, 0.2500, 0.2473,  ..., 0.2500, 0.2500, 0.2480],
         [0.2500, 0.2500, 0.2582,  ..., 0.2500, 0.2500, 0.2559],
         [0.2500, 0.2500, 0.2473,  ..., 0.2500, 0.2500, 0.2480],
         [0.2500, 0.2500, 0.2473,  ..., 0.2500, 0.2500, 0.2480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:20:03,487 [Process: 0] Synchronize training processes
2024-08-16 13:20:03,488 [Process: 0] Evaluating...
2024-08-16 13:20:03,490 [Process: 0] EPOCH 777:
2024-08-16 13:20:03,491 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1252, 0.1208, 0.1495,  ..., 0.1139, 0.1109, 0.1833],
         [0.1252, 0.1208, 0.1495,  ..., 0.1169, 0.1319, 0.1833],
         [0.1252, 0.1208, 0.1495,  ..., 0.1136, 0.1109, 0.1833],
         [0.6244, 0.6375, 0.5515,  ..., 0.6555, 0.6462, 0.4500]],
        [[0.2393, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2821, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2393, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2393, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 777:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1421, 0.1582, 0.1882,  ..., 0.1579, 0.1482, 0.1164],
         [0.1421, 0.1582, 0.1891,  ..., 0.1579, 0.1482, 0.1244],
         [0.1421, 0.1582, 0.1882,  ..., 0.1579, 0.1482, 0.1164],
         [0.5738, 0.5254, 0.4344,  ..., 0.5262, 0.5555, 0.6429]],
        [[0.2500, 0.2481, 0.2497,  ..., 0.2471, 0.2500, 0.2484],
         [0.2500, 0.2556, 0.2509,  ..., 0.2587, 0.2500, 0.2549],
         [0.2500, 0.2481, 0.2497,  ..., 0.2471, 0.2500, 0.2484],
         [0.2500, 0.2481, 0.2497,  ..., 0.2471, 0.2500, 0.2484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:20:05,373 [Process: 0] Synchronize training processes
2024-08-16 13:20:05,374 [Process: 0] Evaluating...
2024-08-16 13:20:05,376 [Process: 0] EPOCH 778:
2024-08-16 13:20:05,378 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1550, 0.1607, 0.1536,  ..., 0.1347, 0.1310, 0.1288],
         [0.1580, 0.1633, 0.1536,  ..., 0.1347, 0.1310, 0.1288],
         [0.1550, 0.1607, 0.1536,  ..., 0.1347, 0.1310, 0.1288],
         [0.5320, 0.5154, 0.5391,  ..., 0.5960, 0.6069, 0.6135]],
        [[0.2463, 0.2500, 0.2500,  ..., 0.2500, 0.2498, 0.2150],
         [0.2564, 0.2500, 0.2500,  ..., 0.2500, 0.2505, 0.2674],
         [0.2511, 0.2500, 0.2500,  ..., 0.2500, 0.2498, 0.3027],
         [0.2463, 0.2500, 0.2500,  ..., 0.2500, 0.2498, 0.2150]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 778:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1268, 0.1432, 0.1656,  ..., 0.1212, 0.1898, 0.1588],
         [0.1268, 0.1432, 0.1701,  ..., 0.1212, 0.1898, 0.1710],
         [0.1268, 0.1432, 0.1656,  ..., 0.1212, 0.1898, 0.1588],
         [0.6196, 0.5703, 0.4988,  ..., 0.6365, 0.4307, 0.5114]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2517],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:20:07,280 [Process: 0] Synchronize training processes
2024-08-16 13:20:07,281 [Process: 0] Evaluating...
2024-08-16 13:20:07,282 [Process: 0] EPOCH 779:
2024-08-16 13:20:07,284 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1188, 0.1335, 0.1672,  ..., 0.1742, 0.1735, 0.1721],
         [0.1212, 0.1335, 0.1672,  ..., 0.1742, 0.1735, 0.1721],
         [0.1188, 0.1335, 0.1672,  ..., 0.1742, 0.1735, 0.1721],
         [0.6412, 0.5995, 0.4984,  ..., 0.4775, 0.4794, 0.4836]],
        [[0.2293, 0.2500, 0.2500,  ..., 0.2500, 0.2285, 0.2500],
         [0.2907, 0.2500, 0.2500,  ..., 0.2500, 0.3009, 0.2500],
         [0.2626, 0.2500, 0.2500,  ..., 0.2500, 0.2420, 0.2500],
         [0.2174, 0.2500, 0.2500,  ..., 0.2500, 0.2285, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 779:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1300, 0.1035, 0.1399,  ..., 0.1588, 0.1254, 0.1063],
         [0.1311, 0.1035, 0.1399,  ..., 0.1588, 0.1254, 0.1063],
         [0.1300, 0.1035, 0.1399,  ..., 0.1588, 0.1254, 0.1063],
         [0.6090, 0.6894, 0.5802,  ..., 0.5235, 0.6239, 0.6810]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:20:09,161 [Process: 0] Synchronize training processes
2024-08-16 13:20:09,161 [Process: 0] Evaluating...
2024-08-16 13:20:09,163 [Process: 0] EPOCH 780:
2024-08-16 13:20:09,165 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1623, 0.1760, 0.1437,  ..., 0.1143, 0.1672, 0.1132],
         [0.1623, 0.1760, 0.1437,  ..., 0.1143, 0.1539, 0.1132],
         [0.1623, 0.1760, 0.1437,  ..., 0.1143, 0.1539, 0.1132],
         [0.5131, 0.4719, 0.5688,  ..., 0.6572, 0.5250, 0.6603]],
        [[0.2246, 0.2439, 0.2500,  ..., 0.2762, 0.2524, 0.2732],
         [0.2407, 0.2805, 0.2500,  ..., 0.2725, 0.2492, 0.2498],
         [0.3100, 0.2378, 0.2500,  ..., 0.2256, 0.2492, 0.2385],
         [0.2246, 0.2378, 0.2500,  ..., 0.2256, 0.2492, 0.2385]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 780:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1552, 0.1750, 0.1530,  ..., 0.1395, 0.1623, 0.1586],
         [0.1552, 0.1750, 0.1530,  ..., 0.1395, 0.1623, 0.1586],
         [0.1552, 0.1750, 0.1530,  ..., 0.1395, 0.1623, 0.1586],
         [0.5343, 0.4751, 0.5411,  ..., 0.5816, 0.5131, 0.5243]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2518],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1475, 0.1299, 0.1835,  ..., 0.1379, 0.1344, 0.1376],
         [0.1475, 0.1299, 0.1836,  ..., 0.1546, 0.1401, 0.1399],
         [0.1475, 0.1299, 0.1835,  ..., 0.1379, 0.1344, 0.1376],
         [0.5574, 0.6104, 0.4494,  ..., 0.5696, 0.5911, 0.5850]],
        [[0.2500, 0.2500, 0.2429,  ..., 0.2447, 0.2379, 0.2540],
         [0.2500, 0.2500, 0.2561,  ..., 0.2447, 0.2379, 0.2487],
         [0.2500, 0.2500, 0.2612,  ..., 0.2660, 0.2864, 0.2487],
         [0.2500, 0.2500, 0.2399,  ..., 0.2447, 0.2379, 0.2487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:20:11,047 [Process: 0] Synchronize training processes
2024-08-16 13:20:11,047 [Process: 0] Evaluating...
2024-08-16 13:20:11,049 [Process: 0] EPOCH 781:
2024-08-16 13:20:11,051 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 781:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1680, 0.1724, 0.1476,  ..., 0.1396, 0.1294, 0.1262],
         [0.1680, 0.1724, 0.1476,  ..., 0.1396, 0.1294, 0.1262],
         [0.1680, 0.1724, 0.1476,  ..., 0.1396, 0.1294, 0.1262],
         [0.4959, 0.4829, 0.5571,  ..., 0.5813, 0.6118, 0.6213]],
        [[0.2500, 0.2516, 0.2500,  ..., 0.2498, 0.2500, 0.2500],
         [0.2500, 0.2550, 0.2500,  ..., 0.2506, 0.2500, 0.2500],
         [0.2500, 0.2467, 0.2500,  ..., 0.2498, 0.2500, 0.2500],
         [0.2500, 0.2467, 0.2500,  ..., 0.2498, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1582, 0.1257, 0.1788,  ..., 0.1409, 0.1799, 0.1239],
         [0.1582, 0.1185, 0.1812,  ..., 0.1409, 0.1726, 0.1384],
         [0.1582, 0.1174, 0.1775,  ..., 0.1409, 0.1726, 0.1239],
         [0.5254, 0.6384, 0.4624,  ..., 0.5772, 0.4749, 0.6138]],
        [[0.2500, 0.2409, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2532, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2650, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2409, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:20:12,943 [Process: 0] Synchronize training processes
2024-08-16 13:20:12,944 [Process: 0] Evaluating...
2024-08-16 13:20:12,946 [Process: 0] EPOCH 782:
2024-08-16 13:20:12,947 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 782:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1782, 0.1547, 0.1318,  ..., 0.1844, 0.1225, 0.1285],
         [0.1785, 0.1575, 0.1334,  ..., 0.1945, 0.1285, 0.1397],
         [0.1782, 0.1547, 0.1318,  ..., 0.1844, 0.1225, 0.1285],
         [0.4651, 0.5330, 0.6030,  ..., 0.4366, 0.6265, 0.6033]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1468, 0.1403, 0.1555,  ..., 0.1471, 0.1519, 0.1605],
         [0.1468, 0.1419, 0.1555,  ..., 0.1471, 0.1627, 0.1605],
         [0.1468, 0.1403, 0.1555,  ..., 0.1471, 0.1519, 0.1605],
         [0.5597, 0.5776, 0.5336,  ..., 0.5587, 0.5334, 0.5185]],
        [[0.2452, 0.2500, 0.2495,  ..., 0.2441, 0.2669, 0.2500],
         [0.2643, 0.2500, 0.2516,  ..., 0.2676, 0.2444, 0.2500],
         [0.2452, 0.2500, 0.2495,  ..., 0.2441, 0.2444, 0.2500],
         [0.2452, 0.2500, 0.2495,  ..., 0.2441, 0.2444, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 783:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:20:14,881 [Process: 0] Synchronize training processes
2024-08-16 13:20:14,881 [Process: 0] Evaluating...
2024-08-16 13:20:14,883 [Process: 0] EPOCH 783:
2024-08-16 13:20:14,885 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1102, 0.1684, 0.1238,  ..., 0.1714, 0.1413, 0.1402],
         [0.1102, 0.1684, 0.1238,  ..., 0.1714, 0.1413, 0.1402],
         [0.1102, 0.1684, 0.1238,  ..., 0.1714, 0.1413, 0.1402],
         [0.6695, 0.4947, 0.6287,  ..., 0.4858, 0.5762, 0.5795]],
        [[0.2500, 0.2498, 0.2490,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2505, 0.2529,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2490,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2490,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1053, 0.1279, 0.1649,  ..., 0.1395, 0.1222, 0.1614],
         [0.1055, 0.1313, 0.1649,  ..., 0.1421, 0.1486, 0.1734],
         [0.1053, 0.1279, 0.1649,  ..., 0.1395, 0.1131, 0.1614],
         [0.6838, 0.6130, 0.5052,  ..., 0.5788, 0.6161, 0.5038]],
        [[0.2500, 0.2500, 0.2335,  ..., 0.2500, 0.2415, 0.2476],
         [0.2500, 0.2500, 0.2942,  ..., 0.2500, 0.2755, 0.2571],
         [0.2500, 0.2500, 0.2387,  ..., 0.2500, 0.2415, 0.2476],
         [0.2500, 0.2500, 0.2335,  ..., 0.2500, 0.2415, 0.2476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 784:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:20:16,761 [Process: 0] Synchronize training processes
2024-08-16 13:20:16,761 [Process: 0] Evaluating...
2024-08-16 13:20:16,763 [Process: 0] EPOCH 784:
2024-08-16 13:20:16,765 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1108, 0.1206, 0.1788,  ..., 0.1653, 0.1364, 0.1216],
         [0.1127, 0.1271, 0.1788,  ..., 0.1653, 0.1364, 0.1216],
         [0.1108, 0.1206, 0.1788,  ..., 0.1653, 0.1364, 0.1216],
         [0.6657, 0.6317, 0.4635,  ..., 0.5041, 0.5909, 0.6352]],
        [[0.2500, 0.2500, 0.2489,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2533,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2489,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2489,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1128, 0.1123, 0.1592,  ..., 0.1598, 0.2478, 0.1139],
         [0.1185, 0.1123, 0.1755,  ..., 0.1598, 0.1574, 0.1151],
         [0.1128, 0.1159, 0.1592,  ..., 0.1598, 0.1295, 0.1139],
         [0.6558, 0.6595, 0.5062,  ..., 0.5206, 0.4653, 0.6572]],
        [[0.2500, 0.2500, 0.2478,  ..., 0.2500, 0.2500, 0.2413],
         [0.2500, 0.2500, 0.2565,  ..., 0.2500, 0.2500, 0.2762],
         [0.2500, 0.2500, 0.2478,  ..., 0.2500, 0.2500, 0.2413],
         [0.2500, 0.2500, 0.2478,  ..., 0.2500, 0.2500, 0.2413]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 785:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:20:18,682 [Process: 0] Synchronize training processes
2024-08-16 13:20:18,682 [Process: 0] Evaluating...
2024-08-16 13:20:18,684 [Process: 0] EPOCH 785:
2024-08-16 13:20:18,686 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1364, 0.1583, 0.1176,  ..., 0.1324, 0.1298, 0.1487],
         [0.1364, 0.1672, 0.1176,  ..., 0.1324, 0.1298, 0.1487],
         [0.1364, 0.1583, 0.1176,  ..., 0.1324, 0.1298, 0.1487],
         [0.5907, 0.5161, 0.6473,  ..., 0.6029, 0.6106, 0.5540]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1291, 0.1388, 0.1502,  ..., 0.0972, 0.1482, 0.1237],
         [0.1291, 0.1388, 0.1620,  ..., 0.0972, 0.1482, 0.1237],
         [0.1291, 0.1388, 0.1502,  ..., 0.0972, 0.1482, 0.1237],
         [0.6126, 0.5835, 0.5376,  ..., 0.7085, 0.5554, 0.6288]],
        [[0.2500, 0.2929, 0.3004,  ..., 0.2500, 0.2642, 0.2500],
         [0.2500, 0.2682, 0.2487,  ..., 0.2500, 0.2518, 0.2500],
         [0.2500, 0.2366, 0.2295,  ..., 0.2500, 0.2566, 0.2500],
         [0.2500, 0.2023, 0.2214,  ..., 0.2500, 0.2275, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 786:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:20:20,576 [Process: 0] Synchronize training processes
2024-08-16 13:20:20,576 [Process: 0] Evaluating...
2024-08-16 13:20:20,578 [Process: 0] EPOCH 786:
2024-08-16 13:20:20,580 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1231, 0.1305, 0.1445,  ..., 0.1614, 0.1436, 0.1365],
         [0.1231, 0.1305, 0.1445,  ..., 0.1614, 0.1436, 0.1365],
         [0.1231, 0.1305, 0.1445,  ..., 0.1614, 0.1436, 0.1365],
         [0.6308, 0.6086, 0.5665,  ..., 0.5158, 0.5692, 0.5905]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1507, 0.1220, 0.1645,  ..., 0.1123, 0.1522, 0.1318],
         [0.1531, 0.1320, 0.1645,  ..., 0.1252, 0.1547, 0.1439],
         [0.1507, 0.1179, 0.1645,  ..., 0.1123, 0.1522, 0.1318],
         [0.5456, 0.6281, 0.5066,  ..., 0.6502, 0.5408, 0.5924]],
        [[0.2500, 0.2500, 0.2433,  ..., 0.2535, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2701,  ..., 0.2488, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2433,  ..., 0.2488, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2433,  ..., 0.2488, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 787:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:20:22,479 [Process: 0] Synchronize training processes
2024-08-16 13:20:22,479 [Process: 0] Evaluating...
2024-08-16 13:20:22,481 [Process: 0] EPOCH 787:
2024-08-16 13:20:22,483 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1020, 0.1346, 0.1648,  ..., 0.1643, 0.1951, 0.1431],
         [0.1060, 0.1373, 0.1648,  ..., 0.1643, 0.1951, 0.1431],
         [0.1020, 0.1346, 0.1648,  ..., 0.1643, 0.1951, 0.1431],
         [0.6900, 0.5934, 0.5055,  ..., 0.5070, 0.4147, 0.5706]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1647, 0.1286, 0.1226,  ..., 0.1701, 0.1720, 0.1504],
         [0.1714, 0.1286, 0.1226,  ..., 0.1786, 0.1720, 0.1553],
         [0.1647, 0.1286, 0.1226,  ..., 0.1701, 0.2166, 0.1504],
         [0.4992, 0.6143, 0.6322,  ..., 0.4812, 0.4394, 0.5439]],
        [[0.2586, 0.2465, 0.2500,  ..., 0.2779, 0.2500, 0.2500],
         [0.2471, 0.2605, 0.2500,  ..., 0.2407, 0.2500, 0.2500],
         [0.2471, 0.2465, 0.2500,  ..., 0.2407, 0.2500, 0.2500],
         [0.2471, 0.2465, 0.2500,  ..., 0.2407, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 788:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:20:24,383 [Process: 0] Synchronize training processes
2024-08-16 13:20:24,383 [Process: 0] Evaluating...
2024-08-16 13:20:24,385 [Process: 0] EPOCH 788:
2024-08-16 13:20:24,387 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1109, 0.1278, 0.1351,  ..., 0.1709, 0.1309, 0.1401],
         [0.1109, 0.1278, 0.1351,  ..., 0.1709, 0.1309, 0.1401],
         [0.1109, 0.1278, 0.1351,  ..., 0.1709, 0.1309, 0.1401],
         [0.6674, 0.6167, 0.5948,  ..., 0.4873, 0.6073, 0.5796]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1361, 0.1525, 0.1512,  ..., 0.1573, 0.1691, 0.1342],
         [0.1361, 0.1354, 0.1512,  ..., 0.1573, 0.1691, 0.1342],
         [0.1361, 0.1354, 0.1512,  ..., 0.1573, 0.2128, 0.1342],
         [0.5917, 0.5767, 0.5465,  ..., 0.5282, 0.4490, 0.5973]],
        [[0.2500, 0.2968, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2344, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2344, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2344, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 789:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:20:26,279 [Process: 0] Synchronize training processes
2024-08-16 13:20:26,279 [Process: 0] Evaluating...
2024-08-16 13:20:26,281 [Process: 0] EPOCH 789:
2024-08-16 13:20:26,283 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1754, 0.1217, 0.1272,  ..., 0.1333, 0.1797, 0.1413],
         [0.1754, 0.1217, 0.1272,  ..., 0.1333, 0.1797, 0.1413],
         [0.1754, 0.1217, 0.1272,  ..., 0.1333, 0.1797, 0.1413],
         [0.4738, 0.6348, 0.6183,  ..., 0.6001, 0.4608, 0.5761]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0855, 0.1432, 0.1100,  ..., 0.1270, 0.1948, 0.1293],
         [0.0855, 0.1244, 0.1100,  ..., 0.1270, 0.1948, 0.1293],
         [0.0855, 0.1244, 0.1100,  ..., 0.1270, 0.1948, 0.1293],
         [0.7435, 0.6080, 0.6699,  ..., 0.6190, 0.4157, 0.6120]],
        [[0.2589, 0.2500, 0.2381,  ..., 0.2606, 0.2480, 0.2500],
         [0.2754, 0.2500, 0.2858,  ..., 0.2433, 0.2561, 0.2500],
         [0.2329, 0.2500, 0.2381,  ..., 0.2542, 0.2480, 0.2500],
         [0.2329, 0.2500, 0.2381,  ..., 0.2420, 0.2480, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 790:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:20:28,217 [Process: 0] Synchronize training processes
2024-08-16 13:20:28,217 [Process: 0] Evaluating...
2024-08-16 13:20:28,219 [Process: 0] EPOCH 790:
2024-08-16 13:20:28,221 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1040, 0.1783, 0.1363,  ..., 0.1509, 0.1757, 0.1749],
         [0.1040, 0.1796, 0.1363,  ..., 0.1509, 0.1757, 0.1749],
         [0.1040, 0.1783, 0.1363,  ..., 0.1509, 0.1757, 0.1749],
         [0.6880, 0.4637, 0.5912,  ..., 0.5472, 0.4730, 0.4754]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1517, 0.1502, 0.1479,  ..., 0.1492, 0.1747, 0.1441],
         [0.1517, 0.1508, 0.1479,  ..., 0.1492, 0.1747, 0.1441],
         [0.1517, 0.1502, 0.1479,  ..., 0.1492, 0.1747, 0.1441],
         [0.5450, 0.5487, 0.5564,  ..., 0.5525, 0.4760, 0.5677]],
        [[0.2500, 0.2599, 0.2500,  ..., 0.2500, 0.2476, 0.2500],
         [0.2500, 0.2913, 0.2500,  ..., 0.2500, 0.2573, 0.2500],
         [0.2500, 0.2244, 0.2500,  ..., 0.2500, 0.2476, 0.2500],
         [0.2500, 0.2244, 0.2500,  ..., 0.2500, 0.2476, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 791:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1110, 0.1544, 0.1338,  ..., 0.1385, 0.1578, 0.1375],
         [0.1110, 0.1544, 0.1338,  ..., 0.1385, 0.1578, 0.1375],
         [0.1110, 0.1544, 0.1338,  ..., 0.1385, 0.1578, 0.1375],
         [0.6671, 0.5368, 0.5986,  ..., 0.5845, 0.5266, 0.5875]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
2024-08-16 13:20:30,164 [Process: 0] Synchronize training processes
2024-08-16 13:20:30,164 [Process: 0] Evaluating...
2024-08-16 13:20:30,166 [Process: 0] EPOCH 791:
2024-08-16 13:20:30,168 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1346, 0.1871, 0.0952,  ..., 0.1721, 0.2468, 0.1648],
         [0.1346, 0.1871, 0.0952,  ..., 0.1721, 0.1887, 0.1648],
         [0.1407, 0.1871, 0.0952,  ..., 0.1721, 0.1790, 0.1648],
         [0.5901, 0.4388, 0.7144,  ..., 0.4838, 0.3855, 0.5056]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 792:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1571, 0.1390, 0.1138,  ..., 0.1630, 0.1657, 0.1545],
         [0.1571, 0.1390, 0.1138,  ..., 0.1630, 0.1657, 0.1545],
         [0.1571, 0.1390, 0.1138,  ..., 0.1630, 0.1657, 0.1545],
         [0.5287, 0.5831, 0.6587,  ..., 0.5109, 0.5030, 0.5366]],
        [[0.2500, 0.2500, 0.2482,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2555,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2482,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2482,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:20:32,083 [Process: 0] Synchronize training processes
2024-08-16 13:20:32,084 [Process: 0] Evaluating...
2024-08-16 13:20:32,085 [Process: 0] EPOCH 792:
2024-08-16 13:20:32,088 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1834, 0.1486, 0.1541,  ..., 0.1207, 0.1625, 0.1310],
         [0.1623, 0.1443, 0.1541,  ..., 0.1207, 0.1625, 0.1310],
         [0.1623, 0.1443, 0.1541,  ..., 0.1207, 0.1637, 0.1310],
         [0.4921, 0.5627, 0.5377,  ..., 0.6380, 0.5114, 0.6070]],
        [[0.2500, 0.2471, 0.2500,  ..., 0.2419, 0.2510, 0.2436],
         [0.2500, 0.2609, 0.2500,  ..., 0.2744, 0.2760, 0.2691],
         [0.2500, 0.2805, 0.2500,  ..., 0.2419, 0.2365, 0.2436],
         [0.2500, 0.2115, 0.2500,  ..., 0.2419, 0.2365, 0.2436]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 793:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1427, 0.1719, 0.1528,  ..., 0.0998, 0.1469, 0.1472],
         [0.1445, 0.1736, 0.1528,  ..., 0.0998, 0.1469, 0.1472],
         [0.1427, 0.1719, 0.1528,  ..., 0.0998, 0.1469, 0.1472],
         [0.5702, 0.4826, 0.5417,  ..., 0.7006, 0.5594, 0.5584]],
        [[0.2489, 0.2500, 0.2497,  ..., 0.2491, 0.2500, 0.2500],
         [0.2534, 0.2500, 0.2508,  ..., 0.2528, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2497,  ..., 0.2491, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2497,  ..., 0.2491, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:20:33,975 [Process: 0] Synchronize training processes
2024-08-16 13:20:33,976 [Process: 0] Evaluating...
2024-08-16 13:20:33,978 [Process: 0] EPOCH 793:
2024-08-16 13:20:33,980 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1170, 0.1317, 0.1052,  ..., 0.0989, 0.1506, 0.1276],
         [0.1170, 0.1317, 0.1052,  ..., 0.0989, 0.1506, 0.1276],
         [0.1170, 0.1317, 0.1052,  ..., 0.0989, 0.1553, 0.1276],
         [0.6489, 0.6049, 0.6843,  ..., 0.7032, 0.5435, 0.6171]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2542, 0.2333],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2486, 0.2531],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2486, 0.2804],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2486, 0.2333]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 794:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1757, 0.1247, 0.1802,  ..., 0.1413, 0.1041, 0.1465],
         [0.1757, 0.1286, 0.1802,  ..., 0.1413, 0.1041, 0.1535],
         [0.1757, 0.1247, 0.1802,  ..., 0.1413, 0.1041, 0.1465],
         [0.4728, 0.6220, 0.4593,  ..., 0.5760, 0.6877, 0.5534]],
        [[0.2497, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2508, 0.2506, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2497, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2497, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:20:35,876 [Process: 0] Synchronize training processes
2024-08-16 13:20:35,876 [Process: 0] Evaluating...
2024-08-16 13:20:35,878 [Process: 0] EPOCH 794:
2024-08-16 13:20:35,880 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1376, 0.1367, 0.1142,  ..., 0.1368, 0.1240, 0.0911],
         [0.1405, 0.1367, 0.1142,  ..., 0.1368, 0.1240, 0.0911],
         [0.1376, 0.1367, 0.1210,  ..., 0.1368, 0.1240, 0.0911],
         [0.5844, 0.5899, 0.6506,  ..., 0.5897, 0.6279, 0.7267]],
        [[0.2284, 0.2526, 0.2519,  ..., 0.2595, 0.2500, 0.2419],
         [0.2608, 0.2491, 0.2495,  ..., 0.2678, 0.2500, 0.2674],
         [0.2824, 0.2491, 0.2543,  ..., 0.2363, 0.2500, 0.2487],
         [0.2284, 0.2491, 0.2443,  ..., 0.2363, 0.2500, 0.2419]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 795:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1541, 0.1446, 0.1304,  ..., 0.1208, 0.1352, 0.1238],
         [0.1541, 0.1446, 0.1304,  ..., 0.1208, 0.1352, 0.1277],
         [0.1541, 0.1446, 0.1304,  ..., 0.1208, 0.1352, 0.1238],
         [0.5377, 0.5661, 0.6088,  ..., 0.6375, 0.5945, 0.6248]],
        [[0.2500, 0.2500, 0.2492,  ..., 0.2484, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2524,  ..., 0.2549, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2492,  ..., 0.2484, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2492,  ..., 0.2484, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:20:37,771 [Process: 0] Synchronize training processes
2024-08-16 13:20:37,771 [Process: 0] Evaluating...
2024-08-16 13:20:37,773 [Process: 0] EPOCH 795:
2024-08-16 13:20:37,775 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:20:39,658 [Process: 0] Synchronize training processes
2024-08-16 13:20:39,659 [Process: 0] Evaluating...
2024-08-16 13:20:39,660 [Process: 0] EPOCH 796:
2024-08-16 13:20:39,662 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1267, 0.1762, 0.1283,  ..., 0.1382, 0.1579, 0.1185],
         [0.1267, 0.1762, 0.1283,  ..., 0.1382, 0.1601, 0.1185],
         [0.1267, 0.1762, 0.1283,  ..., 0.1382, 0.1579, 0.1185],
         [0.6199, 0.4713, 0.6150,  ..., 0.5855, 0.5242, 0.6446]],
        [[0.2493, 0.2500, 0.2478,  ..., 0.2611, 0.2500, 0.2499],
         [0.2520, 0.2500, 0.2732,  ..., 0.2463, 0.2500, 0.2503],
         [0.2493, 0.2500, 0.2466,  ..., 0.2463, 0.2500, 0.2499],
         [0.2493, 0.2500, 0.2325,  ..., 0.2463, 0.2500, 0.2499]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 796:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1480, 0.1228, 0.1542,  ..., 0.1555, 0.1187, 0.1502],
         [0.1480, 0.1287, 0.1578,  ..., 0.1555, 0.1187, 0.1502],
         [0.1480, 0.1228, 0.1542,  ..., 0.1555, 0.1187, 0.1502],
         [0.5560, 0.6257, 0.5338,  ..., 0.5334, 0.6440, 0.5495]],
        [[0.2495, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2516, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:20:41,543 [Process: 0] Synchronize training processes
2024-08-16 13:20:41,543 [Process: 0] Evaluating...
2024-08-16 13:20:41,545 [Process: 0] EPOCH 797:
2024-08-16 13:20:41,547 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1317, 0.1437, 0.1676,  ..., 0.1521, 0.1299, 0.1485],
         [0.1320, 0.1437, 0.1461,  ..., 0.1521, 0.1299, 0.1468],
         [0.1317, 0.1437, 0.1461,  ..., 0.1521, 0.1299, 0.1468],
         [0.6045, 0.5688, 0.5402,  ..., 0.5438, 0.6104, 0.5579]],
        [[0.2499, 0.2500, 0.2564,  ..., 0.2500, 0.2500, 0.2500],
         [0.2504, 0.2500, 0.2604,  ..., 0.2500, 0.2500, 0.2500],
         [0.2499, 0.2500, 0.2416,  ..., 0.2500, 0.2500, 0.2500],
         [0.2499, 0.2500, 0.2416,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 797:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1810, 0.1186, 0.1322,  ..., 0.1165, 0.1317, 0.1581],
         [0.1810, 0.1186, 0.1322,  ..., 0.1165, 0.1317, 0.1581],
         [0.1810, 0.1186, 0.1322,  ..., 0.1165, 0.1317, 0.1581],
         [0.4571, 0.6443, 0.6033,  ..., 0.6504, 0.6050, 0.5258]],
        [[0.2500, 0.2486, 0.2500,  ..., 0.2500, 0.2495, 0.2500],
         [0.2500, 0.2543, 0.2500,  ..., 0.2500, 0.2515, 0.2500],
         [0.2500, 0.2486, 0.2500,  ..., 0.2500, 0.2495, 0.2500],
         [0.2500, 0.2486, 0.2500,  ..., 0.2500, 0.2495, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:20:43,440 [Process: 0] Synchronize training processes
2024-08-16 13:20:43,440 [Process: 0] Evaluating...
2024-08-16 13:20:43,442 [Process: 0] EPOCH 798:
2024-08-16 13:20:43,444 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1105, 0.1078, 0.1440,  ..., 0.1168, 0.1015, 0.1215],
         [0.1105, 0.1078, 0.1351,  ..., 0.1168, 0.1070, 0.1215],
         [0.1105, 0.1078, 0.1351,  ..., 0.1168, 0.1241, 0.1215],
         [0.6686, 0.6765, 0.5857,  ..., 0.6496, 0.6675, 0.6354]],
        [[0.2463, 0.2500, 0.2790,  ..., 0.2500, 0.2500, 0.2488],
         [0.2672, 0.2500, 0.2762,  ..., 0.2500, 0.2500, 0.2535],
         [0.2432, 0.2500, 0.2224,  ..., 0.2500, 0.2500, 0.2488],
         [0.2432, 0.2500, 0.2224,  ..., 0.2500, 0.2500, 0.2488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 798:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1302, 0.1509, 0.1660,  ..., 0.1509, 0.1391, 0.1257],
         [0.1302, 0.1509, 0.1660,  ..., 0.1556, 0.1391, 0.1257],
         [0.1302, 0.1509, 0.1660,  ..., 0.1509, 0.1391, 0.1257],
         [0.6094, 0.5474, 0.5020,  ..., 0.5427, 0.5826, 0.6228]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2483],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2552],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2483],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:20:45,341 [Process: 0] Synchronize training processes
2024-08-16 13:20:45,342 [Process: 0] Evaluating...
2024-08-16 13:20:45,344 [Process: 0] EPOCH 799:
2024-08-16 13:20:45,346 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1302, 0.1313, 0.1439,  ..., 0.1541, 0.1598, 0.1348],
         [0.1302, 0.1313, 0.1439,  ..., 0.1541, 0.1838, 0.1348],
         [0.1302, 0.1313, 0.1439,  ..., 0.1541, 0.1598, 0.1348],
         [0.6095, 0.6062, 0.5684,  ..., 0.5377, 0.4967, 0.5956]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2446],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2663],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2446],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2446]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 799:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1357, 0.1216, 0.1180,  ..., 0.1491, 0.1291, 0.1329],
         [0.1357, 0.1216, 0.1180,  ..., 0.1491, 0.1291, 0.1329],
         [0.1357, 0.1216, 0.1180,  ..., 0.1491, 0.1291, 0.1329],
         [0.5930, 0.6351, 0.6459,  ..., 0.5526, 0.6128, 0.6014]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2469, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2594, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2469, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2469, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:20:47,230 [Process: 0] Synchronize training processes
2024-08-16 13:20:47,231 [Process: 0] Evaluating...
2024-08-16 13:20:47,233 [Process: 0] EPOCH 800:
2024-08-16 13:20:47,235 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1815, 0.1239, 0.1911,  ..., 0.1125, 0.2062, 0.1268],
         [0.1815, 0.1296, 0.1625,  ..., 0.1283, 0.2062, 0.1268],
         [0.1815, 0.1239, 0.1596,  ..., 0.1125, 0.2062, 0.1268],
         [0.4556, 0.6225, 0.4868,  ..., 0.6467, 0.3815, 0.6196]],
        [[0.2500, 0.2297, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2683, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2723, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2297, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 800:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1637, 0.1458, 0.1595,  ..., 0.1521, 0.1579, 0.1291],
         [0.1637, 0.1458, 0.1595,  ..., 0.1521, 0.1579, 0.1291],
         [0.1637, 0.1458, 0.1595,  ..., 0.1521, 0.1579, 0.1291],
         [0.5090, 0.5626, 0.5216,  ..., 0.5437, 0.5264, 0.6127]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2487, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2540, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2487, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2487, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1310, 0.1463, 0.1581,  ..., 0.1713, 0.1258, 0.1739],
         [0.1325, 0.1463, 0.1639,  ..., 0.1793, 0.1258, 0.1905],
         [0.1310, 0.1463, 0.1581,  ..., 0.1713, 0.1258, 0.1739],
         [0.6055, 0.5611, 0.5199,  ..., 0.4780, 0.6227, 0.4617]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2453, 0.2460, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2641, 0.2619, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2453, 0.2460, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2453, 0.2460, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:20:49,128 [Process: 0] Synchronize training processes
2024-08-16 13:20:49,129 [Process: 0] Evaluating...
2024-08-16 13:20:49,131 [Process: 0] EPOCH 801:
2024-08-16 13:20:49,132 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 801:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1942, 0.1720, 0.1471,  ..., 0.1655, 0.1469, 0.1445],
         [0.1942, 0.1720, 0.1471,  ..., 0.1655, 0.1469, 0.1445],
         [0.1942, 0.1720, 0.1471,  ..., 0.1655, 0.1469, 0.1445],
         [0.4175, 0.4840, 0.5588,  ..., 0.5034, 0.5594, 0.5664]],
        [[0.2500, 0.2497, 0.2494,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2510, 0.2519,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2497, 0.2494,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2497, 0.2494,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1339, 0.1313, 0.1480,  ..., 0.1259, 0.1877, 0.1465],
         [0.1343, 0.1313, 0.1646,  ..., 0.1259, 0.1877, 0.1465],
         [0.1339, 0.1313, 0.1480,  ..., 0.1259, 0.1877, 0.1484],
         [0.5979, 0.6060, 0.5393,  ..., 0.6223, 0.4368, 0.5586]],
        [[0.2500, 0.2492, 0.2497,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2524, 0.2509,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2492, 0.2497,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2492, 0.2497,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 802:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:20:51,021 [Process: 0] Synchronize training processes
2024-08-16 13:20:51,021 [Process: 0] Evaluating...
2024-08-16 13:20:51,023 [Process: 0] EPOCH 802:
2024-08-16 13:20:51,025 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1444, 0.1564, 0.1854,  ..., 0.1628, 0.1316, 0.1436],
         [0.1444, 0.1564, 0.1854,  ..., 0.1628, 0.1316, 0.1436],
         [0.1444, 0.1564, 0.1854,  ..., 0.1628, 0.1316, 0.1436],
         [0.5667, 0.5307, 0.4439,  ..., 0.5116, 0.6052, 0.5692]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2508, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1043, 0.1091, 0.1882,  ..., 0.1629, 0.1710, 0.1074],
         [0.1043, 0.1091, 0.1905,  ..., 0.1629, 0.1710, 0.1074],
         [0.1043, 0.1091, 0.1882,  ..., 0.1629, 0.1710, 0.1074],
         [0.6871, 0.6728, 0.4331,  ..., 0.5113, 0.4871, 0.6778]],
        [[0.2845, 0.2452, 0.2716,  ..., 0.2500, 0.2537, 0.2500],
         [0.2604, 0.2643, 0.2428,  ..., 0.2500, 0.2488, 0.2500],
         [0.2568, 0.2452, 0.2428,  ..., 0.2500, 0.2488, 0.2500],
         [0.1983, 0.2452, 0.2428,  ..., 0.2500, 0.2488, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 803:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:20:52,914 [Process: 0] Synchronize training processes
2024-08-16 13:20:52,914 [Process: 0] Evaluating...
2024-08-16 13:20:52,916 [Process: 0] EPOCH 803:
2024-08-16 13:20:52,918 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1412, 0.1428, 0.1253,  ..., 0.1332, 0.1433, 0.1542],
         [0.1418, 0.1428, 0.1253,  ..., 0.1332, 0.1433, 0.1542],
         [0.1412, 0.1428, 0.1253,  ..., 0.1332, 0.1433, 0.1542],
         [0.5758, 0.5715, 0.6241,  ..., 0.6003, 0.5702, 0.5373]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2487, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2538, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2487, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2487, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1585, 0.1212, 0.1279,  ..., 0.1471, 0.2071, 0.1348],
         [0.1714, 0.1212, 0.1300,  ..., 0.1471, 0.2071, 0.1385],
         [0.1585, 0.1212, 0.1279,  ..., 0.1471, 0.2071, 0.1348],
         [0.5117, 0.6363, 0.6142,  ..., 0.5588, 0.3787, 0.5919]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2604, 0.2485, 0.2427],
         [0.2500, 0.2500, 0.2500,  ..., 0.2465, 0.2544, 0.2720],
         [0.2500, 0.2500, 0.2500,  ..., 0.2465, 0.2485, 0.2427],
         [0.2500, 0.2500, 0.2500,  ..., 0.2465, 0.2485, 0.2427]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 804:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:20:54,795 [Process: 0] Synchronize training processes
2024-08-16 13:20:54,795 [Process: 0] Evaluating...
2024-08-16 13:20:54,797 [Process: 0] EPOCH 804:
2024-08-16 13:20:54,799 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1512, 0.1692, 0.1711,  ..., 0.1277, 0.1449, 0.1273],
         [0.1512, 0.1692, 0.1711,  ..., 0.1277, 0.1449, 0.1273],
         [0.1512, 0.1692, 0.1711,  ..., 0.1277, 0.1449, 0.1273],
         [0.5463, 0.4924, 0.4868,  ..., 0.6168, 0.5653, 0.6181]],
        [[0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2505, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1905, 0.1259, 0.1649,  ..., 0.1191, 0.1181, 0.1227],
         [0.1905, 0.1260, 0.1649,  ..., 0.1191, 0.1181, 0.1227],
         [0.1905, 0.1259, 0.1649,  ..., 0.1191, 0.1181, 0.1227],
         [0.4284, 0.6222, 0.5053,  ..., 0.6426, 0.6456, 0.6319]],
        [[0.2500, 0.2467, 0.2500,  ..., 0.2480, 0.2487, 0.2500],
         [0.2500, 0.2467, 0.2500,  ..., 0.2480, 0.2502, 0.2500],
         [0.2500, 0.2598, 0.2500,  ..., 0.2559, 0.2524, 0.2500],
         [0.2500, 0.2467, 0.2500,  ..., 0.2480, 0.2487, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 805:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:20:56,677 [Process: 0] Synchronize training processes
2024-08-16 13:20:56,677 [Process: 0] Evaluating...
2024-08-16 13:20:56,679 [Process: 0] EPOCH 805:
2024-08-16 13:20:56,681 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1639, 0.1440, 0.1553,  ..., 0.1066, 0.1678, 0.1393],
         [0.1639, 0.1440, 0.1553,  ..., 0.1066, 0.1678, 0.1393],
         [0.1639, 0.1440, 0.1553,  ..., 0.1066, 0.1678, 0.1393],
         [0.5082, 0.5681, 0.5341,  ..., 0.6801, 0.4965, 0.5820]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1497, 0.1446, 0.1260,  ..., 0.1278, 0.1044, 0.1540],
         [0.1497, 0.1502, 0.1260,  ..., 0.1391, 0.1044, 0.1540],
         [0.1497, 0.1529, 0.1260,  ..., 0.1278, 0.1044, 0.1540],
         [0.5509, 0.5522, 0.6219,  ..., 0.6052, 0.6867, 0.5380]],
        [[0.2455, 0.2500, 0.2913,  ..., 0.2500, 0.2417, 0.2424],
         [0.2635, 0.2500, 0.2464,  ..., 0.2500, 0.2456, 0.2727],
         [0.2455, 0.2500, 0.2378,  ..., 0.2500, 0.2709, 0.2424],
         [0.2455, 0.2500, 0.2245,  ..., 0.2500, 0.2417, 0.2424]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 806:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:20:58,579 [Process: 0] Synchronize training processes
2024-08-16 13:20:58,580 [Process: 0] Evaluating...
2024-08-16 13:20:58,582 [Process: 0] EPOCH 806:
2024-08-16 13:20:58,584 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1494, 0.1574, 0.1055,  ..., 0.1641, 0.1141, 0.1055],
         [0.1494, 0.1574, 0.1055,  ..., 0.1641, 0.1141, 0.1055],
         [0.1494, 0.1574, 0.1055,  ..., 0.1641, 0.1141, 0.1055],
         [0.5517, 0.5277, 0.6834,  ..., 0.5076, 0.6578, 0.6835]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1186, 0.1249, 0.1691,  ..., 0.1139, 0.2268, 0.1189],
         [0.1226, 0.1286, 0.1742,  ..., 0.1139, 0.1667, 0.1189],
         [0.1186, 0.1249, 0.1691,  ..., 0.1139, 0.2396, 0.1189],
         [0.6402, 0.6216, 0.4876,  ..., 0.6582, 0.3669, 0.6434]],
        [[0.2500, 0.2410, 0.2416,  ..., 0.2754, 0.2500, 0.2500],
         [0.2500, 0.2633, 0.2751,  ..., 0.2488, 0.2500, 0.2500],
         [0.2500, 0.2546, 0.2416,  ..., 0.2382, 0.2500, 0.2500],
         [0.2500, 0.2410, 0.2416,  ..., 0.2377, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 807:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:21:00,462 [Process: 0] Synchronize training processes
2024-08-16 13:21:00,462 [Process: 0] Evaluating...
2024-08-16 13:21:00,464 [Process: 0] EPOCH 807:
2024-08-16 13:21:00,466 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1667, 0.1733, 0.1805,  ..., 0.1064, 0.1464, 0.1461],
         [0.1667, 0.1733, 0.1805,  ..., 0.1064, 0.1464, 0.1461],
         [0.1667, 0.1733, 0.1805,  ..., 0.1064, 0.1464, 0.1461],
         [0.4998, 0.4800, 0.4585,  ..., 0.6808, 0.5608, 0.5616]],
        [[0.2500, 0.2480, 0.2500,  ..., 0.2497, 0.2500, 0.2500],
         [0.2500, 0.2561, 0.2500,  ..., 0.2508, 0.2500, 0.2500],
         [0.2500, 0.2480, 0.2500,  ..., 0.2497, 0.2500, 0.2500],
         [0.2500, 0.2480, 0.2500,  ..., 0.2497, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1246, 0.1518, 0.1668,  ..., 0.1355, 0.2025, 0.1328],
         [0.1246, 0.1518, 0.1706,  ..., 0.1355, 0.2248, 0.1328],
         [0.1246, 0.1518, 0.1668,  ..., 0.1355, 0.1739, 0.1328],
         [0.6261, 0.5445, 0.4959,  ..., 0.5935, 0.3988, 0.6016]],
        [[0.2500, 0.2500, 0.2364,  ..., 0.2509, 0.2500, 0.2454],
         [0.2500, 0.2500, 0.2909,  ..., 0.2497, 0.2500, 0.2639],
         [0.2500, 0.2500, 0.2364,  ..., 0.2497, 0.2500, 0.2454],
         [0.2500, 0.2500, 0.2364,  ..., 0.2497, 0.2500, 0.2454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 808:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:21:02,363 [Process: 0] Synchronize training processes
2024-08-16 13:21:02,364 [Process: 0] Evaluating...
2024-08-16 13:21:02,366 [Process: 0] EPOCH 808:
2024-08-16 13:21:02,368 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1151, 0.1606, 0.1594,  ..., 0.0989, 0.1354, 0.1407],
         [0.1151, 0.1606, 0.1594,  ..., 0.0989, 0.1354, 0.1407],
         [0.1151, 0.1606, 0.1594,  ..., 0.0989, 0.1354, 0.1407],
         [0.6546, 0.5183, 0.5219,  ..., 0.7034, 0.5938, 0.5780]],
        [[0.2500, 0.2487, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2540, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2487, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2487, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1436, 0.1502, 0.1201,  ..., 0.1287, 0.2316, 0.1689],
         [0.1436, 0.1502, 0.1219,  ..., 0.1287, 0.1524, 0.1689],
         [0.1436, 0.1502, 0.1201,  ..., 0.1287, 0.1643, 0.1689],
         [0.5692, 0.5494, 0.6378,  ..., 0.6140, 0.4517, 0.4932]],
        [[0.2384, 0.2333, 0.2785,  ..., 0.2500, 0.2500, 0.2487],
         [0.2656, 0.3000, 0.2405,  ..., 0.2500, 0.2500, 0.2540],
         [0.2577, 0.2333, 0.2405,  ..., 0.2500, 0.2500, 0.2487],
         [0.2384, 0.2333, 0.2405,  ..., 0.2500, 0.2500, 0.2487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 809:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1806, 0.1461, 0.1406,  ..., 0.1342, 0.1036, 0.1592],
         [0.1806, 0.1461, 0.1461,  ..., 0.1342, 0.1036, 0.1592],
         [0.1806, 0.1461, 0.1406,  ..., 0.1342, 0.1036, 0.1592],
         [0.4582, 0.5616, 0.5727,  ..., 0.5973, 0.6893, 0.5225]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2491],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2526],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2491],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2491]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:04,257 [Process: 0] Synchronize training processes
2024-08-16 13:21:04,257 [Process: 0] Evaluating...
2024-08-16 13:21:04,259 [Process: 0] EPOCH 809:
2024-08-16 13:21:04,261 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1249, 0.1420, 0.1323,  ..., 0.1148, 0.1952, 0.1431],
         [0.1249, 0.1420, 0.1323,  ..., 0.1148, 0.1952, 0.1431],
         [0.1249, 0.1420, 0.1323,  ..., 0.1148, 0.2034, 0.1431],
         [0.6253, 0.5740, 0.6031,  ..., 0.6555, 0.4063, 0.5706]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2425, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2425, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2725, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2425, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 810:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1685, 0.1238, 0.1594,  ..., 0.1193, 0.1380, 0.1357],
         [0.1685, 0.1238, 0.1594,  ..., 0.1193, 0.1380, 0.1357],
         [0.1685, 0.1238, 0.1594,  ..., 0.1193, 0.1380, 0.1357],
         [0.4945, 0.6287, 0.5219,  ..., 0.6422, 0.5861, 0.5930]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:06,152 [Process: 0] Synchronize training processes
2024-08-16 13:21:06,152 [Process: 0] Evaluating...
2024-08-16 13:21:06,154 [Process: 0] EPOCH 810:
2024-08-16 13:21:06,156 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1221, 0.1361, 0.1586,  ..., 0.1540, 0.1630, 0.1482],
         [0.1221, 0.1364, 0.1586,  ..., 0.1540, 0.1617, 0.1482],
         [0.1221, 0.1361, 0.1586,  ..., 0.1540, 0.1809, 0.1482],
         [0.6336, 0.5914, 0.5243,  ..., 0.5380, 0.4944, 0.5554]],
        [[0.2375, 0.2500, 0.2500,  ..., 0.2500, 0.2677, 0.2500],
         [0.2803, 0.2500, 0.2500,  ..., 0.2500, 0.2441, 0.2500],
         [0.2687, 0.2500, 0.2500,  ..., 0.2500, 0.2441, 0.2500],
         [0.2135, 0.2500, 0.2500,  ..., 0.2500, 0.2441, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 811:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1175, 0.1346, 0.1284,  ..., 0.1342, 0.1811, 0.1207],
         [0.1175, 0.1346, 0.1284,  ..., 0.1342, 0.1811, 0.1207],
         [0.1175, 0.1346, 0.1284,  ..., 0.1342, 0.1811, 0.1207],
         [0.6475, 0.5963, 0.6148,  ..., 0.5975, 0.4567, 0.6378]],
        [[0.2500, 0.2500, 0.2499,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2504,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2499,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2499,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:08,122 [Process: 0] Synchronize training processes
2024-08-16 13:21:08,122 [Process: 0] Evaluating...
2024-08-16 13:21:08,124 [Process: 0] EPOCH 811:
2024-08-16 13:21:08,126 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1394, 0.1312, 0.1716,  ..., 0.1420, 0.2212, 0.1658],
         [0.1448, 0.1312, 0.1753,  ..., 0.1426, 0.1684, 0.1399],
         [0.1394, 0.1312, 0.1716,  ..., 0.1420, 0.1448, 0.1399],
         [0.5764, 0.6065, 0.4815,  ..., 0.5734, 0.4657, 0.5545]],
        [[0.2500, 0.2500, 0.2447,  ..., 0.2500, 0.2471, 0.2478],
         [0.2500, 0.2500, 0.2447,  ..., 0.2500, 0.2471, 0.2567],
         [0.2500, 0.2500, 0.2658,  ..., 0.2500, 0.2587, 0.2478],
         [0.2500, 0.2500, 0.2447,  ..., 0.2500, 0.2471, 0.2478]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 812:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1757, 0.1592, 0.1686,  ..., 0.1155, 0.1165, 0.1264],
         [0.1757, 0.1592, 0.1686,  ..., 0.1155, 0.1165, 0.1264],
         [0.1757, 0.1592, 0.1686,  ..., 0.1155, 0.1165, 0.1264],
         [0.4729, 0.5224, 0.4941,  ..., 0.6536, 0.6505, 0.6207]],
        [[0.2500, 0.2500, 0.2498,  ..., 0.2484, 0.2491, 0.2500],
         [0.2500, 0.2500, 0.2506,  ..., 0.2548, 0.2526, 0.2500],
         [0.2500, 0.2500, 0.2498,  ..., 0.2484, 0.2491, 0.2500],
         [0.2500, 0.2500, 0.2498,  ..., 0.2484, 0.2491, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:10,142 [Process: 0] Synchronize training processes
2024-08-16 13:21:10,143 [Process: 0] Evaluating...
2024-08-16 13:21:10,145 [Process: 0] EPOCH 812:
2024-08-16 13:21:10,146 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1487, 0.1586, 0.1454,  ..., 0.1580, 0.2781, 0.0985],
         [0.1487, 0.1654, 0.1536,  ..., 0.1621, 0.1513, 0.0985],
         [0.1487, 0.1586, 0.1454,  ..., 0.1580, 0.1738, 0.0985],
         [0.5540, 0.5173, 0.5557,  ..., 0.5219, 0.3968, 0.7046]],
        [[0.2353, 0.2500, 0.2521,  ..., 0.2500, 0.2808, 0.2746],
         [0.2890, 0.2500, 0.2611,  ..., 0.2500, 0.2397, 0.2794],
         [0.2466, 0.2500, 0.2434,  ..., 0.2500, 0.2397, 0.2230],
         [0.2291, 0.2500, 0.2434,  ..., 0.2500, 0.2397, 0.2230]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 813:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1443, 0.1323, 0.1450,  ..., 0.1220, 0.1237, 0.1401],
         [0.1443, 0.1323, 0.1450,  ..., 0.1220, 0.1237, 0.1401],
         [0.1443, 0.1323, 0.1450,  ..., 0.1220, 0.1237, 0.1401],
         [0.5670, 0.6032, 0.5650,  ..., 0.6340, 0.6289, 0.5796]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:12,106 [Process: 0] Synchronize training processes
2024-08-16 13:21:12,107 [Process: 0] Evaluating...
2024-08-16 13:21:12,109 [Process: 0] EPOCH 813:
2024-08-16 13:21:12,111 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1359, 0.1350, 0.1227,  ..., 0.1437, 0.1889, 0.1573],
         [0.1382, 0.1350, 0.1227,  ..., 0.1437, 0.1889, 0.1668],
         [0.1359, 0.1350, 0.1227,  ..., 0.1437, 0.1889, 0.1573],
         [0.5901, 0.5950, 0.6318,  ..., 0.5690, 0.4334, 0.5186]],
        [[0.2346, 0.2500, 0.2500,  ..., 0.2466, 0.2500, 0.2401],
         [0.2353, 0.2500, 0.2500,  ..., 0.2603, 0.2500, 0.2569],
         [0.2955, 0.2500, 0.2500,  ..., 0.2466, 0.2500, 0.2628],
         [0.2346, 0.2500, 0.2500,  ..., 0.2466, 0.2500, 0.2401]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 814:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1970, 0.0951, 0.1191,  ..., 0.1025, 0.1487, 0.1649],
         [0.1970, 0.0951, 0.1191,  ..., 0.1025, 0.1487, 0.1649],
         [0.1970, 0.0951, 0.1191,  ..., 0.1025, 0.1487, 0.1649],
         [0.4090, 0.7148, 0.6426,  ..., 0.6925, 0.5540, 0.5053]],
        [[0.2495, 0.2500, 0.2500,  ..., 0.2474, 0.2500, 0.2500],
         [0.2514, 0.2500, 0.2500,  ..., 0.2578, 0.2500, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2474, 0.2500, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2474, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:14,127 [Process: 0] Synchronize training processes
2024-08-16 13:21:14,127 [Process: 0] Evaluating...
2024-08-16 13:21:14,129 [Process: 0] EPOCH 814:
2024-08-16 13:21:14,131 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1624, 0.1582, 0.0778,  ..., 0.1884, 0.1527, 0.1552],
         [0.1624, 0.1582, 0.0803,  ..., 0.2028, 0.1527, 0.1559],
         [0.1624, 0.1582, 0.0778,  ..., 0.1884, 0.1527, 0.1552],
         [0.5129, 0.5254, 0.7641,  ..., 0.4205, 0.5420, 0.5336]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2458, 0.2515, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2625, 0.2495, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2458, 0.2495, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2458, 0.2495, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 815:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1651, 0.1071, 0.1138,  ..., 0.1460, 0.1166, 0.1378],
         [0.1651, 0.1071, 0.1151,  ..., 0.1460, 0.1166, 0.1378],
         [0.1651, 0.1071, 0.1138,  ..., 0.1460, 0.1166, 0.1378],
         [0.5046, 0.6786, 0.6572,  ..., 0.5621, 0.6501, 0.5866]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2499, 0.2458],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2502, 0.2625],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2499, 0.2458],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2499, 0.2458]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:16,073 [Process: 0] Synchronize training processes
2024-08-16 13:21:16,074 [Process: 0] Evaluating...
2024-08-16 13:21:16,076 [Process: 0] EPOCH 815:
2024-08-16 13:21:16,077 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1561, 0.1337, 0.1349,  ..., 0.1667, 0.1615, 0.1436],
         [0.1561, 0.1377, 0.1349,  ..., 0.1439, 0.1615, 0.1436],
         [0.1561, 0.1337, 0.1349,  ..., 0.1439, 0.1842, 0.1436],
         [0.5316, 0.5949, 0.5953,  ..., 0.5455, 0.4927, 0.5693]],
        [[0.2434, 0.2500, 0.2347,  ..., 0.2500, 0.2500, 0.2500],
         [0.2697, 0.2500, 0.2467,  ..., 0.2500, 0.2500, 0.2500],
         [0.2434, 0.2500, 0.2840,  ..., 0.2500, 0.2500, 0.2500],
         [0.2434, 0.2500, 0.2347,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 816:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1510, 0.1574, 0.1534,  ..., 0.1240, 0.1476, 0.1546],
         [0.1510, 0.1574, 0.1534,  ..., 0.1240, 0.1478, 0.1546],
         [0.1510, 0.1574, 0.1534,  ..., 0.1240, 0.1476, 0.1546],
         [0.5470, 0.5279, 0.5398,  ..., 0.6279, 0.5570, 0.5361]],
        [[0.2495, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2516, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:18,118 [Process: 0] Synchronize training processes
2024-08-16 13:21:18,118 [Process: 0] Evaluating...
2024-08-16 13:21:18,120 [Process: 0] EPOCH 816:
2024-08-16 13:21:18,122 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1671, 0.1226, 0.1270,  ..., 0.1176, 0.1713, 0.1074],
         [0.1671, 0.1226, 0.1270,  ..., 0.1176, 0.1713, 0.1018],
         [0.1671, 0.1226, 0.1270,  ..., 0.1176, 0.1713, 0.1018],
         [0.4986, 0.6323, 0.6191,  ..., 0.6472, 0.4862, 0.6889]],
        [[0.2353, 0.2500, 0.2500,  ..., 0.2936, 0.2453, 0.2396],
         [0.3062, 0.2500, 0.2500,  ..., 0.2355, 0.2453, 0.2813],
         [0.2339, 0.2500, 0.2500,  ..., 0.2355, 0.2641, 0.2396],
         [0.2246, 0.2500, 0.2500,  ..., 0.2355, 0.2453, 0.2396]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 817:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1699, 0.1594, 0.1394,  ..., 0.1530, 0.1671, 0.1772],
         [0.1699, 0.1594, 0.1394,  ..., 0.1530, 0.1671, 0.1772],
         [0.1699, 0.1594, 0.1394,  ..., 0.1530, 0.1671, 0.1772],
         [0.4903, 0.5218, 0.5818,  ..., 0.5409, 0.4988, 0.4684]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2428, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2715, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2428, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2428, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:20,051 [Process: 0] Synchronize training processes
2024-08-16 13:21:20,051 [Process: 0] Evaluating...
2024-08-16 13:21:20,053 [Process: 0] EPOCH 817:
2024-08-16 13:21:20,055 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1209, 0.1569, 0.1856,  ..., 0.1276, 0.1422, 0.1450],
         [0.1209, 0.1569, 0.1869,  ..., 0.1276, 0.1422, 0.1450],
         [0.1209, 0.1569, 0.1957,  ..., 0.1276, 0.1432, 0.1450],
         [0.6372, 0.5294, 0.4318,  ..., 0.6171, 0.5724, 0.5650]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2457, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2630, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2457, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2457, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 818:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1644, 0.1784, 0.1524,  ..., 0.1081, 0.1396, 0.1369],
         [0.1644, 0.1815, 0.1524,  ..., 0.1081, 0.1396, 0.1369],
         [0.1644, 0.1784, 0.1524,  ..., 0.1081, 0.1396, 0.1369],
         [0.5068, 0.4618, 0.5429,  ..., 0.6757, 0.5811, 0.5893]],
        [[0.2495, 0.2500, 0.2500,  ..., 0.2500, 0.2477, 0.2500],
         [0.2515, 0.2500, 0.2500,  ..., 0.2500, 0.2569, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2500, 0.2477, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2500, 0.2477, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:21,974 [Process: 0] Synchronize training processes
2024-08-16 13:21:21,975 [Process: 0] Evaluating...
2024-08-16 13:21:21,976 [Process: 0] EPOCH 818:
2024-08-16 13:21:21,978 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1575, 0.1329, 0.1618,  ..., 0.1756, 0.0956, 0.1201],
         [0.1613, 0.1329, 0.1618,  ..., 0.1674, 0.0956, 0.1216],
         [0.1575, 0.1329, 0.1618,  ..., 0.1674, 0.0956, 0.1201],
         [0.5238, 0.6014, 0.5146,  ..., 0.4897, 0.7131, 0.6382]],
        [[0.2500, 0.2500, 0.2460,  ..., 0.2500, 0.2335, 0.2500],
         [0.2500, 0.2500, 0.2460,  ..., 0.2500, 0.2995, 0.2500],
         [0.2500, 0.2500, 0.2619,  ..., 0.2500, 0.2335, 0.2500],
         [0.2500, 0.2500, 0.2460,  ..., 0.2500, 0.2335, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 819:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1097, 0.1563, 0.1514,  ..., 0.1602, 0.1514, 0.1644],
         [0.1097, 0.1563, 0.1519,  ..., 0.1602, 0.1514, 0.1654],
         [0.1097, 0.1563, 0.1514,  ..., 0.1602, 0.1514, 0.1644],
         [0.6710, 0.5312, 0.5454,  ..., 0.5194, 0.5457, 0.5059]],
        [[0.2493, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2521, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2493, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2493, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:23,919 [Process: 0] Synchronize training processes
2024-08-16 13:21:23,919 [Process: 0] Evaluating...
2024-08-16 13:21:23,921 [Process: 0] EPOCH 819:
2024-08-16 13:21:23,923 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1618, 0.1278, 0.1322,  ..., 0.1490, 0.1210, 0.1589],
         [0.1589, 0.1229, 0.1434,  ..., 0.1664, 0.1210, 0.1589],
         [0.1589, 0.1229, 0.1322,  ..., 0.1490, 0.1210, 0.1589],
         [0.5204, 0.6264, 0.5922,  ..., 0.5356, 0.6369, 0.5234]],
        [[0.2500, 0.2500, 0.2439,  ..., 0.2500, 0.2589, 0.2500],
         [0.2500, 0.2500, 0.2683,  ..., 0.2500, 0.2470, 0.2500],
         [0.2500, 0.2500, 0.2439,  ..., 0.2500, 0.2470, 0.2500],
         [0.2500, 0.2500, 0.2439,  ..., 0.2500, 0.2470, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 820:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1685, 0.1212, 0.1352,  ..., 0.1419, 0.1510, 0.1422],
         [0.1685, 0.1212, 0.1352,  ..., 0.1419, 0.1510, 0.1422],
         [0.1685, 0.1212, 0.1352,  ..., 0.1419, 0.1510, 0.1422],
         [0.4944, 0.6365, 0.5943,  ..., 0.5742, 0.5469, 0.5734]],
        [[0.2497, 0.2500, 0.2491,  ..., 0.2500, 0.2470, 0.2500],
         [0.2510, 0.2500, 0.2526,  ..., 0.2500, 0.2591, 0.2500],
         [0.2497, 0.2500, 0.2491,  ..., 0.2500, 0.2470, 0.2500],
         [0.2497, 0.2500, 0.2491,  ..., 0.2500, 0.2470, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:25,934 [Process: 0] Synchronize training processes
2024-08-16 13:21:25,934 [Process: 0] Evaluating...
2024-08-16 13:21:25,936 [Process: 0] EPOCH 820:
2024-08-16 13:21:25,938 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1335, 0.1592, 0.1546,  ..., 0.1156, 0.1927, 0.1628],
         [0.1335, 0.1592, 0.1546,  ..., 0.1156, 0.1852, 0.1628],
         [0.1335, 0.1592, 0.1546,  ..., 0.1156, 0.2347, 0.1680],
         [0.5996, 0.5225, 0.5363,  ..., 0.6533, 0.3874, 0.5065]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2434, 0.2376, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2540, 0.2470, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2592, 0.2829, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2434, 0.2324, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 821:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1695, 0.1343, 0.1134,  ..., 0.1040, 0.1753, 0.1384],
         [0.1695, 0.1343, 0.1134,  ..., 0.1040, 0.1753, 0.1384],
         [0.1695, 0.1343, 0.1134,  ..., 0.1040, 0.1753, 0.1384],
         [0.4916, 0.5972, 0.6598,  ..., 0.6879, 0.4742, 0.5848]],
        [[0.2475, 0.2496, 0.2500,  ..., 0.2500, 0.2500, 0.2483],
         [0.2575, 0.2512, 0.2500,  ..., 0.2500, 0.2500, 0.2552],
         [0.2475, 0.2496, 0.2500,  ..., 0.2500, 0.2500, 0.2483],
         [0.2475, 0.2496, 0.2500,  ..., 0.2500, 0.2500, 0.2483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:28,011 [Process: 0] Synchronize training processes
2024-08-16 13:21:28,012 [Process: 0] Evaluating...
2024-08-16 13:21:28,013 [Process: 0] EPOCH 821:
2024-08-16 13:21:28,015 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1360, 0.1531, 0.1594,  ..., 0.1465, 0.1731, 0.1242],
         [0.1360, 0.1531, 0.1594,  ..., 0.1465, 0.1867, 0.1242],
         [0.1360, 0.1531, 0.1594,  ..., 0.1465, 0.1731, 0.1242],
         [0.5921, 0.5407, 0.5219,  ..., 0.5605, 0.4670, 0.6274]],
        [[0.2478, 0.2500, 0.2500,  ..., 0.2499, 0.2500, 0.2600],
         [0.2566, 0.2500, 0.2500,  ..., 0.2502, 0.2500, 0.2467],
         [0.2478, 0.2500, 0.2500,  ..., 0.2499, 0.2500, 0.2467],
         [0.2478, 0.2500, 0.2500,  ..., 0.2499, 0.2500, 0.2467]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 822:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1516, 0.1178, 0.1610,  ..., 0.1563, 0.1292, 0.1140],
         [0.1601, 0.1178, 0.1610,  ..., 0.1563, 0.1292, 0.1149],
         [0.1516, 0.1178, 0.1610,  ..., 0.1563, 0.1292, 0.1140],
         [0.5367, 0.6466, 0.5170,  ..., 0.5312, 0.6125, 0.6570]],
        [[0.2479, 0.2500, 0.2473,  ..., 0.2499, 0.2500, 0.2500],
         [0.2564, 0.2500, 0.2582,  ..., 0.2504, 0.2500, 0.2500],
         [0.2479, 0.2500, 0.2473,  ..., 0.2499, 0.2500, 0.2500],
         [0.2479, 0.2500, 0.2473,  ..., 0.2499, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:29,968 [Process: 0] Synchronize training processes
2024-08-16 13:21:29,968 [Process: 0] Evaluating...
2024-08-16 13:21:29,970 [Process: 0] EPOCH 822:
2024-08-16 13:21:29,972 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1165, 0.1757, 0.1262,  ..., 0.1294, 0.1889, 0.1747],
         [0.1165, 0.1757, 0.1262,  ..., 0.1295, 0.1413, 0.1833],
         [0.1272, 0.1757, 0.1262,  ..., 0.1294, 0.1664, 0.1747],
         [0.6397, 0.4729, 0.6214,  ..., 0.6117, 0.5034, 0.4673]],
        [[0.2582, 0.2500, 0.2559,  ..., 0.2467, 0.2500, 0.2302],
         [0.2731, 0.2500, 0.2421,  ..., 0.2467, 0.2500, 0.2758],
         [0.2344, 0.2500, 0.2956,  ..., 0.2600, 0.2500, 0.2638],
         [0.2344, 0.2500, 0.2064,  ..., 0.2467, 0.2500, 0.2302]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 823:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1527, 0.1429, 0.1494,  ..., 0.1634, 0.1601, 0.1588],
         [0.1527, 0.1535, 0.1494,  ..., 0.1634, 0.1615, 0.1634],
         [0.1527, 0.1429, 0.1494,  ..., 0.1634, 0.1601, 0.1588],
         [0.5420, 0.5607, 0.5517,  ..., 0.5099, 0.5183, 0.5189]],
        [[0.2500, 0.2492, 0.2494,  ..., 0.2466, 0.2500, 0.2500],
         [0.2500, 0.2523, 0.2519,  ..., 0.2601, 0.2500, 0.2500],
         [0.2500, 0.2492, 0.2494,  ..., 0.2466, 0.2500, 0.2500],
         [0.2500, 0.2492, 0.2494,  ..., 0.2466, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:31,873 [Process: 0] Synchronize training processes
2024-08-16 13:21:31,873 [Process: 0] Evaluating...
2024-08-16 13:21:31,875 [Process: 0] EPOCH 823:
2024-08-16 13:21:31,877 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:21:33,763 [Process: 0] Synchronize training processes
2024-08-16 13:21:33,763 [Process: 0] Evaluating...
2024-08-16 13:21:33,765 [Process: 0] EPOCH 824:
2024-08-16 13:21:33,768 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1035, 0.1806, 0.1465,  ..., 0.1616, 0.1689, 0.1370],
         [0.1080, 0.1806, 0.1579,  ..., 0.1381, 0.1447, 0.1370],
         [0.1035, 0.1806, 0.1465,  ..., 0.1381, 0.1447, 0.1370],
         [0.6850, 0.4581, 0.5492,  ..., 0.5622, 0.5417, 0.5889]],
        [[0.2455, 0.2408, 0.2500,  ..., 0.2487, 0.2500, 0.2500],
         [0.2635, 0.2521, 0.2500,  ..., 0.2538, 0.2500, 0.2500],
         [0.2455, 0.2662, 0.2500,  ..., 0.2487, 0.2500, 0.2500],
         [0.2455, 0.2408, 0.2500,  ..., 0.2487, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 824:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1363, 0.1499, 0.1427,  ..., 0.1244, 0.1217, 0.1118],
         [0.1363, 0.1499, 0.1427,  ..., 0.1244, 0.1217, 0.1118],
         [0.1363, 0.1499, 0.1427,  ..., 0.1244, 0.1217, 0.1118],
         [0.5910, 0.5504, 0.5718,  ..., 0.6269, 0.6348, 0.6645]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:35,711 [Process: 0] Synchronize training processes
2024-08-16 13:21:35,712 [Process: 0] Evaluating...
2024-08-16 13:21:35,714 [Process: 0] EPOCH 825:
2024-08-16 13:21:35,716 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1996, 0.1577, 0.1058,  ..., 0.1344, 0.1765, 0.1223],
         [0.1832, 0.1577, 0.1075,  ..., 0.1344, 0.1674, 0.1223],
         [0.1823, 0.1577, 0.1052,  ..., 0.1344, 0.1674, 0.1223],
         [0.4349, 0.5269, 0.6816,  ..., 0.5968, 0.4887, 0.6330]],
        [[0.2500, 0.2500, 0.2399,  ..., 0.2500, 0.2478, 0.2477],
         [0.2500, 0.2500, 0.2649,  ..., 0.2500, 0.2565, 0.2568],
         [0.2500, 0.2500, 0.2554,  ..., 0.2500, 0.2478, 0.2477],
         [0.2500, 0.2500, 0.2399,  ..., 0.2500, 0.2478, 0.2477]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 825:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1919, 0.1180, 0.1635,  ..., 0.1462, 0.1833, 0.1287],
         [0.1919, 0.1180, 0.1635,  ..., 0.1463, 0.1833, 0.1287],
         [0.1919, 0.1180, 0.1635,  ..., 0.1462, 0.1833, 0.1287],
         [0.4244, 0.6459, 0.5094,  ..., 0.5614, 0.4501, 0.6138]],
        [[0.2485, 0.2500, 0.2492,  ..., 0.2500, 0.2441, 0.2500],
         [0.2544, 0.2500, 0.2524,  ..., 0.2500, 0.2676, 0.2500],
         [0.2485, 0.2500, 0.2492,  ..., 0.2500, 0.2441, 0.2500],
         [0.2485, 0.2500, 0.2492,  ..., 0.2500, 0.2441, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:37,666 [Process: 0] Synchronize training processes
2024-08-16 13:21:37,666 [Process: 0] Evaluating...
2024-08-16 13:21:37,668 [Process: 0] EPOCH 826:
2024-08-16 13:21:37,670 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1187, 0.1492, 0.0937,  ..., 0.1419, 0.2398, 0.1029],
         [0.1187, 0.1492, 0.0937,  ..., 0.1419, 0.1624, 0.1029],
         [0.1187, 0.1492, 0.0937,  ..., 0.1419, 0.1584, 0.1172],
         [0.6440, 0.5525, 0.7190,  ..., 0.5743, 0.4394, 0.6771]],
        [[0.2696, 0.3233, 0.2500,  ..., 0.2451, 0.2419, 0.2500],
         [0.2441, 0.2256, 0.2500,  ..., 0.2646, 0.2743, 0.2500],
         [0.2432, 0.2256, 0.2500,  ..., 0.2451, 0.2419, 0.2500],
         [0.2432, 0.2256, 0.2500,  ..., 0.2451, 0.2419, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 826:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1651, 0.1435, 0.1242,  ..., 0.1512, 0.1684, 0.1842],
         [0.1651, 0.1435, 0.1242,  ..., 0.1512, 0.1684, 0.1842],
         [0.1651, 0.1435, 0.1242,  ..., 0.1512, 0.1684, 0.1842],
         [0.5046, 0.5695, 0.6275,  ..., 0.5465, 0.4947, 0.4473]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:39,569 [Process: 0] Synchronize training processes
2024-08-16 13:21:39,569 [Process: 0] Evaluating...
2024-08-16 13:21:39,571 [Process: 0] EPOCH 827:
2024-08-16 13:21:39,573 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1632, 0.1235, 0.1546,  ..., 0.1553, 0.1801, 0.1632],
         [0.1405, 0.1235, 0.1546,  ..., 0.1553, 0.1801, 0.1632],
         [0.1371, 0.1235, 0.1546,  ..., 0.1813, 0.1801, 0.1632],
         [0.5593, 0.6295, 0.5361,  ..., 0.5081, 0.4596, 0.5105]],
        [[0.2500, 0.2426, 0.2497,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2644, 0.2509,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2505, 0.2497,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2426, 0.2497,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 827:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1564, 0.1416, 0.1244,  ..., 0.1358, 0.1240, 0.1103],
         [0.1564, 0.1416, 0.1262,  ..., 0.1358, 0.1253, 0.1103],
         [0.1564, 0.1416, 0.1244,  ..., 0.1358, 0.1240, 0.1103],
         [0.5307, 0.5751, 0.6250,  ..., 0.5926, 0.6267, 0.6692]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:41,467 [Process: 0] Synchronize training processes
2024-08-16 13:21:41,468 [Process: 0] Evaluating...
2024-08-16 13:21:41,470 [Process: 0] EPOCH 828:
2024-08-16 13:21:41,471 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1750, 0.2253, 0.1520,  ..., 0.1401, 0.1504, 0.1137],
         [0.1602, 0.1914, 0.1520,  ..., 0.1401, 0.1504, 0.1137],
         [0.1602, 0.1867, 0.1520,  ..., 0.1401, 0.1504, 0.1137],
         [0.5046, 0.3966, 0.5440,  ..., 0.5797, 0.5488, 0.6589]],
        [[0.2891, 0.2446, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2370, 0.2663, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2370, 0.2446, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2370, 0.2446, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 828:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1304, 0.1170, 0.1440,  ..., 0.1297, 0.1513, 0.1647],
         [0.1304, 0.1170, 0.1440,  ..., 0.1335, 0.1513, 0.1647],
         [0.1304, 0.1170, 0.1440,  ..., 0.1297, 0.1513, 0.1647],
         [0.6087, 0.6489, 0.5679,  ..., 0.6072, 0.5461, 0.5059]],
        [[0.2486, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2541, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2486, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2486, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:21:43,370 [Process: 0] Synchronize training processes
2024-08-16 13:21:43,370 [Process: 0] Evaluating...
2024-08-16 13:21:43,372 [Process: 0] EPOCH 829:
2024-08-16 13:21:43,374 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1775, 0.1444, 0.1527,  ..., 0.1270, 0.1783, 0.1476],
         [0.1775, 0.1444, 0.1527,  ..., 0.1270, 0.1783, 0.1457],
         [0.1775, 0.1444, 0.1527,  ..., 0.1270, 0.1783, 0.1457],
         [0.4676, 0.5669, 0.5419,  ..., 0.6190, 0.4651, 0.5609]],
        [[0.2500, 0.2683, 0.2321,  ..., 0.2500, 0.2455, 0.2500],
         [0.2500, 0.2598, 0.2977,  ..., 0.2500, 0.2634, 0.2500],
         [0.2500, 0.2597, 0.2394,  ..., 0.2500, 0.2455, 0.2500],
         [0.2500, 0.2122, 0.2308,  ..., 0.2500, 0.2455, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 829:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1571, 0.1847, 0.1373,  ..., 0.1650, 0.1165, 0.1578],
         [0.1571, 0.1847, 0.1373,  ..., 0.1650, 0.1165, 0.1578],
         [0.1571, 0.1847, 0.1373,  ..., 0.1650, 0.1165, 0.1578],
         [0.5286, 0.4458, 0.5882,  ..., 0.5049, 0.6505, 0.5265]],
        [[0.2495, 0.2500, 0.2500,  ..., 0.2692, 0.2500, 0.2500],
         [0.2516, 0.2500, 0.2500,  ..., 0.2436, 0.2500, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2436, 0.2500, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2436, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1060, 0.1478, 0.1356,  ..., 0.1171, 0.2172, 0.1945],
         [0.1060, 0.1478, 0.1356,  ..., 0.1171, 0.1946, 0.1945],
         [0.1060, 0.1478, 0.1356,  ..., 0.1171, 0.1669, 0.1945],
         [0.6820, 0.5567, 0.5931,  ..., 0.6488, 0.4213, 0.4165]],
        [[0.2500, 0.2500, 0.2468,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2468,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2596,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2468,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:21:45,324 [Process: 0] Synchronize training processes
2024-08-16 13:21:45,325 [Process: 0] Evaluating...
2024-08-16 13:21:45,327 [Process: 0] EPOCH 830:
2024-08-16 13:21:45,329 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 830:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1623, 0.1256, 0.1555,  ..., 0.1343, 0.1351, 0.1242],
         [0.1623, 0.1256, 0.1555,  ..., 0.1343, 0.1351, 0.1242],
         [0.1623, 0.1256, 0.1555,  ..., 0.1343, 0.1351, 0.1242],
         [0.5131, 0.6233, 0.5336,  ..., 0.5971, 0.5948, 0.6275]],
        [[0.2469, 0.2461, 0.2486,  ..., 0.2467, 0.2500, 0.2497],
         [0.2593, 0.2616, 0.2543,  ..., 0.2598, 0.2500, 0.2510],
         [0.2469, 0.2461, 0.2486,  ..., 0.2467, 0.2500, 0.2497],
         [0.2469, 0.2461, 0.2486,  ..., 0.2467, 0.2500, 0.2497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1962, 0.1332, 0.1633,  ..., 0.1601, 0.2639, 0.1338],
         [0.1962, 0.1332, 0.1633,  ..., 0.1601, 0.1836, 0.1338],
         [0.1962, 0.1332, 0.1633,  ..., 0.1601, 0.1623, 0.1338],
         [0.4113, 0.6003, 0.5101,  ..., 0.5198, 0.3901, 0.5986]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2471, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2588, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2471, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2471, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 831:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:21:47,239 [Process: 0] Synchronize training processes
2024-08-16 13:21:47,239 [Process: 0] Evaluating...
2024-08-16 13:21:47,241 [Process: 0] EPOCH 831:
2024-08-16 13:21:47,243 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1272, 0.1761, 0.1939,  ..., 0.1240, 0.1637, 0.1460],
         [0.1272, 0.1761, 0.1939,  ..., 0.1240, 0.1637, 0.1460],
         [0.1272, 0.1761, 0.1939,  ..., 0.1240, 0.1637, 0.1460],
         [0.6185, 0.4717, 0.4184,  ..., 0.6281, 0.5089, 0.5620]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2496, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2513, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2496, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2496, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1497, 0.1452, 0.1342,  ..., 0.1381, 0.1734, 0.1500],
         [0.1497, 0.1452, 0.1342,  ..., 0.1381, 0.1077, 0.1500],
         [0.1497, 0.1452, 0.1342,  ..., 0.1381, 0.1076, 0.1500],
         [0.5509, 0.5643, 0.5975,  ..., 0.5856, 0.6113, 0.5499]],
        [[0.2477, 0.2500, 0.2500,  ..., 0.2655, 0.2733, 0.2500],
         [0.2568, 0.2500, 0.2500,  ..., 0.2617, 0.2429, 0.2500],
         [0.2477, 0.2500, 0.2500,  ..., 0.2376, 0.2419, 0.2500],
         [0.2477, 0.2500, 0.2500,  ..., 0.2353, 0.2419, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 832:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:21:49,174 [Process: 0] Synchronize training processes
2024-08-16 13:21:49,174 [Process: 0] Evaluating...
2024-08-16 13:21:49,176 [Process: 0] EPOCH 832:
2024-08-16 13:21:49,178 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1382, 0.1161, 0.1270,  ..., 0.1197, 0.1735, 0.1364],
         [0.1382, 0.1161, 0.1270,  ..., 0.1197, 0.1735, 0.1439],
         [0.1382, 0.1161, 0.1270,  ..., 0.1197, 0.1735, 0.1364],
         [0.5854, 0.6516, 0.6191,  ..., 0.6408, 0.4794, 0.5833]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2495, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2516, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2495, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2495, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1705, 0.1529, 0.1998,  ..., 0.1338, 0.2543, 0.1226],
         [0.1705, 0.1541, 0.1865,  ..., 0.1338, 0.1745, 0.1226],
         [0.1705, 0.1529, 0.1865,  ..., 0.1338, 0.1745, 0.1226],
         [0.4885, 0.5402, 0.4272,  ..., 0.5987, 0.3967, 0.6321]],
        [[0.2500, 0.2649, 0.2631,  ..., 0.2309, 0.2406, 0.2628],
         [0.2500, 0.2540, 0.2802,  ..., 0.2978, 0.2364, 0.2294],
         [0.2500, 0.2405, 0.2283,  ..., 0.2405, 0.2866, 0.2799],
         [0.2500, 0.2405, 0.2283,  ..., 0.2309, 0.2364, 0.2279]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 833:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:21:51,061 [Process: 0] Synchronize training processes
2024-08-16 13:21:51,062 [Process: 0] Evaluating...
2024-08-16 13:21:51,063 [Process: 0] EPOCH 833:
2024-08-16 13:21:51,065 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1696, 0.1502, 0.1491,  ..., 0.1430, 0.2023, 0.1606],
         [0.1768, 0.1673, 0.1491,  ..., 0.1430, 0.2023, 0.1606],
         [0.1696, 0.1502, 0.1491,  ..., 0.1430, 0.2023, 0.1606],
         [0.4840, 0.5323, 0.5528,  ..., 0.5711, 0.3930, 0.5182]],
        [[0.2482, 0.2482, 0.2500,  ..., 0.2500, 0.2530, 0.2620],
         [0.2553, 0.2555, 0.2500,  ..., 0.2500, 0.2517, 0.2469],
         [0.2482, 0.2482, 0.2500,  ..., 0.2500, 0.2477, 0.2456],
         [0.2482, 0.2482, 0.2500,  ..., 0.2500, 0.2477, 0.2456]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1188, 0.1448, 0.1484,  ..., 0.1581, 0.2406, 0.1651],
         [0.1295, 0.1448, 0.1594,  ..., 0.1690, 0.1728, 0.1651],
         [0.1188, 0.1448, 0.1484,  ..., 0.1581, 0.1936, 0.1651],
         [0.6328, 0.5657, 0.5438,  ..., 0.5147, 0.3931, 0.5046]],
        [[0.2500, 0.2500, 0.2397,  ..., 0.2500, 0.2539, 0.2575],
         [0.2500, 0.2500, 0.2397,  ..., 0.2500, 0.2733, 0.2559],
         [0.2500, 0.2500, 0.2809,  ..., 0.2500, 0.2435, 0.2433],
         [0.2500, 0.2500, 0.2397,  ..., 0.2500, 0.2293, 0.2433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 834:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:21:53,009 [Process: 0] Synchronize training processes
2024-08-16 13:21:53,009 [Process: 0] Evaluating...
2024-08-16 13:21:53,011 [Process: 0] EPOCH 834:
2024-08-16 13:21:53,013 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1586, 0.1454, 0.1355,  ..., 0.1323, 0.1361, 0.1798],
         [0.1586, 0.1454, 0.1355,  ..., 0.1323, 0.1361, 0.1798],
         [0.1586, 0.1454, 0.1355,  ..., 0.1323, 0.1361, 0.1798],
         [0.5243, 0.5637, 0.5935,  ..., 0.6032, 0.5916, 0.4607]],
        [[0.2500, 0.2500, 0.2488,  ..., 0.2500, 0.2487, 0.2500],
         [0.2500, 0.2500, 0.2536,  ..., 0.2500, 0.2540, 0.2500],
         [0.2500, 0.2500, 0.2488,  ..., 0.2500, 0.2487, 0.2500],
         [0.2500, 0.2500, 0.2488,  ..., 0.2500, 0.2487, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1421, 0.1461, 0.1231,  ..., 0.1599, 0.3516, 0.1486],
         [0.1447, 0.1461, 0.1231,  ..., 0.1615, 0.1793, 0.1502],
         [0.1421, 0.1461, 0.1256,  ..., 0.1599, 0.1520, 0.1486],
         [0.5712, 0.5617, 0.6281,  ..., 0.5186, 0.3170, 0.5525]],
        [[0.2500, 0.2486, 0.2500,  ..., 0.2754, 0.2500, 0.2500],
         [0.2500, 0.2541, 0.2500,  ..., 0.2415, 0.2500, 0.2500],
         [0.2500, 0.2486, 0.2500,  ..., 0.2415, 0.2500, 0.2500],
         [0.2500, 0.2486, 0.2500,  ..., 0.2415, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 835:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:21:54,974 [Process: 0] Synchronize training processes
2024-08-16 13:21:54,974 [Process: 0] Evaluating...
2024-08-16 13:21:54,976 [Process: 0] EPOCH 835:
2024-08-16 13:21:54,978 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1336, 0.1333, 0.1398,  ..., 0.1123, 0.1466, 0.1193],
         [0.1336, 0.1333, 0.1398,  ..., 0.1123, 0.1466, 0.1193],
         [0.1336, 0.1333, 0.1398,  ..., 0.1123, 0.1466, 0.1193],
         [0.5991, 0.6001, 0.5807,  ..., 0.6632, 0.5602, 0.6420]],
        [[0.2500, 0.2514, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2634, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2426, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2426, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1555, 0.1245, 0.1404,  ..., 0.1348, 0.1918, 0.1426],
         [0.1555, 0.1283, 0.1404,  ..., 0.1348, 0.1487, 0.1426],
         [0.1555, 0.1245, 0.1404,  ..., 0.1348, 0.1487, 0.1465],
         [0.5334, 0.6228, 0.5789,  ..., 0.5955, 0.5109, 0.5684]],
        [[0.2372, 0.2500, 0.2500,  ..., 0.2473, 0.2500, 0.2500],
         [0.2790, 0.2500, 0.2500,  ..., 0.2582, 0.2500, 0.2500],
         [0.2466, 0.2500, 0.2500,  ..., 0.2473, 0.2500, 0.2500],
         [0.2372, 0.2500, 0.2500,  ..., 0.2473, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 836:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:21:56,928 [Process: 0] Synchronize training processes
2024-08-16 13:21:56,928 [Process: 0] Evaluating...
2024-08-16 13:21:56,930 [Process: 0] EPOCH 836:
2024-08-16 13:21:56,932 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1743, 0.1021, 0.2046,  ..., 0.1637, 0.1329, 0.1200],
         [0.1743, 0.1026, 0.2046,  ..., 0.1800, 0.1434, 0.1200],
         [0.1743, 0.1021, 0.2046,  ..., 0.1637, 0.1329, 0.1200],
         [0.4770, 0.6933, 0.3863,  ..., 0.4927, 0.5907, 0.6400]],
        [[0.2492, 0.2496, 0.2500,  ..., 0.2500, 0.2480, 0.2500],
         [0.2525, 0.2511, 0.2500,  ..., 0.2500, 0.2560, 0.2500],
         [0.2492, 0.2496, 0.2500,  ..., 0.2500, 0.2480, 0.2500],
         [0.2492, 0.2496, 0.2500,  ..., 0.2500, 0.2480, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1726, 0.1088, 0.1008,  ..., 0.1303, 0.2805, 0.1662],
         [0.1568, 0.1088, 0.1008,  ..., 0.1303, 0.1801, 0.1499],
         [0.1568, 0.1088, 0.1008,  ..., 0.1303, 0.1776, 0.1499],
         [0.5138, 0.6737, 0.6975,  ..., 0.6092, 0.3617, 0.5340]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2511,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2494,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2494,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 837:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:21:58,828 [Process: 0] Synchronize training processes
2024-08-16 13:21:58,828 [Process: 0] Evaluating...
2024-08-16 13:21:58,830 [Process: 0] EPOCH 837:
2024-08-16 13:21:58,832 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1485, 0.1450, 0.1560,  ..., 0.1809, 0.1563, 0.1571],
         [0.1485, 0.1542, 0.1560,  ..., 0.1809, 0.1563, 0.1605],
         [0.1485, 0.1450, 0.1560,  ..., 0.1809, 0.1563, 0.1571],
         [0.5545, 0.5558, 0.5319,  ..., 0.4572, 0.5310, 0.5253]],
        [[0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2524,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1589, 0.1361, 0.1756,  ..., 0.1346, 0.1461, 0.1645],
         [0.1580, 0.1361, 0.1693,  ..., 0.1346, 0.1484, 0.1645],
         [0.1580, 0.1361, 0.1613,  ..., 0.1346, 0.1627, 0.1645],
         [0.5251, 0.5916, 0.4938,  ..., 0.5962, 0.5428, 0.5065]],
        [[0.2500, 0.2457, 0.2414,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2612, 0.2809,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2474, 0.2388,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2457, 0.2388,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 838:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:22:00,725 [Process: 0] Synchronize training processes
2024-08-16 13:22:00,725 [Process: 0] Evaluating...
2024-08-16 13:22:00,727 [Process: 0] EPOCH 838:
2024-08-16 13:22:00,729 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1313, 0.1451, 0.1369,  ..., 0.1410, 0.1540, 0.1238],
         [0.1313, 0.1451, 0.1369,  ..., 0.1410, 0.1540, 0.1238],
         [0.1313, 0.1451, 0.1369,  ..., 0.1410, 0.1540, 0.1238],
         [0.6062, 0.5646, 0.5893,  ..., 0.5769, 0.5380, 0.6286]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2495],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2515],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2495],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2495]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1337, 0.1412, 0.1460,  ..., 0.1373, 0.1641, 0.1893],
         [0.1319, 0.1273, 0.1465,  ..., 0.1343, 0.1979, 0.1955],
         [0.1212, 0.1273, 0.1330,  ..., 0.1330, 0.3387, 0.1893],
         [0.6133, 0.6042, 0.5745,  ..., 0.5954, 0.2992, 0.4259]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.3055, 0.2812, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2641, 0.2396, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2152, 0.2396, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2152, 0.2396, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 839:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:22:02,615 [Process: 0] Synchronize training processes
2024-08-16 13:22:02,616 [Process: 0] Evaluating...
2024-08-16 13:22:02,617 [Process: 0] EPOCH 839:
2024-08-16 13:22:02,619 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1365, 0.1495, 0.1543,  ..., 0.1696, 0.1385, 0.0847],
         [0.1365, 0.1495, 0.1585,  ..., 0.1696, 0.1385, 0.0853],
         [0.1365, 0.1495, 0.1543,  ..., 0.1696, 0.1385, 0.0847],
         [0.5906, 0.5516, 0.5329,  ..., 0.4911, 0.5845, 0.7452]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1509, 0.1323, 0.1406,  ..., 0.1164, 0.2332, 0.1753],
         [0.1678, 0.1323, 0.1454,  ..., 0.1336, 0.2250, 0.1432],
         [0.1509, 0.1323, 0.1406,  ..., 0.1164, 0.3491, 0.1432],
         [0.5305, 0.6030, 0.5735,  ..., 0.6336, 0.1926, 0.5384]],
        [[0.2447, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2702, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2426, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2426, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 840:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:22:04,526 [Process: 0] Synchronize training processes
2024-08-16 13:22:04,526 [Process: 0] Evaluating...
2024-08-16 13:22:04,528 [Process: 0] EPOCH 840:
2024-08-16 13:22:04,530 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1503, 0.1462, 0.1279,  ..., 0.1497, 0.1841, 0.1412],
         [0.1503, 0.1462, 0.1304,  ..., 0.1497, 0.1841, 0.1412],
         [0.1503, 0.1462, 0.1279,  ..., 0.1497, 0.1841, 0.1412],
         [0.5492, 0.5614, 0.6139,  ..., 0.5508, 0.4477, 0.5765]],
        [[0.2495, 0.2500, 0.2500,  ..., 0.2500, 0.2495, 0.2500],
         [0.2514, 0.2500, 0.2500,  ..., 0.2500, 0.2515, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2500, 0.2495, 0.2500],
         [0.2495, 0.2500, 0.2500,  ..., 0.2500, 0.2495, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1199, 0.1203, 0.1467,  ..., 0.1523, 0.2860, 0.1195],
         [0.1199, 0.1235, 0.1524,  ..., 0.1790, 0.1953, 0.1268],
         [0.1199, 0.1158, 0.1467,  ..., 0.1523, 0.4542, 0.1195],
         [0.6403, 0.6404, 0.5542,  ..., 0.5164, 0.0645, 0.6341]],
        [[0.2500, 0.2472, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2472, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2583, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2472, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 841:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1725, 0.1429, 0.1209,  ..., 0.1485, 0.1246, 0.1663],
         [0.1729, 0.1429, 0.1209,  ..., 0.1485, 0.1246, 0.1663],
         [0.1725, 0.1429, 0.1209,  ..., 0.1485, 0.1246, 0.1663],
         [0.4821, 0.5714, 0.6372,  ..., 0.5545, 0.6263, 0.5010]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:06,422 [Process: 0] Synchronize training processes
2024-08-16 13:22:06,422 [Process: 0] Evaluating...
2024-08-16 13:22:06,424 [Process: 0] EPOCH 841:
2024-08-16 13:22:06,426 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1214, 0.1511, 0.1367,  ..., 0.1121, 0.2177, 0.1362],
         [0.1214, 0.1511, 0.1367,  ..., 0.1121, 0.2022, 0.1362],
         [0.1214, 0.1511, 0.1367,  ..., 0.1121, 0.2715, 0.1362],
         [0.6357, 0.5468, 0.5898,  ..., 0.6636, 0.3085, 0.5915]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 842:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1881, 0.1300, 0.1326,  ..., 0.1480, 0.1456, 0.1387],
         [0.1881, 0.1366, 0.1386,  ..., 0.1480, 0.1480, 0.1407],
         [0.1881, 0.1300, 0.1326,  ..., 0.1480, 0.1456, 0.1387],
         [0.4357, 0.6034, 0.5963,  ..., 0.5559, 0.5608, 0.5818]],
        [[0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2559, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:08,311 [Process: 0] Synchronize training processes
2024-08-16 13:22:08,312 [Process: 0] Evaluating...
2024-08-16 13:22:08,314 [Process: 0] EPOCH 842:
2024-08-16 13:22:08,315 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1251, 0.1450, 0.1621,  ..., 0.1661, 0.2073, 0.1292],
         [0.1251, 0.1450, 0.1621,  ..., 0.1661, 0.1835, 0.1292],
         [0.1251, 0.1523, 0.1621,  ..., 0.1661, 0.2428, 0.1292],
         [0.6247, 0.5578, 0.5137,  ..., 0.5018, 0.3664, 0.6124]],
        [[0.2446, 0.2359, 0.2500,  ..., 0.2485, 0.2500, 0.2406],
         [0.2661, 0.2924, 0.2500,  ..., 0.2545, 0.2500, 0.2782],
         [0.2446, 0.2359, 0.2500,  ..., 0.2485, 0.2500, 0.2406],
         [0.2446, 0.2359, 0.2500,  ..., 0.2485, 0.2500, 0.2406]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 843:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1477, 0.1413, 0.1379,  ..., 0.1632, 0.1268, 0.1538],
         [0.1477, 0.1437, 0.1379,  ..., 0.1632, 0.1268, 0.1538],
         [0.1477, 0.1413, 0.1379,  ..., 0.1632, 0.1268, 0.1538],
         [0.5568, 0.5737, 0.5862,  ..., 0.5105, 0.6196, 0.5385]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:10,217 [Process: 0] Synchronize training processes
2024-08-16 13:22:10,217 [Process: 0] Evaluating...
2024-08-16 13:22:10,219 [Process: 0] EPOCH 843:
2024-08-16 13:22:10,221 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1338, 0.1254, 0.1162,  ..., 0.1998, 0.1746, 0.1383],
         [0.1322, 0.1254, 0.1162,  ..., 0.1952, 0.1746, 0.1383],
         [0.1322, 0.1254, 0.1162,  ..., 0.1952, 0.1746, 0.1383],
         [0.6017, 0.6237, 0.6515,  ..., 0.4098, 0.4761, 0.5851]],
        [[0.2645, 0.2500, 0.2500,  ..., 0.2575, 0.2406, 0.2500],
         [0.2452, 0.2500, 0.2500,  ..., 0.2732, 0.2406, 0.2500],
         [0.2452, 0.2500, 0.2500,  ..., 0.2440, 0.2783, 0.2500],
         [0.2452, 0.2500, 0.2500,  ..., 0.2252, 0.2406, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 844:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1569, 0.1786, 0.1358,  ..., 0.1317, 0.1208, 0.1372],
         [0.1587, 0.1786, 0.1426,  ..., 0.1317, 0.1208, 0.1372],
         [0.1569, 0.1786, 0.1358,  ..., 0.1317, 0.1208, 0.1372],
         [0.5276, 0.4642, 0.5858,  ..., 0.6049, 0.6377, 0.5885]],
        [[0.2500, 0.2494, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2517, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2494, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2494, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:12,103 [Process: 0] Synchronize training processes
2024-08-16 13:22:12,103 [Process: 0] Evaluating...
2024-08-16 13:22:12,105 [Process: 0] EPOCH 844:
2024-08-16 13:22:12,107 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1411, 0.1159, 0.1547,  ..., 0.1488, 0.1779, 0.1203],
         [0.1411, 0.1159, 0.1547,  ..., 0.1488, 0.1779, 0.1203],
         [0.1411, 0.1159, 0.1547,  ..., 0.1488, 0.1779, 0.1203],
         [0.5767, 0.6523, 0.5359,  ..., 0.5537, 0.4663, 0.6392]],
        [[0.2915, 0.2743, 0.2500,  ..., 0.2320, 0.2378, 0.2589],
         [0.2362, 0.2419, 0.2500,  ..., 0.2868, 0.2865, 0.2470],
         [0.2362, 0.2419, 0.2500,  ..., 0.2492, 0.2437, 0.2470],
         [0.2362, 0.2419, 0.2500,  ..., 0.2320, 0.2320, 0.2470]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 845:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1230, 0.1678, 0.1362,  ..., 0.1221, 0.1328, 0.1320],
         [0.1247, 0.1678, 0.1362,  ..., 0.1221, 0.1328, 0.1320],
         [0.1230, 0.1678, 0.1362,  ..., 0.1221, 0.1328, 0.1320],
         [0.6294, 0.4967, 0.5914,  ..., 0.6338, 0.6016, 0.6040]],
        [[0.2500, 0.2500, 0.2496,  ..., 0.2494, 0.2475, 0.2494],
         [0.2500, 0.2500, 0.2513,  ..., 0.2517, 0.2576, 0.2519],
         [0.2500, 0.2500, 0.2496,  ..., 0.2494, 0.2475, 0.2494],
         [0.2500, 0.2500, 0.2496,  ..., 0.2494, 0.2475, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:14,013 [Process: 0] Synchronize training processes
2024-08-16 13:22:14,014 [Process: 0] Evaluating...
2024-08-16 13:22:14,016 [Process: 0] EPOCH 845:
2024-08-16 13:22:14,017 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1659, 0.1565, 0.1908,  ..., 0.1290, 0.1442, 0.1499],
         [0.1659, 0.1565, 0.1908,  ..., 0.1290, 0.1442, 0.1499],
         [0.1659, 0.1565, 0.1908,  ..., 0.1290, 0.1715, 0.1499],
         [0.5023, 0.5306, 0.4277,  ..., 0.6131, 0.5401, 0.5504]],
        [[0.2740, 0.2500, 0.2500,  ..., 0.2393, 0.2500, 0.2500],
         [0.2493, 0.2500, 0.2500,  ..., 0.2734, 0.2500, 0.2500],
         [0.2384, 0.2500, 0.2500,  ..., 0.2514, 0.2500, 0.2500],
         [0.2384, 0.2500, 0.2500,  ..., 0.2360, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 846:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1471, 0.1537, 0.1323,  ..., 0.1045, 0.1411, 0.1496],
         [0.1471, 0.1537, 0.1323,  ..., 0.1045, 0.1411, 0.1496],
         [0.1471, 0.1537, 0.1323,  ..., 0.1045, 0.1411, 0.1496],
         [0.5588, 0.5390, 0.6030,  ..., 0.6864, 0.5768, 0.5512]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:15,918 [Process: 0] Synchronize training processes
2024-08-16 13:22:15,919 [Process: 0] Evaluating...
2024-08-16 13:22:15,921 [Process: 0] EPOCH 846:
2024-08-16 13:22:15,923 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:22:17,824 [Process: 0] Synchronize training processes
2024-08-16 13:22:17,825 [Process: 0] Evaluating...
2024-08-16 13:22:17,826 [Process: 0] EPOCH 847:
2024-08-16 13:22:17,828 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1507, 0.1552, 0.1574,  ..., 0.1660, 0.1178, 0.1234],
         [0.1507, 0.1552, 0.1574,  ..., 0.1660, 0.1237, 0.1234],
         [0.1507, 0.1552, 0.1574,  ..., 0.1660, 0.1178, 0.1385],
         [0.5480, 0.5343, 0.5278,  ..., 0.5019, 0.6408, 0.6148]],
        [[0.2500, 0.2671, 0.2500,  ..., 0.2500, 0.2344, 0.2476],
         [0.2500, 0.2886, 0.2500,  ..., 0.2500, 0.2344, 0.2572],
         [0.2500, 0.2222, 0.2500,  ..., 0.2500, 0.2969, 0.2476],
         [0.2500, 0.2222, 0.2500,  ..., 0.2500, 0.2344, 0.2476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 847:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1719, 0.1310, 0.1498,  ..., 0.1468, 0.1355, 0.1475],
         [0.1719, 0.1345, 0.1498,  ..., 0.1468, 0.1355, 0.1475],
         [0.1719, 0.1310, 0.1498,  ..., 0.1468, 0.1355, 0.1475],
         [0.4842, 0.6034, 0.5507,  ..., 0.5596, 0.5936, 0.5576]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:19,711 [Process: 0] Synchronize training processes
2024-08-16 13:22:19,712 [Process: 0] Evaluating...
2024-08-16 13:22:19,714 [Process: 0] EPOCH 848:
2024-08-16 13:22:19,716 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1552, 0.1272, 0.1447,  ..., 0.2055, 0.1758, 0.1194],
         [0.1552, 0.1239, 0.1447,  ..., 0.1781, 0.1758, 0.1194],
         [0.1552, 0.1232, 0.1447,  ..., 0.1745, 0.1758, 0.1194],
         [0.5343, 0.6257, 0.5659,  ..., 0.4419, 0.4725, 0.6417]],
        [[0.2393, 0.2483, 0.2500,  ..., 0.2479, 0.2327, 0.2500],
         [0.2822, 0.2552, 0.2500,  ..., 0.2562, 0.2818, 0.2500],
         [0.2393, 0.2483, 0.2500,  ..., 0.2479, 0.2528, 0.2500],
         [0.2393, 0.2483, 0.2500,  ..., 0.2479, 0.2327, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 848:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0923, 0.1344, 0.1257,  ..., 0.1510, 0.1368, 0.1529],
         [0.0946, 0.1356, 0.1257,  ..., 0.1510, 0.1402, 0.1529],
         [0.0923, 0.1344, 0.1257,  ..., 0.1510, 0.1368, 0.1529],
         [0.7207, 0.5955, 0.6228,  ..., 0.5471, 0.5862, 0.5414]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:21,614 [Process: 0] Synchronize training processes
2024-08-16 13:22:21,615 [Process: 0] Evaluating...
2024-08-16 13:22:21,617 [Process: 0] EPOCH 849:
2024-08-16 13:22:21,619 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1938, 0.1412, 0.1302,  ..., 0.1473, 0.1622, 0.1242],
         [0.1996, 0.1412, 0.1302,  ..., 0.1473, 0.1412, 0.1242],
         [0.1938, 0.1412, 0.1302,  ..., 0.1473, 0.1412, 0.1242],
         [0.4128, 0.5763, 0.6093,  ..., 0.5582, 0.5555, 0.6275]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2481, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2556, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2481, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2481, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 849:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1563, 0.1464, 0.1961,  ..., 0.1677, 0.1681, 0.1577],
         [0.1563, 0.1464, 0.1961,  ..., 0.1677, 0.1681, 0.1577],
         [0.1563, 0.1464, 0.1961,  ..., 0.1677, 0.1681, 0.1577],
         [0.5311, 0.5608, 0.4116,  ..., 0.4970, 0.4957, 0.5268]],
        [[0.2500, 0.2500, 0.2494,  ..., 0.2481, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2519,  ..., 0.2558, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2494,  ..., 0.2481, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2494,  ..., 0.2481, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:23,515 [Process: 0] Synchronize training processes
2024-08-16 13:22:23,515 [Process: 0] Evaluating...
2024-08-16 13:22:23,517 [Process: 0] EPOCH 850:
2024-08-16 13:22:23,519 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1190, 0.1456, 0.1397,  ..., 0.1747, 0.1661, 0.1550],
         [0.1190, 0.1456, 0.1397,  ..., 0.1758, 0.1969, 0.1550],
         [0.1190, 0.1456, 0.1397,  ..., 0.1747, 0.1661, 0.1550],
         [0.6429, 0.5631, 0.5808,  ..., 0.4749, 0.4709, 0.5351]],
        [[0.2500, 0.2491, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2528, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2491, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2491, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 850:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1491, 0.1266, 0.1423,  ..., 0.1756, 0.1150, 0.1578],
         [0.1491, 0.1266, 0.1423,  ..., 0.1756, 0.1204, 0.1578],
         [0.1491, 0.1266, 0.1423,  ..., 0.1756, 0.1150, 0.1578],
         [0.5526, 0.6201, 0.5732,  ..., 0.4731, 0.6497, 0.5265]],
        [[0.2500, 0.2500, 0.2450,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2649,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2450,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2450,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:25,406 [Process: 0] Synchronize training processes
2024-08-16 13:22:25,406 [Process: 0] Evaluating...
2024-08-16 13:22:25,408 [Process: 0] EPOCH 851:
2024-08-16 13:22:25,410 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1930, 0.1539, 0.1434,  ..., 0.1697, 0.1386, 0.1248],
         [0.1546, 0.1554, 0.1532,  ..., 0.1697, 0.1386, 0.1380],
         [0.1546, 0.1539, 0.1434,  ..., 0.1697, 0.1386, 0.1248],
         [0.4978, 0.5367, 0.5600,  ..., 0.4908, 0.5841, 0.6124]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 851:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1280, 0.1544, 0.1119,  ..., 0.1190, 0.1349, 0.1772],
         [0.1385, 0.1549, 0.1119,  ..., 0.1190, 0.1349, 0.1772],
         [0.1280, 0.1544, 0.1119,  ..., 0.1190, 0.1349, 0.1772],
         [0.6055, 0.5362, 0.6643,  ..., 0.6431, 0.5953, 0.4683]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:27,347 [Process: 0] Synchronize training processes
2024-08-16 13:22:27,347 [Process: 0] Evaluating...
2024-08-16 13:22:27,349 [Process: 0] EPOCH 852:
2024-08-16 13:22:27,351 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1216, 0.1198, 0.1071,  ..., 0.1143, 0.2198, 0.1476],
         [0.1216, 0.1275, 0.1071,  ..., 0.1143, 0.1797, 0.1476],
         [0.1218, 0.1198, 0.1071,  ..., 0.1143, 0.1508, 0.1476],
         [0.6350, 0.6329, 0.6786,  ..., 0.6571, 0.4496, 0.5572]],
        [[0.2693, 0.2500, 0.2500,  ..., 0.2500, 0.2288, 0.2500],
         [0.2338, 0.2500, 0.2500,  ..., 0.2500, 0.2601, 0.2500],
         [0.2695, 0.2500, 0.2500,  ..., 0.2500, 0.2823, 0.2500],
         [0.2274, 0.2500, 0.2500,  ..., 0.2500, 0.2288, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 852:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1409, 0.1514, 0.1593,  ..., 0.1797, 0.1244, 0.1325],
         [0.1519, 0.1535, 0.1593,  ..., 0.1797, 0.1244, 0.1325],
         [0.1409, 0.1514, 0.1593,  ..., 0.1797, 0.1244, 0.1325],
         [0.5663, 0.5438, 0.5220,  ..., 0.4609, 0.6269, 0.6024]],
        [[0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2506, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:29,273 [Process: 0] Synchronize training processes
2024-08-16 13:22:29,274 [Process: 0] Evaluating...
2024-08-16 13:22:29,275 [Process: 0] EPOCH 853:
2024-08-16 13:22:29,277 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1277, 0.1306, 0.1443,  ..., 0.1353, 0.1478, 0.1450],
         [0.1277, 0.1306, 0.1443,  ..., 0.1353, 0.1478, 0.1450],
         [0.1277, 0.1306, 0.1443,  ..., 0.1353, 0.1478, 0.1450],
         [0.6168, 0.6083, 0.5672,  ..., 0.5940, 0.5567, 0.5650]],
        [[0.2467, 0.2500, 0.2463,  ..., 0.2500, 0.2448, 0.2500],
         [0.2467, 0.2500, 0.2612,  ..., 0.2500, 0.2448, 0.2500],
         [0.2598, 0.2500, 0.2463,  ..., 0.2500, 0.2655, 0.2500],
         [0.2467, 0.2500, 0.2463,  ..., 0.2500, 0.2448, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 853:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1529, 0.1482, 0.1580,  ..., 0.1469, 0.1766, 0.1264],
         [0.1529, 0.1482, 0.1580,  ..., 0.1469, 0.1766, 0.1264],
         [0.1529, 0.1482, 0.1580,  ..., 0.1469, 0.1766, 0.1264],
         [0.5413, 0.5554, 0.5260,  ..., 0.5594, 0.4703, 0.6207]],
        [[0.2500, 0.2500, 0.2493,  ..., 0.2483, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2521,  ..., 0.2551, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2493,  ..., 0.2483, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2493,  ..., 0.2483, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1497, 0.1150, 0.1708,  ..., 0.1097, 0.1743, 0.1076],
         [0.1497, 0.1150, 0.1773,  ..., 0.1097, 0.1743, 0.1076],
         [0.1497, 0.1150, 0.1708,  ..., 0.1097, 0.1743, 0.1076],
         [0.5510, 0.6550, 0.4812,  ..., 0.6710, 0.4771, 0.6773]],
        [[0.2500, 0.2500, 0.2461,  ..., 0.2472, 0.2409, 0.2500],
         [0.2500, 0.2500, 0.2618,  ..., 0.2680, 0.2774, 0.2500],
         [0.2500, 0.2500, 0.2461,  ..., 0.2424, 0.2409, 0.2500],
         [0.2500, 0.2500, 0.2461,  ..., 0.2424, 0.2409, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 854:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1477, 0.1591, 0.1401,  ..., 0.1474, 0.1302, 0.1477],
         [0.1477, 0.1591, 0.1401,  ..., 0.1474, 0.1302, 0.1477],
         [0.1477, 0.1591, 0.1401,  ..., 0.1474, 0.1302, 0.1477],
         [0.5569, 0.5228, 0.5796,  ..., 0.5578, 0.6094, 0.5570]],
        [[0.2500, 0.2500, 0.2477,  ..., 0.2473, 0.2496, 0.2485],
         [0.2500, 0.2500, 0.2569,  ..., 0.2580, 0.2512, 0.2545],
         [0.2500, 0.2500, 0.2477,  ..., 0.2473, 0.2496, 0.2485],
         [0.2500, 0.2500, 0.2477,  ..., 0.2473, 0.2496, 0.2485]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:22:31,170 [Process: 0] Synchronize training processes
2024-08-16 13:22:31,170 [Process: 0] Evaluating...
2024-08-16 13:22:31,172 [Process: 0] EPOCH 854:
2024-08-16 13:22:31,174 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:22:33,077 [Process: 0] Synchronize training processes
2024-08-16 13:22:33,077 [Process: 0] Evaluating...
2024-08-16 13:22:33,079 [Process: 0] EPOCH 855:
2024-08-16 13:22:33,081 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1215, 0.1695, 0.1457,  ..., 0.1325, 0.1633, 0.1233],
         [0.1215, 0.1695, 0.1457,  ..., 0.1325, 0.1633, 0.1233],
         [0.1215, 0.1695, 0.1457,  ..., 0.1325, 0.1893, 0.1233],
         [0.6355, 0.4914, 0.5628,  ..., 0.6026, 0.4840, 0.6300]],
        [[0.2500, 0.2479, 0.2500,  ..., 0.2499, 0.2500, 0.2402],
         [0.2500, 0.2529, 0.2500,  ..., 0.2503, 0.2500, 0.2516],
         [0.2500, 0.2514, 0.2500,  ..., 0.2499, 0.2500, 0.2680],
         [0.2500, 0.2479, 0.2500,  ..., 0.2499, 0.2500, 0.2402]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 855:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1801, 0.2039, 0.1340,  ..., 0.1893, 0.1780, 0.0957],
         [0.1801, 0.2039, 0.1340,  ..., 0.1893, 0.1780, 0.0964],
         [0.1801, 0.2039, 0.1340,  ..., 0.1893, 0.1780, 0.0957],
         [0.4598, 0.3882, 0.5979,  ..., 0.4322, 0.4661, 0.7122]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2694, 0.2495, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2435, 0.2514, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2435, 0.2495, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2435, 0.2495, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1300, 0.1269, 0.1119,  ..., 0.1413, 0.1906, 0.1270],
         [0.1335, 0.1269, 0.0994,  ..., 0.1413, 0.1906, 0.1271],
         [0.1300, 0.1269, 0.0994,  ..., 0.1413, 0.1906, 0.1270],
         [0.6065, 0.6192, 0.6894,  ..., 0.5762, 0.4283, 0.6189]],
        [[0.2298, 0.2443, 0.2500,  ..., 0.2748, 0.2500, 0.2500],
         [0.2685, 0.2671, 0.2500,  ..., 0.2359, 0.2500, 0.2500],
         [0.2718, 0.2443, 0.2500,  ..., 0.2593, 0.2500, 0.2500],
         [0.2298, 0.2443, 0.2500,  ..., 0.2300, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:34,983 [Process: 0] Synchronize training processes
2024-08-16 13:22:34,984 [Process: 0] Evaluating...
2024-08-16 13:22:34,986 [Process: 0] EPOCH 856:
2024-08-16 13:22:34,988 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 856:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1243, 0.1334, 0.1535,  ..., 0.1488, 0.1324, 0.1357],
         [0.1249, 0.1334, 0.1535,  ..., 0.1488, 0.1324, 0.1411],
         [0.1243, 0.1334, 0.1535,  ..., 0.1488, 0.1324, 0.1357],
         [0.6265, 0.5997, 0.5396,  ..., 0.5535, 0.6028, 0.5875]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1452, 0.2088, 0.1464,  ..., 0.1183, 0.1187, 0.1712],
         [0.1452, 0.1819, 0.1464,  ..., 0.1179, 0.1299, 0.1595],
         [0.1452, 0.1819, 0.1544,  ..., 0.1179, 0.1288, 0.1595],
         [0.5644, 0.4275, 0.5528,  ..., 0.6458, 0.6225, 0.5097]],
        [[0.2500, 0.2500, 0.2815,  ..., 0.2500, 0.2500, 0.2474],
         [0.2500, 0.2500, 0.2395,  ..., 0.2500, 0.2500, 0.2577],
         [0.2500, 0.2500, 0.2395,  ..., 0.2500, 0.2500, 0.2474],
         [0.2500, 0.2500, 0.2395,  ..., 0.2500, 0.2500, 0.2474]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 857:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:22:36,889 [Process: 0] Synchronize training processes
2024-08-16 13:22:36,889 [Process: 0] Evaluating...
2024-08-16 13:22:36,891 [Process: 0] EPOCH 857:
2024-08-16 13:22:36,893 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1532, 0.1219, 0.1699,  ..., 0.1697, 0.1119, 0.0982],
         [0.1532, 0.1309, 0.1699,  ..., 0.1697, 0.1119, 0.0982],
         [0.1532, 0.1217, 0.1699,  ..., 0.1697, 0.1119, 0.0982],
         [0.5404, 0.6255, 0.4902,  ..., 0.4910, 0.6644, 0.7054]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1512, 0.1191, 0.1410,  ..., 0.1897, 0.1206, 0.1741],
         [0.1512, 0.1191, 0.1410,  ..., 0.1873, 0.1206, 0.1741],
         [0.1512, 0.1191, 0.1410,  ..., 0.1873, 0.1206, 0.1741],
         [0.5464, 0.6427, 0.5770,  ..., 0.4357, 0.6382, 0.4778]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2564, 0.2435, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2597, 0.2696, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2419, 0.2435, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2419, 0.2435, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 858:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:22:38,791 [Process: 0] Synchronize training processes
2024-08-16 13:22:38,792 [Process: 0] Evaluating...
2024-08-16 13:22:38,794 [Process: 0] EPOCH 858:
2024-08-16 13:22:38,796 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1491, 0.1218, 0.1624,  ..., 0.1259, 0.1613, 0.1250],
         [0.1491, 0.1218, 0.1624,  ..., 0.1259, 0.1613, 0.1262],
         [0.1491, 0.1218, 0.1624,  ..., 0.1259, 0.1613, 0.1250],
         [0.5526, 0.6346, 0.5127,  ..., 0.6222, 0.5160, 0.6238]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1529, 0.1420, 0.1841,  ..., 0.0952, 0.2576, 0.1507],
         [0.1461, 0.1420, 0.1806,  ..., 0.0952, 0.1744, 0.1507],
         [0.1461, 0.1420, 0.1806,  ..., 0.0952, 0.1733, 0.1507],
         [0.5549, 0.5740, 0.4546,  ..., 0.7144, 0.3947, 0.5478]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2561, 0.2480, 0.2459],
         [0.2500, 0.2500, 0.2500,  ..., 0.2490, 0.2561, 0.2616],
         [0.2500, 0.2500, 0.2500,  ..., 0.2474, 0.2480, 0.2466],
         [0.2500, 0.2500, 0.2500,  ..., 0.2474, 0.2480, 0.2459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 859:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:22:40,679 [Process: 0] Synchronize training processes
2024-08-16 13:22:40,679 [Process: 0] Evaluating...
2024-08-16 13:22:40,681 [Process: 0] EPOCH 859:
2024-08-16 13:22:40,683 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1425, 0.1481, 0.1290,  ..., 0.1494, 0.1240, 0.1544],
         [0.1425, 0.1499, 0.1290,  ..., 0.1494, 0.1240, 0.1544],
         [0.1425, 0.1481, 0.1290,  ..., 0.1494, 0.1240, 0.1544],
         [0.5725, 0.5539, 0.6130,  ..., 0.5519, 0.6281, 0.5368]],
        [[0.2496, 0.2500, 0.2468,  ..., 0.2489, 0.2500, 0.2488],
         [0.2511, 0.2500, 0.2596,  ..., 0.2534, 0.2500, 0.2537],
         [0.2496, 0.2500, 0.2468,  ..., 0.2489, 0.2500, 0.2488],
         [0.2496, 0.2500, 0.2468,  ..., 0.2489, 0.2500, 0.2488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1338, 0.1517, 0.1401,  ..., 0.1614, 0.1549, 0.1804],
         [0.1338, 0.1517, 0.1401,  ..., 0.1614, 0.1549, 0.1804],
         [0.1338, 0.1517, 0.1401,  ..., 0.1614, 0.1549, 0.1804],
         [0.5985, 0.5448, 0.5797,  ..., 0.5159, 0.5352, 0.4589]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2461, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2461, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2617, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2461, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 860:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:22:42,585 [Process: 0] Synchronize training processes
2024-08-16 13:22:42,585 [Process: 0] Evaluating...
2024-08-16 13:22:42,587 [Process: 0] EPOCH 860:
2024-08-16 13:22:42,589 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1345, 0.1341, 0.1700,  ..., 0.1312, 0.1553, 0.1155],
         [0.1345, 0.1341, 0.1700,  ..., 0.1312, 0.1553, 0.1155],
         [0.1345, 0.1341, 0.1700,  ..., 0.1312, 0.1553, 0.1155],
         [0.5966, 0.5976, 0.4901,  ..., 0.6065, 0.5341, 0.6534]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2496],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2511],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2496],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2496]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1400, 0.1680, 0.1322,  ..., 0.1067, 0.1730, 0.1358],
         [0.1400, 0.1680, 0.1322,  ..., 0.1067, 0.1560, 0.1358],
         [0.1400, 0.1680, 0.1322,  ..., 0.1067, 0.1560, 0.1358],
         [0.5799, 0.4960, 0.6034,  ..., 0.6798, 0.5150, 0.5927]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2489, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2534, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2489, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2489, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 861:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:22:44,485 [Process: 0] Synchronize training processes
2024-08-16 13:22:44,485 [Process: 0] Evaluating...
2024-08-16 13:22:44,487 [Process: 0] EPOCH 861:
2024-08-16 13:22:44,489 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1453, 0.1266, 0.1398,  ..., 0.1801, 0.1333, 0.1535],
         [0.1453, 0.1293, 0.1398,  ..., 0.1801, 0.1353, 0.1535],
         [0.1453, 0.1266, 0.1398,  ..., 0.1801, 0.1333, 0.1535],
         [0.5642, 0.6174, 0.5805,  ..., 0.4596, 0.5980, 0.5394]],
        [[0.2489, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2532, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1531, 0.1476, 0.1424,  ..., 0.1360, 0.1387, 0.1292],
         [0.1586, 0.1476, 0.1424,  ..., 0.1360, 0.1422, 0.1292],
         [0.1531, 0.1476, 0.1424,  ..., 0.1360, 0.1460, 0.1292],
         [0.5352, 0.5572, 0.5728,  ..., 0.5919, 0.5731, 0.6125]],
        [[0.2460, 0.2500, 0.2288,  ..., 0.2514, 0.2500, 0.2500],
         [0.2619, 0.2500, 0.2421,  ..., 0.2512, 0.2500, 0.2500],
         [0.2460, 0.2500, 0.3045,  ..., 0.2487, 0.2500, 0.2500],
         [0.2460, 0.2500, 0.2245,  ..., 0.2487, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 862:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:22:46,376 [Process: 0] Synchronize training processes
2024-08-16 13:22:46,377 [Process: 0] Evaluating...
2024-08-16 13:22:46,379 [Process: 0] EPOCH 862:
2024-08-16 13:22:46,381 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1312, 0.0958, 0.1440,  ..., 0.1371, 0.1341, 0.1722],
         [0.1312, 0.0958, 0.1440,  ..., 0.1371, 0.1341, 0.1722],
         [0.1312, 0.0958, 0.1440,  ..., 0.1371, 0.1341, 0.1722],
         [0.6063, 0.7127, 0.5679,  ..., 0.5888, 0.5978, 0.4835]],
        [[0.2475, 0.2500, 0.2583,  ..., 0.2500, 0.2944, 0.2500],
         [0.2574, 0.2500, 0.2472,  ..., 0.2500, 0.2352, 0.2500],
         [0.2475, 0.2500, 0.2472,  ..., 0.2500, 0.2352, 0.2500],
         [0.2475, 0.2500, 0.2472,  ..., 0.2500, 0.2352, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1693, 0.1215, 0.1596,  ..., 0.1273, 0.1617, 0.1411],
         [0.1693, 0.1215, 0.1596,  ..., 0.1273, 0.1658, 0.1411],
         [0.1693, 0.1215, 0.1596,  ..., 0.1273, 0.1658, 0.1411],
         [0.4921, 0.6356, 0.5212,  ..., 0.6180, 0.5066, 0.5766]],
        [[0.2500, 0.2500, 0.2567,  ..., 0.2500, 0.2569, 0.2500],
         [0.2500, 0.2500, 0.2462,  ..., 0.2500, 0.2477, 0.2500],
         [0.2500, 0.2500, 0.2508,  ..., 0.2500, 0.2477, 0.2500],
         [0.2500, 0.2500, 0.2462,  ..., 0.2500, 0.2477, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 863:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:22:48,276 [Process: 0] Synchronize training processes
2024-08-16 13:22:48,276 [Process: 0] Evaluating...
2024-08-16 13:22:48,278 [Process: 0] EPOCH 863:
2024-08-16 13:22:48,280 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1223, 0.1144, 0.1411,  ..., 0.1568, 0.1653, 0.1289],
         [0.1223, 0.1144, 0.1411,  ..., 0.1568, 0.1653, 0.1289],
         [0.1223, 0.1144, 0.1411,  ..., 0.1568, 0.1653, 0.1289],
         [0.6332, 0.6568, 0.5767,  ..., 0.5297, 0.5042, 0.6134]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1690, 0.1719, 0.1817,  ..., 0.1569, 0.2080, 0.1245],
         [0.1690, 0.1719, 0.1817,  ..., 0.1569, 0.2080, 0.1245],
         [0.1690, 0.1719, 0.1817,  ..., 0.1569, 0.2080, 0.1245],
         [0.4930, 0.4842, 0.4549,  ..., 0.5293, 0.3759, 0.6266]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2713, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2751, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2268, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2268, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 864:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:22:50,163 [Process: 0] Synchronize training processes
2024-08-16 13:22:50,164 [Process: 0] Evaluating...
2024-08-16 13:22:50,166 [Process: 0] EPOCH 864:
2024-08-16 13:22:50,168 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1397, 0.1240, 0.1600,  ..., 0.1267, 0.1076, 0.1252],
         [0.1397, 0.1250, 0.1600,  ..., 0.1267, 0.1107, 0.1262],
         [0.1397, 0.1240, 0.1600,  ..., 0.1267, 0.1076, 0.1252],
         [0.5808, 0.6270, 0.5201,  ..., 0.6200, 0.6742, 0.6234]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1419, 0.1254, 0.1520,  ..., 0.1371, 0.1475, 0.1718],
         [0.1419, 0.1282, 0.1520,  ..., 0.1371, 0.1475, 0.1718],
         [0.1419, 0.1254, 0.1520,  ..., 0.1371, 0.1475, 0.1718],
         [0.5742, 0.6209, 0.5439,  ..., 0.5887, 0.5575, 0.4845]],
        [[0.2202, 0.2500, 0.2490,  ..., 0.2500, 0.2500, 0.2502],
         [0.2396, 0.2500, 0.2490,  ..., 0.2500, 0.2500, 0.2531],
         [0.3201, 0.2500, 0.2529,  ..., 0.2500, 0.2500, 0.2631],
         [0.2202, 0.2500, 0.2490,  ..., 0.2500, 0.2500, 0.2336]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 865:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1604, 0.1571, 0.1311,  ..., 0.1316, 0.1080, 0.1234],
         [0.1604, 0.1571, 0.1351,  ..., 0.1316, 0.1080, 0.1234],
         [0.1604, 0.1571, 0.1311,  ..., 0.1316, 0.1080, 0.1234],
         [0.5189, 0.5288, 0.6027,  ..., 0.6053, 0.6760, 0.6297]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:52,052 [Process: 0] Synchronize training processes
2024-08-16 13:22:52,053 [Process: 0] Evaluating...
2024-08-16 13:22:52,055 [Process: 0] EPOCH 865:
2024-08-16 13:22:52,057 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1674, 0.1791, 0.1718,  ..., 0.1414, 0.2494, 0.1845],
         [0.1627, 0.1837, 0.1718,  ..., 0.1414, 0.1464, 0.1845],
         [0.1627, 0.1791, 0.1718,  ..., 0.1414, 0.1343, 0.1845],
         [0.5071, 0.4580, 0.4845,  ..., 0.5757, 0.4699, 0.4464]],
        [[0.2500, 0.2500, 0.2773,  ..., 0.2796, 0.2500, 0.2468],
         [0.2500, 0.2500, 0.2409,  ..., 0.2439, 0.2500, 0.2597],
         [0.2500, 0.2500, 0.2409,  ..., 0.2383, 0.2500, 0.2468],
         [0.2500, 0.2500, 0.2409,  ..., 0.2383, 0.2500, 0.2468]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 866:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1546, 0.1327, 0.1329,  ..., 0.1728, 0.1665, 0.1776],
         [0.1549, 0.1327, 0.1329,  ..., 0.1728, 0.1665, 0.1776],
         [0.1546, 0.1327, 0.1329,  ..., 0.1728, 0.1665, 0.1776],
         [0.5360, 0.6018, 0.6013,  ..., 0.4816, 0.5005, 0.4673]],
        [[0.2500, 0.2482, 0.2485,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2555, 0.2546,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2482, 0.2485,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2482, 0.2485,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:53,947 [Process: 0] Synchronize training processes
2024-08-16 13:22:53,947 [Process: 0] Evaluating...
2024-08-16 13:22:53,949 [Process: 0] EPOCH 866:
2024-08-16 13:22:53,951 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:22:55,856 [Process: 0] Synchronize training processes
2024-08-16 13:22:55,856 [Process: 0] Evaluating...
2024-08-16 13:22:55,858 [Process: 0] EPOCH 867:
2024-08-16 13:22:55,860 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1613, 0.1263, 0.1647,  ..., 0.1425, 0.1552, 0.1650],
         [0.1533, 0.1263, 0.1647,  ..., 0.1425, 0.1552, 0.1650],
         [0.1533, 0.1263, 0.1647,  ..., 0.1425, 0.1552, 0.1650],
         [0.5321, 0.6210, 0.5059,  ..., 0.5724, 0.5343, 0.5049]],
        [[0.2500, 0.2425, 0.2500,  ..., 0.2512, 0.2500, 0.2500],
         [0.2500, 0.2726, 0.2500,  ..., 0.2496, 0.2500, 0.2500],
         [0.2500, 0.2425, 0.2500,  ..., 0.2496, 0.2500, 0.2500],
         [0.2500, 0.2425, 0.2500,  ..., 0.2496, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 867:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1394, 0.1346, 0.1485,  ..., 0.1394, 0.1723, 0.1192],
         [0.1394, 0.1346, 0.1485,  ..., 0.1435, 0.1723, 0.1192],
         [0.1394, 0.1346, 0.1485,  ..., 0.1394, 0.1723, 0.1192],
         [0.5817, 0.5963, 0.5544,  ..., 0.5778, 0.4832, 0.6425]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:57,761 [Process: 0] Synchronize training processes
2024-08-16 13:22:57,762 [Process: 0] Evaluating...
2024-08-16 13:22:57,764 [Process: 0] EPOCH 868:
2024-08-16 13:22:57,766 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1368, 0.0717, 0.1234,  ..., 0.1130, 0.1684, 0.1381],
         [0.1368, 0.0717, 0.1299,  ..., 0.1130, 0.1510, 0.1406],
         [0.1435, 0.0717, 0.1234,  ..., 0.1130, 0.1510, 0.1381],
         [0.5830, 0.7848, 0.6232,  ..., 0.6611, 0.5297, 0.5832]],
        [[0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2304],
         [0.2561, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.3089],
         [0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2304],
         [0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2304]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 868:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1369, 0.1146, 0.1653,  ..., 0.1267, 0.1208, 0.1259],
         [0.1369, 0.1191, 0.1652,  ..., 0.1267, 0.1208, 0.1263],
         [0.1369, 0.1146, 0.1652,  ..., 0.1267, 0.1208, 0.1259],
         [0.5894, 0.6517, 0.5043,  ..., 0.6200, 0.6376, 0.6220]],
        [[0.2489, 0.2500, 0.2500,  ..., 0.2482, 0.2500, 0.2500],
         [0.2533, 0.2500, 0.2500,  ..., 0.2553, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2500,  ..., 0.2482, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2500,  ..., 0.2482, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:22:59,664 [Process: 0] Synchronize training processes
2024-08-16 13:22:59,664 [Process: 0] Evaluating...
2024-08-16 13:22:59,666 [Process: 0] EPOCH 869:
2024-08-16 13:22:59,668 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1270, 0.1430, 0.1610,  ..., 0.1283, 0.1491, 0.1576],
         [0.1270, 0.1430, 0.1610,  ..., 0.1283, 0.1436, 0.1576],
         [0.1270, 0.1430, 0.1610,  ..., 0.1283, 0.1426, 0.1576],
         [0.6190, 0.5710, 0.5169,  ..., 0.6152, 0.5647, 0.5273]],
        [[0.2313, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2370],
         [0.2526, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2844],
         [0.2848, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2415],
         [0.2313, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2370]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 869:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1482, 0.1201, 0.1119,  ..., 0.1727, 0.1678, 0.1081],
         [0.1482, 0.1201, 0.1119,  ..., 0.1727, 0.1678, 0.1116],
         [0.1482, 0.1201, 0.1119,  ..., 0.1727, 0.1678, 0.1081],
         [0.5555, 0.6396, 0.6644,  ..., 0.4820, 0.4966, 0.6722]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:01,562 [Process: 0] Synchronize training processes
2024-08-16 13:23:01,562 [Process: 0] Evaluating...
2024-08-16 13:23:01,564 [Process: 0] EPOCH 870:
2024-08-16 13:23:01,566 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1730, 0.1161, 0.1504,  ..., 0.1290, 0.1933, 0.1545],
         [0.1730, 0.1073, 0.1504,  ..., 0.1290, 0.1204, 0.1545],
         [0.1730, 0.1073, 0.1504,  ..., 0.1290, 0.1204, 0.1545],
         [0.4810, 0.6693, 0.5488,  ..., 0.6131, 0.5660, 0.5365]],
        [[0.2500, 0.2539, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2487, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2487, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2487, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 870:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1783, 0.1643, 0.1769,  ..., 0.1455, 0.1333, 0.1375],
         [0.1820, 0.1643, 0.1769,  ..., 0.1455, 0.1333, 0.1375],
         [0.1783, 0.1643, 0.1769,  ..., 0.1455, 0.1333, 0.1375],
         [0.4613, 0.5070, 0.4694,  ..., 0.5636, 0.6002, 0.5875]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:03,452 [Process: 0] Synchronize training processes
2024-08-16 13:23:03,452 [Process: 0] Evaluating...
2024-08-16 13:23:03,454 [Process: 0] EPOCH 871:
2024-08-16 13:23:03,456 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1276, 0.0995, 0.1405,  ..., 0.1768, 0.2014, 0.1332],
         [0.1329, 0.1018, 0.1438,  ..., 0.1768, 0.1705, 0.1332],
         [0.1276, 0.0995, 0.1418,  ..., 0.1770, 0.1705, 0.1332],
         [0.6119, 0.6992, 0.5739,  ..., 0.4694, 0.4576, 0.6003]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2524, 0.2498, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2614, 0.2507, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2431, 0.2498, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2431, 0.2498, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 871:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1556, 0.1539, 0.1168,  ..., 0.1433, 0.1442, 0.1922],
         [0.1556, 0.1539, 0.1168,  ..., 0.1433, 0.1442, 0.1922],
         [0.1556, 0.1539, 0.1168,  ..., 0.1433, 0.1442, 0.1922],
         [0.5332, 0.5383, 0.6497,  ..., 0.5701, 0.5674, 0.4233]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:05,352 [Process: 0] Synchronize training processes
2024-08-16 13:23:05,353 [Process: 0] Evaluating...
2024-08-16 13:23:05,355 [Process: 0] EPOCH 872:
2024-08-16 13:23:05,357 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1134, 0.1220, 0.1325,  ..., 0.1130, 0.1242, 0.1245],
         [0.1134, 0.1229, 0.1325,  ..., 0.1130, 0.1242, 0.1245],
         [0.1134, 0.1220, 0.1325,  ..., 0.1130, 0.1242, 0.1245],
         [0.6599, 0.6331, 0.6025,  ..., 0.6610, 0.6274, 0.6266]],
        [[0.2500, 0.3017, 0.2500,  ..., 0.2502, 0.2475, 0.2527],
         [0.2500, 0.2329, 0.2500,  ..., 0.2679, 0.2475, 0.2491],
         [0.2500, 0.2327, 0.2500,  ..., 0.2409, 0.2575, 0.2491],
         [0.2500, 0.2327, 0.2500,  ..., 0.2409, 0.2475, 0.2491]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 872:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1542, 0.1427, 0.1319,  ..., 0.1229, 0.1382, 0.1341],
         [0.1542, 0.1427, 0.1319,  ..., 0.1229, 0.1382, 0.1387],
         [0.1542, 0.1427, 0.1319,  ..., 0.1229, 0.1382, 0.1341],
         [0.5375, 0.5720, 0.6044,  ..., 0.6313, 0.5854, 0.5931]],
        [[0.2570, 0.2474, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2559, 0.2579, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2436, 0.2474, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2436, 0.2474, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:07,246 [Process: 0] Synchronize training processes
2024-08-16 13:23:07,247 [Process: 0] Evaluating...
2024-08-16 13:23:07,249 [Process: 0] EPOCH 873:
2024-08-16 13:23:07,251 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1406, 0.1303, 0.1225,  ..., 0.1472, 0.1556, 0.1163],
         [0.1406, 0.1306, 0.1195,  ..., 0.1472, 0.1556, 0.1163],
         [0.1406, 0.1303, 0.1157,  ..., 0.1472, 0.1556, 0.1163],
         [0.5783, 0.6089, 0.6423,  ..., 0.5584, 0.5331, 0.6510]],
        [[0.2500, 0.2479, 0.2500,  ..., 0.2500, 0.2500, 0.2406],
         [0.2500, 0.2519, 0.2500,  ..., 0.2500, 0.2500, 0.3012],
         [0.2500, 0.2523, 0.2500,  ..., 0.2500, 0.2500, 0.2291],
         [0.2500, 0.2479, 0.2500,  ..., 0.2500, 0.2500, 0.2291]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 873:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1191, 0.0947, 0.1320,  ..., 0.1451, 0.1617, 0.1323],
         [0.1191, 0.0947, 0.1320,  ..., 0.1451, 0.1617, 0.1325],
         [0.1191, 0.0947, 0.1320,  ..., 0.1451, 0.1617, 0.1323],
         [0.6427, 0.7158, 0.6040,  ..., 0.5647, 0.5149, 0.6028]],
        [[0.2497, 0.2492, 0.2492,  ..., 0.2500, 0.2490, 0.2480],
         [0.2508, 0.2524, 0.2525,  ..., 0.2500, 0.2529, 0.2560],
         [0.2497, 0.2492, 0.2492,  ..., 0.2500, 0.2490, 0.2480],
         [0.2497, 0.2492, 0.2492,  ..., 0.2500, 0.2490, 0.2480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:23:09,157 [Process: 0] Synchronize training processes
2024-08-16 13:23:09,157 [Process: 0] Evaluating...
2024-08-16 13:23:09,159 [Process: 0] EPOCH 874:
2024-08-16 13:23:09,161 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.2018, 0.1274, 0.1925,  ..., 0.1452, 0.1002, 0.1367],
         [0.1682, 0.1274, 0.1925,  ..., 0.1469, 0.1002, 0.1390],
         [0.1668, 0.1274, 0.1925,  ..., 0.1452, 0.1002, 0.1367],
         [0.4632, 0.6177, 0.4225,  ..., 0.5626, 0.6993, 0.5876]],
        [[0.2500, 0.2500, 0.2445,  ..., 0.2500, 0.2455, 0.2500],
         [0.2500, 0.2500, 0.2666,  ..., 0.2500, 0.2634, 0.2500],
         [0.2500, 0.2500, 0.2445,  ..., 0.2500, 0.2455, 0.2500],
         [0.2500, 0.2500, 0.2445,  ..., 0.2500, 0.2455, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 874:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1497, 0.1218, 0.0821,  ..., 0.2048, 0.1885, 0.1182],
         [0.1497, 0.1275, 0.0865,  ..., 0.2058, 0.1886, 0.1182],
         [0.1497, 0.1218, 0.0821,  ..., 0.2048, 0.1885, 0.1182],
         [0.5510, 0.6289, 0.7493,  ..., 0.3845, 0.4343, 0.6455]],
        [[0.2472, 0.2500, 0.2500,  ..., 0.2499, 0.2485, 0.2497],
         [0.2584, 0.2500, 0.2500,  ..., 0.2504, 0.2546, 0.2508],
         [0.2472, 0.2500, 0.2500,  ..., 0.2499, 0.2485, 0.2497],
         [0.2472, 0.2500, 0.2500,  ..., 0.2499, 0.2485, 0.2497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1576, 0.1768, 0.1518,  ..., 0.1282, 0.1977, 0.1319],
         [0.1416, 0.1768, 0.1526,  ..., 0.1282, 0.1977, 0.1319],
         [0.1397, 0.1768, 0.1518,  ..., 0.1282, 0.1977, 0.1319],
         [0.5612, 0.4697, 0.5438,  ..., 0.6155, 0.4070, 0.6044]],
        [[0.2500, 0.2379, 0.2597,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2863, 0.2531,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2379, 0.2579,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2379, 0.2293,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:11,049 [Process: 0] Synchronize training processes
2024-08-16 13:23:11,049 [Process: 0] Evaluating...
2024-08-16 13:23:11,051 [Process: 0] EPOCH 875:
2024-08-16 13:23:11,053 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 875:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1442, 0.1497, 0.1529,  ..., 0.1553, 0.1298, 0.1713],
         [0.1442, 0.1497, 0.1529,  ..., 0.1571, 0.1298, 0.1713],
         [0.1442, 0.1497, 0.1529,  ..., 0.1553, 0.1298, 0.1713],
         [0.5674, 0.5508, 0.5413,  ..., 0.5323, 0.6106, 0.4860]],
        [[0.2486, 0.2495, 0.2499,  ..., 0.2500, 0.2492, 0.2496],
         [0.2543, 0.2515, 0.2502,  ..., 0.2500, 0.2525, 0.2511],
         [0.2486, 0.2495, 0.2499,  ..., 0.2500, 0.2492, 0.2496],
         [0.2486, 0.2495, 0.2499,  ..., 0.2500, 0.2492, 0.2496]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1108, 0.0885, 0.1237,  ..., 0.1026, 0.1393, 0.1417],
         [0.1125, 0.0900, 0.1237,  ..., 0.1026, 0.1393, 0.1546],
         [0.1108, 0.0885, 0.1237,  ..., 0.1026, 0.1393, 0.1417],
         [0.6660, 0.7331, 0.6289,  ..., 0.6922, 0.5820, 0.5620]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2493, 0.2479, 0.3005],
         [0.2500, 0.2500, 0.2500,  ..., 0.2521, 0.2479, 0.2259],
         [0.2500, 0.2500, 0.2500,  ..., 0.2493, 0.2564, 0.2478],
         [0.2500, 0.2500, 0.2500,  ..., 0.2493, 0.2479, 0.2259]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 876:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:23:12,963 [Process: 0] Synchronize training processes
2024-08-16 13:23:12,963 [Process: 0] Evaluating...
2024-08-16 13:23:12,965 [Process: 0] EPOCH 876:
2024-08-16 13:23:12,967 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1457, 0.1397, 0.1545,  ..., 0.1548, 0.1364, 0.1476],
         [0.1457, 0.1397, 0.1545,  ..., 0.1548, 0.1364, 0.1476],
         [0.1457, 0.1397, 0.1545,  ..., 0.1548, 0.1364, 0.1476],
         [0.5630, 0.5808, 0.5365,  ..., 0.5355, 0.5907, 0.5572]],
        [[0.2494, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2517, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2494, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2494, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1457, 0.1441, 0.1346,  ..., 0.1551, 0.1692, 0.1568],
         [0.1460, 0.1441, 0.1346,  ..., 0.1551, 0.1692, 0.1612],
         [0.1457, 0.1441, 0.1346,  ..., 0.1551, 0.1692, 0.1568],
         [0.5627, 0.5677, 0.5962,  ..., 0.5348, 0.4925, 0.5252]],
        [[0.2500, 0.2471, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2588, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2471, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2471, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 877:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:23:14,867 [Process: 0] Synchronize training processes
2024-08-16 13:23:14,868 [Process: 0] Evaluating...
2024-08-16 13:23:14,869 [Process: 0] EPOCH 877:
2024-08-16 13:23:14,872 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1239, 0.1347, 0.1453,  ..., 0.1487, 0.1453, 0.1411],
         [0.1239, 0.1347, 0.1453,  ..., 0.1487, 0.1453, 0.1411],
         [0.1239, 0.1347, 0.1453,  ..., 0.1487, 0.1453, 0.1411],
         [0.6284, 0.5960, 0.5641,  ..., 0.5539, 0.5640, 0.5767]],
        [[0.2496, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2512, 0.2500, 0.2500,  ..., 0.2500, 0.2501, 0.2517],
         [0.2496, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2496, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1520, 0.1516, 0.1043,  ..., 0.1543, 0.2006, 0.1388],
         [0.1520, 0.1516, 0.1043,  ..., 0.1377, 0.2006, 0.1388],
         [0.1520, 0.1516, 0.1043,  ..., 0.1377, 0.2006, 0.1407],
         [0.5439, 0.5451, 0.6872,  ..., 0.5704, 0.3982, 0.5816]],
        [[0.2500, 0.2731, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2530, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2370, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2370, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 878:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:23:16,792 [Process: 0] Synchronize training processes
2024-08-16 13:23:16,792 [Process: 0] Evaluating...
2024-08-16 13:23:16,794 [Process: 0] EPOCH 878:
2024-08-16 13:23:16,796 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1192, 0.1471, 0.1478,  ..., 0.1492, 0.1577, 0.1661],
         [0.1201, 0.1471, 0.1478,  ..., 0.1503, 0.1577, 0.1661],
         [0.1192, 0.1471, 0.1478,  ..., 0.1492, 0.1577, 0.1661],
         [0.6416, 0.5588, 0.5567,  ..., 0.5512, 0.5268, 0.5016]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2494, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2518, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2494, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2494, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1224, 0.1482, 0.1177,  ..., 0.1242, 0.1312, 0.1521],
         [0.1276, 0.1482, 0.1177,  ..., 0.1244, 0.1312, 0.1521],
         [0.1224, 0.1482, 0.1177,  ..., 0.1242, 0.1312, 0.1521],
         [0.6276, 0.5554, 0.6470,  ..., 0.6272, 0.6064, 0.5436]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 879:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:23:18,699 [Process: 0] Synchronize training processes
2024-08-16 13:23:18,700 [Process: 0] Evaluating...
2024-08-16 13:23:18,702 [Process: 0] EPOCH 879:
2024-08-16 13:23:18,704 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1427, 0.1208, 0.1040,  ..., 0.1672, 0.1740, 0.1616],
         [0.1427, 0.1234, 0.1040,  ..., 0.1672, 0.1740, 0.1616],
         [0.1427, 0.1208, 0.1040,  ..., 0.1672, 0.1740, 0.1616],
         [0.5720, 0.6349, 0.6880,  ..., 0.4984, 0.4781, 0.5152]],
        [[0.2500, 0.2500, 0.2491,  ..., 0.2500, 0.2484, 0.2500],
         [0.2500, 0.2500, 0.2526,  ..., 0.2500, 0.2547, 0.2500],
         [0.2500, 0.2500, 0.2491,  ..., 0.2500, 0.2484, 0.2500],
         [0.2500, 0.2500, 0.2491,  ..., 0.2500, 0.2484, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1289, 0.1364, 0.1304,  ..., 0.1101, 0.1851, 0.1185],
         [0.1289, 0.1364, 0.1393,  ..., 0.1102, 0.1851, 0.1185],
         [0.1289, 0.1364, 0.1304,  ..., 0.1101, 0.1851, 0.1185],
         [0.6134, 0.5908, 0.5998,  ..., 0.6696, 0.4447, 0.6445]],
        [[0.2500, 0.2400, 0.2500,  ..., 0.2654, 0.2507, 0.2500],
         [0.2500, 0.2689, 0.2500,  ..., 0.2449, 0.2498, 0.2500],
         [0.2500, 0.2511, 0.2500,  ..., 0.2449, 0.2498, 0.2500],
         [0.2500, 0.2400, 0.2500,  ..., 0.2449, 0.2498, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 880:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:23:20,609 [Process: 0] Synchronize training processes
2024-08-16 13:23:20,609 [Process: 0] Evaluating...
2024-08-16 13:23:20,611 [Process: 0] EPOCH 880:
2024-08-16 13:23:20,613 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1381, 0.1487, 0.1165,  ..., 0.1282, 0.1316, 0.1440],
         [0.1440, 0.1487, 0.1165,  ..., 0.1282, 0.1316, 0.1440],
         [0.1381, 0.1487, 0.1165,  ..., 0.1282, 0.1316, 0.1440],
         [0.5797, 0.5538, 0.6504,  ..., 0.6154, 0.6052, 0.5679]],
        [[0.2500, 0.2492, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2523, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2492, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2492, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1755, 0.1326, 0.1243,  ..., 0.1570, 0.1620, 0.1369],
         [0.1755, 0.1326, 0.1243,  ..., 0.1509, 0.1620, 0.1369],
         [0.1755, 0.1416, 0.1243,  ..., 0.1496, 0.1620, 0.1369],
         [0.4736, 0.5932, 0.6271,  ..., 0.5426, 0.5139, 0.5892]],
        [[0.2500, 0.2500, 0.2427,  ..., 0.2500, 0.2500, 0.2690],
         [0.2500, 0.2500, 0.2754,  ..., 0.2500, 0.2500, 0.2521],
         [0.2500, 0.2500, 0.2410,  ..., 0.2500, 0.2500, 0.2485],
         [0.2500, 0.2500, 0.2410,  ..., 0.2500, 0.2500, 0.2303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 881:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:23:22,497 [Process: 0] Synchronize training processes
2024-08-16 13:23:22,497 [Process: 0] Evaluating...
2024-08-16 13:23:22,499 [Process: 0] EPOCH 881:
2024-08-16 13:23:22,501 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1421, 0.1521, 0.1593,  ..., 0.1398, 0.1516, 0.1388],
         [0.1421, 0.1521, 0.1593,  ..., 0.1398, 0.1516, 0.1388],
         [0.1421, 0.1521, 0.1593,  ..., 0.1398, 0.1516, 0.1388],
         [0.5738, 0.5436, 0.5220,  ..., 0.5805, 0.5452, 0.5835]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2507, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1287, 0.1448, 0.1309,  ..., 0.1185, 0.1867, 0.1292],
         [0.1287, 0.1448, 0.1309,  ..., 0.1185, 0.1313, 0.1292],
         [0.1287, 0.1448, 0.1309,  ..., 0.1185, 0.1313, 0.1292],
         [0.6139, 0.5656, 0.6074,  ..., 0.6445, 0.5508, 0.6124]],
        [[0.2500, 0.2417, 0.2553,  ..., 0.2500, 0.2577, 0.2500],
         [0.2500, 0.2417, 0.2462,  ..., 0.2500, 0.2474, 0.2500],
         [0.2500, 0.2749, 0.2878,  ..., 0.2500, 0.2474, 0.2500],
         [0.2500, 0.2417, 0.2107,  ..., 0.2500, 0.2474, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 882:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:23:24,402 [Process: 0] Synchronize training processes
2024-08-16 13:23:24,402 [Process: 0] Evaluating...
2024-08-16 13:23:24,404 [Process: 0] EPOCH 882:
2024-08-16 13:23:24,406 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1239, 0.1222, 0.1630,  ..., 0.1473, 0.1510, 0.1130],
         [0.1239, 0.1222, 0.1630,  ..., 0.1473, 0.1510, 0.1130],
         [0.1239, 0.1222, 0.1630,  ..., 0.1473, 0.1510, 0.1130],
         [0.6283, 0.6333, 0.5110,  ..., 0.5582, 0.5471, 0.6609]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1356, 0.1467, 0.1075,  ..., 0.1737, 0.1411, 0.1381],
         [0.1356, 0.1467, 0.1075,  ..., 0.1737, 0.1411, 0.1381],
         [0.1356, 0.1467, 0.1075,  ..., 0.1737, 0.1411, 0.1381],
         [0.5933, 0.5600, 0.6775,  ..., 0.4790, 0.5767, 0.5857]],
        [[0.2500, 0.2500, 0.2773,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2831,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2198,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2198,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 883:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:23:26,316 [Process: 0] Synchronize training processes
2024-08-16 13:23:26,317 [Process: 0] Evaluating...
2024-08-16 13:23:26,319 [Process: 0] EPOCH 883:
2024-08-16 13:23:26,321 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1549, 0.1334, 0.1471,  ..., 0.1557, 0.1287, 0.1293],
         [0.1549, 0.1384, 0.1471,  ..., 0.1557, 0.1287, 0.1293],
         [0.1549, 0.1334, 0.1471,  ..., 0.1557, 0.1287, 0.1293],
         [0.5353, 0.5949, 0.5588,  ..., 0.5330, 0.6139, 0.6121]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1128, 0.1525, 0.1161,  ..., 0.1589, 0.1965, 0.1426],
         [0.1128, 0.1525, 0.1161,  ..., 0.1589, 0.1523, 0.1445],
         [0.1128, 0.1525, 0.1161,  ..., 0.1589, 0.1942, 0.1426],
         [0.6616, 0.5425, 0.6517,  ..., 0.5234, 0.4570, 0.5703]],
        [[0.2500, 0.2429, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2712, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2429, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2429, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 884:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:23:28,283 [Process: 0] Synchronize training processes
2024-08-16 13:23:28,283 [Process: 0] Evaluating...
2024-08-16 13:23:28,285 [Process: 0] EPOCH 884:
2024-08-16 13:23:28,287 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1205, 0.1581, 0.1559,  ..., 0.1220, 0.1276, 0.1344],
         [0.1205, 0.1581, 0.1559,  ..., 0.1220, 0.1276, 0.1344],
         [0.1205, 0.1581, 0.1559,  ..., 0.1220, 0.1276, 0.1344],
         [0.6384, 0.5258, 0.5324,  ..., 0.6341, 0.6173, 0.5967]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1342, 0.1257, 0.1164,  ..., 0.1140, 0.1805, 0.1370],
         [0.1342, 0.1257, 0.1164,  ..., 0.1140, 0.1805, 0.1370],
         [0.1342, 0.1257, 0.1164,  ..., 0.1140, 0.1827, 0.1370],
         [0.5973, 0.6228, 0.6509,  ..., 0.6580, 0.4563, 0.5890]],
        [[0.2500, 0.2482, 0.2500,  ..., 0.2371, 0.2500, 0.2500],
         [0.2500, 0.2553, 0.2500,  ..., 0.2733, 0.2500, 0.2500],
         [0.2500, 0.2482, 0.2500,  ..., 0.2566, 0.2500, 0.2500],
         [0.2500, 0.2482, 0.2500,  ..., 0.2330, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 885:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1141, 0.1748, 0.1095,  ..., 0.1720, 0.1429, 0.1444],
         [0.1161, 0.1748, 0.1095,  ..., 0.1720, 0.1429, 0.1444],
         [0.1141, 0.1748, 0.1095,  ..., 0.1720, 0.1429, 0.1444],
         [0.6558, 0.4757, 0.6716,  ..., 0.4840, 0.5713, 0.5668]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:30,186 [Process: 0] Synchronize training processes
2024-08-16 13:23:30,186 [Process: 0] Evaluating...
2024-08-16 13:23:30,188 [Process: 0] EPOCH 885:
2024-08-16 13:23:30,190 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1031, 0.1419, 0.1300,  ..., 0.1343, 0.1486, 0.1316],
         [0.1019, 0.1419, 0.1300,  ..., 0.1377, 0.1440, 0.1316],
         [0.1019, 0.1419, 0.1300,  ..., 0.1497, 0.1385, 0.1316],
         [0.6931, 0.5742, 0.6101,  ..., 0.5783, 0.5688, 0.6052]],
        [[0.2500, 0.2391, 0.2500,  ..., 0.2500, 0.2492, 0.2500],
         [0.2500, 0.2796, 0.2500,  ..., 0.2500, 0.2508, 0.2500],
         [0.2500, 0.2423, 0.2500,  ..., 0.2500, 0.2508, 0.2500],
         [0.2500, 0.2391, 0.2500,  ..., 0.2500, 0.2492, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 886:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1453, 0.1397, 0.1214,  ..., 0.1526, 0.1690, 0.1421],
         [0.1453, 0.1397, 0.1214,  ..., 0.1526, 0.1690, 0.1421],
         [0.1453, 0.1397, 0.1214,  ..., 0.1526, 0.1690, 0.1421],
         [0.5640, 0.5809, 0.6358,  ..., 0.5423, 0.4930, 0.5737]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:32,089 [Process: 0] Synchronize training processes
2024-08-16 13:23:32,090 [Process: 0] Evaluating...
2024-08-16 13:23:32,092 [Process: 0] EPOCH 886:
2024-08-16 13:23:32,094 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1229, 0.1890, 0.1674,  ..., 0.1154, 0.1885, 0.1598],
         [0.1229, 0.1890, 0.1674,  ..., 0.1154, 0.1843, 0.1598],
         [0.1229, 0.1890, 0.1674,  ..., 0.1154, 0.1843, 0.1598],
         [0.6312, 0.4331, 0.4979,  ..., 0.6538, 0.4428, 0.5206]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 887:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1638, 0.1374, 0.1244,  ..., 0.1295, 0.1200, 0.1593],
         [0.1638, 0.1374, 0.1244,  ..., 0.1295, 0.1200, 0.1593],
         [0.1638, 0.1374, 0.1244,  ..., 0.1295, 0.1200, 0.1593],
         [0.5086, 0.5878, 0.6268,  ..., 0.6114, 0.6400, 0.5222]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:33,979 [Process: 0] Synchronize training processes
2024-08-16 13:23:33,979 [Process: 0] Evaluating...
2024-08-16 13:23:33,981 [Process: 0] EPOCH 887:
2024-08-16 13:23:33,983 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1531, 0.1396, 0.1464,  ..., 0.1638, 0.2077, 0.1588],
         [0.1531, 0.1396, 0.1464,  ..., 0.1542, 0.1810, 0.1588],
         [0.1531, 0.1396, 0.1464,  ..., 0.1542, 0.1717, 0.1588],
         [0.5407, 0.5812, 0.5607,  ..., 0.5278, 0.4396, 0.5237]],
        [[0.2500, 0.2532, 0.2490,  ..., 0.2500, 0.2397, 0.3226],
         [0.2500, 0.2581, 0.2530,  ..., 0.2500, 0.2810, 0.2258],
         [0.2500, 0.2444, 0.2490,  ..., 0.2500, 0.2397, 0.2258],
         [0.2500, 0.2444, 0.2490,  ..., 0.2500, 0.2397, 0.2258]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 888:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2051, 0.1526, 0.1098,  ..., 0.1380, 0.1826, 0.1355],
         [0.2051, 0.1526, 0.1098,  ..., 0.1380, 0.1826, 0.1355],
         [0.2051, 0.1526, 0.1098,  ..., 0.1380, 0.1826, 0.1355],
         [0.3847, 0.5422, 0.6707,  ..., 0.5861, 0.4523, 0.5934]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:35,886 [Process: 0] Synchronize training processes
2024-08-16 13:23:35,887 [Process: 0] Evaluating...
2024-08-16 13:23:35,888 [Process: 0] EPOCH 888:
2024-08-16 13:23:35,890 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1332, 0.1540, 0.1963,  ..., 0.0961, 0.1980, 0.1625],
         [0.1334, 0.1540, 0.1963,  ..., 0.0981, 0.1938, 0.1625],
         [0.1332, 0.1540, 0.1963,  ..., 0.0961, 0.1925, 0.1625],
         [0.6001, 0.5381, 0.4111,  ..., 0.7098, 0.4157, 0.5124]],
        [[0.2500, 0.2747, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2418, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2418, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2418, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 889:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1179, 0.1534, 0.1501,  ..., 0.1618, 0.1171, 0.2033],
         [0.1179, 0.1534, 0.1501,  ..., 0.1618, 0.1171, 0.2033],
         [0.1179, 0.1534, 0.1501,  ..., 0.1618, 0.1171, 0.2033],
         [0.6463, 0.5397, 0.5496,  ..., 0.5146, 0.6487, 0.3902]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:37,799 [Process: 0] Synchronize training processes
2024-08-16 13:23:37,799 [Process: 0] Evaluating...
2024-08-16 13:23:37,801 [Process: 0] EPOCH 889:
2024-08-16 13:23:37,803 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1168, 0.1508, 0.1659,  ..., 0.1207, 0.1658, 0.1489],
         [0.1168, 0.1508, 0.1609,  ..., 0.1207, 0.1658, 0.1592],
         [0.1168, 0.1508, 0.1609,  ..., 0.1207, 0.1658, 0.1489],
         [0.6496, 0.5476, 0.5123,  ..., 0.6380, 0.5026, 0.5430]],
        [[0.2463, 0.2500, 0.2500,  ..., 0.2478, 0.2500, 0.2500],
         [0.2610, 0.2500, 0.2500,  ..., 0.2567, 0.2500, 0.2500],
         [0.2463, 0.2500, 0.2500,  ..., 0.2478, 0.2500, 0.2500],
         [0.2463, 0.2500, 0.2500,  ..., 0.2478, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 890:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1647, 0.1299, 0.1588,  ..., 0.1324, 0.1493, 0.1278],
         [0.1647, 0.1299, 0.1588,  ..., 0.1324, 0.1493, 0.1278],
         [0.1647, 0.1299, 0.1588,  ..., 0.1324, 0.1493, 0.1278],
         [0.5058, 0.6103, 0.5235,  ..., 0.6027, 0.5520, 0.6166]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:39,689 [Process: 0] Synchronize training processes
2024-08-16 13:23:39,690 [Process: 0] Evaluating...
2024-08-16 13:23:39,692 [Process: 0] EPOCH 890:
2024-08-16 13:23:39,693 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1471, 0.1385, 0.1523,  ..., 0.1369, 0.3035, 0.1329],
         [0.1471, 0.1385, 0.1597,  ..., 0.1369, 0.1690, 0.1329],
         [0.1471, 0.1385, 0.1523,  ..., 0.1369, 0.1615, 0.1329],
         [0.5586, 0.5846, 0.5358,  ..., 0.5894, 0.3660, 0.6014]],
        [[0.3042, 0.2500, 0.2869,  ..., 0.2500, 0.2522, 0.2537],
         [0.2319, 0.2500, 0.2377,  ..., 0.2500, 0.2608, 0.2488],
         [0.2319, 0.2500, 0.2377,  ..., 0.2500, 0.2435, 0.2488],
         [0.2319, 0.2500, 0.2377,  ..., 0.2500, 0.2435, 0.2488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 891:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1471, 0.1943, 0.1578,  ..., 0.1476, 0.1147, 0.1382],
         [0.1471, 0.1943, 0.1578,  ..., 0.1476, 0.1147, 0.1382],
         [0.1471, 0.1943, 0.1578,  ..., 0.1476, 0.1147, 0.1382],
         [0.5586, 0.4170, 0.5266,  ..., 0.5572, 0.6559, 0.5855]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2493, 0.2500, 0.2468],
         [0.2500, 0.2500, 0.2500,  ..., 0.2522, 0.2500, 0.2595],
         [0.2500, 0.2500, 0.2500,  ..., 0.2493, 0.2500, 0.2468],
         [0.2500, 0.2500, 0.2500,  ..., 0.2493, 0.2500, 0.2468]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:41,576 [Process: 0] Synchronize training processes
2024-08-16 13:23:41,576 [Process: 0] Evaluating...
2024-08-16 13:23:41,578 [Process: 0] EPOCH 891:
2024-08-16 13:23:41,580 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:23:43,474 [Process: 0] Synchronize training processes
2024-08-16 13:23:43,475 [Process: 0] Evaluating...
2024-08-16 13:23:43,476 [Process: 0] EPOCH 892:
2024-08-16 13:23:43,478 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1337, 0.1206, 0.1110,  ..., 0.1723, 0.2288, 0.1667],
         [0.1329, 0.1206, 0.1110,  ..., 0.1797, 0.1273, 0.1667],
         [0.1329, 0.1206, 0.1110,  ..., 0.1723, 0.1273, 0.1667],
         [0.6005, 0.6382, 0.6671,  ..., 0.4757, 0.5166, 0.5000]],
        [[0.2324, 0.2353, 0.2500,  ..., 0.2500, 0.2500, 0.2587],
         [0.2777, 0.2509, 0.2500,  ..., 0.2500, 0.2500, 0.2471],
         [0.2574, 0.2785, 0.2500,  ..., 0.2500, 0.2500, 0.2471],
         [0.2324, 0.2353, 0.2500,  ..., 0.2500, 0.2500, 0.2471]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 892:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1622, 0.1478, 0.1674,  ..., 0.1395, 0.1373, 0.1518],
         [0.1622, 0.1519, 0.1674,  ..., 0.1395, 0.1446, 0.1518],
         [0.1622, 0.1478, 0.1674,  ..., 0.1395, 0.1373, 0.1518],
         [0.5135, 0.5524, 0.4979,  ..., 0.5816, 0.5809, 0.5446]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:45,486 [Process: 0] Synchronize training processes
2024-08-16 13:23:45,487 [Process: 0] Evaluating...
2024-08-16 13:23:45,489 [Process: 0] EPOCH 893:
2024-08-16 13:23:45,491 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1562, 0.1012, 0.1472,  ..., 0.1435, 0.2259, 0.1441],
         [0.1562, 0.1012, 0.1483,  ..., 0.1447, 0.1529, 0.1441],
         [0.1562, 0.1012, 0.1472,  ..., 0.1435, 0.2046, 0.1441],
         [0.5315, 0.6963, 0.5573,  ..., 0.5684, 0.4167, 0.5678]],
        [[0.2500, 0.2500, 0.2346,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2873,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2435,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2346,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 893:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1209, 0.1746, 0.1447,  ..., 0.1396, 0.1648, 0.1216],
         [0.1209, 0.1746, 0.1447,  ..., 0.1396, 0.1648, 0.1216],
         [0.1209, 0.1746, 0.1447,  ..., 0.1396, 0.1648, 0.1216],
         [0.6373, 0.4761, 0.5659,  ..., 0.5811, 0.5056, 0.6351]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:47,463 [Process: 0] Synchronize training processes
2024-08-16 13:23:47,463 [Process: 0] Evaluating...
2024-08-16 13:23:47,465 [Process: 0] EPOCH 894:
2024-08-16 13:23:47,467 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1837, 0.1676, 0.1646,  ..., 0.1517, 0.1553, 0.1242],
         [0.1837, 0.1676, 0.1646,  ..., 0.1390, 0.1553, 0.1242],
         [0.1837, 0.1676, 0.1646,  ..., 0.1430, 0.1553, 0.1242],
         [0.4490, 0.4973, 0.5061,  ..., 0.5664, 0.5342, 0.6274]],
        [[0.2500, 0.2500, 0.2757,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2629,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2307,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2307,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 894:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1301, 0.1658, 0.1557,  ..., 0.1193, 0.1309, 0.1159],
         [0.1301, 0.1658, 0.1557,  ..., 0.1193, 0.1309, 0.1159],
         [0.1301, 0.1658, 0.1557,  ..., 0.1193, 0.1309, 0.1159],
         [0.6098, 0.5027, 0.5330,  ..., 0.6420, 0.6072, 0.6522]],
        [[0.2500, 0.2500, 0.2478,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2567,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2478,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2478,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:49,419 [Process: 0] Synchronize training processes
2024-08-16 13:23:49,420 [Process: 0] Evaluating...
2024-08-16 13:23:49,422 [Process: 0] EPOCH 895:
2024-08-16 13:23:49,424 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1679, 0.1617, 0.1819,  ..., 0.1295, 0.1973, 0.1554],
         [0.1679, 0.1617, 0.1639,  ..., 0.1295, 0.1754, 0.1554],
         [0.1679, 0.1617, 0.1639,  ..., 0.1295, 0.1754, 0.1554],
         [0.4963, 0.5150, 0.4903,  ..., 0.6115, 0.4520, 0.5339]],
        [[0.2508, 0.2500, 0.2694,  ..., 0.2500, 0.2500, 0.2435],
         [0.2643, 0.2500, 0.2435,  ..., 0.2500, 0.2500, 0.2694],
         [0.2424, 0.2500, 0.2435,  ..., 0.2500, 0.2500, 0.2435],
         [0.2424, 0.2500, 0.2435,  ..., 0.2500, 0.2500, 0.2435]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 895:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1283, 0.1205, 0.1661,  ..., 0.1322, 0.1487, 0.1385],
         [0.1283, 0.1254, 0.1661,  ..., 0.1322, 0.1506, 0.1385],
         [0.1283, 0.1205, 0.1661,  ..., 0.1322, 0.1487, 0.1385],
         [0.6152, 0.6336, 0.5018,  ..., 0.6033, 0.5520, 0.5844]],
        [[0.2478, 0.2494, 0.2500,  ..., 0.2491, 0.2547, 0.2500],
         [0.2567, 0.2518, 0.2500,  ..., 0.2526, 0.2523, 0.2500],
         [0.2478, 0.2494, 0.2500,  ..., 0.2491, 0.2465, 0.2500],
         [0.2478, 0.2494, 0.2500,  ..., 0.2491, 0.2465, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:23:51,321 [Process: 0] Synchronize training processes
2024-08-16 13:23:51,322 [Process: 0] Evaluating...
2024-08-16 13:23:51,324 [Process: 0] EPOCH 896:
2024-08-16 13:23:51,326 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1367, 0.1750, 0.1577,  ..., 0.1537, 0.1413, 0.1074],
         [0.1393, 0.1719, 0.1577,  ..., 0.1577, 0.1224, 0.1112],
         [0.1367, 0.1719, 0.1577,  ..., 0.1537, 0.1224, 0.1074],
         [0.5874, 0.4812, 0.5270,  ..., 0.5348, 0.6140, 0.6740]],
        [[0.2463, 0.2637, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2610, 0.2454, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2463, 0.2454, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2463, 0.2454, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 896:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1192, 0.1598, 0.1601,  ..., 0.1493, 0.1373, 0.1420],
         [0.1192, 0.1598, 0.1601,  ..., 0.1493, 0.1373, 0.1420],
         [0.1192, 0.1598, 0.1601,  ..., 0.1493, 0.1373, 0.1420],
         [0.6424, 0.5206, 0.5198,  ..., 0.5522, 0.5882, 0.5739]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1437, 0.1332, 0.1734,  ..., 0.1188, 0.2926, 0.1119],
         [0.1457, 0.1332, 0.1666,  ..., 0.1209, 0.1400, 0.1119],
         [0.1437, 0.1332, 0.1633,  ..., 0.1188, 0.1104, 0.1119],
         [0.5669, 0.6004, 0.4967,  ..., 0.6415, 0.4570, 0.6643]],
        [[0.2500, 0.2367, 0.2543,  ..., 0.2921, 0.2500, 0.2573],
         [0.2500, 0.2793, 0.2411,  ..., 0.2360, 0.2500, 0.2476],
         [0.2500, 0.2473, 0.2764,  ..., 0.2360, 0.2500, 0.2476],
         [0.2500, 0.2367, 0.2282,  ..., 0.2360, 0.2500, 0.2476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:23:53,217 [Process: 0] Synchronize training processes
2024-08-16 13:23:53,217 [Process: 0] Evaluating...
2024-08-16 13:23:53,219 [Process: 0] EPOCH 897:
2024-08-16 13:23:53,221 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 897:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1109, 0.1435, 0.1494,  ..., 0.1421, 0.1563, 0.1358],
         [0.1123, 0.1435, 0.1494,  ..., 0.1421, 0.1563, 0.1358],
         [0.1109, 0.1435, 0.1494,  ..., 0.1421, 0.1563, 0.1358],
         [0.6660, 0.5695, 0.5518,  ..., 0.5736, 0.5310, 0.5927]],
        [[0.2500, 0.2500, 0.2478,  ..., 0.2495, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2565,  ..., 0.2515, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2478,  ..., 0.2495, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2478,  ..., 0.2495, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1416, 0.1340, 0.1452,  ..., 0.1319, 0.1282, 0.1317],
         [0.1496, 0.1233, 0.1452,  ..., 0.1319, 0.1282, 0.1404],
         [0.1416, 0.1233, 0.1452,  ..., 0.1319, 0.1282, 0.1317],
         [0.5672, 0.6194, 0.5644,  ..., 0.6044, 0.6154, 0.5961]],
        [[0.2500, 0.2500, 0.2380,  ..., 0.2500, 0.2453, 0.2500],
         [0.2500, 0.2500, 0.2378,  ..., 0.2500, 0.2642, 0.2500],
         [0.2500, 0.2500, 0.2996,  ..., 0.2500, 0.2453, 0.2500],
         [0.2500, 0.2500, 0.2245,  ..., 0.2500, 0.2453, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 898:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:23:55,118 [Process: 0] Synchronize training processes
2024-08-16 13:23:55,118 [Process: 0] Evaluating...
2024-08-16 13:23:55,120 [Process: 0] EPOCH 898:
2024-08-16 13:23:55,122 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1176, 0.1260, 0.1458,  ..., 0.1500, 0.1001, 0.1034],
         [0.1176, 0.1260, 0.1458,  ..., 0.1500, 0.1001, 0.1034],
         [0.1176, 0.1260, 0.1458,  ..., 0.1500, 0.1001, 0.1034],
         [0.6471, 0.6219, 0.5626,  ..., 0.5501, 0.6997, 0.6899]],
        [[0.2486, 0.2469, 0.2496,  ..., 0.2495, 0.2500, 0.2500],
         [0.2543, 0.2592, 0.2513,  ..., 0.2516, 0.2500, 0.2500],
         [0.2486, 0.2469, 0.2496,  ..., 0.2495, 0.2500, 0.2500],
         [0.2486, 0.2469, 0.2496,  ..., 0.2495, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1499, 0.1637, 0.1417,  ..., 0.1569, 0.2735, 0.1378],
         [0.1499, 0.1777, 0.1397,  ..., 0.1603, 0.1634, 0.1378],
         [0.1499, 0.1637, 0.1397,  ..., 0.1569, 0.1697, 0.1378],
         [0.5502, 0.4950, 0.5789,  ..., 0.5260, 0.3934, 0.5865]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2499, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2504, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2499, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2499, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 899:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:23:57,030 [Process: 0] Synchronize training processes
2024-08-16 13:23:57,030 [Process: 0] Evaluating...
2024-08-16 13:23:57,032 [Process: 0] EPOCH 899:
2024-08-16 13:23:57,035 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1534, 0.1540, 0.1158,  ..., 0.1191, 0.1406, 0.1565],
         [0.1534, 0.1540, 0.1158,  ..., 0.1191, 0.1406, 0.1565],
         [0.1534, 0.1540, 0.1158,  ..., 0.1191, 0.1406, 0.1565],
         [0.5398, 0.5380, 0.6525,  ..., 0.6427, 0.5781, 0.5305]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1592, 0.1584, 0.1512,  ..., 0.1498, 0.2087, 0.1456],
         [0.1592, 0.1584, 0.1512,  ..., 0.1498, 0.1711, 0.1456],
         [0.1592, 0.1868, 0.1512,  ..., 0.1498, 0.2431, 0.1456],
         [0.5225, 0.4963, 0.5465,  ..., 0.5506, 0.3771, 0.5632]],
        [[0.2422, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2733, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2422, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2422, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 900:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:23:58,932 [Process: 0] Synchronize training processes
2024-08-16 13:23:58,933 [Process: 0] Evaluating...
2024-08-16 13:23:58,935 [Process: 0] EPOCH 900:
2024-08-16 13:23:58,936 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1187, 0.1790, 0.1706,  ..., 0.1662, 0.0940, 0.1115],
         [0.1187, 0.1790, 0.1706,  ..., 0.1662, 0.0940, 0.1115],
         [0.1187, 0.1790, 0.1706,  ..., 0.1662, 0.0940, 0.1115],
         [0.6438, 0.4631, 0.4882,  ..., 0.5015, 0.7181, 0.6656]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2487, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2540, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2487, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2487, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1098, 0.1446, 0.1388,  ..., 0.1478, 0.2302, 0.1063],
         [0.1098, 0.1446, 0.1388,  ..., 0.1490, 0.2161, 0.1063],
         [0.1098, 0.1446, 0.1388,  ..., 0.1478, 0.2443, 0.1063],
         [0.6706, 0.5662, 0.5837,  ..., 0.5555, 0.3094, 0.6811]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2530],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2490],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2490],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 901:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:24:00,824 [Process: 0] Synchronize training processes
2024-08-16 13:24:00,824 [Process: 0] Evaluating...
2024-08-16 13:24:00,826 [Process: 0] EPOCH 901:
2024-08-16 13:24:00,828 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1438, 0.1286, 0.1501,  ..., 0.1514, 0.0912, 0.1341],
         [0.1438, 0.1286, 0.1501,  ..., 0.1514, 0.0912, 0.1341],
         [0.1438, 0.1286, 0.1501,  ..., 0.1514, 0.0912, 0.1341],
         [0.5687, 0.6142, 0.5497,  ..., 0.5459, 0.7265, 0.5978]],
        [[0.2481, 0.2500, 0.2489,  ..., 0.2500, 0.2500, 0.2500],
         [0.2556, 0.2500, 0.2534,  ..., 0.2500, 0.2500, 0.2500],
         [0.2481, 0.2500, 0.2489,  ..., 0.2500, 0.2500, 0.2500],
         [0.2481, 0.2500, 0.2489,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1424, 0.1533, 0.1231,  ..., 0.1519, 0.1994, 0.1918],
         [0.1424, 0.1533, 0.1251,  ..., 0.1519, 0.1880, 0.1918],
         [0.1424, 0.1860, 0.1231,  ..., 0.1519, 0.1789, 0.1918],
         [0.5728, 0.5073, 0.6287,  ..., 0.5444, 0.4337, 0.4246]],
        [[0.2500, 0.2500, 0.2604,  ..., 0.2480, 0.2500, 0.2895],
         [0.2500, 0.2500, 0.2552,  ..., 0.2560, 0.2500, 0.2290],
         [0.2500, 0.2500, 0.2422,  ..., 0.2480, 0.2500, 0.2583],
         [0.2500, 0.2500, 0.2422,  ..., 0.2480, 0.2500, 0.2232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 902:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:24:02,715 [Process: 0] Synchronize training processes
2024-08-16 13:24:02,715 [Process: 0] Evaluating...
2024-08-16 13:24:02,717 [Process: 0] EPOCH 902:
2024-08-16 13:24:02,719 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1785, 0.1323, 0.1595,  ..., 0.1418, 0.1426, 0.1587],
         [0.1785, 0.1323, 0.1595,  ..., 0.1418, 0.1426, 0.1587],
         [0.1785, 0.1323, 0.1595,  ..., 0.1418, 0.1426, 0.1587],
         [0.4646, 0.6032, 0.5214,  ..., 0.5746, 0.5723, 0.5239]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1286, 0.1178, 0.1038,  ..., 0.1282, 0.1411, 0.1406],
         [0.1286, 0.1195, 0.1038,  ..., 0.1282, 0.1411, 0.1418],
         [0.1286, 0.1178, 0.1038,  ..., 0.1282, 0.1554, 0.1406],
         [0.6142, 0.6448, 0.6887,  ..., 0.6154, 0.5625, 0.5769]],
        [[0.2500, 0.2809, 0.2500,  ..., 0.2438, 0.2500, 0.2334],
         [0.2500, 0.2283, 0.2500,  ..., 0.2685, 0.2500, 0.2334],
         [0.2500, 0.2631, 0.2500,  ..., 0.2438, 0.2500, 0.2999],
         [0.2500, 0.2277, 0.2500,  ..., 0.2438, 0.2500, 0.2334]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 903:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:24:04,684 [Process: 0] Synchronize training processes
2024-08-16 13:24:04,685 [Process: 0] Evaluating...
2024-08-16 13:24:04,687 [Process: 0] EPOCH 903:
2024-08-16 13:24:04,689 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1406, 0.1562, 0.1726,  ..., 0.1523, 0.1646, 0.1536],
         [0.1406, 0.1659, 0.1726,  ..., 0.1567, 0.1664, 0.1541],
         [0.1406, 0.1546, 0.1726,  ..., 0.1495, 0.1646, 0.1536],
         [0.5781, 0.5233, 0.4823,  ..., 0.5415, 0.5044, 0.5388]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1528, 0.1336, 0.1548,  ..., 0.1402, 0.1873, 0.1548],
         [0.1528, 0.1336, 0.1548,  ..., 0.1422, 0.1589, 0.1509],
         [0.1528, 0.1336, 0.1620,  ..., 0.1402, 0.2681, 0.1509],
         [0.5417, 0.5993, 0.5283,  ..., 0.5774, 0.3857, 0.5433]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2480, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2560, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2480, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2480, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 904:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:24:06,640 [Process: 0] Synchronize training processes
2024-08-16 13:24:06,640 [Process: 0] Evaluating...
2024-08-16 13:24:06,642 [Process: 0] EPOCH 904:
2024-08-16 13:24:06,644 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1335, 0.1285, 0.1332,  ..., 0.1093, 0.1210, 0.1520],
         [0.1335, 0.1285, 0.1332,  ..., 0.1093, 0.1210, 0.1520],
         [0.1335, 0.1285, 0.1332,  ..., 0.1093, 0.1210, 0.1520],
         [0.5995, 0.6144, 0.6005,  ..., 0.6721, 0.6370, 0.5440]],
        [[0.2500, 0.2500, 0.2499,  ..., 0.2489, 0.2488, 0.2479],
         [0.2500, 0.2500, 0.2502,  ..., 0.2533, 0.2537, 0.2564],
         [0.2500, 0.2500, 0.2499,  ..., 0.2489, 0.2488, 0.2479],
         [0.2500, 0.2500, 0.2499,  ..., 0.2489, 0.2488, 0.2479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1775, 0.1234, 0.1573,  ..., 0.1710, 0.2011, 0.1408],
         [0.1782, 0.1234, 0.1573,  ..., 0.1710, 0.1700, 0.1408],
         [0.1775, 0.1234, 0.1573,  ..., 0.1710, 0.1880, 0.1408],
         [0.4667, 0.6299, 0.5281,  ..., 0.4871, 0.4409, 0.5776]],
        [[0.2604, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2465, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2465, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2465, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 905:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:24:08,580 [Process: 0] Synchronize training processes
2024-08-16 13:24:08,580 [Process: 0] Evaluating...
2024-08-16 13:24:08,582 [Process: 0] EPOCH 905:
2024-08-16 13:24:08,584 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1281, 0.1570, 0.1449,  ..., 0.1381, 0.1207, 0.1676],
         [0.1281, 0.1570, 0.1449,  ..., 0.1381, 0.1207, 0.1676],
         [0.1281, 0.1570, 0.1449,  ..., 0.1381, 0.1207, 0.1676],
         [0.6156, 0.5291, 0.5654,  ..., 0.5856, 0.6379, 0.4971]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2486],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2542],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2486],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1459, 0.1568, 0.1240,  ..., 0.1408, 0.1931, 0.1421],
         [0.1518, 0.1568, 0.1240,  ..., 0.1408, 0.1931, 0.1319],
         [0.1459, 0.1568, 0.1392,  ..., 0.1408, 0.1931, 0.1319],
         [0.5564, 0.5296, 0.6129,  ..., 0.5776, 0.4206, 0.5941]],
        [[0.2500, 0.2526, 0.2500,  ..., 0.2517, 0.2500, 0.2500],
         [0.2500, 0.2729, 0.2500,  ..., 0.2578, 0.2500, 0.2500],
         [0.2500, 0.2372, 0.2500,  ..., 0.2453, 0.2500, 0.2500],
         [0.2500, 0.2372, 0.2500,  ..., 0.2453, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 906:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:24:10,475 [Process: 0] Synchronize training processes
2024-08-16 13:24:10,475 [Process: 0] Evaluating...
2024-08-16 13:24:10,477 [Process: 0] EPOCH 906:
2024-08-16 13:24:10,479 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1454, 0.1188, 0.1175,  ..., 0.1462, 0.1239, 0.1546],
         [0.1454, 0.1188, 0.1175,  ..., 0.1462, 0.1239, 0.1546],
         [0.1454, 0.1188, 0.1175,  ..., 0.1462, 0.1239, 0.1546],
         [0.5639, 0.6437, 0.6474,  ..., 0.5613, 0.6282, 0.5362]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1439, 0.1430, 0.1718,  ..., 0.1308, 0.1699, 0.1647],
         [0.1439, 0.1444, 0.1718,  ..., 0.1308, 0.1723, 0.1647],
         [0.1439, 0.1430, 0.1718,  ..., 0.1308, 0.1699, 0.1647],
         [0.5683, 0.5695, 0.4846,  ..., 0.6076, 0.4880, 0.5058]],
        [[0.2500, 0.2500, 0.2551,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2483,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2483,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2483,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 907:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1153, 0.1487, 0.1218,  ..., 0.1432, 0.1225, 0.1462],
         [0.1153, 0.1487, 0.1218,  ..., 0.1432, 0.1225, 0.1462],
         [0.1153, 0.1487, 0.1218,  ..., 0.1432, 0.1225, 0.1462],
         [0.6542, 0.5538, 0.6347,  ..., 0.5703, 0.6325, 0.5615]],
        [[0.2463, 0.2500, 0.2500,  ..., 0.2436, 0.2484, 0.2448],
         [0.2612, 0.2500, 0.2500,  ..., 0.2691, 0.2549, 0.2657],
         [0.2463, 0.2500, 0.2500,  ..., 0.2436, 0.2484, 0.2448],
         [0.2463, 0.2500, 0.2500,  ..., 0.2436, 0.2484, 0.2448]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:24:12,370 [Process: 0] Synchronize training processes
2024-08-16 13:24:12,370 [Process: 0] Evaluating...
2024-08-16 13:24:12,372 [Process: 0] EPOCH 907:
2024-08-16 13:24:12,374 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1302, 0.1374, 0.1485,  ..., 0.1235, 0.1669, 0.1382],
         [0.1302, 0.1483, 0.1485,  ..., 0.1235, 0.1772, 0.1399],
         [0.1302, 0.1374, 0.1485,  ..., 0.1235, 0.1909, 0.1382],
         [0.6095, 0.5768, 0.5544,  ..., 0.6294, 0.4649, 0.5837]],
        [[0.2500, 0.2500, 0.2625,  ..., 0.2500, 0.2476, 0.2500],
         [0.2500, 0.2500, 0.2458,  ..., 0.2500, 0.2573, 0.2500],
         [0.2500, 0.2500, 0.2458,  ..., 0.2500, 0.2476, 0.2500],
         [0.2500, 0.2500, 0.2458,  ..., 0.2500, 0.2476, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 908:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1486, 0.1284, 0.1482,  ..., 0.1262, 0.1376, 0.1588],
         [0.1549, 0.1347, 0.1523,  ..., 0.1317, 0.1376, 0.1588],
         [0.1486, 0.1284, 0.1482,  ..., 0.1262, 0.1376, 0.1588],
         [0.5479, 0.6084, 0.5513,  ..., 0.6159, 0.5873, 0.5236]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2489, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2534, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2489, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2489, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:24:14,263 [Process: 0] Synchronize training processes
2024-08-16 13:24:14,264 [Process: 0] Evaluating...
2024-08-16 13:24:14,266 [Process: 0] EPOCH 908:
2024-08-16 13:24:14,268 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1632, 0.1203, 0.1259,  ..., 0.1153, 0.1683, 0.1450],
         [0.1632, 0.1203, 0.1259,  ..., 0.1153, 0.1881, 0.1450],
         [0.1632, 0.1203, 0.1259,  ..., 0.1153, 0.1666, 0.1450],
         [0.5103, 0.6391, 0.6223,  ..., 0.6540, 0.4769, 0.5650]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2509, 0.2712, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2704, 0.2372, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2394, 0.2545, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2394, 0.2372, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 909:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1170, 0.1487, 0.1382,  ..., 0.1289, 0.1393, 0.1447],
         [0.1170, 0.1581, 0.1382,  ..., 0.1326, 0.1393, 0.1447],
         [0.1170, 0.1440, 0.1382,  ..., 0.1289, 0.1393, 0.1447],
         [0.6491, 0.5492, 0.5853,  ..., 0.6096, 0.5820, 0.5658]],
        [[0.2500, 0.2471, 0.2500,  ..., 0.2708, 0.2500, 0.2491],
         [0.2500, 0.2588, 0.2500,  ..., 0.2431, 0.2500, 0.2527],
         [0.2500, 0.2471, 0.2500,  ..., 0.2431, 0.2500, 0.2491],
         [0.2500, 0.2471, 0.2500,  ..., 0.2431, 0.2500, 0.2491]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:24:16,156 [Process: 0] Synchronize training processes
2024-08-16 13:24:16,157 [Process: 0] Evaluating...
2024-08-16 13:24:16,159 [Process: 0] EPOCH 909:
2024-08-16 13:24:16,161 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1387, 0.1638, 0.1313,  ..., 0.1359, 0.1699, 0.1486],
         [0.1387, 0.1518, 0.1355,  ..., 0.1359, 0.1699, 0.1486],
         [0.1387, 0.1518, 0.1313,  ..., 0.1359, 0.1699, 0.1486],
         [0.5839, 0.5327, 0.6019,  ..., 0.5923, 0.4902, 0.5543]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2515, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2687, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2399, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2399, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 910:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1447, 0.1468, 0.1386,  ..., 0.1204, 0.1398, 0.1691],
         [0.1447, 0.1468, 0.1386,  ..., 0.1204, 0.1398, 0.1691],
         [0.1447, 0.1468, 0.1386,  ..., 0.1204, 0.1398, 0.1691],
         [0.5660, 0.5597, 0.5842,  ..., 0.6389, 0.5807, 0.4928]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:24:18,051 [Process: 0] Synchronize training processes
2024-08-16 13:24:18,052 [Process: 0] Evaluating...
2024-08-16 13:24:18,054 [Process: 0] EPOCH 910:
2024-08-16 13:24:18,056 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1300, 0.1259, 0.1411,  ..., 0.1137, 0.2574, 0.1524],
         [0.1370, 0.1259, 0.1432,  ..., 0.1137, 0.1679, 0.1524],
         [0.1300, 0.1259, 0.1408,  ..., 0.1137, 0.1605, 0.1524],
         [0.6030, 0.6224, 0.5749,  ..., 0.6590, 0.4142, 0.5427]],
        [[0.2932, 0.2500, 0.2500,  ..., 0.2538, 0.2500, 0.2500],
         [0.2409, 0.2500, 0.2500,  ..., 0.2546, 0.2500, 0.2500],
         [0.2339, 0.2500, 0.2500,  ..., 0.2458, 0.2500, 0.2500],
         [0.2320, 0.2500, 0.2500,  ..., 0.2458, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 911:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1527, 0.1295, 0.1428,  ..., 0.1408, 0.1484, 0.1129],
         [0.1527, 0.1295, 0.1428,  ..., 0.1408, 0.1484, 0.1129],
         [0.1527, 0.1295, 0.1428,  ..., 0.1408, 0.1484, 0.1129],
         [0.5418, 0.6114, 0.5715,  ..., 0.5776, 0.5547, 0.6613]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:24:19,931 [Process: 0] Synchronize training processes
2024-08-16 13:24:19,932 [Process: 0] Evaluating...
2024-08-16 13:24:19,933 [Process: 0] EPOCH 911:
2024-08-16 13:24:19,935 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1532, 0.1047, 0.2127,  ..., 0.1273, 0.2876, 0.1417],
         [0.1628, 0.1047, 0.2127,  ..., 0.1273, 0.1733, 0.1417],
         [0.1532, 0.1134, 0.2127,  ..., 0.1571, 0.2979, 0.1417],
         [0.5308, 0.6772, 0.3620,  ..., 0.5884, 0.2412, 0.5750]],
        [[0.2461, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2442],
         [0.2617, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2774],
         [0.2461, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2392],
         [0.2461, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 912:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1421, 0.1405, 0.1508,  ..., 0.1521, 0.1386, 0.1532],
         [0.1421, 0.1405, 0.1508,  ..., 0.1521, 0.1386, 0.1532],
         [0.1421, 0.1405, 0.1508,  ..., 0.1521, 0.1386, 0.1532],
         [0.5738, 0.5786, 0.5477,  ..., 0.5436, 0.5842, 0.5405]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:24:21,811 [Process: 0] Synchronize training processes
2024-08-16 13:24:21,812 [Process: 0] Evaluating...
2024-08-16 13:24:21,813 [Process: 0] EPOCH 912:
2024-08-16 13:24:21,815 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1725, 0.1416, 0.1860,  ..., 0.1624, 0.2217, 0.1318],
         [0.1725, 0.1505, 0.1860,  ..., 0.1624, 0.1659, 0.1368],
         [0.1725, 0.1416, 0.1860,  ..., 0.1624, 0.1659, 0.1318],
         [0.4826, 0.5663, 0.4420,  ..., 0.5129, 0.4465, 0.5996]],
        [[0.2500, 0.2439, 0.2500,  ..., 0.2500, 0.2500, 0.2504],
         [0.2500, 0.2712, 0.2500,  ..., 0.2500, 0.2500, 0.2499],
         [0.2500, 0.2424, 0.2500,  ..., 0.2500, 0.2500, 0.2499],
         [0.2500, 0.2424, 0.2500,  ..., 0.2500, 0.2500, 0.2499]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 913:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1471, 0.1486, 0.1703,  ..., 0.1576, 0.1392, 0.1851],
         [0.1471, 0.1486, 0.1703,  ..., 0.1576, 0.1392, 0.1851],
         [0.1471, 0.1486, 0.1703,  ..., 0.1576, 0.1392, 0.1851],
         [0.5587, 0.5542, 0.4890,  ..., 0.5272, 0.5824, 0.4446]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:24:23,701 [Process: 0] Synchronize training processes
2024-08-16 13:24:23,702 [Process: 0] Evaluating...
2024-08-16 13:24:23,703 [Process: 0] EPOCH 913:
2024-08-16 13:24:23,705 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1381, 0.1433, 0.1541,  ..., 0.1342, 0.1597, 0.1463],
         [0.1381, 0.1433, 0.1541,  ..., 0.1382, 0.1597, 0.1463],
         [0.1381, 0.1433, 0.1541,  ..., 0.1342, 0.1693, 0.1463],
         [0.5857, 0.5701, 0.5378,  ..., 0.5934, 0.5112, 0.5611]],
        [[0.2500, 0.2500, 0.2487,  ..., 0.2500, 0.2804, 0.2500],
         [0.2500, 0.2500, 0.2538,  ..., 0.2500, 0.2567, 0.2500],
         [0.2500, 0.2500, 0.2487,  ..., 0.2500, 0.2315, 0.2500],
         [0.2500, 0.2500, 0.2487,  ..., 0.2500, 0.2315, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 914:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1435, 0.1511, 0.1370,  ..., 0.1416, 0.1323, 0.1424],
         [0.1454, 0.1511, 0.1370,  ..., 0.1416, 0.1323, 0.1424],
         [0.1435, 0.1511, 0.1370,  ..., 0.1416, 0.1323, 0.1424],
         [0.5676, 0.5466, 0.5890,  ..., 0.5753, 0.6030, 0.5728]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2670],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2463],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2433],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:24:25,581 [Process: 0] Synchronize training processes
2024-08-16 13:24:25,581 [Process: 0] Evaluating...
2024-08-16 13:24:25,583 [Process: 0] EPOCH 914:
2024-08-16 13:24:25,585 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:24:27,512 [Process: 0] Synchronize training processes
2024-08-16 13:24:27,512 [Process: 0] Evaluating...
2024-08-16 13:24:27,514 [Process: 0] EPOCH 915:
2024-08-16 13:24:27,516 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1552, 0.1256, 0.1660,  ..., 0.1501, 0.1446, 0.1459],
         [0.1552, 0.1172, 0.1660,  ..., 0.1501, 0.1446, 0.1441],
         [0.1552, 0.1172, 0.1660,  ..., 0.1501, 0.1446, 0.1441],
         [0.5343, 0.6400, 0.5021,  ..., 0.5498, 0.5661, 0.5659]],
        [[0.2500, 0.2500, 0.2591,  ..., 0.2500, 0.2500, 0.2484],
         [0.2500, 0.2500, 0.2470,  ..., 0.2500, 0.2500, 0.2414],
         [0.2500, 0.2500, 0.2649,  ..., 0.2500, 0.2500, 0.2863],
         [0.2500, 0.2500, 0.2290,  ..., 0.2500, 0.2500, 0.2239]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 915:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1356, 0.1432, 0.1395,  ..., 0.1380, 0.1558, 0.1443],
         [0.1356, 0.1432, 0.1395,  ..., 0.1380, 0.1558, 0.1443],
         [0.1356, 0.1432, 0.1395,  ..., 0.1380, 0.1558, 0.1443],
         [0.5932, 0.5704, 0.5814,  ..., 0.5860, 0.5327, 0.5672]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2482, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2555, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2482, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2482, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:24:29,436 [Process: 0] Synchronize training processes
2024-08-16 13:24:29,437 [Process: 0] Evaluating...
2024-08-16 13:24:29,439 [Process: 0] EPOCH 916:
2024-08-16 13:24:29,441 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1458, 0.2065, 0.1168,  ..., 0.1425, 0.2332, 0.1683],
         [0.1458, 0.1705, 0.1168,  ..., 0.1445, 0.1983, 0.1428],
         [0.1458, 0.1705, 0.1168,  ..., 0.1425, 0.1882, 0.1428],
         [0.5625, 0.4525, 0.6496,  ..., 0.5705, 0.3803, 0.5462]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2660, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2447, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2447, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2447, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 916:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1568, 0.1574, 0.1657,  ..., 0.1420, 0.1338, 0.1490],
         [0.1568, 0.1574, 0.1657,  ..., 0.1420, 0.1338, 0.1549],
         [0.1568, 0.1574, 0.1657,  ..., 0.1420, 0.1338, 0.1490],
         [0.5295, 0.5279, 0.5029,  ..., 0.5740, 0.5986, 0.5471]],
        [[0.2491, 0.2492, 0.2500,  ..., 0.2500, 0.2500, 0.2487],
         [0.2526, 0.2523, 0.2500,  ..., 0.2500, 0.2500, 0.2538],
         [0.2491, 0.2492, 0.2500,  ..., 0.2500, 0.2500, 0.2487],
         [0.2491, 0.2492, 0.2500,  ..., 0.2500, 0.2500, 0.2487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:24:31,418 [Process: 0] Synchronize training processes
2024-08-16 13:24:31,419 [Process: 0] Evaluating...
2024-08-16 13:24:31,421 [Process: 0] EPOCH 917:
2024-08-16 13:24:31,423 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1725, 0.1398, 0.1187,  ..., 0.1348, 0.1515, 0.1170],
         [0.1725, 0.1398, 0.1129,  ..., 0.1348, 0.1515, 0.1170],
         [0.1725, 0.1398, 0.1129,  ..., 0.1348, 0.1515, 0.1210],
         [0.4825, 0.5805, 0.6554,  ..., 0.5956, 0.5455, 0.6449]],
        [[0.2536, 0.2500, 0.2500,  ..., 0.2500, 0.2621, 0.2500],
         [0.2729, 0.2500, 0.2500,  ..., 0.2500, 0.2460, 0.2500],
         [0.2446, 0.2500, 0.2500,  ..., 0.2500, 0.2460, 0.2500],
         [0.2288, 0.2500, 0.2500,  ..., 0.2500, 0.2460, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 917:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1185, 0.1594, 0.1325,  ..., 0.1646, 0.1471, 0.1251],
         [0.1195, 0.1594, 0.1351,  ..., 0.1646, 0.1471, 0.1251],
         [0.1185, 0.1594, 0.1325,  ..., 0.1646, 0.1471, 0.1251],
         [0.6436, 0.5219, 0.5999,  ..., 0.5063, 0.5588, 0.6246]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1249, 0.1469, 0.1340,  ..., 0.1745, 0.1683, 0.1319],
         [0.1249, 0.1469, 0.1340,  ..., 0.1745, 0.1683, 0.1319],
         [0.1249, 0.1469, 0.1340,  ..., 0.1745, 0.1683, 0.1319],
         [0.6254, 0.5592, 0.5980,  ..., 0.4765, 0.4950, 0.6044]],
        [[0.2500, 0.2420, 0.2490,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2555, 0.2529,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2755, 0.2490,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2270, 0.2490,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:24:33,318 [Process: 0] Synchronize training processes
2024-08-16 13:24:33,318 [Process: 0] Evaluating...
2024-08-16 13:24:33,320 [Process: 0] EPOCH 918:
2024-08-16 13:24:33,322 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 918:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1380, 0.1514, 0.1604,  ..., 0.1432, 0.1831, 0.1115],
         [0.1380, 0.1545, 0.1604,  ..., 0.1432, 0.1831, 0.1115],
         [0.1380, 0.1514, 0.1604,  ..., 0.1432, 0.1831, 0.1115],
         [0.5861, 0.5427, 0.5188,  ..., 0.5704, 0.4506, 0.6656]],
        [[0.2500, 0.2500, 0.2499,  ..., 0.2500, 0.2500, 0.2499],
         [0.2500, 0.2500, 0.2503,  ..., 0.2500, 0.2500, 0.2502],
         [0.2500, 0.2500, 0.2499,  ..., 0.2500, 0.2500, 0.2499],
         [0.2500, 0.2500, 0.2499,  ..., 0.2500, 0.2500, 0.2499]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1467, 0.1050, 0.1357,  ..., 0.1206, 0.1581, 0.1409],
         [0.1467, 0.1050, 0.1357,  ..., 0.1206, 0.1412, 0.1409],
         [0.1467, 0.1050, 0.1357,  ..., 0.1206, 0.1351, 0.1409],
         [0.5599, 0.6851, 0.5929,  ..., 0.6383, 0.5657, 0.5773]],
        [[0.2457, 0.2486, 0.2500,  ..., 0.2500, 0.2426, 0.2500],
         [0.2628, 0.2543, 0.2500,  ..., 0.2500, 0.2723, 0.2500],
         [0.2457, 0.2548, 0.2500,  ..., 0.2500, 0.2426, 0.2500],
         [0.2457, 0.2423, 0.2500,  ..., 0.2500, 0.2426, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 919:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:24:35,210 [Process: 0] Synchronize training processes
2024-08-16 13:24:35,210 [Process: 0] Evaluating...
2024-08-16 13:24:35,212 [Process: 0] EPOCH 919:
2024-08-16 13:24:35,214 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1212, 0.1618, 0.1594,  ..., 0.1218, 0.1387, 0.1159],
         [0.1212, 0.1618, 0.1594,  ..., 0.1237, 0.1387, 0.1159],
         [0.1212, 0.1618, 0.1594,  ..., 0.1218, 0.1387, 0.1159],
         [0.6365, 0.5147, 0.5219,  ..., 0.6327, 0.5838, 0.6522]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1276, 0.1639, 0.1747,  ..., 0.1497, 0.2243, 0.1233],
         [0.1281, 0.1639, 0.1747,  ..., 0.1535, 0.1752, 0.1261],
         [0.1276, 0.1639, 0.1747,  ..., 0.1497, 0.1425, 0.1233],
         [0.6167, 0.5084, 0.4759,  ..., 0.5471, 0.4581, 0.6274]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2471, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2471, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2587, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2471, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 920:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:24:37,128 [Process: 0] Synchronize training processes
2024-08-16 13:24:37,129 [Process: 0] Evaluating...
2024-08-16 13:24:37,131 [Process: 0] EPOCH 920:
2024-08-16 13:24:37,133 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1667, 0.1394, 0.1427,  ..., 0.1405, 0.1240, 0.1349],
         [0.1667, 0.1394, 0.1427,  ..., 0.1409, 0.1240, 0.1349],
         [0.1667, 0.1394, 0.1427,  ..., 0.1405, 0.1240, 0.1349],
         [0.5000, 0.5818, 0.5718,  ..., 0.5780, 0.6279, 0.5954]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1486, 0.1452, 0.1667,  ..., 0.1383, 0.1832, 0.1229],
         [0.1486, 0.1452, 0.1667,  ..., 0.1383, 0.1832, 0.1229],
         [0.1486, 0.1452, 0.1667,  ..., 0.1383, 0.1832, 0.1229],
         [0.5541, 0.5644, 0.4999,  ..., 0.5850, 0.4505, 0.6313]],
        [[0.2500, 0.2480, 0.2500,  ..., 0.2522, 0.2500, 0.2555],
         [0.2500, 0.2480, 0.2500,  ..., 0.2493, 0.2500, 0.2436],
         [0.2500, 0.2560, 0.2500,  ..., 0.2493, 0.2500, 0.2643],
         [0.2500, 0.2480, 0.2500,  ..., 0.2493, 0.2500, 0.2366]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 921:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:24:39,075 [Process: 0] Synchronize training processes
2024-08-16 13:24:39,076 [Process: 0] Evaluating...
2024-08-16 13:24:39,077 [Process: 0] EPOCH 921:
2024-08-16 13:24:39,079 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1188, 0.1579, 0.1486,  ..., 0.1522, 0.1005, 0.1302],
         [0.1192, 0.1589, 0.1514,  ..., 0.1642, 0.1005, 0.1306],
         [0.1188, 0.1579, 0.1486,  ..., 0.1522, 0.1005, 0.1302],
         [0.6432, 0.5252, 0.5515,  ..., 0.5315, 0.6984, 0.6090]],
        [[0.2500, 0.2500, 0.2475,  ..., 0.2500, 0.2486, 0.2484],
         [0.2500, 0.2500, 0.2574,  ..., 0.2500, 0.2541, 0.2547],
         [0.2500, 0.2500, 0.2475,  ..., 0.2500, 0.2486, 0.2484],
         [0.2500, 0.2500, 0.2475,  ..., 0.2500, 0.2486, 0.2484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1591, 0.1088, 0.1422,  ..., 0.1503, 0.1906, 0.1773],
         [0.1591, 0.1180, 0.1422,  ..., 0.1391, 0.1630, 0.1773],
         [0.1591, 0.1088, 0.1422,  ..., 0.1632, 0.1539, 0.1956],
         [0.5226, 0.6644, 0.5734,  ..., 0.5474, 0.4926, 0.4498]],
        [[0.2500, 0.2686, 0.2500,  ..., 0.2500, 0.2751, 0.2500],
         [0.2500, 0.2438, 0.2500,  ..., 0.2500, 0.2416, 0.2500],
         [0.2500, 0.2438, 0.2500,  ..., 0.2500, 0.2416, 0.2500],
         [0.2500, 0.2438, 0.2500,  ..., 0.2500, 0.2416, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 922:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:24:40,962 [Process: 0] Synchronize training processes
2024-08-16 13:24:40,962 [Process: 0] Evaluating...
2024-08-16 13:24:40,964 [Process: 0] EPOCH 922:
2024-08-16 13:24:40,966 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1582, 0.1524, 0.1843,  ..., 0.1263, 0.1374, 0.1314],
         [0.1582, 0.1524, 0.1843,  ..., 0.1263, 0.1374, 0.1314],
         [0.1582, 0.1524, 0.1843,  ..., 0.1263, 0.1374, 0.1314],
         [0.5254, 0.5428, 0.4470,  ..., 0.6212, 0.5877, 0.6059]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2496, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2511, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2496, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2496, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1249, 0.1426, 0.1397,  ..., 0.1311, 0.1482, 0.1870],
         [0.1249, 0.1518, 0.1397,  ..., 0.1363, 0.1482, 0.1870],
         [0.1249, 0.1426, 0.1397,  ..., 0.1311, 0.1482, 0.1870],
         [0.6254, 0.5630, 0.5810,  ..., 0.6015, 0.5553, 0.4389]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 923:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:24:42,842 [Process: 0] Synchronize training processes
2024-08-16 13:24:42,843 [Process: 0] Evaluating...
2024-08-16 13:24:42,845 [Process: 0] EPOCH 923:
2024-08-16 13:24:42,847 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1459, 0.1135, 0.1501,  ..., 0.1077, 0.1342, 0.1228],
         [0.1459, 0.1135, 0.1501,  ..., 0.1077, 0.1342, 0.1228],
         [0.1459, 0.1135, 0.1501,  ..., 0.1077, 0.1342, 0.1228],
         [0.5624, 0.6596, 0.5498,  ..., 0.6769, 0.5974, 0.6317]],
        [[0.2486, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2542, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2486, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2486, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1515, 0.1327, 0.1257,  ..., 0.1585, 0.1727, 0.1153],
         [0.1515, 0.1327, 0.1257,  ..., 0.1585, 0.1727, 0.1153],
         [0.1515, 0.1456, 0.1257,  ..., 0.1585, 0.1727, 0.1283],
         [0.5456, 0.5889, 0.6230,  ..., 0.5244, 0.4818, 0.6411]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2488],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2535],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2488],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 924:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:24:44,728 [Process: 0] Synchronize training processes
2024-08-16 13:24:44,728 [Process: 0] Evaluating...
2024-08-16 13:24:44,730 [Process: 0] EPOCH 924:
2024-08-16 13:24:44,732 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1761, 0.1539, 0.1744,  ..., 0.1776, 0.1259, 0.1801],
         [0.1761, 0.1546, 0.1744,  ..., 0.1776, 0.1276, 0.1801],
         [0.1761, 0.1539, 0.1744,  ..., 0.1776, 0.1259, 0.1801],
         [0.4716, 0.5376, 0.4767,  ..., 0.4671, 0.6207, 0.4598]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2495],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2516],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2495],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2495]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1399, 0.1754, 0.1304,  ..., 0.1652, 0.1804, 0.1514],
         [0.1399, 0.1754, 0.1304,  ..., 0.1652, 0.1370, 0.1514],
         [0.1399, 0.1754, 0.1304,  ..., 0.1652, 0.1370, 0.1514],
         [0.5802, 0.4737, 0.6087,  ..., 0.5044, 0.5456, 0.5458]],
        [[0.2500, 0.2651, 0.2500,  ..., 0.2500, 0.2500, 0.2477],
         [0.2500, 0.2570, 0.2500,  ..., 0.2500, 0.2500, 0.2570],
         [0.2500, 0.2389, 0.2500,  ..., 0.2500, 0.2500, 0.2477],
         [0.2500, 0.2389, 0.2500,  ..., 0.2500, 0.2500, 0.2477]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 925:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:24:46,747 [Process: 0] Synchronize training processes
2024-08-16 13:24:46,747 [Process: 0] Evaluating...
2024-08-16 13:24:46,749 [Process: 0] EPOCH 925:
2024-08-16 13:24:46,751 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1628, 0.1047, 0.1494,  ..., 0.1566, 0.1165, 0.1432],
         [0.1628, 0.1111, 0.1494,  ..., 0.1568, 0.1165, 0.1432],
         [0.1628, 0.1047, 0.1494,  ..., 0.1566, 0.1165, 0.1432],
         [0.5117, 0.6794, 0.5519,  ..., 0.5300, 0.6505, 0.5705]],
        [[0.2492, 0.2500, 0.2480,  ..., 0.2500, 0.2497, 0.2500],
         [0.2524, 0.2500, 0.2560,  ..., 0.2500, 0.2508, 0.2500],
         [0.2492, 0.2500, 0.2480,  ..., 0.2500, 0.2497, 0.2500],
         [0.2492, 0.2500, 0.2480,  ..., 0.2500, 0.2497, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1761, 0.1532, 0.1695,  ..., 0.1523, 0.1557, 0.1124],
         [0.1674, 0.1521, 0.1695,  ..., 0.1410, 0.1557, 0.1124],
         [0.1674, 0.1521, 0.1695,  ..., 0.1410, 0.1740, 0.1124],
         [0.4890, 0.5425, 0.4914,  ..., 0.5657, 0.5146, 0.6628]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2422],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2422],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2735],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2422]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 926:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:24:48,712 [Process: 0] Synchronize training processes
2024-08-16 13:24:48,712 [Process: 0] Evaluating...
2024-08-16 13:24:48,714 [Process: 0] EPOCH 926:
2024-08-16 13:24:48,716 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1208, 0.1630, 0.1428,  ..., 0.1547, 0.1561, 0.1413],
         [0.1250, 0.1660, 0.1428,  ..., 0.1547, 0.1561, 0.1413],
         [0.1208, 0.1630, 0.1428,  ..., 0.1547, 0.1561, 0.1413],
         [0.6335, 0.5080, 0.5716,  ..., 0.5359, 0.5318, 0.5761]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2501, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1335, 0.1356, 0.1048,  ..., 0.1193, 0.1929, 0.1191],
         [0.1319, 0.1356, 0.1048,  ..., 0.1193, 0.1716, 0.1201],
         [0.1319, 0.1356, 0.1048,  ..., 0.1193, 0.2135, 0.1191],
         [0.6026, 0.5931, 0.6856,  ..., 0.6421, 0.4221, 0.6416]],
        [[0.2813, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2485],
         [0.2522, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2485],
         [0.2332, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2545],
         [0.2332, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2485]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 927:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:24:50,617 [Process: 0] Synchronize training processes
2024-08-16 13:24:50,618 [Process: 0] Evaluating...
2024-08-16 13:24:50,619 [Process: 0] EPOCH 927:
2024-08-16 13:24:50,621 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1616, 0.1486, 0.1367,  ..., 0.1563, 0.1113, 0.1415],
         [0.1616, 0.1486, 0.1367,  ..., 0.1563, 0.1113, 0.1415],
         [0.1616, 0.1486, 0.1367,  ..., 0.1563, 0.1113, 0.1415],
         [0.5152, 0.5543, 0.5898,  ..., 0.5311, 0.6660, 0.5756]],
        [[0.2499, 0.2500, 0.2500,  ..., 0.2500, 0.2496, 0.2500],
         [0.2502, 0.2500, 0.2500,  ..., 0.2500, 0.2512, 0.2500],
         [0.2499, 0.2500, 0.2500,  ..., 0.2500, 0.2496, 0.2500],
         [0.2499, 0.2500, 0.2500,  ..., 0.2500, 0.2496, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1329, 0.1906, 0.1517,  ..., 0.1692, 0.1637, 0.1355],
         [0.1329, 0.1906, 0.1517,  ..., 0.1692, 0.1500, 0.1355],
         [0.1329, 0.1906, 0.1517,  ..., 0.1692, 0.1500, 0.1355],
         [0.6013, 0.4282, 0.5448,  ..., 0.4925, 0.5362, 0.5934]],
        [[0.2739, 0.2500, 0.2454,  ..., 0.2462, 0.2556, 0.2500],
         [0.2269, 0.2500, 0.2638,  ..., 0.2614, 0.2767, 0.2500],
         [0.2723, 0.2500, 0.2454,  ..., 0.2462, 0.2338, 0.2500],
         [0.2269, 0.2500, 0.2454,  ..., 0.2462, 0.2338, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 928:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:24:52,549 [Process: 0] Synchronize training processes
2024-08-16 13:24:52,550 [Process: 0] Evaluating...
2024-08-16 13:24:52,551 [Process: 0] EPOCH 928:
2024-08-16 13:24:52,553 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1370, 0.1164, 0.1608,  ..., 0.1407, 0.1151, 0.1627],
         [0.1370, 0.1164, 0.1608,  ..., 0.1407, 0.1151, 0.1627],
         [0.1370, 0.1164, 0.1608,  ..., 0.1407, 0.1151, 0.1627],
         [0.5891, 0.6509, 0.5177,  ..., 0.5780, 0.6547, 0.5120]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1345, 0.1392, 0.1233,  ..., 0.1341, 0.1521, 0.1266],
         [0.1345, 0.1413, 0.1233,  ..., 0.1255, 0.1322, 0.1266],
         [0.1345, 0.1392, 0.1233,  ..., 0.1255, 0.1322, 0.1266],
         [0.5966, 0.5803, 0.6301,  ..., 0.6149, 0.5835, 0.6203]],
        [[0.2493, 0.2500, 0.2500,  ..., 0.2500, 0.3033, 0.2500],
         [0.2496, 0.2500, 0.2500,  ..., 0.2500, 0.2322, 0.2500],
         [0.2716, 0.2500, 0.2500,  ..., 0.2500, 0.2322, 0.2500],
         [0.2296, 0.2500, 0.2500,  ..., 0.2500, 0.2322, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 929:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:24:54,579 [Process: 0] Synchronize training processes
2024-08-16 13:24:54,579 [Process: 0] Evaluating...
2024-08-16 13:24:54,581 [Process: 0] EPOCH 929:
2024-08-16 13:24:54,583 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1190, 0.1323, 0.1604,  ..., 0.1487, 0.0912, 0.1120],
         [0.1212, 0.1323, 0.1604,  ..., 0.1487, 0.0938, 0.1120],
         [0.1185, 0.1323, 0.1604,  ..., 0.1487, 0.0912, 0.1120],
         [0.6413, 0.6031, 0.5188,  ..., 0.5538, 0.7238, 0.6640]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1434, 0.1459, 0.1403,  ..., 0.1442, 0.1952, 0.1841],
         [0.1434, 0.1599, 0.1403,  ..., 0.1442, 0.1575, 0.1841],
         [0.1434, 0.1459, 0.1403,  ..., 0.1442, 0.1895, 0.1841],
         [0.5699, 0.5483, 0.5791,  ..., 0.5674, 0.4578, 0.4478]],
        [[0.2479, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2481],
         [0.2479, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2515],
         [0.2564, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2522],
         [0.2479, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 930:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1229, 0.1298, 0.1221,  ..., 0.1388, 0.1646, 0.1194],
         [0.1229, 0.1298, 0.1221,  ..., 0.1388, 0.1646, 0.1194],
         [0.1229, 0.1298, 0.1221,  ..., 0.1388, 0.1646, 0.1194],
         [0.6312, 0.6107, 0.6338,  ..., 0.5836, 0.5061, 0.6418]],
        [[0.2500, 0.2500, 0.2499,  ..., 0.2503, 0.2492, 0.2500],
         [0.2500, 0.2500, 0.2504,  ..., 0.2499, 0.2524, 0.2500],
         [0.2500, 0.2500, 0.2499,  ..., 0.2499, 0.2492, 0.2500],
         [0.2500, 0.2500, 0.2499,  ..., 0.2499, 0.2492, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:24:56,550 [Process: 0] Synchronize training processes
2024-08-16 13:24:56,551 [Process: 0] Evaluating...
2024-08-16 13:24:56,552 [Process: 0] EPOCH 930:
2024-08-16 13:24:56,554 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1121, 0.1565, 0.1340,  ..., 0.1537, 0.1633, 0.1859],
         [0.1125, 0.1591, 0.1357,  ..., 0.1537, 0.1633, 0.1859],
         [0.1224, 0.1565, 0.1340,  ..., 0.1537, 0.1633, 0.1859],
         [0.6530, 0.5279, 0.5964,  ..., 0.5390, 0.5100, 0.4424]],
        [[0.2451, 0.2500, 0.2500,  ..., 0.2500, 0.2481, 0.2500],
         [0.2647, 0.2500, 0.2500,  ..., 0.2500, 0.2557, 0.2500],
         [0.2451, 0.2500, 0.2500,  ..., 0.2500, 0.2481, 0.2500],
         [0.2451, 0.2500, 0.2500,  ..., 0.2500, 0.2481, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 931:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1367, 0.1278, 0.1356,  ..., 0.0992, 0.1238, 0.1116],
         [0.1367, 0.1278, 0.1356,  ..., 0.0992, 0.1266, 0.1116],
         [0.1367, 0.1278, 0.1356,  ..., 0.0992, 0.1238, 0.1116],
         [0.5900, 0.6167, 0.5932,  ..., 0.7023, 0.6259, 0.6651]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2477, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2569, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2477, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2477, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:24:58,461 [Process: 0] Synchronize training processes
2024-08-16 13:24:58,462 [Process: 0] Evaluating...
2024-08-16 13:24:58,464 [Process: 0] EPOCH 931:
2024-08-16 13:24:58,466 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1966, 0.1190, 0.1397,  ..., 0.1525, 0.1204, 0.1216],
         [0.1966, 0.1190, 0.1397,  ..., 0.1525, 0.1233, 0.1216],
         [0.1966, 0.1190, 0.1397,  ..., 0.1525, 0.1204, 0.1216],
         [0.4103, 0.6429, 0.5808,  ..., 0.5426, 0.6358, 0.6353]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2408, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2775, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2408, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2408, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 932:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1503, 0.1495, 0.1631,  ..., 0.1396, 0.1516, 0.1371],
         [0.1503, 0.1495, 0.1631,  ..., 0.1396, 0.1516, 0.1371],
         [0.1503, 0.1495, 0.1631,  ..., 0.1396, 0.1516, 0.1371],
         [0.5490, 0.5516, 0.5107,  ..., 0.5813, 0.5453, 0.5888]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2501, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:00,370 [Process: 0] Synchronize training processes
2024-08-16 13:25:00,370 [Process: 0] Evaluating...
2024-08-16 13:25:00,372 [Process: 0] EPOCH 932:
2024-08-16 13:25:00,374 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1207, 0.1260, 0.1475,  ..., 0.1327, 0.1478, 0.1514],
         [0.1207, 0.1260, 0.1475,  ..., 0.1385, 0.1478, 0.1514],
         [0.1207, 0.1260, 0.1475,  ..., 0.1327, 0.1478, 0.1514],
         [0.6379, 0.6221, 0.5574,  ..., 0.5961, 0.5567, 0.5459]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 933:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1212, 0.1578, 0.1049,  ..., 0.1469, 0.1253, 0.1256],
         [0.1212, 0.1578, 0.1049,  ..., 0.1469, 0.1253, 0.1256],
         [0.1212, 0.1578, 0.1049,  ..., 0.1469, 0.1253, 0.1256],
         [0.6365, 0.5267, 0.6854,  ..., 0.5594, 0.6241, 0.6233]],
        [[0.2500, 0.2500, 0.2532,  ..., 0.2590, 0.2487, 0.2500],
         [0.2500, 0.2500, 0.2504,  ..., 0.2515, 0.2631, 0.2500],
         [0.2500, 0.2500, 0.2482,  ..., 0.2447, 0.2441, 0.2500],
         [0.2500, 0.2500, 0.2482,  ..., 0.2447, 0.2441, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:02,279 [Process: 0] Synchronize training processes
2024-08-16 13:25:02,279 [Process: 0] Evaluating...
2024-08-16 13:25:02,281 [Process: 0] EPOCH 933:
2024-08-16 13:25:02,283 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1193, 0.1547, 0.1572,  ..., 0.1480, 0.1439, 0.1494],
         [0.1193, 0.1547, 0.1577,  ..., 0.1480, 0.1439, 0.1511],
         [0.1193, 0.1636, 0.1572,  ..., 0.1480, 0.1439, 0.1537],
         [0.6422, 0.5270, 0.5279,  ..., 0.5559, 0.5683, 0.5457]],
        [[0.2500, 0.2492, 0.2500,  ..., 0.2706, 0.2500, 0.2500],
         [0.2500, 0.2492, 0.2500,  ..., 0.2431, 0.2500, 0.2500],
         [0.2500, 0.2525, 0.2500,  ..., 0.2431, 0.2500, 0.2500],
         [0.2500, 0.2492, 0.2500,  ..., 0.2431, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 934:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1201, 0.1725, 0.1619,  ..., 0.1340, 0.1371, 0.1283],
         [0.1246, 0.1725, 0.1633,  ..., 0.1418, 0.1464, 0.1283],
         [0.1201, 0.1725, 0.1619,  ..., 0.1340, 0.1371, 0.1283],
         [0.6352, 0.4825, 0.5130,  ..., 0.5902, 0.5794, 0.6152]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2518],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:04,185 [Process: 0] Synchronize training processes
2024-08-16 13:25:04,186 [Process: 0] Evaluating...
2024-08-16 13:25:04,188 [Process: 0] EPOCH 934:
2024-08-16 13:25:04,190 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1286, 0.1411, 0.1683,  ..., 0.1743, 0.1614, 0.1147],
         [0.1286, 0.1411, 0.1683,  ..., 0.1724, 0.1614, 0.1159],
         [0.1286, 0.1411, 0.1683,  ..., 0.1724, 0.1614, 0.1147],
         [0.6142, 0.5766, 0.4951,  ..., 0.4809, 0.5158, 0.6547]],
        [[0.2456, 0.2500, 0.2581,  ..., 0.2426, 0.2500, 0.2500],
         [0.2631, 0.2500, 0.2394,  ..., 0.2858, 0.2500, 0.2500],
         [0.2456, 0.2500, 0.2631,  ..., 0.2358, 0.2500, 0.2500],
         [0.2456, 0.2500, 0.2394,  ..., 0.2358, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 935:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1700, 0.1470, 0.1375,  ..., 0.1621, 0.1231, 0.1226],
         [0.1700, 0.1504, 0.1375,  ..., 0.1647, 0.1231, 0.1226],
         [0.1700, 0.1470, 0.1375,  ..., 0.1621, 0.1231, 0.1226],
         [0.4901, 0.5556, 0.5874,  ..., 0.5111, 0.6308, 0.6323]],
        [[0.2500, 0.2493, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2522, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2493, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2493, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:06,101 [Process: 0] Synchronize training processes
2024-08-16 13:25:06,101 [Process: 0] Evaluating...
2024-08-16 13:25:06,103 [Process: 0] EPOCH 935:
2024-08-16 13:25:06,105 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1258, 0.1816, 0.1388,  ..., 0.1265, 0.1235, 0.1087],
         [0.1286, 0.1816, 0.1394,  ..., 0.1265, 0.1235, 0.1115],
         [0.1258, 0.1816, 0.1388,  ..., 0.1265, 0.1235, 0.1087],
         [0.6198, 0.4553, 0.5831,  ..., 0.6206, 0.6296, 0.6710]],
        [[0.2500, 0.2674, 0.2500,  ..., 0.2803, 0.2500, 0.2500],
         [0.2500, 0.2482, 0.2500,  ..., 0.2389, 0.2500, 0.2500],
         [0.2500, 0.2422, 0.2500,  ..., 0.2420, 0.2500, 0.2500],
         [0.2500, 0.2422, 0.2500,  ..., 0.2389, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 936:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1440, 0.1380, 0.1149,  ..., 0.1559, 0.1410, 0.1404],
         [0.1440, 0.1390, 0.1149,  ..., 0.1620, 0.1436, 0.1404],
         [0.1440, 0.1380, 0.1149,  ..., 0.1559, 0.1351, 0.1404],
         [0.5680, 0.5850, 0.6552,  ..., 0.5262, 0.5803, 0.5788]],
        [[0.2464, 0.2493, 0.2497,  ..., 0.2500, 0.2500, 0.2483],
         [0.2607, 0.2520, 0.2509,  ..., 0.2500, 0.2500, 0.2550],
         [0.2464, 0.2493, 0.2497,  ..., 0.2500, 0.2500, 0.2483],
         [0.2464, 0.2493, 0.2497,  ..., 0.2500, 0.2500, 0.2483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:08,103 [Process: 0] Synchronize training processes
2024-08-16 13:25:08,104 [Process: 0] Evaluating...
2024-08-16 13:25:08,106 [Process: 0] EPOCH 936:
2024-08-16 13:25:08,108 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1100, 0.1326, 0.1558,  ..., 0.1524, 0.1677, 0.1482],
         [0.1100, 0.1326, 0.1558,  ..., 0.1524, 0.1677, 0.1482],
         [0.1100, 0.1326, 0.1558,  ..., 0.1524, 0.1677, 0.1482],
         [0.6701, 0.6021, 0.5326,  ..., 0.5429, 0.4969, 0.5554]],
        [[0.2500, 0.2500, 0.2486,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2541,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2486,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2486,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 937:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1630, 0.1849, 0.1490,  ..., 0.1029, 0.1796, 0.1243],
         [0.1630, 0.1849, 0.1490,  ..., 0.1029, 0.1796, 0.1243],
         [0.1630, 0.1849, 0.1490,  ..., 0.1029, 0.1796, 0.1243],
         [0.5110, 0.4454, 0.5531,  ..., 0.6912, 0.4612, 0.6272]],
        [[0.2492, 0.2468, 0.2451,  ..., 0.2493, 0.2455, 0.2500],
         [0.2524, 0.2596, 0.2646,  ..., 0.2521, 0.2636, 0.2500],
         [0.2492, 0.2468, 0.2451,  ..., 0.2493, 0.2455, 0.2500],
         [0.2492, 0.2468, 0.2451,  ..., 0.2493, 0.2455, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:09,997 [Process: 0] Synchronize training processes
2024-08-16 13:25:09,998 [Process: 0] Evaluating...
2024-08-16 13:25:10,000 [Process: 0] EPOCH 937:
2024-08-16 13:25:10,002 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1254, 0.1114, 0.1831,  ..., 0.1678, 0.1644, 0.1559],
         [0.1254, 0.1114, 0.1831,  ..., 0.1678, 0.1644, 0.1559],
         [0.1254, 0.1114, 0.1831,  ..., 0.1678, 0.1644, 0.1559],
         [0.6239, 0.6657, 0.4507,  ..., 0.4966, 0.5069, 0.5324]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2488, 0.2477, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2507, 0.2569, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2517, 0.2477, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2488, 0.2477, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 938:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1680, 0.1215, 0.1797,  ..., 0.1358, 0.1443, 0.1396],
         [0.1680, 0.1215, 0.1797,  ..., 0.1388, 0.1443, 0.1396],
         [0.1680, 0.1215, 0.1797,  ..., 0.1358, 0.1443, 0.1396],
         [0.4960, 0.6355, 0.4609,  ..., 0.5895, 0.5671, 0.5812]],
        [[0.2490, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2529, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2490, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2490, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:11,888 [Process: 0] Synchronize training processes
2024-08-16 13:25:11,889 [Process: 0] Evaluating...
2024-08-16 13:25:11,891 [Process: 0] EPOCH 938:
2024-08-16 13:25:11,893 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1791, 0.1455, 0.1509,  ..., 0.1385, 0.1362, 0.1121],
         [0.1791, 0.1517, 0.1509,  ..., 0.1385, 0.1362, 0.1121],
         [0.1805, 0.1455, 0.1509,  ..., 0.1385, 0.1362, 0.1121],
         [0.4612, 0.5574, 0.5472,  ..., 0.5844, 0.5915, 0.6636]],
        [[0.2484, 0.2500, 0.3029,  ..., 0.2422, 0.2484, 0.2312],
         [0.2547, 0.2500, 0.2324,  ..., 0.2733, 0.2547, 0.2677],
         [0.2484, 0.2500, 0.2324,  ..., 0.2422, 0.2484, 0.2856],
         [0.2484, 0.2500, 0.2324,  ..., 0.2422, 0.2484, 0.2156]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 939:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1648, 0.1437, 0.1608,  ..., 0.1319, 0.1215, 0.1467],
         [0.1648, 0.1437, 0.1608,  ..., 0.1319, 0.1215, 0.1467],
         [0.1648, 0.1437, 0.1608,  ..., 0.1319, 0.1215, 0.1467],
         [0.5055, 0.5689, 0.5176,  ..., 0.6044, 0.6355, 0.5598]],
        [[0.2542, 0.2500, 0.2500,  ..., 0.2467, 0.2478, 0.2490],
         [0.2486, 0.2500, 0.2500,  ..., 0.2599, 0.2567, 0.2530],
         [0.2486, 0.2500, 0.2500,  ..., 0.2467, 0.2478, 0.2490],
         [0.2486, 0.2500, 0.2500,  ..., 0.2467, 0.2478, 0.2490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:13,781 [Process: 0] Synchronize training processes
2024-08-16 13:25:13,781 [Process: 0] Evaluating...
2024-08-16 13:25:13,783 [Process: 0] EPOCH 939:
2024-08-16 13:25:13,785 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0906, 0.1133, 0.1074,  ..., 0.1460, 0.1494, 0.1547],
         [0.0906, 0.1133, 0.1074,  ..., 0.1460, 0.1268, 0.1637],
         [0.0906, 0.1133, 0.1074,  ..., 0.1575, 0.1263, 0.1547],
         [0.7282, 0.6600, 0.6777,  ..., 0.5504, 0.5975, 0.5269]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 940:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1286, 0.1774, 0.1306,  ..., 0.1458, 0.1721, 0.1942],
         [0.1286, 0.1774, 0.1306,  ..., 0.1458, 0.1721, 0.1942],
         [0.1286, 0.1774, 0.1306,  ..., 0.1458, 0.1721, 0.1942],
         [0.6142, 0.4679, 0.6083,  ..., 0.5626, 0.4838, 0.4175]],
        [[0.2467, 0.2462, 0.2500,  ..., 0.2500, 0.2500, 0.2444],
         [0.2598, 0.2613, 0.2500,  ..., 0.2500, 0.2500, 0.2668],
         [0.2467, 0.2462, 0.2500,  ..., 0.2500, 0.2500, 0.2444],
         [0.2467, 0.2462, 0.2500,  ..., 0.2500, 0.2500, 0.2444]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:15,732 [Process: 0] Synchronize training processes
2024-08-16 13:25:15,733 [Process: 0] Evaluating...
2024-08-16 13:25:15,735 [Process: 0] EPOCH 940:
2024-08-16 13:25:15,737 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1672, 0.1043, 0.1101,  ..., 0.1446, 0.1388, 0.1289],
         [0.1689, 0.1043, 0.1101,  ..., 0.1446, 0.1388, 0.1292],
         [0.1672, 0.1043, 0.1101,  ..., 0.1446, 0.1388, 0.1289],
         [0.4967, 0.6870, 0.6697,  ..., 0.5663, 0.5837, 0.6131]],
        [[0.2467, 0.2461, 0.2494,  ..., 0.2489, 0.2500, 0.2500],
         [0.2598, 0.2617, 0.2494,  ..., 0.2534, 0.2500, 0.2500],
         [0.2467, 0.2461, 0.2519,  ..., 0.2489, 0.2500, 0.2500],
         [0.2467, 0.2461, 0.2494,  ..., 0.2489, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 941:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1413, 0.1338, 0.1290,  ..., 0.1310, 0.1416, 0.1668],
         [0.1413, 0.1338, 0.1290,  ..., 0.1310, 0.1416, 0.1668],
         [0.1413, 0.1338, 0.1290,  ..., 0.1310, 0.1416, 0.1668],
         [0.5761, 0.5987, 0.6129,  ..., 0.6069, 0.5752, 0.4995]],
        [[0.2497, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2510, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2497, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2497, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:25:17,703 [Process: 0] Synchronize training processes
2024-08-16 13:25:17,703 [Process: 0] Evaluating...
2024-08-16 13:25:17,705 [Process: 0] EPOCH 941:
2024-08-16 13:25:17,707 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:25:19,632 [Process: 0] Synchronize training processes
2024-08-16 13:25:19,632 [Process: 0] Evaluating...
2024-08-16 13:25:19,634 [Process: 0] EPOCH 942:
2024-08-16 13:25:19,636 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1505, 0.1354, 0.1911,  ..., 0.1306, 0.1053, 0.1220],
         [0.1505, 0.1354, 0.1527,  ..., 0.1235, 0.1053, 0.1274],
         [0.1505, 0.1354, 0.1510,  ..., 0.1010, 0.1053, 0.1220],
         [0.5484, 0.5937, 0.5051,  ..., 0.6448, 0.6841, 0.6287]],
        [[0.2372, 0.3016, 0.2485,  ..., 0.2195, 0.2500, 0.2500],
         [0.2482, 0.2453, 0.2485,  ..., 0.2525, 0.2500, 0.2500],
         [0.2773, 0.2265, 0.2546,  ..., 0.3084, 0.2500, 0.2500],
         [0.2372, 0.2265, 0.2485,  ..., 0.2195, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 942:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1370, 0.1330, 0.1442,  ..., 0.1272, 0.1461, 0.1606],
         [0.1370, 0.1330, 0.1442,  ..., 0.1272, 0.1536, 0.1606],
         [0.1370, 0.1330, 0.1442,  ..., 0.1272, 0.1461, 0.1606],
         [0.5889, 0.6009, 0.5673,  ..., 0.6184, 0.5541, 0.5181]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1397, 0.1433, 0.1021,  ..., 0.1296, 0.3028, 0.1253],
         [0.1397, 0.1433, 0.1021,  ..., 0.1296, 0.1915, 0.1253],
         [0.1397, 0.1433, 0.1021,  ..., 0.1296, 0.3773, 0.1253],
         [0.5809, 0.5702, 0.6938,  ..., 0.6111, 0.1284, 0.6241]],
        [[0.2580, 0.2388, 0.2500,  ..., 0.2407, 0.2500, 0.2500],
         [0.2473, 0.2837, 0.2500,  ..., 0.2407, 0.2500, 0.2500],
         [0.2473, 0.2388, 0.2500,  ..., 0.2779, 0.2500, 0.2500],
         [0.2473, 0.2388, 0.2500,  ..., 0.2407, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:21,548 [Process: 0] Synchronize training processes
2024-08-16 13:25:21,549 [Process: 0] Evaluating...
2024-08-16 13:25:21,551 [Process: 0] EPOCH 943:
2024-08-16 13:25:21,553 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 943:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1095, 0.1737, 0.1667,  ..., 0.1520, 0.1594, 0.1600],
         [0.1156, 0.1737, 0.1667,  ..., 0.1520, 0.1594, 0.1600],
         [0.1095, 0.1737, 0.1667,  ..., 0.1520, 0.1594, 0.1600],
         [0.6654, 0.4790, 0.5000,  ..., 0.5441, 0.5219, 0.5201]],
        [[0.2489, 0.2500, 0.2500,  ..., 0.2500, 0.2482, 0.2500],
         [0.2533, 0.2500, 0.2500,  ..., 0.2500, 0.2553, 0.2500],
         [0.2489, 0.2500, 0.2500,  ..., 0.2500, 0.2482, 0.2500],
         [0.2489, 0.2500, 0.2500,  ..., 0.2500, 0.2482, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1192, 0.1445, 0.1307,  ..., 0.1187, 0.3177, 0.1347],
         [0.1192, 0.1445, 0.1307,  ..., 0.1187, 0.2265, 0.1347],
         [0.1192, 0.1445, 0.1307,  ..., 0.1187, 0.4065, 0.1347],
         [0.6423, 0.5664, 0.6079,  ..., 0.6438, 0.0493, 0.5958]],
        [[0.2422, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2422, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2735, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2422, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:23,539 [Process: 0] Synchronize training processes
2024-08-16 13:25:23,540 [Process: 0] Evaluating...
2024-08-16 13:25:23,542 [Process: 0] EPOCH 944:
2024-08-16 13:25:23,544 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 944:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1135, 0.1457, 0.1491,  ..., 0.1501, 0.1381, 0.1299],
         [0.1175, 0.1457, 0.1491,  ..., 0.1501, 0.1389, 0.1299],
         [0.1135, 0.1457, 0.1491,  ..., 0.1501, 0.1377, 0.1299],
         [0.6555, 0.5628, 0.5526,  ..., 0.5497, 0.5853, 0.6102]],
        [[0.2500, 0.2489, 0.2500,  ..., 0.2485, 0.2500, 0.2500],
         [0.2500, 0.2534, 0.2500,  ..., 0.2545, 0.2500, 0.2500],
         [0.2500, 0.2489, 0.2500,  ..., 0.2485, 0.2500, 0.2500],
         [0.2500, 0.2489, 0.2500,  ..., 0.2485, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1588, 0.0943, 0.0972,  ..., 0.1647, 0.3725, 0.1675],
         [0.1588, 0.0943, 0.0972,  ..., 0.1647, 0.1760, 0.1675],
         [0.1588, 0.0943, 0.0972,  ..., 0.1647, 0.3355, 0.1675],
         [0.5235, 0.7172, 0.7083,  ..., 0.5058, 0.1160, 0.4975]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2557, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2481, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2481, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2481, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
2024-08-16 13:25:25,606 [Process: 0] Synchronize training processes
2024-08-16 13:25:25,606 [Process: 0] Evaluating...
2024-08-16 13:25:25,608 [Process: 0] EPOCH 945:
2024-08-16 13:25:25,610 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 945:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1245, 0.1667, 0.1425,  ..., 0.1226, 0.1510, 0.1102],
         [0.1245, 0.1667, 0.1425,  ..., 0.1226, 0.1510, 0.1102],
         [0.1245, 0.1667, 0.1425,  ..., 0.1226, 0.1510, 0.1102],
         [0.6265, 0.5000, 0.5725,  ..., 0.6321, 0.5471, 0.6694]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:25:27,625 [Process: 0] Synchronize training processes
2024-08-16 13:25:27,625 [Process: 0] Evaluating...
2024-08-16 13:25:27,627 [Process: 0] EPOCH 946:
2024-08-16 13:25:27,629 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1249, 0.1632, 0.1343,  ..., 0.1221, 0.3053, 0.0916],
         [0.1249, 0.1632, 0.1343,  ..., 0.1221, 0.1686, 0.0916],
         [0.1249, 0.1632, 0.1343,  ..., 0.1221, 0.2636, 0.0916],
         [0.6252, 0.5105, 0.5970,  ..., 0.6337, 0.2625, 0.7253]],
        [[0.2651, 0.2500, 0.2500,  ..., 0.2427, 0.2500, 0.2367],
         [0.2554, 0.2500, 0.2500,  ..., 0.2427, 0.2500, 0.2900],
         [0.2422, 0.2500, 0.2500,  ..., 0.2718, 0.2500, 0.2367],
         [0.2373, 0.2500, 0.2500,  ..., 0.2427, 0.2500, 0.2367]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 946:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1387, 0.1653, 0.1400,  ..., 0.1478, 0.1828, 0.1424],
         [0.1387, 0.1653, 0.1400,  ..., 0.1478, 0.1828, 0.1424],
         [0.1387, 0.1653, 0.1400,  ..., 0.1478, 0.1828, 0.1424],
         [0.5838, 0.5042, 0.5801,  ..., 0.5565, 0.4516, 0.5729]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1450, 0.1582, 0.1030,  ..., 0.1578, 0.1515, 0.1492],
         [0.1450, 0.1582, 0.1030,  ..., 0.1595, 0.1515, 0.1492],
         [0.1450, 0.1582, 0.1030,  ..., 0.1578, 0.1781, 0.1492],
         [0.5650, 0.5253, 0.6910,  ..., 0.5249, 0.5189, 0.5524]],
        [[0.2500, 0.2500, 0.3358,  ..., 0.2500, 0.2617, 0.2500],
         [0.2500, 0.2500, 0.2277,  ..., 0.2500, 0.2520, 0.2500],
         [0.2500, 0.2500, 0.2182,  ..., 0.2500, 0.2583, 0.2500],
         [0.2500, 0.2500, 0.2182,  ..., 0.2500, 0.2280, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:29,590 [Process: 0] Synchronize training processes
2024-08-16 13:25:29,591 [Process: 0] Evaluating...
2024-08-16 13:25:29,593 [Process: 0] EPOCH 947:
2024-08-16 13:25:29,595 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 947:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1520, 0.1244, 0.1392,  ..., 0.1366, 0.1662, 0.1276],
         [0.1520, 0.1244, 0.1392,  ..., 0.1366, 0.1662, 0.1276],
         [0.1520, 0.1244, 0.1392,  ..., 0.1366, 0.1662, 0.1276],
         [0.5440, 0.6268, 0.5824,  ..., 0.5901, 0.5013, 0.6171]],
        [[0.2500, 0.2500, 0.2637,  ..., 0.2500, 0.2500, 0.2499],
         [0.2500, 0.2500, 0.2467,  ..., 0.2500, 0.2500, 0.2504],
         [0.2500, 0.2500, 0.2448,  ..., 0.2500, 0.2500, 0.2499],
         [0.2500, 0.2500, 0.2448,  ..., 0.2500, 0.2500, 0.2499]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1554, 0.1467, 0.1167,  ..., 0.1032, 0.1630, 0.1919],
         [0.1554, 0.1467, 0.1167,  ..., 0.1032, 0.1630, 0.1919],
         [0.1554, 0.1467, 0.1167,  ..., 0.1032, 0.1630, 0.1919],
         [0.5337, 0.5599, 0.6500,  ..., 0.6904, 0.5110, 0.4244]],
        [[0.2500, 0.2501, 0.2449,  ..., 0.2500, 0.2500, 0.2559],
         [0.2500, 0.2620, 0.2449,  ..., 0.2500, 0.2500, 0.2480],
         [0.2500, 0.2440, 0.2652,  ..., 0.2500, 0.2500, 0.2480],
         [0.2500, 0.2440, 0.2449,  ..., 0.2500, 0.2500, 0.2480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:31,562 [Process: 0] Synchronize training processes
2024-08-16 13:25:31,562 [Process: 0] Evaluating...
2024-08-16 13:25:31,564 [Process: 0] EPOCH 948:
2024-08-16 13:25:31,566 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 948:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1146, 0.1599, 0.1807,  ..., 0.1374, 0.1295, 0.1931],
         [0.1146, 0.1599, 0.1807,  ..., 0.1374, 0.1295, 0.1931],
         [0.1146, 0.1599, 0.1807,  ..., 0.1374, 0.1295, 0.1931],
         [0.6561, 0.5204, 0.4578,  ..., 0.5878, 0.6115, 0.4207]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1548, 0.1272, 0.1559,  ..., 0.1320, 0.1722, 0.1236],
         [0.1548, 0.1272, 0.1559,  ..., 0.1320, 0.1722, 0.1236],
         [0.1548, 0.1272, 0.1559,  ..., 0.1320, 0.1722, 0.1236],
         [0.5356, 0.6185, 0.5322,  ..., 0.6040, 0.4835, 0.6293]],
        [[0.2500, 0.2500, 0.2443,  ..., 0.2500, 0.2496, 0.2474],
         [0.2500, 0.2500, 0.2503,  ..., 0.2500, 0.2511, 0.2578],
         [0.2500, 0.2500, 0.2880,  ..., 0.2500, 0.2496, 0.2474],
         [0.2500, 0.2500, 0.2174,  ..., 0.2500, 0.2496, 0.2474]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:33,555 [Process: 0] Synchronize training processes
2024-08-16 13:25:33,556 [Process: 0] Evaluating...
2024-08-16 13:25:33,558 [Process: 0] EPOCH 949:
2024-08-16 13:25:33,559 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 949:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1399, 0.1453, 0.1661,  ..., 0.1479, 0.1116, 0.1337],
         [0.1399, 0.1453, 0.1661,  ..., 0.1479, 0.1116, 0.1337],
         [0.1399, 0.1453, 0.1661,  ..., 0.1479, 0.1116, 0.1337],
         [0.5804, 0.5641, 0.5017,  ..., 0.5563, 0.6652, 0.5989]],
        [[0.2500, 0.2497, 0.2655,  ..., 0.2500, 0.2500, 0.2594],
         [0.2500, 0.2508, 0.2448,  ..., 0.2500, 0.2500, 0.2469],
         [0.2500, 0.2497, 0.2448,  ..., 0.2500, 0.2500, 0.2469],
         [0.2500, 0.2497, 0.2448,  ..., 0.2500, 0.2500, 0.2469]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1565, 0.0994, 0.1316,  ..., 0.1527, 0.1575, 0.1273],
         [0.1565, 0.0994, 0.1316,  ..., 0.1527, 0.1575, 0.1273],
         [0.1565, 0.0994, 0.1316,  ..., 0.1527, 0.1575, 0.1273],
         [0.5304, 0.7019, 0.6051,  ..., 0.5419, 0.5274, 0.6180]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2687],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2438],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2438],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2438]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 950:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:25:35,474 [Process: 0] Synchronize training processes
2024-08-16 13:25:35,475 [Process: 0] Evaluating...
2024-08-16 13:25:35,477 [Process: 0] EPOCH 950:
2024-08-16 13:25:35,479 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1787, 0.1378, 0.1140,  ..., 0.1638, 0.1407, 0.1476],
         [0.1787, 0.1378, 0.1140,  ..., 0.1638, 0.1407, 0.1476],
         [0.1787, 0.1378, 0.1140,  ..., 0.1638, 0.1407, 0.1476],
         [0.4638, 0.5867, 0.6581,  ..., 0.5085, 0.5779, 0.5571]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1595, 0.1618, 0.1431,  ..., 0.1715, 0.1862, 0.1381],
         [0.1595, 0.1618, 0.1431,  ..., 0.1715, 0.1862, 0.1381],
         [0.1595, 0.1618, 0.1431,  ..., 0.1715, 0.1862, 0.1381],
         [0.5215, 0.5145, 0.5706,  ..., 0.4855, 0.4415, 0.5856]],
        [[0.2404, 0.2500, 0.2666,  ..., 0.2500, 0.2500, 0.2500],
         [0.2528, 0.2500, 0.2494,  ..., 0.2500, 0.2500, 0.2500],
         [0.2663, 0.2500, 0.2420,  ..., 0.2500, 0.2500, 0.2500],
         [0.2404, 0.2500, 0.2420,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 951:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:25:37,379 [Process: 0] Synchronize training processes
2024-08-16 13:25:37,379 [Process: 0] Evaluating...
2024-08-16 13:25:37,381 [Process: 0] EPOCH 951:
2024-08-16 13:25:37,383 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1102, 0.0998, 0.1214,  ..., 0.1266, 0.1200, 0.1455],
         [0.1102, 0.0998, 0.1214,  ..., 0.1266, 0.1200, 0.1455],
         [0.1102, 0.0998, 0.1214,  ..., 0.1266, 0.1200, 0.1455],
         [0.6695, 0.7007, 0.6358,  ..., 0.6201, 0.6399, 0.5634]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2482, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2554, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2482, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2482, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1769, 0.1504, 0.1723,  ..., 0.1388, 0.1686, 0.1273],
         [0.1769, 0.1504, 0.1574,  ..., 0.1388, 0.1713, 0.1273],
         [0.1769, 0.1504, 0.1574,  ..., 0.1388, 0.1686, 0.1273],
         [0.4694, 0.5489, 0.5129,  ..., 0.5837, 0.4914, 0.6181]],
        [[0.2707, 0.2766, 0.2863,  ..., 0.2500, 0.2500, 0.2500],
         [0.2382, 0.2334, 0.2530,  ..., 0.2500, 0.2500, 0.2500],
         [0.2529, 0.2765, 0.2304,  ..., 0.2500, 0.2500, 0.2500],
         [0.2382, 0.2135, 0.2304,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 952:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:25:39,290 [Process: 0] Synchronize training processes
2024-08-16 13:25:39,291 [Process: 0] Evaluating...
2024-08-16 13:25:39,292 [Process: 0] EPOCH 952:
2024-08-16 13:25:39,295 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1703, 0.1830, 0.1364,  ..., 0.1194, 0.1212, 0.2141],
         [0.1703, 0.1917, 0.1364,  ..., 0.1195, 0.1212, 0.1863],
         [0.1703, 0.1785, 0.1364,  ..., 0.1194, 0.1212, 0.1846],
         [0.4890, 0.4468, 0.5908,  ..., 0.6417, 0.6365, 0.4150]],
        [[0.2485, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2480],
         [0.2544, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2559],
         [0.2485, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2480],
         [0.2485, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1305, 0.1419, 0.1532,  ..., 0.1763, 0.1833, 0.1651],
         [0.1331, 0.1419, 0.1532,  ..., 0.1559, 0.1833, 0.1651],
         [0.1305, 0.1419, 0.1633,  ..., 0.1559, 0.1833, 0.1651],
         [0.6059, 0.5743, 0.5302,  ..., 0.5119, 0.4502, 0.5046]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2573, 0.2259, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2476, 0.2259, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2476, 0.3222, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2476, 0.2259, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 953:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:25:41,217 [Process: 0] Synchronize training processes
2024-08-16 13:25:41,217 [Process: 0] Evaluating...
2024-08-16 13:25:41,219 [Process: 0] EPOCH 953:
2024-08-16 13:25:41,221 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1548, 0.1446, 0.1488,  ..., 0.1279, 0.1214, 0.1192],
         [0.1563, 0.1446, 0.1488,  ..., 0.1279, 0.1214, 0.1192],
         [0.1548, 0.1446, 0.1488,  ..., 0.1279, 0.1214, 0.1192],
         [0.5341, 0.5661, 0.5535,  ..., 0.6163, 0.6357, 0.6425]],
        [[0.2496, 0.2494, 0.2500,  ..., 0.2500, 0.2500, 0.2480],
         [0.2511, 0.2518, 0.2500,  ..., 0.2500, 0.2500, 0.2561],
         [0.2496, 0.2494, 0.2500,  ..., 0.2500, 0.2500, 0.2480],
         [0.2496, 0.2494, 0.2500,  ..., 0.2500, 0.2500, 0.2480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1514, 0.1653, 0.1287,  ..., 0.1628, 0.1430, 0.1207],
         [0.1514, 0.1653, 0.1287,  ..., 0.1628, 0.1430, 0.1207],
         [0.1514, 0.1653, 0.1287,  ..., 0.1628, 0.1430, 0.1207],
         [0.5459, 0.5042, 0.6140,  ..., 0.5116, 0.5711, 0.6380]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 954:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:25:43,117 [Process: 0] Synchronize training processes
2024-08-16 13:25:43,118 [Process: 0] Evaluating...
2024-08-16 13:25:43,119 [Process: 0] EPOCH 954:
2024-08-16 13:25:43,121 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1869, 0.1635, 0.1233,  ..., 0.1365, 0.1429, 0.1884],
         [0.1869, 0.1635, 0.1272,  ..., 0.1365, 0.1429, 0.1884],
         [0.1869, 0.1635, 0.1233,  ..., 0.1365, 0.1429, 0.1884],
         [0.4394, 0.5096, 0.6262,  ..., 0.5904, 0.5713, 0.4348]],
        [[0.2497, 0.2500, 0.2482,  ..., 0.2500, 0.2465, 0.2500],
         [0.2509, 0.2500, 0.2554,  ..., 0.2500, 0.2605, 0.2500],
         [0.2497, 0.2500, 0.2482,  ..., 0.2500, 0.2465, 0.2500],
         [0.2497, 0.2500, 0.2482,  ..., 0.2500, 0.2465, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1560, 0.1515, 0.1372,  ..., 0.1493, 0.1769, 0.1618],
         [0.1560, 0.1515, 0.1271,  ..., 0.1493, 0.1769, 0.1618],
         [0.1560, 0.1515, 0.1271,  ..., 0.1493, 0.1769, 0.1618],
         [0.5321, 0.5454, 0.6086,  ..., 0.5521, 0.4693, 0.5145]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 955:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:25:45,031 [Process: 0] Synchronize training processes
2024-08-16 13:25:45,031 [Process: 0] Evaluating...
2024-08-16 13:25:45,033 [Process: 0] EPOCH 955:
2024-08-16 13:25:45,035 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1381, 0.1469, 0.1406,  ..., 0.1536, 0.1802, 0.0952],
         [0.1381, 0.1469, 0.1406,  ..., 0.1536, 0.1802, 0.0970],
         [0.1381, 0.1469, 0.1406,  ..., 0.1536, 0.1802, 0.0952],
         [0.5857, 0.5592, 0.5781,  ..., 0.5391, 0.4595, 0.7126]],
        [[0.2680, 0.2492, 0.2515,  ..., 0.2500, 0.2500, 0.2497],
         [0.2527, 0.2525, 0.2601,  ..., 0.2500, 0.2500, 0.2510],
         [0.2396, 0.2492, 0.2442,  ..., 0.2500, 0.2500, 0.2497],
         [0.2396, 0.2492, 0.2442,  ..., 0.2500, 0.2500, 0.2497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1327, 0.1241, 0.1650,  ..., 0.1465, 0.1152, 0.1346],
         [0.1315, 0.1271, 0.1486,  ..., 0.1453, 0.1152, 0.1346],
         [0.1315, 0.1241, 0.1486,  ..., 0.1453, 0.1152, 0.1346],
         [0.6042, 0.6247, 0.5378,  ..., 0.5630, 0.6545, 0.5963]],
        [[0.2500, 0.2443, 0.2500,  ..., 0.2448, 0.2500, 0.2539],
         [0.2500, 0.2670, 0.2500,  ..., 0.2657, 0.2500, 0.2538],
         [0.2500, 0.2443, 0.2500,  ..., 0.2448, 0.2500, 0.2461],
         [0.2500, 0.2443, 0.2500,  ..., 0.2448, 0.2500, 0.2461]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 956:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:25:46,936 [Process: 0] Synchronize training processes
2024-08-16 13:25:46,937 [Process: 0] Evaluating...
2024-08-16 13:25:46,939 [Process: 0] EPOCH 956:
2024-08-16 13:25:46,941 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1679, 0.1705, 0.1567,  ..., 0.1574, 0.1765, 0.1478],
         [0.1738, 0.1761, 0.1710,  ..., 0.1633, 0.1765, 0.1587],
         [0.1679, 0.1705, 0.1567,  ..., 0.1574, 0.1765, 0.1478],
         [0.4904, 0.4829, 0.5156,  ..., 0.5218, 0.4706, 0.5457]],
        [[0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2507, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1296, 0.1479, 0.1334,  ..., 0.1747, 0.1570, 0.1561],
         [0.1296, 0.1345, 0.1334,  ..., 0.1467, 0.1570, 0.1587],
         [0.1296, 0.1345, 0.1486,  ..., 0.1467, 0.1570, 0.1561],
         [0.6111, 0.5831, 0.5845,  ..., 0.5319, 0.5290, 0.5290]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2999, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2334, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2334, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2334, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 957:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-16 13:25:48,855 [Process: 0] Synchronize training processes
2024-08-16 13:25:48,855 [Process: 0] Evaluating...
2024-08-16 13:25:48,857 [Process: 0] EPOCH 957:
2024-08-16 13:25:48,859 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1398, 0.1584, 0.1633,  ..., 0.1462, 0.1875, 0.1827],
         [0.1415, 0.1584, 0.1633,  ..., 0.1462, 0.1919, 0.1856],
         [0.1398, 0.1584, 0.1633,  ..., 0.1462, 0.1875, 0.1827],
         [0.5788, 0.5248, 0.5101,  ..., 0.5615, 0.4332, 0.4491]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2508, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2497, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1511, 0.1402, 0.1374,  ..., 0.1434, 0.1254, 0.1445],
         [0.1511, 0.1402, 0.1403,  ..., 0.1434, 0.1254, 0.1238],
         [0.1511, 0.1402, 0.1374,  ..., 0.1434, 0.1254, 0.1230],
         [0.5467, 0.5794, 0.5848,  ..., 0.5698, 0.6238, 0.6087]],
        [[0.2549, 0.2496, 0.2500,  ..., 0.2500, 0.2471, 0.2500],
         [0.2743, 0.2512, 0.2500,  ..., 0.2500, 0.2588, 0.2500],
         [0.2491, 0.2496, 0.2500,  ..., 0.2500, 0.2471, 0.2500],
         [0.2217, 0.2496, 0.2500,  ..., 0.2500, 0.2471, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 958:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:25:50,771 [Process: 0] Synchronize training processes
2024-08-16 13:25:50,771 [Process: 0] Evaluating...
2024-08-16 13:25:50,773 [Process: 0] EPOCH 958:
2024-08-16 13:25:50,775 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1193, 0.1789, 0.1357,  ..., 0.1170, 0.1669, 0.1231],
         [0.1193, 0.1789, 0.1357,  ..., 0.1170, 0.1669, 0.1231],
         [0.1193, 0.1789, 0.1357,  ..., 0.1170, 0.1669, 0.1231],
         [0.6421, 0.4633, 0.5930,  ..., 0.6489, 0.4993, 0.6306]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2483],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2550],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2483],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1280, 0.1765, 0.1259,  ..., 0.1705, 0.1740, 0.1513],
         [0.1280, 0.1744, 0.1259,  ..., 0.1705, 0.1740, 0.1513],
         [0.1280, 0.1744, 0.1259,  ..., 0.1705, 0.1740, 0.1513],
         [0.6159, 0.4748, 0.6223,  ..., 0.4885, 0.4779, 0.5460]],
        [[0.2441, 0.2705, 0.2431,  ..., 0.2590, 0.2415, 0.2500],
         [0.2441, 0.2432, 0.2431,  ..., 0.2547, 0.2415, 0.2500],
         [0.2677, 0.2432, 0.2706,  ..., 0.2431, 0.2755, 0.2500],
         [0.2441, 0.2432, 0.2431,  ..., 0.2431, 0.2415, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 959:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1095, 0.1579, 0.1563,  ..., 0.1335, 0.1828, 0.1670],
         [0.1110, 0.1579, 0.1563,  ..., 0.1335, 0.1828, 0.1670],
         [0.1095, 0.1579, 0.1563,  ..., 0.1335, 0.1828, 0.1670],
         [0.6700, 0.5262, 0.5311,  ..., 0.5994, 0.4517, 0.4990]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2497, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2508, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2497, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2497, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:52,681 [Process: 0] Synchronize training processes
2024-08-16 13:25:52,682 [Process: 0] Evaluating...
2024-08-16 13:25:52,684 [Process: 0] EPOCH 959:
2024-08-16 13:25:52,685 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1303, 0.1721, 0.1496,  ..., 0.1331, 0.2229, 0.1435],
         [0.1303, 0.1721, 0.1256,  ..., 0.1336, 0.1591, 0.1435],
         [0.1303, 0.1721, 0.1249,  ..., 0.1331, 0.4007, 0.1435],
         [0.6092, 0.4837, 0.5999,  ..., 0.6001, 0.2172, 0.5696]],
        [[0.2450, 0.2500, 0.2399,  ..., 0.2656, 0.2397, 0.3148],
         [0.2651, 0.2500, 0.2803,  ..., 0.2664, 0.2747, 0.2124],
         [0.2450, 0.2500, 0.2399,  ..., 0.2340, 0.2459, 0.2634],
         [0.2450, 0.2500, 0.2399,  ..., 0.2340, 0.2397, 0.2094]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 960:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1443, 0.1091, 0.1454,  ..., 0.1695, 0.1645, 0.1251],
         [0.1443, 0.1091, 0.1454,  ..., 0.1695, 0.1645, 0.1251],
         [0.1443, 0.1091, 0.1454,  ..., 0.1695, 0.1645, 0.1251],
         [0.5672, 0.6727, 0.5637,  ..., 0.4916, 0.5066, 0.6247]],
        [[0.2500, 0.2493, 0.2500,  ..., 0.2496, 0.2500, 0.2500],
         [0.2500, 0.2521, 0.2500,  ..., 0.2513, 0.2500, 0.2500],
         [0.2500, 0.2493, 0.2500,  ..., 0.2496, 0.2500, 0.2500],
         [0.2500, 0.2493, 0.2500,  ..., 0.2496, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:54,597 [Process: 0] Synchronize training processes
2024-08-16 13:25:54,598 [Process: 0] Evaluating...
2024-08-16 13:25:54,600 [Process: 0] EPOCH 960:
2024-08-16 13:25:54,602 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1141, 0.1380, 0.1511,  ..., 0.1597, 0.1599, 0.1323],
         [0.1141, 0.1380, 0.1511,  ..., 0.1597, 0.1614, 0.1323],
         [0.1141, 0.1380, 0.1511,  ..., 0.1597, 0.4800, 0.1323],
         [0.6577, 0.5861, 0.5468,  ..., 0.5208, 0.1987, 0.6031]],
        [[0.2646, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2451, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2451, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2451, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 961:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1369, 0.1462, 0.1795,  ..., 0.1403, 0.1699, 0.1194],
         [0.1369, 0.1462, 0.1830,  ..., 0.1403, 0.1699, 0.1194],
         [0.1369, 0.1462, 0.1795,  ..., 0.1403, 0.1699, 0.1194],
         [0.5894, 0.5614, 0.4580,  ..., 0.5791, 0.4903, 0.6419]],
        [[0.2500, 0.2496, 0.2500,  ..., 0.2485, 0.2500, 0.2500],
         [0.2500, 0.2512, 0.2500,  ..., 0.2545, 0.2500, 0.2500],
         [0.2500, 0.2496, 0.2500,  ..., 0.2485, 0.2500, 0.2500],
         [0.2500, 0.2496, 0.2500,  ..., 0.2485, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:56,510 [Process: 0] Synchronize training processes
2024-08-16 13:25:56,510 [Process: 0] Evaluating...
2024-08-16 13:25:56,513 [Process: 0] EPOCH 961:
2024-08-16 13:25:56,515 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1482, 0.1096, 0.1511,  ..., 0.1154, 0.2262, 0.1680],
         [0.1482, 0.1104, 0.1511,  ..., 0.1154, 0.0913, 0.1680],
         [0.1482, 0.1096, 0.1511,  ..., 0.1154, 0.5905, 0.1680],
         [0.5554, 0.6703, 0.5467,  ..., 0.6538, 0.0920, 0.4961]],
        [[0.2500, 0.2447, 0.2379,  ..., 0.2500, 0.2500, 0.2599],
         [0.2500, 0.2660, 0.2842,  ..., 0.2500, 0.2500, 0.2467],
         [0.2500, 0.2447, 0.2400,  ..., 0.2500, 0.2500, 0.2467],
         [0.2500, 0.2447, 0.2379,  ..., 0.2500, 0.2500, 0.2467]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 962:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1304, 0.1792, 0.1358,  ..., 0.1298, 0.1498, 0.1246],
         [0.1304, 0.1792, 0.1358,  ..., 0.1298, 0.1498, 0.1246],
         [0.1304, 0.1792, 0.1358,  ..., 0.1298, 0.1498, 0.1246],
         [0.6089, 0.4624, 0.5926,  ..., 0.6106, 0.5505, 0.6262]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:25:58,457 [Process: 0] Synchronize training processes
2024-08-16 13:25:58,457 [Process: 0] Evaluating...
2024-08-16 13:25:58,459 [Process: 0] EPOCH 962:
2024-08-16 13:25:58,461 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1404, 0.1469, 0.1271,  ..., 0.1941, 0.1418, 0.1450],
         [0.1380, 0.1444, 0.1271,  ..., 0.1623, 0.1744, 0.1450],
         [0.1380, 0.1444, 0.1271,  ..., 0.1623, 0.2601, 0.1450],
         [0.5836, 0.5644, 0.6187,  ..., 0.4813, 0.4237, 0.5651]],
        [[0.2500, 0.2500, 0.2660,  ..., 0.2390, 0.2656, 0.2500],
         [0.2500, 0.2500, 0.2447,  ..., 0.2829, 0.2448, 0.2500],
         [0.2500, 0.2500, 0.2447,  ..., 0.2390, 0.2448, 0.2500],
         [0.2500, 0.2500, 0.2447,  ..., 0.2390, 0.2448, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 963:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1251, 0.1681, 0.1405,  ..., 0.1510, 0.1410, 0.1335],
         [0.1251, 0.1681, 0.1405,  ..., 0.1510, 0.1410, 0.1335],
         [0.1251, 0.1681, 0.1405,  ..., 0.1510, 0.1410, 0.1335],
         [0.6246, 0.4957, 0.5786,  ..., 0.5469, 0.5769, 0.5995]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:26:00,353 [Process: 0] Synchronize training processes
2024-08-16 13:26:00,353 [Process: 0] Evaluating...
2024-08-16 13:26:00,355 [Process: 0] EPOCH 963:
2024-08-16 13:26:00,357 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1481, 0.1196, 0.1289,  ..., 0.1357, 0.1550, 0.1664],
         [0.1481, 0.1196, 0.1289,  ..., 0.1357, 0.1550, 0.1664],
         [0.1481, 0.1196, 0.1289,  ..., 0.1357, 0.3521, 0.1664],
         [0.5558, 0.6411, 0.6134,  ..., 0.5930, 0.3379, 0.5009]],
        [[0.2500, 0.2454, 0.2500,  ..., 0.2500, 0.2484, 0.2782],
         [0.2500, 0.2454, 0.2500,  ..., 0.2500, 0.2547, 0.2406],
         [0.2500, 0.2637, 0.2500,  ..., 0.2500, 0.2484, 0.2406],
         [0.2500, 0.2454, 0.2500,  ..., 0.2500, 0.2484, 0.2406]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 964:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1354, 0.1427, 0.1561,  ..., 0.1633, 0.1562, 0.1271],
         [0.1354, 0.1427, 0.1561,  ..., 0.1633, 0.1562, 0.1271],
         [0.1354, 0.1427, 0.1561,  ..., 0.1633, 0.1562, 0.1271],
         [0.5937, 0.5720, 0.5316,  ..., 0.5101, 0.5315, 0.6187]],
        [[0.2500, 0.2500, 0.2493,  ..., 0.2500, 0.2478, 0.2500],
         [0.2500, 0.2500, 0.2520,  ..., 0.2500, 0.2594, 0.2500],
         [0.2500, 0.2500, 0.2493,  ..., 0.2500, 0.2464, 0.2500],
         [0.2500, 0.2500, 0.2493,  ..., 0.2500, 0.2464, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:26:02,259 [Process: 0] Synchronize training processes
2024-08-16 13:26:02,260 [Process: 0] Evaluating...
2024-08-16 13:26:02,262 [Process: 0] EPOCH 964:
2024-08-16 13:26:02,264 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1286, 0.1536, 0.1193,  ..., 0.1445, 0.1816, 0.1197],
         [0.1286, 0.1536, 0.1193,  ..., 0.1445, 0.1183, 0.1197],
         [0.1286, 0.1536, 0.1193,  ..., 0.1445, 0.4210, 0.1197],
         [0.6141, 0.5392, 0.6422,  ..., 0.5666, 0.2791, 0.6409]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2492, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2525, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2492, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2492, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 965:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1348, 0.1537, 0.1596,  ..., 0.1763, 0.1376, 0.1771],
         [0.1348, 0.1537, 0.1596,  ..., 0.1763, 0.1376, 0.1771],
         [0.1348, 0.1537, 0.1596,  ..., 0.1763, 0.1376, 0.1771],
         [0.5957, 0.5389, 0.5211,  ..., 0.4710, 0.5873, 0.4688]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:26:04,155 [Process: 0] Synchronize training processes
2024-08-16 13:26:04,156 [Process: 0] Evaluating...
2024-08-16 13:26:04,158 [Process: 0] EPOCH 965:
2024-08-16 13:26:04,160 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1209, 0.0944, 0.1412,  ..., 0.1651, 0.2137, 0.1344],
         [0.1209, 0.0958, 0.1412,  ..., 0.1685, 0.2561, 0.1345],
         [0.1355, 0.0944, 0.1412,  ..., 0.1651, 0.3168, 0.1344],
         [0.6226, 0.7153, 0.5763,  ..., 0.5013, 0.2133, 0.5967]],
        [[0.2789, 0.2500, 0.2500,  ..., 0.2435, 0.2437, 0.2450],
         [0.2493, 0.2500, 0.2500,  ..., 0.2435, 0.2576, 0.2734],
         [0.2359, 0.2500, 0.2500,  ..., 0.2696, 0.2551, 0.2408],
         [0.2359, 0.2500, 0.2500,  ..., 0.2435, 0.2437, 0.2408]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 966:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1204, 0.1481, 0.1370,  ..., 0.1851, 0.1811, 0.1269],
         [0.1265, 0.1481, 0.1370,  ..., 0.1851, 0.1811, 0.1269],
         [0.1204, 0.1481, 0.1370,  ..., 0.1851, 0.1811, 0.1269],
         [0.6327, 0.5558, 0.5890,  ..., 0.4447, 0.4568, 0.6194]],
        [[0.2500, 0.2500, 0.2472,  ..., 0.2500, 0.2480, 0.2500],
         [0.2500, 0.2500, 0.2584,  ..., 0.2500, 0.2559, 0.2500],
         [0.2500, 0.2500, 0.2472,  ..., 0.2500, 0.2480, 0.2500],
         [0.2500, 0.2500, 0.2472,  ..., 0.2500, 0.2480, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:26:06,053 [Process: 0] Synchronize training processes
2024-08-16 13:26:06,054 [Process: 0] Evaluating...
2024-08-16 13:26:06,056 [Process: 0] EPOCH 966:
2024-08-16 13:26:06,058 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1319, 0.1181, 0.0997,  ..., 0.1735, 0.1598, 0.1647],
         [0.1334, 0.1181, 0.0997,  ..., 0.1735, 0.1598, 0.1647],
         [0.1319, 0.1181, 0.0997,  ..., 0.1735, 0.1598, 0.1647],
         [0.6028, 0.6456, 0.7009,  ..., 0.4794, 0.5207, 0.5060]],
        [[0.2398, 0.2467, 0.2424,  ..., 0.2500, 0.2500, 0.2728],
         [0.2636, 0.2467, 0.2424,  ..., 0.2500, 0.2500, 0.2475],
         [0.2567, 0.2599, 0.2727,  ..., 0.2500, 0.2500, 0.2482],
         [0.2398, 0.2467, 0.2424,  ..., 0.2500, 0.2500, 0.2316]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 967:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1380, 0.1316, 0.1332,  ..., 0.1245, 0.1678, 0.1076],
         [0.1380, 0.1316, 0.1332,  ..., 0.1245, 0.1678, 0.1076],
         [0.1380, 0.1316, 0.1332,  ..., 0.1245, 0.1678, 0.1076],
         [0.5860, 0.6053, 0.6004,  ..., 0.6264, 0.4965, 0.6772]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:26:07,938 [Process: 0] Synchronize training processes
2024-08-16 13:26:07,938 [Process: 0] Evaluating...
2024-08-16 13:26:07,940 [Process: 0] EPOCH 967:
2024-08-16 13:26:07,942 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1417, 0.1772, 0.1566,  ..., 0.1427, 0.1337, 0.1471],
         [0.1417, 0.1772, 0.1566,  ..., 0.1427, 0.1337, 0.1471],
         [0.1417, 0.1772, 0.1566,  ..., 0.1427, 0.1337, 0.1471],
         [0.5748, 0.4684, 0.5301,  ..., 0.5718, 0.5988, 0.5588]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 968:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1222, 0.1417, 0.1100,  ..., 0.1473, 0.1443, 0.1683],
         [0.1222, 0.1417, 0.1100,  ..., 0.1473, 0.1443, 0.1683],
         [0.1222, 0.1417, 0.1100,  ..., 0.1473, 0.1443, 0.1683],
         [0.6334, 0.5750, 0.6699,  ..., 0.5582, 0.5671, 0.4950]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2497],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2509],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2497],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1190, 0.1371, 0.1308,  ..., 0.1435, 0.2170, 0.1848],
         [0.1190, 0.1371, 0.1308,  ..., 0.1412, 0.1888, 0.1848],
         [0.1190, 0.1371, 0.1308,  ..., 0.1448, 0.1967, 0.1848],
         [0.6430, 0.5886, 0.6075,  ..., 0.5706, 0.3975, 0.4456]],
        [[0.2393, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2393, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2821, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2393, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:26:09,836 [Process: 0] Synchronize training processes
2024-08-16 13:26:09,836 [Process: 0] Evaluating...
2024-08-16 13:26:09,838 [Process: 0] EPOCH 968:
2024-08-16 13:26:09,840 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 969:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1356, 0.1079, 0.1524,  ..., 0.1299, 0.1425, 0.1481],
         [0.1356, 0.1079, 0.1524,  ..., 0.1299, 0.1431, 0.1487],
         [0.1356, 0.1079, 0.1524,  ..., 0.1299, 0.1425, 0.1481],
         [0.5933, 0.6763, 0.5427,  ..., 0.6103, 0.5719, 0.5551]],
        [[0.2496, 0.2500, 0.2500,  ..., 0.2494, 0.2472, 0.2500],
         [0.2511, 0.2500, 0.2500,  ..., 0.2517, 0.2585, 0.2500],
         [0.2496, 0.2500, 0.2500,  ..., 0.2494, 0.2472, 0.2500],
         [0.2496, 0.2500, 0.2500,  ..., 0.2494, 0.2472, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1711, 0.1450, 0.1575,  ..., 0.1640, 0.1209, 0.1003],
         [0.1711, 0.1450, 0.1575,  ..., 0.1640, 0.1209, 0.1003],
         [0.1711, 0.1450, 0.1575,  ..., 0.1640, 0.1209, 0.1003],
         [0.4867, 0.5649, 0.5276,  ..., 0.5081, 0.6372, 0.6991]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2383, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2564, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2670, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2383, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:26:11,758 [Process: 0] Synchronize training processes
2024-08-16 13:26:11,759 [Process: 0] Evaluating...
2024-08-16 13:26:11,761 [Process: 0] EPOCH 969:
2024-08-16 13:26:11,762 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 970:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1573, 0.0909, 0.1925,  ..., 0.1656, 0.1177, 0.1514],
         [0.1573, 0.0909, 0.1925,  ..., 0.1656, 0.1177, 0.1514],
         [0.1573, 0.0909, 0.1925,  ..., 0.1656, 0.1177, 0.1514],
         [0.5282, 0.7273, 0.4224,  ..., 0.5032, 0.6470, 0.5459]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2491, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2526, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2491, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2491, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0998, 0.1763, 0.1261,  ..., 0.1202, 0.1843, 0.1620],
         [0.0998, 0.1763, 0.1261,  ..., 0.1202, 0.1602, 0.1620],
         [0.0998, 0.1763, 0.1261,  ..., 0.1202, 0.1602, 0.1620],
         [0.7005, 0.4711, 0.6217,  ..., 0.6394, 0.4953, 0.5141]],
        [[0.2500, 0.2462, 0.2650,  ..., 0.2486, 0.2500, 0.2500],
         [0.2500, 0.2383, 0.2450,  ..., 0.2486, 0.2500, 0.2500],
         [0.2500, 0.2771, 0.2450,  ..., 0.2541, 0.2500, 0.2500],
         [0.2500, 0.2383, 0.2450,  ..., 0.2486, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:26:13,744 [Process: 0] Synchronize training processes
2024-08-16 13:26:13,744 [Process: 0] Evaluating...
2024-08-16 13:26:13,746 [Process: 0] EPOCH 970:
2024-08-16 13:26:13,748 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:26:15,686 [Process: 0] Synchronize training processes
2024-08-16 13:26:15,686 [Process: 0] Evaluating...
2024-08-16 13:26:15,688 [Process: 0] EPOCH 971:
2024-08-16 13:26:15,690 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 971:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1220, 0.1195, 0.1375,  ..., 0.1591, 0.1562, 0.1065],
         [0.1220, 0.1195, 0.1375,  ..., 0.1591, 0.1562, 0.1065],
         [0.1220, 0.1195, 0.1375,  ..., 0.1591, 0.1562, 0.1065],
         [0.6339, 0.6415, 0.5875,  ..., 0.5227, 0.5313, 0.6806]],
        [[0.2489, 0.2500, 0.2500,  ..., 0.2488, 0.2500, 0.2500],
         [0.2533, 0.2500, 0.2500,  ..., 0.2537, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2500,  ..., 0.2488, 0.2500, 0.2500],
         [0.2489, 0.2500, 0.2500,  ..., 0.2488, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1294, 0.1556, 0.1466,  ..., 0.1646, 0.1561, 0.1463],
         [0.1294, 0.1556, 0.1466,  ..., 0.1646, 0.1561, 0.1463],
         [0.1294, 0.1556, 0.1466,  ..., 0.1646, 0.1561, 0.1463],
         [0.6117, 0.5332, 0.5602,  ..., 0.5063, 0.5318, 0.5611]],
        [[0.2655, 0.2500, 0.3060,  ..., 0.2500, 0.2471, 0.2624],
         [0.2540, 0.2500, 0.2313,  ..., 0.2500, 0.2588, 0.2459],
         [0.2403, 0.2500, 0.2313,  ..., 0.2500, 0.2471, 0.2459],
         [0.2403, 0.2500, 0.2313,  ..., 0.2500, 0.2471, 0.2459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 972:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:26:17,581 [Process: 0] Synchronize training processes
2024-08-16 13:26:17,582 [Process: 0] Evaluating...
2024-08-16 13:26:17,584 [Process: 0] EPOCH 972:
2024-08-16 13:26:17,586 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1574, 0.1460, 0.1381,  ..., 0.1249, 0.1129, 0.1498],
         [0.1574, 0.1460, 0.1381,  ..., 0.1249, 0.1129, 0.1498],
         [0.1574, 0.1460, 0.1381,  ..., 0.1249, 0.1129, 0.1498],
         [0.5278, 0.5619, 0.5856,  ..., 0.6253, 0.6612, 0.5507]],
        [[0.2500, 0.2500, 0.2494,  ..., 0.2500, 0.2576, 0.2500],
         [0.2500, 0.2500, 0.2519,  ..., 0.2500, 0.2619, 0.2500],
         [0.2500, 0.2500, 0.2494,  ..., 0.2500, 0.2403, 0.2500],
         [0.2500, 0.2500, 0.2494,  ..., 0.2500, 0.2403, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1243, 0.1474, 0.1505,  ..., 0.1527, 0.3398, 0.1632],
         [0.1243, 0.1474, 0.1505,  ..., 0.1537, 0.1935, 0.1605],
         [0.1243, 0.1474, 0.1505,  ..., 0.1527, 0.2328, 0.1614],
         [0.6271, 0.5577, 0.5484,  ..., 0.5408, 0.2338, 0.5148]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 973:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:26:19,494 [Process: 0] Synchronize training processes
2024-08-16 13:26:19,495 [Process: 0] Evaluating...
2024-08-16 13:26:19,496 [Process: 0] EPOCH 973:
2024-08-16 13:26:19,499 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1268, 0.1189, 0.1838,  ..., 0.1153, 0.1300, 0.1744],
         [0.1268, 0.1216, 0.1838,  ..., 0.1153, 0.1317, 0.1744],
         [0.1268, 0.1189, 0.1838,  ..., 0.1153, 0.1300, 0.1744],
         [0.6197, 0.6405, 0.4486,  ..., 0.6540, 0.6082, 0.4769]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1310, 0.1782, 0.1620,  ..., 0.0959, 0.3790, 0.0991],
         [0.1322, 0.1341, 0.1775,  ..., 0.1072, 0.1554, 0.1031],
         [0.1310, 0.1341, 0.1620,  ..., 0.0959, 0.3548, 0.0991],
         [0.6057, 0.5537, 0.4984,  ..., 0.7010, 0.1107, 0.6987]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 974:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:26:21,417 [Process: 0] Synchronize training processes
2024-08-16 13:26:21,418 [Process: 0] Evaluating...
2024-08-16 13:26:21,420 [Process: 0] EPOCH 974:
2024-08-16 13:26:21,422 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1272, 0.1701, 0.1594,  ..., 0.1421, 0.1527, 0.1537],
         [0.1272, 0.1712, 0.1595,  ..., 0.1421, 0.1527, 0.1537],
         [0.1272, 0.1701, 0.1594,  ..., 0.1421, 0.1527, 0.1537],
         [0.6185, 0.4886, 0.5216,  ..., 0.5738, 0.5418, 0.5388]],
        [[0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2506, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1251, 0.1240, 0.1824,  ..., 0.0948, 0.2140, 0.1279],
         [0.1251, 0.1240, 0.1720,  ..., 0.0948, 0.1993, 0.1279],
         [0.1251, 0.1240, 0.1720,  ..., 0.0948, 0.4404, 0.1279],
         [0.6248, 0.6280, 0.4735,  ..., 0.7157, 0.1463, 0.6164]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2447],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2659],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2447],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2447]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 975:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:26:23,326 [Process: 0] Synchronize training processes
2024-08-16 13:26:23,326 [Process: 0] Evaluating...
2024-08-16 13:26:23,328 [Process: 0] EPOCH 975:
2024-08-16 13:26:23,330 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1645, 0.1563, 0.1341,  ..., 0.1800, 0.1214, 0.1178],
         [0.1645, 0.1563, 0.1341,  ..., 0.1800, 0.1220, 0.1178],
         [0.1645, 0.1563, 0.1341,  ..., 0.1800, 0.1214, 0.1178],
         [0.5065, 0.5311, 0.5978,  ..., 0.4601, 0.6352, 0.6465]],
        [[0.2493, 0.2494, 0.2500,  ..., 0.2486, 0.2500, 0.2500],
         [0.2520, 0.2519, 0.2500,  ..., 0.2543, 0.2500, 0.2500],
         [0.2493, 0.2494, 0.2500,  ..., 0.2486, 0.2500, 0.2500],
         [0.2493, 0.2494, 0.2500,  ..., 0.2486, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1472, 0.1512, 0.1312,  ..., 0.1333, 0.2993, 0.1549],
         [0.1512, 0.1512, 0.1312,  ..., 0.1333, 0.1511, 0.1549],
         [0.1472, 0.1512, 0.1312,  ..., 0.1383, 0.3723, 0.1549],
         [0.5544, 0.5463, 0.6063,  ..., 0.5952, 0.1772, 0.5353]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 976:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:26:25,235 [Process: 0] Synchronize training processes
2024-08-16 13:26:25,235 [Process: 0] Evaluating...
2024-08-16 13:26:25,237 [Process: 0] EPOCH 976:
2024-08-16 13:26:25,239 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1293, 0.1515, 0.1473,  ..., 0.1540, 0.1471, 0.1491],
         [0.1293, 0.1574, 0.1473,  ..., 0.1540, 0.1471, 0.1491],
         [0.1293, 0.1515, 0.1473,  ..., 0.1540, 0.1471, 0.1491],
         [0.6122, 0.5396, 0.5581,  ..., 0.5380, 0.5588, 0.5526]],
        [[0.2491, 0.2500, 0.2500,  ..., 0.2499, 0.2502, 0.2487],
         [0.2527, 0.2500, 0.2500,  ..., 0.2503, 0.2543, 0.2540],
         [0.2491, 0.2500, 0.2500,  ..., 0.2499, 0.2477, 0.2487],
         [0.2491, 0.2500, 0.2500,  ..., 0.2499, 0.2477, 0.2487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1354, 0.1357, 0.1297,  ..., 0.1258, 0.1662, 0.1109],
         [0.1354, 0.1357, 0.1297,  ..., 0.1258, 0.1457, 0.1109],
         [0.1354, 0.1357, 0.1297,  ..., 0.1258, 0.1459, 0.1109],
         [0.5938, 0.5930, 0.6108,  ..., 0.6227, 0.5422, 0.6674]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 977:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:26:27,162 [Process: 0] Synchronize training processes
2024-08-16 13:26:27,163 [Process: 0] Evaluating...
2024-08-16 13:26:27,164 [Process: 0] EPOCH 977:
2024-08-16 13:26:27,166 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1251, 0.1419, 0.1291,  ..., 0.1139, 0.1460, 0.1367],
         [0.1251, 0.1419, 0.1291,  ..., 0.1139, 0.1460, 0.1367],
         [0.1251, 0.1419, 0.1291,  ..., 0.1139, 0.1460, 0.1367],
         [0.6247, 0.5744, 0.6127,  ..., 0.6583, 0.5621, 0.5899]],
        [[0.2491, 0.2500, 0.2500,  ..., 0.2500, 0.2499, 0.2500],
         [0.2526, 0.2500, 0.2500,  ..., 0.2500, 0.2502, 0.2500],
         [0.2491, 0.2500, 0.2500,  ..., 0.2500, 0.2499, 0.2500],
         [0.2491, 0.2500, 0.2500,  ..., 0.2500, 0.2499, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1279, 0.1242, 0.1262,  ..., 0.1727, 0.1437, 0.1619],
         [0.1279, 0.1242, 0.1262,  ..., 0.1727, 0.1437, 0.1619],
         [0.1279, 0.1242, 0.1262,  ..., 0.1727, 0.1437, 0.1619],
         [0.6162, 0.6273, 0.6215,  ..., 0.4818, 0.5690, 0.5142]],
        [[0.2666, 0.2500, 0.2500,  ..., 0.2487, 0.2500, 0.2500],
         [0.2445, 0.2500, 0.2500,  ..., 0.2538, 0.2500, 0.2500],
         [0.2445, 0.2500, 0.2500,  ..., 0.2487, 0.2500, 0.2500],
         [0.2445, 0.2500, 0.2500,  ..., 0.2487, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 978:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:26:29,105 [Process: 0] Synchronize training processes
2024-08-16 13:26:29,105 [Process: 0] Evaluating...
2024-08-16 13:26:29,107 [Process: 0] EPOCH 978:
2024-08-16 13:26:29,109 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1560, 0.1406, 0.1362,  ..., 0.1066, 0.1269, 0.1406],
         [0.1560, 0.1406, 0.1394,  ..., 0.1066, 0.1269, 0.1449],
         [0.1560, 0.1406, 0.1362,  ..., 0.1066, 0.1269, 0.1406],
         [0.5319, 0.5782, 0.5881,  ..., 0.6803, 0.6194, 0.5740]],
        [[0.2481, 0.2490, 0.2481,  ..., 0.2500, 0.2500, 0.2500],
         [0.2556, 0.2530, 0.2558,  ..., 0.2500, 0.2500, 0.2500],
         [0.2481, 0.2490, 0.2481,  ..., 0.2500, 0.2500, 0.2500],
         [0.2481, 0.2490, 0.2481,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1435, 0.1267, 0.1241,  ..., 0.1684, 0.1797, 0.1217],
         [0.1435, 0.1267, 0.1241,  ..., 0.1684, 0.1797, 0.1217],
         [0.1435, 0.1267, 0.1241,  ..., 0.1684, 0.1797, 0.1217],
         [0.5695, 0.6198, 0.6277,  ..., 0.4949, 0.4609, 0.6350]],
        [[0.2574, 0.2913, 0.2500,  ..., 0.2414, 0.3228, 0.2471],
         [0.2593, 0.2362, 0.2500,  ..., 0.2630, 0.2334, 0.2586],
         [0.2417, 0.2362, 0.2500,  ..., 0.2542, 0.2219, 0.2471],
         [0.2417, 0.2362, 0.2500,  ..., 0.2414, 0.2219, 0.2471]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 979:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:26:31,016 [Process: 0] Synchronize training processes
2024-08-16 13:26:31,017 [Process: 0] Evaluating...
2024-08-16 13:26:31,018 [Process: 0] EPOCH 979:
2024-08-16 13:26:31,020 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1826, 0.1529, 0.1469,  ..., 0.1533, 0.1110, 0.1546],
         [0.1859, 0.1529, 0.1469,  ..., 0.1533, 0.1122, 0.1565],
         [0.1826, 0.1529, 0.1469,  ..., 0.1533, 0.1110, 0.1546],
         [0.4490, 0.5413, 0.5593,  ..., 0.5402, 0.6659, 0.5343]],
        [[0.2478, 0.2495, 0.2500,  ..., 0.2488, 0.2494, 0.2500],
         [0.2567, 0.2514, 0.2500,  ..., 0.2536, 0.2518, 0.2500],
         [0.2478, 0.2495, 0.2500,  ..., 0.2488, 0.2494, 0.2500],
         [0.2478, 0.2495, 0.2500,  ..., 0.2488, 0.2494, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1469, 0.1163, 0.1070,  ..., 0.1385, 0.1295, 0.1186],
         [0.1469, 0.1163, 0.1070,  ..., 0.1259, 0.1295, 0.1186],
         [0.1469, 0.1163, 0.1070,  ..., 0.1259, 0.1295, 0.1186],
         [0.5592, 0.6511, 0.6791,  ..., 0.6097, 0.6115, 0.6441]],
        [[0.2554, 0.3065, 0.2500,  ..., 0.2418, 0.2489, 0.2500],
         [0.2482, 0.2340, 0.2500,  ..., 0.2746, 0.2489, 0.2500],
         [0.2482, 0.2378, 0.2500,  ..., 0.2418, 0.2534, 0.2500],
         [0.2482, 0.2217, 0.2500,  ..., 0.2418, 0.2489, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 980:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:26:32,929 [Process: 0] Synchronize training processes
2024-08-16 13:26:32,930 [Process: 0] Evaluating...
2024-08-16 13:26:32,932 [Process: 0] EPOCH 980:
2024-08-16 13:26:32,934 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1649, 0.1592, 0.1069,  ..., 0.1251, 0.1299, 0.1335],
         [0.1649, 0.1592, 0.1069,  ..., 0.1251, 0.1299, 0.1336],
         [0.1649, 0.1592, 0.1069,  ..., 0.1251, 0.1299, 0.1335],
         [0.5052, 0.5225, 0.6794,  ..., 0.6246, 0.6104, 0.5995]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1527, 0.1489, 0.1370,  ..., 0.1747, 0.1657, 0.1270],
         [0.1551, 0.1489, 0.1370,  ..., 0.1663, 0.1657, 0.1270],
         [0.1527, 0.1489, 0.1463,  ..., 0.1663, 0.1657, 0.1270],
         [0.5395, 0.5533, 0.5797,  ..., 0.4926, 0.5028, 0.6190]],
        [[0.2500, 0.2500, 0.2627,  ..., 0.2385, 0.2588, 0.2500],
         [0.2500, 0.2500, 0.2458,  ..., 0.2513, 0.2503, 0.2500],
         [0.2500, 0.2500, 0.2458,  ..., 0.2716, 0.2465, 0.2500],
         [0.2500, 0.2500, 0.2458,  ..., 0.2385, 0.2444, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 981:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:26:34,980 [Process: 0] Synchronize training processes
2024-08-16 13:26:34,980 [Process: 0] Evaluating...
2024-08-16 13:26:34,982 [Process: 0] EPOCH 981:
2024-08-16 13:26:34,985 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1425, 0.1508, 0.0948,  ..., 0.1463, 0.1305, 0.1479],
         [0.1425, 0.1508, 0.0948,  ..., 0.1463, 0.1305, 0.1479],
         [0.1425, 0.1508, 0.0948,  ..., 0.1463, 0.1305, 0.1479],
         [0.5725, 0.5475, 0.7157,  ..., 0.5610, 0.6085, 0.5562]],
        [[0.2492, 0.2497, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2560, 0.2509, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2474, 0.2497, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2474, 0.2497, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1518, 0.1892, 0.1537,  ..., 0.1394, 0.1433, 0.1781],
         [0.1518, 0.1755, 0.1554,  ..., 0.1283, 0.1433, 0.1615],
         [0.1518, 0.1755, 0.1537,  ..., 0.1249, 0.1433, 0.1615],
         [0.5447, 0.4599, 0.5372,  ..., 0.6075, 0.5701, 0.4988]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.3065, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2369, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2283, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2283, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 982:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:26:36,958 [Process: 0] Synchronize training processes
2024-08-16 13:26:36,958 [Process: 0] Evaluating...
2024-08-16 13:26:36,960 [Process: 0] EPOCH 982:
2024-08-16 13:26:36,962 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1504, 0.1522, 0.1626,  ..., 0.1478, 0.1590, 0.1257],
         [0.1512, 0.1522, 0.1626,  ..., 0.1478, 0.1590, 0.1257],
         [0.1504, 0.1522, 0.1626,  ..., 0.1478, 0.1590, 0.1257],
         [0.5479, 0.5435, 0.5121,  ..., 0.5567, 0.5231, 0.6228]],
        [[0.2719, 0.2500, 0.2500,  ..., 0.2500, 0.2493, 0.2500],
         [0.2493, 0.2500, 0.2500,  ..., 0.2500, 0.2520, 0.2500],
         [0.2394, 0.2500, 0.2500,  ..., 0.2500, 0.2493, 0.2500],
         [0.2394, 0.2500, 0.2500,  ..., 0.2500, 0.2493, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1513, 0.1528, 0.1475,  ..., 0.1546, 0.2348, 0.1321],
         [0.1516, 0.1528, 0.1475,  ..., 0.1546, 0.1355, 0.1244],
         [0.1500, 0.1528, 0.1475,  ..., 0.1546, 0.4361, 0.1396],
         [0.5471, 0.5415, 0.5576,  ..., 0.5362, 0.1936, 0.6039]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 983:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:26:38,906 [Process: 0] Synchronize training processes
2024-08-16 13:26:38,907 [Process: 0] Evaluating...
2024-08-16 13:26:38,909 [Process: 0] EPOCH 983:
2024-08-16 13:26:38,911 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1607, 0.1601, 0.1348,  ..., 0.1505, 0.1451, 0.1353],
         [0.1515, 0.1718, 0.1376,  ..., 0.1505, 0.1495, 0.1375],
         [0.1490, 0.1601, 0.1348,  ..., 0.1505, 0.1451, 0.1353],
         [0.5388, 0.5081, 0.5928,  ..., 0.5485, 0.5603, 0.5919]],
        [[0.2500, 0.2496, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2511, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2496, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2496, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1015, 0.1203, 0.1478,  ..., 0.1448, 0.1733, 0.1078],
         [0.1059, 0.1280, 0.1443,  ..., 0.1369, 0.2007, 0.1078],
         [0.1015, 0.1203, 0.1443,  ..., 0.1369, 0.1704, 0.1078],
         [0.6911, 0.6315, 0.5635,  ..., 0.5814, 0.4556, 0.6765]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 984:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 13:26:40,892 [Process: 0] Synchronize training processes
2024-08-16 13:26:40,892 [Process: 0] Evaluating...
2024-08-16 13:26:40,894 [Process: 0] EPOCH 984:
2024-08-16 13:26:40,896 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1126, 0.1396, 0.1493,  ..., 0.1788, 0.1006, 0.1255],
         [0.1126, 0.1396, 0.1493,  ..., 0.1788, 0.1006, 0.1297],
         [0.1126, 0.1396, 0.1493,  ..., 0.1788, 0.1006, 0.1255],
         [0.6621, 0.5811, 0.5521,  ..., 0.4636, 0.6983, 0.6193]],
        [[0.2500, 0.2500, 0.2520,  ..., 0.2500, 0.2477, 0.2474],
         [0.2500, 0.2500, 0.2496,  ..., 0.2500, 0.2570, 0.2579],
         [0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2477, 0.2474],
         [0.2500, 0.2500, 0.2492,  ..., 0.2500, 0.2477, 0.2474]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1652, 0.1542, 0.1596,  ..., 0.1289, 0.2323, 0.1230],
         [0.1652, 0.1542, 0.1596,  ..., 0.1289, 0.1739, 0.1230],
         [0.1652, 0.1542, 0.1596,  ..., 0.1289, 0.2330, 0.1230],
         [0.5044, 0.5373, 0.5212,  ..., 0.6132, 0.3608, 0.6310]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2455],
         [0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2673],
         [0.2500, 0.2500, 0.2500,  ..., 0.2505, 0.2500, 0.2436],
         [0.2500, 0.2500, 0.2500,  ..., 0.2498, 0.2500, 0.2436]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 985:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:26:42,924 [Process: 0] Synchronize training processes
2024-08-16 13:26:42,924 [Process: 0] Evaluating...
2024-08-16 13:26:42,926 [Process: 0] EPOCH 985:
2024-08-16 13:26:42,928 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1357, 0.1570, 0.1502,  ..., 0.1599, 0.1332, 0.1355],
         [0.1357, 0.1570, 0.1502,  ..., 0.1599, 0.1332, 0.1355],
         [0.1357, 0.1570, 0.1502,  ..., 0.1599, 0.1332, 0.1355],
         [0.5928, 0.5291, 0.5495,  ..., 0.5204, 0.6003, 0.5936]],
        [[0.2493, 0.2482, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2520, 0.2553, 0.2501,  ..., 0.2500, 0.2500, 0.2500],
         [0.2493, 0.2482, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2493, 0.2482, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1227, 0.1199, 0.1642,  ..., 0.1337, 0.1382, 0.1238],
         [0.1227, 0.1227, 0.1642,  ..., 0.1337, 0.1382, 0.1243],
         [0.1227, 0.1199, 0.1642,  ..., 0.1337, 0.1382, 0.1238],
         [0.6319, 0.6376, 0.5075,  ..., 0.5988, 0.5854, 0.6281]],
        [[0.2500, 0.2500, 0.2440,  ..., 0.2500, 0.2478, 0.2500],
         [0.2500, 0.2500, 0.2679,  ..., 0.2500, 0.2567, 0.2500],
         [0.2500, 0.2500, 0.2440,  ..., 0.2500, 0.2478, 0.2500],
         [0.2500, 0.2500, 0.2440,  ..., 0.2500, 0.2478, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 986:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 13:26:44,997 [Process: 0] Synchronize training processes
2024-08-16 13:26:44,997 [Process: 0] Evaluating...
2024-08-16 13:26:44,999 [Process: 0] EPOCH 986:
2024-08-16 13:26:45,001 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1780, 0.1816, 0.1309,  ..., 0.1381, 0.1446, 0.1156],
         [0.1780, 0.1816, 0.1309,  ..., 0.1381, 0.1446, 0.1156],
         [0.1780, 0.1816, 0.1309,  ..., 0.1381, 0.1446, 0.1156],
         [0.4660, 0.4552, 0.6074,  ..., 0.5857, 0.5661, 0.6533]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1360, 0.1344, 0.1771,  ..., 0.1271, 0.1149, 0.1694],
         [0.1360, 0.1344, 0.1771,  ..., 0.1271, 0.1149, 0.1694],
         [0.1360, 0.1344, 0.1771,  ..., 0.1271, 0.1149, 0.1694],
         [0.5919, 0.5968, 0.4688,  ..., 0.6187, 0.6554, 0.4917]],
        [[0.2522, 0.2413, 0.2434,  ..., 0.2488, 0.2626, 0.2500],
         [0.2493, 0.2761, 0.2698,  ..., 0.2536, 0.2458, 0.2500],
         [0.2493, 0.2413, 0.2434,  ..., 0.2488, 0.2458, 0.2500],
         [0.2493, 0.2413, 0.2434,  ..., 0.2488, 0.2458, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 987:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 13:26:47,036 [Process: 0] Synchronize training processes
2024-08-16 13:26:47,037 [Process: 0] Evaluating...
2024-08-16 13:26:47,038 [Process: 0] EPOCH 987:
2024-08-16 13:26:47,041 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1851, 0.1782, 0.1275,  ..., 0.1112, 0.1250, 0.1426],
         [0.1851, 0.1783, 0.1286,  ..., 0.1118, 0.1332, 0.1431],
         [0.1851, 0.1782, 0.1275,  ..., 0.1112, 0.1250, 0.1426],
         [0.4446, 0.4653, 0.6164,  ..., 0.6658, 0.6168, 0.5717]],
        [[0.2473, 0.2500, 0.2500,  ..., 0.2500, 0.2487, 0.2500],
         [0.2581, 0.2500, 0.2500,  ..., 0.2500, 0.2540, 0.2500],
         [0.2473, 0.2500, 0.2500,  ..., 0.2500, 0.2487, 0.2500],
         [0.2473, 0.2500, 0.2500,  ..., 0.2500, 0.2487, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1209, 0.1547, 0.1586,  ..., 0.2143, 0.1536, 0.1744],
         [0.1209, 0.1547, 0.1500,  ..., 0.2143, 0.1536, 0.1744],
         [0.1209, 0.1547, 0.1551,  ..., 0.2143, 0.1536, 0.1744],
         [0.6372, 0.5359, 0.5363,  ..., 0.3571, 0.5392, 0.4767]],
        [[0.2500, 0.2500, 0.2767,  ..., 0.2500, 0.2500, 0.2734],
         [0.2500, 0.2500, 0.2478,  ..., 0.2500, 0.2500, 0.2280],
         [0.2500, 0.2500, 0.2377,  ..., 0.2500, 0.2500, 0.2707],
         [0.2500, 0.2500, 0.2377,  ..., 0.2500, 0.2500, 0.2280]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 988:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 13:26:48,972 [Process: 0] Synchronize training processes
2024-08-16 13:26:48,972 [Process: 0] Evaluating...
2024-08-16 13:26:48,974 [Process: 0] EPOCH 988:
2024-08-16 13:26:48,976 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1315, 0.1210, 0.1628,  ..., 0.1469, 0.1704, 0.1570],
         [0.1315, 0.1218, 0.1628,  ..., 0.1469, 0.1704, 0.1570],
         [0.1315, 0.1210, 0.1628,  ..., 0.1469, 0.1704, 0.1570],
         [0.6054, 0.6363, 0.5115,  ..., 0.5593, 0.4887, 0.5291]],
        [[0.2464, 0.2647, 0.2495,  ..., 0.2489, 0.2486, 0.2500],
         [0.2609, 0.2457, 0.2515,  ..., 0.2532, 0.2541, 0.2500],
         [0.2464, 0.2448, 0.2495,  ..., 0.2489, 0.2486, 0.2500],
         [0.2464, 0.2448, 0.2495,  ..., 0.2489, 0.2486, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1723, 0.1166, 0.1522,  ..., 0.1390, 0.1300, 0.1272],
         [0.1723, 0.1166, 0.1522,  ..., 0.1390, 0.1300, 0.1272],
         [0.1723, 0.1166, 0.1522,  ..., 0.1390, 0.1300, 0.1272],
         [0.4832, 0.6503, 0.5433,  ..., 0.5829, 0.6099, 0.6183]],
        [[0.2702, 0.2391, 0.2433,  ..., 0.2500, 0.2492, 0.3025],
         [0.2610, 0.2391, 0.2475,  ..., 0.2500, 0.2492, 0.2569],
         [0.2344, 0.2828, 0.2660,  ..., 0.2500, 0.2524, 0.2203],
         [0.2344, 0.2391, 0.2433,  ..., 0.2500, 0.2492, 0.2203]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 989:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1260, 0.1239, 0.1256,  ..., 0.1412, 0.1736, 0.1518],
         [0.1260, 0.1250, 0.1258,  ..., 0.1428, 0.1736, 0.1658],
         [0.1260, 0.1239, 0.1256,  ..., 0.1412, 0.1736, 0.1518],
         [0.6220, 0.6273, 0.6229,  ..., 0.5747, 0.4793, 0.5305]],
        [[0.2500, 0.2490, 0.2500,  ..., 0.2494, 0.2500, 0.2494],
         [0.2500, 0.2531, 0.2500,  ..., 0.2518, 0.2500, 0.2517],
         [0.2500, 0.2490, 0.2500,  ..., 0.2494, 0.2500, 0.2494],
         [0.2500, 0.2490, 0.2500,  ..., 0.2494, 0.2500, 0.2494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:26:50,905 [Process: 0] Synchronize training processes
2024-08-16 13:26:50,905 [Process: 0] Evaluating...
2024-08-16 13:26:50,907 [Process: 0] EPOCH 989:
2024-08-16 13:26:50,909 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1629, 0.1463, 0.1714,  ..., 0.1511, 0.1788, 0.1122],
         [0.1629, 0.1453, 0.1714,  ..., 0.1459, 0.1788, 0.1122],
         [0.1629, 0.1453, 0.1714,  ..., 0.1459, 0.1788, 0.1122],
         [0.5112, 0.5632, 0.4858,  ..., 0.5571, 0.4637, 0.6635]],
        [[0.2449, 0.2738, 0.2848,  ..., 0.2500, 0.2401, 0.2745],
         [0.2522, 0.2478, 0.2384,  ..., 0.2500, 0.2811, 0.2467],
         [0.2581, 0.2392, 0.2384,  ..., 0.2500, 0.2394, 0.2496],
         [0.2449, 0.2392, 0.2384,  ..., 0.2500, 0.2394, 0.2292]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 990:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1532, 0.1395, 0.1399,  ..., 0.1648, 0.1768, 0.1522],
         [0.1532, 0.1397, 0.1399,  ..., 0.1648, 0.1547, 0.1522],
         [0.1532, 0.1395, 0.1399,  ..., 0.1648, 0.1516, 0.1522],
         [0.5404, 0.5814, 0.5804,  ..., 0.5057, 0.5169, 0.5433]],
        [[0.2500, 0.2500, 0.2495,  ..., 0.2500, 0.2490, 0.2496],
         [0.2500, 0.2500, 0.2514,  ..., 0.2500, 0.2529, 0.2512],
         [0.2500, 0.2500, 0.2495,  ..., 0.2500, 0.2490, 0.2496],
         [0.2500, 0.2500, 0.2495,  ..., 0.2500, 0.2490, 0.2496]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:26:52,848 [Process: 0] Synchronize training processes
2024-08-16 13:26:52,849 [Process: 0] Evaluating...
2024-08-16 13:26:52,851 [Process: 0] EPOCH 990:
2024-08-16 13:26:52,853 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1404, 0.1713, 0.1405,  ..., 0.1136, 0.1200, 0.1753],
         [0.1369, 0.1713, 0.1405,  ..., 0.1136, 0.1200, 0.1753],
         [0.1369, 0.1713, 0.1405,  ..., 0.1136, 0.1200, 0.1753],
         [0.5858, 0.4862, 0.5784,  ..., 0.6592, 0.6401, 0.4741]],
        [[0.2500, 0.2478, 0.2815,  ..., 0.2536, 0.2500, 0.2489],
         [0.2500, 0.2478, 0.2565,  ..., 0.2488, 0.2500, 0.2532],
         [0.2500, 0.2565, 0.2310,  ..., 0.2488, 0.2500, 0.2489],
         [0.2500, 0.2478, 0.2310,  ..., 0.2488, 0.2500, 0.2489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 991:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1415, 0.1465, 0.1483,  ..., 0.1552, 0.1067, 0.1042],
         [0.1415, 0.1465, 0.1483,  ..., 0.1552, 0.1067, 0.1119],
         [0.1415, 0.1465, 0.1483,  ..., 0.1552, 0.1067, 0.1042],
         [0.5756, 0.5606, 0.5551,  ..., 0.5343, 0.6800, 0.6798]],
        [[0.2500, 0.2481, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2556, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2481, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2481, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:26:54,789 [Process: 0] Synchronize training processes
2024-08-16 13:26:54,789 [Process: 0] Evaluating...
2024-08-16 13:26:54,792 [Process: 0] EPOCH 991:
2024-08-16 13:26:54,795 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1590, 0.1846, 0.1771,  ..., 0.1933, 0.1316, 0.1401],
         [0.1590, 0.1846, 0.1771,  ..., 0.1933, 0.1316, 0.1401],
         [0.1711, 0.1846, 0.1771,  ..., 0.1933, 0.1316, 0.1401],
         [0.5110, 0.4463, 0.4688,  ..., 0.4201, 0.6052, 0.5797]],
        [[0.2429, 0.2441, 0.2427,  ..., 0.2500, 0.2500, 0.2614],
         [0.2713, 0.2677, 0.2720,  ..., 0.2500, 0.2500, 0.2355],
         [0.2429, 0.2441, 0.2427,  ..., 0.2500, 0.2500, 0.2676],
         [0.2429, 0.2441, 0.2427,  ..., 0.2500, 0.2500, 0.2355]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 992:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1820, 0.1570, 0.1614,  ..., 0.1391, 0.1302, 0.1591],
         [0.1820, 0.1570, 0.1614,  ..., 0.1391, 0.1302, 0.1591],
         [0.1820, 0.1570, 0.1614,  ..., 0.1391, 0.1302, 0.1591],
         [0.4540, 0.5291, 0.5159,  ..., 0.5827, 0.6094, 0.5227]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2494, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2519, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2494, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2494, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:26:56,767 [Process: 0] Synchronize training processes
2024-08-16 13:26:56,767 [Process: 0] Evaluating...
2024-08-16 13:26:56,769 [Process: 0] EPOCH 992:
2024-08-16 13:26:56,771 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1367, 0.1314, 0.1578,  ..., 0.1523, 0.1669, 0.1280],
         [0.1367, 0.1325, 0.1627,  ..., 0.1619, 0.1669, 0.1280],
         [0.1367, 0.1314, 0.1578,  ..., 0.1523, 0.1669, 0.1280],
         [0.5898, 0.6048, 0.5217,  ..., 0.5335, 0.4994, 0.6160]],
        [[0.2500, 0.2500, 0.2397,  ..., 0.2500, 0.2500, 0.2436],
         [0.2500, 0.2500, 0.2552,  ..., 0.2500, 0.2500, 0.2588],
         [0.2500, 0.2500, 0.2691,  ..., 0.2500, 0.2500, 0.2614],
         [0.2500, 0.2500, 0.2360,  ..., 0.2500, 0.2500, 0.2362]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 993:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1003, 0.1508, 0.1269,  ..., 0.1327, 0.1378, 0.1779],
         [0.1003, 0.1508, 0.1269,  ..., 0.1327, 0.1378, 0.1779],
         [0.1003, 0.1508, 0.1269,  ..., 0.1327, 0.1378, 0.1779],
         [0.6991, 0.5477, 0.6192,  ..., 0.6020, 0.5866, 0.4664]],
        [[0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2478, 0.2500],
         [0.2500, 0.2505, 0.2500,  ..., 0.2500, 0.2566, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2478, 0.2500],
         [0.2500, 0.2498, 0.2500,  ..., 0.2500, 0.2478, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:26:58,694 [Process: 0] Synchronize training processes
2024-08-16 13:26:58,695 [Process: 0] Evaluating...
2024-08-16 13:26:58,697 [Process: 0] EPOCH 993:
2024-08-16 13:26:58,699 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1502, 0.1735, 0.1260,  ..., 0.1350, 0.1689, 0.1556],
         [0.1322, 0.1735, 0.1260,  ..., 0.1350, 0.1689, 0.1556],
         [0.1322, 0.1735, 0.1260,  ..., 0.1350, 0.1689, 0.1838],
         [0.5853, 0.4795, 0.6219,  ..., 0.5949, 0.4933, 0.5051]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2483],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2552],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2483],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 994:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1233, 0.1546, 0.1408,  ..., 0.1383, 0.1684, 0.1303],
         [0.1264, 0.1546, 0.1453,  ..., 0.1383, 0.1684, 0.1303],
         [0.1233, 0.1546, 0.1408,  ..., 0.1383, 0.1684, 0.1303],
         [0.6269, 0.5361, 0.5731,  ..., 0.5850, 0.4947, 0.6092]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:27:00,596 [Process: 0] Synchronize training processes
2024-08-16 13:27:00,596 [Process: 0] Evaluating...
2024-08-16 13:27:00,598 [Process: 0] EPOCH 994:
2024-08-16 13:27:00,600 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1571, 0.1511, 0.1435,  ..., 0.1642, 0.1335, 0.1202],
         [0.1595, 0.1642, 0.1435,  ..., 0.1642, 0.1335, 0.1206],
         [0.1439, 0.1511, 0.1435,  ..., 0.1642, 0.1335, 0.1202],
         [0.5395, 0.5337, 0.5695,  ..., 0.5074, 0.5994, 0.6390]],
        [[0.2441, 0.2471, 0.2500,  ..., 0.2735, 0.2500, 0.2463],
         [0.2678, 0.2871, 0.2500,  ..., 0.2422, 0.2500, 0.2610],
         [0.2441, 0.2340, 0.2500,  ..., 0.2422, 0.2500, 0.2463],
         [0.2441, 0.2318, 0.2500,  ..., 0.2422, 0.2500, 0.2463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 995:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1324, 0.1172, 0.1239,  ..., 0.1486, 0.1570, 0.0999],
         [0.1324, 0.1175, 0.1272,  ..., 0.1486, 0.1570, 0.0999],
         [0.1324, 0.1172, 0.1239,  ..., 0.1486, 0.1570, 0.0999],
         [0.6028, 0.6480, 0.6249,  ..., 0.5543, 0.5290, 0.7004]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2551, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2536, 0.2500, 0.2501],
         [0.2500, 0.2500, 0.2500,  ..., 0.2457, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2457, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:27:02,590 [Process: 0] Synchronize training processes
2024-08-16 13:27:02,590 [Process: 0] Evaluating...
2024-08-16 13:27:02,592 [Process: 0] EPOCH 995:
2024-08-16 13:27:02,594 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1242, 0.1951, 0.1932,  ..., 0.1421, 0.1239, 0.1695],
         [0.1270, 0.1810, 0.1650,  ..., 0.1421, 0.1239, 0.1695],
         [0.1242, 0.1791, 0.1642,  ..., 0.1421, 0.1239, 0.1695],
         [0.6246, 0.4447, 0.4777,  ..., 0.5736, 0.6284, 0.4915]],
        [[0.2574, 0.2500, 0.2500,  ..., 0.2420, 0.2500, 0.2447],
         [0.2475, 0.2500, 0.2500,  ..., 0.2420, 0.2500, 0.2447],
         [0.2475, 0.2500, 0.2500,  ..., 0.2739, 0.2500, 0.2660],
         [0.2475, 0.2500, 0.2500,  ..., 0.2420, 0.2500, 0.2447]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 996:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1767, 0.1093, 0.1006,  ..., 0.1808, 0.1693, 0.1763],
         [0.1767, 0.1093, 0.1006,  ..., 0.1808, 0.1693, 0.1763],
         [0.1767, 0.1093, 0.1006,  ..., 0.1808, 0.1693, 0.1763],
         [0.4700, 0.6722, 0.6981,  ..., 0.4577, 0.4921, 0.4712]],
        [[0.2500, 0.2500, 0.2471,  ..., 0.2494, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2589,  ..., 0.2519, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2470,  ..., 0.2494, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2470,  ..., 0.2494, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:27:04,544 [Process: 0] Synchronize training processes
2024-08-16 13:27:04,544 [Process: 0] Evaluating...
2024-08-16 13:27:04,546 [Process: 0] EPOCH 996:
2024-08-16 13:27:04,548 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1252, 0.1521, 0.1264,  ..., 0.1733, 0.1848, 0.1406],
         [0.1260, 0.1521, 0.1264,  ..., 0.1770, 0.1858, 0.1406],
         [0.1252, 0.1521, 0.1264,  ..., 0.1733, 0.1800, 0.1406],
         [0.6237, 0.5437, 0.6208,  ..., 0.4763, 0.4494, 0.5781]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2444, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2669, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2444, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2444, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 997:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1591, 0.1258, 0.1316,  ..., 0.1377, 0.1416, 0.1286],
         [0.1591, 0.1258, 0.1316,  ..., 0.1377, 0.1416, 0.1286],
         [0.1591, 0.1258, 0.1316,  ..., 0.1377, 0.1416, 0.1286],
         [0.5226, 0.6227, 0.6051,  ..., 0.5870, 0.5753, 0.6142]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:27:06,532 [Process: 0] Synchronize training processes
2024-08-16 13:27:06,532 [Process: 0] Evaluating...
2024-08-16 13:27:06,534 [Process: 0] EPOCH 997:
2024-08-16 13:27:06,536 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1245, 0.1203, 0.1281,  ..., 0.1458, 0.1807, 0.0961],
         [0.1245, 0.1203, 0.1281,  ..., 0.1458, 0.1807, 0.0961],
         [0.1245, 0.1203, 0.1281,  ..., 0.1458, 0.1807, 0.0961],
         [0.6266, 0.6392, 0.6157,  ..., 0.5626, 0.4579, 0.7118]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 998:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1466, 0.1487, 0.1638,  ..., 0.1554, 0.1601, 0.1285],
         [0.1466, 0.1487, 0.1638,  ..., 0.1554, 0.1601, 0.1285],
         [0.1466, 0.1487, 0.1638,  ..., 0.1554, 0.1601, 0.1285],
         [0.5603, 0.5539, 0.5085,  ..., 0.5337, 0.5197, 0.6144]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:27:08,463 [Process: 0] Synchronize training processes
2024-08-16 13:27:08,464 [Process: 0] Evaluating...
2024-08-16 13:27:08,466 [Process: 0] EPOCH 998:
2024-08-16 13:27:08,468 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1406, 0.1223, 0.1712,  ..., 0.1726, 0.2065, 0.1426],
         [0.1406, 0.1223, 0.1726,  ..., 0.1726, 0.1356, 0.1426],
         [0.1406, 0.1223, 0.1712,  ..., 0.1726, 0.1356, 0.1426],
         [0.5782, 0.6331, 0.4851,  ..., 0.4823, 0.5223, 0.5723]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 999:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1271, 0.1745, 0.0961,  ..., 0.1545, 0.1183, 0.1116],
         [0.1271, 0.1745, 0.0961,  ..., 0.1545, 0.1194, 0.1120],
         [0.1271, 0.1745, 0.0961,  ..., 0.1545, 0.1183, 0.1116],
         [0.6187, 0.4764, 0.7118,  ..., 0.5366, 0.6440, 0.6647]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:27:10,366 [Process: 0] Synchronize training processes
2024-08-16 13:27:10,366 [Process: 0] Evaluating...
2024-08-16 13:27:10,368 [Process: 0] EPOCH 999:
2024-08-16 13:27:10,370 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1536, 0.1309, 0.1334,  ..., 0.0981, 0.1134, 0.1201],
         [0.1536, 0.1309, 0.1334,  ..., 0.0981, 0.1134, 0.1201],
         [0.1536, 0.1309, 0.1334,  ..., 0.0981, 0.1134, 0.1201],
         [0.5392, 0.6074, 0.5999,  ..., 0.7058, 0.6599, 0.6396]],
        [[0.2578, 0.2414, 0.2631,  ..., 0.2439, 0.2500, 0.2500],
         [0.2589, 0.2758, 0.2456,  ..., 0.2682, 0.2500, 0.2500],
         [0.2612, 0.2414, 0.2456,  ..., 0.2439, 0.2500, 0.2500],
         [0.2221, 0.2414, 0.2456,  ..., 0.2439, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 1000:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1599, 0.1096, 0.1483,  ..., 0.1169, 0.1664, 0.0860],
         [0.1599, 0.1096, 0.1483,  ..., 0.1169, 0.1664, 0.0861],
         [0.1599, 0.1096, 0.1483,  ..., 0.1169, 0.1664, 0.0860],
         [0.5204, 0.6713, 0.5552,  ..., 0.6494, 0.5008, 0.7420]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:27:12,359 [Process: 0] Synchronize training processes
2024-08-16 13:27:12,359 [Process: 0] Evaluating...
2024-08-16 13:27:12,361 [Process: 0] EPOCH 1000:
2024-08-16 13:27:12,363 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1321, 0.1093, 0.1130,  ..., 0.1323, 0.2076, 0.1334],
         [0.1321, 0.1093, 0.1190,  ..., 0.1323, 0.1359, 0.1334],
         [0.1321, 0.1093, 0.1130,  ..., 0.1323, 0.1359, 0.1334],
         [0.6037, 0.6722, 0.6550,  ..., 0.6030, 0.5206, 0.5998]],
        [[0.2491, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2527, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2491, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2491, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-16 13:27:14,360 [Process: 0] Synchronize training processes
2024-08-16 13:27:14,360 [Process: 0] Evaluating...