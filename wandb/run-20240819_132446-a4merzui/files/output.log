2024-08-19 13:24:51,352 [Worker 0] Is distributed: False
2024-08-19 13:24:51,353 [Process: 0] Starting training
2024-08-19 13:24:51,353 [Process: 0] EPOCH 1:
2024-08-19 13:24:51,356 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:52,961 [Process: 0] Synchronize training processes
2024-08-19 13:24:52,961 [Process: 0] Evaluating...
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2013, 0.3420, 0.1496,  ..., 0.1481, 0.4452, 0.1980],
         [0.3961, 0.3088, 0.1496,  ..., 0.1420, 0.1849, 0.4061],
         [0.2013, 0.1928, 0.5388,  ..., 0.5084, 0.1849, 0.1980],
         [0.2013, 0.1564, 0.1620,  ..., 0.2015, 0.1849, 0.1980]],
        [[0.3098, 0.1502, 0.6037,  ..., 0.2301, 0.2239, 0.1630],
         [0.1867, 0.4153, 0.0751,  ..., 0.3520, 0.2239, 0.2199],
         [0.1668, 0.2519, 0.0751,  ..., 0.2089, 0.3282, 0.1630],
         [0.3367, 0.1825, 0.2462,  ..., 0.2089, 0.2239, 0.4541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2638, 0.2680, 0.2304,  ..., 0.3232, 0.2688, 0.1065],
         [0.3115, 0.2848, 0.2835,  ..., 0.2671, 0.2666, 0.2139],
         [0.2055, 0.1816, 0.1738,  ..., 0.2017, 0.1649, 0.1940],
         [0.2192, 0.2656, 0.3123,  ..., 0.2079, 0.2996, 0.4856]],
        [[0.2735, 0.3259, 0.2736,  ..., 0.2987, 0.2746, 0.1374],
         [0.2400, 0.2139, 0.2024,  ..., 0.2777, 0.3042, 0.1374],
         [0.1775, 0.2126, 0.2024,  ..., 0.1831, 0.1680, 0.5877],
         [0.3089, 0.2476, 0.3216,  ..., 0.2405, 0.2532, 0.1374]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:24:53,925 [Process: 0] EPOCH 2:
2024-08-19 13:24:53,928 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:54,901 [Process: 0] Synchronize training processes
2024-08-19 13:24:54,901 [Process: 0] Evaluating...
2024-08-19 13:24:54,903 [Process: 0] EPOCH 3:
2024-08-19 13:24:54,905 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7630e-01, 5.2079e-05, 2.6322e-01,  ..., 2.9882e-01,
          2.7454e-01, 2.7245e-01],
         [2.6251e-01, 5.2079e-05, 2.5781e-01,  ..., 2.4922e-01,
          2.6465e-01, 2.6701e-01],
         [1.8371e-01, 9.9984e-01, 1.8842e-01,  ..., 2.0230e-01,
          1.7808e-01, 1.9425e-01],
         [2.7748e-01, 5.2079e-05, 2.9055e-01,  ..., 2.4966e-01,
          2.8273e-01, 2.6629e-01]],
        [[1.6041e-01, 2.9282e-01, 2.8410e-01,  ..., 2.6512e-01,
          1.0240e-01, 1.4917e-01],
         [1.6041e-01, 2.4170e-01, 2.6348e-01,  ..., 2.6124e-01,
          1.0240e-01, 1.4917e-01],
         [5.1878e-01, 1.9971e-01, 1.8237e-01,  ..., 1.9811e-01,
          6.9279e-01, 5.5248e-01],
         [1.6041e-01, 2.6577e-01, 2.7005e-01,  ..., 2.7553e-01,
          1.0240e-01, 1.4917e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2876, 0.2673, 0.2770,  ..., 0.2714, 0.2746, 0.2700],
         [0.2403, 0.2520, 0.2516,  ..., 0.2593, 0.2678, 0.2574],
         [0.1938, 0.1913, 0.1890,  ..., 0.2001, 0.2024, 0.1904],
         [0.2783, 0.2894, 0.2824,  ..., 0.2693, 0.2551, 0.2822]],
        [[0.2702, 0.2762, 0.2686,  ..., 0.2759, 0.1403, 0.2021],
         [0.2466, 0.2472, 0.2616,  ..., 0.2536, 0.1403, 0.2189],
         [0.2194, 0.2025, 0.1988,  ..., 0.2064, 0.5790, 0.3769],
         [0.2638, 0.2740, 0.2710,  ..., 0.2641, 0.1403, 0.2021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:55,876 [Process: 0] Synchronize training processes
2024-08-19 13:24:55,876 [Process: 0] Evaluating...
2024-08-19 13:24:55,878 [Process: 0] EPOCH 4:
2024-08-19 13:24:55,880 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:56,851 [Process: 0] Synchronize training processes
2024-08-19 13:24:56,851 [Process: 0] Evaluating...
2024-08-19 13:24:56,853 [Process: 0] EPOCH 5:
2024-08-19 13:24:56,854 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4419e-01, 1.1488e-06, 2.6763e-01,  ..., 2.6209e-01,
          2.6599e-01, 2.7264e-01],
         [2.4419e-01, 1.1488e-06, 2.4787e-01,  ..., 2.4802e-01,
          2.4403e-01, 2.5156e-01],
         [2.6602e-01, 1.0000e+00, 2.1735e-01,  ..., 2.1840e-01,
          2.2453e-01, 2.1520e-01],
         [2.4561e-01, 1.1488e-06, 2.6715e-01,  ..., 2.7149e-01,
          2.6545e-01, 2.6060e-01]],
        [[2.7063e-01, 2.6739e-01, 2.7246e-01,  ..., 2.7158e-01,
          2.7175e-01, 2.6924e-01],
         [2.5070e-01, 2.4611e-01, 2.4590e-01,  ..., 2.4701e-01,
          2.4225e-01, 2.4802e-01],
         [2.1917e-01, 2.1562e-01, 2.1201e-01,  ..., 2.0923e-01,
          2.2166e-01, 2.1446e-01],
         [2.5951e-01, 2.7088e-01, 2.6963e-01,  ..., 2.7219e-01,
          2.6434e-01, 2.6828e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2767, 0.2724, 0.2706,  ..., 0.2696, 0.2789, 0.2606],
         [0.2520, 0.2485, 0.2476,  ..., 0.2485, 0.2471, 0.2551],
         [0.1960, 0.1979, 0.2120,  ..., 0.2052, 0.2099, 0.2106],
         [0.2752, 0.2812, 0.2698,  ..., 0.2767, 0.2641, 0.2738]],
        [[0.2723, 0.2862, 0.2695,  ..., 0.2592, 0.2516, 0.2500],
         [0.2487, 0.2523, 0.2445,  ..., 0.2504, 0.2392, 0.2500],
         [0.2082, 0.1964, 0.2130,  ..., 0.2205, 0.2694, 0.2500],
         [0.2708, 0.2650, 0.2729,  ..., 0.2699, 0.2398, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2754, 0.0145, 0.2753,  ..., 0.2794, 0.2848, 0.2694],
         [0.2419, 0.0145, 0.2450,  ..., 0.2403, 0.2431, 0.2405],
         [0.2143, 0.9564, 0.2176,  ..., 0.2051, 0.2058, 0.2143],
         [0.2684, 0.0145, 0.2621,  ..., 0.2753, 0.2663, 0.2757]],
        [[0.2754, 0.2788, 0.2708,  ..., 0.2840, 0.2764, 0.2512],
         [0.2423, 0.2463, 0.2478,  ..., 0.2357, 0.2465, 0.2520],
         [0.2149, 0.2031, 0.2220,  ..., 0.2091, 0.2082, 0.2234],
         [0.2674, 0.2718, 0.2594,  ..., 0.2712, 0.2689, 0.2734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2740, 0.2800, 0.2739,  ..., 0.2755, 0.2824, 0.2755],
         [0.2434, 0.2420, 0.2460,  ..., 0.2414, 0.2433, 0.2476],
         [0.2119, 0.2088, 0.2092,  ..., 0.2078, 0.2087, 0.1983],
         [0.2708, 0.2692, 0.2710,  ..., 0.2753, 0.2655, 0.2786]],
        [[0.2680, 0.2773, 0.2756,  ..., 0.2701, 0.2884, 0.2634],
         [0.2401, 0.2464, 0.2401,  ..., 0.2443, 0.2335, 0.2453],
         [0.2169, 0.2130, 0.2201,  ..., 0.2153, 0.2067, 0.2126],
         [0.2749, 0.2633, 0.2642,  ..., 0.2704, 0.2714, 0.2787]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:57,824 [Process: 0] Synchronize training processes
2024-08-19 13:24:57,825 [Process: 0] Evaluating...
2024-08-19 13:24:57,826 [Process: 0] EPOCH 6:
2024-08-19 13:24:57,828 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:58,798 [Process: 0] Synchronize training processes
2024-08-19 13:24:58,799 [Process: 0] Evaluating...
2024-08-19 13:24:58,800 [Process: 0] EPOCH 7:
2024-08-19 13:24:58,802 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2768, 0.2000, 0.2618,  ..., 0.2709, 0.2788, 0.2748],
         [0.2375, 0.2021, 0.2365,  ..., 0.2397, 0.2388, 0.2415],
         [0.2181, 0.4069, 0.2306,  ..., 0.2170, 0.2211, 0.2175],
         [0.2676, 0.1910, 0.2711,  ..., 0.2724, 0.2613, 0.2662]],
        [[0.2399, 0.2712, 0.2694,  ..., 0.2768, 0.2773, 0.2733],
         [0.2205, 0.2389, 0.2431,  ..., 0.2411, 0.2374, 0.2410],
         [0.3019, 0.2193, 0.2160,  ..., 0.2104, 0.2212, 0.2221],
         [0.2377, 0.2706, 0.2715,  ..., 0.2717, 0.2641, 0.2636]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2747, 0.2756, 0.2812,  ..., 0.2773, 0.2687, 0.2722],
         [0.2341, 0.2308, 0.2443,  ..., 0.2387, 0.2333, 0.2417],
         [0.2110, 0.2093, 0.2096,  ..., 0.2097, 0.2289, 0.2060],
         [0.2802, 0.2844, 0.2648,  ..., 0.2743, 0.2691, 0.2801]],
        [[0.2819, 0.2544, 0.2666,  ..., 0.2630, 0.2694, 0.2676],
         [0.2482, 0.2340, 0.2411,  ..., 0.2370, 0.2343, 0.2328],
         [0.2040, 0.2623, 0.2095,  ..., 0.2372, 0.2124, 0.2067],
         [0.2659, 0.2494, 0.2828,  ..., 0.2629, 0.2839, 0.2929]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2762, 0.2359, 0.2899,  ..., 0.2713, 0.2884, 0.2696],
         [0.2268, 0.2169, 0.2340,  ..., 0.2307, 0.2288, 0.2333],
         [0.2203, 0.3219, 0.2046,  ..., 0.2194, 0.2171, 0.2256],
         [0.2768, 0.2252, 0.2715,  ..., 0.2786, 0.2656, 0.2715]],
        [[0.1614, 0.2543, 0.2663,  ..., 0.2810, 0.2758, 0.2821],
         [0.1614, 0.2213, 0.2360,  ..., 0.2320, 0.2287, 0.2312],
         [0.5158, 0.2737, 0.2375,  ..., 0.2174, 0.2278, 0.2135],
         [0.1614, 0.2508, 0.2602,  ..., 0.2696, 0.2676, 0.2733]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2793, 0.2836, 0.3021,  ..., 0.2851, 0.2857, 0.2926],
         [0.2283, 0.2298, 0.2199,  ..., 0.2266, 0.2344, 0.2249],
         [0.2216, 0.2016, 0.2034,  ..., 0.2132, 0.2042, 0.2067],
         [0.2708, 0.2849, 0.2746,  ..., 0.2752, 0.2757, 0.2758]],
        [[0.3005, 0.2874, 0.2756,  ..., 0.2833, 0.2841, 0.2796],
         [0.2250, 0.2267, 0.2239,  ..., 0.2293, 0.2312, 0.2288],
         [0.1973, 0.2117, 0.2183,  ..., 0.2094, 0.2095, 0.2288],
         [0.2772, 0.2743, 0.2822,  ..., 0.2780, 0.2752, 0.2628]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:59,774 [Process: 0] Synchronize training processes
2024-08-19 13:24:59,774 [Process: 0] Evaluating...
2024-08-19 13:24:59,776 [Process: 0] EPOCH 8:
2024-08-19 13:24:59,778 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:00,749 [Process: 0] Synchronize training processes
2024-08-19 13:25:00,750 [Process: 0] Evaluating...
2024-08-19 13:25:00,751 [Process: 0] EPOCH 9:
2024-08-19 13:25:00,753 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2773, 0.2552, 0.2834,  ..., 0.2758, 0.2815, 0.2723],
         [0.2332, 0.2258, 0.2236,  ..., 0.2297, 0.2253, 0.2295],
         [0.2226, 0.2671, 0.2159,  ..., 0.2244, 0.2228, 0.2231],
         [0.2669, 0.2518, 0.2771,  ..., 0.2702, 0.2704, 0.2751]],
        [[0.1656, 0.2734, 0.2776,  ..., 0.2859, 0.2570, 0.2796],
         [0.1874, 0.2276, 0.2209,  ..., 0.2214, 0.2230, 0.2234],
         [0.4815, 0.2340, 0.2340,  ..., 0.2214, 0.2636, 0.2234],
         [0.1656, 0.2650, 0.2675,  ..., 0.2714, 0.2565, 0.2737]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2762, 0.2836, 0.3010,  ..., 0.2852, 0.2761, 0.2885],
         [0.2202, 0.2171, 0.2171,  ..., 0.2211, 0.2236, 0.2289],
         [0.2258, 0.2170, 0.2005,  ..., 0.2139, 0.2259, 0.2092],
         [0.2778, 0.2823, 0.2813,  ..., 0.2798, 0.2744, 0.2733]],
        [[0.2998, 0.2841, 0.2868,  ..., 0.2921, 0.2869, 0.2715],
         [0.2125, 0.2226, 0.2181,  ..., 0.2172, 0.2293, 0.2281],
         [0.2125, 0.2245, 0.2095,  ..., 0.2164, 0.2102, 0.2169],
         [0.2752, 0.2688, 0.2856,  ..., 0.2744, 0.2736, 0.2835]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2809, 0.2717, 0.2760,  ..., 0.2782, 0.2806, 0.2874],
         [0.2235, 0.2242, 0.2275,  ..., 0.2290, 0.2184, 0.2181],
         [0.2176, 0.2338, 0.2275,  ..., 0.2154, 0.2184, 0.2181],
         [0.2779, 0.2702, 0.2690,  ..., 0.2774, 0.2827, 0.2764]],
        [[0.2638, 0.2875, 0.2825,  ..., 0.3078, 0.0538, 0.2922],
         [0.2314, 0.2205, 0.2210,  ..., 0.2068, 0.1041, 0.2173],
         [0.2523, 0.2063, 0.2210,  ..., 0.2068, 0.7883, 0.2021],
         [0.2525, 0.2858, 0.2756,  ..., 0.2785, 0.0538, 0.2884]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2895, 0.2843, 0.2834,  ..., 0.2942, 0.2859, 0.2789],
         [0.2165, 0.2156, 0.2164,  ..., 0.2176, 0.2139, 0.2267],
         [0.2129, 0.2156, 0.2164,  ..., 0.2026, 0.2139, 0.2127],
         [0.2810, 0.2846, 0.2838,  ..., 0.2857, 0.2863, 0.2817]],
        [[0.2857, 0.2852, 0.2929,  ..., 0.2843, 0.2932, 0.2772],
         [0.2217, 0.2243, 0.2145,  ..., 0.2195, 0.2140, 0.2317],
         [0.2100, 0.2243, 0.2145,  ..., 0.2195, 0.2140, 0.2189],
         [0.2827, 0.2661, 0.2780,  ..., 0.2768, 0.2787, 0.2722]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:25:01,725 [Process: 0] Synchronize training processes
2024-08-19 13:25:01,725 [Process: 0] Evaluating...
2024-08-19 13:25:01,727 [Process: 0] EPOCH 10:
2024-08-19 13:25:01,729 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:02,701 [Process: 0] Synchronize training processes
2024-08-19 13:25:02,701 [Process: 0] Evaluating...
2024-08-19 13:25:02,703 [Process: 0] EPOCH 11:
2024-08-19 13:25:02,705 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2878, 0.2963, 0.2881,  ..., 0.2747, 0.2821, 0.2897],
         [0.2175, 0.2129, 0.2205,  ..., 0.2244, 0.2226, 0.2138],
         [0.2175, 0.2129, 0.2147,  ..., 0.2244, 0.2226, 0.2138],
         [0.2772, 0.2780, 0.2767,  ..., 0.2765, 0.2727, 0.2826]],
        [[0.2797, 0.2870, 0.2831,  ..., 0.2752, 0.0947, 0.2978],
         [0.2179, 0.2214, 0.2200,  ..., 0.2230, 0.1316, 0.2154],
         [0.2284, 0.2168, 0.2200,  ..., 0.2092, 0.6790, 0.2106],
         [0.2740, 0.2747, 0.2769,  ..., 0.2926, 0.0947, 0.2761]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2908, 0.3153, 0.3083,  ..., 0.2969, 0.2742, 0.2929],
         [0.2146, 0.2054, 0.2077,  ..., 0.2111, 0.2233, 0.2165],
         [0.2146, 0.2054, 0.2052,  ..., 0.2111, 0.2233, 0.2091],
         [0.2800, 0.2739, 0.2789,  ..., 0.2808, 0.2792, 0.2815]],
        [[0.2923, 0.2977, 0.3043,  ..., 0.2895, 0.2780, 0.2857],
         [0.2104, 0.2080, 0.2127,  ..., 0.2145, 0.2231, 0.2325],
         [0.2104, 0.2080, 0.2039,  ..., 0.2145, 0.2231, 0.2063],
         [0.2869, 0.2863, 0.2790,  ..., 0.2814, 0.2758, 0.2755]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2971, 0.2850, 0.2687,  ..., 0.2891, 0.2841, 0.2757],
         [0.2145, 0.2233, 0.2294,  ..., 0.2164, 0.2221, 0.2221],
         [0.2145, 0.2233, 0.2294,  ..., 0.2097, 0.2221, 0.2221],
         [0.2739, 0.2683, 0.2725,  ..., 0.2847, 0.2716, 0.2800]],
        [[0.2808, 0.2794, 0.2750,  ..., 0.2836, 0.0840, 0.2920],
         [0.2264, 0.2219, 0.2229,  ..., 0.2144, 0.0840, 0.2122],
         [0.2163, 0.2219, 0.2229,  ..., 0.2144, 0.7479, 0.2122],
         [0.2766, 0.2767, 0.2792,  ..., 0.2875, 0.0840, 0.2836]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2891, 0.2943, 0.2922,  ..., 0.2936, 0.3026, 0.2969],
         [0.2058, 0.2133, 0.2120,  ..., 0.2130, 0.2052, 0.2147],
         [0.2049, 0.2133, 0.2084,  ..., 0.2130, 0.2052, 0.1968],
         [0.3002, 0.2791, 0.2874,  ..., 0.2805, 0.2870, 0.2916]],
        [[0.2977, 0.3034, 0.3162,  ..., 0.2901, 0.2501, 0.2030],
         [0.2042, 0.2129, 0.1996,  ..., 0.2105, 0.2288, 0.2044],
         [0.2042, 0.1973, 0.1996,  ..., 0.2105, 0.2288, 0.3741],
         [0.2939, 0.2864, 0.2846,  ..., 0.2888, 0.2923, 0.2185]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2719, 0.2821, 0.2795,  ..., 0.2816, 0.2783, 0.2938],
         [0.2179, 0.2209, 0.2206,  ..., 0.2158, 0.2250, 0.2130],
         [0.2179, 0.2209, 0.2206,  ..., 0.2158, 0.2250, 0.2130],
         [0.2922, 0.2761, 0.2793,  ..., 0.2869, 0.2716, 0.2801]],
        [[0.2865, 0.2843, 0.2920,  ..., 0.3004, 0.0219, 0.2585],
         [0.2119, 0.2100, 0.2184,  ..., 0.2088, 0.0219, 0.2074],
         [0.2244, 0.2279, 0.2184,  ..., 0.2088, 0.9342, 0.2669],
         [0.2773, 0.2777, 0.2713,  ..., 0.2820, 0.0219, 0.2671]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:25:03,695 [Process: 0] Synchronize training processes
2024-08-19 13:25:03,695 [Process: 0] Evaluating...
2024-08-19 13:25:04,652 [Process: 0] EPOCH 12:
2024-08-19 13:25:04,658 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3121, 0.2903, 0.3162,  ..., 0.3269, 0.2969, 0.2940],
         [0.2027, 0.2076, 0.1989,  ..., 0.2002, 0.2064, 0.2095],
         [0.2027, 0.2076, 0.1989,  ..., 0.1944, 0.2064, 0.2095],
         [0.2825, 0.2944, 0.2860,  ..., 0.2785, 0.2902, 0.2870]],
        [[0.3092, 0.3075, 0.3282,  ..., 0.3239, 0.2662, 0.1619],
         [0.1958, 0.2067, 0.2049,  ..., 0.2013, 0.2194, 0.1619],
         [0.1901, 0.2067, 0.2049,  ..., 0.2013, 0.2194, 0.5143],
         [0.3049, 0.2791, 0.2621,  ..., 0.2736, 0.2951, 0.1619]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3024, 0.2904, 0.2844,  ..., 0.2730, 0.3052, 0.2958],
         [0.2101, 0.2101, 0.2042,  ..., 0.2170, 0.2137, 0.2151],
         [0.2101, 0.2101, 0.2042,  ..., 0.2170, 0.2137, 0.2151],
         [0.2773, 0.2893, 0.3073,  ..., 0.2930, 0.2673, 0.2740]],
        [[0.3177, 0.1816, 0.2914,  ..., 0.2065, 0.0871, 0.1519],
         [0.2042, 0.1734, 0.2179,  ..., 0.2008, 0.0871, 0.1547],
         [0.2042, 0.4551, 0.2179,  ..., 0.3676, 0.7387, 0.5284],
         [0.2739, 0.1899, 0.2728,  ..., 0.2252, 0.0871, 0.1650]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:25:05,638 [Process: 0] Synchronize training processes
2024-08-19 13:25:05,638 [Process: 0] Evaluating...
2024-08-19 13:25:05,640 [Process: 0] EPOCH 13:
2024-08-19 13:25:05,642 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:06,613 [Process: 0] Synchronize training processes
2024-08-19 13:25:06,614 [Process: 0] Evaluating...
2024-08-19 13:25:06,615 [Process: 0] EPOCH 14:
2024-08-19 13:25:06,618 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3147, 0.3186, 0.3221,  ..., 0.3076, 0.2841, 0.2912],
         [0.2012, 0.2015, 0.1979,  ..., 0.2060, 0.2124, 0.2068],
         [0.2012, 0.2015, 0.1979,  ..., 0.2060, 0.2124, 0.2065],
         [0.2830, 0.2783, 0.2821,  ..., 0.2804, 0.2911, 0.2955]],
        [[0.3151, 0.2876, 0.3184,  ..., 0.3292, 0.2715, 0.1079],
         [0.1965, 0.2069, 0.2016,  ..., 0.1921, 0.2087, 0.1079],
         [0.1965, 0.2069, 0.1979,  ..., 0.1921, 0.2118, 0.6762],
         [0.2918, 0.2986, 0.2821,  ..., 0.2866, 0.3080, 0.1079]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2937, 0.2797, 0.3027,  ..., 0.2523, 0.2847, 0.2697],
         [0.2151, 0.2163, 0.2111,  ..., 0.2308, 0.2162, 0.2146],
         [0.2151, 0.2163, 0.2111,  ..., 0.2308, 0.2162, 0.2146],
         [0.2760, 0.2876, 0.2751,  ..., 0.2861, 0.2830, 0.3011]],
        [[0.3458, 0.3127, 0.2978,  ..., 0.1411, 0.0524, 0.2611],
         [0.1903, 0.2037, 0.2140,  ..., 0.1526, 0.0524, 0.2054],
         [0.1867, 0.2037, 0.2140,  ..., 0.5434, 0.8429, 0.2634],
         [0.2773, 0.2799, 0.2742,  ..., 0.1629, 0.0524, 0.2701]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2976, 0.3273, 0.2984,  ..., 0.2920, 0.3026, 0.2909],
         [0.2054, 0.2010, 0.2025,  ..., 0.2082, 0.2076, 0.2017],
         [0.2054, 0.1881, 0.2025,  ..., 0.2082, 0.2031, 0.2017],
         [0.2916, 0.2836, 0.2966,  ..., 0.2916, 0.2866, 0.3058]],
        [[0.2970, 0.3520, 0.3825,  ..., 0.3880, 0.2272, 0.0554],
         [0.2030, 0.1896, 0.1795,  ..., 0.1780, 0.2327, 0.0554],
         [0.1995, 0.1896, 0.1779,  ..., 0.1739, 0.2206, 0.8339],
         [0.3005, 0.2688, 0.2601,  ..., 0.2601, 0.3196, 0.0554]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2992, 0.2838, 0.2926,  ..., 0.2673, 0.2746, 0.2874],
         [0.2133, 0.2195, 0.2160,  ..., 0.2300, 0.2159, 0.2167],
         [0.2133, 0.2195, 0.2160,  ..., 0.2300, 0.2159, 0.2167],
         [0.2742, 0.2773, 0.2754,  ..., 0.2728, 0.2936, 0.2791]],
        [[0.3240, 0.3213, 0.3365,  ..., 0.1330, 0.1011, 0.1726],
         [0.2120, 0.2026, 0.1970,  ..., 0.1339, 0.1011, 0.1714],
         [0.2120, 0.2026, 0.1970,  ..., 0.6002, 0.6966, 0.4356],
         [0.2520, 0.2736, 0.2695,  ..., 0.1330, 0.1011, 0.2203]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:25:07,581 [Process: 0] Synchronize training processes
2024-08-19 13:25:07,581 [Process: 0] Evaluating...
2024-08-19 13:25:07,583 [Process: 0] EPOCH 15:
2024-08-19 13:25:07,584 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:08,559 [Process: 0] Synchronize training processes
2024-08-19 13:25:08,559 [Process: 0] Evaluating...
2024-08-19 13:25:08,561 [Process: 0] EPOCH 16:
2024-08-19 13:25:08,563 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:09,560 [Process: 0] Synchronize training processes
2024-08-19 13:25:09,560 [Process: 0] Evaluating...
2024-08-19 13:25:09,562 [Process: 0] EPOCH 17:
2024-08-19 13:25:09,564 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2932, 0.3124, 0.3073,  ..., 0.3337, 0.2996, 0.2899],
         [0.2168, 0.2075, 0.2064,  ..., 0.2023, 0.2117, 0.2259],
         [0.2168, 0.2075, 0.2064,  ..., 0.2023, 0.2117, 0.2259],
         [0.2732, 0.2727, 0.2798,  ..., 0.2617, 0.2769, 0.2583]],
        [[0.3269, 0.3336, 0.3464,  ..., 0.3853, 0.2778, 0.0666],
         [0.1970, 0.1961, 0.1971,  ..., 0.1807, 0.2149, 0.0666],
         [0.1970, 0.1887, 0.1868,  ..., 0.1769, 0.2149, 0.8002],
         [0.2790, 0.2816, 0.2697,  ..., 0.2571, 0.2925, 0.0666]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2704, 0.3062, 0.2604,  ..., 0.3020, 0.2916, 0.2640],
         [0.2189, 0.2125, 0.2350,  ..., 0.2149, 0.2141, 0.2334],
         [0.2189, 0.2125, 0.2350,  ..., 0.2149, 0.2141, 0.2334],
         [0.2919, 0.2688, 0.2696,  ..., 0.2681, 0.2802, 0.2692]],
        [[0.3378, 0.2528, 0.3779,  ..., 0.1240, 0.0504, 0.1462],
         [0.2007, 0.2136, 0.1921,  ..., 0.1240, 0.0504, 0.1462],
         [0.2007, 0.2494, 0.1823,  ..., 0.5882, 0.8489, 0.5615],
         [0.2608, 0.2842, 0.2477,  ..., 0.1639, 0.0504, 0.1462]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3028, 0.3146, 0.3513,  ..., 0.3014, 0.2778, 0.2534],
         [0.2047, 0.2101, 0.1960,  ..., 0.2132, 0.2275, 0.2316],
         [0.1939, 0.2101, 0.1844,  ..., 0.2132, 0.2275, 0.2316],
         [0.2986, 0.2652, 0.2682,  ..., 0.2722, 0.2672, 0.2833]],
        [[0.3078, 0.3851, 0.5414,  ..., 0.3895, 0.2635, 0.0677],
         [0.1987, 0.1867, 0.1543,  ..., 0.1865, 0.2083, 0.0677],
         [0.1987, 0.1796, 0.1223,  ..., 0.1707, 0.2215, 0.7968],
         [0.2949, 0.2485, 0.1820,  ..., 0.2534, 0.3067, 0.0677]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2683, 0.2418, 0.2411,  ..., 0.2848, 0.2578, 0.2630],
         [0.2214, 0.2411, 0.2411,  ..., 0.2162, 0.2345, 0.2220],
         [0.2214, 0.2411, 0.2411,  ..., 0.2162, 0.2345, 0.2220],
         [0.2890, 0.2759, 0.2767,  ..., 0.2827, 0.2733, 0.2930]],
        [[0.3785, 0.3541, 0.4267,  ..., 0.1665, 0.1114, 0.0434],
         [0.1904, 0.1972, 0.1857,  ..., 0.1665, 0.1114, 0.0434],
         [0.1672, 0.1630, 0.1666,  ..., 0.4165, 0.6659, 0.8699],
         [0.2639, 0.2856, 0.2210,  ..., 0.2506, 0.1114, 0.0434]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:25:10,534 [Process: 0] Synchronize training processes
2024-08-19 13:25:10,535 [Process: 0] Evaluating...
2024-08-19 13:25:10,537 [Process: 0] EPOCH 18:
2024-08-19 13:25:10,539 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:11,509 [Process: 0] Synchronize training processes
2024-08-19 13:25:11,510 [Process: 0] Evaluating...
2024-08-19 13:25:11,511 [Process: 0] EPOCH 19:
2024-08-19 13:25:11,513 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2603, 0.3084, 0.3980,  ..., 0.3435, 0.3091, 0.2367],
         [0.2291, 0.2232, 0.1936,  ..., 0.2141, 0.2056, 0.2367],
         [0.2291, 0.2232, 0.1713,  ..., 0.2141, 0.2056, 0.2367],
         [0.2814, 0.2451, 0.2371,  ..., 0.2284, 0.2796, 0.2900]],
        [[0.2886, 0.3889, 0.4464,  ..., 0.6129, 0.2182, 0.1046],
         [0.2000, 0.1783, 0.1774,  ..., 0.1269, 0.2182, 0.1046],
         [0.1914, 0.1601, 0.1545,  ..., 0.0893, 0.2539, 0.6666],
         [0.3200, 0.2727, 0.2217,  ..., 0.1709, 0.3098, 0.1243]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3254, 0.2371, 0.2393,  ..., 0.2386, 0.3477, 0.3088],
         [0.2008, 0.2371, 0.2393,  ..., 0.2386, 0.1966, 0.2089],
         [0.1952, 0.2371, 0.2393,  ..., 0.2386, 0.1966, 0.2082],
         [0.2787, 0.2887, 0.2820,  ..., 0.2843, 0.2590, 0.2741]],
        [[0.7394, 0.2221, 0.4352,  ..., 0.2250, 0.0951, 0.0670],
         [0.1043, 0.2022, 0.1842,  ..., 0.2089, 0.0951, 0.0670],
         [0.0617, 0.2469, 0.1459,  ..., 0.2581, 0.7146, 0.7990],
         [0.0946, 0.3288, 0.2347,  ..., 0.3079, 0.0951, 0.0670]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2824, 0.3052, 0.4846,  ..., 0.4629, 0.2431, 0.2373],
         [0.2269, 0.2085, 0.1646,  ..., 0.1708, 0.2431, 0.2373],
         [0.2269, 0.2085, 0.1592,  ..., 0.1613, 0.2431, 0.2373],
         [0.2638, 0.2779, 0.1915,  ..., 0.2050, 0.2708, 0.2880]],
        [[0.2147, 0.5434, 0.4315,  ..., 0.4157, 0.2214, 0.1143],
         [0.2147, 0.1484, 0.1820,  ..., 0.1774, 0.2214, 0.1143],
         [0.2358, 0.1113, 0.1526,  ..., 0.1352, 0.2214, 0.6470],
         [0.3348, 0.1969, 0.2339,  ..., 0.2717, 0.3358, 0.1244]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2465, 0.2402, 0.2324,  ..., 0.2351, 0.2322, 0.2233],
         [0.2465, 0.2402, 0.2324,  ..., 0.2351, 0.2322, 0.2233],
         [0.2465, 0.2402, 0.2500,  ..., 0.2351, 0.2358, 0.2472],
         [0.2605, 0.2795, 0.2852,  ..., 0.2946, 0.2999, 0.3062]],
        [[0.6248, 0.2248, 0.5465,  ..., 0.3794, 0.0849, 0.1573],
         [0.1275, 0.2165, 0.1411,  ..., 0.1939, 0.0849, 0.1573],
         [0.1064, 0.2291, 0.1066,  ..., 0.1857, 0.7452, 0.4533],
         [0.1414, 0.3297, 0.2057,  ..., 0.2410, 0.0849, 0.2321]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:25:12,486 [Process: 0] Synchronize training processes
2024-08-19 13:25:12,486 [Process: 0] Evaluating...
2024-08-19 13:25:12,488 [Process: 0] EPOCH 20:
2024-08-19 13:25:12,490 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:13,460 [Process: 0] Synchronize training processes
2024-08-19 13:25:13,460 [Process: 0] Evaluating...
2024-08-19 13:25:13,462 [Process: 0] EPOCH 21:
2024-08-19 13:25:13,464 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2413, 0.2334, 0.2598,  ..., 0.2476, 0.2632, 0.2379],
         [0.2413, 0.2334, 0.2234,  ..., 0.2227, 0.2343, 0.2379],
         [0.2413, 0.2334, 0.2188,  ..., 0.2189, 0.2343, 0.2379],
         [0.2762, 0.2999, 0.2980,  ..., 0.3109, 0.2682, 0.2863]],
        [[0.2924, 0.6176, 0.5289,  ..., 0.4831, 0.4058, 0.0837],
         [0.2074, 0.1313, 0.1436,  ..., 0.1672, 0.1812, 0.0837],
         [0.1744, 0.0830, 0.1062,  ..., 0.1524, 0.1777, 0.7488],
         [0.3258, 0.1681, 0.2213,  ..., 0.1972, 0.2352, 0.0837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2633, 0.2276, 0.2325,  ..., 0.2358, 0.2993, 0.2729],
         [0.2198, 0.2276, 0.2325,  ..., 0.2358, 0.2170, 0.2221],
         [0.2198, 0.2447, 0.2325,  ..., 0.2358, 0.2170, 0.2221],
         [0.2971, 0.3001, 0.3025,  ..., 0.2927, 0.2667, 0.2828]],
        [[0.9666, 0.1884, 0.2130,  ..., 0.2466, 0.0824, 0.1037],
         [0.0151, 0.1884, 0.2047,  ..., 0.2093, 0.0824, 0.1037],
         [0.0092, 0.3078, 0.2220,  ..., 0.1985, 0.7528, 0.6414],
         [0.0092, 0.3153, 0.3603,  ..., 0.3457, 0.0824, 0.1511]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.2291, 0.2576,  ..., 0.2864, 0.2460, 0.2500],
         [0.2500, 0.2291, 0.2238,  ..., 0.2110, 0.2460, 0.2500],
         [0.2500, 0.2291, 0.2238,  ..., 0.2110, 0.2460, 0.2500],
         [0.2500, 0.3126, 0.2949,  ..., 0.2917, 0.2620, 0.2500]],
        [[0.4825, 0.6461, 0.5114,  ..., 0.7398, 0.2007, 0.0979],
         [0.1660, 0.1135, 0.1542,  ..., 0.0935, 0.2201, 0.0979],
         [0.1228, 0.0804, 0.1217,  ..., 0.0546, 0.1995, 0.6948],
         [0.2288, 0.1600, 0.2127,  ..., 0.1121, 0.3797, 0.1093]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3834, 0.2500, 0.2500,  ..., 0.2367, 0.6225, 0.3981],
         [0.2055, 0.2500, 0.2500,  ..., 0.2367, 0.1263, 0.1804],
         [0.2055, 0.2500, 0.2500,  ..., 0.2367, 0.1256, 0.1804],
         [0.2055, 0.2500, 0.2500,  ..., 0.2898, 0.1256, 0.2410]],
        [[0.6813, 0.2213, 0.1978,  ..., 0.2096, 0.1170, 0.1550],
         [0.1138, 0.1925, 0.1978,  ..., 0.1931, 0.1170, 0.1550],
         [0.0925, 0.1814, 0.2185,  ..., 0.2053, 0.5963, 0.4134],
         [0.1123, 0.4048, 0.3860,  ..., 0.3920, 0.1697, 0.2766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:25:14,436 [Process: 0] Synchronize training processes
2024-08-19 13:25:14,436 [Process: 0] Evaluating...
2024-08-19 13:25:15,387 [Process: 0] EPOCH 22:
2024-08-19 13:25:15,390 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2543, 0.2409, 0.5971,  ..., 0.5490, 0.2421, 0.2493],
         [0.2384, 0.2409, 0.1325,  ..., 0.1465, 0.2421, 0.2493],
         [0.2384, 0.2409, 0.1243,  ..., 0.1287, 0.2421, 0.2493],
         [0.2690, 0.2774, 0.1461,  ..., 0.1758, 0.2736, 0.2520]],
        [[0.2330, 0.6173, 0.7495,  ..., 0.4880, 0.2964, 0.0919],
         [0.1934, 0.1360, 0.0915,  ..., 0.1607, 0.2134, 0.0919],
         [0.1596, 0.0975, 0.0722,  ..., 0.1244, 0.1815, 0.7243],
         [0.4140, 0.1492, 0.0867,  ..., 0.2269, 0.3087, 0.0919]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2465, 0.2500, 0.2144,  ..., 0.2500, 0.2417, 0.2324],
         [0.2290, 0.2500, 0.2144,  ..., 0.2500, 0.2417, 0.2083],
         [0.2290, 0.2500, 0.2178,  ..., 0.2500, 0.2417, 0.2090],
         [0.2955, 0.2500, 0.3535,  ..., 0.2500, 0.2748, 0.3503]],
        [[0.4042, 0.2032, 0.2786,  ..., 0.2364, 0.0670, 0.1391],
         [0.1811, 0.2015, 0.2046,  ..., 0.2179, 0.0670, 0.1391],
         [0.1724, 0.2066, 0.1766,  ..., 0.2060, 0.7989, 0.5302],
         [0.2423, 0.3887, 0.3402,  ..., 0.3397, 0.0670, 0.1916]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4290, 0.2213, 0.3292,  ..., 0.4496, 0.2307, 0.2023],
         [0.1901, 0.2234, 0.1954,  ..., 0.1562, 0.2307, 0.2023],
         [0.1901, 0.2213, 0.1954,  ..., 0.1324, 0.2307, 0.2023],
         [0.1907, 0.3340, 0.2799,  ..., 0.2618, 0.3078, 0.3931]],
        [[0.1966, 0.5377, 0.6876,  ..., 0.4202, 0.6252, 0.0708],
         [0.2004, 0.1398, 0.1058,  ..., 0.1803, 0.1374, 0.0708],
         [0.1966, 0.1124, 0.0887,  ..., 0.1506, 0.1186, 0.7875],
         [0.4064, 0.2101, 0.1178,  ..., 0.2489, 0.1188, 0.0708]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:25:16,363 [Process: 0] Synchronize training processes
2024-08-19 13:25:16,363 [Process: 0] Evaluating...
2024-08-19 13:25:16,365 [Process: 0] EPOCH 23:
2024-08-19 13:25:16,367 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:17,337 [Process: 0] Synchronize training processes
2024-08-19 13:25:17,337 [Process: 0] Evaluating...
2024-08-19 13:25:17,339 [Process: 0] EPOCH 24:
2024-08-19 13:25:17,341 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.2336, 0.2470,  ..., 0.2331, 0.2373, 0.2367],
         [0.2500, 0.2336, 0.2470,  ..., 0.2331, 0.2373, 0.2367],
         [0.2500, 0.2336, 0.2470,  ..., 0.2331, 0.2421, 0.2367],
         [0.2500, 0.2991, 0.2590,  ..., 0.3007, 0.2834, 0.2900]],
        [[0.7272, 0.1506, 0.1867,  ..., 0.1854, 0.1039, 0.0520],
         [0.0909, 0.1704, 0.1623,  ..., 0.2007, 0.1039, 0.0520],
         [0.0909, 0.1856, 0.1926,  ..., 0.1854, 0.6884, 0.8439],
         [0.0909, 0.4933, 0.4585,  ..., 0.4284, 0.1039, 0.0520]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2397, 0.2327, 0.4329,  ..., 0.6079, 0.2247, 0.2298],
         [0.2397, 0.2032, 0.1890,  ..., 0.1332, 0.2247, 0.2298],
         [0.2397, 0.2032, 0.1890,  ..., 0.1295, 0.2247, 0.2298],
         [0.2809, 0.3610, 0.1890,  ..., 0.1295, 0.3259, 0.3106]],
        [[0.1551, 0.1435, 0.6126,  ..., 0.2939, 0.1423, 0.0908],
         [0.1708, 0.1844, 0.1279,  ..., 0.1694, 0.1456, 0.0908],
         [0.1616, 0.1435, 0.1020,  ..., 0.1325, 0.2048, 0.7275],
         [0.5126, 0.5286, 0.1576,  ..., 0.4042, 0.5073, 0.0908]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2244, 0.2339, 0.2500,  ..., 0.2500, 0.2365, 0.2476],
         [0.2244, 0.2339, 0.2500,  ..., 0.2500, 0.2365, 0.2476],
         [0.2244, 0.2339, 0.2500,  ..., 0.2500, 0.2365, 0.2476],
         [0.3267, 0.2983, 0.2500,  ..., 0.2500, 0.2905, 0.2573]],
        [[0.8188, 0.1736, 0.2556,  ..., 0.1752, 0.0558, 0.1294],
         [0.0702, 0.1689, 0.1744,  ..., 0.1596, 0.0558, 0.1564],
         [0.0555, 0.1505, 0.1328,  ..., 0.1325, 0.8326, 0.2709],
         [0.0555, 0.5069, 0.4372,  ..., 0.5327, 0.0558, 0.4433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:25:18,316 [Process: 0] Synchronize training processes
2024-08-19 13:25:18,316 [Process: 0] Evaluating...
2024-08-19 13:25:18,318 [Process: 0] EPOCH 25:
2024-08-19 13:25:18,320 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:19,294 [Process: 0] Synchronize training processes
2024-08-19 13:25:19,295 [Process: 0] Evaluating...
2024-08-19 13:25:19,297 [Process: 0] EPOCH 26:
2024-08-19 13:25:19,298 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2525, 0.3239, 0.2656,  ..., 0.4080, 0.2266, 0.2428],
         [0.2492, 0.2099, 0.2448,  ..., 0.1953, 0.2266, 0.2428],
         [0.2492, 0.2099, 0.2448,  ..., 0.1875, 0.2266, 0.2428],
         [0.2492, 0.2563, 0.2448,  ..., 0.2091, 0.3202, 0.2715]],
        [[0.0823, 0.5099, 0.7205,  ..., 0.7734, 0.0868, 0.1147],
         [0.1152, 0.1634, 0.1116,  ..., 0.0833, 0.1053, 0.1147],
         [0.0786, 0.1634, 0.0840,  ..., 0.0717, 0.0942, 0.6558],
         [0.7239, 0.1634, 0.0840,  ..., 0.0717, 0.7137, 0.1147]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2265, 0.2456, 0.2432,  ..., 0.2403, 0.2211, 0.2500],
         [0.2265, 0.2456, 0.2432,  ..., 0.2403, 0.2211, 0.2500],
         [0.2265, 0.2456, 0.2432,  ..., 0.2403, 0.2211, 0.2500],
         [0.3205, 0.2631, 0.2703,  ..., 0.2790, 0.3367, 0.2500]],
        [[0.7076, 0.1301, 0.1978,  ..., 0.1159, 0.0474, 0.1295],
         [0.0975, 0.1471, 0.1741,  ..., 0.1319, 0.0474, 0.1384],
         [0.0975, 0.1126, 0.1529,  ..., 0.1159, 0.8579, 0.3187],
         [0.0975, 0.6101, 0.4752,  ..., 0.6362, 0.0474, 0.4134]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2647, 0.2359, 0.4513,  ..., 0.5549, 0.2500, 0.2300],
         [0.2095, 0.2337, 0.1829,  ..., 0.1551, 0.2500, 0.2300],
         [0.2064, 0.2337, 0.1829,  ..., 0.1450, 0.2500, 0.2300],
         [0.3195, 0.2967, 0.1829,  ..., 0.1450, 0.2500, 0.3100]],
        [[0.3914, 0.9318, 0.8898,  ..., 0.6912, 0.1195, 0.0586],
         [0.1600, 0.0335, 0.0445,  ..., 0.1180, 0.1387, 0.0586],
         [0.0991, 0.0174, 0.0301,  ..., 0.0949, 0.0977, 0.8242],
         [0.3495, 0.0174, 0.0356,  ..., 0.0959, 0.6441, 0.0586]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2163, 0.2500, 0.2307,  ..., 0.2454, 0.2390, 0.1969],
         [0.2130, 0.2500, 0.2307,  ..., 0.2454, 0.2390, 0.1969],
         [0.2640, 0.2500, 0.2307,  ..., 0.2454, 0.2390, 0.2284],
         [0.3067, 0.2500, 0.3078,  ..., 0.2638, 0.2831, 0.3778]],
        [[0.9761, 0.2111, 0.2740,  ..., 0.2057, 0.0558, 0.0333],
         [0.0089, 0.1462, 0.1438,  ..., 0.1334, 0.0558, 0.0333],
         [0.0075, 0.1563, 0.1199,  ..., 0.1124, 0.8326, 0.9002],
         [0.0075, 0.4865, 0.4624,  ..., 0.5485, 0.0558, 0.0333]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2310, 0.2500, 0.4074,  ..., 0.6376, 0.2434, 0.2223],
         [0.2310, 0.2500, 0.1704,  ..., 0.1208, 0.2434, 0.2223],
         [0.2310, 0.2500, 0.1704,  ..., 0.1208, 0.2434, 0.2223],
         [0.3069, 0.2500, 0.2519,  ..., 0.1208, 0.2699, 0.3331]],
        [[0.0736, 0.6160, 0.5229,  ..., 0.2904, 0.1029, 0.1010],
         [0.0893, 0.1064, 0.0928,  ..., 0.1425, 0.1211, 0.1010],
         [0.0569, 0.0647, 0.0690,  ..., 0.1015, 0.1927, 0.6969],
         [0.7802, 0.2130, 0.3153,  ..., 0.4656, 0.5834, 0.1010]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:25:20,267 [Process: 0] Synchronize training processes
2024-08-19 13:25:20,267 [Process: 0] Evaluating...
2024-08-19 13:25:20,269 [Process: 0] EPOCH 27:
2024-08-19 13:25:20,270 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:21,241 [Process: 0] Synchronize training processes
2024-08-19 13:25:21,241 [Process: 0] Evaluating...
2024-08-19 13:25:21,243 [Process: 0] EPOCH 28:
2024-08-19 13:25:21,244 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2784, 0.2500, 0.2801,  ..., 0.2513, 0.2361, 0.2718],
         [0.2174, 0.2500, 0.2400,  ..., 0.2496, 0.2361, 0.2246],
         [0.2116, 0.2500, 0.2400,  ..., 0.2496, 0.2361, 0.2246],
         [0.2926, 0.2500, 0.2400,  ..., 0.2496, 0.2917, 0.2791]],
        [[0.9870, 0.1534, 0.1162,  ..., 0.1207, 0.0398, 0.0716],
         [0.0043, 0.1443, 0.1335,  ..., 0.1496, 0.0398, 0.0716],
         [0.0043, 0.1148, 0.1451,  ..., 0.1207, 0.8806, 0.7852],
         [0.0043, 0.5874, 0.6051,  ..., 0.6090, 0.0398, 0.0716]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2548, 0.2500, 0.2208,  ..., 0.6464, 0.2500, 0.2500],
         [0.2484, 0.2500, 0.2208,  ..., 0.1292, 0.2500, 0.2500],
         [0.2484, 0.2500, 0.2208,  ..., 0.1122, 0.2500, 0.2500],
         [0.2484, 0.2500, 0.3377,  ..., 0.1122, 0.2500, 0.2500]],
        [[0.0499, 0.6544, 0.7226,  ..., 0.7045, 0.1020, 0.0525],
         [0.0814, 0.0950, 0.1132,  ..., 0.1202, 0.1545, 0.0525],
         [0.0490, 0.0950, 0.0821,  ..., 0.0817, 0.0980, 0.8425],
         [0.8197, 0.1556, 0.0821,  ..., 0.0937, 0.6455, 0.0525]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1700, 0.2500, 0.2355,  ..., 0.2500, 0.1680, 0.2002],
         [0.1804, 0.2500, 0.2355,  ..., 0.2500, 0.1875, 0.2066],
         [0.1722, 0.2500, 0.2355,  ..., 0.2500, 0.1680, 0.2394],
         [0.4774, 0.2500, 0.2936,  ..., 0.2500, 0.4765, 0.3538]],
        [[0.7941, 0.1021, 0.0982,  ..., 0.1121, 0.0340, 0.0653],
         [0.0686, 0.1542, 0.1279,  ..., 0.1212, 0.0340, 0.0653],
         [0.0686, 0.1021, 0.0982,  ..., 0.1194, 0.8981, 0.8042],
         [0.0686, 0.6416, 0.6757,  ..., 0.6474, 0.0340, 0.0653]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.2273, 0.5428,  ..., 0.8020, 0.2500, 0.2500],
         [0.2500, 0.2456, 0.1645,  ..., 0.0828, 0.2500, 0.2500],
         [0.2500, 0.2273, 0.1227,  ..., 0.0576, 0.2500, 0.2500],
         [0.2500, 0.2998, 0.1700,  ..., 0.0576, 0.2500, 0.2500]],
        [[0.0559, 0.5912, 0.6255,  ..., 0.0785, 0.2778, 0.0866],
         [0.0809, 0.1394, 0.1528,  ..., 0.1205, 0.1938, 0.0866],
         [0.0559, 0.1112, 0.1077,  ..., 0.0785, 0.1286, 0.7403],
         [0.8074, 0.1583, 0.1139,  ..., 0.7225, 0.3998, 0.0866]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:25:22,217 [Process: 0] Synchronize training processes
2024-08-19 13:25:22,217 [Process: 0] Evaluating...
2024-08-19 13:25:22,219 [Process: 0] EPOCH 29:
2024-08-19 13:25:22,221 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:23,195 [Process: 0] Synchronize training processes
2024-08-19 13:25:23,195 [Process: 0] Evaluating...
2024-08-19 13:25:23,197 [Process: 0] EPOCH 30:
2024-08-19 13:25:23,199 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1659, 0.2500, 0.2500,  ..., 0.2500, 0.1969, 0.1771],
         [0.1686, 0.2500, 0.2500,  ..., 0.2500, 0.2033, 0.1802],
         [0.1894, 0.2500, 0.2500,  ..., 0.2500, 0.1969, 0.1771],
         [0.4761, 0.2500, 0.2500,  ..., 0.2500, 0.4029, 0.4655]],
        [[0.9078, 0.1179, 0.1033,  ..., 0.0864, 0.0457, 0.0480],
         [0.0307, 0.1474, 0.1206,  ..., 0.1053, 0.0457, 0.0480],
         [0.0307, 0.1179, 0.1416,  ..., 0.0864, 0.8628, 0.8560],
         [0.0307, 0.6167, 0.6344,  ..., 0.7219, 0.0457, 0.0480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2630, 0.2431, 0.7681,  ..., 0.8855, 0.2500, 0.2500],
         [0.2437, 0.2431, 0.0899,  ..., 0.0382, 0.2500, 0.2500],
         [0.2496, 0.2431, 0.0710,  ..., 0.0382, 0.2500, 0.2500],
         [0.2437, 0.2707, 0.0710,  ..., 0.0382, 0.2500, 0.2500]],
        [[0.0455, 0.5044, 0.8562,  ..., 0.2241, 0.1180, 0.0855],
         [0.0612, 0.1443, 0.0479,  ..., 0.1531, 0.1500, 0.0855],
         [0.0455, 0.1224, 0.0479,  ..., 0.1145, 0.1152, 0.7293],
         [0.8479, 0.2289, 0.0479,  ..., 0.5083, 0.6168, 0.0998]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2110, 0.2500, 0.2440,  ..., 0.2861, 0.2166, 0.2132],
         [0.2110, 0.2500, 0.2440,  ..., 0.2315, 0.2169, 0.2132],
         [0.2110, 0.2500, 0.2440,  ..., 0.2509, 0.2509, 0.2132],
         [0.3671, 0.2500, 0.2680,  ..., 0.2315, 0.3156, 0.3604]],
        [[0.9613, 0.1126, 0.1020,  ..., 0.1241, 0.0417, 0.0383],
         [0.0129, 0.1157, 0.1197,  ..., 0.1241, 0.0417, 0.0383],
         [0.0129, 0.1126, 0.1147,  ..., 0.1241, 0.8748, 0.8850],
         [0.0129, 0.6591, 0.6636,  ..., 0.6278, 0.0417, 0.0383]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.2500, 0.7163,  ..., 0.8581, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.1042,  ..., 0.0473, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.0897,  ..., 0.0473, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.0897,  ..., 0.0473, 0.2500, 0.2500]],
        [[0.0865, 0.1394, 0.8593,  ..., 0.8071, 0.0962, 0.0773],
         [0.1101, 0.1687, 0.0521,  ..., 0.0788, 0.1441, 0.0773],
         [0.0865, 0.1394, 0.0443,  ..., 0.0571, 0.0962, 0.7680],
         [0.7169, 0.5525, 0.0443,  ..., 0.0571, 0.6636, 0.0773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:24,172 [Process: 0] Synchronize training processes
2024-08-19 13:25:24,172 [Process: 0] Evaluating...
2024-08-19 13:25:24,174 [Process: 0] EPOCH 31:
2024-08-19 13:25:24,175 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:25,145 [Process: 0] Synchronize training processes
2024-08-19 13:25:25,145 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2101, 0.2366, 0.2292,  ..., 0.2500, 0.1840, 0.2351],
         [0.2101, 0.2366, 0.2292,  ..., 0.2500, 0.1932, 0.2351],
         [0.2101, 0.2366, 0.2738,  ..., 0.2500, 0.1840, 0.2351],
         [0.3697, 0.2901, 0.2679,  ..., 0.2500, 0.4389, 0.2946]],
        [[0.9190, 0.1227, 0.0774,  ..., 0.0697, 0.0159, 0.0156],
         [0.0270, 0.1227, 0.0922,  ..., 0.0709, 0.0111, 0.0156],
         [0.0270, 0.1599, 0.0784,  ..., 0.0697, 0.9619, 0.9531],
         [0.0270, 0.5947, 0.7520,  ..., 0.7897, 0.0111, 0.0156]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.6768, 0.2500,  ..., 0.7488, 0.2393, 0.2134],
         [0.2500, 0.1077, 0.2500,  ..., 0.0837, 0.2393, 0.2134],
         [0.2500, 0.1077, 0.2500,  ..., 0.0837, 0.2393, 0.2726],
         [0.2500, 0.1077, 0.2500,  ..., 0.0837, 0.2821, 0.3007]],
        [[0.0356, 0.5731, 0.5677,  ..., 0.7231, 0.4351, 0.0815],
         [0.0417, 0.1423, 0.1441,  ..., 0.0923, 0.1603, 0.0815],
         [0.0356, 0.1423, 0.1441,  ..., 0.0923, 0.1528, 0.7556],
         [0.8871, 0.1423, 0.1441,  ..., 0.0923, 0.2517, 0.0815]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2378, 0.2241, 0.2500,  ..., 0.2500, 0.2289, 0.2209],
         [0.2378, 0.2241, 0.2500,  ..., 0.2500, 0.2153, 0.2209],
         [0.2378, 0.2241, 0.2500,  ..., 0.2500, 0.2153, 0.2209],
         [0.2866, 0.3278, 0.2500,  ..., 0.2500, 0.3404, 0.3373]],
        [[0.7937, 0.0520, 0.1027,  ..., 0.0776, 0.0155, 0.0439],
         [0.0688, 0.0520, 0.1027,  ..., 0.0776, 0.0155, 0.0439],
         [0.0688, 0.0520, 0.1027,  ..., 0.0776, 0.9534, 0.8684],
         [0.0688, 0.8439, 0.6920,  ..., 0.7672, 0.0155, 0.0439]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.2481, 0.7424,  ..., 0.7884, 0.2500, 0.2500],
         [0.2500, 0.2481, 0.0971,  ..., 0.0705, 0.2500, 0.2500],
         [0.2500, 0.2481, 0.0802,  ..., 0.0705, 0.2500, 0.2500],
         [0.2500, 0.2558, 0.0802,  ..., 0.0705, 0.2500, 0.2500]],
        [[0.0634, 0.5950, 0.8287,  ..., 0.4791, 0.6037, 0.0644],
         [0.0675, 0.1301, 0.0596,  ..., 0.1736, 0.1321, 0.0644],
         [0.0634, 0.1227, 0.0559,  ..., 0.1736, 0.1321, 0.7955],
         [0.8057, 0.1522, 0.0559,  ..., 0.1736, 0.1321, 0.0756]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:25:26,100 [Process: 0] EPOCH 32:
2024-08-19 13:25:26,103 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:27,075 [Process: 0] Synchronize training processes
2024-08-19 13:25:27,075 [Process: 0] Evaluating...
2024-08-19 13:25:27,077 [Process: 0] EPOCH 33:
2024-08-19 13:25:27,079 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2364, 0.2344, 0.2337,  ..., 0.2471, 0.2209, 0.2021],
         [0.2364, 0.2344, 0.2337,  ..., 0.2471, 0.2209, 0.2021],
         [0.2364, 0.2967, 0.2990,  ..., 0.2587, 0.2335, 0.2021],
         [0.2907, 0.2344, 0.2337,  ..., 0.2471, 0.3247, 0.3937]],
        [[0.8917, 0.1058, 0.1036,  ..., 0.0971, 0.0227, 0.0379],
         [0.0361, 0.1058, 0.1036,  ..., 0.1005, 0.0227, 0.0379],
         [0.0361, 0.1058, 0.1036,  ..., 0.0971, 0.9319, 0.8862],
         [0.0361, 0.6827, 0.6893,  ..., 0.7054, 0.0227, 0.0379]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.2500, 0.8581,  ..., 0.6086, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.0483,  ..., 0.1305, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.0468,  ..., 0.1305, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.0468,  ..., 0.1305, 0.2500, 0.2500]],
        [[0.0549, 0.0929, 0.8639,  ..., 0.1404, 0.2405, 0.0791],
         [0.0625, 0.0929, 0.0503,  ..., 0.1168, 0.1559, 0.0791],
         [0.0549, 0.0929, 0.0429,  ..., 0.1132, 0.1509, 0.7628],
         [0.8276, 0.7212, 0.0429,  ..., 0.6296, 0.4527, 0.0791]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:28,051 [Process: 0] Synchronize training processes
2024-08-19 13:25:28,052 [Process: 0] Evaluating...
2024-08-19 13:25:28,053 [Process: 0] EPOCH 34:
2024-08-19 13:25:28,055 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:29,026 [Process: 0] Synchronize training processes
2024-08-19 13:25:29,027 [Process: 0] Evaluating...
2024-08-19 13:25:29,028 [Process: 0] EPOCH 35:
2024-08-19 13:25:29,031 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1651, 0.2215, 0.2443,  ..., 0.2402, 0.1845, 0.1963],
         [0.1651, 0.2215, 0.2136,  ..., 0.2402, 0.1845, 0.1963],
         [0.1651, 0.2249, 0.3285,  ..., 0.2402, 0.1845, 0.1963],
         [0.5047, 0.3322, 0.2136,  ..., 0.2793, 0.4466, 0.4110]],
        [[0.8981, 0.1390, 0.1065,  ..., 0.5503, 0.0480, 0.1741],
         [0.0340, 0.1390, 0.1065,  ..., 0.1499, 0.0480, 0.1382],
         [0.0340, 0.1390, 0.1065,  ..., 0.1499, 0.8559, 0.5361],
         [0.0340, 0.5831, 0.6806,  ..., 0.1499, 0.0480, 0.1515]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2495, 0.2115, 0.5702,  ..., 0.8670, 0.2500, 0.2466],
         [0.2495, 0.2115, 0.1448,  ..., 0.0443, 0.2500, 0.2466],
         [0.2495, 0.2115, 0.1407,  ..., 0.0443, 0.2500, 0.2602],
         [0.2516, 0.3655, 0.1443,  ..., 0.0443, 0.2500, 0.2466]],
        [[0.0640, 0.5184, 0.8573,  ..., 0.9176, 0.5016, 0.0343],
         [0.0640, 0.1270, 0.0476,  ..., 0.0307, 0.1061, 0.0343],
         [0.0640, 0.1120, 0.0476,  ..., 0.0258, 0.1009, 0.8970],
         [0.8081, 0.2425, 0.0476,  ..., 0.0258, 0.2914, 0.0343]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2134, 0.2398, 0.2362,  ..., 0.2685, 0.2356, 0.2122],
         [0.1836, 0.2398, 0.2362,  ..., 0.2393, 0.2356, 0.1958],
         [0.2421, 0.2807, 0.2913,  ..., 0.2529, 0.2356, 0.2105],
         [0.3609, 0.2398, 0.2362,  ..., 0.2393, 0.2931, 0.3815]],
        [[0.9743, 0.1131, 0.1346,  ..., 0.1424, 0.0085, 0.0819],
         [0.0086, 0.1131, 0.1346,  ..., 0.1424, 0.0085, 0.0819],
         [0.0086, 0.1131, 0.1346,  ..., 0.1424, 0.9745, 0.0819],
         [0.0086, 0.6608, 0.5962,  ..., 0.5728, 0.0085, 0.7543]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.3518, 0.5865,  ..., 0.8922, 0.2500, 0.2252],
         [0.2500, 0.1830, 0.1297,  ..., 0.0359, 0.2500, 0.2252],
         [0.2500, 0.1830, 0.1297,  ..., 0.0359, 0.2500, 0.3245],
         [0.2500, 0.2822, 0.1541,  ..., 0.0359, 0.2500, 0.2252]],
        [[0.5594, 0.1399, 0.8785,  ..., 0.8210, 0.2968, 0.0736],
         [0.1148, 0.1386, 0.0447,  ..., 0.0597, 0.1364, 0.0736],
         [0.1148, 0.1368, 0.0384,  ..., 0.0597, 0.1185, 0.7665],
         [0.2110, 0.5846, 0.0384,  ..., 0.0597, 0.4484, 0.0864]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:30,013 [Process: 0] Synchronize training processes
2024-08-19 13:25:30,014 [Process: 0] Evaluating...
2024-08-19 13:25:30,015 [Process: 0] EPOCH 36:
2024-08-19 13:25:30,017 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:30,989 [Process: 0] Synchronize training processes
2024-08-19 13:25:30,989 [Process: 0] Evaluating...
2024-08-19 13:25:30,991 [Process: 0] EPOCH 37:
2024-08-19 13:25:30,993 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2048, 0.2003, 0.2110,  ..., 0.2402, 0.2207, 0.1644],
         [0.2048, 0.1911, 0.2110,  ..., 0.2110, 0.2084, 0.1644],
         [0.2048, 0.3397, 0.3669,  ..., 0.3379, 0.2084, 0.1644],
         [0.3855, 0.2689, 0.2110,  ..., 0.2110, 0.3626, 0.5068]],
        [[0.9836, 0.1603, 0.1156,  ..., 0.1036, 0.0182, 0.1516],
         [0.0055, 0.1603, 0.1156,  ..., 0.1036, 0.0182, 0.1516],
         [0.0055, 0.1603, 0.1156,  ..., 0.1036, 0.9453, 0.1516],
         [0.0055, 0.5190, 0.6533,  ..., 0.6892, 0.0182, 0.5452]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2163, 0.5828, 0.8553,  ..., 0.8924, 0.2066, 0.2143],
         [0.2163, 0.1391, 0.0485,  ..., 0.0359, 0.2066, 0.2114],
         [0.3510, 0.1391, 0.0481,  ..., 0.0359, 0.3801, 0.3630],
         [0.2163, 0.1391, 0.0481,  ..., 0.0359, 0.2066, 0.2114]],
        [[0.1006, 0.2121, 0.7763,  ..., 0.5201, 0.0900, 0.0246],
         [0.1006, 0.1631, 0.0746,  ..., 0.1406, 0.0873, 0.0246],
         [0.1006, 0.1467, 0.0746,  ..., 0.1343, 0.0873, 0.9261],
         [0.6982, 0.4781, 0.0746,  ..., 0.2050, 0.7354, 0.0246]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2023, 0.2054, 0.1275,  ..., 0.1855, 0.1998, 0.1779],
         [0.1920, 0.2054, 0.1275,  ..., 0.1855, 0.1987, 0.1779],
         [0.1920, 0.2879, 0.6174,  ..., 0.4435, 0.2450, 0.1789],
         [0.4136, 0.3012, 0.1275,  ..., 0.1855, 0.3565, 0.4654]],
        [[0.9895, 0.4378, 0.1925,  ..., 0.1207, 0.0446, 0.0852],
         [0.0039, 0.1571, 0.1925,  ..., 0.1207, 0.0446, 0.0852],
         [0.0033, 0.1571, 0.2292,  ..., 0.1207, 0.8661, 0.7407],
         [0.0033, 0.2479, 0.3859,  ..., 0.6378, 0.0446, 0.0889]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1925, 0.5250, 0.8579,  ..., 0.8297, 0.1786, 0.1793],
         [0.1925, 0.1531, 0.0474,  ..., 0.0568, 0.1786, 0.1793],
         [0.4225, 0.1531, 0.0474,  ..., 0.0568, 0.4641, 0.4622],
         [0.1925, 0.1688, 0.0474,  ..., 0.0568, 0.1786, 0.1793]],
        [[0.0359, 0.3509, 0.9558,  ..., 0.7810, 0.0355, 0.0612],
         [0.0359, 0.1312, 0.0161,  ..., 0.0817, 0.0355, 0.0612],
         [0.0359, 0.1293, 0.0141,  ..., 0.0687, 0.0355, 0.8165],
         [0.8924, 0.3886, 0.0141,  ..., 0.0687, 0.8934, 0.0612]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:32,029 [Process: 0] Synchronize training processes
2024-08-19 13:25:32,029 [Process: 0] Evaluating...
2024-08-19 13:25:32,031 [Process: 0] EPOCH 38:
2024-08-19 13:25:32,032 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:33,069 [Process: 0] Synchronize training processes
2024-08-19 13:25:33,069 [Process: 0] Evaluating...
2024-08-19 13:25:33,071 [Process: 0] EPOCH 39:
2024-08-19 13:25:33,072 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1884, 0.1945, 0.1407,  ..., 0.1753, 0.2169, 0.1557],
         [0.1884, 0.1945, 0.1407,  ..., 0.1753, 0.2169, 0.1557],
         [0.2935, 0.3213, 0.5778,  ..., 0.4741, 0.2666, 0.1557],
         [0.3298, 0.2896, 0.1407,  ..., 0.1753, 0.2996, 0.5330]],
        [[0.9337, 0.1593, 0.1216,  ..., 0.1083, 0.0347, 0.0518],
         [0.0221, 0.1593, 0.1216,  ..., 0.1128, 0.0347, 0.0518],
         [0.0221, 0.1593, 0.1216,  ..., 0.1083, 0.8959, 0.8447],
         [0.0221, 0.5221, 0.6351,  ..., 0.6707, 0.0347, 0.0518]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1686, 0.2163, 0.6664,  ..., 0.8142, 0.1736, 0.1564],
         [0.1686, 0.2010, 0.1112,  ..., 0.0619, 0.1736, 0.1564],
         [0.4943, 0.2800, 0.1112,  ..., 0.0619, 0.4792, 0.5307],
         [0.1686, 0.3027, 0.1112,  ..., 0.0619, 0.1736, 0.1564]],
        [[0.0465, 0.1017, 0.9407,  ..., 0.5833, 0.0543, 0.0866],
         [0.0465, 0.1046, 0.0228,  ..., 0.1133, 0.0543, 0.0866],
         [0.0465, 0.1017, 0.0182,  ..., 0.1133, 0.0543, 0.7403],
         [0.8605, 0.6920, 0.0182,  ..., 0.1900, 0.8370, 0.0866]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2000, 0.1775, 0.1644,  ..., 0.1802, 0.2205, 0.1814],
         [0.1926, 0.1775, 0.1644,  ..., 0.1781, 0.1949, 0.1814],
         [0.3086, 0.3209, 0.5068,  ..., 0.4636, 0.2799, 0.2412],
         [0.2988, 0.3241, 0.1644,  ..., 0.1781, 0.3047, 0.3961]],
        [[0.9926, 0.1073, 0.1315,  ..., 0.0726, 0.0792, 0.0595],
         [0.0025, 0.1073, 0.1331,  ..., 0.0726, 0.0792, 0.0595],
         [0.0025, 0.1073, 0.1315,  ..., 0.0726, 0.7623, 0.8216],
         [0.0025, 0.6782, 0.6040,  ..., 0.7821, 0.0792, 0.0595]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1497, 0.2354, 0.7354,  ..., 0.8218, 0.1470, 0.1902],
         [0.1497, 0.2188, 0.0886,  ..., 0.0594, 0.1470, 0.1902],
         [0.5509, 0.1888, 0.0880,  ..., 0.0594, 0.5589, 0.4295],
         [0.1497, 0.3570, 0.0880,  ..., 0.0594, 0.1470, 0.1902]],
        [[0.0549, 0.0857, 0.8201,  ..., 0.7857, 0.0765, 0.0516],
         [0.0549, 0.0857, 0.0584,  ..., 0.0689, 0.0890, 0.0516],
         [0.0549, 0.0857, 0.0584,  ..., 0.0689, 0.0765, 0.8451],
         [0.8354, 0.7428, 0.0630,  ..., 0.0765, 0.7580, 0.0516]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:34,146 [Process: 0] Synchronize training processes
2024-08-19 13:25:34,146 [Process: 0] Evaluating...
2024-08-19 13:25:34,148 [Process: 0] EPOCH 40:
2024-08-19 13:25:34,150 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:35,187 [Process: 0] Synchronize training processes
2024-08-19 13:25:35,187 [Process: 0] Evaluating...
2024-08-19 13:25:35,189 [Process: 0] EPOCH 41:
2024-08-19 13:25:35,190 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1413, 0.1298, 0.1932,  ..., 0.1507, 0.1908, 0.1896],
         [0.1413, 0.1298, 0.1918,  ..., 0.1507, 0.1908, 0.1896],
         [0.1413, 0.1298, 0.3023,  ..., 0.1507, 0.2655, 0.2820],
         [0.5760, 0.6105, 0.3128,  ..., 0.5478, 0.3529, 0.3388]],
        [[0.9865, 0.2152, 0.2960,  ..., 0.1911, 0.0342, 0.0757],
         [0.0045, 0.1839, 0.1744,  ..., 0.1911, 0.0342, 0.0757],
         [0.0045, 0.1769, 0.1670,  ..., 0.1911, 0.8975, 0.7728],
         [0.0045, 0.4240, 0.3627,  ..., 0.4268, 0.0342, 0.0757]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1636, 0.2388, 0.7151,  ..., 0.8139, 0.1484, 0.1622],
         [0.1636, 0.1832, 0.0943,  ..., 0.0620, 0.1484, 0.1622],
         [0.5092, 0.1807, 0.0943,  ..., 0.0620, 0.5548, 0.5133],
         [0.1636, 0.3973, 0.0964,  ..., 0.0620, 0.1484, 0.1622]],
        [[0.0424, 0.4233, 0.9459,  ..., 0.8672, 0.2298, 0.0824],
         [0.0424, 0.1500, 0.0180,  ..., 0.0443, 0.1090, 0.0824],
         [0.0424, 0.1446, 0.0180,  ..., 0.0443, 0.1023, 0.7528],
         [0.8728, 0.2821, 0.0180,  ..., 0.0443, 0.5589, 0.0824]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1357, 0.1343, 0.2090,  ..., 0.2278, 0.1987, 0.1796],
         [0.1350, 0.1343, 0.1904,  ..., 0.1709, 0.1961, 0.1796],
         [0.1350, 0.1343, 0.2557,  ..., 0.2492, 0.2951, 0.2452],
         [0.5943, 0.5972, 0.3449,  ..., 0.3521, 0.3102, 0.3955]],
        [[0.9804, 0.3336, 0.1534,  ..., 0.1541, 0.0502, 0.1375],
         [0.0065, 0.1797, 0.1622,  ..., 0.1541, 0.0502, 0.1375],
         [0.0065, 0.1797, 0.1534,  ..., 0.1541, 0.8494, 0.5666],
         [0.0065, 0.3069, 0.5310,  ..., 0.5378, 0.0502, 0.1585]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1572, 0.2964, 0.9409,  ..., 0.7071, 0.1137, 0.1347],
         [0.1558, 0.1959, 0.0197,  ..., 0.0842, 0.1137, 0.1347],
         [0.5319, 0.1576, 0.0197,  ..., 0.0842, 0.6590, 0.5958],
         [0.1551, 0.3502, 0.0197,  ..., 0.1245, 0.1137, 0.1347]],
        [[0.1174, 0.0728, 0.8623,  ..., 0.7362, 0.0844, 0.0982],
         [0.1377, 0.0728, 0.0539,  ..., 0.0814, 0.0866, 0.0982],
         [0.1174, 0.0728, 0.0419,  ..., 0.0793, 0.0819, 0.7055],
         [0.6275, 0.7816, 0.0419,  ..., 0.1031, 0.7471, 0.0982]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:36,246 [Process: 0] Synchronize training processes
2024-08-19 13:25:36,246 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2444, 0.1667, 0.1947,  ..., 0.2342, 0.2621, 0.1707],
         [0.2015, 0.1667, 0.2121,  ..., 0.1673, 0.2018, 0.1707],
         [0.1887, 0.2101, 0.1947,  ..., 0.4311, 0.2116, 0.4426],
         [0.3654, 0.4565, 0.3985,  ..., 0.1673, 0.3245, 0.2161]],
        [[0.9962, 0.1338, 0.1136,  ..., 0.0711, 0.0929, 0.1173],
         [0.0013, 0.1346, 0.1237,  ..., 0.0786, 0.0929, 0.1173],
         [0.0013, 0.1338, 0.1136,  ..., 0.0711, 0.7214, 0.6455],
         [0.0013, 0.5979, 0.6491,  ..., 0.7792, 0.0929, 0.1200]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1312, 0.1642, 0.4380,  ..., 0.7776, 0.0958, 0.1246],
         [0.1312, 0.1642, 0.1828,  ..., 0.0741, 0.0958, 0.1246],
         [0.6064, 0.4422, 0.1495,  ..., 0.0741, 0.7126, 0.6262],
         [0.1312, 0.2293, 0.2297,  ..., 0.0741, 0.0958, 0.1246]],
        [[0.1444, 0.1148, 0.9263,  ..., 0.6782, 0.1831, 0.1029],
         [0.1444, 0.1305, 0.0246,  ..., 0.1269, 0.1333, 0.1029],
         [0.1569, 0.1148, 0.0246,  ..., 0.0975, 0.1051, 0.6913],
         [0.5544, 0.6399, 0.0246,  ..., 0.0975, 0.5786, 0.1029]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:37,239 [Process: 0] EPOCH 42:
2024-08-19 13:25:37,241 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:38,239 [Process: 0] Synchronize training processes
2024-08-19 13:25:38,239 [Process: 0] Evaluating...
2024-08-19 13:25:38,241 [Process: 0] EPOCH 43:
2024-08-19 13:25:38,243 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1922, 0.1429, 0.2496,  ..., 0.3630, 0.1566, 0.1557],
         [0.1922, 0.1429, 0.1788,  ..., 0.1955, 0.1566, 0.1557],
         [0.2444, 0.1724, 0.1788,  ..., 0.1955, 0.1982, 0.1557],
         [0.3711, 0.5417, 0.3927,  ..., 0.2460, 0.4885, 0.5329]],
        [[0.9944, 0.1443, 0.1381,  ..., 0.0948, 0.0322, 0.0410],
         [0.0019, 0.1443, 0.1381,  ..., 0.0948, 0.0322, 0.0410],
         [0.0019, 0.1443, 0.1381,  ..., 0.0948, 0.9035, 0.8770],
         [0.0019, 0.5670, 0.5858,  ..., 0.7157, 0.0322, 0.0410]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1692, 0.0856, 0.7655,  ..., 0.9002, 0.1328, 0.1336],
         [0.1692, 0.0869, 0.0782,  ..., 0.0333, 0.1328, 0.1336],
         [0.4923, 0.0856, 0.0782,  ..., 0.0333, 0.5793, 0.5992],
         [0.1692, 0.7419, 0.0782,  ..., 0.0333, 0.1552, 0.1336]],
        [[0.1604, 0.1066, 0.8339,  ..., 0.8449, 0.1472, 0.0704],
         [0.1735, 0.1184, 0.0554,  ..., 0.0517, 0.1089, 0.0704],
         [0.1932, 0.1066, 0.0554,  ..., 0.0517, 0.1005, 0.7887],
         [0.4729, 0.6683, 0.0554,  ..., 0.0517, 0.6434, 0.0704]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2592e-01, 1.1066e-01, 1.4590e-01,  ..., 6.0263e-01,
          8.7076e-02, 1.6789e-01],
         [1.2592e-01, 1.1395e-01, 1.5424e-01,  ..., 1.3246e-01,
          8.7076e-02, 1.5507e-01],
         [6.2223e-01, 1.1066e-01, 1.3842e-01,  ..., 1.3246e-01,
          7.3877e-01, 1.5507e-01],
         [1.2592e-01, 6.6473e-01, 5.6143e-01,  ..., 1.3246e-01,
          8.7076e-02, 5.2197e-01]],
        [[9.9910e-01, 1.4458e-01, 5.2987e-02,  ..., 1.0580e-01,
          2.0853e-02, 6.8158e-02],
         [3.0004e-04, 1.4167e-01, 5.2987e-02,  ..., 1.0580e-01,
          2.0853e-02, 6.8158e-02],
         [3.0004e-04, 1.4167e-01, 5.2987e-02,  ..., 1.0580e-01,
          9.3744e-01, 7.9553e-01],
         [3.0004e-04, 5.7207e-01, 8.4104e-01,  ..., 6.8259e-01,
          2.0853e-02, 6.8158e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0883, 0.3359, 0.6596,  ..., 0.9494, 0.1100, 0.0854],
         [0.0883, 0.2069, 0.1135,  ..., 0.0189, 0.1100, 0.0854],
         [0.7352, 0.1703, 0.1135,  ..., 0.0159, 0.6701, 0.7437],
         [0.0883, 0.2869, 0.1135,  ..., 0.0159, 0.1100, 0.0854]],
        [[0.1343, 0.0623, 0.9371,  ..., 0.7845, 0.0757, 0.0900],
         [0.1343, 0.0623, 0.0210,  ..., 0.0727, 0.0885, 0.0900],
         [0.5972, 0.0623, 0.0210,  ..., 0.0714, 0.0757, 0.7154],
         [0.1343, 0.8131, 0.0210,  ..., 0.0714, 0.7602, 0.1046]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:39,277 [Process: 0] Synchronize training processes
2024-08-19 13:25:39,278 [Process: 0] Evaluating...
2024-08-19 13:25:39,280 [Process: 0] EPOCH 44:
2024-08-19 13:25:39,281 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:40,317 [Process: 0] Synchronize training processes
2024-08-19 13:25:40,317 [Process: 0] Evaluating...
2024-08-19 13:25:40,319 [Process: 0] EPOCH 45:
2024-08-19 13:25:40,321 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2162, 0.1560, 0.0520,  ..., 0.5210, 0.1718, 0.1776],
         [0.1662, 0.1307, 0.0520,  ..., 0.1635, 0.1664, 0.1804],
         [0.4514, 0.1307, 0.0520,  ..., 0.1660, 0.4954, 0.1776],
         [0.1662, 0.5826, 0.8441,  ..., 0.1495, 0.1664, 0.4644]],
        [[0.9905, 0.0834, 0.0823,  ..., 0.0368, 0.0296, 0.0492],
         [0.0032, 0.0834, 0.0823,  ..., 0.0368, 0.0296, 0.0492],
         [0.0032, 0.0834, 0.0823,  ..., 0.0368, 0.9111, 0.8525],
         [0.0032, 0.7498, 0.7531,  ..., 0.8897, 0.0296, 0.0492]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1018, 0.1390, 0.7249,  ..., 0.8422, 0.1388, 0.1202],
         [0.1018, 0.1757, 0.0779,  ..., 0.0526, 0.1388, 0.1202],
         [0.6947, 0.1390, 0.0753,  ..., 0.0526, 0.5627, 0.6251],
         [0.1018, 0.5463, 0.1218,  ..., 0.0526, 0.1597, 0.1344]],
        [[0.1556, 0.0904, 0.9802,  ..., 0.8298, 0.5515, 0.0684],
         [0.1741, 0.1011, 0.0081,  ..., 0.0546, 0.0783, 0.0684],
         [0.1592, 0.0904, 0.0059,  ..., 0.0439, 0.0687, 0.7947],
         [0.5110, 0.7180, 0.0059,  ..., 0.0717, 0.3015, 0.0684]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1558, 0.0944, 0.1270,  ..., 0.4807, 0.2189, 0.1841],
         [0.1515, 0.0980, 0.1376,  ..., 0.1457, 0.1821, 0.1967],
         [0.5411, 0.0944, 0.1255,  ..., 0.1451, 0.4168, 0.1841],
         [0.1515, 0.7131, 0.6099,  ..., 0.2284, 0.1821, 0.4351]],
        [[0.9808, 0.1352, 0.0882,  ..., 0.1111, 0.0161, 0.0338],
         [0.0064, 0.1403, 0.0882,  ..., 0.1111, 0.0161, 0.0338],
         [0.0064, 0.1352, 0.0882,  ..., 0.1111, 0.9517, 0.8987],
         [0.0064, 0.5894, 0.7353,  ..., 0.6667, 0.0161, 0.0338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1072, 0.2163, 0.8660,  ..., 0.9659, 0.1337, 0.1464],
         [0.1072, 0.1409, 0.0447,  ..., 0.0120, 0.1337, 0.1464],
         [0.6785, 0.1265, 0.0447,  ..., 0.0111, 0.5748, 0.5164],
         [0.1072, 0.5163, 0.0447,  ..., 0.0111, 0.1578, 0.1907]],
        [[0.0924, 0.0459, 0.9171,  ..., 0.8353, 0.1395, 0.0490],
         [0.0924, 0.0459, 0.0263,  ..., 0.0527, 0.1395, 0.0490],
         [0.1346, 0.0459, 0.0263,  ..., 0.0527, 0.4207, 0.8529],
         [0.6806, 0.8622, 0.0302,  ..., 0.0592, 0.3003, 0.0490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:41,355 [Process: 0] Synchronize training processes
2024-08-19 13:25:41,355 [Process: 0] Evaluating...
2024-08-19 13:25:41,357 [Process: 0] EPOCH 46:
2024-08-19 13:25:41,359 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:42,395 [Process: 0] Synchronize training processes
2024-08-19 13:25:42,395 [Process: 0] Evaluating...
2024-08-19 13:25:42,397 [Process: 0] EPOCH 47:
2024-08-19 13:25:42,399 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4331, 0.1329, 0.6432,  ..., 0.4522, 0.4205, 0.0706],
         [0.1853, 0.1226, 0.1165,  ..., 0.1780, 0.1941, 0.0706],
         [0.2104, 0.1293, 0.1165,  ..., 0.2013, 0.2043, 0.0706],
         [0.1712, 0.6152, 0.1237,  ..., 0.1686, 0.1812, 0.7883]],
        [[0.5948, 0.1265, 0.1373,  ..., 0.0562, 0.1372, 0.1190],
         [0.1140, 0.1265, 0.1373,  ..., 0.0562, 0.1372, 0.1190],
         [0.1772, 0.1543, 0.1610,  ..., 0.0562, 0.4223, 0.5978],
         [0.1140, 0.5927, 0.5644,  ..., 0.8313, 0.3034, 0.1642]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0687, 0.2765, 0.9304,  ..., 0.8079, 0.1105, 0.0681],
         [0.0687, 0.1884, 0.0232,  ..., 0.0640, 0.1105, 0.0681],
         [0.7939, 0.1303, 0.0232,  ..., 0.0640, 0.6686, 0.7957],
         [0.0687, 0.4048, 0.0232,  ..., 0.0640, 0.1105, 0.0681]],
        [[0.1503, 0.0679, 0.9315,  ..., 0.7710, 0.0854, 0.0761],
         [0.1517, 0.0894, 0.0228,  ..., 0.0549, 0.0854, 0.0761],
         [0.2444, 0.0679, 0.0228,  ..., 0.0549, 0.1228, 0.7444],
         [0.4537, 0.7749, 0.0228,  ..., 0.1192, 0.7064, 0.1035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3067, 0.1005, 0.0928,  ..., 0.3498, 0.1680, 0.0708],
         [0.2134, 0.1005, 0.1019,  ..., 0.1981, 0.1680, 0.0719],
         [0.2795, 0.1005, 0.0928,  ..., 0.2496, 0.4961, 0.0708],
         [0.2004, 0.6986, 0.7125,  ..., 0.2026, 0.1680, 0.7865]],
        [[0.8687, 0.0866, 0.0707,  ..., 0.0429, 0.0369, 0.1405],
         [0.0438, 0.0866, 0.0808,  ..., 0.0462, 0.0369, 0.1405],
         [0.0438, 0.0866, 0.0707,  ..., 0.0429, 0.8893, 0.5126],
         [0.0438, 0.7403, 0.7777,  ..., 0.8680, 0.0369, 0.2065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1594, 0.1162, 0.4058,  ..., 0.7852, 0.1112, 0.1366],
         [0.1658, 0.1583, 0.1674,  ..., 0.0783, 0.1112, 0.1366],
         [0.5196, 0.1162, 0.1453,  ..., 0.0683, 0.6664, 0.5903],
         [0.1553, 0.6094, 0.2815,  ..., 0.0683, 0.1112, 0.1366]],
        [[0.1274, 0.0178, 0.9495,  ..., 0.8649, 0.0189, 0.0586],
         [0.1592, 0.0178, 0.0168,  ..., 0.0500, 0.0250, 0.0586],
         [0.1755, 0.0178, 0.0168,  ..., 0.0426, 0.0189, 0.8243],
         [0.5378, 0.9467, 0.0168,  ..., 0.0426, 0.9373, 0.0586]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:25:43,426 [Process: 0] Synchronize training processes
2024-08-19 13:25:43,426 [Process: 0] Evaluating...
2024-08-19 13:25:43,428 [Process: 0] EPOCH 48:
2024-08-19 13:25:43,430 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:44,486 [Process: 0] Synchronize training processes
2024-08-19 13:25:44,486 [Process: 0] Evaluating...
2024-08-19 13:25:44,488 [Process: 0] EPOCH 49:
2024-08-19 13:25:44,490 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2225, 0.0990, 0.1067,  ..., 0.3354, 0.3553, 0.1111],
         [0.2035, 0.0990, 0.1117,  ..., 0.2173, 0.2024, 0.1289],
         [0.2610, 0.0990, 0.1067,  ..., 0.1851, 0.1928, 0.1111],
         [0.3129, 0.7031, 0.6750,  ..., 0.2623, 0.2495, 0.6489]],
        [[0.6992, 0.1112, 0.1188,  ..., 0.0492, 0.0203, 0.0350],
         [0.0946, 0.1112, 0.1188,  ..., 0.0577, 0.0203, 0.0350],
         [0.1117, 0.1112, 0.1474,  ..., 0.0492, 0.9390, 0.8951],
         [0.0946, 0.6663, 0.6150,  ..., 0.8439, 0.0203, 0.0350]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0939, 0.1076, 0.6566,  ..., 0.8678, 0.1347, 0.0670],
         [0.0939, 0.1433, 0.1389,  ..., 0.0441, 0.1347, 0.0670],
         [0.7183, 0.1076, 0.1023,  ..., 0.0441, 0.5960, 0.7990],
         [0.0939, 0.6414, 0.1023,  ..., 0.0441, 0.1347, 0.0670]],
        [[0.1229, 0.0353, 0.9541,  ..., 0.7997, 0.0578, 0.0735],
         [0.1268, 0.0384, 0.0153,  ..., 0.0676, 0.0772, 0.0735],
         [0.1739, 0.0353, 0.0153,  ..., 0.0663, 0.0578, 0.7796],
         [0.5764, 0.8911, 0.0153,  ..., 0.0663, 0.8073, 0.0735]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2887, 0.1387, 0.1455,  ..., 0.5471, 0.2646, 0.0958],
         [0.1953, 0.1724, 0.1455,  ..., 0.1539, 0.2226, 0.0971],
         [0.2217, 0.1387, 0.1715,  ..., 0.1495, 0.2008, 0.0958],
         [0.2943, 0.5502, 0.5374,  ..., 0.1495, 0.3120, 0.7113]],
        [[0.8190, 0.0607, 0.0622,  ..., 0.0758, 0.0254, 0.0514],
         [0.0603, 0.0607, 0.0622,  ..., 0.0758, 0.0254, 0.0514],
         [0.0603, 0.0607, 0.0622,  ..., 0.0758, 0.9238, 0.8459],
         [0.0603, 0.8180, 0.8134,  ..., 0.7726, 0.0254, 0.0514]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-19 13:25:45,528 [Process: 0] Synchronize training processes
2024-08-19 13:25:45,529 [Process: 0] Evaluating...
2024-08-19 13:25:45,530 [Process: 0] EPOCH 50:
2024-08-19 13:25:45,532 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:46,557 [Process: 0] Synchronize training processes
2024-08-19 13:25:46,558 [Process: 0] Evaluating...
2024-08-19 13:25:46,559 [Process: 0] EPOCH 51:
2024-08-19 13:25:46,561 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.1165, 0.1678, 0.7086,  ..., 0.9062, 0.0383, 0.0428],
         [0.1165, 0.1662, 0.1092,  ..., 0.0313, 0.0383, 0.0428],
         [0.6505, 0.1339, 0.0911,  ..., 0.0313, 0.8850, 0.8715],
         [0.1165, 0.5321, 0.0911,  ..., 0.0313, 0.0383, 0.0428]],
        [[0.1419, 0.0411, 0.9090,  ..., 0.6076, 0.1086, 0.0511],
         [0.1528, 0.0495, 0.0303,  ..., 0.1459, 0.1100, 0.0511],
         [0.3680, 0.0411, 0.0303,  ..., 0.1222, 0.1086, 0.8466],
         [0.3374, 0.8682, 0.0303,  ..., 0.1244, 0.6729, 0.0511]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2589, 0.0884, 0.1204,  ..., 0.6398, 0.3412, 0.1011],
         [0.1627, 0.1194, 0.0958,  ..., 0.1359, 0.2238, 0.1011],
         [0.1441, 0.0876, 0.0879,  ..., 0.1122, 0.2256, 0.1011],
         [0.4343, 0.7046, 0.6959,  ..., 0.1122, 0.2094, 0.6968]],
        [[0.7557, 0.0634, 0.0553,  ..., 0.1158, 0.1659, 0.1045],
         [0.0758, 0.0634, 0.0562,  ..., 0.1126, 0.1659, 0.0991],
         [0.0928, 0.0634, 0.0553,  ..., 0.1126, 0.3545, 0.6973],
         [0.0758, 0.8098, 0.8332,  ..., 0.6591, 0.3136, 0.0991]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0863, 0.0590, 0.8567,  ..., 0.9469, 0.0540, 0.0723],
         [0.0863, 0.0666, 0.0478,  ..., 0.0177, 0.0540, 0.0723],
         [0.7412, 0.0590, 0.0478,  ..., 0.0177, 0.8379, 0.7831],
         [0.0863, 0.8154, 0.0478,  ..., 0.0177, 0.0540, 0.0723]],
        [[0.1431, 0.0526, 0.9013,  ..., 0.8178, 0.1721, 0.0988],
         [0.1687, 0.0564, 0.0329,  ..., 0.0650, 0.1721, 0.0905],
         [0.2056, 0.0526, 0.0329,  ..., 0.0586, 0.2846, 0.7201],
         [0.4826, 0.8385, 0.0329,  ..., 0.0586, 0.3711, 0.0905]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3101, 0.1048, 0.0902,  ..., 0.6110, 0.2603, 0.1099],
         [0.1893, 0.1048, 0.0902,  ..., 0.1341, 0.1975, 0.1099],
         [0.1667, 0.1048, 0.0902,  ..., 0.1274, 0.1614, 0.1893],
         [0.3338, 0.6857, 0.7293,  ..., 0.1274, 0.3808, 0.5909]],
        [[0.9846, 0.0690, 0.0427,  ..., 0.1188, 0.0223, 0.0449],
         [0.0051, 0.0690, 0.0427,  ..., 0.1188, 0.0223, 0.0449],
         [0.0051, 0.0690, 0.0427,  ..., 0.1188, 0.9331, 0.8652],
         [0.0051, 0.7931, 0.8718,  ..., 0.6437, 0.0223, 0.0449]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:25:47,592 [Process: 0] Synchronize training processes
2024-08-19 13:25:47,593 [Process: 0] Evaluating...
2024-08-19 13:25:48,583 [Process: 0] EPOCH 52:
2024-08-19 13:25:48,588 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0939, 0.0376, 0.9572,  ..., 0.9465, 0.0619, 0.0595],
         [0.1028, 0.0376, 0.0143,  ..., 0.0178, 0.0619, 0.0595],
         [0.7094, 0.0376, 0.0143,  ..., 0.0178, 0.8142, 0.8216],
         [0.0939, 0.8872, 0.0143,  ..., 0.0178, 0.0619, 0.0595]],
        [[0.2023, 0.0159, 0.9086,  ..., 0.9120, 0.1513, 0.0368],
         [0.2991, 0.0159, 0.0305,  ..., 0.0316, 0.1263, 0.0368],
         [0.2723, 0.0159, 0.0305,  ..., 0.0280, 0.1263, 0.8895],
         [0.2263, 0.9524, 0.0305,  ..., 0.0285, 0.5962, 0.0368]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2459, 0.1299, 0.0663,  ..., 0.6761, 0.2306, 0.0625],
         [0.1758, 0.1014, 0.0663,  ..., 0.1160, 0.1713, 0.0625],
         [0.1846, 0.1014, 0.0663,  ..., 0.1040, 0.2158, 0.0625],
         [0.3937, 0.6673, 0.8010,  ..., 0.1040, 0.3823, 0.8125]],
        [[0.9668, 0.1359, 0.0451,  ..., 0.1534, 0.0427, 0.0637],
         [0.0111, 0.1359, 0.0451,  ..., 0.1534, 0.0427, 0.0637],
         [0.0111, 0.1359, 0.0451,  ..., 0.1572, 0.8720, 0.8088],
         [0.0111, 0.5924, 0.8646,  ..., 0.5360, 0.0427, 0.0637]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:25:49,585 [Process: 0] Synchronize training processes
2024-08-19 13:25:49,586 [Process: 0] Evaluating...
2024-08-19 13:25:49,587 [Process: 0] EPOCH 53:
2024-08-19 13:25:49,589 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:50,625 [Process: 0] Synchronize training processes
2024-08-19 13:25:50,625 [Process: 0] Evaluating...
2024-08-19 13:25:50,627 [Process: 0] EPOCH 54:
2024-08-19 13:25:50,629 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0720, 0.1391, 0.8622,  ..., 0.9691, 0.0529, 0.0650],
         [0.0746, 0.1507, 0.0489,  ..., 0.0103, 0.0529, 0.0650],
         [0.7813, 0.1391, 0.0444,  ..., 0.0103, 0.8413, 0.8050],
         [0.0720, 0.5711, 0.0444,  ..., 0.0103, 0.0529, 0.0650]],
        [[0.2090, 0.0191, 0.9184,  ..., 0.8676, 0.0816, 0.0727],
         [0.2897, 0.0191, 0.0280,  ..., 0.0521, 0.0816, 0.0727],
         [0.3243, 0.0191, 0.0268,  ..., 0.0401, 0.0816, 0.7818],
         [0.1771, 0.9426, 0.0268,  ..., 0.0401, 0.7551, 0.0727]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3410, 0.1284, 0.1179,  ..., 0.7294, 0.2823, 0.0538],
         [0.2162, 0.0840, 0.0964,  ..., 0.1114, 0.2146, 0.0538],
         [0.1761, 0.0840, 0.0964,  ..., 0.0796, 0.1700, 0.0538],
         [0.2667, 0.7035, 0.6892,  ..., 0.0796, 0.3330, 0.8386]],
        [[0.7916, 0.0804, 0.0534,  ..., 0.1115, 0.0963, 0.0664],
         [0.0692, 0.0804, 0.0534,  ..., 0.1117, 0.0947, 0.0664],
         [0.0700, 0.0804, 0.0534,  ..., 0.1115, 0.7143, 0.8007],
         [0.0692, 0.7587, 0.8398,  ..., 0.6653, 0.0947, 0.0664]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0796, 0.0419, 0.9282,  ..., 0.9621, 0.0668, 0.0757],
         [0.0796, 0.0419, 0.0246,  ..., 0.0126, 0.0668, 0.0952],
         [0.7612, 0.0419, 0.0236,  ..., 0.0126, 0.7995, 0.7533],
         [0.0796, 0.8743, 0.0236,  ..., 0.0126, 0.0668, 0.0757]],
        [[0.1543, 0.0774, 0.6862,  ..., 0.8906, 0.1748, 0.0628],
         [0.2701, 0.0774, 0.1046,  ..., 0.0365, 0.1636, 0.0628],
         [0.4213, 0.0774, 0.1046,  ..., 0.0365, 0.2141, 0.8115],
         [0.1543, 0.7677, 0.1046,  ..., 0.0365, 0.4476, 0.0628]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1791, 0.1129, 0.0857,  ..., 0.6862, 0.2983, 0.1592],
         [0.2319, 0.0749, 0.0857,  ..., 0.1079, 0.2146, 0.1592],
         [0.1787, 0.0749, 0.0857,  ..., 0.1112, 0.2104, 0.2879],
         [0.4103, 0.7372, 0.7429,  ..., 0.0947, 0.2768, 0.3938]],
        [[0.9905, 0.0630, 0.0845,  ..., 0.0520, 0.0063, 0.0303],
         [0.0032, 0.0630, 0.0845,  ..., 0.0520, 0.0063, 0.0303],
         [0.0032, 0.0630, 0.0845,  ..., 0.0520, 0.9812, 0.9092],
         [0.0032, 0.8109, 0.7465,  ..., 0.8439, 0.0063, 0.0303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:25:51,665 [Process: 0] Synchronize training processes
2024-08-19 13:25:51,665 [Process: 0] Evaluating...
2024-08-19 13:25:51,667 [Process: 0] EPOCH 55:
2024-08-19 13:25:51,669 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:52,706 [Process: 0] Synchronize training processes
2024-08-19 13:25:52,707 [Process: 0] Evaluating...
2024-08-19 13:25:52,709 [Process: 0] EPOCH 56:
2024-08-19 13:25:52,710 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0908, 0.1486, 0.9371,  ..., 0.9563, 0.0392, 0.0653],
         [0.1190, 0.2035, 0.0201,  ..., 0.0146, 0.0392, 0.0653],
         [0.6994, 0.1486, 0.0201,  ..., 0.0146, 0.8825, 0.8040],
         [0.0908, 0.4994, 0.0226,  ..., 0.0146, 0.0392, 0.0653]],
        [[0.1303, 0.0063, 0.9434,  ..., 0.8335, 0.0475, 0.0597],
         [0.2273, 0.0063, 0.0189,  ..., 0.0555, 0.0475, 0.0597],
         [0.5121, 0.0063, 0.0189,  ..., 0.0555, 0.0475, 0.8210],
         [0.1303, 0.9810, 0.0189,  ..., 0.0555, 0.8575, 0.0597]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2970, 0.0829, 0.0660,  ..., 0.5517, 0.2472, 0.1602],
         [0.1790, 0.0632, 0.0446,  ..., 0.1851, 0.2175, 0.1455],
         [0.1919, 0.0632, 0.0446,  ..., 0.1449, 0.1743, 0.1455],
         [0.3321, 0.7907, 0.8448,  ..., 0.1183, 0.3610, 0.5487]],
        [[0.9837, 0.0341, 0.0368,  ..., 0.0752, 0.0079, 0.0275],
         [0.0054, 0.0341, 0.0368,  ..., 0.0752, 0.0079, 0.0275],
         [0.0054, 0.0341, 0.0368,  ..., 0.0752, 0.9763, 0.9174],
         [0.0054, 0.8978, 0.8897,  ..., 0.7744, 0.0079, 0.0275]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1286, 0.1157, 0.9036,  ..., 0.8333, 0.0953, 0.0750],
         [0.1290, 0.1157, 0.0321,  ..., 0.0500, 0.0953, 0.0750],
         [0.5853, 0.1296, 0.0321,  ..., 0.0500, 0.7140, 0.7751],
         [0.1570, 0.6391, 0.0321,  ..., 0.0667, 0.0953, 0.0750]],
        [[0.1307, 0.0122, 0.9397,  ..., 0.9103, 0.0251, 0.0517],
         [0.2474, 0.0122, 0.0264,  ..., 0.0299, 0.0251, 0.0517],
         [0.4912, 0.0122, 0.0169,  ..., 0.0299, 0.0251, 0.8450],
         [0.1307, 0.9634, 0.0169,  ..., 0.0299, 0.9248, 0.0517]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2326, 0.0810, 0.0754,  ..., 0.6848, 0.1380, 0.1403],
         [0.1660, 0.0810, 0.0754,  ..., 0.1130, 0.1538, 0.1457],
         [0.2444, 0.0810, 0.0754,  ..., 0.1037, 0.1380, 0.1403],
         [0.3571, 0.7569, 0.7738,  ..., 0.0985, 0.5702, 0.5737]],
        [[0.9939, 0.0786, 0.0428,  ..., 0.0753, 0.0236, 0.0392],
         [0.0020, 0.0786, 0.0428,  ..., 0.0753, 0.0236, 0.0392],
         [0.0020, 0.0786, 0.0428,  ..., 0.0753, 0.9292, 0.8825],
         [0.0020, 0.7642, 0.8717,  ..., 0.7741, 0.0236, 0.0392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:25:53,743 [Process: 0] Synchronize training processes
2024-08-19 13:25:53,743 [Process: 0] Evaluating...
2024-08-19 13:25:53,745 [Process: 0] EPOCH 57:
2024-08-19 13:25:53,746 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:54,773 [Process: 0] Synchronize training processes
2024-08-19 13:25:54,774 [Process: 0] Evaluating...
2024-08-19 13:25:54,775 [Process: 0] EPOCH 58:
2024-08-19 13:25:54,777 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1003, 0.0857, 0.8952,  ..., 0.9365, 0.0437, 0.0629],
         [0.1003, 0.0857, 0.0400,  ..., 0.0269, 0.0437, 0.0629],
         [0.6991, 0.0857, 0.0324,  ..., 0.0183, 0.8689, 0.8112],
         [0.1003, 0.7428, 0.0324,  ..., 0.0183, 0.0437, 0.0629]],
        [[0.0992, 0.0406, 0.9725,  ..., 0.9037, 0.0522, 0.0582],
         [0.1810, 0.0406, 0.0092,  ..., 0.0321, 0.0522, 0.0582],
         [0.6205, 0.0406, 0.0092,  ..., 0.0321, 0.0522, 0.8254],
         [0.0992, 0.8783, 0.0092,  ..., 0.0321, 0.8433, 0.0582]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1912, 0.2915, 0.0938,  ..., 0.6817, 0.2624, 0.1219],
         [0.1814, 0.2044, 0.0938,  ..., 0.1297, 0.1900, 0.1275],
         [0.1663, 0.1908, 0.0938,  ..., 0.0943, 0.1596, 0.1219],
         [0.4611, 0.3133, 0.7185,  ..., 0.0943, 0.3880, 0.6288]],
        [[0.9285, 0.1107, 0.0491,  ..., 0.1373, 0.0126, 0.0218],
         [0.0238, 0.0969, 0.0491,  ..., 0.1373, 0.0126, 0.0218],
         [0.0238, 0.0969, 0.0491,  ..., 0.1373, 0.9623, 0.9346],
         [0.0238, 0.6955, 0.8526,  ..., 0.5881, 0.0126, 0.0218]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1017, 0.0580, 0.9108,  ..., 0.9292, 0.0239, 0.0506],
         [0.1487, 0.0580, 0.0297,  ..., 0.0236, 0.0239, 0.0506],
         [0.6479, 0.0580, 0.0297,  ..., 0.0236, 0.9282, 0.8469],
         [0.1017, 0.8261, 0.0297,  ..., 0.0236, 0.0239, 0.0519]],
        [[0.1017, 0.0333, 0.9714,  ..., 0.8614, 0.1081, 0.0656],
         [0.1299, 0.0333, 0.0095,  ..., 0.0510, 0.1081, 0.0656],
         [0.6668, 0.0333, 0.0095,  ..., 0.0438, 0.1149, 0.8031],
         [0.1017, 0.9000, 0.0095,  ..., 0.0438, 0.6689, 0.0656]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3362, 0.1683, 0.0920,  ..., 0.9098, 0.3115, 0.1331],
         [0.1885, 0.2183, 0.0920,  ..., 0.0362, 0.2447, 0.1331],
         [0.2087, 0.1683, 0.0920,  ..., 0.0270, 0.2180, 0.1607],
         [0.2667, 0.4451, 0.7241,  ..., 0.0270, 0.2259, 0.5731]],
        [[0.8851, 0.0544, 0.0227,  ..., 0.0462, 0.0187, 0.1293],
         [0.0369, 0.0544, 0.0227,  ..., 0.0462, 0.0187, 0.1293],
         [0.0410, 0.0544, 0.0227,  ..., 0.0462, 0.9439, 0.5214],
         [0.0369, 0.8369, 0.9320,  ..., 0.8614, 0.0187, 0.2201]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:25:55,820 [Process: 0] Synchronize training processes
2024-08-19 13:25:55,821 [Process: 0] Evaluating...
2024-08-19 13:25:55,822 [Process: 0] EPOCH 59:
2024-08-19 13:25:55,824 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:56,857 [Process: 0] Synchronize training processes
2024-08-19 13:25:56,857 [Process: 0] Evaluating...
2024-08-19 13:25:56,859 [Process: 0] EPOCH 60:
2024-08-19 13:25:56,860 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1089, 0.0247, 0.9737,  ..., 0.9425, 0.0350, 0.0259],
         [0.1256, 0.0247, 0.0088,  ..., 0.0192, 0.0350, 0.0259],
         [0.6565, 0.0247, 0.0088,  ..., 0.0192, 0.8951, 0.9223],
         [0.1089, 0.9259, 0.0088,  ..., 0.0192, 0.0350, 0.0259]],
        [[0.0836, 0.0104, 0.9650,  ..., 0.9181, 0.0950, 0.0556],
         [0.2771, 0.0104, 0.0117,  ..., 0.0300, 0.0950, 0.0556],
         [0.5556, 0.0104, 0.0117,  ..., 0.0259, 0.0950, 0.8333],
         [0.0836, 0.9687, 0.0117,  ..., 0.0259, 0.7151, 0.0556]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1178, 0.0558, 0.0781,  ..., 0.7141, 0.1451, 0.1134],
         [0.1276, 0.0558, 0.0781,  ..., 0.1322, 0.1581, 0.1210],
         [0.1178, 0.0558, 0.0781,  ..., 0.0768, 0.1519, 0.1158],
         [0.6368, 0.8325, 0.7656,  ..., 0.0768, 0.5449, 0.6498]],
        [[0.9195, 0.0542, 0.0451,  ..., 0.0168, 0.0426, 0.0092],
         [0.0268, 0.0515, 0.0451,  ..., 0.0168, 0.0426, 0.0092],
         [0.0268, 0.0515, 0.0451,  ..., 0.0168, 0.8722, 0.9724],
         [0.0268, 0.8428, 0.8648,  ..., 0.9496, 0.0426, 0.0092]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1171, 0.0603, 0.8979,  ..., 0.9369, 0.0700, 0.0485],
         [0.1255, 0.0603, 0.0361,  ..., 0.0210, 0.0700, 0.0485],
         [0.6318, 0.0603, 0.0330,  ..., 0.0210, 0.7870, 0.8546],
         [0.1256, 0.8190, 0.0330,  ..., 0.0210, 0.0730, 0.0485]],
        [[0.1038, 0.0342, 0.9051,  ..., 0.6480, 0.0432, 0.0595],
         [0.2858, 0.0371, 0.0316,  ..., 0.1660, 0.0432, 0.0595],
         [0.5066, 0.0342, 0.0316,  ..., 0.0930, 0.0432, 0.8215],
         [0.1038, 0.8946, 0.0316,  ..., 0.0930, 0.8705, 0.0595]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0951, 0.6351, 0.0923,  ..., 0.1750, 0.1372, 0.1146],
         [0.0951, 0.1545, 0.0923,  ..., 0.4814, 0.1372, 0.1146],
         [0.0951, 0.1071, 0.0923,  ..., 0.1979, 0.1748, 0.1199],
         [0.7148, 0.1033, 0.7230,  ..., 0.1457, 0.5509, 0.6509]],
        [[0.9728, 0.0483, 0.1032,  ..., 0.0460, 0.0259, 0.0120],
         [0.0091, 0.0483, 0.0957,  ..., 0.0460, 0.0259, 0.0120],
         [0.0091, 0.0483, 0.0957,  ..., 0.0460, 0.9222, 0.9640],
         [0.0091, 0.8552, 0.7054,  ..., 0.8620, 0.0259, 0.0120]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:25:57,892 [Process: 0] Synchronize training processes
2024-08-19 13:25:57,893 [Process: 0] Evaluating...
2024-08-19 13:25:57,894 [Process: 0] EPOCH 61:
2024-08-19 13:25:57,896 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:25:58,928 [Process: 0] Synchronize training processes
2024-08-19 13:25:58,929 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0603, 0.0520, 0.9237,  ..., 0.8790, 0.0681, 0.0721],
         [0.0603, 0.0736, 0.0254,  ..., 0.0486, 0.0681, 0.0721],
         [0.8192, 0.0520, 0.0254,  ..., 0.0362, 0.7957, 0.7836],
         [0.0603, 0.8223, 0.0254,  ..., 0.0362, 0.0681, 0.0721]],
        [[0.0952, 0.0172, 0.9930,  ..., 0.8052, 0.1563, 0.0581],
         [0.4630, 0.0172, 0.0023,  ..., 0.0801, 0.2155, 0.0581],
         [0.3466, 0.0172, 0.0023,  ..., 0.0573, 0.2503, 0.8256],
         [0.0952, 0.9485, 0.0023,  ..., 0.0573, 0.3779, 0.0581]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2021, 0.7849, 0.1046,  ..., 0.8555, 0.2025, 0.0789],
         [0.1490, 0.0926, 0.1046,  ..., 0.0482, 0.2523, 0.0789],
         [0.1431, 0.0613, 0.1680,  ..., 0.0482, 0.1599, 0.0789],
         [0.5058, 0.0613, 0.6228,  ..., 0.0482, 0.3853, 0.7632]],
        [[0.9832, 0.0806, 0.0319,  ..., 0.0940, 0.0393, 0.1303],
         [0.0056, 0.0806, 0.0319,  ..., 0.1111, 0.0393, 0.1303],
         [0.0056, 0.0806, 0.0319,  ..., 0.0940, 0.8822, 0.5066],
         [0.0056, 0.7581, 0.9044,  ..., 0.7009, 0.0393, 0.2327]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0893, 0.0738, 0.9798,  ..., 0.9464, 0.0669, 0.0575],
         [0.0893, 0.0738, 0.0067,  ..., 0.0179, 0.0669, 0.0575],
         [0.7320, 0.0738, 0.0067,  ..., 0.0179, 0.7993, 0.8275],
         [0.0893, 0.7785, 0.0067,  ..., 0.0179, 0.0669, 0.0575]],
        [[0.1258, 0.0339, 0.9550,  ..., 0.9245, 0.1325, 0.0410],
         [0.2988, 0.0352, 0.0150,  ..., 0.0252, 0.1395, 0.0410],
         [0.4497, 0.0339, 0.0150,  ..., 0.0252, 0.5540, 0.8769],
         [0.1258, 0.8971, 0.0150,  ..., 0.0252, 0.1740, 0.0410]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:25:59,902 [Process: 0] EPOCH 62:
2024-08-19 13:25:59,906 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:00,895 [Process: 0] Synchronize training processes
2024-08-19 13:26:00,896 [Process: 0] Evaluating...
2024-08-19 13:26:00,897 [Process: 0] EPOCH 63:
2024-08-19 13:26:00,899 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3466e-01, 2.9439e-01, 2.6839e-01,  ..., 6.4637e-01,
          2.5300e-01, 1.6230e-01],
         [2.4748e-01, 1.1350e-01, 2.0042e-01,  ..., 1.7221e-01,
          1.8434e-01, 1.2492e-01],
         [1.6865e-01, 1.1350e-01, 1.6928e-01,  ..., 9.0708e-02,
          1.6531e-01, 1.2492e-01],
         [2.4920e-01, 4.7860e-01, 3.6190e-01,  ..., 9.0708e-02,
          3.9735e-01, 5.8785e-01]],
        [[9.9940e-01, 7.2260e-02, 3.0932e-02,  ..., 2.8022e-02,
          2.4771e-02, 3.0363e-02],
         [1.9908e-04, 7.2260e-02, 3.0932e-02,  ..., 2.8022e-02,
          2.4771e-02, 3.0363e-02],
         [1.9908e-04, 8.0207e-02, 3.0932e-02,  ..., 2.8022e-02,
          9.2569e-01, 9.0891e-01],
         [1.9908e-04, 7.7527e-01, 9.0720e-01,  ..., 9.1594e-01,
          2.4771e-02, 3.0363e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0943, 0.2116, 0.9416,  ..., 0.8942, 0.0645, 0.0661],
         [0.0943, 0.1155, 0.0169,  ..., 0.0334, 0.0645, 0.0661],
         [0.7172, 0.1155, 0.0169,  ..., 0.0334, 0.8065, 0.8016],
         [0.0943, 0.5573, 0.0247,  ..., 0.0390, 0.0645, 0.0661]],
        [[0.1379, 0.0139, 0.9440,  ..., 0.9176, 0.0370, 0.0992],
         [0.3074, 0.0155, 0.0187,  ..., 0.0275, 0.0363, 0.1051],
         [0.4168, 0.0139, 0.0187,  ..., 0.0275, 0.0363, 0.6965],
         [0.1379, 0.9566, 0.0187,  ..., 0.0275, 0.8905, 0.0992]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2882, 0.0868, 0.1803,  ..., 0.4840, 0.2860, 0.1052],
         [0.1725, 0.0868, 0.1546,  ..., 0.3038, 0.1592, 0.1000],
         [0.1543, 0.0868, 0.2609,  ..., 0.1061, 0.1481, 0.1000],
         [0.3850, 0.7395, 0.4041,  ..., 0.1061, 0.4067, 0.6947]],
        [[0.9886, 0.0744, 0.0382,  ..., 0.0206, 0.0367, 0.0152],
         [0.0038, 0.0744, 0.0382,  ..., 0.0206, 0.0367, 0.0152],
         [0.0038, 0.0816, 0.0382,  ..., 0.0206, 0.8898, 0.9545],
         [0.0038, 0.7697, 0.8854,  ..., 0.9382, 0.0367, 0.0152]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:26:01,929 [Process: 0] Synchronize training processes
2024-08-19 13:26:01,929 [Process: 0] Evaluating...
2024-08-19 13:26:01,931 [Process: 0] EPOCH 64:
2024-08-19 13:26:01,932 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:02,955 [Process: 0] Synchronize training processes
2024-08-19 13:26:02,955 [Process: 0] Evaluating...
2024-08-19 13:26:02,957 [Process: 0] EPOCH 65:
2024-08-19 13:26:02,959 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0678, 0.0672, 0.9280,  ..., 0.9822, 0.0549, 0.0600],
         [0.0678, 0.0621, 0.0308,  ..., 0.0059, 0.0549, 0.0600],
         [0.7966, 0.0621, 0.0206,  ..., 0.0059, 0.8354, 0.8200],
         [0.0678, 0.8087, 0.0206,  ..., 0.0059, 0.0549, 0.0600]],
        [[0.1541, 0.0036, 0.9631,  ..., 0.8579, 0.0467, 0.0787],
         [0.3175, 0.0036, 0.0123,  ..., 0.0562, 0.0467, 0.0787],
         [0.3816, 0.0036, 0.0123,  ..., 0.0429, 0.0467, 0.7638],
         [0.1468, 0.9892, 0.0123,  ..., 0.0429, 0.8599, 0.0787]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2130e-01, 5.1265e-02, 1.2660e-01,  ..., 7.3941e-01,
          3.0687e-01, 1.3062e-01],
         [1.4730e-01, 5.1265e-02, 1.2660e-01,  ..., 1.1360e-01,
          1.4474e-01, 1.3626e-01],
         [1.4730e-01, 5.4701e-02, 2.3195e-01,  ..., 7.3495e-02,
          1.4474e-01, 1.3381e-01],
         [4.8410e-01, 8.4277e-01, 5.1485e-01,  ..., 7.3495e-02,
          4.0365e-01, 5.9932e-01]],
        [[9.9969e-01, 5.8381e-02, 4.0015e-02,  ..., 3.2307e-02,
          1.2035e-01, 2.1533e-02],
         [1.0429e-04, 5.8381e-02, 4.0015e-02,  ..., 3.2307e-02,
          1.2035e-01, 2.1533e-02],
         [1.0429e-04, 5.9170e-02, 4.2352e-02,  ..., 3.2307e-02,
          6.3895e-01, 9.3540e-01],
         [1.0429e-04, 8.2407e-01, 8.7762e-01,  ..., 9.0308e-01,
          1.2035e-01, 2.1533e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0599, 0.1486, 0.9876,  ..., 0.9795, 0.0327, 0.0219],
         [0.0599, 0.1301, 0.0041,  ..., 0.0071, 0.0327, 0.0219],
         [0.8202, 0.1408, 0.0041,  ..., 0.0067, 0.9018, 0.9343],
         [0.0599, 0.5805, 0.0041,  ..., 0.0067, 0.0327, 0.0219]],
        [[0.1037, 0.0036, 0.9631,  ..., 0.6871, 0.0397, 0.0592],
         [0.0824, 0.0036, 0.0123,  ..., 0.1341, 0.0397, 0.0592],
         [0.7316, 0.0036, 0.0123,  ..., 0.0845, 0.0397, 0.8224],
         [0.0824, 0.9893, 0.0123,  ..., 0.0943, 0.8809, 0.0592]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2350e-01, 8.9919e-02, 1.8835e-01,  ..., 8.3306e-01,
          3.2522e-01, 9.2263e-02],
         [1.2734e-01, 8.9919e-02, 1.5406e-01,  ..., 7.6247e-02,
          1.5962e-01, 9.2263e-02],
         [1.2734e-01, 1.7070e-01, 3.5430e-01,  ..., 4.5347e-02,
          1.6185e-01, 9.5716e-02],
         [5.2183e-01, 6.4946e-01, 3.0329e-01,  ..., 4.5347e-02,
          3.5331e-01, 7.1976e-01]],
        [[9.9932e-01, 3.2352e-02, 3.8605e-02,  ..., 4.5185e-02,
          3.2630e-01, 3.2189e-02],
         [2.2545e-04, 3.2352e-02, 3.8605e-02,  ..., 4.5185e-02,
          1.8467e-01, 3.2189e-02],
         [2.2545e-04, 3.2352e-02, 3.8605e-02,  ..., 4.5185e-02,
          3.2077e-01, 9.0343e-01],
         [2.2545e-04, 9.0294e-01, 8.8419e-01,  ..., 8.6445e-01,
          1.6826e-01, 3.2189e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:26:03,993 [Process: 0] Synchronize training processes
2024-08-19 13:26:03,993 [Process: 0] Evaluating...
2024-08-19 13:26:03,995 [Process: 0] EPOCH 66:
2024-08-19 13:26:03,997 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:05,037 [Process: 0] Synchronize training processes
2024-08-19 13:26:05,037 [Process: 0] Evaluating...
2024-08-19 13:26:05,039 [Process: 0] EPOCH 67:
2024-08-19 13:26:05,040 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1749, 0.2746, 0.9047,  ..., 0.8888, 0.0242, 0.0280],
         [0.1201, 0.1253, 0.0318,  ..., 0.0336, 0.0242, 0.0280],
         [0.5849, 0.1031, 0.0318,  ..., 0.0336, 0.9275, 0.9159],
         [0.1201, 0.4970, 0.0318,  ..., 0.0440, 0.0242, 0.0280]],
        [[0.1258, 0.0085, 0.9815,  ..., 0.2920, 0.0042, 0.0527],
         [0.1696, 0.0085, 0.0068,  ..., 0.2841, 0.0042, 0.0527],
         [0.5807, 0.0085, 0.0055,  ..., 0.1414, 0.0042, 0.8419],
         [0.1240, 0.9744, 0.0063,  ..., 0.2825, 0.9873, 0.0527]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5309, 0.0686, 0.1001,  ..., 0.7119, 0.5823, 0.0730],
         [0.1846, 0.0686, 0.1001,  ..., 0.1391, 0.1773, 0.0730],
         [0.1375, 0.0919, 0.1583,  ..., 0.0745, 0.1202, 0.0730],
         [0.1470, 0.7709, 0.6415,  ..., 0.0745, 0.1202, 0.7809]],
        [[0.9854, 0.0224, 0.0243,  ..., 0.0212, 0.1199, 0.0161],
         [0.0058, 0.0224, 0.0243,  ..., 0.0212, 0.1165, 0.0161],
         [0.0044, 0.0224, 0.0243,  ..., 0.0212, 0.6470, 0.9517],
         [0.0044, 0.9327, 0.9272,  ..., 0.9365, 0.1165, 0.0161]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0685, 0.0842, 0.8986,  ..., 0.9646, 0.0538, 0.0334],
         [0.0685, 0.1193, 0.0349,  ..., 0.0087, 0.0538, 0.0334],
         [0.7944, 0.0842, 0.0232,  ..., 0.0087, 0.8385, 0.8998],
         [0.0685, 0.7123, 0.0434,  ..., 0.0179, 0.0538, 0.0334]],
        [[0.2405, 0.0209, 0.9574,  ..., 0.7631, 0.0089, 0.0602],
         [0.2890, 0.0235, 0.0121,  ..., 0.0995, 0.0089, 0.0602],
         [0.3198, 0.0209, 0.0121,  ..., 0.0687, 0.0089, 0.8193],
         [0.1506, 0.9347, 0.0185,  ..., 0.0687, 0.9733, 0.0602]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2951, 0.0168, 0.0133,  ..., 0.6599, 0.1964, 0.0563],
         [0.1708, 0.0168, 0.0133,  ..., 0.1529, 0.1632, 0.0563],
         [0.2300, 0.0168, 0.0133,  ..., 0.0936, 0.2268, 0.0624],
         [0.3041, 0.9496, 0.9601,  ..., 0.0936, 0.4137, 0.8250]],
        [[0.8131, 0.0618, 0.0343,  ..., 0.0245, 0.1431, 0.0179],
         [0.0617, 0.0618, 0.0343,  ..., 0.0245, 0.1254, 0.0179],
         [0.0634, 0.0618, 0.0343,  ..., 0.0245, 0.6061, 0.9464],
         [0.0617, 0.8147, 0.8970,  ..., 0.9264, 0.1254, 0.0179]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:26:06,076 [Process: 0] Synchronize training processes
2024-08-19 13:26:06,076 [Process: 0] Evaluating...
2024-08-19 13:26:06,078 [Process: 0] EPOCH 68:
2024-08-19 13:26:06,080 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:07,112 [Process: 0] Synchronize training processes
2024-08-19 13:26:07,112 [Process: 0] Evaluating...
2024-08-19 13:26:07,114 [Process: 0] EPOCH 69:
2024-08-19 13:26:07,116 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0422, 0.0645, 0.9858,  ..., 0.9863, 0.0451, 0.0490],
         [0.0422, 0.0770, 0.0047,  ..., 0.0046, 0.0451, 0.0490],
         [0.8733, 0.0645, 0.0047,  ..., 0.0046, 0.8646, 0.8530],
         [0.0422, 0.7940, 0.0047,  ..., 0.0046, 0.0451, 0.0490]],
        [[0.3250, 0.0366, 0.9911,  ..., 0.9679, 0.0104, 0.0263],
         [0.1804, 0.0402, 0.0030,  ..., 0.0135, 0.0104, 0.0263],
         [0.3400, 0.0366, 0.0028,  ..., 0.0093, 0.0104, 0.9212],
         [0.1546, 0.8865, 0.0031,  ..., 0.0093, 0.9688, 0.0263]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1420, 0.0693, 0.0844,  ..., 0.9596, 0.1580, 0.1059],
         [0.1420, 0.0693, 0.0754,  ..., 0.0144, 0.1292, 0.1059],
         [0.1607, 0.0693, 0.0754,  ..., 0.0130, 0.1362, 0.1439],
         [0.5552, 0.7922, 0.7648,  ..., 0.0130, 0.5767, 0.6442]],
        [[0.9969, 0.0443, 0.0751,  ..., 0.0723, 0.1105, 0.0183],
         [0.0010, 0.0443, 0.0751,  ..., 0.0723, 0.1010, 0.0183],
         [0.0010, 0.0443, 0.0751,  ..., 0.0723, 0.6876, 0.9452],
         [0.0010, 0.8671, 0.7747,  ..., 0.7830, 0.1010, 0.0183]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0680, 0.0184, 0.9456,  ..., 0.9573, 0.0372, 0.0267],
         [0.0647, 0.0190, 0.0164,  ..., 0.0206, 0.0372, 0.0267],
         [0.8026, 0.0184, 0.0164,  ..., 0.0111, 0.8884, 0.9198],
         [0.0647, 0.9442, 0.0216,  ..., 0.0111, 0.0372, 0.0267]],
        [[0.2281, 0.0085, 0.9822,  ..., 0.8932, 0.0790, 0.0575],
         [0.4612, 0.0085, 0.0078,  ..., 0.0572, 0.0490, 0.0559],
         [0.1554, 0.0085, 0.0050,  ..., 0.0248, 0.0490, 0.8307],
         [0.1554, 0.9744, 0.0050,  ..., 0.0248, 0.8230, 0.0559]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:26:08,150 [Process: 0] Synchronize training processes
2024-08-19 13:26:08,150 [Process: 0] Evaluating...
2024-08-19 13:26:08,152 [Process: 0] EPOCH 70:
2024-08-19 13:26:08,154 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1350, 0.0356, 0.1290,  ..., 0.9213, 0.1956, 0.0645],
         [0.1191, 0.0356, 0.0955,  ..., 0.0339, 0.1701, 0.0645],
         [0.1191, 0.0356, 0.1025,  ..., 0.0224, 0.1658, 0.0645],
         [0.6268, 0.8932, 0.6730,  ..., 0.0224, 0.4684, 0.8066]],
        [[0.9898, 0.0511, 0.0427,  ..., 0.0360, 0.1260, 0.0304],
         [0.0041, 0.0511, 0.0427,  ..., 0.0360, 0.1070, 0.0304],
         [0.0030, 0.0511, 0.0427,  ..., 0.0360, 0.6601, 0.9089],
         [0.0030, 0.8468, 0.8719,  ..., 0.8921, 0.1070, 0.0304]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0551, 0.0130, 0.9760,  ..., 0.9428, 0.0551, 0.0468],
         [0.0551, 0.0130, 0.0080,  ..., 0.0213, 0.0551, 0.0468],
         [0.8348, 0.0130, 0.0080,  ..., 0.0180, 0.8346, 0.8596],
         [0.0551, 0.9610, 0.0080,  ..., 0.0180, 0.0551, 0.0468]],
        [[0.1490, 0.0225, 0.9892,  ..., 0.9587, 0.1509, 0.0273],
         [0.1490, 0.0334, 0.0036,  ..., 0.0138, 0.0953, 0.0273],
         [0.5531, 0.0225, 0.0036,  ..., 0.0138, 0.0890, 0.9181],
         [0.1490, 0.9217, 0.0036,  ..., 0.0138, 0.6647, 0.0273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2558, 0.0879, 0.0487,  ..., 0.9342, 0.1532, 0.0525],
         [0.1926, 0.0785, 0.0487,  ..., 0.0278, 0.1522, 0.0525],
         [0.1513, 0.0785, 0.0487,  ..., 0.0190, 0.1266, 0.0525],
         [0.4002, 0.7551, 0.8538,  ..., 0.0190, 0.5680, 0.8426]],
        [[0.9632, 0.0475, 0.0693,  ..., 0.0414, 0.0517, 0.0243],
         [0.0131, 0.0475, 0.0693,  ..., 0.0414, 0.0517, 0.0243],
         [0.0119, 0.0475, 0.0693,  ..., 0.0414, 0.8450, 0.9270],
         [0.0119, 0.8575, 0.7921,  ..., 0.8758, 0.0517, 0.0243]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0467, 0.0178, 0.9515,  ..., 0.9533, 0.0262, 0.0536],
         [0.0467, 0.0178, 0.0162,  ..., 0.0159, 0.0262, 0.0536],
         [0.8599, 0.0178, 0.0162,  ..., 0.0154, 0.9214, 0.8393],
         [0.0467, 0.9467, 0.0162,  ..., 0.0154, 0.0262, 0.0536]],
        [[0.1284, 0.0101, 0.9827,  ..., 0.8706, 0.0242, 0.0191],
         [0.1284, 0.0101, 0.0058,  ..., 0.0476, 0.0367, 0.0191],
         [0.6147, 0.0101, 0.0058,  ..., 0.0397, 0.0242, 0.9426],
         [0.1284, 0.9697, 0.0058,  ..., 0.0421, 0.9150, 0.0191]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:09,187 [Process: 0] Synchronize training processes
2024-08-19 13:26:09,187 [Process: 0] Evaluating...
2024-08-19 13:26:09,189 [Process: 0] EPOCH 71:
2024-08-19 13:26:09,191 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:10,227 [Process: 0] Synchronize training processes
2024-08-19 13:26:10,228 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3494, 0.0241, 0.0257,  ..., 0.0781, 0.5384, 0.0925],
         [0.1883, 0.0205, 0.0257,  ..., 0.0668, 0.1496, 0.0983],
         [0.1704, 0.0205, 0.0257,  ..., 0.0668, 0.1504, 0.0925],
         [0.2918, 0.9348, 0.9230,  ..., 0.7883, 0.1616, 0.7166]],
        [[0.9718, 0.0286, 0.0246,  ..., 0.0642, 0.0076, 0.0296],
         [0.0094, 0.0284, 0.0246,  ..., 0.0642, 0.0076, 0.0296],
         [0.0094, 0.0284, 0.0246,  ..., 0.0642, 0.9771, 0.9113],
         [0.0094, 0.9146, 0.9263,  ..., 0.8075, 0.0076, 0.0296]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0303, 0.0161, 0.9893,  ..., 0.8803, 0.0277, 0.0405],
         [0.0303, 0.0161, 0.0036,  ..., 0.0421, 0.0277, 0.0405],
         [0.9092, 0.0161, 0.0036,  ..., 0.0388, 0.9170, 0.8785],
         [0.0303, 0.9516, 0.0036,  ..., 0.0388, 0.0277, 0.0405]],
        [[0.1097, 0.0607, 0.9777,  ..., 0.9233, 0.0119, 0.0534],
         [0.2191, 0.1129, 0.0074,  ..., 0.0256, 0.0119, 0.0534],
         [0.5615, 0.0607, 0.0074,  ..., 0.0256, 0.0119, 0.8399],
         [0.1097, 0.7656, 0.0074,  ..., 0.0256, 0.9643, 0.0534]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-19 13:26:11,206 [Process: 0] EPOCH 72:
2024-08-19 13:26:11,209 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:12,208 [Process: 0] Synchronize training processes
2024-08-19 13:26:12,209 [Process: 0] Evaluating...
2024-08-19 13:26:12,211 [Process: 0] EPOCH 73:
2024-08-19 13:26:12,212 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2991, 0.0558, 0.0765,  ..., 0.9533, 0.3473, 0.0853],
         [0.1451, 0.0558, 0.0731,  ..., 0.0168, 0.2253, 0.0853],
         [0.1366, 0.0558, 0.0837,  ..., 0.0150, 0.1554, 0.0853],
         [0.4192, 0.8327, 0.7667,  ..., 0.0150, 0.2719, 0.7441]],
        [[0.9964, 0.0202, 0.0476,  ..., 0.0657, 0.1082, 0.0688],
         [0.0012, 0.0202, 0.0442,  ..., 0.0750, 0.1082, 0.0688],
         [0.0012, 0.0202, 0.0442,  ..., 0.0657, 0.6755, 0.7936],
         [0.0012, 0.9395, 0.8640,  ..., 0.7937, 0.1082, 0.0688]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0376, 0.0728, 0.9868,  ..., 0.9691, 0.0377, 0.0343],
         [0.0376, 0.0384, 0.0044,  ..., 0.0103, 0.0377, 0.0343],
         [0.8871, 0.0384, 0.0044,  ..., 0.0103, 0.8869, 0.8971],
         [0.0376, 0.8505, 0.0044,  ..., 0.0103, 0.0377, 0.0343]],
        [[0.0691, 0.0115, 0.9629,  ..., 0.8430, 0.0402, 0.0431],
         [0.0691, 0.0115, 0.0124,  ..., 0.0563, 0.0428, 0.0431],
         [0.7928, 0.0115, 0.0124,  ..., 0.0504, 0.0402, 0.8708],
         [0.0691, 0.9654, 0.0124,  ..., 0.0504, 0.8769, 0.0431]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0862, 0.0579, 0.0610,  ..., 0.9469, 0.3650, 0.0902],
         [0.0862, 0.0579, 0.0610,  ..., 0.0177, 0.1429, 0.0892],
         [0.0882, 0.0739, 0.0610,  ..., 0.0177, 0.1354, 0.0892],
         [0.7393, 0.8103, 0.8171,  ..., 0.0177, 0.3567, 0.7314]],
        [[0.9904, 0.0470, 0.0459,  ..., 0.0506, 0.0802, 0.0744],
         [0.0032, 0.0470, 0.0459,  ..., 0.0506, 0.0802, 0.0744],
         [0.0032, 0.0476, 0.0459,  ..., 0.0506, 0.7595, 0.7769],
         [0.0032, 0.8583, 0.8623,  ..., 0.8483, 0.0802, 0.0744]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0741, 0.0076, 0.9685,  ..., 0.9295, 0.0669, 0.0608],
         [0.0741, 0.0076, 0.0105,  ..., 0.0228, 0.0669, 0.0608],
         [0.7776, 0.0076, 0.0105,  ..., 0.0228, 0.7993, 0.8177],
         [0.0741, 0.9773, 0.0105,  ..., 0.0249, 0.0669, 0.0608]],
        [[0.0817, 0.0599, 0.9968,  ..., 0.8819, 0.0990, 0.0292],
         [0.0820, 0.0476, 0.0011,  ..., 0.0394, 0.0899, 0.0292],
         [0.7547, 0.0476, 0.0011,  ..., 0.0394, 0.0727, 0.9124],
         [0.0817, 0.8450, 0.0011,  ..., 0.0394, 0.7384, 0.0292]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:13,247 [Process: 0] Synchronize training processes
2024-08-19 13:26:13,248 [Process: 0] Evaluating...
2024-08-19 13:26:13,249 [Process: 0] EPOCH 74:
2024-08-19 13:26:13,251 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:14,285 [Process: 0] Synchronize training processes
2024-08-19 13:26:14,286 [Process: 0] Evaluating...
2024-08-19 13:26:14,287 [Process: 0] EPOCH 75:
2024-08-19 13:26:14,289 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.0838e-02, 2.2778e-02, 2.6259e-02,  ..., 9.1136e-01,
          4.7995e-01, 7.5391e-02],
         [8.0838e-02, 2.2778e-02, 2.6259e-02,  ..., 3.0986e-02,
          1.6509e-01, 7.5391e-02],
         [8.0838e-02, 2.2778e-02, 2.6259e-02,  ..., 2.8829e-02,
          1.3408e-01, 8.2008e-02],
         [7.5749e-01, 9.3167e-01, 9.2122e-01,  ..., 2.8829e-02,
          2.2089e-01, 7.6721e-01]],
        [[9.9798e-01, 3.1600e-02, 2.4334e-02,  ..., 6.1021e-02,
          4.8245e-02, 1.8246e-02],
         [6.7440e-04, 3.1600e-02, 2.4334e-02,  ..., 6.1021e-02,
          4.8245e-02, 1.8246e-02],
         [6.7440e-04, 3.3215e-02, 2.4334e-02,  ..., 6.1021e-02,
          8.5527e-01, 9.4526e-01],
         [6.7440e-04, 9.0358e-01, 9.2700e-01,  ..., 8.1694e-01,
          4.8245e-02, 1.8246e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0470, 0.3628, 0.9411,  ..., 0.9874, 0.0652, 0.0250],
         [0.0470, 0.0597, 0.0196,  ..., 0.0042, 0.0652, 0.0250],
         [0.8589, 0.0597, 0.0196,  ..., 0.0042, 0.8043, 0.9249],
         [0.0470, 0.5177, 0.0196,  ..., 0.0042, 0.0652, 0.0250]],
        [[0.0638, 0.0083, 0.9093,  ..., 0.7563, 0.0057, 0.0562],
         [0.0731, 0.0083, 0.0302,  ..., 0.0496, 0.0057, 0.0562],
         [0.7994, 0.0083, 0.0302,  ..., 0.0496, 0.0057, 0.8314],
         [0.0638, 0.9751, 0.0302,  ..., 0.1444, 0.9829, 0.0562]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1010e-01, 2.6857e-02, 2.1950e-02,  ..., 7.0972e-01,
          2.9933e-01, 1.0625e-01],
         [1.7864e-01, 2.0527e-02, 2.0455e-02,  ..., 1.1353e-01,
          1.8098e-01, 1.0625e-01],
         [1.5226e-01, 2.0527e-02, 2.0455e-02,  ..., 9.3153e-02,
          1.7356e-01, 1.1557e-01],
         [3.5900e-01, 9.3209e-01, 9.3714e-01,  ..., 8.3598e-02,
          3.4613e-01, 6.7193e-01]],
        [[9.9914e-01, 4.2865e-02, 1.9713e-02,  ..., 2.5696e-02,
          4.6692e-02, 1.8770e-02],
         [2.8525e-04, 4.2865e-02, 1.9713e-02,  ..., 2.5696e-02,
          4.6692e-02, 1.8770e-02],
         [2.8525e-04, 4.2865e-02, 1.9713e-02,  ..., 2.5696e-02,
          8.5992e-01, 9.4369e-01],
         [2.8525e-04, 8.7140e-01, 9.4086e-01,  ..., 9.2291e-01,
          4.6692e-02, 1.8770e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0254, 0.0166, 0.9565,  ..., 0.9742, 0.0215, 0.0194],
         [0.0254, 0.0166, 0.0145,  ..., 0.0086, 0.0215, 0.0194],
         [0.9238, 0.0166, 0.0145,  ..., 0.0086, 0.9355, 0.9418],
         [0.0254, 0.9501, 0.0145,  ..., 0.0086, 0.0215, 0.0194]],
        [[0.1036, 0.0026, 0.9925,  ..., 0.8042, 0.0039, 0.0633],
         [0.1786, 0.0026, 0.0025,  ..., 0.0727, 0.0039, 0.0633],
         [0.6141, 0.0026, 0.0025,  ..., 0.0566, 0.0039, 0.8102],
         [0.1036, 0.9923, 0.0025,  ..., 0.0665, 0.9884, 0.0633]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:15,328 [Process: 0] Synchronize training processes
2024-08-19 13:26:15,328 [Process: 0] Evaluating...
2024-08-19 13:26:15,330 [Process: 0] EPOCH 76:
2024-08-19 13:26:15,331 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:16,373 [Process: 0] Synchronize training processes
2024-08-19 13:26:16,374 [Process: 0] Evaluating...
2024-08-19 13:26:16,375 [Process: 0] EPOCH 77:
2024-08-19 13:26:16,377 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2880, 0.0154, 0.0257,  ..., 0.3080, 0.1287, 0.0688],
         [0.1408, 0.0154, 0.0257,  ..., 0.1501, 0.1341, 0.0688],
         [0.1408, 0.0154, 0.0257,  ..., 0.1334, 0.1367, 0.0939],
         [0.4304, 0.9537, 0.9229,  ..., 0.4084, 0.6005, 0.7685]],
        [[0.9926, 0.0675, 0.0501,  ..., 0.0285, 0.1249, 0.0104],
         [0.0025, 0.0675, 0.0501,  ..., 0.0285, 0.1249, 0.0104],
         [0.0025, 0.0675, 0.0529,  ..., 0.0285, 0.5805, 0.9688],
         [0.0025, 0.7975, 0.8469,  ..., 0.9144, 0.1696, 0.0104]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0539, 0.0064, 0.9691,  ..., 0.9637, 0.0283, 0.0219],
         [0.0539, 0.0064, 0.0103,  ..., 0.0121, 0.0283, 0.0219],
         [0.8384, 0.0064, 0.0103,  ..., 0.0121, 0.9151, 0.9342],
         [0.0539, 0.9807, 0.0103,  ..., 0.0121, 0.0283, 0.0219]],
        [[0.0976, 0.0165, 0.9796,  ..., 0.7874, 0.0265, 0.0575],
         [0.6679, 0.0165, 0.0068,  ..., 0.0700, 0.0391, 0.0575],
         [0.1368, 0.0165, 0.0068,  ..., 0.0602, 0.0265, 0.8274],
         [0.0976, 0.9505, 0.0068,  ..., 0.0823, 0.9079, 0.0575]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9212, 0.0340, 0.0603,  ..., 0.7627, 0.7563, 0.0411],
         [0.0263, 0.0244, 0.0530,  ..., 0.0751, 0.0764, 0.0411],
         [0.0263, 0.0244, 0.0530,  ..., 0.0872, 0.0764, 0.0411],
         [0.0263, 0.9171, 0.8337,  ..., 0.0751, 0.0909, 0.8766]],
        [[0.9396, 0.1134, 0.0394,  ..., 0.0277, 0.0192, 0.0173],
         [0.0201, 0.1359, 0.0394,  ..., 0.0277, 0.0192, 0.0173],
         [0.0201, 0.1134, 0.0394,  ..., 0.0277, 0.9423, 0.9481],
         [0.0201, 0.6373, 0.8817,  ..., 0.9170, 0.0192, 0.0173]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1154, 0.0087, 0.9867,  ..., 0.9861, 0.0171, 0.0477],
         [0.1154, 0.0087, 0.0044,  ..., 0.0046, 0.0171, 0.0477],
         [0.6539, 0.0087, 0.0044,  ..., 0.0046, 0.9486, 0.8569],
         [0.1154, 0.9738, 0.0044,  ..., 0.0046, 0.0171, 0.0477]],
        [[0.1439, 0.0265, 0.9708,  ..., 0.9277, 0.6781, 0.0358],
         [0.4528, 0.0265, 0.0097,  ..., 0.0254, 0.1734, 0.0358],
         [0.2594, 0.0265, 0.0097,  ..., 0.0234, 0.0742, 0.8925],
         [0.1439, 0.9206, 0.0097,  ..., 0.0234, 0.0742, 0.0358]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:17,414 [Process: 0] Synchronize training processes
2024-08-19 13:26:17,414 [Process: 0] Evaluating...
2024-08-19 13:26:17,416 [Process: 0] EPOCH 78:
2024-08-19 13:26:17,418 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:18,447 [Process: 0] Synchronize training processes
2024-08-19 13:26:18,447 [Process: 0] Evaluating...
2024-08-19 13:26:18,449 [Process: 0] EPOCH 79:
2024-08-19 13:26:18,451 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8761, 0.0322, 0.0205,  ..., 0.9483, 0.3897, 0.0616],
         [0.0384, 0.0322, 0.0205,  ..., 0.0202, 0.1223, 0.0616],
         [0.0413, 0.0374, 0.0205,  ..., 0.0158, 0.1223, 0.0879],
         [0.0442, 0.8983, 0.9385,  ..., 0.0158, 0.3658, 0.7889]],
        [[0.9942, 0.0775, 0.0437,  ..., 0.0478, 0.0087, 0.0516],
         [0.0019, 0.0775, 0.0437,  ..., 0.0478, 0.0087, 0.0516],
         [0.0019, 0.0775, 0.0437,  ..., 0.0478, 0.9738, 0.8451],
         [0.0019, 0.7676, 0.8690,  ..., 0.8565, 0.0087, 0.0516]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1096, 0.0049, 0.9863,  ..., 0.9637, 0.0481, 0.0255],
         [0.1096, 0.0049, 0.0046,  ..., 0.0134, 0.0481, 0.0255],
         [0.6713, 0.0049, 0.0046,  ..., 0.0114, 0.8557, 0.9234],
         [0.1096, 0.9853, 0.0046,  ..., 0.0114, 0.0481, 0.0255]],
        [[0.1164, 0.0024, 0.9616,  ..., 0.9334, 0.0397, 0.0292],
         [0.6508, 0.0024, 0.0101,  ..., 0.0183, 0.0576, 0.0292],
         [0.1164, 0.0024, 0.0101,  ..., 0.0183, 0.0397, 0.9124],
         [0.1164, 0.9927, 0.0181,  ..., 0.0300, 0.8629, 0.0292]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7861, 0.0371, 0.0088,  ..., 0.9313, 0.7982, 0.0674],
         [0.0827, 0.0371, 0.0088,  ..., 0.0229, 0.0735, 0.0609],
         [0.0656, 0.0371, 0.0088,  ..., 0.0230, 0.0630, 0.0609],
         [0.0656, 0.8888, 0.9735,  ..., 0.0229, 0.0653, 0.8108]],
        [[0.9913, 0.0197, 0.0124,  ..., 0.0923, 0.0777, 0.0211],
         [0.0029, 0.0197, 0.0124,  ..., 0.0923, 0.0777, 0.0211],
         [0.0029, 0.0197, 0.0124,  ..., 0.5101, 0.7670, 0.9368],
         [0.0029, 0.9408, 0.9629,  ..., 0.3052, 0.0777, 0.0211]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.8085e-02, 8.3759e-04, 9.8528e-01,  ..., 9.7670e-01,
          2.2191e-02, 6.9640e-02],
         [8.8085e-02, 8.3759e-04, 3.4164e-03,  ..., 6.4804e-03,
          2.2191e-02, 6.9640e-02],
         [7.3575e-01, 8.3759e-04, 3.4164e-03,  ..., 6.4804e-03,
          9.3343e-01, 7.9108e-01],
         [8.8085e-02, 9.9749e-01, 7.8877e-03,  ..., 1.0343e-02,
          2.2191e-02, 6.9640e-02]],
        [[1.3777e-01, 8.3261e-04, 7.9543e-01,  ..., 7.8423e-01,
          2.9783e-01, 6.3176e-02],
         [6.0826e-01, 8.3261e-04, 7.7458e-02,  ..., 3.5388e-02,
          9.5220e-02, 5.4770e-02],
         [1.1475e-01, 8.3261e-04, 5.5691e-02,  ..., 3.5388e-02,
          8.8467e-02, 8.2729e-01],
         [1.3922e-01, 9.9750e-01, 7.1420e-02,  ..., 1.4499e-01,
          5.1848e-01, 5.4770e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:19,481 [Process: 0] Synchronize training processes
2024-08-19 13:26:19,481 [Process: 0] Evaluating...
2024-08-19 13:26:19,483 [Process: 0] EPOCH 80:
2024-08-19 13:26:19,485 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:20,532 [Process: 0] Synchronize training processes
2024-08-19 13:26:20,533 [Process: 0] Evaluating...
2024-08-19 13:26:20,535 [Process: 0] EPOCH 81:
2024-08-19 13:26:20,536 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4432, 0.0101, 0.0065,  ..., 0.7528, 0.6336, 0.2877],
         [0.1565, 0.0101, 0.0065,  ..., 0.1289, 0.1029, 0.1036],
         [0.1238, 0.0101, 0.0065,  ..., 0.0592, 0.1011, 0.1036],
         [0.2765, 0.9698, 0.9806,  ..., 0.0592, 0.1624, 0.5051]],
        [[0.9918, 0.0384, 0.0765,  ..., 0.1093, 0.0268, 0.0259],
         [0.0027, 0.0384, 0.0765,  ..., 0.1093, 0.0268, 0.0259],
         [0.0027, 0.0670, 0.1412,  ..., 0.6088, 0.9196, 0.9222],
         [0.0027, 0.8561, 0.7058,  ..., 0.1726, 0.0268, 0.0259]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0594, 0.0071, 0.9912,  ..., 0.9937, 0.0406, 0.0303],
         [0.0594, 0.0069, 0.0029,  ..., 0.0021, 0.0406, 0.0303],
         [0.8218, 0.0069, 0.0029,  ..., 0.0021, 0.8783, 0.9090],
         [0.0594, 0.9791, 0.0029,  ..., 0.0021, 0.0406, 0.0303]],
        [[0.1532, 0.0052, 0.9764,  ..., 0.9664, 0.2436, 0.0311],
         [0.2728, 0.0052, 0.0079,  ..., 0.0112, 0.0993, 0.0311],
         [0.2667, 0.0052, 0.0079,  ..., 0.0112, 0.0993, 0.9066],
         [0.3074, 0.9845, 0.0079,  ..., 0.0112, 0.5578, 0.0311]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1310, 0.0278, 0.0253,  ..., 0.8688, 0.1410, 0.2720],
         [0.1310, 0.0278, 0.0253,  ..., 0.0481, 0.1632, 0.1224],
         [0.5532, 0.0278, 0.0253,  ..., 0.0415, 0.5199, 0.1231],
         [0.1848, 0.9165, 0.9240,  ..., 0.0415, 0.1759, 0.4825]],
        [[0.9026, 0.0259, 0.0386,  ..., 0.0345, 0.0346, 0.0495],
         [0.0298, 0.0259, 0.0386,  ..., 0.0345, 0.0321, 0.0441],
         [0.0298, 0.0259, 0.0465,  ..., 0.0345, 0.9013, 0.8623],
         [0.0377, 0.9223, 0.8764,  ..., 0.8966, 0.0321, 0.0441]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0237, 0.0066, 0.9895,  ..., 0.9286, 0.0471, 0.0244],
         [0.0237, 0.0066, 0.0035,  ..., 0.0184, 0.0471, 0.0244],
         [0.9289, 0.0066, 0.0035,  ..., 0.0184, 0.8587, 0.9267],
         [0.0237, 0.9801, 0.0035,  ..., 0.0347, 0.0471, 0.0244]],
        [[0.1140, 0.0030, 0.9598,  ..., 0.9552, 0.0036, 0.0224],
         [0.5465, 0.0030, 0.0134,  ..., 0.0129, 0.0036, 0.0224],
         [0.2256, 0.0030, 0.0134,  ..., 0.0129, 0.0036, 0.9328],
         [0.1140, 0.9909, 0.0134,  ..., 0.0190, 0.9892, 0.0224]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:26:21,581 [Process: 0] Synchronize training processes
2024-08-19 13:26:21,582 [Process: 0] Evaluating...
2024-08-19 13:26:22,584 [Process: 0] EPOCH 82:
2024-08-19 13:26:22,587 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1521, 0.0204, 0.0242,  ..., 0.8104, 0.2497, 0.1085],
         [0.1991, 0.0204, 0.0239,  ..., 0.1083, 0.2075, 0.1085],
         [0.1521, 0.0204, 0.0239,  ..., 0.0407, 0.2064, 0.1085],
         [0.4967, 0.9388, 0.9280,  ..., 0.0407, 0.3364, 0.6744]],
        [[0.9466, 0.0361, 0.0375,  ..., 0.0347, 0.0165, 0.0707],
         [0.0178, 0.0361, 0.0375,  ..., 0.0347, 0.0165, 0.0638],
         [0.0178, 0.0361, 0.0375,  ..., 0.0347, 0.9504, 0.8016],
         [0.0178, 0.8917, 0.8875,  ..., 0.8959, 0.0165, 0.0638]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0732, 0.0119, 0.9662,  ..., 0.9431, 0.0287, 0.0430],
         [0.0732, 0.0119, 0.0113,  ..., 0.0183, 0.0287, 0.0430],
         [0.7644, 0.0119, 0.0113,  ..., 0.0183, 0.9140, 0.8005],
         [0.0892, 0.9644, 0.0113,  ..., 0.0202, 0.0287, 0.1135]],
        [[0.0855, 0.0030, 0.9887,  ..., 0.8705, 0.0030, 0.0744],
         [0.5080, 0.0030, 0.0038,  ..., 0.0552, 0.0030, 0.0744],
         [0.3211, 0.0030, 0.0038,  ..., 0.0371, 0.0030, 0.7767],
         [0.0855, 0.9910, 0.0038,  ..., 0.0371, 0.9909, 0.0744]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:23,581 [Process: 0] Synchronize training processes
2024-08-19 13:26:23,581 [Process: 0] Evaluating...
2024-08-19 13:26:23,583 [Process: 0] EPOCH 83:
2024-08-19 13:26:23,585 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:24,627 [Process: 0] Synchronize training processes
2024-08-19 13:26:24,627 [Process: 0] Evaluating...
2024-08-19 13:26:24,629 [Process: 0] EPOCH 84:
2024-08-19 13:26:24,631 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3951, 0.0075, 0.0558,  ..., 0.9809, 0.3448, 0.0873],
         [0.2016, 0.0075, 0.0558,  ..., 0.0071, 0.1925, 0.0870],
         [0.1473, 0.0075, 0.0558,  ..., 0.0060, 0.1854, 0.0956],
         [0.2560, 0.9776, 0.8327,  ..., 0.0060, 0.2773, 0.7300]],
        [[0.9662, 0.0273, 0.0160,  ..., 0.0675, 0.0182, 0.0901],
         [0.0113, 0.0273, 0.0160,  ..., 0.0675, 0.0182, 0.0901],
         [0.0113, 0.0314, 0.0160,  ..., 0.0675, 0.9454, 0.7297],
         [0.0113, 0.9140, 0.9520,  ..., 0.7975, 0.0182, 0.0901]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.5461e-02, 3.3230e-02, 9.8593e-01,  ..., 9.7231e-01,
          3.2947e-02, 1.5760e-02],
         [4.5461e-02, 3.3230e-02, 4.6896e-03,  ..., 9.2292e-03,
          3.2947e-02, 1.5760e-02],
         [8.6362e-01, 3.3230e-02, 4.6896e-03,  ..., 9.2292e-03,
          8.8228e-01, 9.5272e-01],
         [4.5461e-02, 9.0031e-01, 4.6896e-03,  ..., 9.2292e-03,
          5.1829e-02, 1.5760e-02]],
        [[1.1292e-01, 5.0482e-04, 9.6766e-01,  ..., 9.5478e-01,
          4.2654e-03, 2.2101e-02],
         [6.0883e-01, 5.0482e-04, 1.0779e-02,  ..., 1.4261e-02,
          4.2654e-03, 2.2101e-02],
         [1.6532e-01, 5.0482e-04, 1.0779e-02,  ..., 1.4261e-02,
          4.2654e-03, 9.3370e-01],
         [1.1292e-01, 9.9849e-01, 1.0779e-02,  ..., 1.6693e-02,
          9.8720e-01, 2.2101e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6046, 0.0386, 0.0295,  ..., 0.9545, 0.7026, 0.0368],
         [0.1291, 0.0386, 0.0230,  ..., 0.0168, 0.1012, 0.0368],
         [0.1121, 0.0386, 0.0230,  ..., 0.0144, 0.0881, 0.0368],
         [0.1541, 0.8842, 0.9244,  ..., 0.0144, 0.1081, 0.8895]],
        [[0.9745, 0.0340, 0.0257,  ..., 0.0341, 0.0231, 0.0779],
         [0.0085, 0.0340, 0.0257,  ..., 0.0341, 0.0231, 0.0779],
         [0.0085, 0.0340, 0.0260,  ..., 0.0341, 0.9307, 0.7663],
         [0.0085, 0.8979, 0.9227,  ..., 0.8977, 0.0231, 0.0779]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0475, 0.0322, 0.9949,  ..., 0.9857, 0.0239, 0.0740],
         [0.0475, 0.0322, 0.0017,  ..., 0.0048, 0.0239, 0.0740],
         [0.8575, 0.0322, 0.0017,  ..., 0.0048, 0.9284, 0.7509],
         [0.0475, 0.9034, 0.0017,  ..., 0.0048, 0.0239, 0.1011]],
        [[0.1426, 0.0067, 0.9461,  ..., 0.9880, 0.0061, 0.0615],
         [0.4893, 0.0067, 0.0171,  ..., 0.0040, 0.0061, 0.0555],
         [0.2255, 0.0067, 0.0171,  ..., 0.0040, 0.0061, 0.8275],
         [0.1426, 0.9800, 0.0198,  ..., 0.0040, 0.9818, 0.0555]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:25,669 [Process: 0] Synchronize training processes
2024-08-19 13:26:25,669 [Process: 0] Evaluating...
2024-08-19 13:26:25,671 [Process: 0] EPOCH 85:
2024-08-19 13:26:25,673 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:26,708 [Process: 0] Synchronize training processes
2024-08-19 13:26:26,708 [Process: 0] Evaluating...
2024-08-19 13:26:26,710 [Process: 0] EPOCH 86:
2024-08-19 13:26:26,712 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7809, 0.0247, 0.0409,  ..., 0.9557, 0.5602, 0.0310],
         [0.0784, 0.0247, 0.0409,  ..., 0.0206, 0.1496, 0.0310],
         [0.0703, 0.0247, 0.0409,  ..., 0.0119, 0.1182, 0.0310],
         [0.0703, 0.9258, 0.8774,  ..., 0.0119, 0.1720, 0.9071]],
        [[0.9367, 0.0183, 0.0394,  ..., 0.0140, 0.0224, 0.0814],
         [0.0203, 0.0183, 0.0349,  ..., 0.0140, 0.0224, 0.0814],
         [0.0227, 0.0183, 0.0349,  ..., 0.0140, 0.9327, 0.7559],
         [0.0203, 0.9450, 0.8907,  ..., 0.9579, 0.0224, 0.0814]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0305, 0.0141, 0.9719,  ..., 0.9815, 0.0080, 0.0068],
         [0.0305, 0.0141, 0.0094,  ..., 0.0062, 0.0080, 0.0068],
         [0.9085, 0.0141, 0.0094,  ..., 0.0062, 0.9759, 0.9796],
         [0.0305, 0.9578, 0.0094,  ..., 0.0062, 0.0080, 0.0068]],
        [[0.0787, 0.0101, 0.9401,  ..., 0.8045, 0.0192, 0.0600],
         [0.1535, 0.0077, 0.0200,  ..., 0.0814, 0.0192, 0.0600],
         [0.6890, 0.0077, 0.0200,  ..., 0.0570, 0.0192, 0.7998],
         [0.0787, 0.9746, 0.0200,  ..., 0.0570, 0.9425, 0.0802]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7876, 0.0164, 0.0358,  ..., 0.9470, 0.7978, 0.0186],
         [0.0660, 0.0164, 0.0358,  ..., 0.0248, 0.0659, 0.0186],
         [0.0660, 0.0164, 0.0358,  ..., 0.0141, 0.0700, 0.0186],
         [0.0804, 0.9507, 0.8927,  ..., 0.0141, 0.0663, 0.9441]],
        [[0.9763, 0.0622, 0.0232,  ..., 0.0606, 0.0110, 0.0636],
         [0.0079, 0.0622, 0.0232,  ..., 0.0688, 0.0110, 0.0636],
         [0.0079, 0.0622, 0.0232,  ..., 0.0606, 0.9669, 0.8092],
         [0.0079, 0.8135, 0.9303,  ..., 0.8099, 0.0110, 0.0636]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0578, 0.0024, 0.9786,  ..., 0.9883, 0.0100, 0.0262],
         [0.0578, 0.0024, 0.0071,  ..., 0.0039, 0.0100, 0.0262],
         [0.8267, 0.0024, 0.0071,  ..., 0.0039, 0.9701, 0.9215],
         [0.0578, 0.9929, 0.0071,  ..., 0.0039, 0.0100, 0.0262]],
        [[0.0717, 0.0017, 0.9544,  ..., 0.9126, 0.1067, 0.0475],
         [0.0813, 0.0017, 0.0149,  ..., 0.0259, 0.0335, 0.0445],
         [0.7752, 0.0017, 0.0149,  ..., 0.0259, 0.0335, 0.8634],
         [0.0717, 0.9948, 0.0157,  ..., 0.0355, 0.8263, 0.0445]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:26:27,749 [Process: 0] Synchronize training processes
2024-08-19 13:26:27,750 [Process: 0] Evaluating...
2024-08-19 13:26:27,751 [Process: 0] EPOCH 87:
2024-08-19 13:26:27,753 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:28,789 [Process: 0] Synchronize training processes
2024-08-19 13:26:28,790 [Process: 0] Evaluating...
2024-08-19 13:26:28,791 [Process: 0] EPOCH 88:
2024-08-19 13:26:28,793 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8285, 0.0281, 0.0213,  ..., 0.9679, 0.5322, 0.0568],
         [0.0607, 0.0259, 0.0213,  ..., 0.0107, 0.1067, 0.0568],
         [0.0564, 0.0259, 0.0213,  ..., 0.0107, 0.1100, 0.0568],
         [0.0544, 0.9201, 0.9360,  ..., 0.0107, 0.2510, 0.8295]],
        [[0.9573, 0.0240, 0.0099,  ..., 0.0756, 0.0077, 0.0721],
         [0.0152, 0.0240, 0.0099,  ..., 0.0756, 0.0077, 0.0721],
         [0.0137, 0.0240, 0.0099,  ..., 0.0756, 0.9768, 0.7838],
         [0.0137, 0.9279, 0.9702,  ..., 0.7732, 0.0077, 0.0721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.6927e-02, 2.2484e-02, 9.6234e-01,  ..., 9.6444e-01,
          3.3960e-02, 4.6063e-02],
         [4.6927e-02, 2.2484e-02, 1.2646e-02,  ..., 7.3107e-03,
          3.3960e-02, 4.6063e-02],
         [8.5922e-01, 2.2484e-02, 1.2505e-02,  ..., 7.3107e-03,
          8.9812e-01, 8.6181e-01],
         [4.6927e-02, 9.3255e-01, 1.2505e-02,  ..., 2.0937e-02,
          3.3960e-02, 4.6063e-02]],
        [[9.0951e-02, 3.1215e-04, 9.5816e-01,  ..., 9.1234e-01,
          4.7210e-02, 6.0542e-02],
         [5.2006e-01, 3.1215e-04, 1.3946e-02,  ..., 3.5534e-02,
          1.5756e-02, 6.0542e-02],
         [2.9804e-01, 3.1215e-04, 1.3946e-02,  ..., 2.6065e-02,
          1.5756e-02, 8.1837e-01],
         [9.0951e-02, 9.9906e-01, 1.3946e-02,  ..., 2.6065e-02,
          9.2128e-01, 6.0542e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8065, 0.0408, 0.0423,  ..., 0.9429, 0.7478, 0.0594],
         [0.0660, 0.0394, 0.0423,  ..., 0.0186, 0.0727, 0.0594],
         [0.0649, 0.0394, 0.0423,  ..., 0.0198, 0.0727, 0.0908],
         [0.0625, 0.8805, 0.8730,  ..., 0.0186, 0.1068, 0.7903]],
        [[0.9609, 0.0197, 0.0201,  ..., 0.0557, 0.0263, 0.0490],
         [0.0127, 0.0197, 0.0201,  ..., 0.0557, 0.0263, 0.0490],
         [0.0137, 0.0197, 0.0201,  ..., 0.0557, 0.9211, 0.8530],
         [0.0127, 0.9410, 0.9398,  ..., 0.8329, 0.0263, 0.0490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-19 13:26:29,831 [Process: 0] Synchronize training processes
2024-08-19 13:26:29,831 [Process: 0] Evaluating...
2024-08-19 13:26:29,833 [Process: 0] EPOCH 89:
2024-08-19 13:26:29,835 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:30,870 [Process: 0] Synchronize training processes
2024-08-19 13:26:30,871 [Process: 0] Evaluating...
2024-08-19 13:26:30,873 [Process: 0] EPOCH 90:
2024-08-19 13:26:30,874 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.0619, 0.0323, 0.9833,  ..., 0.9898, 0.0244, 0.0127],
         [0.0619, 0.0323, 0.0056,  ..., 0.0034, 0.0244, 0.0127],
         [0.8111, 0.0323, 0.0056,  ..., 0.0034, 0.9269, 0.9620],
         [0.0652, 0.9031, 0.0056,  ..., 0.0034, 0.0244, 0.0127]],
        [[0.1305, 0.0100, 0.9417,  ..., 0.9136, 0.1610, 0.0385],
         [0.3201, 0.0100, 0.0194,  ..., 0.0282, 0.0224, 0.0385],
         [0.4189, 0.0100, 0.0194,  ..., 0.0282, 0.0224, 0.8846],
         [0.1305, 0.9701, 0.0194,  ..., 0.0301, 0.7942, 0.0385]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7996, 0.0055, 0.0566,  ..., 0.9044, 0.8820, 0.0356],
         [0.0854, 0.0055, 0.0566,  ..., 0.0460, 0.0399, 0.0356],
         [0.0575, 0.0055, 0.0566,  ..., 0.0248, 0.0391, 0.0356],
         [0.0575, 0.9834, 0.8303,  ..., 0.0248, 0.0391, 0.8931]],
        [[0.9785, 0.0275, 0.0406,  ..., 0.0216, 0.0069, 0.0367],
         [0.0072, 0.0275, 0.0406,  ..., 0.0216, 0.0069, 0.0367],
         [0.0072, 0.0275, 0.0406,  ..., 0.0216, 0.9792, 0.8898],
         [0.0072, 0.9176, 0.8783,  ..., 0.9351, 0.0069, 0.0367]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0430, 0.0229, 0.9779,  ..., 0.9698, 0.0174, 0.0257],
         [0.0430, 0.0229, 0.0074,  ..., 0.0101, 0.0174, 0.0257],
         [0.8709, 0.0229, 0.0074,  ..., 0.0101, 0.9477, 0.9229],
         [0.0430, 0.9313, 0.0074,  ..., 0.0101, 0.0174, 0.0257]],
        [[0.0846, 0.0063, 0.9607,  ..., 0.8939, 0.1014, 0.0539],
         [0.0846, 0.0063, 0.0131,  ..., 0.0432, 0.0221, 0.0539],
         [0.7461, 0.0063, 0.0131,  ..., 0.0315, 0.0221, 0.8383],
         [0.0846, 0.9811, 0.0131,  ..., 0.0315, 0.8544, 0.0539]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8444, 0.0311, 0.0511,  ..., 0.9477, 0.8628, 0.0514],
         [0.0620, 0.0311, 0.0483,  ..., 0.0174, 0.0536, 0.0514],
         [0.0468, 0.0311, 0.0483,  ..., 0.0174, 0.0418, 0.0514],
         [0.0468, 0.9067, 0.8524,  ..., 0.0174, 0.0418, 0.8457]],
        [[0.9781, 0.0406, 0.0688,  ..., 0.0151, 0.0125, 0.1381],
         [0.0073, 0.0406, 0.0688,  ..., 0.0151, 0.0125, 0.1182],
         [0.0073, 0.0406, 0.0746,  ..., 0.0151, 0.9626, 0.5538],
         [0.0073, 0.8782, 0.7878,  ..., 0.9547, 0.0125, 0.1899]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-19 13:26:31,912 [Process: 0] Synchronize training processes
2024-08-19 13:26:31,912 [Process: 0] Evaluating...
2024-08-19 13:26:31,914 [Process: 0] EPOCH 91:
2024-08-19 13:26:31,915 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:32,952 [Process: 0] Synchronize training processes
2024-08-19 13:26:32,952 [Process: 0] Evaluating...
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2803e-02, 1.8449e-02, 9.9076e-01,  ..., 9.9775e-01,
          1.7896e-02, 3.1318e-02],
         [2.9896e-02, 2.5239e-02, 3.0811e-03,  ..., 7.4843e-04,
          1.6601e-02, 3.1318e-02],
         [9.0740e-01, 1.8449e-02, 3.0811e-03,  ..., 7.4843e-04,
          9.4890e-01, 9.0605e-01],
         [2.9896e-02, 9.3786e-01, 3.0811e-03,  ..., 7.4843e-04,
          1.6601e-02, 3.1318e-02]],
        [[6.5511e-02, 5.6680e-03, 9.8536e-01,  ..., 9.4791e-01,
          8.4487e-03, 4.1562e-02],
         [6.5511e-02, 5.6680e-03, 4.8795e-03,  ..., 1.7362e-02,
          7.4334e-03, 4.1562e-02],
         [8.0347e-01, 5.6680e-03, 4.8795e-03,  ..., 1.7362e-02,
          7.4334e-03, 8.7532e-01],
         [6.5511e-02, 9.8300e-01, 4.8795e-03,  ..., 1.7362e-02,
          9.7668e-01, 4.1562e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9427, 0.0513, 0.0359,  ..., 0.9948, 0.6034, 0.0402],
         [0.0191, 0.0513, 0.0359,  ..., 0.0017, 0.1217, 0.0402],
         [0.0191, 0.0609, 0.0359,  ..., 0.0017, 0.1006, 0.0402],
         [0.0191, 0.8366, 0.8922,  ..., 0.0017, 0.1743, 0.8795]],
        [[0.8093, 0.0546, 0.0363,  ..., 0.0245, 0.0113, 0.0484],
         [0.0587, 0.0546, 0.0363,  ..., 0.0245, 0.0113, 0.0484],
         [0.0734, 0.0546, 0.0363,  ..., 0.0245, 0.9661, 0.8549],
         [0.0587, 0.8363, 0.8910,  ..., 0.9264, 0.0113, 0.0484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0257, 0.0222, 0.9823,  ..., 0.9869, 0.0156, 0.0145],
         [0.0257, 0.0222, 0.0059,  ..., 0.0044, 0.0156, 0.0145],
         [0.9228, 0.0222, 0.0059,  ..., 0.0044, 0.9533, 0.9565],
         [0.0257, 0.9333, 0.0059,  ..., 0.0044, 0.0156, 0.0145]],
        [[0.0481, 0.0073, 0.9725,  ..., 0.9372, 0.1794, 0.0340],
         [0.0535, 0.0073, 0.0092,  ..., 0.0234, 0.0533, 0.0340],
         [0.8503, 0.0073, 0.0092,  ..., 0.0195, 0.0533, 0.8981],
         [0.0481, 0.9780, 0.0092,  ..., 0.0198, 0.7141, 0.0340]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:26:33,936 [Process: 0] EPOCH 92:
2024-08-19 13:26:33,939 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:34,936 [Process: 0] Synchronize training processes
2024-08-19 13:26:34,936 [Process: 0] Evaluating...
2024-08-19 13:26:34,938 [Process: 0] EPOCH 93:
2024-08-19 13:26:34,940 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7137, 0.0432, 0.0356,  ..., 0.9564, 0.7909, 0.1466],
         [0.0806, 0.0432, 0.0356,  ..., 0.0145, 0.0656, 0.1077],
         [0.1085, 0.0432, 0.0356,  ..., 0.0145, 0.0621, 0.1114],
         [0.0973, 0.8704, 0.8933,  ..., 0.0145, 0.0814, 0.6343]],
        [[0.9865, 0.0252, 0.0357,  ..., 0.0682, 0.0090, 0.0263],
         [0.0045, 0.0252, 0.0357,  ..., 0.0615, 0.0090, 0.0263],
         [0.0045, 0.0252, 0.0357,  ..., 0.0615, 0.9729, 0.9210],
         [0.0045, 0.9244, 0.8930,  ..., 0.8089, 0.0090, 0.0263]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0283, 0.0098, 0.9743,  ..., 0.9458, 0.0202, 0.0452],
         [0.0283, 0.0098, 0.0079,  ..., 0.0181, 0.0202, 0.0426],
         [0.9150, 0.0098, 0.0079,  ..., 0.0181, 0.9395, 0.8696],
         [0.0283, 0.9706, 0.0099,  ..., 0.0181, 0.0202, 0.0426]],
        [[0.0863, 0.0290, 0.9789,  ..., 0.8223, 0.0019, 0.0298],
         [0.1729, 0.0290, 0.0070,  ..., 0.0523, 0.0019, 0.0298],
         [0.6544, 0.0290, 0.0070,  ..., 0.0449, 0.0019, 0.9106],
         [0.0863, 0.9129, 0.0070,  ..., 0.0805, 0.9942, 0.0298]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6931, 0.0514, 0.0484,  ..., 0.9408, 0.7583, 0.0719],
         [0.1028, 0.0526, 0.0484,  ..., 0.0263, 0.0918, 0.0719],
         [0.1026, 0.0649, 0.0529,  ..., 0.0164, 0.0750, 0.0820],
         [0.1015, 0.8311, 0.8504,  ..., 0.0164, 0.0750, 0.7742]],
        [[0.9922, 0.0280, 0.0583,  ..., 0.0211, 0.0013, 0.0164],
         [0.0026, 0.0280, 0.0419,  ..., 0.0211, 0.0013, 0.0164],
         [0.0026, 0.0280, 0.0419,  ..., 0.0211, 0.9962, 0.9507],
         [0.0026, 0.9161, 0.8579,  ..., 0.9367, 0.0013, 0.0164]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:26:35,977 [Process: 0] Synchronize training processes
2024-08-19 13:26:35,977 [Process: 0] Evaluating...
2024-08-19 13:26:35,979 [Process: 0] EPOCH 94:
2024-08-19 13:26:35,981 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:37,016 [Process: 0] Synchronize training processes
2024-08-19 13:26:37,017 [Process: 0] Evaluating...
2024-08-19 13:26:37,018 [Process: 0] EPOCH 95:
2024-08-19 13:26:37,020 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0637, 0.0157, 0.9854,  ..., 0.9769, 0.0245, 0.0322],
         [0.0494, 0.0054, 0.0049,  ..., 0.0077, 0.0245, 0.0322],
         [0.8375, 0.0054, 0.0049,  ..., 0.0077, 0.9266, 0.9034],
         [0.0494, 0.9735, 0.0049,  ..., 0.0077, 0.0245, 0.0322]],
        [[0.0718, 0.0035, 0.9528,  ..., 0.9430, 0.0055, 0.0280],
         [0.0902, 0.0035, 0.0153,  ..., 0.0219, 0.0055, 0.0280],
         [0.7662, 0.0035, 0.0153,  ..., 0.0176, 0.0055, 0.9159],
         [0.0718, 0.9894, 0.0165,  ..., 0.0176, 0.9834, 0.0280]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4527e-01, 3.5177e-02, 4.2551e-02,  ..., 9.4757e-01,
          2.4044e-01, 4.9859e-02],
         [2.2518e-01, 3.5177e-02, 4.2551e-02,  ..., 1.6724e-02,
          2.2775e-01, 4.9859e-02],
         [1.8481e-01, 3.5177e-02, 4.2551e-02,  ..., 1.8978e-02,
          2.1444e-01, 6.3907e-02],
         [4.4473e-01, 8.9447e-01, 8.7235e-01,  ..., 1.6724e-02,
          3.1737e-01, 8.3638e-01]],
        [[9.9729e-01, 5.1846e-02, 4.2284e-02,  ..., 3.3665e-02,
          1.1197e-02, 2.6077e-02],
         [9.0203e-04, 5.1846e-02, 4.2284e-02,  ..., 3.3665e-02,
          1.1197e-02, 2.6077e-02],
         [9.0203e-04, 5.1846e-02, 5.6741e-02,  ..., 3.3665e-02,
          9.6641e-01, 9.2177e-01],
         [9.0203e-04, 8.4446e-01, 8.5869e-01,  ..., 8.9901e-01,
          1.1197e-02, 2.6077e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0326, 0.0088, 0.9839,  ..., 0.9967, 0.0404, 0.0395],
         [0.0326, 0.0065, 0.0054,  ..., 0.0011, 0.0404, 0.0395],
         [0.9023, 0.0065, 0.0054,  ..., 0.0011, 0.8789, 0.8816],
         [0.0326, 0.9781, 0.0054,  ..., 0.0011, 0.0404, 0.0395]],
        [[0.0708, 0.0252, 0.9530,  ..., 0.9068, 0.0151, 0.0216],
         [0.1260, 0.0252, 0.0178,  ..., 0.0256, 0.0075, 0.0216],
         [0.7325, 0.0252, 0.0146,  ..., 0.0256, 0.0075, 0.9352],
         [0.0708, 0.9245, 0.0146,  ..., 0.0421, 0.9699, 0.0216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6332, 0.0470, 0.0319,  ..., 0.7723, 0.0923, 0.0221],
         [0.1472, 0.0470, 0.0319,  ..., 0.1337, 0.1001, 0.0221],
         [0.0957, 0.0470, 0.0319,  ..., 0.0470, 0.7154, 0.0221],
         [0.1239, 0.8590, 0.9044,  ..., 0.0470, 0.0923, 0.9337]],
        [[0.9962, 0.0277, 0.0322,  ..., 0.0398, 0.0075, 0.0076],
         [0.0013, 0.0277, 0.0322,  ..., 0.0398, 0.0075, 0.0076],
         [0.0013, 0.0277, 0.0322,  ..., 0.0398, 0.9775, 0.9771],
         [0.0013, 0.9169, 0.9033,  ..., 0.8807, 0.0075, 0.0076]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:26:38,055 [Process: 0] Synchronize training processes
2024-08-19 13:26:38,056 [Process: 0] Evaluating...
2024-08-19 13:26:38,057 [Process: 0] EPOCH 96:
2024-08-19 13:26:38,059 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:39,094 [Process: 0] Synchronize training processes
2024-08-19 13:26:39,094 [Process: 0] Evaluating...
2024-08-19 13:26:39,096 [Process: 0] EPOCH 97:
2024-08-19 13:26:39,098 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0502, 0.0016, 0.9816,  ..., 0.9926, 0.0494, 0.0247],
         [0.0502, 0.0016, 0.0061,  ..., 0.0024, 0.0494, 0.0247],
         [0.8495, 0.0016, 0.0061,  ..., 0.0024, 0.8518, 0.9259],
         [0.0502, 0.9952, 0.0061,  ..., 0.0025, 0.0494, 0.0247]],
        [[0.1105, 0.0045, 0.9775,  ..., 0.9791, 0.0280, 0.0390],
         [0.1498, 0.0040, 0.0075,  ..., 0.0070, 0.0147, 0.0390],
         [0.6164, 0.0040, 0.0075,  ..., 0.0070, 0.0147, 0.8831],
         [0.1233, 0.9874, 0.0075,  ..., 0.0070, 0.9427, 0.0390]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9620, 0.0191, 0.0200,  ..., 0.8220, 0.3128, 0.0558],
         [0.0127, 0.0191, 0.0200,  ..., 0.1021, 0.3526, 0.0558],
         [0.0127, 0.0191, 0.0200,  ..., 0.0380, 0.1471, 0.0809],
         [0.0127, 0.9426, 0.9400,  ..., 0.0380, 0.1875, 0.8074]],
        [[0.9922, 0.0565, 0.0528,  ..., 0.0251, 0.0024, 0.0139],
         [0.0026, 0.0565, 0.0452,  ..., 0.0251, 0.0024, 0.0139],
         [0.0026, 0.0565, 0.0452,  ..., 0.0251, 0.9929, 0.9584],
         [0.0026, 0.8305, 0.8568,  ..., 0.9248, 0.0024, 0.0139]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0509, 0.0036, 0.9830,  ..., 0.9735, 0.0249, 0.0296],
         [0.0509, 0.0036, 0.0057,  ..., 0.0085, 0.0249, 0.0296],
         [0.8473, 0.0036, 0.0057,  ..., 0.0085, 0.9254, 0.9113],
         [0.0509, 0.9892, 0.0057,  ..., 0.0095, 0.0249, 0.0296]],
        [[0.0782, 0.0095, 0.9822,  ..., 0.9270, 0.0058, 0.0146],
         [0.1234, 0.0095, 0.0059,  ..., 0.0183, 0.0058, 0.0146],
         [0.7201, 0.0095, 0.0059,  ..., 0.0183, 0.0058, 0.9563],
         [0.0782, 0.9716, 0.0059,  ..., 0.0364, 0.9826, 0.0146]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9743, 0.0707, 0.0352,  ..., 0.9569, 0.9300, 0.0272],
         [0.0086, 0.0707, 0.0352,  ..., 0.0144, 0.0233, 0.0272],
         [0.0086, 0.0755, 0.0352,  ..., 0.0144, 0.0233, 0.0272],
         [0.0086, 0.7831, 0.8945,  ..., 0.0144, 0.0233, 0.9184]],
        [[0.9659, 0.0119, 0.0312,  ..., 0.0298, 0.0086, 0.0015],
         [0.0106, 0.0119, 0.0312,  ..., 0.0298, 0.0086, 0.0015],
         [0.0129, 0.0119, 0.0312,  ..., 0.0298, 0.9741, 0.9955],
         [0.0106, 0.9643, 0.9065,  ..., 0.9106, 0.0086, 0.0015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:26:40,134 [Process: 0] Synchronize training processes
2024-08-19 13:26:40,135 [Process: 0] Evaluating...
2024-08-19 13:26:40,136 [Process: 0] EPOCH 98:
2024-08-19 13:26:40,138 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:41,172 [Process: 0] Synchronize training processes
2024-08-19 13:26:41,172 [Process: 0] Evaluating...
2024-08-19 13:26:41,174 [Process: 0] EPOCH 99:
2024-08-19 13:26:41,176 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0670, 0.0039, 0.9501,  ..., 0.9744, 0.0371, 0.0252],
         [0.0642, 0.0039, 0.0166,  ..., 0.0085, 0.0304, 0.0227],
         [0.8046, 0.0039, 0.0166,  ..., 0.0085, 0.9022, 0.9293],
         [0.0642, 0.9884, 0.0166,  ..., 0.0085, 0.0304, 0.0227]],
        [[0.0440, 0.0055, 0.9788,  ..., 0.9700, 0.0983, 0.0234],
         [0.0440, 0.0055, 0.0071,  ..., 0.0100, 0.0411, 0.0234],
         [0.8681, 0.0055, 0.0071,  ..., 0.0100, 0.0411, 0.9297],
         [0.0440, 0.9834, 0.0071,  ..., 0.0100, 0.8195, 0.0234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9135, 0.0158, 0.0187,  ..., 0.9054, 0.7471, 0.0379],
         [0.0289, 0.0158, 0.0187,  ..., 0.0591, 0.0735, 0.0379],
         [0.0288, 0.0158, 0.0187,  ..., 0.0178, 0.0784, 0.0379],
         [0.0288, 0.9527, 0.9440,  ..., 0.0178, 0.1009, 0.8864]],
        [[0.9877, 0.0169, 0.0476,  ..., 0.0249, 0.0101, 0.0203],
         [0.0041, 0.0157, 0.0476,  ..., 0.0249, 0.0101, 0.0203],
         [0.0041, 0.0157, 0.0580,  ..., 0.0249, 0.9696, 0.9390],
         [0.0041, 0.9517, 0.8467,  ..., 0.9253, 0.0101, 0.0203]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3275e-02, 1.0923e-02, 9.3339e-01,  ..., 9.8892e-01,
          1.1442e-02, 4.2681e-02],
         [3.3275e-02, 1.0923e-02, 2.3440e-02,  ..., 3.6919e-03,
          1.1442e-02, 4.2681e-02],
         [9.0017e-01, 1.0923e-02, 2.1584e-02,  ..., 3.6919e-03,
          9.6567e-01, 8.7196e-01],
         [3.3275e-02, 9.6723e-01, 2.1584e-02,  ..., 3.6919e-03,
          1.1442e-02, 4.2681e-02]],
        [[7.4128e-02, 7.0123e-04, 9.7160e-01,  ..., 9.4948e-01,
          5.8735e-01, 1.3593e-02],
         [9.2959e-02, 7.0123e-04, 9.4659e-03,  ..., 1.5954e-02,
          5.5188e-02, 1.3593e-02],
         [7.5878e-01, 7.0123e-04, 9.4659e-03,  ..., 1.5954e-02,
          5.5188e-02, 9.5922e-01],
         [7.4128e-02, 9.9790e-01, 9.4659e-03,  ..., 1.8609e-02,
          3.0228e-01, 1.3593e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9653, 0.0238, 0.0160,  ..., 0.9306, 0.0702, 0.0381],
         [0.0116, 0.0238, 0.0160,  ..., 0.0438, 0.0702, 0.0381],
         [0.0116, 0.0238, 0.0160,  ..., 0.0128, 0.0702, 0.0381],
         [0.0116, 0.9287, 0.9519,  ..., 0.0128, 0.7894, 0.8856]],
        [[0.9878, 0.2350, 0.0148,  ..., 0.0520, 0.0180, 0.0187],
         [0.0041, 0.0971, 0.0148,  ..., 0.0418, 0.0180, 0.0187],
         [0.0041, 0.0971, 0.0148,  ..., 0.0418, 0.9461, 0.9440],
         [0.0041, 0.5708, 0.9556,  ..., 0.8644, 0.0180, 0.0187]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:26:42,219 [Process: 0] Synchronize training processes
2024-08-19 13:26:42,219 [Process: 0] Evaluating...
2024-08-19 13:26:42,221 [Process: 0] EPOCH 100:
2024-08-19 13:26:42,223 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0374, 0.0019, 0.9947,  ..., 0.9927, 0.0242, 0.0301],
         [0.0372, 0.0019, 0.0018,  ..., 0.0024, 0.0242, 0.0301],
         [0.8881, 0.0019, 0.0018,  ..., 0.0024, 0.9275, 0.9096],
         [0.0372, 0.9942, 0.0018,  ..., 0.0024, 0.0242, 0.0301]],
        [[0.0775, 0.0048, 0.9906,  ..., 0.9512, 0.0532, 0.0266],
         [0.0775, 0.0048, 0.0031,  ..., 0.0163, 0.0327, 0.0266],
         [0.7537, 0.0048, 0.0031,  ..., 0.0163, 0.0327, 0.9203],
         [0.0912, 0.9855, 0.0031,  ..., 0.0163, 0.8814, 0.0266]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9645, 0.0238, 0.0914,  ..., 0.9538, 0.1924, 0.0168],
         [0.0118, 0.0238, 0.0914,  ..., 0.0220, 0.1275, 0.0168],
         [0.0118, 0.0238, 0.1418,  ..., 0.0121, 0.1784, 0.0168],
         [0.0118, 0.9285, 0.6755,  ..., 0.0121, 0.5018, 0.9497]],
        [[0.9917, 0.1523, 0.0434,  ..., 0.0162, 0.0278, 0.0540],
         [0.0028, 0.0909, 0.0434,  ..., 0.0162, 0.0278, 0.0514],
         [0.0028, 0.1199, 0.0434,  ..., 0.0162, 0.9165, 0.8431],
         [0.0028, 0.6369, 0.8699,  ..., 0.9514, 0.0278, 0.0514]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3312e-02, 7.5402e-03, 9.9813e-01,  ..., 9.9402e-01,
          1.2579e-02, 1.0698e-02],
         [2.3312e-02, 7.5402e-03, 6.2273e-04,  ..., 1.9933e-03,
          1.2579e-02, 1.0698e-02],
         [9.3006e-01, 7.5402e-03, 6.2273e-04,  ..., 1.9933e-03,
          9.6226e-01, 9.6791e-01],
         [2.3312e-02, 9.7738e-01, 6.2273e-04,  ..., 1.9933e-03,
          1.2579e-02, 1.0698e-02]],
        [[6.2701e-02, 4.9803e-03, 8.5768e-01,  ..., 9.0099e-01,
          1.2837e-02, 1.6451e-02],
         [6.2701e-02, 4.9803e-03, 4.0120e-02,  ..., 3.3003e-02,
          8.8970e-03, 1.6451e-02],
         [8.1190e-01, 4.9803e-03, 4.0120e-02,  ..., 3.3003e-02,
          8.8970e-03, 9.5065e-01],
         [6.2701e-02, 9.8506e-01, 6.2084e-02,  ..., 3.3003e-02,
          9.6937e-01, 1.6451e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7904, 0.0434, 0.0538,  ..., 0.9746, 0.7762, 0.0469],
         [0.0688, 0.0434, 0.0538,  ..., 0.0113, 0.0806, 0.0469],
         [0.0600, 0.0434, 0.1024,  ..., 0.0071, 0.0727, 0.0478],
         [0.0809, 0.8699, 0.7899,  ..., 0.0071, 0.0704, 0.8584]],
        [[0.9924, 0.0377, 0.0344,  ..., 0.0770, 0.0025, 0.0160],
         [0.0025, 0.0387, 0.0473,  ..., 0.0531, 0.0025, 0.0160],
         [0.0025, 0.0468, 0.0344,  ..., 0.0531, 0.9924, 0.9520],
         [0.0025, 0.8768, 0.8839,  ..., 0.8167, 0.0025, 0.0160]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:26:43,257 [Process: 0] Synchronize training processes
2024-08-19 13:26:43,258 [Process: 0] Evaluating...
2024-08-19 13:26:43,259 [Process: 0] EPOCH 101:
2024-08-19 13:26:43,261 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:44,300 [Process: 0] Synchronize training processes
2024-08-19 13:26:44,301 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0193, 0.0061, 0.9803,  ..., 0.9958, 0.0319, 0.0198],
         [0.0193, 0.0061, 0.0066,  ..., 0.0014, 0.0319, 0.0198],
         [0.9420, 0.0061, 0.0066,  ..., 0.0014, 0.9042, 0.9405],
         [0.0193, 0.9818, 0.0066,  ..., 0.0014, 0.0319, 0.0198]],
        [[0.0904, 0.0014, 0.9866,  ..., 0.9773, 0.0355, 0.0177],
         [0.1481, 0.0014, 0.0045,  ..., 0.0076, 0.0129, 0.0177],
         [0.6711, 0.0014, 0.0045,  ..., 0.0076, 0.0129, 0.9469],
         [0.0904, 0.9957, 0.0045,  ..., 0.0076, 0.9388, 0.0177]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7948, 0.0182, 0.0370,  ..., 0.9391, 0.8736, 0.0361],
         [0.0540, 0.0182, 0.0370,  ..., 0.0258, 0.0378, 0.0349],
         [0.0714, 0.0202, 0.0370,  ..., 0.0176, 0.0507, 0.0349],
         [0.0798, 0.9433, 0.8889,  ..., 0.0176, 0.0378, 0.8941]],
        [[0.9791, 0.0269, 0.0223,  ..., 0.0831, 0.0174, 0.0098],
         [0.0070, 0.0269, 0.0223,  ..., 0.0907, 0.0174, 0.0098],
         [0.0070, 0.0269, 0.0223,  ..., 0.1091, 0.9478, 0.9705],
         [0.0070, 0.9193, 0.9332,  ..., 0.7171, 0.0174, 0.0098]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:26:45,284 [Process: 0] EPOCH 102:
2024-08-19 13:26:45,287 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:46,288 [Process: 0] Synchronize training processes
2024-08-19 13:26:46,288 [Process: 0] Evaluating...
2024-08-19 13:26:46,290 [Process: 0] EPOCH 103:
2024-08-19 13:26:46,291 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0357, 0.0158, 0.9877,  ..., 0.9888, 0.0332, 0.0203],
         [0.0357, 0.0158, 0.0041,  ..., 0.0037, 0.0332, 0.0203],
         [0.8928, 0.0158, 0.0041,  ..., 0.0037, 0.9003, 0.9392],
         [0.0357, 0.9526, 0.0041,  ..., 0.0037, 0.0332, 0.0203]],
        [[0.1069, 0.0194, 0.9948,  ..., 0.9314, 0.0051, 0.0240],
         [0.2189, 0.0207, 0.0017,  ..., 0.0191, 0.0051, 0.0237],
         [0.5598, 0.0194, 0.0017,  ..., 0.0191, 0.0051, 0.9286],
         [0.1144, 0.9406, 0.0017,  ..., 0.0304, 0.9846, 0.0237]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7834, 0.0286, 0.0348,  ..., 0.9801, 0.7246, 0.0478],
         [0.0581, 0.0220, 0.0348,  ..., 0.0066, 0.0726, 0.0478],
         [0.0594, 0.0220, 0.0400,  ..., 0.0068, 0.1166, 0.0628],
         [0.0991, 0.9274, 0.8903,  ..., 0.0066, 0.0862, 0.8416]],
        [[0.9793, 0.0293, 0.0683,  ..., 0.0499, 0.0087, 0.0394],
         [0.0069, 0.0293, 0.0754,  ..., 0.0499, 0.0087, 0.0394],
         [0.0069, 0.0293, 0.0683,  ..., 0.0556, 0.9738, 0.8819],
         [0.0069, 0.9122, 0.7881,  ..., 0.8446, 0.0087, 0.0394]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0239, 0.0061, 0.9919,  ..., 0.9778, 0.0353, 0.0176],
         [0.0239, 0.0061, 0.0027,  ..., 0.0074, 0.0353, 0.0176],
         [0.9284, 0.0061, 0.0027,  ..., 0.0074, 0.8920, 0.9473],
         [0.0239, 0.9817, 0.0027,  ..., 0.0074, 0.0373, 0.0176]],
        [[0.1021, 0.0039, 0.9438,  ..., 0.8817, 0.0027, 0.0254],
         [0.1992, 0.0044, 0.0183,  ..., 0.0270, 0.0027, 0.0254],
         [0.5966, 0.0039, 0.0183,  ..., 0.0270, 0.0027, 0.9238],
         [0.1021, 0.9878, 0.0196,  ..., 0.0644, 0.9919, 0.0254]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9221, 0.0288, 0.0766,  ..., 0.9901, 0.8604, 0.0201],
         [0.0260, 0.0288, 0.0766,  ..., 0.0033, 0.0423, 0.0201],
         [0.0260, 0.0288, 0.1125,  ..., 0.0033, 0.0513, 0.0201],
         [0.0260, 0.9136, 0.7343,  ..., 0.0033, 0.0460, 0.9397]],
        [[0.9522, 0.0164, 0.0204,  ..., 0.0359, 0.0423, 0.0117],
         [0.0159, 0.0164, 0.0204,  ..., 0.0359, 0.0423, 0.0117],
         [0.0159, 0.0164, 0.0204,  ..., 0.0396, 0.8732, 0.9648],
         [0.0159, 0.9508, 0.9388,  ..., 0.8887, 0.0423, 0.0117]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:26:47,328 [Process: 0] Synchronize training processes
2024-08-19 13:26:47,329 [Process: 0] Evaluating...
2024-08-19 13:26:47,330 [Process: 0] EPOCH 104:
2024-08-19 13:26:47,332 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:48,379 [Process: 0] Synchronize training processes
2024-08-19 13:26:48,380 [Process: 0] Evaluating...
2024-08-19 13:26:48,381 [Process: 0] EPOCH 105:
2024-08-19 13:26:48,383 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.1225e-02, 7.0669e-04, 9.8604e-01,  ..., 9.9240e-01,
          4.9742e-02, 2.4252e-02],
         [6.1001e-02, 7.0669e-04, 4.6539e-03,  ..., 2.5331e-03,
          4.9742e-02, 2.4252e-02],
         [8.1677e-01, 7.0669e-04, 4.6539e-03,  ..., 2.5331e-03,
          8.5078e-01, 9.2724e-01],
         [6.1001e-02, 9.9788e-01, 4.6539e-03,  ..., 2.5331e-03,
          4.9742e-02, 2.4252e-02]],
        [[2.1579e-02, 3.7367e-02, 9.9186e-01,  ..., 9.7432e-01,
          5.9902e-03, 2.0147e-02],
         [2.1579e-02, 2.5868e-02, 2.7150e-03,  ..., 8.5604e-03,
          5.9902e-03, 2.0147e-02],
         [9.3526e-01, 2.5868e-02, 2.7150e-03,  ..., 8.5604e-03,
          5.9902e-03, 9.3956e-01],
         [2.1579e-02, 9.1090e-01, 2.7150e-03,  ..., 8.5604e-03,
          9.8203e-01, 2.0147e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9399, 0.0596, 0.0945,  ..., 0.9767, 0.8773, 0.0212],
         [0.0199, 0.0946, 0.1513,  ..., 0.0127, 0.0409, 0.0269],
         [0.0202, 0.0605, 0.0940,  ..., 0.0053, 0.0409, 0.0212],
         [0.0199, 0.7853, 0.6602,  ..., 0.0053, 0.0409, 0.9308]],
        [[0.9528, 0.0065, 0.0215,  ..., 0.0254, 0.0081, 0.0325],
         [0.0155, 0.0065, 0.0215,  ..., 0.0254, 0.0081, 0.0325],
         [0.0161, 0.0065, 0.0215,  ..., 0.0254, 0.9758, 0.9025],
         [0.0155, 0.9806, 0.9354,  ..., 0.9237, 0.0081, 0.0325]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0957e-01, 2.8805e-02, 9.9575e-01,  ..., 9.8025e-01,
          4.7580e-02, 2.6506e-02],
         [1.4499e-01, 2.8805e-02, 1.4155e-03,  ..., 6.5321e-03,
          4.7580e-02, 2.6506e-02],
         [6.4570e-01, 5.1234e-02, 1.4155e-03,  ..., 6.5321e-03,
          8.5726e-01, 9.2048e-01],
         [9.9746e-02, 8.9116e-01, 1.4155e-03,  ..., 6.6868e-03,
          4.7580e-02, 2.6506e-02]],
        [[3.5455e-02, 1.3579e-02, 9.9527e-01,  ..., 9.7789e-01,
          2.3774e-03, 2.2887e-02],
         [5.2469e-02, 1.0451e-02, 1.5778e-03,  ..., 7.3704e-03,
          9.2857e-04, 2.2887e-02],
         [8.7662e-01, 1.0451e-02, 1.5778e-03,  ..., 7.3704e-03,
          9.2857e-04, 9.3134e-01],
         [3.5455e-02, 9.6552e-01, 1.5778e-03,  ..., 7.3704e-03,
          9.9577e-01, 2.2887e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:26:49,419 [Process: 0] Synchronize training processes
2024-08-19 13:26:49,420 [Process: 0] Evaluating...
2024-08-19 13:26:49,421 [Process: 0] EPOCH 106:
2024-08-19 13:26:49,423 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:50,459 [Process: 0] Synchronize training processes
2024-08-19 13:26:50,460 [Process: 0] Evaluating...
2024-08-19 13:26:50,461 [Process: 0] EPOCH 107:
2024-08-19 13:26:50,463 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7259e-01, 2.6206e-02, 1.8189e-01,  ..., 9.8848e-01,
          8.2461e-01, 3.5839e-02],
         [8.9941e-03, 2.6206e-02, 1.6105e-01,  ..., 4.6456e-03,
          6.8869e-02, 3.5839e-02],
         [9.4220e-03, 2.6206e-02, 1.7562e-01,  ..., 3.4375e-03,
          5.3424e-02, 3.6232e-02],
         [8.9941e-03, 9.2138e-01, 4.8144e-01,  ..., 3.4375e-03,
          5.3101e-02, 8.9209e-01]],
        [[9.9705e-01, 3.7434e-02, 1.5306e-02,  ..., 2.2577e-02,
          7.3685e-03, 4.5740e-02],
         [9.8180e-04, 3.0713e-02, 1.5306e-02,  ..., 1.9639e-02,
          7.3685e-03, 4.5740e-02],
         [9.8180e-04, 3.0713e-02, 1.5306e-02,  ..., 1.9639e-02,
          9.7789e-01, 8.6278e-01],
         [9.8180e-04, 9.0114e-01, 9.5408e-01,  ..., 9.3814e-01,
          7.3685e-03, 4.5740e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0313, 0.0205, 0.9915,  ..., 0.9953, 0.0164, 0.0194],
         [0.0313, 0.0205, 0.0028,  ..., 0.0016, 0.0164, 0.0194],
         [0.9061, 0.0232, 0.0028,  ..., 0.0016, 0.9507, 0.9417],
         [0.0313, 0.9359, 0.0028,  ..., 0.0016, 0.0164, 0.0194]],
        [[0.0319, 0.0012, 0.9813,  ..., 0.9758, 0.0258, 0.0452],
         [0.0498, 0.0012, 0.0056,  ..., 0.0096, 0.0157, 0.0452],
         [0.8864, 0.0012, 0.0056,  ..., 0.0073, 0.0157, 0.8643],
         [0.0319, 0.9965, 0.0075,  ..., 0.0073, 0.9428, 0.0452]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9115, 0.0088, 0.0201,  ..., 0.9842, 0.7274, 0.0320],
         [0.0408, 0.0101, 0.0201,  ..., 0.0055, 0.0750, 0.0320],
         [0.0238, 0.0088, 0.0201,  ..., 0.0051, 0.0807, 0.0360],
         [0.0238, 0.9723, 0.9398,  ..., 0.0051, 0.1169, 0.9000]],
        [[0.9667, 0.0219, 0.0211,  ..., 0.0390, 0.0037, 0.0672],
         [0.0111, 0.0219, 0.0198,  ..., 0.0394, 0.0037, 0.0672],
         [0.0111, 0.0219, 0.0198,  ..., 0.0390, 0.9888, 0.7888],
         [0.0111, 0.9344, 0.9393,  ..., 0.8825, 0.0037, 0.0768]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0277, 0.0082, 0.9760,  ..., 0.9829, 0.0389, 0.0312],
         [0.0277, 0.0082, 0.0074,  ..., 0.0057, 0.0389, 0.0312],
         [0.9168, 0.0082, 0.0074,  ..., 0.0057, 0.8834, 0.9063],
         [0.0277, 0.9753, 0.0093,  ..., 0.0057, 0.0389, 0.0312]],
        [[0.0325, 0.0035, 0.9874,  ..., 0.9869, 0.0071, 0.0362],
         [0.0336, 0.0035, 0.0042,  ..., 0.0044, 0.0062, 0.0362],
         [0.9014, 0.0035, 0.0042,  ..., 0.0044, 0.0062, 0.8913],
         [0.0325, 0.9896, 0.0042,  ..., 0.0044, 0.9804, 0.0362]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:51,504 [Process: 0] Synchronize training processes
2024-08-19 13:26:51,505 [Process: 0] Evaluating...
2024-08-19 13:26:51,506 [Process: 0] EPOCH 108:
2024-08-19 13:26:51,508 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:52,545 [Process: 0] Synchronize training processes
2024-08-19 13:26:52,545 [Process: 0] Evaluating...
2024-08-19 13:26:52,547 [Process: 0] EPOCH 109:
2024-08-19 13:26:52,549 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9150, 0.0096, 0.0234,  ..., 0.9141, 0.7611, 0.0366],
         [0.0283, 0.0096, 0.0234,  ..., 0.0549, 0.0694, 0.0305],
         [0.0283, 0.0096, 0.0234,  ..., 0.0155, 0.0736, 0.0305],
         [0.0283, 0.9713, 0.9298,  ..., 0.0155, 0.0958, 0.9025]],
        [[0.9902, 0.0202, 0.0241,  ..., 0.0159, 0.0050, 0.0562],
         [0.0031, 0.0202, 0.0241,  ..., 0.0159, 0.0050, 0.0551],
         [0.0037, 0.0202, 0.0241,  ..., 0.0159, 0.9850, 0.8336],
         [0.0031, 0.9393, 0.9278,  ..., 0.9524, 0.0050, 0.0551]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0540, 0.0018, 0.9688,  ..., 0.9871, 0.0266, 0.0371],
         [0.0540, 0.0018, 0.0104,  ..., 0.0043, 0.0266, 0.0371],
         [0.8379, 0.0018, 0.0104,  ..., 0.0043, 0.9201, 0.8888],
         [0.0540, 0.9947, 0.0104,  ..., 0.0043, 0.0266, 0.0371]],
        [[0.0939, 0.0079, 0.9775,  ..., 0.9101, 0.7396, 0.0302],
         [0.2222, 0.0079, 0.0075,  ..., 0.0261, 0.0454, 0.0286],
         [0.5899, 0.0079, 0.0075,  ..., 0.0261, 0.0454, 0.9126],
         [0.0939, 0.9764, 0.0075,  ..., 0.0377, 0.1696, 0.0286]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9934, 0.0283, 0.0381,  ..., 0.9449, 0.5163, 0.0154],
         [0.0022, 0.0283, 0.0381,  ..., 0.0159, 0.1264, 0.0154],
         [0.0022, 0.0283, 0.0440,  ..., 0.0232, 0.1771, 0.0154],
         [0.0022, 0.9151, 0.8798,  ..., 0.0159, 0.1802, 0.9538]],
        [[0.9920, 0.1139, 0.0481,  ..., 0.0345, 0.0030, 0.0272],
         [0.0026, 0.0884, 0.0481,  ..., 0.0345, 0.0030, 0.0247],
         [0.0028, 0.1563, 0.0692,  ..., 0.0374, 0.9909, 0.9234],
         [0.0026, 0.6414, 0.8346,  ..., 0.8936, 0.0030, 0.0247]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1155, 0.0091, 0.9913,  ..., 0.9932, 0.0451, 0.0260],
         [0.1753, 0.0091, 0.0029,  ..., 0.0023, 0.0451, 0.0257],
         [0.6239, 0.0091, 0.0029,  ..., 0.0023, 0.8639, 0.9225],
         [0.0853, 0.9727, 0.0029,  ..., 0.0023, 0.0459, 0.0257]],
        [[0.0961, 0.0071, 0.8018,  ..., 0.9880, 0.0044, 0.0094],
         [0.1351, 0.0071, 0.0327,  ..., 0.0040, 0.0044, 0.0094],
         [0.6730, 0.0071, 0.0327,  ..., 0.0040, 0.0044, 0.9719],
         [0.0958, 0.9788, 0.1329,  ..., 0.0040, 0.9868, 0.0094]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:53,583 [Process: 0] Synchronize training processes
2024-08-19 13:26:53,583 [Process: 0] Evaluating...
2024-08-19 13:26:53,585 [Process: 0] EPOCH 110:
2024-08-19 13:26:53,587 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:54,623 [Process: 0] Synchronize training processes
2024-08-19 13:26:54,624 [Process: 0] Evaluating...
2024-08-19 13:26:54,625 [Process: 0] EPOCH 111:
2024-08-19 13:26:54,627 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9484e-01, 1.6685e-02, 4.2326e-02,  ..., 9.6128e-01,
          8.8102e-01, 4.4076e-02],
         [1.7192e-03, 1.6685e-02, 4.7143e-02,  ..., 1.4228e-02,
          3.4499e-02, 5.4800e-02],
         [1.7192e-03, 1.6685e-02, 4.5874e-02,  ..., 1.2246e-02,
          3.4499e-02, 4.7932e-02],
         [1.7192e-03, 9.4994e-01, 8.6466e-01,  ..., 1.2246e-02,
          4.9982e-02, 8.5319e-01]],
        [[9.9785e-01, 3.9948e-02, 4.3322e-02,  ..., 2.5959e-02,
          1.5074e-02, 3.4760e-02],
         [7.1749e-04, 3.9948e-02, 4.3322e-02,  ..., 2.9554e-02,
          1.5074e-02, 3.4760e-02],
         [7.1749e-04, 3.9948e-02, 4.5611e-02,  ..., 2.5959e-02,
          9.5478e-01, 8.9572e-01],
         [7.1749e-04, 8.8016e-01, 8.6775e-01,  ..., 9.1853e-01,
          1.5074e-02, 3.4760e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.3557e-02, 1.5152e-02, 9.9840e-01,  ..., 9.8812e-01,
          2.6300e-02, 4.4718e-02],
         [6.3613e-02, 1.3251e-02, 5.3259e-04,  ..., 3.9590e-03,
          2.6178e-02, 4.1743e-02],
         [8.2927e-01, 1.3251e-02, 5.3259e-04,  ..., 3.9590e-03,
          9.2134e-01, 8.7180e-01],
         [5.3557e-02, 9.5835e-01, 5.3259e-04,  ..., 3.9590e-03,
          2.6178e-02, 4.1743e-02]],
        [[9.5445e-02, 1.1744e-03, 9.8716e-01,  ..., 8.0626e-03,
          1.8884e-02, 7.3532e-03],
         [3.0096e-01, 1.1744e-03, 4.2797e-03,  ..., 6.5376e-03,
          1.8884e-02, 7.3532e-03],
         [5.0815e-01, 1.1744e-03, 4.2797e-03,  ..., 6.5376e-03,
          1.8884e-02, 9.7794e-01],
         [9.5445e-02, 9.9648e-01, 4.2797e-03,  ..., 9.7886e-01,
          9.4335e-01, 7.3532e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9950, 0.0103, 0.0203,  ..., 0.9815, 0.8969, 0.0435],
         [0.0017, 0.0103, 0.0203,  ..., 0.0074, 0.0355, 0.0438],
         [0.0017, 0.0103, 0.0203,  ..., 0.0055, 0.0363, 0.0435],
         [0.0017, 0.9691, 0.9392,  ..., 0.0055, 0.0313, 0.8693]],
        [[0.9941, 0.0145, 0.0190,  ..., 0.0135, 0.0161, 0.0197],
         [0.0020, 0.0145, 0.0190,  ..., 0.0135, 0.0161, 0.0197],
         [0.0020, 0.0145, 0.0190,  ..., 0.0135, 0.9517, 0.9408],
         [0.0020, 0.9565, 0.9430,  ..., 0.9596, 0.0161, 0.0197]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0693, 0.0061, 0.9831,  ..., 0.9850, 0.0375, 0.0269],
         [0.0677, 0.0061, 0.0056,  ..., 0.0050, 0.0375, 0.0269],
         [0.8000, 0.0061, 0.0056,  ..., 0.0050, 0.8756, 0.9192],
         [0.0630, 0.9816, 0.0056,  ..., 0.0050, 0.0494, 0.0269]],
        [[0.0291, 0.0033, 0.9967,  ..., 0.0807, 0.0270, 0.0200],
         [0.0392, 0.0033, 0.0011,  ..., 0.0349, 0.0258, 0.0200],
         [0.9026, 0.0033, 0.0011,  ..., 0.0349, 0.0258, 0.9401],
         [0.0291, 0.9901, 0.0011,  ..., 0.8494, 0.9214, 0.0200]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:26:55,667 [Process: 0] Synchronize training processes
2024-08-19 13:26:55,667 [Process: 0] Evaluating...
2024-08-19 13:26:56,645 [Process: 0] EPOCH 112:
2024-08-19 13:26:56,648 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9949, 0.0413, 0.0063,  ..., 0.9708, 0.7215, 0.0541],
         [0.0017, 0.0436, 0.0063,  ..., 0.0094, 0.0910, 0.0415],
         [0.0017, 0.0413, 0.0063,  ..., 0.0103, 0.1063, 0.0415],
         [0.0017, 0.8738, 0.9812,  ..., 0.0094, 0.0812, 0.8629]],
        [[0.9314, 0.0228, 0.0121,  ..., 0.1248, 0.0180, 0.0128],
         [0.0354, 0.0228, 0.0121,  ..., 0.0579, 0.0180, 0.0128],
         [0.0166, 0.0228, 0.0121,  ..., 0.0579, 0.9461, 0.9615],
         [0.0166, 0.9315, 0.9636,  ..., 0.7594, 0.0180, 0.0128]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0347, 0.0183, 0.9846,  ..., 0.9956, 0.0206, 0.0248],
         [0.0636, 0.0106, 0.0051,  ..., 0.0015, 0.0206, 0.0248],
         [0.8671, 0.0106, 0.0051,  ..., 0.0015, 0.9381, 0.9257],
         [0.0347, 0.9605, 0.0051,  ..., 0.0015, 0.0206, 0.0248]],
        [[0.0274, 0.0020, 0.9851,  ..., 0.9916, 0.0160, 0.0262],
         [0.0274, 0.0016, 0.0050,  ..., 0.0028, 0.0126, 0.0262],
         [0.9177, 0.0016, 0.0050,  ..., 0.0028, 0.0126, 0.9214],
         [0.0274, 0.9947, 0.0050,  ..., 0.0028, 0.9589, 0.0262]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:57,645 [Process: 0] Synchronize training processes
2024-08-19 13:26:57,645 [Process: 0] Evaluating...
2024-08-19 13:26:57,647 [Process: 0] EPOCH 113:
2024-08-19 13:26:57,649 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:58,684 [Process: 0] Synchronize training processes
2024-08-19 13:26:58,684 [Process: 0] Evaluating...
2024-08-19 13:26:58,686 [Process: 0] EPOCH 114:
2024-08-19 13:26:58,687 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9895, 0.0121, 0.0325,  ..., 0.9907, 0.8380, 0.0108],
         [0.0035, 0.0121, 0.0325,  ..., 0.0051, 0.0473, 0.0108],
         [0.0035, 0.0121, 0.0325,  ..., 0.0021, 0.0473, 0.0108],
         [0.0035, 0.9638, 0.9025,  ..., 0.0021, 0.0675, 0.9677]],
        [[0.9893, 0.0314, 0.0179,  ..., 0.0369, 0.0053, 0.0026],
         [0.0036, 0.0314, 0.0179,  ..., 0.0369, 0.0053, 0.0026],
         [0.0036, 0.0314, 0.0187,  ..., 0.0468, 0.9842, 0.9922],
         [0.0036, 0.9058, 0.9455,  ..., 0.8793, 0.0053, 0.0026]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0388, 0.0037, 0.9949,  ..., 0.9481, 0.0135, 0.0278],
         [0.0416, 0.0037, 0.0017,  ..., 0.0157, 0.0135, 0.0278],
         [0.8808, 0.0037, 0.0017,  ..., 0.0157, 0.9596, 0.9166],
         [0.0388, 0.9888, 0.0017,  ..., 0.0205, 0.0135, 0.0278]],
        [[0.0192, 0.0074, 0.9894,  ..., 0.9792, 0.0122, 0.0353],
         [0.0192, 0.0074, 0.0037,  ..., 0.0069, 0.0105, 0.0353],
         [0.9423, 0.0074, 0.0035,  ..., 0.0069, 0.0105, 0.8746],
         [0.0192, 0.9777, 0.0035,  ..., 0.0069, 0.9668, 0.0549]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9884, 0.0092, 0.0227,  ..., 0.9870, 0.2396, 0.0324],
         [0.0039, 0.0092, 0.0227,  ..., 0.0062, 0.1370, 0.0324],
         [0.0039, 0.0092, 0.0227,  ..., 0.0034, 0.1018, 0.0476],
         [0.0039, 0.9723, 0.9319,  ..., 0.0034, 0.5216, 0.8875]],
        [[0.9953, 0.0350, 0.0232,  ..., 0.0284, 0.0229, 0.0157],
         [0.0016, 0.0350, 0.0232,  ..., 0.0284, 0.0229, 0.0157],
         [0.0016, 0.0350, 0.0232,  ..., 0.0284, 0.9312, 0.9528],
         [0.0016, 0.8950, 0.9304,  ..., 0.9148, 0.0229, 0.0157]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0151, 0.0079, 0.9881,  ..., 0.9707, 0.0073, 0.0228],
         [0.0151, 0.0079, 0.0040,  ..., 0.0101, 0.0073, 0.0228],
         [0.9548, 0.0079, 0.0040,  ..., 0.0096, 0.9780, 0.9316],
         [0.0151, 0.9764, 0.0040,  ..., 0.0096, 0.0073, 0.0228]],
        [[0.0181, 0.0016, 0.9923,  ..., 0.9887, 0.0065, 0.0370],
         [0.0181, 0.0016, 0.0026,  ..., 0.0038, 0.0065, 0.0370],
         [0.9457, 0.0016, 0.0026,  ..., 0.0038, 0.0065, 0.8850],
         [0.0181, 0.9952, 0.0026,  ..., 0.0038, 0.9805, 0.0410]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:26:59,713 [Process: 0] Synchronize training processes
2024-08-19 13:26:59,713 [Process: 0] Evaluating...
2024-08-19 13:26:59,715 [Process: 0] EPOCH 115:
2024-08-19 13:26:59,717 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:00,757 [Process: 0] Synchronize training processes
2024-08-19 13:27:00,758 [Process: 0] Evaluating...
2024-08-19 13:27:00,759 [Process: 0] EPOCH 116:
2024-08-19 13:27:00,761 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9958, 0.0119, 0.0190,  ..., 0.9842, 0.6348, 0.0413],
         [0.0014, 0.0119, 0.0190,  ..., 0.0053, 0.0841, 0.0413],
         [0.0014, 0.0119, 0.0207,  ..., 0.0053, 0.1274, 0.0582],
         [0.0014, 0.9644, 0.9413,  ..., 0.0053, 0.1536, 0.8592]],
        [[0.9917, 0.0118, 0.0233,  ..., 0.0190, 0.0225, 0.0067],
         [0.0026, 0.0118, 0.0233,  ..., 0.0190, 0.0225, 0.0067],
         [0.0032, 0.0118, 0.0328,  ..., 0.0190, 0.9326, 0.9800],
         [0.0026, 0.9647, 0.9206,  ..., 0.9429, 0.0225, 0.0067]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0078, 0.0030, 0.9554,  ..., 0.9958, 0.0064, 0.0224],
         [0.0078, 0.0030, 0.0149,  ..., 0.0014, 0.0064, 0.0224],
         [0.9766, 0.0030, 0.0149,  ..., 0.0014, 0.9808, 0.9329],
         [0.0078, 0.9910, 0.0149,  ..., 0.0014, 0.0064, 0.0224]],
        [[0.0193, 0.0014, 0.9938,  ..., 0.9737, 0.0265, 0.0340],
         [0.0193, 0.0014, 0.0021,  ..., 0.0088, 0.0265, 0.0340],
         [0.9420, 0.0014, 0.0021,  ..., 0.0088, 0.0265, 0.8899],
         [0.0193, 0.9959, 0.0021,  ..., 0.0088, 0.9205, 0.0421]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9938, 0.0112, 0.0133,  ..., 0.7931, 0.7530, 0.0389],
         [0.0021, 0.0112, 0.0133,  ..., 0.1289, 0.0698, 0.0389],
         [0.0021, 0.0112, 0.0133,  ..., 0.0390, 0.1039, 0.0657],
         [0.0021, 0.9665, 0.9600,  ..., 0.0390, 0.0734, 0.8566]],
        [[0.9737, 0.0180, 0.0186,  ..., 0.0196, 0.0295, 0.0071],
         [0.0088, 0.0180, 0.0186,  ..., 0.0196, 0.0295, 0.0071],
         [0.0088, 0.0180, 0.0186,  ..., 0.0196, 0.9116, 0.9787],
         [0.0088, 0.9459, 0.9442,  ..., 0.9411, 0.0295, 0.0071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0272, 0.0024, 0.9891,  ..., 0.9806, 0.0104, 0.0136],
         [0.0272, 0.0024, 0.0036,  ..., 0.0065, 0.0104, 0.0136],
         [0.9184, 0.0024, 0.0036,  ..., 0.0065, 0.9688, 0.9591],
         [0.0272, 0.9928, 0.0036,  ..., 0.0065, 0.0104, 0.0136]],
        [[0.0219, 0.0058, 0.9809,  ..., 0.9577, 0.0020, 0.0193],
         [0.0233, 0.0058, 0.0064,  ..., 0.0141, 0.0019, 0.0193],
         [0.9329, 0.0058, 0.0064,  ..., 0.0141, 0.0019, 0.9420],
         [0.0219, 0.9826, 0.0064,  ..., 0.0141, 0.9942, 0.0193]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:01,794 [Process: 0] Synchronize training processes
2024-08-19 13:27:01,794 [Process: 0] Evaluating...
2024-08-19 13:27:01,796 [Process: 0] EPOCH 117:
2024-08-19 13:27:01,798 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:02,831 [Process: 0] Synchronize training processes
2024-08-19 13:27:02,831 [Process: 0] Evaluating...
2024-08-19 13:27:02,833 [Process: 0] EPOCH 118:
2024-08-19 13:27:02,835 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9824, 0.0105, 0.0211,  ..., 0.9900, 0.7367, 0.0229],
         [0.0059, 0.0105, 0.0211,  ..., 0.0038, 0.0926, 0.0229],
         [0.0059, 0.0105, 0.0211,  ..., 0.0031, 0.0751, 0.0234],
         [0.0059, 0.9685, 0.9366,  ..., 0.0031, 0.0956, 0.9308]],
        [[0.9933, 0.0152, 0.0087,  ..., 0.0337, 0.0079, 0.0042],
         [0.0022, 0.0152, 0.0087,  ..., 0.0337, 0.0079, 0.0042],
         [0.0022, 0.0152, 0.0087,  ..., 0.0410, 0.9763, 0.9873],
         [0.0022, 0.9544, 0.9738,  ..., 0.8916, 0.0079, 0.0042]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4544e-02, 4.6289e-03, 9.9893e-01,  ..., 9.3309e-01,
          1.3558e-02, 2.3081e-02],
         [2.4544e-02, 2.9951e-03, 3.5736e-04,  ..., 2.0043e-02,
          1.2784e-02, 2.3081e-02],
         [9.2637e-01, 2.9951e-03, 3.5736e-04,  ..., 2.0043e-02,
          9.6087e-01, 9.3076e-01],
         [2.4544e-02, 9.8938e-01, 3.5736e-04,  ..., 2.6824e-02,
          1.2784e-02, 2.3081e-02]],
        [[2.0441e-02, 1.5734e-02, 9.9256e-01,  ..., 8.7897e-01,
          5.7447e-03, 3.6481e-02],
         [2.0441e-02, 1.2048e-02, 2.4785e-03,  ..., 5.3151e-02,
          5.7447e-03, 3.4570e-02],
         [9.3868e-01, 1.2048e-02, 2.4785e-03,  ..., 3.3941e-02,
          5.7447e-03, 8.9351e-01],
         [2.0441e-02, 9.6017e-01, 2.4785e-03,  ..., 3.3941e-02,
          9.8277e-01, 3.5441e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9418, 0.0111, 0.0110,  ..., 0.8937, 0.5929, 0.0298],
         [0.0177, 0.0111, 0.0110,  ..., 0.0528, 0.1142, 0.0298],
         [0.0177, 0.0111, 0.0110,  ..., 0.0267, 0.1194, 0.0303],
         [0.0227, 0.9667, 0.9670,  ..., 0.0267, 0.1736, 0.9102]],
        [[0.5009, 0.0395, 0.0139,  ..., 0.0190, 0.0162, 0.0051],
         [0.1029, 0.0395, 0.0139,  ..., 0.0190, 0.0162, 0.0051],
         [0.2228, 0.0395, 0.0139,  ..., 0.0200, 0.9514, 0.9847],
         [0.1735, 0.8814, 0.9583,  ..., 0.9420, 0.0162, 0.0051]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2416e-02, 1.6644e-03, 9.9520e-01,  ..., 9.5538e-01,
          2.8831e-02, 2.1150e-02],
         [3.2416e-02, 1.0957e-03, 1.5986e-03,  ..., 1.4017e-02,
          2.8831e-02, 2.1150e-02],
         [9.0275e-01, 1.0957e-03, 1.5986e-03,  ..., 1.4017e-02,
          9.1351e-01, 9.3655e-01],
         [3.2416e-02, 9.9614e-01, 1.5986e-03,  ..., 1.6590e-02,
          2.8831e-02, 2.1150e-02]],
        [[1.3160e-02, 9.6901e-04, 9.8276e-01,  ..., 9.7989e-01,
          2.8773e-03, 2.5981e-02],
         [1.3160e-02, 9.6901e-04, 5.7478e-03,  ..., 6.7025e-03,
          2.8773e-03, 2.5981e-02],
         [9.6052e-01, 9.6901e-04, 5.7478e-03,  ..., 6.7025e-03,
          2.8773e-03, 9.2206e-01],
         [1.3160e-02, 9.9709e-01, 5.7478e-03,  ..., 6.7025e-03,
          9.9137e-01, 2.5981e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:03,870 [Process: 0] Synchronize training processes
2024-08-19 13:27:03,871 [Process: 0] Evaluating...
2024-08-19 13:27:03,872 [Process: 0] EPOCH 119:
2024-08-19 13:27:03,874 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:04,909 [Process: 0] Synchronize training processes
2024-08-19 13:27:04,909 [Process: 0] Evaluating...
2024-08-19 13:27:04,911 [Process: 0] EPOCH 120:
2024-08-19 13:27:04,912 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9515, 0.0132, 0.0472,  ..., 0.9847, 0.8332, 0.0406],
         [0.0162, 0.0132, 0.0684,  ..., 0.0051, 0.0404, 0.0406],
         [0.0162, 0.0132, 0.0530,  ..., 0.0051, 0.0454, 0.0482],
         [0.0162, 0.9605, 0.8314,  ..., 0.0051, 0.0810, 0.8707]],
        [[0.9551, 0.0105, 0.0213,  ..., 0.0327, 0.0127, 0.0103],
         [0.0150, 0.0105, 0.0214,  ..., 0.0327, 0.0127, 0.0103],
         [0.0150, 0.0105, 0.0213,  ..., 0.0358, 0.9620, 0.9690],
         [0.0150, 0.9686, 0.9360,  ..., 0.8988, 0.0127, 0.0103]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0403, 0.1290, 0.9941,  ..., 0.9928, 0.0392, 0.0261],
         [0.0448, 0.0328, 0.0020,  ..., 0.0024, 0.0392, 0.0277],
         [0.8746, 0.0328, 0.0020,  ..., 0.0024, 0.8790, 0.9200],
         [0.0403, 0.8055, 0.0020,  ..., 0.0024, 0.0427, 0.0261]],
        [[0.0106, 0.0013, 0.9908,  ..., 0.9892, 0.0196, 0.0072],
         [0.0107, 0.0013, 0.0031,  ..., 0.0036, 0.0133, 0.0072],
         [0.9681, 0.0013, 0.0031,  ..., 0.0036, 0.0133, 0.9785],
         [0.0106, 0.9960, 0.0031,  ..., 0.0036, 0.9537, 0.0072]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9709, 0.0263, 0.0248,  ..., 0.9942, 0.9255, 0.0391],
         [0.0090, 0.0263, 0.0248,  ..., 0.0019, 0.0313, 0.0391],
         [0.0110, 0.0263, 0.0248,  ..., 0.0019, 0.0216, 0.0449],
         [0.0090, 0.9210, 0.9256,  ..., 0.0019, 0.0216, 0.8770]],
        [[0.4240, 0.0198, 0.0352,  ..., 0.0204, 0.0098, 0.0195],
         [0.1046, 0.0198, 0.0368,  ..., 0.0204, 0.0119, 0.0195],
         [0.3451, 0.0198, 0.0401,  ..., 0.0204, 0.9685, 0.9416],
         [0.1263, 0.9406, 0.8879,  ..., 0.9387, 0.0098, 0.0195]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0861, 0.1631, 0.9945,  ..., 0.8866, 0.0267, 0.0255],
         [0.0757, 0.0272, 0.0018,  ..., 0.0378, 0.0267, 0.0255],
         [0.6838, 0.0272, 0.0018,  ..., 0.0378, 0.9199, 0.9235],
         [0.1545, 0.7826, 0.0018,  ..., 0.0378, 0.0267, 0.0255]],
        [[0.0320, 0.0013, 0.9926,  ..., 0.9207, 0.0052, 0.0722],
         [0.0332, 0.0013, 0.0025,  ..., 0.0205, 0.0052, 0.0722],
         [0.9029, 0.0013, 0.0025,  ..., 0.0205, 0.0052, 0.7088],
         [0.0320, 0.9960, 0.0025,  ..., 0.0383, 0.9845, 0.1468]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:05,946 [Process: 0] Synchronize training processes
2024-08-19 13:27:05,946 [Process: 0] Evaluating...
2024-08-19 13:27:05,948 [Process: 0] EPOCH 121:
2024-08-19 13:27:05,950 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:06,985 [Process: 0] Synchronize training processes
2024-08-19 13:27:06,985 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9938, 0.0155, 0.0341,  ..., 0.9369, 0.3458, 0.0400],
         [0.0021, 0.0140, 0.0341,  ..., 0.0194, 0.0703, 0.0400],
         [0.0021, 0.0140, 0.0341,  ..., 0.0243, 0.0703, 0.0400],
         [0.0021, 0.9565, 0.8977,  ..., 0.0194, 0.5136, 0.8799]],
        [[0.6853, 0.0405, 0.0128,  ..., 0.0173, 0.0032, 0.0024],
         [0.0645, 0.0350, 0.0128,  ..., 0.0155, 0.0032, 0.0024],
         [0.1857, 0.0350, 0.0128,  ..., 0.0155, 0.9904, 0.9928],
         [0.0645, 0.8895, 0.9617,  ..., 0.9516, 0.0032, 0.0024]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1802e-02, 3.1637e-02, 9.8149e-01,  ..., 9.9874e-01,
          2.1595e-02, 2.7094e-02],
         [3.1802e-02, 1.4647e-02, 6.1694e-03,  ..., 4.2055e-04,
          2.1595e-02, 2.7094e-02],
         [9.0459e-01, 1.4647e-02, 6.1694e-03,  ..., 4.2055e-04,
          9.3522e-01, 9.1872e-01],
         [3.1802e-02, 9.3907e-01, 6.1694e-03,  ..., 4.2055e-04,
          2.1595e-02, 2.7094e-02]],
        [[7.1276e-02, 5.0328e-04, 9.9510e-01,  ..., 9.6158e-01,
          3.1178e-03, 3.3166e-02],
         [1.6844e-01, 5.0328e-04, 1.5742e-03,  ..., 1.2807e-02,
          3.1178e-03, 3.3166e-02],
         [6.8351e-01, 5.0328e-04, 1.5742e-03,  ..., 1.2807e-02,
          3.1178e-03, 8.9389e-01],
         [7.6777e-02, 9.9849e-01, 1.7501e-03,  ..., 1.2807e-02,
          9.9065e-01, 3.9781e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:07,976 [Process: 0] EPOCH 122:
2024-08-19 13:27:07,980 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:08,976 [Process: 0] Synchronize training processes
2024-08-19 13:27:08,976 [Process: 0] Evaluating...
2024-08-19 13:27:08,978 [Process: 0] EPOCH 123:
2024-08-19 13:27:08,980 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9940, 0.0123, 0.0066,  ..., 0.9285, 0.8210, 0.0127],
         [0.0020, 0.0123, 0.0066,  ..., 0.0218, 0.0445, 0.0127],
         [0.0020, 0.0123, 0.0066,  ..., 0.0278, 0.0476, 0.0127],
         [0.0020, 0.9631, 0.9801,  ..., 0.0218, 0.0869, 0.9619]],
        [[0.6215, 0.0093, 0.0224,  ..., 0.0092, 0.0044, 0.0133],
         [0.0716, 0.0093, 0.0224,  ..., 0.0092, 0.0044, 0.0133],
         [0.2353, 0.0093, 0.0224,  ..., 0.0092, 0.9868, 0.9600],
         [0.0716, 0.9720, 0.9329,  ..., 0.9724, 0.0044, 0.0133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.3849e-02, 7.5549e-03, 9.8954e-01,  ..., 9.9959e-01,
          1.7854e-02, 3.1334e-02],
         [3.3849e-02, 7.5549e-03, 3.4883e-03,  ..., 1.3583e-04,
          1.7854e-02, 3.1334e-02],
         [8.9845e-01, 7.5549e-03, 3.4883e-03,  ..., 1.3583e-04,
          9.4644e-01, 9.0173e-01],
         [3.3849e-02, 9.7734e-01, 3.4883e-03,  ..., 1.3583e-04,
          1.7854e-02, 3.5604e-02]],
        [[5.5547e-01, 1.7736e-03, 9.9005e-01,  ..., 9.0118e-01,
          4.3533e-03, 2.4241e-02],
         [1.0598e-01, 1.7736e-03, 3.3154e-03,  ..., 2.8801e-02,
          4.3533e-03, 2.4241e-02],
         [9.0334e-02, 1.7736e-03, 3.3154e-03,  ..., 2.8801e-02,
          4.3533e-03, 9.2728e-01],
         [2.4821e-01, 9.9468e-01, 3.3154e-03,  ..., 4.1221e-02,
          9.8694e-01, 2.4241e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9955, 0.0222, 0.0319,  ..., 0.9923, 0.9011, 0.0183],
         [0.0015, 0.0222, 0.0343,  ..., 0.0026, 0.0264, 0.0183],
         [0.0015, 0.0224, 0.0319,  ..., 0.0026, 0.0460, 0.0183],
         [0.0015, 0.9332, 0.9019,  ..., 0.0026, 0.0264, 0.9452]],
        [[0.9923, 0.0119, 0.0133,  ..., 0.0208, 0.0180, 0.0045],
         [0.0026, 0.0119, 0.0133,  ..., 0.0208, 0.0180, 0.0045],
         [0.0026, 0.0119, 0.0133,  ..., 0.0208, 0.9461, 0.9866],
         [0.0026, 0.9643, 0.9600,  ..., 0.9377, 0.0180, 0.0045]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9929e-02, 1.9380e-03, 9.9889e-01,  ..., 9.9457e-01,
          1.7748e-02, 1.0860e-02],
         [1.9929e-02, 1.9380e-03, 3.7095e-04,  ..., 1.8091e-03,
          1.7748e-02, 1.0860e-02],
         [9.4021e-01, 1.9380e-03, 3.7095e-04,  ..., 1.8091e-03,
          9.4676e-01, 9.6742e-01],
         [1.9929e-02, 9.9419e-01, 3.7095e-04,  ..., 1.8091e-03,
          1.7748e-02, 1.0860e-02]],
        [[1.2847e-02, 1.1786e-03, 9.9053e-01,  ..., 9.4732e-01,
          1.3606e-02, 3.0444e-02],
         [4.3467e-02, 1.1786e-03, 3.1568e-03,  ..., 1.7559e-02,
          1.3606e-02, 3.0444e-02],
         [1.2847e-02, 1.1786e-03, 3.1568e-03,  ..., 1.7559e-02,
          1.3606e-02, 9.0771e-01],
         [9.3084e-01, 9.9646e-01, 3.1568e-03,  ..., 1.7559e-02,
          9.5918e-01, 3.1404e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:27:10,017 [Process: 0] Synchronize training processes
2024-08-19 13:27:10,017 [Process: 0] Evaluating...
2024-08-19 13:27:10,019 [Process: 0] EPOCH 124:
2024-08-19 13:27:10,021 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:11,057 [Process: 0] Synchronize training processes
2024-08-19 13:27:11,057 [Process: 0] Evaluating...
2024-08-19 13:27:11,059 [Process: 0] EPOCH 125:
2024-08-19 13:27:11,061 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9880, 0.0148, 0.0209,  ..., 0.9908, 0.9815, 0.0123],
         [0.0040, 0.0148, 0.0209,  ..., 0.0031, 0.0062, 0.0118],
         [0.0040, 0.0148, 0.0209,  ..., 0.0031, 0.0062, 0.0118],
         [0.0040, 0.9555, 0.9373,  ..., 0.0031, 0.0062, 0.9641]],
        [[0.9895, 0.0099, 0.0127,  ..., 0.0401, 0.0199, 0.0050],
         [0.0035, 0.0099, 0.0127,  ..., 0.0506, 0.0199, 0.0050],
         [0.0035, 0.0099, 0.0127,  ..., 0.0401, 0.9402, 0.9849],
         [0.0035, 0.9704, 0.9620,  ..., 0.8691, 0.0199, 0.0050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5925e-02, 3.4835e-03, 9.9134e-01,  ..., 9.9981e-01,
          2.3953e-02, 2.3799e-02],
         [1.5925e-02, 3.4835e-03, 2.8880e-03,  ..., 6.2652e-05,
          2.3953e-02, 2.3799e-02],
         [9.5223e-01, 3.4835e-03, 2.8880e-03,  ..., 6.2652e-05,
          9.2814e-01, 9.2860e-01],
         [1.5925e-02, 9.8955e-01, 2.8880e-03,  ..., 6.2652e-05,
          2.3953e-02, 2.3799e-02]],
        [[8.4227e-01, 3.4086e-03, 9.7334e-01,  ..., 9.8210e-01,
          1.7933e-01, 2.3206e-02],
         [3.6770e-02, 4.3307e-03, 8.8864e-03,  ..., 5.9674e-03,
          2.1752e-02, 2.3206e-02],
         [3.6770e-02, 3.4086e-03, 8.8864e-03,  ..., 5.9674e-03,
          2.1752e-02, 9.3038e-01],
         [8.4186e-02, 9.8885e-01, 8.8864e-03,  ..., 5.9674e-03,
          7.7717e-01, 2.3206e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9774, 0.0256, 0.0035,  ..., 0.9915, 0.7508, 0.0063],
         [0.0063, 0.0256, 0.0035,  ..., 0.0033, 0.0614, 0.0063],
         [0.0100, 0.0256, 0.0035,  ..., 0.0026, 0.1111, 0.0063],
         [0.0063, 0.9233, 0.9895,  ..., 0.0026, 0.0767, 0.9812]],
        [[0.9848, 0.0136, 0.0186,  ..., 0.0232, 0.0079, 0.0152],
         [0.0047, 0.0136, 0.0186,  ..., 0.0238, 0.0079, 0.0145],
         [0.0058, 0.0136, 0.0186,  ..., 0.0232, 0.9762, 0.9558],
         [0.0047, 0.9592, 0.9441,  ..., 0.9297, 0.0079, 0.0145]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7706e-02, 5.6878e-03, 9.9964e-01,  ..., 9.9715e-01,
          2.1818e-02, 1.9938e-02],
         [2.7706e-02, 5.6878e-03, 1.2009e-04,  ..., 9.4876e-04,
          2.1818e-02, 1.7625e-02],
         [9.1688e-01, 5.6878e-03, 1.2009e-04,  ..., 9.4876e-04,
          9.3455e-01, 9.4481e-01],
         [2.7706e-02, 9.8294e-01, 1.2009e-04,  ..., 9.4876e-04,
          2.1818e-02, 1.7625e-02]],
        [[3.4182e-01, 2.8848e-03, 9.8238e-01,  ..., 9.4901e-01,
          1.6848e-01, 1.3874e-02],
         [3.2654e-02, 2.8848e-03, 5.8748e-03,  ..., 1.8000e-02,
          2.0400e-02, 1.3874e-02],
         [3.2654e-02, 2.8848e-03, 5.8748e-03,  ..., 1.6495e-02,
          2.0400e-02, 9.5838e-01],
         [5.9288e-01, 9.9135e-01, 5.8748e-03,  ..., 1.6495e-02,
          7.9072e-01, 1.3874e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:27:12,099 [Process: 0] Synchronize training processes
2024-08-19 13:27:12,100 [Process: 0] Evaluating...
2024-08-19 13:27:12,102 [Process: 0] EPOCH 126:
2024-08-19 13:27:12,103 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:13,167 [Process: 0] Synchronize training processes
2024-08-19 13:27:13,167 [Process: 0] Evaluating...
2024-08-19 13:27:13,169 [Process: 0] EPOCH 127:
2024-08-19 13:27:13,170 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9877, 0.0375, 0.0189,  ..., 0.9896, 0.9493, 0.0364],
         [0.0041, 0.0341, 0.0189,  ..., 0.0035, 0.0165, 0.0277],
         [0.0041, 0.0357, 0.0195,  ..., 0.0035, 0.0177, 0.0277],
         [0.0041, 0.8927, 0.9428,  ..., 0.0035, 0.0165, 0.9082]],
        [[0.9732, 0.0104, 0.0187,  ..., 0.0351, 0.0052, 0.0114],
         [0.0083, 0.0104, 0.0187,  ..., 0.0351, 0.0052, 0.0112],
         [0.0102, 0.0104, 0.0187,  ..., 0.0351, 0.9844, 0.9662],
         [0.0083, 0.9687, 0.9439,  ..., 0.8948, 0.0052, 0.0112]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2520e-02, 3.1961e-03, 9.9946e-01,  ..., 9.9630e-01,
          1.6592e-02, 1.8407e-02],
         [2.2520e-02, 3.1961e-03, 1.7885e-04,  ..., 1.2320e-03,
          1.6592e-02, 1.8407e-02],
         [9.3244e-01, 3.1961e-03, 1.7885e-04,  ..., 1.2320e-03,
          9.5023e-01, 9.4478e-01],
         [2.2520e-02, 9.9041e-01, 1.7885e-04,  ..., 1.2320e-03,
          1.6592e-02, 1.8407e-02]],
        [[4.7265e-02, 1.0960e-03, 8.5746e-01,  ..., 8.7252e-01,
          2.8582e-02, 2.2617e-02],
         [2.1837e-02, 1.0960e-03, 4.3891e-02,  ..., 5.6535e-02,
          1.8134e-02, 2.1350e-02],
         [2.1837e-02, 1.0960e-03, 4.9033e-02,  ..., 3.5472e-02,
          1.8134e-02, 9.3468e-01],
         [9.0906e-01, 9.9671e-01, 4.9611e-02,  ..., 3.5472e-02,
          9.3515e-01, 2.1350e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9953, 0.0150, 0.0339,  ..., 0.9795, 0.9514, 0.0164],
         [0.0016, 0.0150, 0.0350,  ..., 0.0089, 0.0162, 0.0164],
         [0.0016, 0.0150, 0.0339,  ..., 0.0058, 0.0162, 0.0164],
         [0.0016, 0.9550, 0.8972,  ..., 0.0058, 0.0162, 0.9507]],
        [[0.9878, 0.0080, 0.0124,  ..., 0.0121, 0.0085, 0.0026],
         [0.0041, 0.0080, 0.0124,  ..., 0.0121, 0.0085, 0.0026],
         [0.0041, 0.0080, 0.0124,  ..., 0.0121, 0.9746, 0.9921],
         [0.0041, 0.9760, 0.9628,  ..., 0.9636, 0.0085, 0.0026]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-19 13:27:14,205 [Process: 0] Synchronize training processes
2024-08-19 13:27:14,205 [Process: 0] Evaluating...
2024-08-19 13:27:14,207 [Process: 0] EPOCH 128:
2024-08-19 13:27:14,209 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:15,245 [Process: 0] Synchronize training processes
2024-08-19 13:27:15,245 [Process: 0] Evaluating...
2024-08-19 13:27:15,247 [Process: 0] EPOCH 129:
2024-08-19 13:27:15,249 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1083e-02, 7.2471e-03, 9.8960e-01,  ..., 9.9503e-01,
          2.8673e-02, 1.3336e-02],
         [2.1083e-02, 7.2471e-03, 2.3792e-03,  ..., 1.6550e-03,
          2.5838e-02, 1.3336e-02],
         [9.3675e-01, 7.2471e-03, 2.3792e-03,  ..., 1.6550e-03,
          9.1965e-01, 9.5999e-01],
         [2.1083e-02, 9.7826e-01, 5.6435e-03,  ..., 1.6550e-03,
          2.5838e-02, 1.3336e-02]],
        [[1.3789e-01, 3.7663e-04, 9.9114e-01,  ..., 9.0977e-01,
          2.8727e-02, 1.1946e-02],
         [8.6393e-02, 3.7663e-04, 2.9549e-03,  ..., 2.6795e-02,
          2.8727e-02, 1.1946e-02],
         [6.4890e-02, 3.7663e-04, 2.9549e-03,  ..., 2.6795e-02,
          2.8727e-02, 9.6416e-01],
         [7.1083e-01, 9.9887e-01, 2.9549e-03,  ..., 3.6644e-02,
          9.1382e-01, 1.1946e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9853, 0.0446, 0.0174,  ..., 0.9592, 0.9241, 0.0191],
         [0.0049, 0.0446, 0.0174,  ..., 0.0129, 0.0253, 0.0191],
         [0.0049, 0.0825, 0.0174,  ..., 0.0150, 0.0253, 0.0191],
         [0.0049, 0.8282, 0.9478,  ..., 0.0129, 0.0253, 0.9426]],
        [[0.9850, 0.0097, 0.0306,  ..., 0.0049, 0.0025, 0.0030],
         [0.0042, 0.0097, 0.0306,  ..., 0.0049, 0.0025, 0.0030],
         [0.0066, 0.0097, 0.0347,  ..., 0.0049, 0.9924, 0.9909],
         [0.0042, 0.9710, 0.9042,  ..., 0.9852, 0.0025, 0.0030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0360, 0.0059, 0.9181,  ..., 0.9826, 0.0139, 0.0434],
         [0.0360, 0.0059, 0.0182,  ..., 0.0044, 0.0133, 0.0400],
         [0.8920, 0.0059, 0.0182,  ..., 0.0044, 0.9595, 0.8767],
         [0.0360, 0.9823, 0.0456,  ..., 0.0085, 0.0133, 0.0400]],
        [[0.1500, 0.0018, 0.9243,  ..., 0.9783, 0.0015, 0.0126],
         [0.5551, 0.0018, 0.0335,  ..., 0.0078, 0.0015, 0.0126],
         [0.0797, 0.0018, 0.0211,  ..., 0.0069, 0.0015, 0.9623],
         [0.2152, 0.9945, 0.0211,  ..., 0.0069, 0.9954, 0.0126]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9770e-01, 4.4524e-02, 1.0539e-01,  ..., 9.9406e-01,
          9.1254e-01, 2.3174e-02],
         [7.6714e-04, 4.4524e-02, 2.2128e-01,  ..., 1.9804e-03,
          3.6398e-02, 2.3174e-02],
         [7.6714e-04, 5.4268e-02, 1.8514e-01,  ..., 1.9804e-03,
          2.5570e-02, 2.3174e-02],
         [7.6714e-04, 8.5668e-01, 4.8819e-01,  ..., 1.9804e-03,
          2.5490e-02, 9.3048e-01]],
        [[8.5852e-01, 1.9885e-02, 3.9122e-03,  ..., 9.2060e-03,
          3.5915e-03, 2.7363e-03],
         [4.0973e-02, 2.0186e-02, 3.9122e-03,  ..., 9.2060e-03,
          3.5915e-03, 2.7363e-03],
         [6.0306e-02, 1.9885e-02, 3.9122e-03,  ..., 9.2060e-03,
          9.8923e-01, 9.9179e-01],
         [4.0204e-02, 9.4004e-01, 9.8826e-01,  ..., 9.7238e-01,
          3.5915e-03, 2.7363e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:27:16,285 [Process: 0] Synchronize training processes
2024-08-19 13:27:16,285 [Process: 0] Evaluating...
2024-08-19 13:27:16,287 [Process: 0] EPOCH 130:
2024-08-19 13:27:16,288 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6390e-02, 5.3108e-02, 9.9320e-01,  ..., 9.2603e-01,
          2.8811e-02, 1.1919e-02],
         [2.6347e-02, 3.6834e-02, 1.5651e-03,  ..., 1.6167e-02,
          2.8811e-02, 1.1919e-02],
         [9.2091e-01, 3.6834e-02, 1.5651e-03,  ..., 1.6167e-02,
          9.1357e-01, 9.6424e-01],
         [2.6347e-02, 8.7322e-01, 3.6737e-03,  ..., 4.1633e-02,
          2.8811e-02, 1.1919e-02]],
        [[3.8727e-01, 2.2641e-04, 9.8533e-01,  ..., 9.6463e-01,
          1.8403e-03, 3.1287e-02],
         [4.5295e-01, 2.2641e-04, 6.1557e-03,  ..., 1.2159e-02,
          1.8403e-03, 3.0601e-02],
         [7.9889e-02, 2.2641e-04, 4.2593e-03,  ..., 1.1603e-02,
          1.8403e-03, 9.0132e-01],
         [7.9889e-02, 9.9932e-01, 4.2593e-03,  ..., 1.1603e-02,
          9.9448e-01, 3.6788e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9887, 0.0259, 0.0180,  ..., 0.9817, 0.8743, 0.0128],
         [0.0038, 0.0259, 0.0180,  ..., 0.0089, 0.0432, 0.0128],
         [0.0038, 0.0332, 0.0180,  ..., 0.0047, 0.0459, 0.0128],
         [0.0038, 0.9151, 0.9460,  ..., 0.0047, 0.0367, 0.9616]],
        [[0.9804, 0.0112, 0.0133,  ..., 0.0319, 0.0077, 0.0047],
         [0.0062, 0.0112, 0.0105,  ..., 0.0319, 0.0077, 0.0047],
         [0.0072, 0.0112, 0.0105,  ..., 0.0343, 0.9770, 0.9858],
         [0.0062, 0.9664, 0.9658,  ..., 0.9018, 0.0077, 0.0047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2206e-02, 2.6060e-02, 9.9824e-01,  ..., 9.8834e-01,
          1.9403e-02, 1.5790e-02],
         [1.2206e-02, 1.7815e-02, 5.8825e-04,  ..., 3.8142e-03,
          1.9403e-02, 1.5790e-02],
         [9.6338e-01, 1.7815e-02, 5.8825e-04,  ..., 3.8142e-03,
          9.4095e-01, 9.5263e-01],
         [1.2206e-02, 9.3831e-01, 5.8825e-04,  ..., 4.0322e-03,
          2.0240e-02, 1.5790e-02]],
        [[4.9274e-01, 3.7320e-05, 9.8303e-01,  ..., 9.3972e-01,
          3.4603e-03, 3.3282e-02],
         [2.8690e-01, 3.7320e-05, 5.6571e-03,  ..., 2.4069e-02,
          3.4603e-03, 2.7717e-02],
         [8.6393e-02, 3.7320e-05, 5.6571e-03,  ..., 1.8107e-02,
          3.4603e-03, 9.1128e-01],
         [1.3397e-01, 9.9989e-01, 5.6571e-03,  ..., 1.8107e-02,
          9.8962e-01, 2.7717e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:17,323 [Process: 0] Synchronize training processes
2024-08-19 13:27:17,324 [Process: 0] Evaluating...
2024-08-19 13:27:17,325 [Process: 0] EPOCH 131:
2024-08-19 13:27:17,327 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:18,366 [Process: 0] Synchronize training processes
2024-08-19 13:27:18,366 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9779e-01, 2.7945e-02, 3.6373e-02,  ..., 9.6657e-01,
          6.8812e-01, 2.6660e-02],
         [7.3537e-04, 2.5249e-02, 3.6373e-02,  ..., 2.4707e-02,
          7.4724e-02, 2.6660e-02],
         [7.3537e-04, 2.5249e-02, 4.8557e-02,  ..., 4.3628e-03,
          1.1971e-01, 2.6660e-02],
         [7.3537e-04, 9.2156e-01, 8.7870e-01,  ..., 4.3628e-03,
          1.1744e-01, 9.2002e-01]],
        [[9.7642e-01, 6.9837e-02, 1.7480e-02,  ..., 4.4287e-02,
          1.1104e-02, 3.0902e-03],
         [7.8615e-03, 6.9837e-02, 1.7480e-02,  ..., 4.4287e-02,
          1.1104e-02, 3.0902e-03],
         [7.8615e-03, 1.0484e-01, 1.7480e-02,  ..., 5.3701e-02,
          9.6669e-01, 9.9073e-01],
         [7.8615e-03, 7.5549e-01, 9.4756e-01,  ..., 8.5772e-01,
          1.1104e-02, 3.0902e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4589e-02, 5.0440e-03, 9.7960e-01,  ..., 9.9734e-01,
          1.7654e-02, 2.3617e-02],
         [2.4589e-02, 5.0440e-03, 6.8014e-03,  ..., 8.8528e-04,
          1.7654e-02, 2.3485e-02],
         [9.2623e-01, 5.0440e-03, 6.8014e-03,  ..., 8.8528e-04,
          9.4704e-01, 9.2941e-01],
         [2.4589e-02, 9.8487e-01, 6.8014e-03,  ..., 8.8528e-04,
          1.7654e-02, 2.3485e-02]],
        [[5.0236e-01, 1.4962e-03, 9.6900e-01,  ..., 9.7086e-01,
          5.9430e-01, 4.7344e-03],
         [2.5272e-01, 1.4962e-03, 9.0153e-03,  ..., 1.5666e-02,
          2.1222e-02, 4.7344e-03],
         [7.9582e-02, 1.4962e-03, 9.0153e-03,  ..., 6.7366e-03,
          2.1222e-02, 9.8580e-01],
         [1.6534e-01, 9.9551e-01, 1.2966e-02,  ..., 6.7366e-03,
          3.6325e-01, 4.7344e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:19,348 [Process: 0] EPOCH 132:
2024-08-19 13:27:19,352 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:20,353 [Process: 0] Synchronize training processes
2024-08-19 13:27:20,354 [Process: 0] Evaluating...
2024-08-19 13:27:20,355 [Process: 0] EPOCH 133:
2024-08-19 13:27:20,357 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9683, 0.0059, 0.0291,  ..., 0.9541, 0.5153, 0.0070],
         [0.0136, 0.0059, 0.0291,  ..., 0.0373, 0.0815, 0.0070],
         [0.0090, 0.0059, 0.0457,  ..., 0.0043, 0.1334, 0.0070],
         [0.0090, 0.9822, 0.8961,  ..., 0.0043, 0.2697, 0.9789]],
        [[0.9956, 0.0161, 0.0088,  ..., 0.0368, 0.0069, 0.0380],
         [0.0015, 0.0161, 0.0088,  ..., 0.0368, 0.0069, 0.0380],
         [0.0015, 0.0161, 0.0088,  ..., 0.0419, 0.9793, 0.8860],
         [0.0015, 0.9518, 0.9736,  ..., 0.8845, 0.0069, 0.0380]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1859e-02, 4.3681e-03, 9.9650e-01,  ..., 9.9466e-01,
          1.3546e-02, 1.6204e-02],
         [1.1859e-02, 4.3681e-03, 1.0201e-03,  ..., 1.0965e-03,
          1.3546e-02, 1.6204e-02],
         [9.6442e-01, 4.3681e-03, 1.0201e-03,  ..., 1.0965e-03,
          9.5936e-01, 9.5139e-01],
         [1.1859e-02, 9.8690e-01, 1.4608e-03,  ..., 3.1442e-03,
          1.3546e-02, 1.6204e-02]],
        [[4.3640e-01, 1.2619e-03, 9.9699e-01,  ..., 9.9406e-01,
          2.0457e-04, 1.2837e-02],
         [8.3527e-02, 1.2619e-03, 1.0032e-03,  ..., 1.9813e-03,
          2.0457e-04, 1.2837e-02],
         [6.8010e-02, 1.2619e-03, 1.0032e-03,  ..., 1.9813e-03,
          2.0457e-04, 9.6149e-01],
         [4.1206e-01, 9.9621e-01, 1.0032e-03,  ..., 1.9813e-03,
          9.9939e-01, 1.2837e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3452e-01, 1.8507e-02, 2.2599e-02,  ..., 9.8952e-01,
          2.7091e-01, 1.5988e-02],
         [2.1378e-02, 1.8507e-02, 2.2599e-02,  ..., 3.7273e-03,
          7.7667e-02, 1.5988e-02],
         [2.1378e-02, 1.8507e-02, 2.5970e-02,  ..., 3.3746e-03,
          9.3300e-02, 1.5988e-02],
         [2.2723e-02, 9.4448e-01, 9.2883e-01,  ..., 3.3746e-03,
          5.5812e-01, 9.5204e-01]],
        [[9.9754e-01, 3.7389e-02, 2.0844e-02,  ..., 3.8124e-02,
          1.5085e-03, 1.9189e-03],
         [8.2100e-04, 3.7389e-02, 2.0844e-02,  ..., 2.7437e-02,
          1.5085e-03, 1.9189e-03],
         [8.2100e-04, 5.0075e-02, 2.0844e-02,  ..., 2.7437e-02,
          9.9547e-01, 9.9424e-01],
         [8.2100e-04, 8.7515e-01, 9.3747e-01,  ..., 9.0700e-01,
          1.5085e-03, 1.9189e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2318e-02, 4.6571e-02, 9.9506e-01,  ..., 9.9837e-01,
          2.9946e-02, 6.6517e-03],
         [2.1126e-02, 4.6571e-02, 1.6451e-03,  ..., 5.4233e-04,
          2.7623e-02, 6.6517e-03],
         [9.3543e-01, 1.3855e-01, 1.6451e-03,  ..., 5.4233e-04,
          9.1481e-01, 9.8004e-01],
         [2.1126e-02, 7.6830e-01, 1.6451e-03,  ..., 5.4233e-04,
          2.7623e-02, 6.6517e-03]],
        [[5.4558e-01, 1.5200e-03, 9.7315e-01,  ..., 9.9050e-01,
          2.6456e-04, 6.8046e-03],
         [6.6439e-02, 1.5200e-03, 6.1625e-03,  ..., 3.1652e-03,
          2.6456e-04, 6.8046e-03],
         [5.7874e-02, 1.5200e-03, 6.1625e-03,  ..., 3.1652e-03,
          2.6456e-04, 9.7959e-01],
         [3.3010e-01, 9.9544e-01, 1.4528e-02,  ..., 3.1652e-03,
          9.9921e-01, 6.8046e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:21,396 [Process: 0] Synchronize training processes
2024-08-19 13:27:21,397 [Process: 0] Evaluating...
2024-08-19 13:27:21,398 [Process: 0] EPOCH 134:
2024-08-19 13:27:21,400 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:22,439 [Process: 0] Synchronize training processes
2024-08-19 13:27:22,439 [Process: 0] Evaluating...
2024-08-19 13:27:22,441 [Process: 0] EPOCH 135:
2024-08-19 13:27:22,442 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9933, 0.0120, 0.0407,  ..., 0.9841, 0.7260, 0.0071],
         [0.0022, 0.0120, 0.0401,  ..., 0.0063, 0.0780, 0.0071],
         [0.0022, 0.0120, 0.0561,  ..., 0.0048, 0.0851, 0.0071],
         [0.0022, 0.9641, 0.8631,  ..., 0.0048, 0.1110, 0.9787]],
        [[0.9245, 0.0355, 0.0193,  ..., 0.0306, 0.0068, 0.0025],
         [0.0214, 0.0355, 0.0193,  ..., 0.0306, 0.0068, 0.0025],
         [0.0326, 0.0372, 0.0193,  ..., 0.0306, 0.9795, 0.9924],
         [0.0214, 0.8919, 0.9420,  ..., 0.9082, 0.0068, 0.0025]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0188, 0.0121, 0.9937,  ..., 0.9091, 0.0140, 0.0208],
         [0.0188, 0.0121, 0.0021,  ..., 0.0184, 0.0140, 0.0208],
         [0.9436, 0.0121, 0.0021,  ..., 0.0184, 0.9580, 0.9377],
         [0.0188, 0.9638, 0.0021,  ..., 0.0541, 0.0140, 0.0208]],
        [[0.6760, 0.0026, 0.9915,  ..., 0.9827, 0.0035, 0.0103],
         [0.0289, 0.0026, 0.0027,  ..., 0.0058, 0.0034, 0.0103],
         [0.0289, 0.0026, 0.0027,  ..., 0.0058, 0.0034, 0.9691],
         [0.2662, 0.9922, 0.0030,  ..., 0.0058, 0.9897, 0.0103]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9944, 0.0355, 0.0241,  ..., 0.9921, 0.9877, 0.0167],
         [0.0019, 0.0172, 0.0241,  ..., 0.0026, 0.0040, 0.0167],
         [0.0019, 0.0172, 0.0264,  ..., 0.0026, 0.0042, 0.0183],
         [0.0019, 0.9300, 0.9255,  ..., 0.0026, 0.0040, 0.9483]],
        [[0.9464, 0.0129, 0.0137,  ..., 0.0354, 0.0043, 0.0025],
         [0.0140, 0.0129, 0.0137,  ..., 0.0354, 0.0043, 0.0025],
         [0.0257, 0.0129, 0.0137,  ..., 0.0532, 0.9870, 0.9925],
         [0.0140, 0.9613, 0.9590,  ..., 0.8760, 0.0043, 0.0025]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0280e-02, 1.0638e-02, 9.5632e-01,  ..., 9.9943e-01,
          2.6712e-02, 1.3817e-02],
         [2.0280e-02, 1.0638e-02, 1.4562e-02,  ..., 1.9152e-04,
          2.6712e-02, 1.3817e-02],
         [9.3916e-01, 1.0638e-02, 1.4562e-02,  ..., 1.9152e-04,
          9.1986e-01, 9.5855e-01],
         [2.0280e-02, 9.6809e-01, 1.4562e-02,  ..., 1.9152e-04,
          2.6712e-02, 1.3817e-02]],
        [[8.5821e-01, 1.1341e-03, 9.8767e-01,  ..., 9.8752e-01,
          1.9241e-03, 1.4045e-02],
         [3.0372e-02, 7.5062e-04, 4.1086e-03,  ..., 4.1595e-03,
          1.9241e-03, 1.3908e-02],
         [2.7706e-02, 7.5062e-04, 4.1086e-03,  ..., 4.1595e-03,
          1.9241e-03, 9.5814e-01],
         [8.3716e-02, 9.9736e-01, 4.1086e-03,  ..., 4.1595e-03,
          9.9423e-01, 1.3908e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:23,478 [Process: 0] Synchronize training processes
2024-08-19 13:27:23,478 [Process: 0] Evaluating...
2024-08-19 13:27:23,480 [Process: 0] EPOCH 136:
2024-08-19 13:27:23,481 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:24,516 [Process: 0] Synchronize training processes
2024-08-19 13:27:24,517 [Process: 0] Evaluating...
2024-08-19 13:27:24,518 [Process: 0] EPOCH 137:
2024-08-19 13:27:24,520 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9771, 0.0282, 0.0295,  ..., 0.9524, 0.8485, 0.0120],
         [0.0086, 0.0282, 0.0295,  ..., 0.0198, 0.0405, 0.0120],
         [0.0072, 0.0282, 0.0344,  ..., 0.0139, 0.0487, 0.0120],
         [0.0072, 0.9155, 0.9066,  ..., 0.0139, 0.0623, 0.9641]],
        [[0.9505, 0.0225, 0.0378,  ..., 0.0090, 0.0052, 0.0076],
         [0.0170, 0.0225, 0.0327,  ..., 0.0090, 0.0052, 0.0076],
         [0.0164, 0.0225, 0.0327,  ..., 0.0090, 0.9844, 0.9772],
         [0.0161, 0.9326, 0.8968,  ..., 0.9731, 0.0052, 0.0076]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1440e-02, 2.9395e-02, 9.9947e-01,  ..., 9.9519e-01,
          1.2794e-02, 1.4879e-02],
         [2.8494e-02, 2.9395e-02, 1.7673e-04,  ..., 1.6044e-03,
          1.2794e-02, 1.4879e-02],
         [9.1157e-01, 3.5131e-02, 1.7673e-04,  ..., 1.6044e-03,
          9.6162e-01, 9.5536e-01],
         [2.8494e-02, 9.0608e-01, 1.7673e-04,  ..., 1.6044e-03,
          1.2794e-02, 1.4879e-02]],
        [[5.0900e-01, 6.3450e-04, 9.4399e-01,  ..., 9.7652e-01,
          5.7875e-04, 1.2360e-02],
         [1.1326e-01, 6.3450e-04, 2.1162e-02,  ..., 7.8266e-03,
          5.7875e-04, 1.2360e-02],
         [7.0811e-02, 6.3450e-04, 1.7424e-02,  ..., 7.8266e-03,
          5.7875e-04, 9.6292e-01],
         [3.0693e-01, 9.9810e-01, 1.7424e-02,  ..., 7.8266e-03,
          9.9826e-01, 1.2360e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9885, 0.0152, 0.0152,  ..., 0.9810, 0.9529, 0.0035],
         [0.0038, 0.0152, 0.0152,  ..., 0.0063, 0.0145, 0.0035],
         [0.0038, 0.0152, 0.0152,  ..., 0.0063, 0.0147, 0.0035],
         [0.0038, 0.9544, 0.9544,  ..., 0.0063, 0.0179, 0.9894]],
        [[0.9734, 0.0291, 0.0101,  ..., 0.0310, 0.0069, 0.0037],
         [0.0118, 0.0291, 0.0101,  ..., 0.0288, 0.0069, 0.0037],
         [0.0074, 0.0291, 0.0101,  ..., 0.0305, 0.9794, 0.9888],
         [0.0074, 0.9126, 0.9696,  ..., 0.9098, 0.0069, 0.0037]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4947e-02, 3.3210e-01, 9.9167e-01,  ..., 9.7031e-01,
          2.4204e-02, 6.8577e-03],
         [2.4947e-02, 1.3834e-01, 2.7760e-03,  ..., 9.2444e-03,
          2.3830e-02, 6.8577e-03],
         [9.2516e-01, 1.7616e-01, 2.7760e-03,  ..., 9.2444e-03,
          9.2388e-01, 9.7943e-01],
         [2.4947e-02, 3.5341e-01, 2.7760e-03,  ..., 1.1205e-02,
          2.8083e-02, 6.8577e-03]],
        [[1.8994e-01, 2.9664e-04, 9.7877e-01,  ..., 9.6793e-01,
          9.1470e-04, 1.1045e-02],
         [3.2733e-02, 2.9664e-04, 7.0760e-03,  ..., 1.0324e-02,
          9.1470e-04, 1.1045e-02],
         [3.2733e-02, 2.9664e-04, 7.0760e-03,  ..., 1.0324e-02,
          9.1470e-04, 9.6686e-01],
         [7.4459e-01, 9.9911e-01, 7.0760e-03,  ..., 1.1424e-02,
          9.9726e-01, 1.1045e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:25,556 [Process: 0] Synchronize training processes
2024-08-19 13:27:25,556 [Process: 0] Evaluating...
2024-08-19 13:27:25,558 [Process: 0] EPOCH 138:
2024-08-19 13:27:25,560 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:26,595 [Process: 0] Synchronize training processes
2024-08-19 13:27:26,595 [Process: 0] Evaluating...
2024-08-19 13:27:26,597 [Process: 0] EPOCH 139:
2024-08-19 13:27:26,598 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9948, 0.0106, 0.0096,  ..., 0.9889, 0.7935, 0.0213],
         [0.0017, 0.0106, 0.0096,  ..., 0.0037, 0.0511, 0.0192],
         [0.0017, 0.0106, 0.0096,  ..., 0.0037, 0.0734, 0.0192],
         [0.0017, 0.9683, 0.9713,  ..., 0.0037, 0.0821, 0.9403]],
        [[0.9876, 0.0256, 0.0203,  ..., 0.0046, 0.0095, 0.0059],
         [0.0041, 0.0256, 0.0203,  ..., 0.0046, 0.0095, 0.0059],
         [0.0041, 0.0284, 0.0203,  ..., 0.0046, 0.9716, 0.9823],
         [0.0041, 0.9205, 0.9391,  ..., 0.9862, 0.0095, 0.0059]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3579e-02, 7.3498e-03, 9.9716e-01,  ..., 9.9192e-01,
          2.2377e-02, 1.5019e-02],
         [2.3579e-02, 7.3498e-03, 9.4606e-04,  ..., 2.6936e-03,
          2.2377e-02, 1.5019e-02],
         [9.2926e-01, 7.3498e-03, 9.4606e-04,  ..., 2.6936e-03,
          9.3287e-01, 9.5494e-01],
         [2.3579e-02, 9.7795e-01, 9.4606e-04,  ..., 2.6936e-03,
          2.2377e-02, 1.5019e-02]],
        [[7.6149e-01, 1.2653e-03, 9.8770e-01,  ..., 9.9587e-01,
          2.7879e-03, 1.0276e-02],
         [3.8935e-02, 1.2653e-03, 4.1015e-03,  ..., 1.3778e-03,
          2.7879e-03, 1.0276e-02],
         [3.8935e-02, 1.2653e-03, 4.1015e-03,  ..., 1.3778e-03,
          2.7879e-03, 9.6917e-01],
         [1.6064e-01, 9.9620e-01, 4.1015e-03,  ..., 1.3778e-03,
          9.9164e-01, 1.0276e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9824, 0.0195, 0.0059,  ..., 0.9928, 0.9133, 0.0314],
         [0.0054, 0.0195, 0.0059,  ..., 0.0024, 0.0258, 0.0314],
         [0.0068, 0.0199, 0.0059,  ..., 0.0024, 0.0277, 0.0341],
         [0.0054, 0.9412, 0.9822,  ..., 0.0024, 0.0333, 0.9031]],
        [[0.9937, 0.0255, 0.0112,  ..., 0.0213, 0.0017, 0.0038],
         [0.0021, 0.0255, 0.0112,  ..., 0.0213, 0.0017, 0.0038],
         [0.0021, 0.0276, 0.0112,  ..., 0.0213, 0.9948, 0.9885],
         [0.0021, 0.9213, 0.9665,  ..., 0.9361, 0.0017, 0.0038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0245, 0.0061, 0.9843,  ..., 0.9969, 0.0209, 0.0065],
         [0.0245, 0.0061, 0.0051,  ..., 0.0010, 0.0209, 0.0065],
         [0.9265, 0.0061, 0.0051,  ..., 0.0010, 0.9372, 0.9804],
         [0.0245, 0.9816, 0.0056,  ..., 0.0010, 0.0209, 0.0065]],
        [[0.8335, 0.0013, 0.9442,  ..., 0.9896, 0.0034, 0.0136],
         [0.0230, 0.0013, 0.0186,  ..., 0.0035, 0.0034, 0.0136],
         [0.0230, 0.0013, 0.0186,  ..., 0.0035, 0.0034, 0.9592],
         [0.1205, 0.9961, 0.0186,  ..., 0.0035, 0.9897, 0.0136]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:27:27,634 [Process: 0] Synchronize training processes
2024-08-19 13:27:27,634 [Process: 0] Evaluating...
2024-08-19 13:27:27,636 [Process: 0] EPOCH 140:
2024-08-19 13:27:27,638 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:28,674 [Process: 0] Synchronize training processes
2024-08-19 13:27:28,674 [Process: 0] Evaluating...
2024-08-19 13:27:28,676 [Process: 0] EPOCH 141:
2024-08-19 13:27:28,678 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8216, 0.0108, 0.0466,  ..., 0.9906, 0.9417, 0.0141],
         [0.0461, 0.0108, 0.0351,  ..., 0.0031, 0.0178, 0.0141],
         [0.0619, 0.0108, 0.0495,  ..., 0.0031, 0.0226, 0.0141],
         [0.0704, 0.9677, 0.8688,  ..., 0.0031, 0.0178, 0.9576]],
        [[0.9935, 0.0088, 0.0155,  ..., 0.0260, 0.0027, 0.0140],
         [0.0022, 0.0088, 0.0155,  ..., 0.0260, 0.0027, 0.0140],
         [0.0022, 0.0088, 0.0155,  ..., 0.0264, 0.9920, 0.9581],
         [0.0022, 0.9736, 0.9536,  ..., 0.9216, 0.0027, 0.0140]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1822e-02, 6.9136e-03, 9.8595e-01,  ..., 9.5166e-01,
          1.3337e-02, 4.8839e-03],
         [2.1822e-02, 6.9136e-03, 4.1811e-03,  ..., 1.0487e-02,
          1.3306e-02, 4.8839e-03],
         [9.3453e-01, 6.9136e-03, 4.1811e-03,  ..., 1.0487e-02,
          9.6005e-01, 9.8535e-01],
         [2.1822e-02, 9.7926e-01, 5.6851e-03,  ..., 2.7362e-02,
          1.3306e-02, 4.8839e-03]],
        [[3.9149e-01, 2.9951e-03, 9.9694e-01,  ..., 9.9876e-01,
          1.1018e-03, 2.3037e-02],
         [5.5467e-02, 2.9951e-03, 9.8996e-04,  ..., 4.1399e-04,
          1.1018e-03, 2.3037e-02],
         [5.5467e-02, 2.9951e-03, 9.8996e-04,  ..., 4.1399e-04,
          1.1018e-03, 9.3089e-01],
         [4.9758e-01, 9.9101e-01, 1.0776e-03,  ..., 4.1399e-04,
          9.9669e-01, 2.3037e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6905e-01, 9.1880e-03, 2.8291e-02,  ..., 9.9692e-01,
          7.9553e-01, 9.7000e-03],
         [1.0317e-02, 9.1880e-03, 2.8291e-02,  ..., 1.0362e-03,
          5.1417e-02, 9.7000e-03],
         [1.0317e-02, 9.1880e-03, 2.8291e-02,  ..., 1.0232e-03,
          6.9554e-02, 9.7000e-03],
         [1.0317e-02, 9.7244e-01, 9.1513e-01,  ..., 1.0232e-03,
          8.3494e-02, 9.7090e-01]],
        [[9.9900e-01, 2.2407e-02, 5.0294e-03,  ..., 1.6934e-02,
          1.4460e-03, 8.4300e-03],
         [3.3480e-04, 2.3352e-02, 5.0294e-03,  ..., 1.6934e-02,
          1.4460e-03, 8.4300e-03],
         [3.3480e-04, 2.2407e-02, 5.0294e-03,  ..., 1.6934e-02,
          9.9566e-01, 9.7471e-01],
         [3.3480e-04, 9.3183e-01, 9.8491e-01,  ..., 9.4920e-01,
          1.4460e-03, 8.4300e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2118e-03, 5.8222e-02, 9.9125e-01,  ..., 9.9744e-01,
          1.1930e-02, 9.6140e-03],
         [9.2118e-03, 3.0635e-02, 2.9168e-03,  ..., 8.5396e-04,
          1.1930e-02, 9.6140e-03],
         [9.7236e-01, 3.0635e-02, 2.9168e-03,  ..., 8.5396e-04,
          9.6421e-01, 9.7116e-01],
         [9.2118e-03, 8.8051e-01, 2.9168e-03,  ..., 8.5396e-04,
          1.1930e-02, 9.6140e-03]],
        [[1.5902e-01, 2.2124e-04, 9.9300e-01,  ..., 8.8029e-01,
          5.1545e-04, 2.3262e-02],
         [9.1958e-02, 2.2124e-04, 2.4160e-03,  ..., 3.7141e-02,
          5.1545e-04, 2.3155e-02],
         [8.0231e-02, 2.2124e-04, 2.2927e-03,  ..., 3.7141e-02,
          5.1545e-04, 9.3043e-01],
         [6.6879e-01, 9.9934e-01, 2.2927e-03,  ..., 4.5423e-02,
          9.9845e-01, 2.3155e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:27:29,715 [Process: 0] Synchronize training processes
2024-08-19 13:27:29,715 [Process: 0] Evaluating...
2024-08-19 13:27:30,697 [Process: 0] EPOCH 142:
2024-08-19 13:27:30,700 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6391e-01, 5.9159e-03, 1.1455e-01,  ..., 9.8390e-01,
          8.9246e-01, 9.6233e-03],
         [1.0489e-02, 5.9159e-03, 1.0019e-01,  ..., 5.3682e-03,
          3.0903e-02, 9.6233e-03],
         [1.5117e-02, 5.9159e-03, 2.1888e-01,  ..., 5.3682e-03,
          4.5733e-02, 9.6233e-03],
         [1.0489e-02, 9.8225e-01, 5.6638e-01,  ..., 5.3682e-03,
          3.0903e-02, 9.7113e-01]],
        [[9.9749e-01, 1.6679e-02, 1.8174e-02,  ..., 1.1857e-02,
          1.5171e-03, 1.0211e-02],
         [8.3666e-04, 1.6679e-02, 1.8174e-02,  ..., 1.1857e-02,
          1.5171e-03, 1.0211e-02],
         [8.3666e-04, 1.6679e-02, 1.8174e-02,  ..., 1.1857e-02,
          9.9545e-01, 9.6937e-01],
         [8.3666e-04, 9.4996e-01, 9.4548e-01,  ..., 9.6443e-01,
          1.5171e-03, 1.0211e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.3225e-02, 4.7816e-03, 9.9865e-01,  ..., 9.9304e-01,
          1.4208e-02, 7.0399e-03],
         [2.3225e-02, 4.7816e-03, 4.4830e-04,  ..., 2.3185e-03,
          1.4208e-02, 7.0399e-03],
         [9.3033e-01, 4.7816e-03, 4.4830e-04,  ..., 2.3185e-03,
          9.5737e-01, 9.7888e-01],
         [2.3225e-02, 9.8566e-01, 4.4830e-04,  ..., 2.3185e-03,
          1.4208e-02, 7.0399e-03]],
        [[9.8441e-02, 1.6480e-03, 9.9002e-01,  ..., 9.9357e-01,
          4.4901e-04, 2.0191e-02],
         [4.8261e-02, 1.6480e-03, 3.3281e-03,  ..., 2.1427e-03,
          4.4901e-04, 2.0191e-02],
         [4.8261e-02, 1.6480e-03, 3.3281e-03,  ..., 2.1427e-03,
          4.4901e-04, 9.3608e-01],
         [8.0504e-01, 9.9506e-01, 3.3281e-03,  ..., 2.1427e-03,
          9.9865e-01, 2.3533e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:27:31,698 [Process: 0] Synchronize training processes
2024-08-19 13:27:31,698 [Process: 0] Evaluating...
2024-08-19 13:27:31,700 [Process: 0] EPOCH 143:
2024-08-19 13:27:31,701 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:32,737 [Process: 0] Synchronize training processes
2024-08-19 13:27:32,738 [Process: 0] Evaluating...
2024-08-19 13:27:32,739 [Process: 0] EPOCH 144:
2024-08-19 13:27:32,741 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9839, 0.0044, 0.0039,  ..., 0.9957, 0.3702, 0.0300],
         [0.0054, 0.0044, 0.0039,  ..., 0.0014, 0.0989, 0.0275],
         [0.0054, 0.0044, 0.0039,  ..., 0.0014, 0.2018, 0.0275],
         [0.0054, 0.9867, 0.9883,  ..., 0.0014, 0.3291, 0.9150]],
        [[0.9800, 0.0368, 0.0062,  ..., 0.0114, 0.0029, 0.0034],
         [0.0082, 0.0368, 0.0062,  ..., 0.0114, 0.0029, 0.0034],
         [0.0059, 0.0496, 0.0062,  ..., 0.0131, 0.9913, 0.9899],
         [0.0059, 0.8767, 0.9813,  ..., 0.9641, 0.0029, 0.0034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.9736e-03, 1.2798e-02, 9.9083e-01,  ..., 9.9544e-01,
          8.9234e-03, 8.6876e-03],
         [7.9104e-03, 1.2798e-02, 3.0560e-03,  ..., 1.5217e-03,
          8.9234e-03, 8.6876e-03],
         [9.7621e-01, 1.2798e-02, 3.0560e-03,  ..., 1.5217e-03,
          9.7323e-01, 9.7394e-01],
         [7.9104e-03, 9.6161e-01, 3.0560e-03,  ..., 1.5217e-03,
          8.9234e-03, 8.6876e-03]],
        [[7.6852e-02, 3.7783e-04, 9.7918e-01,  ..., 9.6703e-01,
          1.3842e-04, 1.9767e-02],
         [7.9388e-02, 3.7783e-04, 6.6892e-03,  ..., 1.0989e-02,
          1.3842e-04, 1.8952e-02],
         [5.0788e-02, 3.7783e-04, 6.6892e-03,  ..., 1.0989e-02,
          1.3842e-04, 9.4233e-01],
         [7.9297e-01, 9.9887e-01, 7.4432e-03,  ..., 1.0989e-02,
          9.9958e-01, 1.8952e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9963, 0.0277, 0.0284,  ..., 0.9955, 0.1343, 0.0355],
         [0.0012, 0.0277, 0.0284,  ..., 0.0015, 0.0701, 0.0319],
         [0.0012, 0.0340, 0.0284,  ..., 0.0015, 0.1138, 0.0319],
         [0.0012, 0.9106, 0.9149,  ..., 0.0015, 0.6818, 0.9006]],
        [[0.9818, 0.0031, 0.0130,  ..., 0.0068, 0.0023, 0.0023],
         [0.0061, 0.0031, 0.0130,  ..., 0.0068, 0.0023, 0.0023],
         [0.0061, 0.0031, 0.0130,  ..., 0.0068, 0.9930, 0.9931],
         [0.0061, 0.9906, 0.9609,  ..., 0.9796, 0.0023, 0.0023]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6813e-02, 1.0227e-02, 9.9345e-01,  ..., 9.9632e-01,
          1.6289e-02, 1.5871e-02],
         [1.6813e-02, 1.0227e-02, 2.1834e-03,  ..., 1.2278e-03,
          1.6289e-02, 1.5871e-02],
         [9.4956e-01, 1.0227e-02, 2.1834e-03,  ..., 1.2278e-03,
          9.5113e-01, 9.5239e-01],
         [1.6813e-02, 9.6932e-01, 2.1834e-03,  ..., 1.2278e-03,
          1.6289e-02, 1.5871e-02]],
        [[1.5323e-01, 1.1528e-03, 9.7613e-01,  ..., 9.7567e-01,
          5.2688e-04, 1.0063e-02],
         [6.5780e-02, 1.1528e-03, 7.9552e-03,  ..., 8.1100e-03,
          5.2688e-04, 1.0063e-02],
         [5.7936e-02, 1.1528e-03, 7.9552e-03,  ..., 8.1100e-03,
          5.2688e-04, 9.6981e-01],
         [7.2305e-01, 9.9654e-01, 7.9552e-03,  ..., 8.1100e-03,
          9.9842e-01, 1.0063e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:27:33,776 [Process: 0] Synchronize training processes
2024-08-19 13:27:33,776 [Process: 0] Evaluating...
2024-08-19 13:27:33,778 [Process: 0] EPOCH 145:
2024-08-19 13:27:33,779 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:34,816 [Process: 0] Synchronize training processes
2024-08-19 13:27:34,816 [Process: 0] Evaluating...
2024-08-19 13:27:34,818 [Process: 0] EPOCH 146:
2024-08-19 13:27:34,820 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7372e-01, 2.7155e-02, 2.4857e-02,  ..., 9.8377e-01,
          7.6951e-01, 2.6133e-02],
         [8.7612e-03, 2.7155e-02, 2.4857e-02,  ..., 5.4093e-03,
          5.2226e-02, 2.6133e-02],
         [8.7612e-03, 3.2499e-02, 2.9531e-02,  ..., 5.4093e-03,
          7.1272e-02, 3.4423e-02],
         [8.7612e-03, 9.1319e-01, 9.2076e-01,  ..., 5.4093e-03,
          1.0699e-01, 9.1331e-01]],
        [[9.9771e-01, 1.6946e-02, 2.9865e-02,  ..., 2.2773e-02,
          1.6106e-03, 2.7192e-04],
         [7.6302e-04, 1.6946e-02, 2.9865e-02,  ..., 1.6761e-02,
          1.6106e-03, 2.7192e-04],
         [7.6302e-04, 1.6946e-02, 4.2674e-02,  ..., 1.6761e-02,
          9.9517e-01, 9.9918e-01],
         [7.6302e-04, 9.4916e-01, 8.9760e-01,  ..., 9.4371e-01,
          1.6106e-03, 2.7192e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8666e-02, 1.2892e-03, 9.9646e-01,  ..., 9.7299e-01,
          1.1173e-02, 1.1432e-02],
         [2.4883e-02, 1.2892e-03, 1.1816e-03,  ..., 9.0021e-03,
          1.1173e-02, 1.1432e-02],
         [9.2120e-01, 1.2892e-03, 1.1816e-03,  ..., 9.0021e-03,
          9.6648e-01, 9.6570e-01],
         [2.5248e-02, 9.9613e-01, 1.1816e-03,  ..., 9.0021e-03,
          1.1173e-02, 1.1432e-02]],
        [[9.4842e-01, 5.1219e-04, 9.7587e-01,  ..., 9.8078e-01,
          6.6644e-04, 9.1395e-03],
         [2.2283e-02, 5.1219e-04, 8.0420e-03,  ..., 6.4061e-03,
          6.6644e-04, 9.1395e-03],
         [1.4647e-02, 5.1219e-04, 8.0420e-03,  ..., 6.4061e-03,
          6.6644e-04, 9.7258e-01],
         [1.4647e-02, 9.9846e-01, 8.0420e-03,  ..., 6.4061e-03,
          9.9800e-01, 9.1395e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9962, 0.0954, 0.0246,  ..., 0.9641, 0.9083, 0.0302],
         [0.0013, 0.0585, 0.0246,  ..., 0.0119, 0.0265, 0.0302],
         [0.0013, 0.1103, 0.0246,  ..., 0.0120, 0.0349, 0.0351],
         [0.0013, 0.7358, 0.9261,  ..., 0.0119, 0.0303, 0.9044]],
        [[0.9885, 0.0276, 0.0149,  ..., 0.0122, 0.0027, 0.0019],
         [0.0038, 0.0276, 0.0115,  ..., 0.0122, 0.0027, 0.0019],
         [0.0038, 0.0276, 0.0115,  ..., 0.0122, 0.9918, 0.9943],
         [0.0038, 0.9173, 0.9622,  ..., 0.9634, 0.0027, 0.0019]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:27:35,857 [Process: 0] Synchronize training processes
2024-08-19 13:27:35,857 [Process: 0] Evaluating...
2024-08-19 13:27:35,859 [Process: 0] EPOCH 147:
2024-08-19 13:27:35,861 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:36,900 [Process: 0] Synchronize training processes
2024-08-19 13:27:36,901 [Process: 0] Evaluating...
2024-08-19 13:27:36,902 [Process: 0] EPOCH 148:
2024-08-19 13:27:36,904 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8526e-02, 2.6026e-03, 9.9128e-01,  ..., 8.8856e-01,
          7.9072e-03, 1.3272e-02],
         [2.8526e-02, 2.6026e-03, 2.7021e-03,  ..., 2.4354e-02,
          7.9072e-03, 1.3272e-02],
         [9.1434e-01, 2.6026e-03, 2.7021e-03,  ..., 2.4354e-02,
          9.7628e-01, 9.6018e-01],
         [2.8611e-02, 9.9219e-01, 3.3153e-03,  ..., 6.2729e-02,
          7.9072e-03, 1.3272e-02]],
        [[9.3592e-01, 5.9484e-04, 9.7004e-01,  ..., 9.8144e-01,
          8.9386e-03, 1.7185e-02],
         [2.1360e-02, 5.9484e-04, 9.9856e-03,  ..., 6.1855e-03,
          8.9386e-03, 1.7185e-02],
         [2.1360e-02, 5.9484e-04, 9.9856e-03,  ..., 6.1855e-03,
          8.9386e-03, 9.4842e-01],
         [2.1360e-02, 9.9822e-01, 9.9856e-03,  ..., 6.1855e-03,
          9.7318e-01, 1.7209e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9152, 0.0173, 0.0057,  ..., 0.9256, 0.9348, 0.0353],
         [0.0222, 0.0158, 0.0057,  ..., 0.0229, 0.0209, 0.0191],
         [0.0313, 0.0158, 0.0057,  ..., 0.0287, 0.0234, 0.0191],
         [0.0313, 0.9511, 0.9829,  ..., 0.0229, 0.0209, 0.9265]],
        [[0.9940, 0.0284, 0.0173,  ..., 0.0528, 0.0039, 0.0077],
         [0.0020, 0.0284, 0.0173,  ..., 0.0663, 0.0039, 0.0077],
         [0.0020, 0.0307, 0.0202,  ..., 0.0898, 0.9882, 0.9769],
         [0.0020, 0.9126, 0.9452,  ..., 0.7910, 0.0039, 0.0077]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4048e-02, 1.3867e-02, 9.7787e-01,  ..., 9.9546e-01,
          1.4421e-02, 1.2784e-02],
         [2.4048e-02, 1.3867e-02, 6.8369e-03,  ..., 1.5144e-03,
          1.4421e-02, 1.2784e-02],
         [9.2676e-01, 1.5878e-02, 6.8369e-03,  ..., 1.5144e-03,
          9.5674e-01, 9.6165e-01],
         [2.5147e-02, 9.5639e-01, 8.4554e-03,  ..., 1.5144e-03,
          1.4421e-02, 1.2784e-02]],
        [[8.4579e-01, 9.2154e-03, 9.3822e-01,  ..., 9.9516e-01,
          6.0817e-04, 2.6466e-02],
         [5.1715e-02, 8.1925e-03, 1.4387e-02,  ..., 1.6144e-03,
          6.0817e-04, 2.5140e-02],
         [4.6417e-02, 8.1925e-03, 1.4387e-02,  ..., 1.6144e-03,
          6.0817e-04, 9.2221e-01],
         [5.6077e-02, 9.7440e-01, 3.3008e-02,  ..., 1.6144e-03,
          9.9818e-01, 2.6189e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9864, 0.0071, 0.0108,  ..., 0.9768, 0.9391, 0.0237],
         [0.0045, 0.0071, 0.0096,  ..., 0.0077, 0.0194, 0.0214],
         [0.0045, 0.0071, 0.0096,  ..., 0.0077, 0.0221, 0.0261],
         [0.0045, 0.9787, 0.9699,  ..., 0.0077, 0.0194, 0.9288]],
        [[0.9428, 0.0240, 0.0053,  ..., 0.0238, 0.0075, 0.0075],
         [0.0281, 0.0280, 0.0053,  ..., 0.0271, 0.0075, 0.0075],
         [0.0145, 0.0240, 0.0053,  ..., 0.0240, 0.9775, 0.9775],
         [0.0145, 0.9239, 0.9840,  ..., 0.9251, 0.0075, 0.0075]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:27:37,940 [Process: 0] Synchronize training processes
2024-08-19 13:27:37,940 [Process: 0] Evaluating...
2024-08-19 13:27:37,942 [Process: 0] EPOCH 149:
2024-08-19 13:27:37,943 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:38,980 [Process: 0] Synchronize training processes
2024-08-19 13:27:38,981 [Process: 0] Evaluating...
2024-08-19 13:27:38,982 [Process: 0] EPOCH 150:
2024-08-19 13:27:38,984 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5011e-03, 1.5250e-03, 9.9240e-01,  ..., 9.9609e-01,
          2.1545e-02, 9.9732e-03],
         [9.5011e-03, 1.5250e-03, 2.1473e-03,  ..., 1.3038e-03,
          2.1545e-02, 9.9732e-03],
         [9.7150e-01, 1.5250e-03, 2.1473e-03,  ..., 1.3038e-03,
          9.2718e-01, 9.7008e-01],
         [9.5011e-03, 9.9543e-01, 3.3045e-03,  ..., 1.3038e-03,
          2.9730e-02, 9.9732e-03]],
        [[6.3788e-01, 7.4333e-04, 9.7488e-01,  ..., 9.8844e-01,
          2.1393e-04, 1.2036e-02],
         [8.8855e-02, 7.4333e-04, 8.3730e-03,  ..., 3.8538e-03,
          2.1393e-04, 1.2036e-02],
         [6.4824e-02, 7.4333e-04, 8.3730e-03,  ..., 3.8538e-03,
          2.1393e-04, 9.6389e-01],
         [2.0844e-01, 9.9777e-01, 8.3730e-03,  ..., 3.8538e-03,
          9.9936e-01, 1.2036e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9784, 0.0280, 0.0106,  ..., 0.9944, 0.9803, 0.0309],
         [0.0072, 0.0280, 0.0106,  ..., 0.0019, 0.0066, 0.0309],
         [0.0072, 0.0303, 0.0106,  ..., 0.0019, 0.0066, 0.0451],
         [0.0072, 0.9138, 0.9681,  ..., 0.0019, 0.0066, 0.8930]],
        [[0.9876, 0.0206, 0.0131,  ..., 0.0129, 0.0030, 0.0015],
         [0.0041, 0.0206, 0.0131,  ..., 0.0129, 0.0030, 0.0015],
         [0.0041, 0.0217, 0.0131,  ..., 0.0129, 0.9911, 0.9956],
         [0.0041, 0.9372, 0.9606,  ..., 0.9612, 0.0030, 0.0015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2656e-02, 2.7297e-03, 9.8828e-01,  ..., 9.9106e-01,
          1.9350e-02, 1.7100e-02],
         [2.0159e-02, 2.7297e-03, 3.9076e-03,  ..., 2.9799e-03,
          1.9350e-02, 1.7100e-02],
         [9.3703e-01, 2.7297e-03, 3.9076e-03,  ..., 2.9799e-03,
          9.4091e-01, 9.4870e-01],
         [2.0159e-02, 9.9181e-01, 3.9076e-03,  ..., 2.9799e-03,
          2.0389e-02, 1.7100e-02]],
        [[5.8385e-01, 1.2304e-03, 9.7770e-01,  ..., 9.8869e-01,
          1.8991e-04, 2.2425e-02],
         [1.5231e-01, 1.2493e-03, 7.4321e-03,  ..., 3.7693e-03,
          1.8991e-04, 2.0552e-02],
         [7.4381e-02, 1.2304e-03, 7.4321e-03,  ..., 3.7693e-03,
          1.8991e-04, 9.3111e-01],
         [1.8946e-01, 9.9629e-01, 7.4321e-03,  ..., 3.7693e-03,
          9.9943e-01, 2.5913e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9729e-01, 2.3140e-02, 7.7619e-03,  ..., 9.6160e-01,
          9.7798e-01, 8.5699e-03],
         [9.0451e-04, 2.3509e-02, 7.7619e-03,  ..., 1.6662e-02,
          7.2331e-03, 8.5699e-03],
         [9.0451e-04, 2.3140e-02, 7.7619e-03,  ..., 1.0869e-02,
          7.5488e-03, 8.5699e-03],
         [9.0451e-04, 9.3021e-01, 9.7671e-01,  ..., 1.0869e-02,
          7.2331e-03, 9.7429e-01]],
        [[9.8813e-01, 8.1049e-03, 9.9778e-03,  ..., 1.0844e-02,
          5.6420e-03, 2.4226e-03],
         [3.9557e-03, 8.1049e-03, 9.9778e-03,  ..., 1.0754e-02,
          5.6420e-03, 2.4226e-03],
         [3.9557e-03, 8.1049e-03, 9.9778e-03,  ..., 1.0754e-02,
          9.8307e-01, 9.9273e-01],
         [3.9557e-03, 9.7569e-01, 9.7007e-01,  ..., 9.6765e-01,
          5.6420e-03, 2.4226e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:27:40,045 [Process: 0] Synchronize training processes
2024-08-19 13:27:40,046 [Process: 0] Evaluating...
2024-08-19 13:27:40,047 [Process: 0] EPOCH 151:
2024-08-19 13:27:40,049 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:41,108 [Process: 0] Synchronize training processes
2024-08-19 13:27:41,108 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0143, 0.0135, 0.9962,  ..., 0.9963, 0.0122, 0.0196],
         [0.0143, 0.0135, 0.0013,  ..., 0.0012, 0.0122, 0.0196],
         [0.9570, 0.0135, 0.0013,  ..., 0.0012, 0.9635, 0.9412],
         [0.0144, 0.9596, 0.0013,  ..., 0.0014, 0.0122, 0.0196]],
        [[0.0733, 0.0040, 0.9655,  ..., 0.9892, 0.0011, 0.0096],
         [0.7795, 0.0040, 0.0109,  ..., 0.0036, 0.0011, 0.0096],
         [0.0701, 0.0040, 0.0109,  ..., 0.0036, 0.0011, 0.9712],
         [0.0771, 0.9880, 0.0126,  ..., 0.0036, 0.9967, 0.0096]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9674, 0.0343, 0.0245,  ..., 0.9579, 0.9853, 0.0082],
         [0.0098, 0.0343, 0.0241,  ..., 0.0123, 0.0048, 0.0082],
         [0.0129, 0.0631, 0.0260,  ..., 0.0176, 0.0050, 0.0082],
         [0.0098, 0.8683, 0.9254,  ..., 0.0123, 0.0048, 0.9755]],
        [[0.9826, 0.0681, 0.0158,  ..., 0.0062, 0.0035, 0.0034],
         [0.0058, 0.0659, 0.0139,  ..., 0.0062, 0.0035, 0.0034],
         [0.0058, 0.1198, 0.0139,  ..., 0.0062, 0.9896, 0.9899],
         [0.0058, 0.7461, 0.9565,  ..., 0.9813, 0.0035, 0.0034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0091, 0.0170, 0.9773,  ..., 0.9864, 0.0170, 0.0355],
         [0.0091, 0.0170, 0.0060,  ..., 0.0045, 0.0170, 0.0320],
         [0.9727, 0.0170, 0.0060,  ..., 0.0045, 0.9491, 0.8829],
         [0.0091, 0.9490, 0.0107,  ..., 0.0045, 0.0170, 0.0496]],
        [[0.0690, 0.0084, 0.9917,  ..., 0.9706, 0.0031, 0.0168],
         [0.7955, 0.0084, 0.0028,  ..., 0.0097, 0.0031, 0.0168],
         [0.0677, 0.0084, 0.0028,  ..., 0.0097, 0.0031, 0.9495],
         [0.0677, 0.9749, 0.0028,  ..., 0.0099, 0.9908, 0.0168]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:27:42,101 [Process: 0] EPOCH 152:
2024-08-19 13:27:42,103 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:43,099 [Process: 0] Synchronize training processes
2024-08-19 13:27:43,099 [Process: 0] Evaluating...
2024-08-19 13:27:43,101 [Process: 0] EPOCH 153:
2024-08-19 13:27:43,103 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9859, 0.0199, 0.0188,  ..., 0.9854, 0.9264, 0.0156],
         [0.0045, 0.0199, 0.0188,  ..., 0.0050, 0.0212, 0.0156],
         [0.0048, 0.0199, 0.0188,  ..., 0.0048, 0.0276, 0.0156],
         [0.0047, 0.9403, 0.9437,  ..., 0.0048, 0.0248, 0.9531]],
        [[0.9654, 0.0057, 0.0121,  ..., 0.0330, 0.0042, 0.0068],
         [0.0104, 0.0057, 0.0121,  ..., 0.0330, 0.0042, 0.0068],
         [0.0138, 0.0057, 0.0134,  ..., 0.0387, 0.9874, 0.9795],
         [0.0104, 0.9830, 0.9625,  ..., 0.8954, 0.0042, 0.0068]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0325e-02, 1.6874e-02, 9.7851e-01,  ..., 9.5668e-01,
          1.7961e-02, 2.4659e-02],
         [1.0325e-02, 1.6874e-02, 6.8027e-03,  ..., 1.2443e-02,
          1.7961e-02, 2.4659e-02],
         [9.6903e-01, 1.8085e-02, 6.8027e-03,  ..., 1.2443e-02,
          9.4612e-01, 9.2397e-01],
         [1.0325e-02, 9.4817e-01, 7.8825e-03,  ..., 1.8432e-02,
          1.7961e-02, 2.6709e-02]],
        [[1.2225e-01, 1.4329e-03, 9.9476e-01,  ..., 9.9018e-01,
          9.4196e-04, 1.0452e-02],
         [7.3569e-01, 1.4329e-03, 1.7462e-03,  ..., 3.2741e-03,
          9.4196e-04, 1.0452e-02],
         [6.8799e-02, 1.4329e-03, 1.7462e-03,  ..., 3.2741e-03,
          9.4196e-04, 9.6864e-01],
         [7.3260e-02, 9.9570e-01, 1.7462e-03,  ..., 3.2741e-03,
          9.9717e-01, 1.0452e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9926, 0.0094, 0.0104,  ..., 0.9908, 0.9033, 0.0166],
         [0.0025, 0.0094, 0.0104,  ..., 0.0031, 0.0271, 0.0144],
         [0.0025, 0.0094, 0.0104,  ..., 0.0031, 0.0394, 0.0144],
         [0.0025, 0.9719, 0.9689,  ..., 0.0031, 0.0302, 0.9546]],
        [[0.9874, 0.0058, 0.0086,  ..., 0.0268, 0.0061, 0.0034],
         [0.0042, 0.0048, 0.0086,  ..., 0.0268, 0.0061, 0.0034],
         [0.0042, 0.0048, 0.0086,  ..., 0.0268, 0.9817, 0.9897],
         [0.0042, 0.9845, 0.9742,  ..., 0.9197, 0.0061, 0.0034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:27:44,139 [Process: 0] Synchronize training processes
2024-08-19 13:27:44,139 [Process: 0] Evaluating...
2024-08-19 13:27:44,141 [Process: 0] EPOCH 154:
2024-08-19 13:27:44,143 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:45,178 [Process: 0] Synchronize training processes
2024-08-19 13:27:45,179 [Process: 0] Evaluating...
2024-08-19 13:27:45,180 [Process: 0] EPOCH 155:
2024-08-19 13:27:45,182 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.2775e-03, 2.7712e-03, 9.9896e-01,  ..., 9.9823e-01,
          1.1774e-02, 1.9034e-02],
         [8.2775e-03, 2.7712e-03, 3.4597e-04,  ..., 5.9039e-04,
          1.1774e-02, 1.9034e-02],
         [9.7517e-01, 2.7712e-03, 3.4597e-04,  ..., 5.9039e-04,
          9.6468e-01, 9.4290e-01],
         [8.2775e-03, 9.9169e-01, 3.4597e-04,  ..., 5.9039e-04,
          1.1774e-02, 1.9034e-02]],
        [[5.2136e-02, 3.1294e-03, 9.5309e-01,  ..., 9.9788e-01,
          2.4032e-04, 2.0816e-02],
         [7.8699e-01, 3.1294e-03, 1.9264e-02,  ..., 7.0675e-04,
          2.4032e-04, 2.0161e-02],
         [5.2136e-02, 3.1294e-03, 1.3822e-02,  ..., 7.0675e-04,
          2.4032e-04, 9.3879e-01],
         [1.0874e-01, 9.9061e-01, 1.3822e-02,  ..., 7.0675e-04,
          9.9928e-01, 2.0234e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9946, 0.0193, 0.0334,  ..., 0.9884, 0.8946, 0.0079],
         [0.0018, 0.0193, 0.0334,  ..., 0.0042, 0.0307, 0.0079],
         [0.0018, 0.0193, 0.0397,  ..., 0.0037, 0.0440, 0.0079],
         [0.0018, 0.9421, 0.8936,  ..., 0.0037, 0.0307, 0.9762]],
        [[0.9944, 0.0106, 0.0341,  ..., 0.0072, 0.0051, 0.0029],
         [0.0019, 0.0106, 0.0270,  ..., 0.0069, 0.0051, 0.0029],
         [0.0019, 0.0106, 0.0270,  ..., 0.0069, 0.9846, 0.9914],
         [0.0019, 0.9682, 0.9118,  ..., 0.9791, 0.0051, 0.0029]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4496e-02, 1.4591e-03, 9.9613e-01,  ..., 9.8348e-01,
          7.2126e-03, 1.2463e-02],
         [1.4496e-02, 1.4591e-03, 1.2908e-03,  ..., 5.5063e-03,
          7.2126e-03, 1.2463e-02],
         [9.5651e-01, 1.4591e-03, 1.2908e-03,  ..., 5.5063e-03,
          9.7836e-01, 9.6261e-01],
         [1.4496e-02, 9.9562e-01, 1.2908e-03,  ..., 5.5063e-03,
          7.2126e-03, 1.2463e-02]],
        [[2.7671e-01, 1.0470e-04, 9.9147e-01,  ..., 9.9712e-01,
          4.4961e-04, 1.5278e-02],
         [3.6903e-01, 1.0470e-04, 2.8433e-03,  ..., 9.5868e-04,
          4.4961e-04, 1.5278e-02],
         [1.0593e-01, 1.0470e-04, 2.8433e-03,  ..., 9.5868e-04,
          4.4961e-04, 9.5417e-01],
         [2.4834e-01, 9.9969e-01, 2.8433e-03,  ..., 9.5868e-04,
          9.9865e-01, 1.5278e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9964, 0.0126, 0.0304,  ..., 0.9869, 0.9767, 0.0153],
         [0.0012, 0.0126, 0.0304,  ..., 0.0041, 0.0078, 0.0153],
         [0.0012, 0.0126, 0.0396,  ..., 0.0050, 0.0078, 0.0153],
         [0.0012, 0.9621, 0.8996,  ..., 0.0041, 0.0078, 0.9541]],
        [[0.9949, 0.0068, 0.0263,  ..., 0.0051, 0.0069, 0.0022],
         [0.0017, 0.0068, 0.0263,  ..., 0.0051, 0.0069, 0.0022],
         [0.0017, 0.0068, 0.0263,  ..., 0.0051, 0.9793, 0.9935],
         [0.0017, 0.9795, 0.9210,  ..., 0.9847, 0.0069, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:27:46,218 [Process: 0] Synchronize training processes
2024-08-19 13:27:46,219 [Process: 0] Evaluating...
2024-08-19 13:27:46,220 [Process: 0] EPOCH 156:
2024-08-19 13:27:46,222 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:47,257 [Process: 0] Synchronize training processes
2024-08-19 13:27:47,258 [Process: 0] Evaluating...
2024-08-19 13:27:47,260 [Process: 0] EPOCH 157:
2024-08-19 13:27:47,262 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6291e-02, 5.4647e-03, 9.9123e-01,  ..., 9.9364e-01,
          1.0947e-02, 1.8189e-02],
         [1.6291e-02, 5.4647e-03, 2.5570e-03,  ..., 2.1206e-03,
          1.0947e-02, 1.8189e-02],
         [9.5113e-01, 5.4647e-03, 2.5570e-03,  ..., 2.1206e-03,
          9.6716e-01, 9.4490e-01],
         [1.6291e-02, 9.8361e-01, 3.6518e-03,  ..., 2.1206e-03,
          1.0947e-02, 1.8721e-02]],
        [[5.2854e-02, 8.3493e-04, 9.8891e-01,  ..., 9.8131e-01,
          1.6792e-04, 1.2781e-02],
         [4.8679e-01, 8.3493e-04, 3.6982e-03,  ..., 6.2306e-03,
          1.6792e-04, 1.2781e-02],
         [5.2854e-02, 8.3493e-04, 3.6982e-03,  ..., 6.2306e-03,
          1.6792e-04, 9.6166e-01],
         [4.0751e-01, 9.9750e-01, 3.6982e-03,  ..., 6.2306e-03,
          9.9950e-01, 1.2781e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9858, 0.0075, 0.0381,  ..., 0.9886, 0.9842, 0.0239],
         [0.0047, 0.0075, 0.0381,  ..., 0.0037, 0.0051, 0.0239],
         [0.0047, 0.0075, 0.0466,  ..., 0.0040, 0.0057, 0.0324],
         [0.0047, 0.9775, 0.8773,  ..., 0.0037, 0.0051, 0.9197]],
        [[0.9896, 0.0090, 0.0058,  ..., 0.0152, 0.0066, 0.0012],
         [0.0034, 0.0090, 0.0058,  ..., 0.0152, 0.0066, 0.0012],
         [0.0037, 0.0090, 0.0058,  ..., 0.0152, 0.9801, 0.9964],
         [0.0034, 0.9731, 0.9827,  ..., 0.9543, 0.0066, 0.0012]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1021e-02, 2.1683e-02, 9.8816e-01,  ..., 9.9915e-01,
          3.6220e-02, 1.0761e-02],
         [1.1021e-02, 2.1683e-02, 3.9482e-03,  ..., 2.8425e-04,
          3.2107e-02, 1.0761e-02],
         [9.6694e-01, 2.7673e-02, 3.9482e-03,  ..., 2.8425e-04,
          8.9343e-01, 9.6772e-01],
         [1.1021e-02, 9.2896e-01, 3.9482e-03,  ..., 2.8425e-04,
          3.8246e-02, 1.0761e-02]],
        [[6.0846e-02, 2.2552e-04, 9.9577e-01,  ..., 9.6591e-01,
          1.0123e-03, 2.6588e-02],
         [2.1493e-01, 2.2552e-04, 1.4109e-03,  ..., 1.0474e-02,
          1.0123e-03, 2.3122e-02],
         [4.9132e-02, 2.2552e-04, 1.4109e-03,  ..., 1.0474e-02,
          1.0123e-03, 9.2717e-01],
         [6.7509e-01, 9.9932e-01, 1.4109e-03,  ..., 1.3142e-02,
          9.9696e-01, 2.3122e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9920, 0.0088, 0.0123,  ..., 0.9909, 0.9800, 0.0204],
         [0.0027, 0.0072, 0.0123,  ..., 0.0030, 0.0064, 0.0204],
         [0.0027, 0.0072, 0.0123,  ..., 0.0031, 0.0071, 0.0204],
         [0.0027, 0.9768, 0.9631,  ..., 0.0030, 0.0064, 0.9388]],
        [[0.9896, 0.0067, 0.0088,  ..., 0.0078, 0.0055, 0.0038],
         [0.0035, 0.0067, 0.0088,  ..., 0.0078, 0.0055, 0.0038],
         [0.0035, 0.0067, 0.0088,  ..., 0.0078, 0.9835, 0.9887],
         [0.0035, 0.9800, 0.9736,  ..., 0.9766, 0.0055, 0.0038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:27:48,306 [Process: 0] Synchronize training processes
2024-08-19 13:27:48,306 [Process: 0] Evaluating...
2024-08-19 13:27:48,308 [Process: 0] EPOCH 158:
2024-08-19 13:27:48,310 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3036e-02, 5.1379e-03, 9.9474e-01,  ..., 9.7861e-01,
          1.3658e-02, 8.4434e-03],
         [1.3036e-02, 5.1379e-03, 1.7526e-03,  ..., 7.1284e-03,
          1.3658e-02, 8.4434e-03],
         [9.6089e-01, 5.1379e-03, 1.7526e-03,  ..., 7.1284e-03,
          9.5903e-01, 9.7467e-01],
         [1.3036e-02, 9.8459e-01, 1.7526e-03,  ..., 7.1291e-03,
          1.3658e-02, 8.4434e-03]],
        [[2.7161e-02, 2.3859e-04, 9.9853e-01,  ..., 9.7921e-01,
          3.2484e-03, 2.6123e-02],
         [2.2971e-01, 2.3859e-04, 4.8858e-04,  ..., 6.9305e-03,
          3.2484e-03, 2.4377e-02],
         [2.7161e-02, 2.3859e-04, 4.8858e-04,  ..., 6.9305e-03,
          3.2484e-03, 9.2512e-01],
         [7.1597e-01, 9.9928e-01, 4.8858e-04,  ..., 6.9305e-03,
          9.9025e-01, 2.4377e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9931, 0.0126, 0.0160,  ..., 0.9963, 0.7909, 0.0062],
         [0.0023, 0.0126, 0.0160,  ..., 0.0012, 0.0449, 0.0062],
         [0.0023, 0.0126, 0.0160,  ..., 0.0012, 0.0625, 0.0062],
         [0.0023, 0.9623, 0.9520,  ..., 0.0012, 0.1016, 0.9814]],
        [[0.9796, 0.0123, 0.0074,  ..., 0.0317, 0.0069, 0.0066],
         [0.0068, 0.0123, 0.0074,  ..., 0.0317, 0.0069, 0.0066],
         [0.0068, 0.0123, 0.0074,  ..., 0.0527, 0.9793, 0.9802],
         [0.0068, 0.9632, 0.9779,  ..., 0.8840, 0.0069, 0.0066]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5523e-02, 2.3078e-03, 9.9691e-01,  ..., 9.9404e-01,
          1.3920e-02, 2.1848e-02],
         [3.1488e-02, 2.3078e-03, 1.0300e-03,  ..., 1.9873e-03,
          1.3920e-02, 2.0050e-02],
         [8.9814e-01, 2.3078e-03, 1.0300e-03,  ..., 1.9873e-03,
          9.5824e-01, 9.3805e-01],
         [3.4845e-02, 9.9308e-01, 1.0300e-03,  ..., 1.9873e-03,
          1.3920e-02, 2.0050e-02]],
        [[6.7437e-01, 1.4109e-03, 9.9750e-01,  ..., 9.7326e-01,
          2.1936e-02, 7.0890e-03],
         [1.9274e-01, 1.4109e-03, 8.3490e-04,  ..., 8.3009e-03,
          1.0163e-02, 7.0890e-03],
         [6.3974e-02, 1.4109e-03, 8.3490e-04,  ..., 1.0141e-02,
          1.0163e-02, 9.7873e-01],
         [6.8916e-02, 9.9577e-01, 8.3490e-04,  ..., 8.3009e-03,
          9.5774e-01, 7.0890e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:27:49,347 [Process: 0] Synchronize training processes
2024-08-19 13:27:49,347 [Process: 0] Evaluating...
2024-08-19 13:27:49,349 [Process: 0] EPOCH 159:
2024-08-19 13:27:49,351 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:50,386 [Process: 0] Synchronize training processes
2024-08-19 13:27:50,386 [Process: 0] Evaluating...
2024-08-19 13:27:50,388 [Process: 0] EPOCH 160:
2024-08-19 13:27:50,390 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7325e-01, 6.8728e-03, 8.4767e-03,  ..., 9.9053e-01,
          7.6151e-01, 2.4330e-02],
         [8.2063e-03, 6.8728e-03, 8.4767e-03,  ..., 3.1552e-03,
          3.8960e-02, 2.4330e-02],
         [1.0338e-02, 6.8728e-03, 8.4767e-03,  ..., 3.1552e-03,
          3.8960e-02, 2.4330e-02],
         [8.2063e-03, 9.7938e-01, 9.7457e-01,  ..., 3.1552e-03,
          1.6057e-01, 9.2701e-01]],
        [[9.9454e-01, 1.8607e-02, 6.6591e-03,  ..., 6.1479e-03,
          2.0444e-03, 9.4534e-04],
         [1.7825e-03, 1.8607e-02, 6.6591e-03,  ..., 6.1479e-03,
          2.0444e-03, 9.4534e-04],
         [1.8940e-03, 2.4930e-02, 6.6591e-03,  ..., 6.1479e-03,
          9.9387e-01, 9.9716e-01],
         [1.7825e-03, 9.3786e-01, 9.8002e-01,  ..., 9.8156e-01,
          2.0444e-03, 9.4534e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2739e-02, 3.8398e-03, 9.9622e-01,  ..., 9.9065e-01,
          1.1755e-02, 3.2679e-02],
         [1.2739e-02, 3.8398e-03, 1.2586e-03,  ..., 3.1161e-03,
          1.1755e-02, 2.9412e-02],
         [9.6178e-01, 3.8398e-03, 1.2586e-03,  ..., 3.1161e-03,
          9.6474e-01, 9.0850e-01],
         [1.2739e-02, 9.8848e-01, 1.2586e-03,  ..., 3.1161e-03,
          1.1755e-02, 2.9412e-02]],
        [[4.9126e-01, 2.1687e-03, 9.9776e-01,  ..., 9.8302e-01,
          6.5712e-03, 3.9481e-03],
         [2.5523e-01, 2.1687e-03, 7.4751e-04,  ..., 5.6585e-03,
          2.9477e-03, 3.9481e-03],
         [8.8645e-02, 2.1687e-03, 7.4751e-04,  ..., 5.6585e-03,
          2.9477e-03, 9.8816e-01],
         [1.6486e-01, 9.9349e-01, 7.4751e-04,  ..., 5.6585e-03,
          9.8753e-01, 3.9481e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 160:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5050e-01, 1.7940e-02, 3.3938e-02,  ..., 9.7315e-01,
          7.2194e-01, 1.3419e-02],
         [1.5315e-02, 1.7940e-02, 3.3938e-02,  ..., 1.4670e-02,
          5.9511e-02, 1.3419e-02],
         [1.5315e-02, 1.8177e-02, 5.1991e-02,  ..., 6.0876e-03,
          1.0700e-01, 1.3419e-02],
         [1.8874e-02, 9.4594e-01, 8.8013e-01,  ..., 6.0876e-03,
          1.1155e-01, 9.5974e-01]],
        [[9.9899e-01, 8.1821e-03, 8.9607e-03,  ..., 8.3786e-03,
          9.9443e-03, 4.0005e-03],
         [3.3815e-04, 8.1821e-03, 8.9607e-03,  ..., 8.3786e-03,
          9.9443e-03, 4.0005e-03],
         [3.3815e-04, 8.1821e-03, 8.9607e-03,  ..., 8.3786e-03,
          9.7017e-01, 9.8800e-01],
         [3.3815e-04, 9.7545e-01, 9.7312e-01,  ..., 9.7486e-01,
          9.9443e-03, 4.0005e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7653e-02, 3.5908e-04, 9.9783e-01,  ..., 9.9467e-01,
          1.7506e-02, 1.3268e-02],
         [1.7202e-02, 3.5908e-04, 6.8430e-04,  ..., 1.7768e-03,
          1.7506e-02, 1.3268e-02],
         [9.4794e-01, 3.5908e-04, 6.8430e-04,  ..., 1.7768e-03,
          9.4748e-01, 9.6020e-01],
         [1.7202e-02, 9.9892e-01, 7.9917e-04,  ..., 1.7768e-03,
          1.7506e-02, 1.3268e-02]],
        [[1.2944e-01, 4.5255e-04, 9.8527e-01,  ..., 7.4056e-01,
          1.2679e-02, 1.1551e-02],
         [7.5373e-01, 4.5255e-04, 4.9090e-03,  ..., 5.2126e-02,
          7.9858e-03, 1.1551e-02],
         [5.3119e-02, 4.5255e-04, 4.9090e-03,  ..., 5.5489e-02,
          7.9858e-03, 9.6535e-01],
         [6.3711e-02, 9.9864e-01, 4.9090e-03,  ..., 1.5183e-01,
          9.7135e-01, 1.1551e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 161:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:51,426 [Process: 0] Synchronize training processes
2024-08-19 13:27:51,426 [Process: 0] Evaluating...
2024-08-19 13:27:51,428 [Process: 0] EPOCH 161:
2024-08-19 13:27:51,429 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:52,465 [Process: 0] Synchronize training processes
2024-08-19 13:27:52,465 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8719e-01, 5.8413e-03, 1.7916e-02,  ..., 8.7538e-01,
          2.0046e-01, 1.7245e-02],
         [4.2684e-03, 5.8413e-03, 1.7916e-02,  ..., 3.4751e-02,
          4.4326e-01, 1.7245e-02],
         [4.2684e-03, 5.8413e-03, 1.9107e-02,  ..., 3.7509e-02,
          1.5186e-01, 1.7245e-02],
         [4.2684e-03, 9.8248e-01, 9.4506e-01,  ..., 5.2365e-02,
          2.0442e-01, 9.4826e-01]],
        [[9.9705e-01, 5.3185e-03, 2.9430e-02,  ..., 4.4206e-02,
          1.5976e-03, 1.1219e-03],
         [9.8227e-04, 5.3185e-03, 2.9430e-02,  ..., 3.6534e-02,
          1.5976e-03, 1.1219e-03],
         [9.8227e-04, 5.3185e-03, 3.5545e-02,  ..., 4.1625e-02,
          9.9521e-01, 9.9663e-01],
         [9.8227e-04, 9.8404e-01, 9.0560e-01,  ..., 8.7763e-01,
          1.5976e-03, 1.1219e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7245e-03, 3.7610e-03, 9.9390e-01,  ..., 9.9861e-01,
          1.1962e-02, 1.3642e-02],
         [9.7245e-03, 3.6284e-03, 2.0337e-03,  ..., 4.6326e-04,
          1.1962e-02, 1.3642e-02],
         [9.7083e-01, 3.6284e-03, 2.0337e-03,  ..., 4.6326e-04,
          9.6411e-01, 9.5907e-01],
         [9.7245e-03, 9.8898e-01, 2.0337e-03,  ..., 4.6326e-04,
          1.1962e-02, 1.3642e-02]],
        [[2.9710e-01, 3.7098e-04, 9.9251e-01,  ..., 9.3631e-05,
          6.4584e-03, 1.7453e-02],
         [3.4903e-01, 3.7098e-04, 2.4979e-03,  ..., 9.3631e-05,
          2.2139e-03, 1.7453e-02],
         [1.4248e-01, 3.7098e-04, 2.4979e-03,  ..., 9.3631e-05,
          2.2139e-03, 9.4712e-01],
         [2.1139e-01, 9.9889e-01, 2.4979e-03,  ..., 9.9972e-01,
          9.8911e-01, 1.7974e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 162:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-19 13:27:53,446 [Process: 0] EPOCH 162:
2024-08-19 13:27:53,449 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:54,447 [Process: 0] Synchronize training processes
2024-08-19 13:27:54,447 [Process: 0] Evaluating...
2024-08-19 13:27:54,449 [Process: 0] EPOCH 163:
2024-08-19 13:27:54,450 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9876e-01, 2.1532e-02, 2.5728e-02,  ..., 9.6935e-01,
          5.8093e-01, 1.4303e-02],
         [4.1336e-04, 2.1532e-02, 2.5728e-02,  ..., 1.0095e-02,
          8.0630e-02, 1.4303e-02],
         [4.1336e-04, 3.2289e-02, 3.4453e-02,  ..., 1.0095e-02,
          1.5495e-01, 1.4303e-02],
         [4.1336e-04, 9.2465e-01, 9.1409e-01,  ..., 1.0456e-02,
          1.8348e-01, 9.5709e-01]],
        [[9.9787e-01, 1.1347e-02, 4.7339e-03,  ..., 1.0691e-02,
          3.1537e-03, 2.4047e-03],
         [7.0952e-04, 1.1347e-02, 4.7339e-03,  ..., 1.0691e-02,
          3.1537e-03, 2.4047e-03],
         [7.0952e-04, 1.1347e-02, 4.7339e-03,  ..., 1.0691e-02,
          9.9054e-01, 9.9279e-01],
         [7.0952e-04, 9.6596e-01, 9.8580e-01,  ..., 9.6793e-01,
          3.1537e-03, 2.4047e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7113e-02, 2.8163e-02, 9.9556e-01,  ..., 9.8201e-01,
          1.4071e-02, 2.5126e-02],
         [1.7113e-02, 2.8163e-02, 1.4790e-03,  ..., 5.9766e-03,
          1.3632e-02, 2.4232e-02],
         [9.4866e-01, 6.6400e-02, 1.4790e-03,  ..., 5.9766e-03,
          9.5866e-01, 9.2314e-01],
         [1.7113e-02, 8.7727e-01, 1.4790e-03,  ..., 6.0327e-03,
          1.3632e-02, 2.7505e-02]],
        [[8.9836e-02, 1.3393e-03, 9.9307e-01,  ..., 2.6854e-04,
          3.9658e-03, 1.9525e-02],
         [7.5853e-01, 1.3393e-03, 2.3094e-03,  ..., 2.6854e-04,
          1.8384e-03, 1.9525e-02],
         [7.1073e-02, 1.3393e-03, 2.3094e-03,  ..., 2.6854e-04,
          1.8384e-03, 9.4063e-01],
         [8.0563e-02, 9.9598e-01, 2.3094e-03,  ..., 9.9919e-01,
          9.9236e-01, 2.0322e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 163:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8375e-01, 1.1618e-02, 3.6270e-02,  ..., 9.7458e-01,
          3.0615e-01, 1.2720e-02],
         [4.8670e-03, 1.1618e-02, 3.6270e-02,  ..., 8.4733e-03,
          8.8417e-02, 1.2720e-02],
         [6.5116e-03, 1.1618e-02, 6.7883e-02,  ..., 8.4733e-03,
          1.8670e-01, 1.2720e-02],
         [4.8670e-03, 9.6515e-01, 8.5958e-01,  ..., 8.4733e-03,
          4.1873e-01, 9.6184e-01]],
        [[9.9761e-01, 1.0340e-02, 1.7947e-02,  ..., 1.6456e-02,
          1.4376e-03, 1.0873e-03],
         [7.9741e-04, 1.0340e-02, 1.7947e-02,  ..., 1.6456e-02,
          1.4376e-03, 1.0873e-03],
         [7.9741e-04, 1.0340e-02, 2.0256e-02,  ..., 1.6884e-02,
          9.9569e-01, 9.9674e-01],
         [7.9741e-04, 9.6898e-01, 9.4385e-01,  ..., 9.5020e-01,
          1.4376e-03, 1.0873e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6491e-02, 1.1854e-03, 9.9797e-01,  ..., 9.9761e-01,
          7.6750e-03, 9.9639e-03],
         [1.6225e-02, 1.1854e-03, 6.1847e-04,  ..., 7.9570e-04,
          7.6750e-03, 9.9639e-03],
         [9.5106e-01, 1.1854e-03, 6.1847e-04,  ..., 7.9570e-04,
          9.7697e-01, 9.7011e-01],
         [1.6225e-02, 9.9644e-01, 7.8883e-04,  ..., 7.9570e-04,
          7.6750e-03, 9.9639e-03]],
        [[1.9544e-01, 1.4385e-02, 9.9229e-01,  ..., 9.9264e-01,
          9.6878e-04, 1.5142e-02],
         [6.1045e-01, 4.9011e-03, 2.3121e-03,  ..., 2.4546e-03,
          9.6878e-04, 1.5142e-02],
         [8.3646e-02, 4.9011e-03, 2.3121e-03,  ..., 2.4546e-03,
          9.6878e-04, 9.5458e-01],
         [1.1046e-01, 9.7581e-01, 3.0811e-03,  ..., 2.4546e-03,
          9.9709e-01, 1.5142e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 164:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:55,488 [Process: 0] Synchronize training processes
2024-08-19 13:27:55,488 [Process: 0] Evaluating...
2024-08-19 13:27:55,490 [Process: 0] EPOCH 164:
2024-08-19 13:27:55,492 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:56,529 [Process: 0] Synchronize training processes
2024-08-19 13:27:56,529 [Process: 0] Evaluating...
2024-08-19 13:27:56,531 [Process: 0] EPOCH 165:
2024-08-19 13:27:56,533 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9747e-01, 8.0573e-03, 3.5274e-02,  ..., 9.6077e-01,
          5.2210e-02, 1.4479e-02],
         [8.4412e-04, 8.0573e-03, 3.5274e-02,  ..., 1.4102e-02,
          5.2210e-02, 1.4479e-02],
         [8.4412e-04, 8.0573e-03, 8.9049e-01,  ..., 1.2565e-02,
          1.5465e-01, 2.0463e-02],
         [8.4412e-04, 9.7583e-01, 3.8965e-02,  ..., 1.2565e-02,
          7.4093e-01, 9.5058e-01]],
        [[9.9695e-01, 1.1950e-02, 1.6807e-02,  ..., 8.6739e-03,
          3.0395e-03, 1.9006e-03],
         [1.0172e-03, 1.1950e-02, 1.6807e-02,  ..., 8.6739e-03,
          3.0395e-03, 1.9006e-03],
         [1.0172e-03, 1.1950e-02, 1.6807e-02,  ..., 8.6739e-03,
          9.9088e-01, 9.9430e-01],
         [1.0172e-03, 9.6415e-01, 9.4958e-01,  ..., 9.7398e-01,
          3.0395e-03, 1.9006e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2981e-02, 1.5380e-03, 9.9506e-01,  ..., 9.8034e-01,
          1.7556e-02, 2.0989e-02],
         [1.2981e-02, 1.5380e-03, 1.6452e-03,  ..., 6.2555e-03,
          1.7556e-02, 2.0989e-02],
         [9.6106e-01, 1.5380e-03, 1.6452e-03,  ..., 6.2555e-03,
          9.4733e-01, 9.3580e-01],
         [1.2981e-02, 9.9539e-01, 1.6452e-03,  ..., 7.1502e-03,
          1.7556e-02, 2.2227e-02]],
        [[3.3520e-01, 2.4471e-03, 9.9781e-01,  ..., 9.9736e-01,
          1.0795e-03, 9.2456e-03],
         [4.5203e-01, 2.4471e-03, 7.2925e-04,  ..., 8.8091e-04,
          1.0795e-03, 9.2456e-03],
         [8.8153e-02, 2.4471e-03, 7.2925e-04,  ..., 8.8091e-04,
          1.0795e-03, 9.7226e-01],
         [1.2462e-01, 9.9266e-01, 7.3322e-04,  ..., 8.8091e-04,
          9.9676e-01, 9.2456e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 165:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9895, 0.0096, 0.0817,  ..., 0.9912, 0.0674, 0.0129],
         [0.0035, 0.0096, 0.1336,  ..., 0.0029, 0.0674, 0.0129],
         [0.0035, 0.0096, 0.2081,  ..., 0.0029, 0.2317, 0.0129],
         [0.0035, 0.9712, 0.5767,  ..., 0.0029, 0.6336, 0.9612]],
        [[0.9931, 0.0130, 0.0166,  ..., 0.0137, 0.0038, 0.0016],
         [0.0023, 0.0130, 0.0166,  ..., 0.0137, 0.0038, 0.0016],
         [0.0023, 0.0130, 0.0259,  ..., 0.0137, 0.9886, 0.9953],
         [0.0023, 0.9610, 0.9410,  ..., 0.9589, 0.0038, 0.0016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0427e-02, 2.2103e-03, 9.9214e-01,  ..., 9.9697e-01,
          1.1103e-02, 1.6692e-02],
         [2.0427e-02, 2.2103e-03, 2.6212e-03,  ..., 1.0101e-03,
          1.1103e-02, 1.6157e-02],
         [9.3872e-01, 2.2103e-03, 2.6212e-03,  ..., 1.0101e-03,
          9.6669e-01, 9.5099e-01],
         [2.0427e-02, 9.9337e-01, 2.6212e-03,  ..., 1.0101e-03,
          1.1103e-02, 1.6157e-02]],
        [[5.6070e-01, 1.9607e-03, 9.9784e-01,  ..., 9.9852e-01,
          4.2303e-03, 9.4223e-03],
         [3.4130e-01, 1.9607e-03, 7.1899e-04,  ..., 4.9413e-04,
          4.2303e-03, 9.4223e-03],
         [4.9004e-02, 1.9607e-03, 7.1899e-04,  ..., 4.9413e-04,
          4.2303e-03, 9.7173e-01],
         [4.9004e-02, 9.9412e-01, 7.1899e-04,  ..., 4.9413e-04,
          9.8731e-01, 9.4223e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 166:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:57,570 [Process: 0] Synchronize training processes
2024-08-19 13:27:57,570 [Process: 0] Evaluating...
2024-08-19 13:27:57,572 [Process: 0] EPOCH 166:
2024-08-19 13:27:57,574 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:58,610 [Process: 0] Synchronize training processes
2024-08-19 13:27:58,610 [Process: 0] Evaluating...
2024-08-19 13:27:58,612 [Process: 0] EPOCH 167:
2024-08-19 13:27:58,614 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8229e-01, 1.0704e-02, 1.2428e-02,  ..., 9.5259e-01,
          7.2318e-02, 2.7587e-02],
         [5.9029e-03, 1.0704e-02, 1.2428e-02,  ..., 1.6738e-02,
          6.7462e-02, 2.1350e-02],
         [5.9029e-03, 1.0704e-02, 1.2428e-02,  ..., 1.5337e-02,
          4.4695e-01, 2.1699e-02],
         [5.9029e-03, 9.6789e-01, 9.6272e-01,  ..., 1.5337e-02,
          4.1327e-01, 9.2936e-01]],
        [[9.9712e-01, 2.4801e-02, 1.3994e-02,  ..., 1.1020e-02,
          7.7992e-04, 1.7256e-04],
         [9.5935e-04, 2.4801e-02, 1.3994e-02,  ..., 1.1020e-02,
          7.7992e-04, 1.7256e-04],
         [9.5935e-04, 2.4801e-02, 1.3994e-02,  ..., 1.1020e-02,
          9.9766e-01, 9.9948e-01],
         [9.5935e-04, 9.2560e-01, 9.5802e-01,  ..., 9.6694e-01,
          7.7992e-04, 1.7256e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.8361e-03, 7.9949e-04, 9.9855e-01,  ..., 9.9484e-01,
          8.3727e-03, 1.6826e-02],
         [5.8361e-03, 7.9949e-04, 4.6954e-04,  ..., 1.7204e-03,
          8.3727e-03, 1.6826e-02],
         [9.8249e-01, 7.9949e-04, 4.6954e-04,  ..., 1.7204e-03,
          9.7488e-01, 9.4952e-01],
         [5.8361e-03, 9.9760e-01, 5.1150e-04,  ..., 1.7204e-03,
          8.3727e-03, 1.6826e-02]],
        [[1.7906e-01, 3.0510e-04, 9.9974e-01,  ..., 9.8849e-01,
          4.4441e-03, 6.9722e-03],
         [6.0814e-01, 3.0510e-04, 8.7124e-05,  ..., 3.8360e-03,
          4.0033e-03, 6.9722e-03],
         [7.4248e-02, 3.0510e-04, 8.7124e-05,  ..., 3.8360e-03,
          4.0033e-03, 9.7908e-01],
         [1.3855e-01, 9.9908e-01, 8.7124e-05,  ..., 3.8360e-03,
          9.8755e-01, 6.9722e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 167:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9482e-01, 5.1109e-03, 2.2547e-02,  ..., 9.7766e-01,
          5.1523e-02, 1.1650e-02],
         [1.7270e-03, 5.1109e-03, 2.2547e-02,  ..., 7.1941e-03,
          5.1523e-02, 9.7456e-03],
         [1.7270e-03, 5.1109e-03, 3.7776e-02,  ..., 7.9550e-03,
          2.0826e-01, 9.7456e-03],
         [1.7270e-03, 9.8467e-01, 9.1713e-01,  ..., 7.1941e-03,
          6.8869e-01, 9.6886e-01]],
        [[9.9831e-01, 2.9521e-02, 5.4507e-03,  ..., 8.4105e-03,
          1.3725e-03, 2.0473e-03],
         [5.6327e-04, 4.0369e-02, 5.4507e-03,  ..., 8.4105e-03,
          1.3725e-03, 2.0473e-03],
         [5.6327e-04, 4.4709e-02, 5.4507e-03,  ..., 8.4105e-03,
          9.9588e-01, 9.9386e-01],
         [5.6327e-04, 8.8540e-01, 9.8365e-01,  ..., 9.7477e-01,
          1.3725e-03, 2.0473e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1567e-02, 1.3500e-03, 9.9279e-01,  ..., 9.9661e-01,
          9.9953e-03, 2.8123e-02],
         [1.1567e-02, 1.3500e-03, 2.4049e-03,  ..., 1.1302e-03,
          9.9953e-03, 2.6319e-02],
         [9.6530e-01, 1.3500e-03, 2.4049e-03,  ..., 1.1302e-03,
          9.7001e-01, 9.1445e-01],
         [1.1567e-02, 9.9595e-01, 2.4049e-03,  ..., 1.1302e-03,
          9.9953e-03, 3.1108e-02]],
        [[3.2400e-01, 1.6044e-03, 9.9842e-01,  ..., 9.1768e-01,
          7.4786e-04, 2.4573e-02],
         [3.6583e-01, 1.6044e-03, 5.2733e-04,  ..., 2.4193e-02,
          7.4786e-04, 2.4573e-02],
         [8.1098e-02, 1.6044e-03, 5.2733e-04,  ..., 2.4193e-02,
          7.4786e-04, 9.1737e-01],
         [2.2907e-01, 9.9519e-01, 5.2733e-04,  ..., 3.3934e-02,
          9.9776e-01, 3.3484e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 168:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:27:59,650 [Process: 0] Synchronize training processes
2024-08-19 13:27:59,650 [Process: 0] Evaluating...
2024-08-19 13:27:59,652 [Process: 0] EPOCH 168:
2024-08-19 13:27:59,653 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:00,690 [Process: 0] Synchronize training processes
2024-08-19 13:28:00,691 [Process: 0] Evaluating...
2024-08-19 13:28:00,692 [Process: 0] EPOCH 169:
2024-08-19 13:28:00,694 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9497e-01, 5.1729e-03, 9.7752e-03,  ..., 9.7605e-01,
          2.9618e-02, 1.2749e-02],
         [1.6768e-03, 5.1729e-03, 9.7752e-03,  ..., 7.9818e-03,
          2.9618e-02, 1.2749e-02],
         [1.6768e-03, 5.1729e-03, 9.7752e-03,  ..., 7.9818e-03,
          4.7524e-02, 1.2749e-02],
         [1.6768e-03, 9.8448e-01, 9.7067e-01,  ..., 7.9818e-03,
          8.9324e-01, 9.6175e-01]],
        [[9.9660e-01, 1.9016e-02, 2.3825e-02,  ..., 2.5128e-02,
          9.8905e-04, 1.7069e-03],
         [1.1326e-03, 1.9016e-02, 2.2609e-02,  ..., 2.5128e-02,
          9.8905e-04, 1.7069e-03],
         [1.1326e-03, 2.6517e-02, 2.2836e-02,  ..., 2.5128e-02,
          9.9703e-01, 9.9488e-01],
         [1.1326e-03, 9.3545e-01, 9.3073e-01,  ..., 9.2462e-01,
          9.8905e-04, 1.7069e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0283e-02, 3.5054e-04, 9.8349e-01,  ..., 9.9932e-01,
          1.2708e-02, 1.5685e-02],
         [1.0283e-02, 3.5054e-04, 4.6562e-03,  ..., 2.2785e-04,
          1.2659e-02, 1.5685e-02],
         [9.6915e-01, 3.5054e-04, 4.6562e-03,  ..., 2.2785e-04,
          9.6197e-01, 9.5294e-01],
         [1.0283e-02, 9.9895e-01, 7.1932e-03,  ..., 2.2785e-04,
          1.2659e-02, 1.5685e-02]],
        [[2.7532e-01, 1.2987e-02, 9.8271e-01,  ..., 9.9457e-01,
          2.6241e-04, 2.0005e-02],
         [5.4945e-01, 1.0330e-02, 5.7642e-03,  ..., 1.9891e-03,
          2.6241e-04, 2.0005e-02],
         [6.6485e-02, 1.0330e-02, 5.7642e-03,  ..., 1.7185e-03,
          2.6241e-04, 9.3298e-01],
         [1.0875e-01, 9.6635e-01, 5.7642e-03,  ..., 1.7185e-03,
          9.9921e-01, 2.7014e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 169:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5958e-01, 1.7843e-02, 1.8654e-02,  ..., 9.7791e-01,
          1.2231e-02, 6.5893e-03],
         [1.3016e-02, 1.7843e-02, 1.6943e-02,  ..., 9.1018e-03,
          1.2231e-02, 6.5893e-03],
         [1.4385e-02, 1.9652e-02, 1.6943e-02,  ..., 6.4927e-03,
          1.2231e-02, 6.5893e-03],
         [1.3016e-02, 9.4466e-01, 9.4746e-01,  ..., 6.4927e-03,
          9.6331e-01, 9.8023e-01]],
        [[9.9967e-01, 6.5744e-03, 5.3432e-02,  ..., 4.2373e-02,
          2.0546e-04, 9.4677e-04],
         [1.0854e-04, 6.5744e-03, 3.1386e-02,  ..., 4.2373e-02,
          2.0546e-04, 9.4677e-04],
         [1.0854e-04, 6.5744e-03, 3.2940e-02,  ..., 7.3620e-02,
          9.9938e-01, 9.9716e-01],
         [1.0854e-04, 9.8028e-01, 8.8224e-01,  ..., 8.4163e-01,
          2.0546e-04, 9.4677e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7425e-02, 7.8889e-04, 9.9420e-01,  ..., 9.9424e-01,
          1.6280e-02, 8.0223e-03],
         [3.0487e-02, 7.8889e-04, 1.9323e-03,  ..., 1.9212e-03,
          1.6280e-02, 8.0223e-03],
         [8.9621e-01, 7.8889e-04, 1.9323e-03,  ..., 1.9212e-03,
          9.5116e-01, 9.7593e-01],
         [3.5879e-02, 9.9763e-01, 1.9323e-03,  ..., 1.9212e-03,
          1.6280e-02, 8.0223e-03]],
        [[4.2387e-02, 2.7817e-03, 9.9397e-01,  ..., 8.9552e-01,
          6.2534e-04, 6.6905e-03],
         [8.1114e-01, 2.7817e-03, 2.0093e-03,  ..., 2.9148e-02,
          6.2534e-04, 6.6905e-03],
         [4.2387e-02, 2.7817e-03, 2.0093e-03,  ..., 3.7097e-02,
          6.2534e-04, 9.7993e-01],
         [1.0409e-01, 9.9165e-01, 2.0093e-03,  ..., 3.8235e-02,
          9.9812e-01, 6.6905e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 170:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:01,729 [Process: 0] Synchronize training processes
2024-08-19 13:28:01,730 [Process: 0] Evaluating...
2024-08-19 13:28:01,731 [Process: 0] EPOCH 170:
2024-08-19 13:28:01,733 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:02,771 [Process: 0] Synchronize training processes
2024-08-19 13:28:02,771 [Process: 0] Evaluating...
2024-08-19 13:28:02,773 [Process: 0] EPOCH 171:
2024-08-19 13:28:02,775 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9326e-01, 5.7507e-03, 1.1560e-02,  ..., 9.9052e-01,
          4.6017e-02, 6.0757e-03],
         [1.9009e-03, 5.7507e-03, 1.1560e-02,  ..., 3.1612e-03,
          3.2203e-02, 6.0757e-03],
         [2.9356e-03, 5.7507e-03, 1.2025e-02,  ..., 3.1612e-03,
          4.3134e-02, 6.0757e-03],
         [1.9009e-03, 9.8275e-01, 9.6486e-01,  ..., 3.1612e-03,
          8.7865e-01, 9.8177e-01]],
        [[9.9664e-01, 3.8807e-03, 5.9202e-03,  ..., 2.5734e-02,
          7.6254e-04, 4.7754e-04],
         [1.1202e-03, 3.8807e-03, 5.9202e-03,  ..., 2.5734e-02,
          7.6254e-04, 4.7754e-04],
         [1.1202e-03, 3.8807e-03, 5.9202e-03,  ..., 3.8301e-02,
          9.9771e-01, 9.9857e-01],
         [1.1202e-03, 9.8836e-01, 9.8224e-01,  ..., 9.1023e-01,
          7.6254e-04, 4.7754e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1695e-02, 3.0254e-03, 9.9143e-01,  ..., 9.8938e-01,
          5.4701e-03, 1.1357e-02],
         [1.1695e-02, 3.0254e-03, 2.8310e-03,  ..., 3.5409e-03,
          5.4701e-03, 1.1357e-02],
         [9.6492e-01, 3.0254e-03, 2.8310e-03,  ..., 3.5409e-03,
          9.8359e-01, 9.6593e-01],
         [1.1695e-02, 9.9092e-01, 2.9063e-03,  ..., 3.5409e-03,
          5.4701e-03, 1.1357e-02]],
        [[4.8217e-02, 4.2477e-04, 9.8958e-01,  ..., 9.9641e-01,
          3.6806e-03, 1.1820e-02],
         [6.3801e-01, 4.2477e-04, 3.4734e-03,  ..., 1.1971e-03,
          3.6806e-03, 1.1820e-02],
         [4.8217e-02, 4.2477e-04, 3.4734e-03,  ..., 1.1971e-03,
          3.6806e-03, 9.6454e-01],
         [2.6556e-01, 9.9873e-01, 3.4734e-03,  ..., 1.1971e-03,
          9.8896e-01, 1.1820e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 171:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9598e-01, 3.2489e-03, 5.6568e-03,  ..., 9.5264e-01,
          1.6761e-01, 1.0811e-02],
         [1.3409e-03, 3.2489e-03, 5.6568e-03,  ..., 1.4621e-02,
          4.4959e-02, 1.0374e-02],
         [1.3409e-03, 3.2489e-03, 5.6568e-03,  ..., 1.8119e-02,
          4.4959e-02, 1.0374e-02],
         [1.3409e-03, 9.9025e-01, 9.8303e-01,  ..., 1.4621e-02,
          7.4247e-01, 9.6844e-01]],
        [[9.5928e-01, 9.5142e-03, 1.0585e-02,  ..., 1.8568e-02,
          6.4971e-04, 1.3642e-03],
         [1.3069e-02, 9.5142e-03, 1.0585e-02,  ..., 1.8568e-02,
          6.4971e-04, 1.3642e-03],
         [1.4587e-02, 9.5142e-03, 1.0585e-02,  ..., 2.4704e-02,
          9.9805e-01, 9.9591e-01],
         [1.3069e-02, 9.7146e-01, 9.6824e-01,  ..., 9.3816e-01,
          6.4971e-04, 1.3642e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8579e-02, 4.8983e-04, 9.7780e-01,  ..., 9.9658e-01,
          8.2003e-03, 1.3235e-02],
         [1.8579e-02, 4.8983e-04, 7.4006e-03,  ..., 1.1397e-03,
          8.2003e-03, 1.3235e-02],
         [9.4426e-01, 4.8983e-04, 7.4006e-03,  ..., 1.1397e-03,
          9.7540e-01, 9.6030e-01],
         [1.8579e-02, 9.9853e-01, 7.4006e-03,  ..., 1.1397e-03,
          8.2003e-03, 1.3235e-02]],
        [[2.2653e-01, 1.3515e-02, 9.9442e-01,  ..., 9.2199e-01,
          3.5157e-03, 2.8878e-02],
         [3.1444e-01, 1.3515e-02, 1.8613e-03,  ..., 2.4664e-02,
          3.5157e-03, 2.6778e-02],
         [9.7252e-02, 1.7853e-02, 1.8613e-03,  ..., 2.8687e-02,
          3.5157e-03, 9.1310e-01],
         [3.6177e-01, 9.5512e-01, 1.8613e-03,  ..., 2.4664e-02,
          9.8945e-01, 3.1241e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:28:03,809 [Process: 0] Synchronize training processes
2024-08-19 13:28:03,809 [Process: 0] Evaluating...
2024-08-19 13:28:04,786 [Process: 0] EPOCH 172:
2024-08-19 13:28:04,789 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 172:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9946e-01, 9.3454e-03, 7.0636e-03,  ..., 9.7393e-01,
          8.6316e-01, 2.1368e-02],
         [1.8001e-04, 9.3454e-03, 7.0636e-03,  ..., 8.6894e-03,
          3.0528e-02, 1.7767e-02],
         [1.8001e-04, 9.3454e-03, 7.0636e-03,  ..., 8.6894e-03,
          5.1504e-02, 1.7767e-02],
         [1.8001e-04, 9.7196e-01, 9.7881e-01,  ..., 8.6894e-03,
          5.4807e-02, 9.4310e-01]],
        [[9.9698e-01, 2.5752e-02, 9.0099e-03,  ..., 3.7211e-02,
          6.2794e-04, 2.0264e-03],
         [1.0099e-03, 1.8954e-02, 9.0099e-03,  ..., 3.7211e-02,
          6.2794e-04, 2.0264e-03],
         [1.0057e-03, 1.8983e-02, 9.0099e-03,  ..., 4.8855e-02,
          9.9812e-01, 9.9392e-01],
         [1.0057e-03, 9.3631e-01, 9.7297e-01,  ..., 8.7672e-01,
          6.2794e-04, 2.0264e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1550e-02, 3.2467e-04, 9.9658e-01,  ..., 9.9989e-01,
          1.2454e-02, 5.4879e-03],
         [1.1550e-02, 3.2467e-04, 1.3169e-03,  ..., 3.6774e-05,
          1.2454e-02, 5.4879e-03],
         [9.6535e-01, 3.2467e-04, 1.0500e-03,  ..., 3.6774e-05,
          9.6264e-01, 9.8354e-01],
         [1.1550e-02, 9.9903e-01, 1.0500e-03,  ..., 3.6774e-05,
          1.2454e-02, 5.4879e-03]],
        [[1.0735e-01, 1.6732e-03, 9.9343e-01,  ..., 9.4081e-01,
          7.5291e-03, 1.6305e-02],
         [2.1685e-01, 1.6732e-03, 2.1911e-03,  ..., 2.4723e-02,
          3.5102e-03, 1.6305e-02],
         [6.5635e-02, 1.6732e-03, 2.1911e-03,  ..., 1.7232e-02,
          3.5102e-03, 9.5109e-01],
         [6.1017e-01, 9.9498e-01, 2.1911e-03,  ..., 1.7232e-02,
          9.8545e-01, 1.6305e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 173:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:05,790 [Process: 0] Synchronize training processes
2024-08-19 13:28:05,791 [Process: 0] Evaluating...
2024-08-19 13:28:05,792 [Process: 0] EPOCH 173:
2024-08-19 13:28:05,794 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:06,835 [Process: 0] Synchronize training processes
2024-08-19 13:28:06,835 [Process: 0] Evaluating...
2024-08-19 13:28:06,837 [Process: 0] EPOCH 174:
2024-08-19 13:28:06,839 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9817e-01, 1.6631e-02, 6.4670e-03,  ..., 9.5321e-01,
          8.9902e-01, 1.8467e-02],
         [6.0963e-04, 1.6631e-02, 6.4670e-03,  ..., 1.5552e-02,
          2.7947e-02, 1.8467e-02],
         [6.0963e-04, 1.6631e-02, 6.4670e-03,  ..., 1.5686e-02,
          4.5083e-02, 1.8467e-02],
         [6.0963e-04, 9.5011e-01, 9.8060e-01,  ..., 1.5552e-02,
          2.7947e-02, 9.4460e-01]],
        [[9.8514e-01, 2.9852e-02, 1.4217e-02,  ..., 9.8828e-03,
          6.7736e-03, 3.1908e-03],
         [4.9538e-03, 1.8989e-02, 1.9509e-02,  ..., 9.8828e-03,
          6.7736e-03, 5.0397e-03],
         [4.9538e-03, 2.3708e-02, 1.4217e-02,  ..., 9.8828e-03,
          9.7968e-01, 9.8858e-01],
         [4.9538e-03, 9.2745e-01, 9.5206e-01,  ..., 9.7035e-01,
          6.7736e-03, 3.1908e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8863e-02, 2.5749e-03, 9.9949e-01,  ..., 9.9917e-01,
          1.4238e-02, 5.7610e-03],
         [2.2323e-02, 2.5749e-03, 1.7158e-04,  ..., 2.7554e-04,
          1.4238e-02, 5.7610e-03],
         [9.3995e-01, 2.5749e-03, 1.7158e-04,  ..., 2.7554e-04,
          9.5729e-01, 9.8272e-01],
         [1.8863e-02, 9.9228e-01, 1.7158e-04,  ..., 2.7554e-04,
          1.4238e-02, 5.7610e-03]],
        [[2.2788e-01, 1.4626e-04, 9.7273e-01,  ..., 9.3544e-01,
          1.2588e-01, 3.1369e-02],
         [1.4369e-01, 1.4626e-04, 7.4546e-03,  ..., 2.1090e-02,
          3.5138e-02, 2.7046e-02],
         [5.5148e-02, 1.4626e-04, 7.4546e-03,  ..., 1.7910e-02,
          3.5138e-02, 9.1076e-01],
         [5.7327e-01, 9.9956e-01, 1.2361e-02,  ..., 2.5563e-02,
          8.0385e-01, 3.0826e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 174:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9962, 0.0032, 0.0170,  ..., 0.9589, 0.9139, 0.0083],
         [0.0013, 0.0032, 0.0131,  ..., 0.0152, 0.0248, 0.0083],
         [0.0013, 0.0032, 0.0131,  ..., 0.0134, 0.0366, 0.0083],
         [0.0013, 0.9904, 0.9568,  ..., 0.0125, 0.0248, 0.9752]],
        [[0.9202, 0.0052, 0.0133,  ..., 0.0072, 0.0026, 0.0042],
         [0.0314, 0.0052, 0.0133,  ..., 0.0072, 0.0026, 0.0042],
         [0.0275, 0.0052, 0.0162,  ..., 0.0072, 0.9921, 0.9875],
         [0.0209, 0.9845, 0.9572,  ..., 0.9785, 0.0026, 0.0042]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1457e-02, 5.1585e-04, 9.9228e-01,  ..., 9.9880e-01,
          3.8757e-03, 4.3739e-03],
         [1.1457e-02, 5.1585e-04, 2.5749e-03,  ..., 3.9994e-04,
          3.8757e-03, 4.3739e-03],
         [9.6563e-01, 5.1585e-04, 2.5749e-03,  ..., 3.9994e-04,
          9.8837e-01, 9.8688e-01],
         [1.1457e-02, 9.9845e-01, 2.5749e-03,  ..., 3.9994e-04,
          3.8757e-03, 4.3739e-03]],
        [[2.7868e-01, 6.0292e-04, 9.9240e-01,  ..., 9.5632e-01,
          3.8505e-04, 1.3196e-02],
         [3.3251e-01, 6.0292e-04, 2.5756e-03,  ..., 1.6252e-02,
          3.8505e-04, 1.3196e-02],
         [6.7550e-02, 6.0292e-04, 2.5134e-03,  ..., 1.3715e-02,
          3.8505e-04, 9.6041e-01],
         [3.2126e-01, 9.9819e-01, 2.5134e-03,  ..., 1.3715e-02,
          9.9884e-01, 1.3196e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 175:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:07,873 [Process: 0] Synchronize training processes
2024-08-19 13:28:07,874 [Process: 0] Evaluating...
2024-08-19 13:28:07,876 [Process: 0] EPOCH 175:
2024-08-19 13:28:07,877 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:08,914 [Process: 0] Synchronize training processes
2024-08-19 13:28:08,915 [Process: 0] Evaluating...
2024-08-19 13:28:08,917 [Process: 0] EPOCH 176:
2024-08-19 13:28:08,918 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9953, 0.0211, 0.0076,  ..., 0.9842, 0.8032, 0.0313],
         [0.0016, 0.0187, 0.0076,  ..., 0.0052, 0.0452, 0.0274],
         [0.0016, 0.0221, 0.0076,  ..., 0.0054, 0.0921, 0.0298],
         [0.0016, 0.9382, 0.9772,  ..., 0.0052, 0.0595, 0.9115]],
        [[0.9421, 0.0151, 0.0054,  ..., 0.0031, 0.0018, 0.0031],
         [0.0168, 0.0151, 0.0054,  ..., 0.0031, 0.0018, 0.0031],
         [0.0244, 0.0172, 0.0054,  ..., 0.0031, 0.9946, 0.9906],
         [0.0168, 0.9525, 0.9838,  ..., 0.9907, 0.0018, 0.0031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.1742e-02, 1.3162e-03, 9.9276e-01,  ..., 9.8758e-01,
          6.6299e-03, 5.2936e-03],
         [2.1742e-02, 1.3162e-03, 2.4142e-03,  ..., 4.1412e-03,
          6.6299e-03, 5.2936e-03],
         [9.3477e-01, 1.3162e-03, 2.4142e-03,  ..., 4.1412e-03,
          9.8011e-01, 9.8412e-01],
         [2.1742e-02, 9.9605e-01, 2.4142e-03,  ..., 4.1412e-03,
          6.6299e-03, 5.2936e-03]],
        [[7.2006e-01, 3.6988e-03, 9.8069e-01,  ..., 9.9468e-01,
          3.2716e-04, 1.3286e-02],
         [1.7563e-01, 3.6988e-03, 6.0178e-03,  ..., 1.7741e-03,
          3.2716e-04, 1.3286e-02],
         [5.2152e-02, 3.6988e-03, 6.0178e-03,  ..., 1.7741e-03,
          3.2716e-04, 9.6014e-01],
         [5.2152e-02, 9.8890e-01, 7.2700e-03,  ..., 1.7741e-03,
          9.9902e-01, 1.3286e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 176:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9664e-01, 9.6666e-03, 8.4791e-03,  ..., 9.9327e-01,
          6.9910e-01, 7.0682e-03],
         [1.1194e-03, 9.6666e-03, 8.4791e-03,  ..., 2.2450e-03,
          6.0898e-02, 6.1040e-03],
         [1.1194e-03, 9.6666e-03, 8.4791e-03,  ..., 2.2450e-03,
          1.0216e-01, 6.1040e-03],
         [1.1194e-03, 9.7100e-01, 9.7456e-01,  ..., 2.2450e-03,
          1.3784e-01, 9.8072e-01]],
        [[9.8819e-01, 7.2260e-03, 5.1984e-03,  ..., 3.1437e-02,
          5.6061e-04, 1.2463e-03],
         [3.9360e-03, 7.2260e-03, 5.1984e-03,  ..., 3.1437e-02,
          5.6061e-04, 1.2463e-03],
         [3.9360e-03, 7.2260e-03, 5.1984e-03,  ..., 5.0792e-02,
          9.9832e-01, 9.9626e-01],
         [3.9360e-03, 9.7832e-01, 9.8440e-01,  ..., 8.8633e-01,
          5.6061e-04, 1.2463e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3936e-02, 2.0037e-03, 9.9554e-01,  ..., 9.9870e-01,
          9.9235e-03, 1.4051e-02],
         [1.3936e-02, 2.0037e-03, 1.1847e-03,  ..., 4.3303e-04,
          9.9235e-03, 1.4051e-02],
         [9.5819e-01, 2.0037e-03, 1.1847e-03,  ..., 4.3303e-04,
          9.7023e-01, 9.5785e-01],
         [1.3936e-02, 9.9399e-01, 2.0934e-03,  ..., 4.3303e-04,
          9.9235e-03, 1.4051e-02]],
        [[8.4675e-01, 1.2711e-03, 9.9672e-01,  ..., 9.8294e-01,
          1.3680e-03, 1.1435e-02],
         [7.0009e-02, 1.2711e-03, 1.0942e-03,  ..., 5.6874e-03,
          1.3105e-03, 1.1435e-02],
         [4.1618e-02, 1.2711e-03, 1.0942e-03,  ..., 5.6874e-03,
          1.3105e-03, 9.6562e-01],
         [4.1618e-02, 9.9619e-01, 1.0942e-03,  ..., 5.6874e-03,
          9.9601e-01, 1.1512e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:28:09,956 [Process: 0] Synchronize training processes
2024-08-19 13:28:09,956 [Process: 0] Evaluating...
2024-08-19 13:28:09,958 [Process: 0] EPOCH 177:
2024-08-19 13:28:09,960 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:10,996 [Process: 0] Synchronize training processes
2024-08-19 13:28:10,996 [Process: 0] Evaluating...
2024-08-19 13:28:10,998 [Process: 0] EPOCH 178:
2024-08-19 13:28:11,000 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 177:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9918, 0.0329, 0.0058,  ..., 0.9891, 0.3022, 0.0108],
         [0.0025, 0.0205, 0.0058,  ..., 0.0050, 0.0707, 0.0115],
         [0.0025, 0.0205, 0.0058,  ..., 0.0029, 0.0981, 0.0108],
         [0.0031, 0.9261, 0.9827,  ..., 0.0029, 0.5289, 0.9669]],
        [[0.9947, 0.0189, 0.0024,  ..., 0.0310, 0.0036, 0.0026],
         [0.0018, 0.0189, 0.0024,  ..., 0.0245, 0.0036, 0.0026],
         [0.0018, 0.0242, 0.0024,  ..., 0.0290, 0.9892, 0.9921],
         [0.0018, 0.9379, 0.9928,  ..., 0.9155, 0.0036, 0.0026]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7262e-02, 1.4519e-02, 9.9725e-01,  ..., 9.6153e-01,
          1.1953e-02, 1.0379e-02],
         [2.7262e-02, 1.6677e-02, 9.1553e-04,  ..., 4.1893e-03,
          1.1953e-02, 1.0379e-02],
         [9.1821e-01, 1.4519e-02, 9.1553e-04,  ..., 4.1893e-03,
          9.6414e-01, 9.6886e-01],
         [2.7262e-02, 9.5429e-01, 9.1553e-04,  ..., 3.0094e-02,
          1.1953e-02, 1.0379e-02]],
        [[9.1006e-01, 7.4118e-04, 9.8795e-01,  ..., 9.9449e-01,
          5.8762e-02, 1.6229e-02],
         [5.1892e-02, 7.4118e-04, 3.8797e-03,  ..., 1.8356e-03,
          5.9986e-03, 1.6229e-02],
         [1.9023e-02, 7.4118e-04, 3.8797e-03,  ..., 1.8356e-03,
          5.9986e-03, 9.5045e-01],
         [1.9023e-02, 9.9778e-01, 4.2866e-03,  ..., 1.8356e-03,
          9.2924e-01, 1.7094e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 178:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9678, 0.0089, 0.0081,  ..., 0.9668, 0.3822, 0.0057],
         [0.0085, 0.0089, 0.0081,  ..., 0.0097, 0.0914, 0.0057],
         [0.0085, 0.0089, 0.0081,  ..., 0.0139, 0.2307, 0.0057],
         [0.0151, 0.9734, 0.9756,  ..., 0.0097, 0.2956, 0.9830]],
        [[0.9853, 0.1311, 0.0094,  ..., 0.0100, 0.0025, 0.0024],
         [0.0049, 0.0377, 0.0091,  ..., 0.0100, 0.0025, 0.0024],
         [0.0049, 0.0400, 0.0091,  ..., 0.0100, 0.9924, 0.9927],
         [0.0049, 0.7912, 0.9724,  ..., 0.9700, 0.0025, 0.0024]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9163e-03, 1.0006e-03, 8.4868e-01,  ..., 9.9170e-01,
          2.6015e-03, 2.1835e-02],
         [9.9163e-03, 1.0281e-03, 2.9507e-02,  ..., 2.3706e-03,
          2.6015e-03, 2.1835e-02],
         [9.7025e-01, 1.0006e-03, 2.9395e-02,  ..., 2.3706e-03,
          9.9220e-01, 9.3450e-01],
         [9.9163e-03, 9.9697e-01, 9.2421e-02,  ..., 3.5564e-03,
          2.6015e-03, 2.1835e-02]],
        [[4.5984e-01, 4.0458e-04, 9.9615e-01,  ..., 9.8730e-01,
          3.9033e-01, 3.4794e-02],
         [3.9526e-01, 4.0458e-04, 1.2838e-03,  ..., 4.7726e-03,
          1.0646e-02, 3.4794e-02],
         [5.0016e-02, 4.0458e-04, 1.2838e-03,  ..., 3.9653e-03,
          1.0646e-02, 8.7870e-01],
         [9.4886e-02, 9.9879e-01, 1.2838e-03,  ..., 3.9653e-03,
          5.8838e-01, 5.1710e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:28:12,036 [Process: 0] Synchronize training processes
2024-08-19 13:28:12,036 [Process: 0] Evaluating...
2024-08-19 13:28:12,038 [Process: 0] EPOCH 179:
2024-08-19 13:28:12,040 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:13,076 [Process: 0] Synchronize training processes
2024-08-19 13:28:13,076 [Process: 0] Evaluating...
2024-08-19 13:28:13,078 [Process: 0] EPOCH 180:
2024-08-19 13:28:13,080 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 179:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6526e-01, 2.4282e-03, 7.8766e-03,  ..., 9.7999e-01,
          7.1000e-01, 5.2789e-03],
         [1.1581e-02, 2.4282e-03, 7.7090e-03,  ..., 7.4935e-03,
          7.6160e-02, 4.9327e-03],
         [1.1581e-02, 2.4282e-03, 7.7090e-03,  ..., 6.2595e-03,
          1.1410e-01, 4.9327e-03],
         [1.1581e-02, 9.9272e-01, 9.7671e-01,  ..., 6.2595e-03,
          9.9738e-02, 9.8486e-01]],
        [[9.5037e-01, 5.4084e-02, 2.9176e-02,  ..., 1.7826e-02,
          3.6658e-04, 8.2699e-04],
         [1.9859e-02, 2.8403e-02, 2.3315e-02,  ..., 1.7826e-02,
          3.6658e-04, 8.2699e-04],
         [1.5375e-02, 2.8403e-02, 2.9713e-02,  ..., 2.2024e-02,
          9.9890e-01, 9.9752e-01],
         [1.4393e-02, 8.8911e-01, 9.1780e-01,  ..., 9.4232e-01,
          3.6658e-04, 8.2699e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8120e-02, 1.6944e-03, 9.9233e-01,  ..., 9.9813e-01,
          1.4251e-02, 6.4402e-03],
         [1.8120e-02, 1.6944e-03, 2.5564e-03,  ..., 6.2184e-04,
          1.4251e-02, 6.4402e-03],
         [9.4564e-01, 1.6944e-03, 2.5564e-03,  ..., 6.2184e-04,
          9.5725e-01, 9.8068e-01],
         [1.8120e-02, 9.9492e-01, 2.5564e-03,  ..., 6.2184e-04,
          1.4251e-02, 6.4402e-03]],
        [[1.9164e-01, 3.1352e-04, 9.8915e-01,  ..., 9.9107e-01,
          2.4037e-02, 1.4748e-02],
         [3.2178e-01, 3.1352e-04, 3.6173e-03,  ..., 2.9777e-03,
          9.8638e-03, 1.4748e-02],
         [9.7768e-02, 3.1352e-04, 3.6173e-03,  ..., 2.9777e-03,
          9.8638e-03, 9.5558e-01],
         [3.8882e-01, 9.9906e-01, 3.6173e-03,  ..., 2.9777e-03,
          9.5624e-01, 1.4925e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 180:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9788e-01, 1.6813e-02, 3.9002e-03,  ..., 9.2227e-01,
          9.1196e-01, 5.6046e-03],
         [7.0534e-04, 1.6813e-02, 3.9002e-03,  ..., 4.5299e-02,
          2.2924e-02, 5.6046e-03],
         [7.0534e-04, 1.7823e-02, 3.9002e-03,  ..., 1.6741e-02,
          3.3888e-02, 5.6046e-03],
         [7.0534e-04, 9.4855e-01, 9.8830e-01,  ..., 1.5688e-02,
          3.1223e-02, 9.8319e-01]],
        [[9.9097e-01, 1.0012e-02, 7.7505e-03,  ..., 5.2906e-03,
          4.9022e-03, 1.4928e-03],
         [3.1220e-03, 1.0012e-02, 7.7505e-03,  ..., 5.2906e-03,
          4.9022e-03, 1.4928e-03],
         [2.9531e-03, 1.0012e-02, 7.7505e-03,  ..., 5.2906e-03,
          9.8529e-01, 9.9552e-01],
         [2.9531e-03, 9.6996e-01, 9.7675e-01,  ..., 9.8413e-01,
          4.9022e-03, 1.4928e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:28:14,121 [Process: 0] Synchronize training processes
2024-08-19 13:28:14,121 [Process: 0] Evaluating...
2024-08-19 13:28:14,123 [Process: 0] EPOCH 181:
2024-08-19 13:28:14,125 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:15,160 [Process: 0] Synchronize training processes
2024-08-19 13:28:15,160 [Process: 0] Evaluating...
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1100e-02, 1.5225e-02, 9.9983e-01,  ..., 9.9744e-01,
          1.5914e-02, 1.3385e-02],
         [1.1100e-02, 1.5225e-02, 5.6626e-05,  ..., 8.5223e-04,
          1.5914e-02, 1.3385e-02],
         [9.6670e-01, 1.5225e-02, 5.6626e-05,  ..., 8.5223e-04,
          9.5226e-01, 9.5984e-01],
         [1.1100e-02, 9.5432e-01, 5.6626e-05,  ..., 8.5223e-04,
          1.5914e-02, 1.3385e-02]],
        [[4.5109e-01, 3.0269e-04, 9.9005e-01,  ..., 9.8331e-01,
          3.9831e-03, 1.5949e-02],
         [1.4475e-01, 3.0269e-04, 3.3160e-03,  ..., 5.5627e-03,
          3.9831e-03, 1.5949e-02],
         [9.1712e-02, 3.0269e-04, 3.3160e-03,  ..., 5.5627e-03,
          3.9831e-03, 9.4913e-01],
         [3.1245e-01, 9.9909e-01, 3.3160e-03,  ..., 5.5627e-03,
          9.8805e-01, 1.8972e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 181:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9619e-01, 3.0130e-02, 1.9438e-02,  ..., 8.9165e-01,
          9.3109e-01, 1.9217e-02],
         [1.2699e-03, 3.0130e-02, 1.9438e-02,  ..., 4.7295e-02,
          1.7726e-02, 1.2640e-02],
         [1.2699e-03, 3.9378e-02, 1.9438e-02,  ..., 3.5711e-02,
          3.3455e-02, 1.2640e-02],
         [1.2699e-03, 9.0036e-01, 9.4169e-01,  ..., 2.5345e-02,
          1.7726e-02, 9.5550e-01]],
        [[9.9715e-01, 6.9440e-03, 2.0415e-02,  ..., 4.2445e-02,
          1.4548e-03, 3.9399e-04],
         [9.4994e-04, 6.9440e-03, 2.0415e-02,  ..., 2.9393e-02,
          1.4548e-03, 3.9399e-04],
         [9.4994e-04, 6.9440e-03, 2.0415e-02,  ..., 3.3701e-02,
          9.9564e-01, 9.9882e-01],
         [9.4994e-04, 9.7917e-01, 9.3875e-01,  ..., 8.9446e-01,
          1.4548e-03, 3.9399e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6021e-02, 7.1177e-03, 9.9907e-01,  ..., 9.9809e-01,
          5.8041e-03, 6.2875e-03],
         [2.1383e-02, 7.1177e-03, 3.1083e-04,  ..., 6.3757e-04,
          5.8041e-03, 6.2875e-03],
         [9.3121e-01, 7.1177e-03, 3.1083e-04,  ..., 6.3757e-04,
          9.8259e-01, 9.8114e-01],
         [2.1383e-02, 9.7865e-01, 3.1083e-04,  ..., 6.3757e-04,
          5.8041e-03, 6.2875e-03]],
        [[1.6724e-01, 1.9963e-03, 9.9770e-01,  ..., 8.8526e-01,
          1.3444e-03, 1.2046e-02],
         [1.9057e-01, 1.9963e-03, 7.6538e-04,  ..., 4.9794e-02,
          1.2455e-03, 1.2046e-02],
         [8.9096e-02, 1.9963e-03, 7.6538e-04,  ..., 3.2471e-02,
          1.2455e-03, 9.6386e-01],
         [5.5309e-01, 9.9401e-01, 7.6538e-04,  ..., 3.2471e-02,
          9.9616e-01, 1.2046e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:28:16,143 [Process: 0] EPOCH 182:
2024-08-19 13:28:16,147 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:17,142 [Process: 0] Synchronize training processes
2024-08-19 13:28:17,142 [Process: 0] Evaluating...
2024-08-19 13:28:17,144 [Process: 0] EPOCH 183:
2024-08-19 13:28:17,146 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 182:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9710e-01, 6.5536e-03, 3.3422e-02,  ..., 9.9532e-01,
          9.6814e-01, 8.6439e-03],
         [9.6712e-04, 6.5536e-03, 2.3335e-02,  ..., 1.4461e-03,
          9.4851e-03, 8.6439e-03],
         [9.6712e-04, 6.5536e-03, 2.3335e-02,  ..., 1.7860e-03,
          1.2885e-02, 8.6439e-03],
         [9.6712e-04, 9.8034e-01, 9.1991e-01,  ..., 1.4461e-03,
          9.4851e-03, 9.7407e-01]],
        [[9.9928e-01, 2.6038e-03, 9.5280e-03,  ..., 1.4253e-02,
          1.0839e-03, 3.8096e-03],
         [2.4029e-04, 2.6038e-03, 9.5280e-03,  ..., 1.4253e-02,
          1.0839e-03, 3.8096e-03],
         [2.4029e-04, 2.6038e-03, 9.5280e-03,  ..., 1.4253e-02,
          9.9675e-01, 9.8857e-01],
         [2.4029e-04, 9.9219e-01, 9.7142e-01,  ..., 9.5724e-01,
          1.0839e-03, 3.8096e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4483e-03, 1.0257e-03, 9.9504e-01,  ..., 9.9859e-01,
          8.2792e-03, 1.6042e-02],
         [9.4483e-03, 1.0257e-03, 1.6532e-03,  ..., 4.6897e-04,
          8.2792e-03, 1.5140e-02],
         [9.7166e-01, 1.0257e-03, 1.6532e-03,  ..., 4.6897e-04,
          9.7516e-01, 9.5368e-01],
         [9.4483e-03, 9.9692e-01, 1.6532e-03,  ..., 4.6897e-04,
          8.2792e-03, 1.5140e-02]],
        [[7.1341e-02, 9.5626e-04, 9.8751e-01,  ..., 9.9439e-01,
          1.6551e-03, 6.4638e-03],
         [4.9971e-01, 9.5626e-04, 4.1624e-03,  ..., 2.2367e-03,
          1.6551e-03, 6.4638e-03],
         [7.1341e-02, 9.5626e-04, 4.1624e-03,  ..., 1.6849e-03,
          1.6551e-03, 9.8061e-01],
         [3.5761e-01, 9.9713e-01, 4.1624e-03,  ..., 1.6849e-03,
          9.9503e-01, 6.4638e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 183:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9859e-01, 9.5403e-03, 4.5977e-03,  ..., 9.8581e-01,
          8.0219e-01, 1.0951e-02],
         [4.6978e-04, 9.5403e-03, 4.5977e-03,  ..., 4.2953e-03,
          4.4364e-02, 1.0421e-02],
         [4.6978e-04, 9.5403e-03, 4.5977e-03,  ..., 5.5985e-03,
          9.7569e-02, 1.0421e-02],
         [4.6978e-04, 9.7138e-01, 9.8621e-01,  ..., 4.2953e-03,
          5.5872e-02, 9.6821e-01]],
        [[9.9865e-01, 2.4970e-03, 9.2430e-03,  ..., 1.2063e-02,
          2.8239e-03, 7.0619e-04],
         [4.4892e-04, 2.4970e-03, 9.2430e-03,  ..., 1.2063e-02,
          2.8239e-03, 7.0619e-04],
         [4.4892e-04, 2.4970e-03, 9.2430e-03,  ..., 1.2063e-02,
          9.9153e-01, 9.9788e-01],
         [4.4892e-04, 9.9251e-01, 9.7227e-01,  ..., 9.6381e-01,
          2.8239e-03, 7.0619e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:28:18,181 [Process: 0] Synchronize training processes
2024-08-19 13:28:18,181 [Process: 0] Evaluating...
2024-08-19 13:28:18,183 [Process: 0] EPOCH 184:
2024-08-19 13:28:18,185 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:19,220 [Process: 0] Synchronize training processes
2024-08-19 13:28:19,220 [Process: 0] Evaluating...
2024-08-19 13:28:19,222 [Process: 0] EPOCH 185:
2024-08-19 13:28:19,224 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3310e-02, 1.3023e-03, 9.9790e-01,  ..., 9.9983e-01,
          1.3072e-02, 5.2745e-03],
         [1.3310e-02, 1.3023e-03, 6.9960e-04,  ..., 5.8139e-05,
          1.3072e-02, 5.2745e-03],
         [9.6007e-01, 1.3023e-03, 6.9960e-04,  ..., 5.8139e-05,
          9.6078e-01, 9.8418e-01],
         [1.3310e-02, 9.9609e-01, 6.9960e-04,  ..., 5.8139e-05,
          1.3072e-02, 5.2745e-03]],
        [[8.0986e-02, 1.4589e-04, 9.9554e-01,  ..., 9.6373e-01,
          3.4140e-03, 1.3610e-02],
         [8.7045e-01, 1.4589e-04, 1.4866e-03,  ..., 1.1152e-02,
          3.4140e-03, 1.3610e-02],
         [2.4284e-02, 1.4589e-04, 1.4866e-03,  ..., 1.3969e-02,
          3.4140e-03, 9.5803e-01],
         [2.4284e-02, 9.9956e-01, 1.4866e-03,  ..., 1.1152e-02,
          9.8976e-01, 1.4752e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 184:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9737e-01, 1.5298e-02, 2.1217e-02,  ..., 9.7203e-01,
          7.9341e-01, 1.4733e-02],
         [8.7630e-04, 1.4454e-02, 2.1217e-02,  ..., 9.1735e-03,
          4.7127e-02, 1.4733e-02],
         [8.7630e-04, 1.4454e-02, 2.6634e-02,  ..., 9.6232e-03,
          1.0603e-01, 1.4733e-02],
         [8.7630e-04, 9.5579e-01, 9.3093e-01,  ..., 9.1735e-03,
          5.3438e-02, 9.5580e-01]],
        [[9.9992e-01, 1.1366e-02, 6.1742e-02,  ..., 1.6293e-03,
          1.1534e-03, 2.3272e-03],
         [2.5566e-05, 1.0894e-02, 3.9437e-02,  ..., 1.6293e-03,
          1.1534e-03, 2.3272e-03],
         [2.5566e-05, 1.0894e-02, 6.9121e-02,  ..., 1.6293e-03,
          9.9654e-01, 9.9302e-01],
         [2.5566e-05, 9.6685e-01, 8.2970e-01,  ..., 9.9511e-01,
          1.1534e-03, 2.3272e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4667e-02, 1.4915e-03, 9.9236e-01,  ..., 9.9731e-01,
          7.1494e-03, 1.9048e-02],
         [1.4667e-02, 1.4915e-03, 2.5482e-03,  ..., 8.1005e-04,
          7.1494e-03, 1.9048e-02],
         [9.5600e-01, 1.4915e-03, 2.5482e-03,  ..., 8.1005e-04,
          9.7855e-01, 9.4264e-01],
         [1.4667e-02, 9.9553e-01, 2.5482e-03,  ..., 1.0722e-03,
          7.1494e-03, 1.9262e-02]],
        [[4.7669e-01, 2.0297e-03, 9.9772e-01,  ..., 9.8182e-01,
          9.4384e-03, 6.0154e-03],
         [3.2088e-01, 2.0297e-03, 7.5965e-04,  ..., 6.0605e-03,
          2.8283e-03, 6.0154e-03],
         [9.0772e-02, 2.0297e-03, 7.5965e-04,  ..., 6.0605e-03,
          2.8283e-03, 9.8195e-01],
         [1.1166e-01, 9.9391e-01, 7.5965e-04,  ..., 6.0605e-03,
          9.8491e-01, 6.0154e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 185:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9920, 0.0162, 0.0116,  ..., 0.9783, 0.8862, 0.0198],
         [0.0027, 0.0196, 0.0116,  ..., 0.0072, 0.0281, 0.0167],
         [0.0027, 0.0162, 0.0116,  ..., 0.0072, 0.0582, 0.0167],
         [0.0027, 0.9480, 0.9651,  ..., 0.0072, 0.0274, 0.9468]],
        [[0.9780, 0.0059, 0.0120,  ..., 0.0149, 0.0031, 0.0011],
         [0.0065, 0.0059, 0.0117,  ..., 0.0128, 0.0031, 0.0011],
         [0.0091, 0.0059, 0.0117,  ..., 0.0139, 0.9908, 0.9968],
         [0.0065, 0.9823, 0.9647,  ..., 0.9584, 0.0031, 0.0011]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:28:20,261 [Process: 0] Synchronize training processes
2024-08-19 13:28:20,261 [Process: 0] Evaluating...
2024-08-19 13:28:20,263 [Process: 0] EPOCH 186:
2024-08-19 13:28:20,264 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:21,303 [Process: 0] Synchronize training processes
2024-08-19 13:28:21,304 [Process: 0] Evaluating...
2024-08-19 13:28:21,305 [Process: 0] EPOCH 187:
2024-08-19 13:28:21,307 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3679e-02, 4.0521e-04, 9.9580e-01,  ..., 9.3693e-01,
          7.2287e-03, 6.7854e-03],
         [1.3679e-02, 4.0521e-04, 1.4014e-03,  ..., 1.8730e-02,
          7.2287e-03, 6.7854e-03],
         [9.5896e-01, 4.0521e-04, 1.4014e-03,  ..., 2.5613e-02,
          9.7831e-01, 9.7964e-01],
         [1.3679e-02, 9.9878e-01, 1.4014e-03,  ..., 1.8730e-02,
          7.2287e-03, 6.7854e-03]],
        [[4.3270e-01, 1.7223e-04, 9.9569e-01,  ..., 9.9460e-01,
          3.0308e-01, 8.1836e-03],
         [4.3620e-01, 1.7223e-04, 1.4355e-03,  ..., 1.8000e-03,
          1.7944e-02, 8.1836e-03],
         [5.4351e-02, 1.7223e-04, 1.4355e-03,  ..., 1.8000e-03,
          1.7944e-02, 9.7545e-01],
         [7.6750e-02, 9.9948e-01, 1.4355e-03,  ..., 1.8000e-03,
          6.6103e-01, 8.1836e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 186:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9751e-01, 9.0353e-03, 7.4524e-03,  ..., 9.9442e-01,
          6.4243e-01, 6.1509e-03],
         [8.0567e-04, 7.3067e-03, 7.4524e-03,  ..., 1.8587e-03,
          7.4585e-02, 6.1509e-03],
         [8.7977e-04, 7.3067e-03, 7.4524e-03,  ..., 1.8587e-03,
          1.8387e-01, 6.1509e-03],
         [8.0567e-04, 9.7635e-01, 9.7764e-01,  ..., 1.8587e-03,
          9.9111e-02, 9.8155e-01]],
        [[9.6774e-01, 7.9593e-03, 5.9512e-03,  ..., 1.2261e-02,
          3.3309e-03, 1.2789e-03],
         [8.9818e-03, 7.9593e-03, 5.9512e-03,  ..., 1.2261e-02,
          3.3309e-03, 1.2789e-03],
         [1.4298e-02, 7.9593e-03, 5.9512e-03,  ..., 1.2261e-02,
          9.9001e-01, 9.9616e-01],
         [8.9818e-03, 9.7612e-01, 9.8215e-01,  ..., 9.6322e-01,
          3.3309e-03, 1.2789e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0047, 0.0038, 0.9967,  ..., 0.9956, 0.0066, 0.0071],
         [0.0047, 0.0039, 0.0011,  ..., 0.0015, 0.0066, 0.0071],
         [0.9860, 0.0038, 0.0011,  ..., 0.0015, 0.9801, 0.9788],
         [0.0047, 0.9885, 0.0011,  ..., 0.0015, 0.0066, 0.0071]],
        [[0.0964, 0.0071, 0.9866,  ..., 0.9855, 0.3164, 0.0052],
         [0.7643, 0.0085, 0.0046,  ..., 0.0048, 0.0357, 0.0052],
         [0.0627, 0.0071, 0.0044,  ..., 0.0048, 0.0357, 0.9843],
         [0.0766, 0.9773, 0.0044,  ..., 0.0048, 0.6121, 0.0052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 187:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9157e-01, 6.8061e-03, 1.1169e-02,  ..., 9.8831e-01,
          9.4206e-01, 5.0769e-03],
         [2.8097e-03, 6.8061e-03, 1.1169e-02,  ..., 3.8702e-03,
          1.6564e-02, 5.0769e-03],
         [2.8097e-03, 6.8061e-03, 1.1169e-02,  ..., 3.9476e-03,
          2.0446e-02, 5.0769e-03],
         [2.8097e-03, 9.7958e-01, 9.6649e-01,  ..., 3.8702e-03,
          2.0933e-02, 9.8477e-01]],
        [[9.8743e-01, 4.7655e-03, 2.3987e-02,  ..., 9.8969e-03,
          1.8290e-03, 9.4929e-04],
         [3.8389e-03, 4.7655e-03, 1.9738e-02,  ..., 9.8969e-03,
          1.8290e-03, 9.4929e-04],
         [4.8969e-03, 4.7655e-03, 1.9738e-02,  ..., 9.8969e-03,
          9.9451e-01, 9.9715e-01],
         [3.8389e-03, 9.8570e-01, 9.3654e-01,  ..., 9.7031e-01,
          1.8290e-03, 9.4929e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:28:22,349 [Process: 0] Synchronize training processes
2024-08-19 13:28:22,349 [Process: 0] Evaluating...
2024-08-19 13:28:22,351 [Process: 0] EPOCH 188:
2024-08-19 13:28:22,353 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:23,389 [Process: 0] Synchronize training processes
2024-08-19 13:28:23,389 [Process: 0] Evaluating...
2024-08-19 13:28:23,391 [Process: 0] EPOCH 189:
2024-08-19 13:28:23,393 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.2677e-03, 6.9998e-04, 9.9706e-01,  ..., 9.9446e-01,
          8.2465e-03, 1.9627e-02],
         [6.2677e-03, 6.9998e-04, 9.7848e-04,  ..., 1.8481e-03,
          8.2465e-03, 1.7427e-02],
         [9.8120e-01, 6.9998e-04, 9.7848e-04,  ..., 1.8481e-03,
          9.7526e-01, 9.4552e-01],
         [6.2677e-03, 9.9790e-01, 9.7848e-04,  ..., 1.8481e-03,
          8.2465e-03, 1.7427e-02]],
        [[4.5431e-01, 1.1104e-03, 9.9789e-01,  ..., 9.8149e-01,
          5.2858e-02, 3.1273e-03],
         [1.8477e-01, 1.1104e-03, 7.0179e-04,  ..., 6.1685e-03,
          8.7996e-03, 3.1273e-03],
         [8.9653e-02, 1.1104e-03, 7.0179e-04,  ..., 6.1685e-03,
          8.7996e-03, 9.9062e-01],
         [2.7127e-01, 9.9667e-01, 7.0179e-04,  ..., 6.1685e-03,
          9.2954e-01, 3.1273e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 188:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9873e-01, 8.7355e-03, 1.8910e-02,  ..., 9.7707e-01,
          9.5685e-01, 9.2208e-03],
         [4.2401e-04, 8.7355e-03, 1.4518e-02,  ..., 6.9494e-03,
          1.2385e-02, 9.2208e-03],
         [4.2401e-04, 8.7355e-03, 1.4518e-02,  ..., 9.0331e-03,
          1.7947e-02, 9.2208e-03],
         [4.2401e-04, 9.7379e-01, 9.5205e-01,  ..., 6.9494e-03,
          1.2820e-02, 9.7234e-01]],
        [[9.8341e-01, 4.4478e-03, 1.2129e-02,  ..., 1.3507e-02,
          1.6682e-03, 1.1405e-03],
         [5.3982e-03, 4.4478e-03, 9.0025e-03,  ..., 1.3507e-02,
          1.6682e-03, 1.1405e-03],
         [5.7948e-03, 4.4478e-03, 9.0025e-03,  ..., 1.4629e-02,
          9.9500e-01, 9.9658e-01],
         [5.3982e-03, 9.8666e-01, 9.6987e-01,  ..., 9.5836e-01,
          1.6682e-03, 1.1405e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0947e-03, 1.4492e-03, 9.9727e-01,  ..., 9.9652e-01,
          3.3762e-03, 6.4609e-03],
         [4.0947e-03, 1.4492e-03, 9.0889e-04,  ..., 1.1088e-03,
          3.3762e-03, 6.4609e-03],
         [9.8772e-01, 1.4492e-03, 9.0889e-04,  ..., 1.1088e-03,
          9.8987e-01, 9.8062e-01],
         [4.0947e-03, 9.9565e-01, 9.0889e-04,  ..., 1.2653e-03,
          3.3762e-03, 6.4609e-03]],
        [[9.0927e-02, 1.2007e-03, 9.9817e-01,  ..., 9.1921e-01,
          2.1963e-02, 1.0063e-02],
         [3.8941e-01, 1.2007e-03, 6.1119e-04,  ..., 2.4406e-02,
          8.8675e-03, 1.0063e-02],
         [8.3771e-02, 1.2007e-03, 6.1119e-04,  ..., 3.1978e-02,
          8.8675e-03, 9.6981e-01],
         [4.3589e-01, 9.9640e-01, 6.1119e-04,  ..., 2.4406e-02,
          9.6030e-01, 1.0063e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 189:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9661, 0.0173, 0.0076,  ..., 0.9940, 0.8023, 0.0212],
         [0.0096, 0.0176, 0.0076,  ..., 0.0020, 0.0435, 0.0212],
         [0.0146, 0.0183, 0.0076,  ..., 0.0020, 0.0946, 0.0212],
         [0.0096, 0.9469, 0.9773,  ..., 0.0020, 0.0595, 0.9365]],
        [[0.9693, 0.0137, 0.0099,  ..., 0.0062, 0.0046, 0.0030],
         [0.0139, 0.0137, 0.0099,  ..., 0.0062, 0.0046, 0.0030],
         [0.0091, 0.0137, 0.0099,  ..., 0.0062, 0.9862, 0.9910],
         [0.0077, 0.9589, 0.9703,  ..., 0.9813, 0.0046, 0.0030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:28:24,430 [Process: 0] Synchronize training processes
2024-08-19 13:28:24,431 [Process: 0] Evaluating...
2024-08-19 13:28:24,433 [Process: 0] EPOCH 190:
2024-08-19 13:28:24,434 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.5961e-03, 7.2147e-04, 9.9471e-01,  ..., 9.9688e-01,
          7.5684e-03, 1.0990e-02],
         [6.5961e-03, 7.2147e-04, 1.7183e-03,  ..., 1.0024e-03,
          7.5684e-03, 1.0990e-02],
         [9.8021e-01, 7.2147e-04, 1.7183e-03,  ..., 1.0024e-03,
          9.7729e-01, 9.6703e-01],
         [6.5961e-03, 9.9784e-01, 1.8493e-03,  ..., 1.1181e-03,
          7.5684e-03, 1.0990e-02]],
        [[4.2183e-01, 4.6868e-04, 9.9351e-01,  ..., 9.4494e-01,
          8.1337e-03, 1.7108e-02],
         [2.3752e-01, 4.6868e-04, 2.1642e-03,  ..., 2.1579e-02,
          8.1337e-03, 1.4158e-02],
         [7.7885e-02, 4.6868e-04, 2.1642e-03,  ..., 1.6738e-02,
          8.1337e-03, 9.5458e-01],
         [2.6277e-01, 9.9859e-01, 2.1642e-03,  ..., 1.6738e-02,
          9.7560e-01, 1.4158e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 190:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9444e-01, 4.6149e-03, 2.0891e-03,  ..., 9.9826e-01,
          8.9853e-01, 1.3258e-02],
         [1.8532e-03, 4.6149e-03, 2.0891e-03,  ..., 5.7929e-04,
          2.6861e-02, 1.3258e-02],
         [1.8532e-03, 4.6149e-03, 2.0891e-03,  ..., 5.7929e-04,
          3.9975e-02, 1.3258e-02],
         [1.8532e-03, 9.8616e-01, 9.9373e-01,  ..., 5.7929e-04,
          3.4637e-02, 9.6023e-01]],
        [[9.8657e-01, 8.1491e-03, 3.8982e-02,  ..., 6.1665e-03,
          5.3818e-03, 3.1011e-03],
         [4.3081e-03, 8.1491e-03, 7.2472e-02,  ..., 6.1665e-03,
          5.3818e-03, 3.1011e-03],
         [4.8144e-03, 8.1491e-03, 5.2791e-02,  ..., 6.1665e-03,
          9.8385e-01, 9.9070e-01],
         [4.3081e-03, 9.7555e-01, 8.3575e-01,  ..., 9.8150e-01,
          5.3818e-03, 3.1011e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1352e-02, 1.5840e-03, 9.9094e-01,  ..., 9.9479e-01,
          6.2790e-03, 1.2894e-02],
         [1.1352e-02, 1.5840e-03, 2.5450e-03,  ..., 1.7364e-03,
          6.2790e-03, 1.2894e-02],
         [9.6594e-01, 1.5840e-03, 2.5450e-03,  ..., 1.7364e-03,
          9.8116e-01, 9.6132e-01],
         [1.1352e-02, 9.9525e-01, 3.9661e-03,  ..., 1.7364e-03,
          6.2790e-03, 1.2894e-02]],
        [[6.2453e-01, 8.9229e-04, 9.8472e-01,  ..., 9.8131e-01,
          4.5799e-03, 4.2129e-03],
         [2.4855e-01, 8.9229e-04, 5.5264e-03,  ..., 6.2300e-03,
          4.5799e-03, 4.2129e-03],
         [6.0598e-02, 8.9229e-04, 4.8776e-03,  ..., 6.2300e-03,
          4.5799e-03, 9.8736e-01],
         [6.6321e-02, 9.9732e-01, 4.8776e-03,  ..., 6.2300e-03,
          9.8626e-01, 4.2129e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 191:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9018e-01, 6.0358e-03, 3.8089e-03,  ..., 9.9415e-01,
          9.0355e-01, 1.2361e-02],
         [3.1047e-03, 5.7714e-03, 3.8089e-03,  ..., 1.9497e-03,
          2.4492e-02, 1.2361e-02],
         [3.6081e-03, 5.7714e-03, 3.8089e-03,  ..., 1.9497e-03,
          2.9126e-02, 1.2361e-02],
         [3.1047e-03, 9.8242e-01, 9.8857e-01,  ..., 1.9497e-03,
          4.2830e-02, 9.6292e-01]],
        [[9.9538e-01, 1.5140e-02, 4.7917e-03,  ..., 4.7150e-02,
          1.5416e-03, 7.7827e-04],
         [1.5406e-03, 1.5140e-02, 4.7917e-03,  ..., 4.7150e-02,
          1.5416e-03, 7.7827e-04],
         [1.5406e-03, 1.5140e-02, 4.7917e-03,  ..., 1.1663e-01,
          9.9538e-01, 9.9767e-01],
         [1.5406e-03, 9.5458e-01, 9.8562e-01,  ..., 7.8907e-01,
          1.5416e-03, 7.7827e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:28:25,469 [Process: 0] Synchronize training processes
2024-08-19 13:28:25,469 [Process: 0] Evaluating...
2024-08-19 13:28:25,471 [Process: 0] EPOCH 191:
2024-08-19 13:28:25,473 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:26,508 [Process: 0] Synchronize training processes
2024-08-19 13:28:26,508 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5863e-02, 2.8438e-03, 9.8181e-01,  ..., 9.8582e-01,
          1.1898e-02, 1.2085e-02],
         [1.5863e-02, 2.8438e-03, 4.7189e-03,  ..., 4.8963e-03,
          1.1271e-02, 1.2085e-02],
         [9.5241e-01, 2.8438e-03, 4.7189e-03,  ..., 4.6405e-03,
          9.6556e-01, 9.6374e-01],
         [1.5863e-02, 9.9147e-01, 8.7542e-03,  ..., 4.6405e-03,
          1.1271e-02, 1.2085e-02]],
        [[3.0247e-01, 1.4490e-03, 9.9795e-01,  ..., 9.9495e-01,
          4.5875e-03, 1.0184e-02],
         [2.7593e-01, 1.4490e-03, 6.8482e-04,  ..., 1.6818e-03,
          4.3761e-03, 1.0184e-02],
         [9.3245e-02, 1.4490e-03, 6.8482e-04,  ..., 1.6818e-03,
          4.3761e-03, 9.6945e-01],
         [3.2835e-01, 9.9565e-01, 6.8482e-04,  ..., 1.6818e-03,
          9.8666e-01, 1.0184e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 192:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8878e-01, 1.5766e-02, 1.6876e-02,  ..., 9.9376e-01,
          8.8318e-01, 7.8959e-03],
         [3.7394e-03, 1.5766e-02, 1.6876e-02,  ..., 2.0813e-03,
          2.8550e-02, 7.8959e-03],
         [3.7394e-03, 1.5766e-02, 1.6876e-02,  ..., 2.0813e-03,
          5.0387e-02, 7.8959e-03],
         [3.7394e-03, 9.5270e-01, 9.4937e-01,  ..., 2.0813e-03,
          3.7879e-02, 9.7631e-01]],
        [[9.9765e-01, 1.9484e-03, 3.7512e-03,  ..., 1.8036e-02,
          4.5277e-03, 4.4492e-04],
         [7.8367e-04, 1.9484e-03, 3.7512e-03,  ..., 1.4772e-02,
          4.5277e-03, 4.4492e-04],
         [7.8367e-04, 1.9484e-03, 3.7512e-03,  ..., 1.4772e-02,
          9.8642e-01, 9.9867e-01],
         [7.8367e-04, 9.9415e-01, 9.8875e-01,  ..., 9.5242e-01,
          4.5277e-03, 4.4492e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:28:27,482 [Process: 0] EPOCH 192:
2024-08-19 13:28:27,485 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:28,480 [Process: 0] Synchronize training processes
2024-08-19 13:28:28,480 [Process: 0] Evaluating...
2024-08-19 13:28:28,482 [Process: 0] EPOCH 193:
2024-08-19 13:28:28,484 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9852e-02, 3.6935e-03, 9.9772e-01,  ..., 9.9662e-01,
          1.3574e-02, 9.5966e-03],
         [1.9709e-02, 3.6935e-03, 7.5972e-04,  ..., 1.1252e-03,
          1.3574e-02, 9.5966e-03],
         [9.4073e-01, 3.6935e-03, 7.5972e-04,  ..., 1.1252e-03,
          9.5928e-01, 9.7121e-01],
         [1.9709e-02, 9.8892e-01, 7.5972e-04,  ..., 1.1252e-03,
          1.3574e-02, 9.5966e-03]],
        [[2.9395e-01, 1.6915e-04, 9.9878e-01,  ..., 9.9772e-01,
          3.4281e-04, 5.6751e-03],
         [4.3624e-01, 1.6915e-04, 4.0703e-04,  ..., 7.5831e-04,
          3.4281e-04, 5.6751e-03],
         [1.0437e-01, 1.6915e-04, 4.0703e-04,  ..., 7.5831e-04,
          3.4281e-04, 9.8297e-01],
         [1.6544e-01, 9.9949e-01, 4.0703e-04,  ..., 7.5831e-04,
          9.9897e-01, 5.6751e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 193:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9888e-01, 2.3843e-03, 1.2508e-02,  ..., 9.6911e-01,
          9.2712e-01, 1.0272e-02],
         [3.7321e-04, 2.3843e-03, 1.2508e-02,  ..., 8.4754e-03,
          2.0305e-02, 1.0272e-02],
         [3.7321e-04, 2.3843e-03, 1.4920e-02,  ..., 1.3938e-02,
          3.2267e-02, 1.0272e-02],
         [3.7321e-04, 9.9285e-01, 9.6006e-01,  ..., 8.4754e-03,
          2.0305e-02, 9.6918e-01]],
        [[9.9879e-01, 4.1550e-03, 6.4925e-03,  ..., 1.7289e-02,
          3.8913e-03, 6.8854e-04],
         [4.0406e-04, 4.1550e-03, 6.4925e-03,  ..., 1.7289e-02,
          3.8913e-03, 6.8854e-04],
         [4.0406e-04, 4.1550e-03, 6.4925e-03,  ..., 1.9709e-02,
          9.8833e-01, 9.9793e-01],
         [4.0406e-04, 9.8753e-01, 9.8052e-01,  ..., 9.4571e-01,
          3.8913e-03, 6.8854e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.0131e-03, 1.0330e-03, 9.8895e-01,  ..., 9.9816e-01,
          1.0913e-02, 1.0781e-02],
         [6.0131e-03, 1.0330e-03, 3.7603e-03,  ..., 6.1427e-04,
          1.0913e-02, 1.0781e-02],
         [9.8196e-01, 1.0330e-03, 3.6462e-03,  ..., 6.1427e-04,
          9.6726e-01, 9.6766e-01],
         [6.0131e-03, 9.9690e-01, 3.6462e-03,  ..., 6.1427e-04,
          1.0913e-02, 1.0781e-02]],
        [[9.2503e-02, 1.1527e-03, 9.9490e-01,  ..., 9.9334e-01,
          7.4441e-03, 6.8039e-03],
         [5.0655e-01, 1.1527e-03, 1.3997e-03,  ..., 2.2187e-03,
          7.4441e-03, 6.8039e-03],
         [8.1822e-02, 1.1527e-03, 1.3997e-03,  ..., 2.2187e-03,
          7.4441e-03, 9.7959e-01],
         [3.1912e-01, 9.9654e-01, 2.3018e-03,  ..., 2.2187e-03,
          9.7767e-01, 6.8039e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 194:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9590, 0.0079, 0.0113,  ..., 0.9789, 0.9535, 0.0282],
         [0.0125, 0.0079, 0.0113,  ..., 0.0067, 0.0137, 0.0215],
         [0.0125, 0.0079, 0.0130,  ..., 0.0077, 0.0173, 0.0274],
         [0.0161, 0.9764, 0.9645,  ..., 0.0067, 0.0156, 0.9229]],
        [[0.9906, 0.0064, 0.0028,  ..., 0.0159, 0.0023, 0.0011],
         [0.0036, 0.0053, 0.0028,  ..., 0.0159, 0.0023, 0.0011],
         [0.0029, 0.0053, 0.0028,  ..., 0.0213, 0.9932, 0.9967],
         [0.0029, 0.9829, 0.9916,  ..., 0.9468, 0.0023, 0.0011]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:28:29,518 [Process: 0] Synchronize training processes
2024-08-19 13:28:29,518 [Process: 0] Evaluating...
2024-08-19 13:28:29,520 [Process: 0] EPOCH 194:
2024-08-19 13:28:29,522 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:30,557 [Process: 0] Synchronize training processes
2024-08-19 13:28:30,557 [Process: 0] Evaluating...
2024-08-19 13:28:30,559 [Process: 0] EPOCH 195:
2024-08-19 13:28:30,561 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9151e-02, 3.2753e-04, 9.9806e-01,  ..., 9.9947e-01,
          1.1101e-02, 1.6532e-02],
         [1.9151e-02, 3.2753e-04, 6.3181e-04,  ..., 1.7568e-04,
          1.1101e-02, 1.6532e-02],
         [9.4255e-01, 3.2753e-04, 6.3181e-04,  ..., 1.7568e-04,
          9.6670e-01, 9.5040e-01],
         [1.9151e-02, 9.9902e-01, 6.7746e-04,  ..., 1.7568e-04,
          1.1101e-02, 1.6532e-02]],
        [[1.2850e-01, 5.2196e-04, 9.9308e-01,  ..., 9.9883e-01,
          1.6110e-01, 1.0406e-02],
         [5.4425e-01, 5.2196e-04, 1.9705e-03,  ..., 3.9015e-04,
          2.1656e-02, 1.0406e-02],
         [8.3608e-02, 5.2196e-04, 1.9705e-03,  ..., 3.9015e-04,
          2.1656e-02, 9.6834e-01],
         [2.4364e-01, 9.9843e-01, 2.9815e-03,  ..., 3.9015e-04,
          7.9559e-01, 1.0847e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 195:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7756e-01, 7.3688e-03, 2.2454e-02,  ..., 9.9593e-01,
          9.2650e-01, 3.0959e-03],
         [7.1502e-03, 7.3688e-03, 2.2454e-02,  ..., 1.3158e-03,
          2.1510e-02, 3.0959e-03],
         [8.1369e-03, 7.3688e-03, 2.7644e-02,  ..., 1.4393e-03,
          2.9140e-02, 3.0959e-03],
         [7.1502e-03, 9.7789e-01, 9.2745e-01,  ..., 1.3158e-03,
          2.2846e-02, 9.9071e-01]],
        [[9.6447e-01, 7.9663e-03, 6.1937e-03,  ..., 4.1726e-02,
          1.0402e-02, 6.8352e-04],
         [1.1824e-02, 7.9663e-03, 6.1937e-03,  ..., 3.6000e-02,
          1.0402e-02, 6.8352e-04],
         [1.2358e-02, 7.9663e-03, 6.1937e-03,  ..., 5.7263e-02,
          9.6879e-01, 9.9795e-01],
         [1.1345e-02, 9.7610e-01, 9.8142e-01,  ..., 8.6501e-01,
          1.0402e-02, 6.8352e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.9649e-02, 4.8401e-03, 9.8957e-01,  ..., 9.8990e-01,
          1.0526e-02, 8.0132e-03],
         [1.9649e-02, 3.9827e-03, 3.4761e-03,  ..., 3.3662e-03,
          1.0526e-02, 8.0132e-03],
         [9.4105e-01, 3.9827e-03, 3.4761e-03,  ..., 3.3662e-03,
          9.6842e-01, 9.7596e-01],
         [1.9649e-02, 9.8719e-01, 3.4761e-03,  ..., 3.3662e-03,
          1.0526e-02, 8.0132e-03]],
        [[4.6566e-01, 2.2560e-04, 9.9740e-01,  ..., 9.9680e-01,
          4.0331e-01, 6.1633e-03],
         [1.6607e-01, 2.2560e-04, 8.1218e-04,  ..., 1.0658e-03,
          1.6209e-02, 6.1633e-03],
         [8.1754e-02, 2.2560e-04, 8.1218e-04,  ..., 1.0658e-03,
          1.6209e-02, 9.8151e-01],
         [2.8651e-01, 9.9932e-01, 9.7646e-04,  ..., 1.0658e-03,
          5.6428e-01, 6.1633e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 196:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9807e-01, 9.8736e-03, 3.1799e-03,  ..., 9.3696e-01,
          9.7430e-01, 8.8550e-03],
         [6.4262e-04, 9.2885e-03, 3.1799e-03,  ..., 2.5239e-02,
          7.5599e-03, 8.8550e-03],
         [6.4262e-04, 9.2885e-03, 3.1799e-03,  ..., 2.0344e-02,
          1.0585e-02, 8.8550e-03],
         [6.4262e-04, 9.7155e-01, 9.9046e-01,  ..., 1.7454e-02,
          7.5599e-03, 9.7344e-01]],
        [[9.9146e-01, 8.8050e-03, 1.0229e-02,  ..., 3.7118e-02,
          1.6599e-03, 1.3853e-03],
         [3.2763e-03, 8.8050e-03, 1.0229e-02,  ..., 3.2212e-02,
          1.6599e-03, 1.3853e-03],
         [2.6307e-03, 8.8050e-03, 1.0229e-02,  ..., 6.2737e-02,
          9.9502e-01, 9.9584e-01],
         [2.6307e-03, 9.7359e-01, 9.6931e-01,  ..., 8.6793e-01,
          1.6599e-03, 1.3853e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:28:31,598 [Process: 0] Synchronize training processes
2024-08-19 13:28:31,598 [Process: 0] Evaluating...
2024-08-19 13:28:31,600 [Process: 0] EPOCH 196:
2024-08-19 13:28:31,602 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:32,640 [Process: 0] Synchronize training processes
2024-08-19 13:28:32,641 [Process: 0] Evaluating...
2024-08-19 13:28:32,642 [Process: 0] EPOCH 197:
2024-08-19 13:28:32,644 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1639e-02, 2.1887e-03, 9.9883e-01,  ..., 9.9884e-01,
          9.6356e-03, 1.2309e-02],
         [1.1639e-02, 2.1887e-03, 3.9127e-04,  ..., 3.8710e-04,
          9.6356e-03, 1.2208e-02],
         [9.6508e-01, 2.1887e-03, 3.9127e-04,  ..., 3.8710e-04,
          9.7109e-01, 9.6328e-01],
         [1.1639e-02, 9.9343e-01, 3.9127e-04,  ..., 3.8710e-04,
          9.6356e-03, 1.2208e-02]],
        [[4.2477e-01, 9.7124e-04, 9.9367e-01,  ..., 9.9581e-01,
          2.6606e-02, 5.1976e-03],
         [2.4911e-01, 6.5383e-04, 2.1115e-03,  ..., 1.3971e-03,
          1.8535e-02, 5.1976e-03],
         [9.7438e-02, 6.5383e-04, 2.1115e-03,  ..., 1.3971e-03,
          1.8535e-02, 9.8441e-01],
         [2.2868e-01, 9.9772e-01, 2.1115e-03,  ..., 1.3971e-03,
          9.3632e-01, 5.1976e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 197:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9486e-01, 5.0367e-03, 1.7403e-02,  ..., 9.8601e-01,
          8.6281e-01, 3.8894e-03],
         [1.6601e-03, 5.0367e-03, 1.1165e-02,  ..., 6.6802e-03,
          5.7689e-02, 3.8894e-03],
         [1.8154e-03, 5.0367e-03, 1.1165e-02,  ..., 3.6557e-03,
          4.5711e-02, 3.8894e-03],
         [1.6601e-03, 9.8489e-01, 9.6027e-01,  ..., 3.6557e-03,
          3.3787e-02, 9.8833e-01]],
        [[9.9785e-01, 4.1222e-03, 5.2043e-03,  ..., 1.2329e-02,
          2.2598e-03, 2.4797e-03],
         [7.1727e-04, 4.1222e-03, 5.2043e-03,  ..., 9.0077e-03,
          2.2598e-03, 2.4797e-03],
         [7.1727e-04, 4.1222e-03, 5.2043e-03,  ..., 9.0077e-03,
          9.9322e-01, 9.9256e-01],
         [7.1727e-04, 9.8763e-01, 9.8439e-01,  ..., 9.6966e-01,
          2.2598e-03, 2.4797e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2994e-03, 6.8205e-03, 9.9975e-01,  ..., 9.9773e-01,
          1.2299e-02, 7.8845e-03],
         [9.2994e-03, 6.8205e-03, 8.1759e-05,  ..., 7.5793e-04,
          1.0814e-02, 7.8845e-03],
         [9.7210e-01, 6.8205e-03, 8.1759e-05,  ..., 7.5793e-04,
          9.6607e-01, 9.7635e-01],
         [9.2994e-03, 9.7954e-01, 8.1759e-05,  ..., 7.5793e-04,
          1.0814e-02, 7.8845e-03]],
        [[9.7915e-02, 1.4798e-03, 9.9729e-01,  ..., 9.9642e-01,
          8.4373e-04, 9.1002e-03],
         [5.2615e-01, 1.4798e-03, 9.0220e-04,  ..., 1.1922e-03,
          6.6652e-04, 9.1002e-03],
         [6.6800e-02, 1.4798e-03, 9.0220e-04,  ..., 1.1922e-03,
          6.6652e-04, 9.7270e-01],
         [3.0913e-01, 9.9556e-01, 9.0220e-04,  ..., 1.1922e-03,
          9.9782e-01, 9.1002e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 198:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:28:33,679 [Process: 0] Synchronize training processes
2024-08-19 13:28:33,679 [Process: 0] Evaluating...
2024-08-19 13:28:33,681 [Process: 0] EPOCH 198:
2024-08-19 13:28:33,683 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:34,719 [Process: 0] Synchronize training processes
2024-08-19 13:28:34,719 [Process: 0] Evaluating...
2024-08-19 13:28:34,721 [Process: 0] EPOCH 199:
2024-08-19 13:28:34,723 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9803e-01, 1.0917e-02, 7.6526e-03,  ..., 9.9695e-01,
          9.1891e-01, 2.5157e-02],
         [6.5605e-04, 1.0917e-02, 7.6526e-03,  ..., 1.0177e-03,
          2.3066e-02, 2.5157e-02],
         [6.5605e-04, 1.4743e-02, 7.6526e-03,  ..., 1.0177e-03,
          3.4963e-02, 3.2995e-02],
         [6.5605e-04, 9.6342e-01, 9.7704e-01,  ..., 1.0177e-03,
          2.3066e-02, 9.1669e-01]],
        [[9.8950e-01, 6.7374e-03, 5.7150e-03,  ..., 1.0141e-02,
          1.8099e-03, 1.8383e-03],
         [3.4992e-03, 6.7374e-03, 5.7150e-03,  ..., 1.0141e-02,
          1.8099e-03, 1.8383e-03],
         [3.4992e-03, 6.7374e-03, 5.7150e-03,  ..., 1.0141e-02,
          9.9457e-01, 9.9449e-01],
         [3.4992e-03, 9.7979e-01, 9.8285e-01,  ..., 9.6958e-01,
          1.8099e-03, 1.8383e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1177e-02, 1.8107e-03, 9.9009e-01,  ..., 9.9963e-01,
          1.2105e-02, 9.8638e-03],
         [1.1177e-02, 1.8107e-03, 3.3049e-03,  ..., 1.2261e-04,
          1.2105e-02, 9.4285e-03],
         [9.6584e-01, 1.8107e-03, 3.3049e-03,  ..., 1.2261e-04,
          9.6295e-01, 9.7128e-01],
         [1.1811e-02, 9.9457e-01, 3.3049e-03,  ..., 1.2261e-04,
          1.2838e-02, 9.4285e-03]],
        [[1.2751e-01, 2.2224e-03, 9.8373e-01,  ..., 9.6968e-01,
          1.5425e-02, 3.5774e-03],
         [5.2578e-01, 2.2224e-03, 5.4230e-03,  ..., 1.0106e-02,
          6.4548e-03, 3.5774e-03],
         [8.6754e-02, 2.2224e-03, 5.4230e-03,  ..., 1.0106e-02,
          6.4548e-03, 9.8927e-01],
         [2.5996e-01, 9.9333e-01, 5.4230e-03,  ..., 1.0106e-02,
          9.7167e-01, 3.5774e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 199:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9912, 0.0106, 0.0063,  ..., 0.9737, 0.9317, 0.0086],
         [0.0029, 0.0106, 0.0063,  ..., 0.0085, 0.0186, 0.0086],
         [0.0029, 0.0106, 0.0063,  ..., 0.0094, 0.0268, 0.0086],
         [0.0029, 0.9682, 0.9810,  ..., 0.0085, 0.0229, 0.9743]],
        [[0.9838, 0.0040, 0.0078,  ..., 0.0101, 0.0048, 0.0025],
         [0.0047, 0.0040, 0.0078,  ..., 0.0101, 0.0048, 0.0025],
         [0.0068, 0.0040, 0.0078,  ..., 0.0105, 0.9857, 0.9924],
         [0.0047, 0.9881, 0.9766,  ..., 0.9693, 0.0048, 0.0025]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6788e-03, 3.1218e-03, 9.9230e-01,  ..., 9.9977e-01,
          1.0004e-02, 6.1162e-03],
         [8.6788e-03, 3.1218e-03, 2.5672e-03,  ..., 7.6732e-05,
          9.7437e-03, 6.1162e-03],
         [9.7396e-01, 3.1218e-03, 2.5672e-03,  ..., 7.6732e-05,
          9.7051e-01, 9.8165e-01],
         [8.6788e-03, 9.9063e-01, 2.5672e-03,  ..., 7.6732e-05,
          9.7437e-03, 6.1162e-03]],
        [[2.5885e-01, 8.5412e-04, 9.9570e-01,  ..., 9.6585e-01,
          1.0029e-01, 1.1110e-02],
         [4.6979e-01, 8.5412e-04, 1.4341e-03,  ..., 1.1382e-02,
          3.9229e-02, 1.1110e-02],
         [9.3114e-02, 8.5412e-04, 1.4341e-03,  ..., 1.1382e-02,
          3.9229e-02, 9.6667e-01],
         [1.7825e-01, 9.9744e-01, 1.4341e-03,  ..., 1.1382e-02,
          8.2126e-01, 1.1110e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 200:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:35,758 [Process: 0] Synchronize training processes
2024-08-19 13:28:35,759 [Process: 0] Evaluating...
2024-08-19 13:28:35,761 [Process: 0] EPOCH 200:
2024-08-19 13:28:35,763 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:36,799 [Process: 0] Synchronize training processes
2024-08-19 13:28:36,799 [Process: 0] Evaluating...
2024-08-19 13:28:36,801 [Process: 0] EPOCH 201:
2024-08-19 13:28:36,803 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9964, 0.0072, 0.0106,  ..., 0.9943, 0.9723, 0.0051],
         [0.0012, 0.0072, 0.0106,  ..., 0.0018, 0.0092, 0.0051],
         [0.0012, 0.0072, 0.0106,  ..., 0.0022, 0.0093, 0.0051],
         [0.0012, 0.9784, 0.9681,  ..., 0.0018, 0.0092, 0.9847]],
        [[0.9908, 0.0077, 0.0272,  ..., 0.0057, 0.0079, 0.0037],
         [0.0031, 0.0077, 0.0210,  ..., 0.0057, 0.0079, 0.0037],
         [0.0031, 0.0077, 0.0280,  ..., 0.0057, 0.9764, 0.9889],
         [0.0031, 0.9769, 0.9238,  ..., 0.9829, 0.0079, 0.0037]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5041e-02, 5.8244e-01, 9.9727e-01,  ..., 9.9926e-01,
          6.2928e-03, 9.3489e-03],
         [2.1768e-02, 6.8216e-02, 9.1067e-04,  ..., 2.4757e-04,
          6.2928e-03, 9.3489e-03],
         [9.2687e-01, 8.0565e-02, 9.1067e-04,  ..., 2.4757e-04,
          9.8112e-01, 9.7195e-01],
         [2.6316e-02, 2.6878e-01, 9.1067e-04,  ..., 2.4757e-04,
          6.2928e-03, 9.3489e-03]],
        [[2.4715e-01, 5.1263e-04, 9.9455e-01,  ..., 9.9862e-01,
          9.7051e-01, 5.5775e-03],
         [3.3718e-01, 5.1263e-04, 1.8160e-03,  ..., 4.5904e-04,
          7.8043e-03, 5.5775e-03],
         [9.6635e-02, 5.1263e-04, 1.8160e-03,  ..., 4.5904e-04,
          7.8043e-03, 9.8327e-01],
         [3.1904e-01, 9.9846e-01, 1.8160e-03,  ..., 4.5904e-04,
          1.3885e-02, 5.5775e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 201:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9824, 0.0040, 0.0077,  ..., 0.9896, 0.9455, 0.0582],
         [0.0062, 0.0040, 0.0077,  ..., 0.0033, 0.0137, 0.0331],
         [0.0062, 0.0040, 0.0077,  ..., 0.0039, 0.0272, 0.0558],
         [0.0051, 0.9881, 0.9770,  ..., 0.0033, 0.0137, 0.8529]],
        [[0.8872, 0.0047, 0.0055,  ..., 0.0350, 0.0027, 0.0018],
         [0.0242, 0.0047, 0.0055,  ..., 0.0378, 0.0027, 0.0018],
         [0.0644, 0.0047, 0.0055,  ..., 0.0553, 0.9919, 0.9947],
         [0.0242, 0.9860, 0.9836,  ..., 0.8719, 0.0027, 0.0018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.7905e-03, 1.0929e-02, 9.9438e-01,  ..., 9.9314e-01,
          9.3442e-03, 6.3578e-03],
         [6.7905e-03, 6.1198e-03, 1.8733e-03,  ..., 2.2855e-03,
          9.3442e-03, 6.3578e-03],
         [9.7963e-01, 6.1198e-03, 1.8733e-03,  ..., 2.2855e-03,
          9.7197e-01, 9.8093e-01],
         [6.7905e-03, 9.7683e-01, 1.8733e-03,  ..., 2.2855e-03,
          9.3442e-03, 6.3578e-03]],
        [[6.9319e-01, 1.1484e-03, 6.9215e-04,  ..., 5.0191e-03,
          9.9168e-01, 1.4150e-02],
         [1.3285e-01, 1.1484e-03, 6.9215e-04,  ..., 5.0191e-03,
          2.7298e-03, 1.4150e-02],
         [5.9942e-02, 1.1484e-03, 6.9215e-04,  ..., 5.0191e-03,
          2.7298e-03, 9.5755e-01],
         [1.1402e-01, 9.9655e-01, 9.9792e-01,  ..., 9.8494e-01,
          2.8603e-03, 1.4150e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:28:37,839 [Process: 0] Synchronize training processes
2024-08-19 13:28:37,840 [Process: 0] Evaluating...
2024-08-19 13:28:38,816 [Process: 0] EPOCH 202:
2024-08-19 13:28:38,820 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 202:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9955, 0.0031, 0.0053,  ..., 0.9913, 0.9485, 0.0049],
         [0.0014, 0.0031, 0.0053,  ..., 0.0029, 0.0139, 0.0049],
         [0.0016, 0.0031, 0.0053,  ..., 0.0029, 0.0203, 0.0049],
         [0.0014, 0.9906, 0.9841,  ..., 0.0029, 0.0173, 0.9852]],
        [[0.9797, 0.0062, 0.0218,  ..., 0.0117, 0.0019, 0.0033],
         [0.0059, 0.0062, 0.0218,  ..., 0.0117, 0.0019, 0.0033],
         [0.0086, 0.0062, 0.0289,  ..., 0.0117, 0.9943, 0.9900],
         [0.0059, 0.9813, 0.9275,  ..., 0.9650, 0.0019, 0.0033]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.5371e-03, 7.8612e-03, 9.9836e-01,  ..., 9.9935e-01,
          4.4716e-03, 5.5247e-03],
         [7.5371e-03, 7.8612e-03, 5.4709e-04,  ..., 2.1601e-04,
          4.4716e-03, 5.5247e-03],
         [9.7739e-01, 7.8612e-03, 5.4709e-04,  ..., 2.1601e-04,
          9.8659e-01, 9.8343e-01],
         [7.5371e-03, 9.7642e-01, 5.4709e-04,  ..., 2.1601e-04,
          4.4716e-03, 5.5247e-03]],
        [[7.8278e-01, 8.7298e-04, 9.6619e-04,  ..., 1.0320e-03,
          3.8810e-01, 9.7787e-03],
         [1.4945e-01, 8.7298e-04, 9.6619e-04,  ..., 1.0320e-03,
          2.1957e-02, 9.7787e-03],
         [3.3883e-02, 8.7298e-04, 9.6619e-04,  ..., 1.0320e-03,
          2.1957e-02, 9.7066e-01],
         [3.3883e-02, 9.9738e-01, 9.9710e-01,  ..., 9.9690e-01,
          5.6798e-01, 9.7787e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 203:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:39,818 [Process: 0] Synchronize training processes
2024-08-19 13:28:39,818 [Process: 0] Evaluating...
2024-08-19 13:28:39,820 [Process: 0] EPOCH 203:
2024-08-19 13:28:39,822 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:40,860 [Process: 0] Synchronize training processes
2024-08-19 13:28:40,861 [Process: 0] Evaluating...
2024-08-19 13:28:40,862 [Process: 0] EPOCH 204:
2024-08-19 13:28:40,864 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7536e-01, 1.0531e-02, 4.4889e-03,  ..., 9.8947e-01,
          6.4494e-01, 2.1132e-02],
         [7.4568e-03, 1.0531e-02, 4.4889e-03,  ..., 3.5091e-03,
          5.4041e-02, 1.9471e-02],
         [9.7284e-03, 1.0531e-02, 4.4889e-03,  ..., 3.5091e-03,
          7.0910e-02, 1.9471e-02],
         [7.4568e-03, 9.6841e-01, 9.8653e-01,  ..., 3.5091e-03,
          2.3011e-01, 9.3993e-01]],
        [[9.9745e-01, 3.3009e-03, 3.3218e-03,  ..., 2.5821e-02,
          4.5469e-03, 2.4795e-03],
         [8.5018e-04, 3.3009e-03, 3.3218e-03,  ..., 2.5821e-02,
          4.5469e-03, 2.8868e-03],
         [8.5018e-04, 3.3009e-03, 3.3218e-03,  ..., 5.0649e-02,
          9.8636e-01, 9.9215e-01],
         [8.5018e-04, 9.9010e-01, 9.9003e-01,  ..., 8.9771e-01,
          4.5469e-03, 2.4795e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.6693e-03, 2.1167e-03, 9.9370e-01,  ..., 9.5626e-01,
          6.9281e-03, 1.0228e-02],
         [7.6693e-03, 2.1167e-03, 2.0985e-03,  ..., 1.5069e-02,
          6.9281e-03, 1.0228e-02],
         [9.7699e-01, 2.1167e-03, 2.0985e-03,  ..., 1.4337e-02,
          9.7922e-01, 9.6932e-01],
         [7.6693e-03, 9.9365e-01, 2.0985e-03,  ..., 1.4337e-02,
          6.9281e-03, 1.0228e-02]],
        [[6.2544e-01, 1.9949e-03, 9.9049e-01,  ..., 1.1550e-03,
          6.3093e-04, 5.2391e-03],
         [1.7345e-01, 1.9949e-03, 3.1694e-03,  ..., 1.1550e-03,
          6.3093e-04, 5.2391e-03],
         [6.5482e-02, 1.9949e-03, 3.1694e-03,  ..., 1.1550e-03,
          6.3093e-04, 9.8428e-01],
         [1.3563e-01, 9.9402e-01, 3.1694e-03,  ..., 9.9653e-01,
          9.9811e-01, 5.2391e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 204:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9965, 0.0074, 0.0107,  ..., 0.9942, 0.8072, 0.0127],
         [0.0012, 0.0074, 0.0107,  ..., 0.0019, 0.0359, 0.0127],
         [0.0012, 0.0074, 0.0145,  ..., 0.0019, 0.0523, 0.0127],
         [0.0012, 0.9779, 0.9641,  ..., 0.0019, 0.1046, 0.9620]],
        [[0.9896, 0.0062, 0.0095,  ..., 0.0078, 0.0034, 0.0022],
         [0.0034, 0.0062, 0.0095,  ..., 0.0078, 0.0034, 0.0022],
         [0.0035, 0.0062, 0.0095,  ..., 0.0078, 0.9898, 0.9933],
         [0.0034, 0.9815, 0.9714,  ..., 0.9767, 0.0034, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.2755e-03, 4.7354e-04, 9.9285e-01,  ..., 9.9886e-01,
          7.3420e-03, 5.6622e-03],
         [6.2755e-03, 4.7354e-04, 2.1601e-03,  ..., 3.7886e-04,
          7.3420e-03, 5.6622e-03],
         [9.8117e-01, 4.7354e-04, 2.1601e-03,  ..., 3.7886e-04,
          9.7797e-01, 9.8301e-01],
         [6.2755e-03, 9.9858e-01, 2.8343e-03,  ..., 3.7886e-04,
          7.3420e-03, 5.6622e-03]],
        [[4.4213e-01, 1.0074e-03, 9.9671e-01,  ..., 8.9203e-01,
          1.2679e-04, 1.4673e-02],
         [4.0793e-01, 1.0074e-03, 1.0983e-03,  ..., 1.7883e-02,
          1.2679e-04, 1.4673e-02],
         [5.2601e-02, 1.0074e-03, 1.0983e-03,  ..., 1.8402e-02,
          1.2679e-04, 9.5598e-01],
         [9.7337e-02, 9.9698e-01, 1.0983e-03,  ..., 7.1684e-02,
          9.9962e-01, 1.4673e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 205:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:41,903 [Process: 0] Synchronize training processes
2024-08-19 13:28:41,904 [Process: 0] Evaluating...
2024-08-19 13:28:41,905 [Process: 0] EPOCH 205:
2024-08-19 13:28:41,907 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:42,944 [Process: 0] Synchronize training processes
2024-08-19 13:28:42,945 [Process: 0] Evaluating...
2024-08-19 13:28:42,947 [Process: 0] EPOCH 206:
2024-08-19 13:28:42,948 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9950, 0.0124, 0.0095,  ..., 0.9932, 0.9764, 0.0348],
         [0.0017, 0.0124, 0.0095,  ..., 0.0023, 0.0073, 0.0331],
         [0.0017, 0.0124, 0.0096,  ..., 0.0023, 0.0073, 0.0478],
         [0.0017, 0.9628, 0.9714,  ..., 0.0023, 0.0090, 0.8844]],
        [[0.9957, 0.0037, 0.0055,  ..., 0.0208, 0.0036, 0.0011],
         [0.0014, 0.0037, 0.0055,  ..., 0.0208, 0.0036, 0.0011],
         [0.0014, 0.0037, 0.0055,  ..., 0.0320, 0.9893, 0.9966],
         [0.0014, 0.9889, 0.9835,  ..., 0.9264, 0.0036, 0.0011]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.0429e-03, 2.2963e-04, 9.8916e-01,  ..., 9.9816e-01,
          5.4914e-03, 5.0603e-03],
         [9.0429e-03, 2.2963e-04, 4.3573e-03,  ..., 6.1367e-04,
          5.4914e-03, 5.0603e-03],
         [9.7287e-01, 2.2963e-04, 3.2435e-03,  ..., 6.1367e-04,
          9.8353e-01, 9.8482e-01],
         [9.0429e-03, 9.9931e-01, 3.2435e-03,  ..., 6.1367e-04,
          5.4914e-03, 5.0603e-03]],
        [[3.7065e-01, 1.4720e-04, 9.9926e-01,  ..., 9.9787e-01,
          1.9412e-03, 6.4481e-03],
         [4.3741e-01, 1.4720e-04, 2.4768e-04,  ..., 7.0891e-04,
          1.9412e-03, 6.4481e-03],
         [7.0237e-02, 1.4720e-04, 2.4768e-04,  ..., 7.0891e-04,
          1.9412e-03, 9.8066e-01],
         [1.2171e-01, 9.9956e-01, 2.4768e-04,  ..., 7.0891e-04,
          9.9418e-01, 6.4481e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 206:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9941e-01, 7.1718e-03, 3.2022e-03,  ..., 9.9026e-01,
          8.6839e-01, 8.5747e-03],
         [1.9647e-04, 7.1718e-03, 3.2022e-03,  ..., 3.2476e-03,
          3.1951e-02, 8.1162e-03],
         [1.9647e-04, 7.1718e-03, 3.2022e-03,  ..., 3.2476e-03,
          5.2748e-02, 8.7778e-03],
         [1.9647e-04, 9.7848e-01, 9.9039e-01,  ..., 3.2476e-03,
          4.6909e-02, 9.7453e-01]],
        [[9.6924e-01, 4.3317e-03, 4.7181e-03,  ..., 4.7478e-03,
          5.4330e-03, 1.5265e-03],
         [9.2774e-03, 4.3317e-03, 4.7181e-03,  ..., 4.7478e-03,
          5.4330e-03, 1.5265e-03],
         [1.2207e-02, 4.3317e-03, 4.7181e-03,  ..., 4.7478e-03,
          9.8370e-01, 9.9542e-01],
         [9.2774e-03, 9.8700e-01, 9.8585e-01,  ..., 9.8576e-01,
          5.4330e-03, 1.5265e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8741e-03, 3.0017e-03, 9.9818e-01,  ..., 9.9965e-01,
          6.7135e-03, 6.1739e-03],
         [9.8741e-03, 3.5916e-03, 6.0647e-04,  ..., 1.1689e-04,
          6.7135e-03, 6.1739e-03],
         [9.7038e-01, 3.0017e-03, 6.0647e-04,  ..., 1.1689e-04,
          9.7986e-01, 9.8148e-01],
         [9.8741e-03, 9.9040e-01, 6.0647e-04,  ..., 1.1689e-04,
          6.7135e-03, 6.1739e-03]],
        [[5.4273e-01, 2.0229e-03, 9.9605e-01,  ..., 9.9503e-01,
          1.4594e-04, 1.0077e-02],
         [2.9452e-01, 2.0229e-03, 1.3166e-03,  ..., 1.6557e-03,
          1.4594e-04, 1.0077e-02],
         [7.0880e-02, 2.0229e-03, 1.3166e-03,  ..., 1.6557e-03,
          1.4594e-04, 9.6977e-01],
         [9.1871e-02, 9.9393e-01, 1.3166e-03,  ..., 1.6557e-03,
          9.9956e-01, 1.0077e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 207:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:43,986 [Process: 0] Synchronize training processes
2024-08-19 13:28:43,987 [Process: 0] Evaluating...
2024-08-19 13:28:43,989 [Process: 0] EPOCH 207:
2024-08-19 13:28:43,990 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:28:45,029 [Process: 0] Synchronize training processes
2024-08-19 13:28:45,030 [Process: 0] Evaluating...
2024-08-19 13:28:45,031 [Process: 0] EPOCH 208:
2024-08-19 13:28:45,033 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9940, 0.0042, 0.0086,  ..., 0.9834, 0.8692, 0.0059],
         [0.0020, 0.0042, 0.0086,  ..., 0.0048, 0.0271, 0.0059],
         [0.0020, 0.0042, 0.0086,  ..., 0.0071, 0.0383, 0.0059],
         [0.0020, 0.9873, 0.9741,  ..., 0.0048, 0.0654, 0.9824]],
        [[0.9919, 0.0022, 0.0078,  ..., 0.0136, 0.0039, 0.0023],
         [0.0027, 0.0022, 0.0078,  ..., 0.0136, 0.0039, 0.0023],
         [0.0027, 0.0022, 0.0078,  ..., 0.0171, 0.9884, 0.9932],
         [0.0027, 0.9935, 0.9766,  ..., 0.9557, 0.0039, 0.0023]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.1709e-03, 3.0908e-03, 9.9604e-01,  ..., 9.9634e-01,
          6.8074e-03, 3.3167e-03],
         [7.1709e-03, 3.0908e-03, 1.1883e-03,  ..., 1.2197e-03,
          6.8074e-03, 3.3167e-03],
         [9.7849e-01, 3.0908e-03, 1.1883e-03,  ..., 1.2197e-03,
          9.7958e-01, 9.9005e-01],
         [7.1709e-03, 9.9073e-01, 1.5877e-03,  ..., 1.2197e-03,
          6.8074e-03, 3.3167e-03]],
        [[3.2672e-01, 6.1436e-04, 9.9730e-01,  ..., 9.7083e-01,
          7.2635e-04, 7.0437e-03],
         [2.1017e-01, 6.1436e-04, 9.0149e-04,  ..., 8.7738e-03,
          7.2635e-04, 7.0437e-03],
         [1.3586e-01, 6.1436e-04, 9.0149e-04,  ..., 8.7738e-03,
          7.2635e-04, 9.7887e-01],
         [3.2724e-01, 9.9816e-01, 9.0149e-04,  ..., 1.1622e-02,
          9.9782e-01, 7.0437e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 208:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9870e-01, 1.6362e-02, 9.3400e-03,  ..., 9.8945e-01,
          8.9729e-01, 9.3898e-03],
         [4.3422e-04, 1.6362e-02, 9.3400e-03,  ..., 3.9586e-03,
          2.0112e-02, 9.3898e-03],
         [4.3422e-04, 1.6362e-02, 9.3400e-03,  ..., 3.2976e-03,
          2.0547e-02, 9.3898e-03],
         [4.3422e-04, 9.5091e-01, 9.7198e-01,  ..., 3.2976e-03,
          6.2053e-02, 9.7183e-01]],
        [[9.9308e-01, 1.9387e-03, 1.3456e-02,  ..., 3.3298e-03,
          2.0894e-03, 9.3197e-04],
         [2.3066e-03, 1.9387e-03, 1.3456e-02,  ..., 3.3298e-03,
          2.0894e-03, 9.3197e-04],
         [2.3066e-03, 1.9387e-03, 1.3456e-02,  ..., 3.3298e-03,
          9.9373e-01, 9.9720e-01],
         [2.3066e-03, 9.9418e-01, 9.5963e-01,  ..., 9.9001e-01,
          2.0894e-03, 9.3197e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 179, in train_one_epoch
    for i, batch in enumerate(self.train_loader):
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in __getitem__
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in <listcomp>
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
KeyboardInterrupt