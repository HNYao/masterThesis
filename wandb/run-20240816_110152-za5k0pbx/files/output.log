[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2288, 0.2102, 0.2691,  ..., 0.3613, 0.3844, 0.3568],
         [0.2360, 0.3695, 0.2254,  ..., 0.2129, 0.2029, 0.2303],
         [0.3065, 0.2102, 0.2067,  ..., 0.2129, 0.2029, 0.2065],
         [0.2288, 0.2102, 0.2988,  ..., 0.2129, 0.2099, 0.2065]],
        [[0.2659, 0.2759, 0.2439,  ..., 0.2364, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2683,  ..., 0.2658, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2439,  ..., 0.2615, 0.3221, 0.2638],
         [0.2447, 0.2414, 0.2439,  ..., 0.2364, 0.2260, 0.2454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:01:57,015 [Worker 0] Is distributed: False
2024-08-16 11:01:57,015 [Process: 0] Starting training
2024-08-16 11:01:57,016 [Process: 0] EPOCH 1:
2024-08-16 11:01:57,019 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2905, 0.3208, 0.5129,  ..., 0.2179, 0.4153, 0.2396],
         [0.3152, 0.3093, 0.1624,  ..., 0.3711, 0.2977, 0.3403],
         [0.1971, 0.1849, 0.1624,  ..., 0.2055, 0.1435, 0.2100],
         [0.1971, 0.1849, 0.1624,  ..., 0.2055, 0.1435, 0.2100]],
        [[0.2045, 0.1997, 0.1674,  ..., 0.1832, 0.2651, 0.1486],
         [0.2045, 0.1997, 0.1674,  ..., 0.2219, 0.1968, 0.3508],
         [0.3865, 0.4009, 0.4978,  ..., 0.1832, 0.3653, 0.1486],
         [0.2045, 0.1997, 0.1674,  ..., 0.4117, 0.1728, 0.3519]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2872, 0.2797, 0.2789,  ..., 0.3032, 0.2449, 0.3419],
         [0.2715, 0.1987, 0.2692,  ..., 0.2072, 0.2449, 0.1963],
         [0.2206, 0.2128, 0.2170,  ..., 0.2072, 0.2654, 0.2214],
         [0.2206, 0.3087, 0.2349,  ..., 0.2824, 0.2449, 0.2405]],
        [[0.2304, 0.2312, 0.2387,  ..., 0.2246, 0.2444, 0.3003],
         [0.3088, 0.2972, 0.2660,  ..., 0.2338, 0.2669, 0.2797],
         [0.2304, 0.2312, 0.2138,  ..., 0.2111, 0.2444, 0.2038],
         [0.2304, 0.2403, 0.2815,  ..., 0.3305, 0.2444, 0.2161]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:01:59,576 [Process: 0] Synchronize training processes
2024-08-16 11:01:59,576 [Process: 0] Evaluating...
2024-08-16 11:01:59,578 [Process: 0] EPOCH 2:
2024-08-16 11:01:59,580 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3851, 0.1111, 0.1027,  ..., 0.5774, 0.1542, 0.5085],
         [0.3065, 0.5526, 0.3511,  ..., 0.1197, 0.1643, 0.1558],
         [0.0585, 0.2069, 0.2332,  ..., 0.1197, 0.3295, 0.1558],
         [0.2499, 0.1294, 0.3130,  ..., 0.1832, 0.3521, 0.1798]],
        [[0.2427, 0.2455, 0.1884,  ..., 0.2461, 0.2500, 0.2500],
         [0.2575, 0.1118, 0.1884,  ..., 0.2461, 0.2500, 0.2500],
         [0.2570, 0.2838, 0.4348,  ..., 0.2616, 0.2500, 0.2500],
         [0.2427, 0.3589, 0.1884,  ..., 0.2461, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2528, 0.3378, 0.2031,  ..., 0.2045, 0.2628, 0.2516],
         [0.2505, 0.2429, 0.3133,  ..., 0.2442, 0.2591, 0.3167],
         [0.2203, 0.2096, 0.2277,  ..., 0.2477, 0.2352, 0.2158],
         [0.2764, 0.2096, 0.2558,  ..., 0.3035, 0.2428, 0.2158]],
        [[0.2508, 0.2377, 0.2680,  ..., 0.2890, 0.3036, 0.2571],
         [0.2099, 0.2377, 0.2440,  ..., 0.2377, 0.2040, 0.2129],
         [0.2099, 0.2377, 0.2440,  ..., 0.2367, 0.2040, 0.2129],
         [0.3294, 0.2869, 0.2440,  ..., 0.2367, 0.2884, 0.3171]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:01,506 [Process: 0] Synchronize training processes
2024-08-16 11:02:01,507 [Process: 0] Evaluating...
2024-08-16 11:02:01,509 [Process: 0] EPOCH 3:
2024-08-16 11:02:01,511 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2633, 0.4906, 0.1503,  ..., 0.2317, 0.1464, 0.3324],
         [0.1498, 0.1106, 0.2997,  ..., 0.2317, 0.3439, 0.1153],
         [0.3404, 0.2883, 0.3716,  ..., 0.3049, 0.3844, 0.2623],
         [0.2466, 0.1106, 0.1783,  ..., 0.2317, 0.1253, 0.2900]],
        [[0.1226, 0.1997, 0.1771,  ..., 0.2289, 0.3742, 0.2146],
         [0.4775, 0.3932, 0.4688,  ..., 0.2869, 0.3475, 0.2146],
         [0.1226, 0.1997, 0.1771,  ..., 0.1938, 0.1028, 0.3562],
         [0.2774, 0.2074, 0.1771,  ..., 0.2904, 0.1755, 0.2146]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2472, 0.2549, 0.2418,  ..., 0.2434, 0.2446, 0.2342],
         [0.2583, 0.2743, 0.2562,  ..., 0.2875, 0.2661, 0.2975],
         [0.2472, 0.1923, 0.2676,  ..., 0.2280, 0.2446, 0.2342],
         [0.2472, 0.2785, 0.2344,  ..., 0.2411, 0.2446, 0.2342]],
        [[0.2637, 0.1751, 0.2897,  ..., 0.2806, 0.2319, 0.2853],
         [0.2330, 0.3707, 0.2838,  ..., 0.2915, 0.2319, 0.2375],
         [0.2330, 0.1617, 0.1732,  ..., 0.2139, 0.2319, 0.2375],
         [0.2703, 0.2925, 0.2533,  ..., 0.2139, 0.3042, 0.2396]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:03,421 [Process: 0] Synchronize training processes
2024-08-16 11:02:03,421 [Process: 0] Evaluating...
2024-08-16 11:02:03,423 [Process: 0] EPOCH 4:
2024-08-16 11:02:03,425 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1438, 0.1286, 0.4458,  ..., 0.5725, 0.2500, 0.4020],
         [0.1438, 0.1286, 0.1642,  ..., 0.2343, 0.2500, 0.3193],
         [0.5481, 0.5916, 0.2258,  ..., 0.0966, 0.2500, 0.1016],
         [0.1643, 0.1513, 0.1642,  ..., 0.0966, 0.2500, 0.1770]],
        [[0.5633, 0.1571, 0.2500,  ..., 0.2331, 0.2111, 0.1804],
         [0.1456, 0.4435, 0.2500,  ..., 0.3008, 0.2525, 0.1804],
         [0.1456, 0.2008, 0.2500,  ..., 0.2331, 0.2111, 0.1804],
         [0.1456, 0.1985, 0.2500,  ..., 0.2331, 0.3254, 0.4588]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2211, 0.1993, 0.2302,  ..., 0.2265, 0.2310, 0.2188],
         [0.2211, 0.2934, 0.2302,  ..., 0.2356, 0.2191, 0.2188],
         [0.2211, 0.2175, 0.2302,  ..., 0.1949, 0.2609, 0.2188],
         [0.3366, 0.2898, 0.3094,  ..., 0.3430, 0.2890, 0.3436]],
        [[0.2878, 0.2493, 0.2469,  ..., 0.2694, 0.2642, 0.3205],
         [0.2374, 0.2493, 0.2594,  ..., 0.2422, 0.3004, 0.1924],
         [0.2374, 0.2520, 0.2469,  ..., 0.2462, 0.2177, 0.1875],
         [0.2374, 0.2493, 0.2469,  ..., 0.2422, 0.2177, 0.2996]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:05,455 [Process: 0] Synchronize training processes
2024-08-16 11:02:05,455 [Process: 0] Evaluating...
2024-08-16 11:02:05,457 [Process: 0] EPOCH 5:
2024-08-16 11:02:05,459 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.4173,  ..., 0.2500, 0.2563, 0.4012],
         [0.2500, 0.2500, 0.1942,  ..., 0.2500, 0.2479, 0.1996],
         [0.2500, 0.2500, 0.1942,  ..., 0.2500, 0.2479, 0.1996],
         [0.2500, 0.2500, 0.1942,  ..., 0.2500, 0.2479, 0.1996]],
        [[0.2120, 0.1074, 0.2351,  ..., 0.6355, 0.5428, 0.2117],
         [0.3915, 0.1074, 0.3030,  ..., 0.1268, 0.1012, 0.5244],
         [0.1106, 0.6778, 0.2590,  ..., 0.0972, 0.1763, 0.0486],
         [0.2859, 0.1074, 0.2030,  ..., 0.1405, 0.1797, 0.2153]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2101, 0.2382, 0.2086,  ..., 0.2012, 0.2088, 0.2782],
         [0.2660, 0.2432, 0.2397,  ..., 0.2834, 0.3292, 0.2228],
         [0.2101, 0.2414, 0.2638,  ..., 0.2012, 0.2088, 0.2022],
         [0.3137, 0.2772, 0.2879,  ..., 0.3143, 0.2531, 0.2967]],
        [[0.3393, 0.3151, 0.3360,  ..., 0.3778, 0.2510, 0.2500],
         [0.2202, 0.2251, 0.2213,  ..., 0.1921, 0.2497, 0.2500],
         [0.2202, 0.2251, 0.2213,  ..., 0.1921, 0.2497, 0.2500],
         [0.2202, 0.2347, 0.2213,  ..., 0.2380, 0.2497, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:07,466 [Process: 0] Synchronize training processes
2024-08-16 11:02:07,466 [Process: 0] Evaluating...
2024-08-16 11:02:07,468 [Process: 0] EPOCH 6:
2024-08-16 11:02:07,470 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.3825, 0.2500,  ..., 0.3836, 0.3121, 0.2516],
         [0.2500, 0.1710, 0.2500,  ..., 0.2575, 0.3025, 0.2698],
         [0.2500, 0.1614, 0.2500,  ..., 0.1753, 0.1927, 0.2329],
         [0.2500, 0.2852, 0.2500,  ..., 0.1837, 0.1927, 0.2458]],
        [[0.2126, 0.2432, 0.1548,  ..., 0.2031, 0.2525, 0.2784],
         [0.1733, 0.2432, 0.1760,  ..., 0.3613, 0.1132, 0.1582],
         [0.2243, 0.2432, 0.3944,  ..., 0.2031, 0.2369, 0.1582],
         [0.3898, 0.2703, 0.2748,  ..., 0.2325, 0.3974, 0.4052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2224, 0.2019, 0.2000,  ..., 0.2086, 0.2095, 0.2339],
         [0.3025, 0.2886, 0.3301,  ..., 0.3323, 0.2390, 0.2339],
         [0.2224, 0.2065, 0.2037,  ..., 0.2086, 0.2095, 0.2837],
         [0.2527, 0.3030, 0.2661,  ..., 0.2505, 0.3420, 0.2485]],
        [[0.3261, 0.2500, 0.2862,  ..., 0.2526, 0.2508, 0.3037],
         [0.2232, 0.2500, 0.2310,  ..., 0.2491, 0.2644, 0.2252],
         [0.2232, 0.2500, 0.2310,  ..., 0.2491, 0.2424, 0.2126],
         [0.2275, 0.2500, 0.2519,  ..., 0.2491, 0.2424, 0.2585]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:09,536 [Process: 0] Synchronize training processes
2024-08-16 11:02:09,536 [Process: 0] Evaluating...
2024-08-16 11:02:09,538 [Process: 0] EPOCH 7:
2024-08-16 11:02:09,540 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2266, 0.2560, 0.1477,  ..., 0.3047, 0.1711, 0.3533],
         [0.3477, 0.1793, 0.3597,  ..., 0.2600, 0.2981, 0.2156],
         [0.2096, 0.1720, 0.2312,  ..., 0.1414, 0.1711, 0.2156],
         [0.2161, 0.3927, 0.2614,  ..., 0.2939, 0.3598, 0.2156]],
        [[0.2696, 0.1796, 0.2832,  ..., 0.1498, 0.1491, 0.2339],
         [0.1943, 0.1796, 0.2372,  ..., 0.1498, 0.2605, 0.2683],
         [0.3418, 0.4612, 0.2523,  ..., 0.5506, 0.1491, 0.2638],
         [0.1943, 0.1796, 0.2273,  ..., 0.1498, 0.4412, 0.2339]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2233, 0.2155, 0.2479,  ..., 0.2542, 0.2488, 0.2689],
         [0.2337, 0.2539, 0.2639,  ..., 0.1928, 0.2833, 0.1979],
         [0.2233, 0.2155, 0.2217,  ..., 0.1928, 0.2224, 0.1972],
         [0.3197, 0.3150, 0.2664,  ..., 0.3601, 0.2456, 0.3360]],
        [[0.2461, 0.2459, 0.2431,  ..., 0.3064, 0.2451, 0.2387],
         [0.2713, 0.2983, 0.2431,  ..., 0.2202, 0.2144, 0.2416],
         [0.2248, 0.2115, 0.2431,  ..., 0.2202, 0.2144, 0.2647],
         [0.2578, 0.2443, 0.2706,  ..., 0.2532, 0.3261, 0.2550]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:11,556 [Process: 0] Synchronize training processes
2024-08-16 11:02:11,557 [Process: 0] Evaluating...
2024-08-16 11:02:11,559 [Process: 0] EPOCH 8:
2024-08-16 11:02:11,562 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2541, 0.3821, 0.3526,  ..., 0.3223, 0.3860, 0.2808],
         [0.2678, 0.1914, 0.1376,  ..., 0.2377, 0.1814, 0.2397],
         [0.2021, 0.1914, 0.1611,  ..., 0.2200, 0.2044, 0.2397],
         [0.2760, 0.2350, 0.3487,  ..., 0.2200, 0.2282, 0.2397]],
        [[0.2052, 0.2040, 0.1894,  ..., 0.2542, 0.1946, 0.1923],
         [0.2629, 0.3881, 0.2153,  ..., 0.2209, 0.2918, 0.2456],
         [0.3267, 0.2040, 0.3130,  ..., 0.3025, 0.3189, 0.3531],
         [0.2052, 0.2040, 0.2823,  ..., 0.2224, 0.1946, 0.2090]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2526, 0.2059, 0.2187,  ..., 0.2154, 0.2500, 0.2137],
         [0.2129, 0.3330, 0.2187,  ..., 0.2476, 0.2500, 0.2397],
         [0.1882, 0.2059, 0.2187,  ..., 0.2154, 0.2500, 0.2137],
         [0.3463, 0.2552, 0.3440,  ..., 0.3217, 0.2500, 0.3328]],
        [[0.2491, 0.3047, 0.3326,  ..., 0.2487, 0.2500, 0.2309],
         [0.2381, 0.2303, 0.2350,  ..., 0.2487, 0.2500, 0.2968],
         [0.2381, 0.1910, 0.1912,  ..., 0.2487, 0.2500, 0.2179],
         [0.2746, 0.2741, 0.2413,  ..., 0.2540, 0.2500, 0.2545]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:13,547 [Process: 0] Synchronize training processes
2024-08-16 11:02:13,547 [Process: 0] Evaluating...
2024-08-16 11:02:13,549 [Process: 0] EPOCH 9:
2024-08-16 11:02:13,551 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:02:15,545 [Process: 0] Synchronize training processes
2024-08-16 11:02:15,545 [Process: 0] Evaluating...
2024-08-16 11:02:15,547 [Process: 0] EPOCH 10:
2024-08-16 11:02:15,549 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2157, 0.5118, 0.1943,  ..., 0.3776, 0.1063, 0.2060],
         [0.2344, 0.1528, 0.3079,  ..., 0.1275, 0.2103, 0.2523],
         [0.1593, 0.1528, 0.1420,  ..., 0.1275, 0.3483, 0.1607],
         [0.3906, 0.1827, 0.3558,  ..., 0.3675, 0.3352, 0.3810]],
        [[0.2261, 0.2125, 0.3521,  ..., 0.6242, 0.4252, 0.4433],
         [0.2261, 0.2125, 0.2057,  ..., 0.1156, 0.0727, 0.1570],
         [0.3216, 0.3624, 0.1756,  ..., 0.1156, 0.4226, 0.1877],
         [0.2261, 0.2125, 0.2666,  ..., 0.1446, 0.0796, 0.2119]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2451, 0.2566, 0.2597,  ..., 0.2236, 0.2228, 0.2232],
         [0.1935, 0.2293, 0.1870,  ..., 0.2236, 0.2228, 0.2090],
         [0.1429, 0.1803, 0.1693,  ..., 0.2236, 0.2510, 0.2045],
         [0.4184, 0.3338, 0.3840,  ..., 0.3292, 0.3035, 0.3634]],
        [[0.2472, 0.2456, 0.2586,  ..., 0.2500, 0.2500, 0.2228],
         [0.2585, 0.2632, 0.2432,  ..., 0.2500, 0.2500, 0.2554],
         [0.2472, 0.2456, 0.2197,  ..., 0.2500, 0.2500, 0.2228],
         [0.2472, 0.2456, 0.2785,  ..., 0.2500, 0.2500, 0.2989]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:17,470 [Process: 0] Synchronize training processes
2024-08-16 11:02:17,470 [Process: 0] Evaluating...
2024-08-16 11:02:17,472 [Process: 0] EPOCH 11:
2024-08-16 11:02:17,474 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0642, 0.0818, 0.1241,  ..., 0.1062, 0.1068, 0.2006],
         [0.1002, 0.0818, 0.2479,  ..., 0.2891, 0.1870, 0.1132],
         [0.7714, 0.7546, 0.5038,  ..., 0.4984, 0.6229, 0.5968],
         [0.0642, 0.0818, 0.1241,  ..., 0.1062, 0.0833, 0.0894]],
        [[0.1721, 0.2453, 0.1529,  ..., 0.2365, 0.2875, 0.2500],
         [0.1732, 0.2641, 0.2185,  ..., 0.2771, 0.3550, 0.2500],
         [0.1721, 0.2453, 0.0987,  ..., 0.2365, 0.1191, 0.2500],
         [0.4826, 0.2453, 0.5299,  ..., 0.2498, 0.2384, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2454, 0.2164, 0.2233,  ..., 0.2470, 0.2126, 0.2281],
         [0.2454, 0.2164, 0.2233,  ..., 0.2470, 0.2126, 0.2487],
         [0.2454, 0.2164, 0.2233,  ..., 0.2470, 0.2126, 0.2281],
         [0.2637, 0.3507, 0.3300,  ..., 0.2591, 0.3622, 0.2951]],
        [[0.2914, 0.2442, 0.2805,  ..., 0.2736, 0.2717, 0.2253],
         [0.2534, 0.2977, 0.2437,  ..., 0.2899, 0.2428, 0.3394],
         [0.1944, 0.2211, 0.2379,  ..., 0.2079, 0.2428, 0.2177],
         [0.2609, 0.2369, 0.2379,  ..., 0.2286, 0.2428, 0.2177]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:19,484 [Process: 0] Synchronize training processes
2024-08-16 11:02:19,484 [Process: 0] Evaluating...
2024-08-16 11:02:19,486 [Process: 0] EPOCH 12:
2024-08-16 11:02:19,488 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2263, 0.2357, 0.2473,  ..., 0.3319, 0.1689, 0.1852],
         [0.3210, 0.3772, 0.2473,  ..., 0.4479, 0.4729, 0.4445],
         [0.2263, 0.0714, 0.2473,  ..., 0.1101, 0.1689, 0.1852],
         [0.2263, 0.3157, 0.2581,  ..., 0.1101, 0.1893, 0.1852]],
        [[0.2039, 0.3387, 0.1681,  ..., 0.4816, 0.2210, 0.1623],
         [0.1848, 0.2204, 0.1669,  ..., 0.1422, 0.2210, 0.1623],
         [0.0919, 0.2204, 0.4981,  ..., 0.1216, 0.3370, 0.3891],
         [0.5195, 0.2204, 0.1669,  ..., 0.2546, 0.2210, 0.2863]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2355, 0.2555, 0.1884,  ..., 0.2178, 0.1978, 0.2418],
         [0.2355, 0.2401, 0.2468,  ..., 0.2461, 0.2320, 0.2666],
         [0.2355, 0.2075, 0.2181,  ..., 0.2160, 0.2132, 0.2418],
         [0.2934, 0.2968, 0.3467,  ..., 0.3201, 0.3571, 0.2499]],
        [[0.2690, 0.2418, 0.2572,  ..., 0.2469, 0.2493, 0.2500],
         [0.2437, 0.2849, 0.2402,  ..., 0.2100, 0.2493, 0.2500],
         [0.2437, 0.2199, 0.2402,  ..., 0.2100, 0.2522, 0.2500],
         [0.2437, 0.2534, 0.2625,  ..., 0.3332, 0.2493, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:21,505 [Process: 0] Synchronize training processes
2024-08-16 11:02:21,506 [Process: 0] Evaluating...
2024-08-16 11:02:21,507 [Process: 0] EPOCH 13:
2024-08-16 11:02:21,510 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0731, 0.1498, 0.1829,  ..., 0.2114, 0.2478, 0.2215],
         [0.6256, 0.1498, 0.1829,  ..., 0.2114, 0.2478, 0.2521],
         [0.1748, 0.4213, 0.2892,  ..., 0.2874, 0.2478, 0.2309],
         [0.1266, 0.2790, 0.3451,  ..., 0.2898, 0.2567, 0.2956]],
        [[0.2738, 0.3516, 0.1792,  ..., 0.2301, 0.6035, 0.4102],
         [0.4341, 0.2161, 0.6904,  ..., 0.2025, 0.1392, 0.2635],
         [0.1460, 0.2161, 0.0652,  ..., 0.3649, 0.1287, 0.1632],
         [0.1460, 0.2161, 0.0652,  ..., 0.2025, 0.1287, 0.1632]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2126, 0.2456, 0.2727,  ..., 0.2328, 0.2357, 0.2470],
         [0.2380, 0.2260, 0.2329,  ..., 0.2345, 0.2357, 0.2445],
         [0.2119, 0.2104, 0.2329,  ..., 0.2328, 0.2357, 0.2106],
         [0.3374, 0.3180, 0.2615,  ..., 0.2999, 0.2930, 0.2979]],
        [[0.2221, 0.2440, 0.2283,  ..., 0.2232, 0.2847, 0.2332],
         [0.2765, 0.2518, 0.2909,  ..., 0.2595, 0.2575, 0.2736],
         [0.2221, 0.2440, 0.2283,  ..., 0.2232, 0.2259, 0.2332],
         [0.2793, 0.2602, 0.2526,  ..., 0.2941, 0.2319, 0.2600]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:23,444 [Process: 0] Synchronize training processes
2024-08-16 11:02:23,445 [Process: 0] Evaluating...
2024-08-16 11:02:23,447 [Process: 0] EPOCH 14:
2024-08-16 11:02:23,448 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3248, 0.2161, 0.0950,  ..., 0.3745, 0.4503, 0.2298],
         [0.2251, 0.2161, 0.3471,  ..., 0.2870, 0.2923, 0.4054],
         [0.2251, 0.2161, 0.1036,  ..., 0.1487, 0.0923, 0.1824],
         [0.2251, 0.3517, 0.4543,  ..., 0.1897, 0.1651, 0.1824]],
        [[0.3956, 0.1426, 0.1847,  ..., 0.3107, 0.2340, 0.1384],
         [0.2505, 0.5002, 0.1869,  ..., 0.2364, 0.2143, 0.2525],
         [0.1982, 0.2329, 0.4436,  ..., 0.2979, 0.3074, 0.4707],
         [0.1557, 0.1243, 0.1847,  ..., 0.1550, 0.2443, 0.1384]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2672, 0.2335, 0.2379,  ..., 0.2451, 0.2862, 0.2359],
         [0.2335, 0.2677, 0.2130,  ..., 0.2648, 0.2681, 0.2484],
         [0.2164, 0.2335, 0.2072,  ..., 0.2451, 0.1756, 0.2051],
         [0.2829, 0.2653, 0.3419,  ..., 0.2451, 0.2701, 0.3106]],
        [[0.2359, 0.2317, 0.2444,  ..., 0.2078, 0.2304, 0.2414],
         [0.2359, 0.2996, 0.2669,  ..., 0.2923, 0.2888, 0.2650],
         [0.2359, 0.1998, 0.2444,  ..., 0.1761, 0.2115, 0.2414],
         [0.2923, 0.2689, 0.2444,  ..., 0.3238, 0.2694, 0.2522]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:25,371 [Process: 0] Synchronize training processes
2024-08-16 11:02:25,372 [Process: 0] Evaluating...
2024-08-16 11:02:25,374 [Process: 0] EPOCH 15:
2024-08-16 11:02:25,376 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2565, 0.3065, 0.4154,  ..., 0.2184, 0.3705, 0.1158],
         [0.2438, 0.2312, 0.2208,  ..., 0.3449, 0.3191, 0.6247],
         [0.2438, 0.2312, 0.0657,  ..., 0.2184, 0.1164, 0.1044],
         [0.2558, 0.2312, 0.2981,  ..., 0.2184, 0.1940, 0.1551]],
        [[0.2262, 0.1855, 0.2207,  ..., 0.2402, 0.2564, 0.1575],
         [0.2262, 0.1855, 0.2207,  ..., 0.2004, 0.5007, 0.2301],
         [0.3214, 0.3471, 0.3378,  ..., 0.2004, 0.1322, 0.4797],
         [0.2262, 0.2819, 0.2207,  ..., 0.3589, 0.1108, 0.1327]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2391, 0.2136, 0.2698,  ..., 0.2377, 0.2443, 0.2582],
         [0.2391, 0.2686, 0.2085,  ..., 0.2377, 0.2365, 0.2559],
         [0.2391, 0.2136, 0.2085,  ..., 0.2377, 0.2365, 0.2409],
         [0.2826, 0.3043, 0.3132,  ..., 0.2870, 0.2826, 0.2450]],
        [[0.2308, 0.2015, 0.2317,  ..., 0.2282, 0.2630, 0.2569],
         [0.2555, 0.2107, 0.2347,  ..., 0.3316, 0.2736, 0.2645],
         [0.2308, 0.2015, 0.2317,  ..., 0.2174, 0.2317, 0.1663],
         [0.2829, 0.3863, 0.3019,  ..., 0.2228, 0.2317, 0.3122]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:27,305 [Process: 0] Synchronize training processes
2024-08-16 11:02:27,305 [Process: 0] Evaluating...
2024-08-16 11:02:27,307 [Process: 0] EPOCH 16:
2024-08-16 11:02:27,309 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2640, 0.3871, 0.2318,  ..., 0.2258, 0.1864, 0.2500],
         [0.2740, 0.2143, 0.2318,  ..., 0.3225, 0.4408, 0.2500],
         [0.2489, 0.2184, 0.2683,  ..., 0.2258, 0.1864, 0.2500],
         [0.2131, 0.1802, 0.2681,  ..., 0.2258, 0.1864, 0.2500]],
        [[0.6946, 0.4642, 0.7905,  ..., 0.3723, 0.2436, 0.0907],
         [0.0750, 0.0545, 0.0424,  ..., 0.1925, 0.2693, 0.0907],
         [0.0750, 0.0571, 0.0405,  ..., 0.1166, 0.2436, 0.6342],
         [0.1554, 0.4242, 0.1267,  ..., 0.3186, 0.2436, 0.1844]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2208, 0.2309, 0.2274,  ..., 0.2720, 0.2220, 0.2289],
         [0.2358, 0.2917, 0.2762,  ..., 0.2484, 0.2641, 0.2454],
         [0.2208, 0.2309, 0.2274,  ..., 0.2049, 0.2220, 0.2289],
         [0.3226, 0.2466, 0.2690,  ..., 0.2747, 0.2920, 0.2968]],
        [[0.2340, 0.2340, 0.2353,  ..., 0.2287, 0.2295, 0.2129],
         [0.2109, 0.2758, 0.2353,  ..., 0.2598, 0.2295, 0.1936],
         [0.2109, 0.2340, 0.2353,  ..., 0.2287, 0.2451, 0.1738],
         [0.3442, 0.2563, 0.2942,  ..., 0.2828, 0.2959, 0.4196]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:29,266 [Process: 0] Synchronize training processes
2024-08-16 11:02:29,266 [Process: 0] Evaluating...
2024-08-16 11:02:29,268 [Process: 0] EPOCH 17:
2024-08-16 11:02:29,270 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:02:31,248 [Process: 0] Synchronize training processes
2024-08-16 11:02:31,248 [Process: 0] Evaluating...
2024-08-16 11:02:31,250 [Process: 0] EPOCH 18:
2024-08-16 11:02:31,252 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2134, 0.2244, 0.1990,  ..., 0.9583, 0.2140, 0.1791],
         [0.2134, 0.2244, 0.2775,  ..., 0.0101, 0.3090, 0.2720],
         [0.2744, 0.3268, 0.1966,  ..., 0.0101, 0.2629, 0.3699],
         [0.2989, 0.2244, 0.3269,  ..., 0.0216, 0.2140, 0.1791]],
        [[0.2901, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2868],
         [0.2366, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2285],
         [0.2366, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2562],
         [0.2366, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2285]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2287, 0.2221, 0.2308,  ..., 0.2739, 0.2209, 0.1972],
         [0.2287, 0.2221, 0.2924,  ..., 0.2077, 0.2408, 0.1972],
         [0.2287, 0.2221, 0.1711,  ..., 0.2077, 0.2209, 0.2307],
         [0.3139, 0.3336, 0.3057,  ..., 0.3107, 0.3173, 0.3749]],
        [[0.2414, 0.2406, 0.2500,  ..., 0.2500, 0.2485, 0.2329],
         [0.2754, 0.2406, 0.2500,  ..., 0.2500, 0.2485, 0.2593],
         [0.2192, 0.2406, 0.2500,  ..., 0.2500, 0.2485, 0.2329],
         [0.2640, 0.2781, 0.2500,  ..., 0.2500, 0.2545, 0.2749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:33,167 [Process: 0] Synchronize training processes
2024-08-16 11:02:33,168 [Process: 0] Evaluating...
2024-08-16 11:02:33,170 [Process: 0] EPOCH 19:
2024-08-16 11:02:33,172 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.1546,  ..., 0.0389, 0.2726, 0.2500],
         [0.2500, 0.2500, 0.1898,  ..., 0.0389, 0.2107, 0.2500],
         [0.2500, 0.2500, 0.5010,  ..., 0.2081, 0.2107, 0.2500],
         [0.2500, 0.2500, 0.1546,  ..., 0.7140, 0.3060, 0.2500]],
        [[0.2479, 0.4030, 0.3707,  ..., 0.2283, 0.4382, 0.2500],
         [0.2562, 0.1990, 0.3632,  ..., 0.3151, 0.2452, 0.2500],
         [0.2479, 0.1990, 0.1073,  ..., 0.2283, 0.1583, 0.2500],
         [0.2479, 0.1990, 0.1588,  ..., 0.2283, 0.1583, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1873, 0.2206, 0.2482,  ..., 0.2310, 0.2451, 0.1963],
         [0.1873, 0.2206, 0.2012,  ..., 0.2039, 0.2010, 0.2766],
         [0.1873, 0.2206, 0.2012,  ..., 0.2039, 0.1690, 0.1963],
         [0.4382, 0.3381, 0.3494,  ..., 0.3612, 0.3849, 0.3308]],
        [[0.2129, 0.2749, 0.2500,  ..., 0.2191, 0.2568, 0.2395],
         [0.3349, 0.2743, 0.2500,  ..., 0.2925, 0.2369, 0.2815],
         [0.2129, 0.2163, 0.2500,  ..., 0.2191, 0.2369, 0.2395],
         [0.2392, 0.2345, 0.2500,  ..., 0.2692, 0.2694, 0.2395]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:35,097 [Process: 0] Synchronize training processes
2024-08-16 11:02:35,097 [Process: 0] Evaluating...
2024-08-16 11:02:35,099 [Process: 0] EPOCH 20:
2024-08-16 11:02:35,101 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2242, 0.2185, 0.1301,  ..., 0.1352, 0.1384, 0.3144],
         [0.2242, 0.1953, 0.4704,  ..., 0.1062, 0.1137, 0.2285],
         [0.3062, 0.1953, 0.1301,  ..., 0.1609, 0.1137, 0.2285],
         [0.2455, 0.3909, 0.2695,  ..., 0.5977, 0.6341, 0.2285]],
        [[0.4378, 0.2034, 0.5042,  ..., 0.1079, 0.1678, 0.1806],
         [0.2030, 0.2034, 0.1973,  ..., 0.1079, 0.3918, 0.3246],
         [0.2488, 0.2468, 0.1799,  ..., 0.6739, 0.2535, 0.3898],
         [0.1103, 0.3463, 0.1186,  ..., 0.1103, 0.1870, 0.1049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2042, 0.2351, 0.2057,  ..., 0.2369, 0.2248, 0.2195],
         [0.2948, 0.2503, 0.2692,  ..., 0.2268, 0.2248, 0.2849],
         [0.2042, 0.2351, 0.2057,  ..., 0.2268, 0.2358, 0.2195],
         [0.2967, 0.2795, 0.3194,  ..., 0.3094, 0.3147, 0.2761]],
        [[0.2225, 0.2263, 0.2177,  ..., 0.2454, 0.2808, 0.2500],
         [0.2852, 0.2307, 0.3090,  ..., 0.2638, 0.2729, 0.2500],
         [0.2225, 0.2263, 0.2177,  ..., 0.2454, 0.2231, 0.2500],
         [0.2697, 0.3167, 0.2556,  ..., 0.2454, 0.2231, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:02:37,019 [Process: 0] Synchronize training processes
2024-08-16 11:02:37,019 [Process: 0] Evaluating...
2024-08-16 11:02:37,021 [Process: 0] EPOCH 21:
2024-08-16 11:02:37,023 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1847, 0.3093, 0.2340,  ..., 0.2273, 0.2454, 0.5203],
         [0.1919, 0.2078, 0.2352,  ..., 0.2273, 0.2065, 0.0836],
         [0.2361, 0.1697, 0.1889,  ..., 0.2391, 0.1885, 0.3125],
         [0.3872, 0.3132, 0.3419,  ..., 0.3062, 0.3596, 0.0836]],
        [[0.1792, 0.1823, 0.2406,  ..., 0.2263, 0.3718, 0.5794],
         [0.3071, 0.4002, 0.2406,  ..., 0.3211, 0.1928, 0.1361],
         [0.3346, 0.2353, 0.2781,  ..., 0.2263, 0.2426, 0.1484],
         [0.1792, 0.1823, 0.2406,  ..., 0.2263, 0.1928, 0.1361]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2281, 0.2012, 0.2204,  ..., 0.2334, 0.2156, 0.2494],
         [0.2451, 0.1666, 0.2073,  ..., 0.2265, 0.2325, 0.2083],
         [0.1979, 0.1697, 0.2073,  ..., 0.1993, 0.2156, 0.2083],
         [0.3288, 0.4626, 0.3651,  ..., 0.3409, 0.3363, 0.3340]],
        [[0.2500, 0.2275, 0.2497,  ..., 0.2500, 0.2685, 0.1822],
         [0.2500, 0.3633, 0.2497,  ..., 0.2500, 0.2176, 0.3924],
         [0.2500, 0.1995, 0.2497,  ..., 0.2500, 0.2155, 0.1822],
         [0.2500, 0.2098, 0.2509,  ..., 0.2500, 0.2984, 0.2433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 11:02:39,069 [Process: 0] Synchronize training processes
2024-08-16 11:02:39,069 [Process: 0] Evaluating...
2024-08-16 11:02:39,071 [Process: 0] EPOCH 22:
2024-08-16 11:02:39,074 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2557, 0.1817, 0.3187,  ..., 0.1718, 0.1365, 0.1888],
         [0.2481, 0.1651, 0.1772,  ..., 0.1718, 0.1365, 0.1775],
         [0.2481, 0.4211, 0.2931,  ..., 0.4118, 0.5905, 0.4562],
         [0.2481, 0.2321, 0.2110,  ..., 0.2446, 0.1365, 0.1775]],
        [[0.3137, 0.2474, 0.1937,  ..., 0.2478, 0.2467, 0.2673],
         [0.2288, 0.1376, 0.4189,  ..., 0.2567, 0.2600, 0.2814],
         [0.2288, 0.0779, 0.1937,  ..., 0.2478, 0.2467, 0.2495],
         [0.2288, 0.5371, 0.1937,  ..., 0.2478, 0.2467, 0.2018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2209, 0.2222, 0.2089,  ..., 0.2101, 0.2178, 0.2534],
         [0.2447, 0.2140, 0.2089,  ..., 0.2101, 0.1784, 0.2127],
         [0.2209, 0.2140, 0.2089,  ..., 0.2101, 0.1784, 0.1847],
         [0.3135, 0.3498, 0.3733,  ..., 0.3697, 0.4255, 0.3492]],
        [[0.2487, 0.2500, 0.2500,  ..., 0.2210, 0.2166, 0.2473],
         [0.2539, 0.2500, 0.2500,  ..., 0.2941, 0.3271, 0.2473],
         [0.2487, 0.2500, 0.2500,  ..., 0.2210, 0.2166, 0.2473],
         [0.2487, 0.2500, 0.2500,  ..., 0.2638, 0.2397, 0.2582]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 11:02:41,064 [Process: 0] Synchronize training processes
2024-08-16 11:02:41,065 [Process: 0] Evaluating...
2024-08-16 11:02:41,067 [Process: 0] EPOCH 23:
2024-08-16 11:02:41,069 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2125, 0.1763, 0.1778,  ..., 0.2437, 0.3248, 0.2650],
         [0.2854, 0.4029, 0.3258,  ..., 0.3177, 0.2942, 0.2450],
         [0.2125, 0.1763, 0.1778,  ..., 0.1542, 0.1369, 0.2450],
         [0.2896, 0.2446, 0.3185,  ..., 0.2844, 0.2441, 0.2450]],
        [[0.2500, 0.1908, 0.2500,  ..., 0.2478, 0.2500, 0.2483],
         [0.2500, 0.2203, 0.2500,  ..., 0.2478, 0.2500, 0.2483],
         [0.2500, 0.1908, 0.2500,  ..., 0.2478, 0.2500, 0.2550],
         [0.2500, 0.3982, 0.2500,  ..., 0.2565, 0.2500, 0.2483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2776, 0.2446, 0.2267,  ..., 0.2350, 0.2160, 0.2220],
         [0.1601, 0.2049, 0.1936,  ..., 0.2047, 0.2294, 0.2038],
         [0.1601, 0.2049, 0.1936,  ..., 0.1849, 0.2160, 0.1830],
         [0.4022, 0.3455, 0.3861,  ..., 0.3754, 0.3387, 0.3912]],
        [[0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2457, 0.2447],
         [0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2630, 0.2659],
         [0.2480, 0.2500, 0.2500,  ..., 0.2500, 0.2457, 0.2447],
         [0.2559, 0.2500, 0.2500,  ..., 0.2500, 0.2457, 0.2447]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 11:02:43,073 [Process: 0] Synchronize training processes
2024-08-16 11:02:43,073 [Process: 0] Evaluating...
2024-08-16 11:02:43,075 [Process: 0] EPOCH 24:
2024-08-16 11:02:43,077 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1374, 0.2244, 0.2003,  ..., 0.1999, 0.5830, 0.1180],
         [0.1196, 0.2711, 0.1209,  ..., 0.2646, 0.2165, 0.1180],
         [0.1130, 0.2244, 0.4425,  ..., 0.1071, 0.0837, 0.6460],
         [0.6301, 0.2801, 0.2363,  ..., 0.4284, 0.1168, 0.1180]],
        [[0.1736, 0.2048, 0.2500,  ..., 0.5112, 0.3484, 0.4287],
         [0.1549, 0.3856, 0.2500,  ..., 0.0996, 0.2172, 0.2404],
         [0.3958, 0.2048, 0.2500,  ..., 0.2895, 0.2172, 0.1654],
         [0.2757, 0.2048, 0.2500,  ..., 0.0996, 0.2172, 0.1654]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2140, 0.2719, 0.1953,  ..., 0.2236, 0.1792, 0.2038],
         [0.2308, 0.1388, 0.2789,  ..., 0.2007, 0.2371, 0.2524],
         [0.1706, 0.1388, 0.1953,  ..., 0.1686, 0.1792, 0.1547],
         [0.3846, 0.4505, 0.3305,  ..., 0.4072, 0.4044, 0.3892]],
        [[0.2426, 0.2500, 0.2293,  ..., 0.2500, 0.2475, 0.2361],
         [0.2426, 0.2500, 0.2293,  ..., 0.2500, 0.2475, 0.2361],
         [0.2723, 0.2500, 0.2293,  ..., 0.2500, 0.2475, 0.2361],
         [0.2426, 0.2500, 0.3122,  ..., 0.2500, 0.2576, 0.2917]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 11:02:45,070 [Process: 0] Synchronize training processes
2024-08-16 11:02:45,070 [Process: 0] Evaluating...
2024-08-16 11:02:45,072 [Process: 0] EPOCH 25:
2024-08-16 11:02:45,075 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2444, 0.1593, 0.1809,  ..., 0.2500, 0.2500, 0.2500],
         [0.2444, 0.1593, 0.4484,  ..., 0.2500, 0.2500, 0.2500],
         [0.2668, 0.5222, 0.1899,  ..., 0.2500, 0.2500, 0.2500],
         [0.2444, 0.1593, 0.1809,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.3656, 0.3594, 0.2748,  ..., 0.2544, 0.4650, 0.3018],
         [0.1490, 0.2540, 0.1930,  ..., 0.0584, 0.1885, 0.1430],
         [0.1006, 0.1033, 0.1930,  ..., 0.0584, 0.1732, 0.1430],
         [0.3848, 0.2833, 0.3392,  ..., 0.6288, 0.1732, 0.4123]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2294, 0.2240, 0.2182,  ..., 0.1854, 0.2151, 0.2032],
         [0.2702, 0.2793, 0.3172,  ..., 0.2346, 0.1962, 0.2032],
         [0.2294, 0.1929, 0.2182,  ..., 0.1854, 0.1591, 0.2032],
         [0.2709, 0.3039, 0.2463,  ..., 0.3946, 0.4295, 0.3905]],
        [[0.2500, 0.2379, 0.2388,  ..., 0.2432, 0.2500, 0.2500],
         [0.2500, 0.2384, 0.2837,  ..., 0.2655, 0.2500, 0.2500],
         [0.2500, 0.2379, 0.2388,  ..., 0.2274, 0.2500, 0.2500],
         [0.2500, 0.2858, 0.2388,  ..., 0.2639, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 11:02:47,000 [Process: 0] Synchronize training processes
2024-08-16 11:02:47,000 [Process: 0] Evaluating...
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1388, 0.2407, 0.1679,  ..., 0.2630, 0.4038, 0.5407],
         [0.1388, 0.2778, 0.1679,  ..., 0.2120, 0.1122, 0.0552],
         [0.1388, 0.2407, 0.1679,  ..., 0.1989, 0.1592, 0.0540],
         [0.5835, 0.2407, 0.4964,  ..., 0.3260, 0.3248, 0.3502]],
        [[0.2360, 0.1198, 0.1868,  ..., 0.2716, 0.5570, 0.1303],
         [0.1937, 0.2484, 0.3680,  ..., 0.2019, 0.1386, 0.2951],
         [0.4526, 0.5121, 0.2817,  ..., 0.3245, 0.1659, 0.4444],
         [0.1177, 0.1198, 0.1635,  ..., 0.2019, 0.1386, 0.1303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2113, 0.2329, 0.2074,  ..., 0.1848, 0.2342, 0.1942],
         [0.2170, 0.2329, 0.2338,  ..., 0.2098, 0.2862, 0.2760],
         [0.2113, 0.2329, 0.2074,  ..., 0.1848, 0.2342, 0.1714],
         [0.3604, 0.3013, 0.3515,  ..., 0.4205, 0.2454, 0.3584]],
        [[0.2383, 0.2500, 0.2281,  ..., 0.2377, 0.2756, 0.2398],
         [0.3244, 0.2500, 0.2867,  ..., 0.2377, 0.2575, 0.2807],
         [0.2125, 0.2500, 0.2281,  ..., 0.2377, 0.2189, 0.2398],
         [0.2249, 0.2500, 0.2571,  ..., 0.2870, 0.2480, 0.2398]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1736, 0.1559, 0.2177,  ..., 0.2287, 0.2701, 0.1864],
         [0.6032, 0.3865, 0.4331,  ..., 0.3140, 0.2888, 0.2413],
         [0.1116, 0.2076, 0.1746,  ..., 0.2287, 0.2205, 0.3858],
         [0.1116, 0.2499, 0.1746,  ..., 0.2287, 0.2205, 0.1864]],
        [[0.1131, 0.3644, 0.2769,  ..., 0.2481, 0.2500, 0.0771],
         [0.0847, 0.0967, 0.1908,  ..., 0.0858, 0.2500, 0.0771],
         [0.1954, 0.1128, 0.1908,  ..., 0.1005, 0.2500, 0.6672],
         [0.6069, 0.4261, 0.3415,  ..., 0.5657, 0.2500, 0.1787]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...