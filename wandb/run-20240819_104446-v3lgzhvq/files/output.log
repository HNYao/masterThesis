2024-08-19 10:44:50,403 [Worker 0] Is distributed: False
2024-08-19 10:44:50,404 [Process: 0] Starting training
2024-08-19 10:44:50,404 [Process: 0] EPOCH 1:
2024-08-19 10:44:50,407 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 10:44:51,951 [Process: 0] Synchronize training processes
2024-08-19 10:44:51,952 [Process: 0] Evaluating...
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2028, 0.3592, 0.1945,  ..., 0.1251, 0.4740, 0.1963],
         [0.3724, 0.2667, 0.1582,  ..., 0.1394, 0.1753, 0.4111],
         [0.2220, 0.1966, 0.4491,  ..., 0.5495, 0.1753, 0.1963],
         [0.2028, 0.1774, 0.1982,  ..., 0.1860, 0.1753, 0.1963]],
        [[0.3022, 0.1658, 0.5318,  ..., 0.2739, 0.2172, 0.1463],
         [0.1963, 0.4420, 0.0963,  ..., 0.3728, 0.2172, 0.2151],
         [0.1502, 0.2115, 0.0963,  ..., 0.1767, 0.3485, 0.1463],
         [0.3513, 0.1806, 0.2755,  ..., 0.1767, 0.2172, 0.4923]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2744, 0.2691, 0.2586,  ..., 0.2791, 0.2858, 0.2774],
         [0.2835, 0.2955, 0.2985,  ..., 0.2918, 0.2724, 0.2676],
         [0.2176, 0.1889, 0.2062,  ..., 0.1860, 0.2145, 0.1915],
         [0.2245, 0.2464, 0.2366,  ..., 0.2432, 0.2273, 0.2635]],
        [[0.2500, 0.2792, 0.2293,  ..., 0.1870, 0.0609, 0.2814],
         [0.2846, 0.2476, 0.2668,  ..., 0.2710, 0.0609, 0.2664],
         [0.1950, 0.1910, 0.2293,  ..., 0.1870, 0.8174, 0.1907],
         [0.2704, 0.2822, 0.2747,  ..., 0.3550, 0.0609, 0.2614]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
Error executing job with overrides: []
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 356, in train
    self.model.inference_heatmap_4cls()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/GeoL.py", line 141, in inference_heatmap_4cls
    point_cloud.colors = o3d.utility.Vector3dVector(colors[0].detach().numpy())
RuntimeError: Unable to cast Python instance of type <class 'numpy.float32'> to C++ type '?' (#define PYBIND11_DETAILED_ERROR_MESSAGES or compile in debug mode for details)
Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.