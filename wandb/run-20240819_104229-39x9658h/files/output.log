[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-19 10:42:34,849 [Worker 0] Is distributed: False
2024-08-19 10:42:34,849 [Process: 0] Starting training
2024-08-19 10:42:34,849 [Process: 0] EPOCH 1:
2024-08-19 10:42:34,852 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2028, 0.3592, 0.1945,  ..., 0.1251, 0.4740, 0.1963],
         [0.3724, 0.2667, 0.1582,  ..., 0.1394, 0.1753, 0.4111],
         [0.2220, 0.1966, 0.4491,  ..., 0.5495, 0.1753, 0.1963],
         [0.2028, 0.1774, 0.1982,  ..., 0.1860, 0.1753, 0.1963]],
        [[0.3022, 0.1658, 0.5318,  ..., 0.2739, 0.2172, 0.1463],
         [0.1963, 0.4420, 0.0963,  ..., 0.3728, 0.2172, 0.2151],
         [0.1502, 0.2115, 0.0963,  ..., 0.1767, 0.3485, 0.1463],
         [0.3513, 0.1806, 0.2755,  ..., 0.1767, 0.2172, 0.4923]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 10:42:46,224 [Process: 0] Synchronize training processes
2024-08-19 10:42:46,224 [Process: 0] Evaluating...
Error executing job with overrides: []
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2851, 0.2629, 0.2598,  ..., 0.2706, 0.2911, 0.2564],
         [0.2843, 0.2716, 0.2926,  ..., 0.2794, 0.2921, 0.2584],
         [0.2058, 0.2063, 0.2064,  ..., 0.1970, 0.2084, 0.1426],
         [0.2248, 0.2591, 0.2411,  ..., 0.2530, 0.2084, 0.3427]],
        [[0.2793, 0.2105, 0.2655,  ..., 0.2114, 0.0490, 0.2861],
         [0.2637, 0.2105, 0.2564,  ..., 0.2530, 0.0490, 0.2581],
         [0.1930, 0.3421, 0.2371,  ..., 0.2114, 0.8531, 0.2279],
         [0.2640, 0.2369, 0.2411,  ..., 0.3243, 0.0490, 0.2279]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 356, in train
    self.model.inference_heatmap_4cls()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/GeoL.py", line 134, in inference_heatmap_4cls
    camp = plt.get_camp('jet')
AttributeError: module 'matplotlib.pyplot' has no attribute 'get_camp'
Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.