2024-08-16 13:55:42,103 [Worker 0] Is distributed: False
2024-08-16 13:55:42,103 [Process: 0] Starting training
2024-08-16 13:55:42,103 [Process: 0] EPOCH 1:
2024-08-16 13:55:42,106 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2288, 0.2102, 0.2691,  ..., 0.3613, 0.3844, 0.3568],
         [0.2360, 0.3695, 0.2254,  ..., 0.2129, 0.2029, 0.2303],
         [0.3065, 0.2102, 0.2067,  ..., 0.2129, 0.2029, 0.2065],
         [0.2288, 0.2102, 0.2988,  ..., 0.2129, 0.2099, 0.2065]],
        [[0.2659, 0.2759, 0.2439,  ..., 0.2364, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2683,  ..., 0.2658, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2439,  ..., 0.2615, 0.3221, 0.2638],
         [0.2447, 0.2414, 0.2439,  ..., 0.2364, 0.2260, 0.2454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:55:44,696 [Process: 0] Synchronize training processes
2024-08-16 13:55:44,696 [Process: 0] Evaluating...
2024-08-16 13:55:44,698 [Process: 0] EPOCH 2:
2024-08-16 13:55:44,700 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2224, 0.2316, 0.3375,  ..., 0.2085, 0.2507, 0.3767],
         [0.2224, 0.2316, 0.1953,  ..., 0.2085, 0.2534, 0.2078],
         [0.2991, 0.2316, 0.2446,  ..., 0.3326, 0.2170, 0.2078],
         [0.2560, 0.3051, 0.2226,  ..., 0.2504, 0.2789, 0.2078]],
        [[0.1332, 0.1788, 0.1060,  ..., 0.4113, 0.4992, 0.1591],
         [0.2254, 0.1788, 0.2719,  ..., 0.1973, 0.1185, 0.4786],
         [0.3246, 0.4635, 0.4732,  ..., 0.1534, 0.1185, 0.1591],
         [0.3168, 0.1788, 0.1489,  ..., 0.2379, 0.2639, 0.2031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2854, 0.2095, 0.2090,  ..., 0.2195, 0.2111, 0.2633],
         [0.2684, 0.1806, 0.3984,  ..., 0.2231, 0.2458, 0.2377],
         [0.1639, 0.2670, 0.1629,  ..., 0.2062, 0.2476, 0.2199],
         [0.2823, 0.3428, 0.2297,  ..., 0.3512, 0.2955, 0.2791]],
        [[0.2401, 0.2400, 0.3223,  ..., 0.2825, 0.2500, 0.2576],
         [0.2401, 0.2400, 0.2091,  ..., 0.2119, 0.2500, 0.2330],
         [0.2401, 0.2400, 0.2091,  ..., 0.2119, 0.2500, 0.2764],
         [0.2797, 0.2801, 0.2595,  ..., 0.2936, 0.2500, 0.2330]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:55:46,625 [Process: 0] Synchronize training processes
2024-08-16 13:55:46,625 [Process: 0] Evaluating...
2024-08-16 13:55:46,627 [Process: 0] EPOCH 3:
2024-08-16 13:55:46,629 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.1192, 0.1750,  ..., 0.2070, 0.0750, 0.2089],
         [0.2500, 0.1521, 0.1750,  ..., 0.2070, 0.0750, 0.2089],
         [0.2500, 0.6095, 0.4750,  ..., 0.3791, 0.3961, 0.3734],
         [0.2500, 0.1192, 0.1750,  ..., 0.2070, 0.4539, 0.2089]],
        [[0.2446, 0.3802, 0.0501,  ..., 0.3202, 0.3874, 0.2715],
         [0.1675, 0.0972, 0.0452,  ..., 0.2534, 0.4098, 0.2428],
         [0.1466, 0.0633, 0.0282,  ..., 0.1495, 0.0764, 0.2428],
         [0.4412, 0.4593, 0.8765,  ..., 0.2768, 0.1264, 0.2428]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2228, 0.2958, 0.1982,  ..., 0.2320, 0.2440, 0.2284],
         [0.3315, 0.2954, 0.3032,  ..., 0.2320, 0.2681, 0.3149],
         [0.2228, 0.1929, 0.2216,  ..., 0.2696, 0.2440, 0.2284],
         [0.2228, 0.2158, 0.2771,  ..., 0.2663, 0.2440, 0.2284]],
        [[0.3135, 0.2609, 0.2718,  ..., 0.3551, 0.3185, 0.2307],
         [0.1675, 0.2324, 0.2520,  ..., 0.2489, 0.2090, 0.2301],
         [0.1675, 0.2128, 0.1988,  ..., 0.2110, 0.2090, 0.2301],
         [0.3515, 0.2939, 0.2773,  ..., 0.1850, 0.2635, 0.3090]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 13:55:48,539 [Process: 0] Synchronize training processes
2024-08-16 13:55:48,539 [Process: 0] Evaluating...
Error executing job with overrides: []
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 355, in train
    self.model.inference()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/GeoL.py", line 94, in inference
    colors = color_map[predicted_color]
RuntimeError: indices should be either on cpu or on the same device as the indexed tensor (cpu)
Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2953, 0.2308, 0.2131,  ..., 0.2437, 0.1980, 0.2210],
         [0.2412, 0.2587, 0.3563,  ..., 0.2690, 0.2690, 0.3240],
         [0.2313, 0.2797, 0.2174,  ..., 0.2437, 0.3351, 0.1883],
         [0.2322, 0.2308, 0.2131,  ..., 0.2437, 0.1980, 0.2667]],
        [[0.2040, 0.1809, 0.1768,  ..., 0.1401, 0.1072, 0.1168],
         [0.3845, 0.1809, 0.3505,  ..., 0.1026, 0.1429, 0.1168],
         [0.2040, 0.4572, 0.2960,  ..., 0.0532, 0.0591, 0.6497],
         [0.2075, 0.1809, 0.1768,  ..., 0.7042, 0.6908, 0.1168]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...