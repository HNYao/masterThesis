2024-08-16 11:03:58,496 [Worker 0] Is distributed: False
2024-08-16 11:03:58,497 [Process: 0] Starting training
2024-08-16 11:03:58,497 [Process: 0] EPOCH 1:
2024-08-16 11:03:58,499 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2288, 0.2102, 0.2691,  ..., 0.3613, 0.3844, 0.3568],
         [0.2360, 0.3695, 0.2254,  ..., 0.2129, 0.2029, 0.2303],
         [0.3065, 0.2102, 0.2067,  ..., 0.2129, 0.2029, 0.2065],
         [0.2288, 0.2102, 0.2988,  ..., 0.2129, 0.2099, 0.2065]],
        [[0.2659, 0.2759, 0.2439,  ..., 0.2364, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2683,  ..., 0.2658, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2439,  ..., 0.2615, 0.3221, 0.2638],
         [0.2447, 0.2414, 0.2439,  ..., 0.2364, 0.2260, 0.2454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:01,105 [Process: 0] Synchronize training processes
2024-08-16 11:04:01,105 [Process: 0] Evaluating...
2024-08-16 11:04:01,107 [Process: 0] EPOCH 2:
2024-08-16 11:04:01,109 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2980, 0.2326, 0.3403,  ..., 0.2305, 0.4316, 0.2398],
         [0.2340, 0.2326, 0.1637,  ..., 0.2305, 0.1557, 0.2398],
         [0.2340, 0.3023, 0.1743,  ..., 0.3086, 0.1557, 0.2398],
         [0.2340, 0.2326, 0.3217,  ..., 0.2305, 0.2570, 0.2805]],
        [[0.1668, 0.1322, 0.1555,  ..., 0.1381, 0.1928, 0.0374],
         [0.4683, 0.2773, 0.2751,  ..., 0.4617, 0.2556, 0.1386],
         [0.1981, 0.4583, 0.4156,  ..., 0.2249, 0.3796, 0.3263],
         [0.1668, 0.1322, 0.1539,  ..., 0.1753, 0.1720, 0.4976]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3416, 0.3192, 0.3079,  ..., 0.3186, 0.2401, 0.3369],
         [0.2417, 0.1841, 0.2859,  ..., 0.1846, 0.2401, 0.1851],
         [0.1810, 0.1885, 0.1998,  ..., 0.1846, 0.2796, 0.2193],
         [0.2356, 0.3082, 0.2065,  ..., 0.3123, 0.2401, 0.2588]],
        [[0.2272, 0.2282, 0.2473,  ..., 0.2223, 0.2467, 0.3037],
         [0.3183, 0.3153, 0.2273,  ..., 0.2240, 0.2599, 0.2506],
         [0.2272, 0.2282, 0.2216,  ..., 0.2151, 0.2467, 0.2228],
         [0.2272, 0.2282, 0.3038,  ..., 0.3386, 0.2467, 0.2228]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:03,030 [Process: 0] Synchronize training processes
2024-08-16 11:04:03,030 [Process: 0] Evaluating...
2024-08-16 11:04:03,032 [Process: 0] EPOCH 3:
2024-08-16 11:04:03,034 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.1230, 0.1960,  ..., 0.2306, 0.0655, 0.2142],
         [0.2500, 0.1230, 0.1960,  ..., 0.2306, 0.0655, 0.2142],
         [0.2500, 0.4792, 0.2395,  ..., 0.2306, 0.4431, 0.3574],
         [0.2500, 0.2748, 0.3685,  ..., 0.3083, 0.4260, 0.2142]],
        [[0.3686, 0.7023, 0.1817,  ..., 0.2151, 0.4037, 0.1840],
         [0.2829, 0.1505, 0.1817,  ..., 0.4738, 0.3212, 0.3802],
         [0.1743, 0.0636, 0.1817,  ..., 0.1543, 0.1229, 0.2564],
         [0.1743, 0.0836, 0.4548,  ..., 0.1568, 0.1522, 0.1794]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2533, 0.2737, 0.2155,  ..., 0.2274, 0.2191, 0.2233],
         [0.2724, 0.2903, 0.3535,  ..., 0.2304, 0.3329, 0.3301],
         [0.2372, 0.2180, 0.2155,  ..., 0.2381, 0.2289, 0.2233],
         [0.2372, 0.2180, 0.2155,  ..., 0.3041, 0.2191, 0.2233]],
        [[0.3196, 0.2447, 0.2693,  ..., 0.3680, 0.2699, 0.2229],
         [0.1853, 0.2336, 0.2666,  ..., 0.2554, 0.2161, 0.2169],
         [0.1853, 0.2336, 0.2062,  ..., 0.1883, 0.2161, 0.2169],
         [0.3098, 0.2882, 0.2578,  ..., 0.1883, 0.2980, 0.3434]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:04,927 [Process: 0] Synchronize training processes
2024-08-16 11:04:04,927 [Process: 0] Evaluating...
2024-08-16 11:04:04,929 [Process: 0] EPOCH 4:
2024-08-16 11:04:04,931 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4828, 0.1632, 0.0980,  ..., 0.3158, 0.1683, 0.3614],
         [0.0834, 0.1239, 0.7059,  ..., 0.1903, 0.2832, 0.2162],
         [0.0640, 0.5890, 0.0980,  ..., 0.1851, 0.4179, 0.2087],
         [0.3699, 0.1239, 0.0980,  ..., 0.3088, 0.1306, 0.2138]],
        [[0.2435, 0.1205, 0.2500,  ..., 0.1243, 0.1654, 0.1621],
         [0.2435, 0.1205, 0.2500,  ..., 0.1243, 0.5037, 0.1621],
         [0.2435, 0.4069, 0.2500,  ..., 0.6099, 0.1654, 0.5136],
         [0.2695, 0.3522, 0.2500,  ..., 0.1416, 0.1654, 0.1621]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2313, 0.2218, 0.2493,  ..., 0.2452, 0.2335, 0.2768],
         [0.3060, 0.2457, 0.2493,  ..., 0.3320, 0.2996, 0.2829],
         [0.2313, 0.1431, 0.2493,  ..., 0.2053, 0.2335, 0.2004],
         [0.2313, 0.3895, 0.2520,  ..., 0.2175, 0.2335, 0.2399]],
        [[0.2013, 0.2088, 0.3116,  ..., 0.2359, 0.2309, 0.2853],
         [0.2957, 0.3140, 0.2527,  ..., 0.2924, 0.2407, 0.2359],
         [0.2001, 0.2021, 0.2126,  ..., 0.2359, 0.2099, 0.2275],
         [0.3029, 0.2751, 0.2230,  ..., 0.2359, 0.3185, 0.2513]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:06,829 [Process: 0] Synchronize training processes
2024-08-16 11:04:06,829 [Process: 0] Evaluating...
2024-08-16 11:04:06,831 [Process: 0] EPOCH 5:
2024-08-16 11:04:06,833 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1168, 0.1275, 0.7782,  ..., 0.2500, 0.2019, 0.3903],
         [0.1168, 0.1275, 0.0569,  ..., 0.2500, 0.2019, 0.2032],
         [0.6497, 0.6176, 0.0569,  ..., 0.2500, 0.3942, 0.2032],
         [0.1168, 0.1275, 0.1081,  ..., 0.2500, 0.2019, 0.2032]],
        [[0.5479, 0.2086, 0.1827,  ..., 0.2084, 0.2289, 0.1053],
         [0.1335, 0.3218, 0.4519,  ..., 0.3582, 0.2289, 0.1053],
         [0.0772, 0.2086, 0.1827,  ..., 0.2084, 0.2289, 0.1053],
         [0.2413, 0.2610, 0.1827,  ..., 0.2250, 0.3133, 0.6842]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2060, 0.2391, 0.2763,  ..., 0.2834, 0.2717, 0.2540],
         [0.2285, 0.3153, 0.2598,  ..., 0.2756, 0.2821, 0.2409],
         [0.2446, 0.1820, 0.2319,  ..., 0.2205, 0.2351, 0.1759],
         [0.3209, 0.2636, 0.2319,  ..., 0.2205, 0.2110, 0.3292]],
        [[0.2373, 0.2500, 0.2500,  ..., 0.2965, 0.2500, 0.2448],
         [0.2373, 0.2500, 0.2500,  ..., 0.2298, 0.2500, 0.2448],
         [0.2373, 0.2500, 0.2500,  ..., 0.2473, 0.2500, 0.2448],
         [0.2880, 0.2500, 0.2500,  ..., 0.2263, 0.2500, 0.2657]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:08,744 [Process: 0] Synchronize training processes
2024-08-16 11:04:08,745 [Process: 0] Evaluating...
2024-08-16 11:04:08,747 [Process: 0] EPOCH 6:
2024-08-16 11:04:08,749 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2295,  ..., 0.1624, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2294,  ..., 0.1624, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2294,  ..., 0.2997, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.3118,  ..., 0.3756, 0.2500, 0.2500]],
        [[0.3942, 0.2429, 0.2597,  ..., 0.4101, 0.1540, 0.2216],
         [0.2486, 0.2429, 0.1593,  ..., 0.0757, 0.3747, 0.4551],
         [0.1113, 0.2713, 0.3927,  ..., 0.2729, 0.2132, 0.0838],
         [0.2459, 0.2429, 0.1882,  ..., 0.2414, 0.2581, 0.2395]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2414, 0.2386, 0.2182,  ..., 0.2150, 0.2266, 0.2911],
         [0.2757, 0.2671, 0.2231,  ..., 0.2354, 0.2586, 0.2396],
         [0.2414, 0.2386, 0.2197,  ..., 0.2338, 0.2266, 0.2288],
         [0.2414, 0.2557, 0.3390,  ..., 0.3158, 0.2881, 0.2405]],
        [[0.3100, 0.2629, 0.3996,  ..., 0.3122, 0.2500, 0.2689],
         [0.2515, 0.2405, 0.2076,  ..., 0.2505, 0.2500, 0.2437],
         [0.2130, 0.2405, 0.1881,  ..., 0.1905, 0.2500, 0.2437],
         [0.2255, 0.2561, 0.2047,  ..., 0.2468, 0.2500, 0.2437]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:10,644 [Process: 0] Synchronize training processes
2024-08-16 11:04:10,645 [Process: 0] Evaluating...
2024-08-16 11:04:10,646 [Process: 0] EPOCH 7:
2024-08-16 11:04:10,648 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2337, 0.1388, 0.2500,  ..., 0.1526, 0.2369, 0.0738],
         [0.2988, 0.1388, 0.2500,  ..., 0.3122, 0.2893, 0.1579],
         [0.2337, 0.1388, 0.2500,  ..., 0.1526, 0.2369, 0.3172],
         [0.2337, 0.5837, 0.2500,  ..., 0.3826, 0.2369, 0.4511]],
        [[0.3480, 0.2948, 0.0821,  ..., 0.2137, 0.4196, 0.2845],
         [0.1051, 0.1027, 0.1583,  ..., 0.2137, 0.1486, 0.1747],
         [0.4455, 0.4997, 0.6482,  ..., 0.3589, 0.3427, 0.3590],
         [0.1014, 0.1027, 0.1114,  ..., 0.2137, 0.0891, 0.1817]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2073, 0.2192, 0.2085,  ..., 0.2260, 0.2192, 0.2413],
         [0.2414, 0.3191, 0.3465,  ..., 0.3221, 0.2192, 0.2413],
         [0.2086, 0.2218, 0.2085,  ..., 0.2260, 0.2386, 0.2762],
         [0.3427, 0.2399, 0.2366,  ..., 0.2260, 0.3230, 0.2413]],
        [[0.3569, 0.2281, 0.3210,  ..., 0.2490, 0.2916, 0.2626],
         [0.1992, 0.2281, 0.2003,  ..., 0.2382, 0.2151, 0.2915],
         [0.1976, 0.2281, 0.2003,  ..., 0.2382, 0.2061, 0.2211],
         [0.2463, 0.3157, 0.2785,  ..., 0.2747, 0.2873, 0.2248]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:12,542 [Process: 0] Synchronize training processes
2024-08-16 11:04:12,543 [Process: 0] Evaluating...
2024-08-16 11:04:12,545 [Process: 0] EPOCH 8:
2024-08-16 11:04:12,547 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1060, 0.2500, 0.1475,  ..., 0.4510, 0.1942, 0.0409],
         [0.6652, 0.2500, 0.3055,  ..., 0.1153, 0.3621, 0.0587],
         [0.1227, 0.2500, 0.1474,  ..., 0.2510, 0.2495, 0.8594],
         [0.1060, 0.2500, 0.3996,  ..., 0.1827, 0.1942, 0.0409]],
        [[0.1963, 0.3130, 0.2864,  ..., 0.2278, 0.2338, 0.2354],
         [0.4870, 0.2445, 0.2413,  ..., 0.3627, 0.1974, 0.2939],
         [0.1584, 0.2213, 0.2362,  ..., 0.1591, 0.1543, 0.2354],
         [0.1584, 0.2213, 0.2362,  ..., 0.2504, 0.4145, 0.2354]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2355, 0.2468, 0.2298,  ..., 0.2623, 0.2667, 0.2540],
         [0.2355, 0.2472, 0.2298,  ..., 0.2124, 0.2777, 0.2093],
         [0.2391, 0.2468, 0.2298,  ..., 0.2124, 0.2258, 0.2601],
         [0.2899, 0.2591, 0.3107,  ..., 0.3129, 0.2297, 0.2767]],
        [[0.2487, 0.2276, 0.2193,  ..., 0.2752, 0.3044, 0.2500],
         [0.2957, 0.3072, 0.2212,  ..., 0.2169, 0.2242, 0.2500],
         [0.2278, 0.2153, 0.2193,  ..., 0.2084, 0.2012, 0.2500],
         [0.2278, 0.2499, 0.3403,  ..., 0.2996, 0.2702, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 11:04:14,445 [Process: 0] Synchronize training processes
2024-08-16 11:04:14,446 [Process: 0] Evaluating...
2024-08-16 11:04:14,448 [Process: 0] EPOCH 9:
2024-08-16 11:04:14,450 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1991, 0.3068, 0.2235,  ..., 0.2161, 0.2481, 0.2022],
         [0.3575, 0.2666, 0.2235,  ..., 0.3440, 0.2481, 0.3934],
         [0.1991, 0.1799, 0.2255,  ..., 0.2161, 0.2558, 0.2022],
         [0.2444, 0.2467, 0.3275,  ..., 0.2237, 0.2481, 0.2022]],
        [[0.2500, 0.3960, 0.5070,  ..., 0.2818, 0.2360, 0.3842],
         [0.2500, 0.2171, 0.1309,  ..., 0.1649, 0.2360, 0.1204],
         [0.2500, 0.1934, 0.1560,  ..., 0.2460, 0.2921, 0.1204],
         [0.2500, 0.1934, 0.2060,  ..., 0.3074, 0.2360, 0.3751]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2579, 0.1961, 0.2272,  ..., 0.2701, 0.3177, 0.2235],
         [0.2025, 0.2467, 0.2272,  ..., 0.2272, 0.1896, 0.2866],
         [0.2025, 0.1967, 0.2272,  ..., 0.2272, 0.1902, 0.2263],
         [0.3370, 0.3605, 0.3184,  ..., 0.2755, 0.3025, 0.2635]],
        [[0.2318, 0.2461, 0.2198,  ..., 0.2203, 0.2603, 0.2818],
         [0.2316, 0.2461, 0.2222,  ..., 0.2203, 0.3016, 0.2342],
         [0.1976, 0.2461, 0.2114,  ..., 0.2203, 0.2190, 0.2203],
         [0.3390, 0.2616, 0.3465,  ..., 0.3391, 0.2190, 0.2637]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2286, 0.2313,  ..., 0.3278, 0.2295, 0.2500],
         [0.2500, 0.2286, 0.2313,  ..., 0.2193, 0.2295, 0.2500],
         [0.2500, 0.3142, 0.2313,  ..., 0.2337, 0.2295, 0.2500],
         [0.2500, 0.2286, 0.3062,  ..., 0.2193, 0.3114, 0.2500]],
        [[0.3672, 0.4278, 0.4162,  ..., 0.3361, 0.4032, 0.4654],
         [0.1647, 0.1850, 0.2206,  ..., 0.2778, 0.1819, 0.1038],
         [0.1927, 0.2021, 0.0782,  ..., 0.1611, 0.2603, 0.1084],
         [0.2753, 0.1850, 0.2850,  ..., 0.2251, 0.1546, 0.3223]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:16,370 [Process: 0] Synchronize training processes
2024-08-16 11:04:16,371 [Process: 0] Evaluating...
2024-08-16 11:04:16,373 [Process: 0] EPOCH 10:
2024-08-16 11:04:16,374 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2959, 0.2200, 0.3035,  ..., 0.2303, 0.2276, 0.2256],
         [0.1676, 0.2217, 0.1732,  ..., 0.2303, 0.2276, 0.2660],
         [0.1605, 0.1977, 0.1732,  ..., 0.2303, 0.2389, 0.2256],
         [0.3760, 0.3606, 0.3501,  ..., 0.3090, 0.3060, 0.2829]],
        [[0.2250, 0.2405, 0.2228,  ..., 0.2285, 0.2388, 0.2025],
         [0.2250, 0.2457, 0.2206,  ..., 0.2285, 0.2225, 0.2380],
         [0.2250, 0.2405, 0.2206,  ..., 0.2285, 0.2225, 0.2025],
         [0.3251, 0.2732, 0.3361,  ..., 0.3146, 0.3162, 0.3570]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1511, 0.1427, 0.1618,  ..., 0.0992, 0.2450, 0.2110],
         [0.4558, 0.5732, 0.2754,  ..., 0.1783, 0.3741, 0.5159],
         [0.2421, 0.1057, 0.3610,  ..., 0.3383, 0.2786, 0.1323],
         [0.1511, 0.1785, 0.2018,  ..., 0.3842, 0.1024, 0.1407]],
        [[0.2339, 0.1347, 0.4547,  ..., 0.2511, 0.1950, 0.2783],
         [0.2339, 0.1347, 0.1818,  ..., 0.2496, 0.1950, 0.2406],
         [0.2339, 0.5958, 0.1818,  ..., 0.2496, 0.4151, 0.2406],
         [0.2984, 0.1347, 0.1818,  ..., 0.2496, 0.1950, 0.2406]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:18,286 [Process: 0] Synchronize training processes
2024-08-16 11:04:18,286 [Process: 0] Evaluating...
2024-08-16 11:04:18,288 [Process: 0] EPOCH 11:
2024-08-16 11:04:18,290 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:04:20,191 [Process: 0] Synchronize training processes
2024-08-16 11:04:20,192 [Process: 0] Evaluating...
2024-08-16 11:04:20,194 [Process: 0] EPOCH 12:
2024-08-16 11:04:20,195 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2964, 0.2192, 0.2144,  ..., 0.2497, 0.1905, 0.2394],
         [0.2118, 0.2192, 0.2144,  ..., 0.2509, 0.2303, 0.2186],
         [0.1906, 0.2349, 0.2177,  ..., 0.2497, 0.2116, 0.2186],
         [0.3012, 0.3267, 0.3536,  ..., 0.2497, 0.3675, 0.3234]],
        [[0.2646, 0.2366, 0.2649,  ..., 0.1910, 0.2539, 0.2665],
         [0.3022, 0.2902, 0.2450,  ..., 0.3282, 0.3209, 0.2933],
         [0.1919, 0.2366, 0.2450,  ..., 0.1857, 0.2081, 0.2201],
         [0.2413, 0.2366, 0.2450,  ..., 0.2951, 0.2170, 0.2201]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2453, 0.2527, 0.2435,  ..., 0.0706, 0.1866, 0.3023],
         [0.3552, 0.3131, 0.3462,  ..., 0.0706, 0.2392, 0.2193],
         [0.1998, 0.1852, 0.1855,  ..., 0.7881, 0.3772, 0.1293],
         [0.1998, 0.2491, 0.2248,  ..., 0.0706, 0.1971, 0.3491]],
        [[0.2544, 0.2453, 0.2500,  ..., 0.2124, 0.2500, 0.2204],
         [0.2963, 0.2453, 0.2500,  ..., 0.2565, 0.2500, 0.2204],
         [0.1687, 0.2453, 0.2500,  ..., 0.1969, 0.2500, 0.2382],
         [0.2806, 0.2640, 0.2500,  ..., 0.3342, 0.2500, 0.3210]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:04:22,100 [Process: 0] Synchronize training processes
2024-08-16 11:04:22,100 [Process: 0] Evaluating...
2024-08-16 11:04:22,102 [Process: 0] EPOCH 13:
2024-08-16 11:04:22,104 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2355, 0.2492, 0.2384,  ..., 0.2637, 0.2206, 0.2499],
         [0.2290, 0.2734, 0.2384,  ..., 0.2391, 0.2206, 0.2499],
         [0.2290, 0.2089, 0.2395,  ..., 0.2391, 0.2206, 0.2503],
         [0.3066, 0.2685, 0.2836,  ..., 0.2582, 0.3383, 0.2499]],
        [[0.2435, 0.2193, 0.2256,  ..., 0.1944, 0.2583, 0.2375],
         [0.2549, 0.2797, 0.2256,  ..., 0.2330, 0.2420, 0.2375],
         [0.2407, 0.2193, 0.2256,  ..., 0.1879, 0.2293, 0.2375],
         [0.2608, 0.2817, 0.3233,  ..., 0.3848, 0.2704, 0.2874]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4926, 0.1919, 0.2106,  ..., 0.1423, 0.5143, 0.3316],
         [0.1651, 0.1919, 0.2106,  ..., 0.1423, 0.1619, 0.2228],
         [0.1965, 0.4242, 0.3681,  ..., 0.5730, 0.1619, 0.2228],
         [0.1458, 0.1919, 0.2106,  ..., 0.1423, 0.1619, 0.2228]],
        [[0.2746, 0.1872, 0.1315,  ..., 0.1549, 0.2026, 0.2353],
         [0.2858, 0.1872, 0.6260,  ..., 0.5353, 0.4294, 0.2941],
         [0.2476, 0.1872, 0.1054,  ..., 0.1549, 0.1840, 0.2353],
         [0.1920, 0.4384, 0.1371,  ..., 0.1549, 0.1840, 0.2353]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:04:24,011 [Process: 0] Synchronize training processes
2024-08-16 11:04:24,011 [Process: 0] Evaluating...
2024-08-16 11:04:24,013 [Process: 0] EPOCH 14:
2024-08-16 11:04:24,015 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2331, 0.2712, 0.2602,  ..., 0.2349, 0.2383, 0.2348],
         [0.2779, 0.2687, 0.2264,  ..., 0.2349, 0.2278, 0.2957],
         [0.2331, 0.2301, 0.2264,  ..., 0.2349, 0.2278, 0.2348],
         [0.2559, 0.2301, 0.2870,  ..., 0.2954, 0.3061, 0.2348]],
        [[0.1955, 0.2197, 0.2146,  ..., 0.2207, 0.2201, 0.2317],
         [0.2952, 0.2664, 0.2798,  ..., 0.2256, 0.2705, 0.2400],
         [0.1955, 0.2197, 0.2146,  ..., 0.2207, 0.2201, 0.2317],
         [0.3138, 0.2942, 0.2911,  ..., 0.3331, 0.2894, 0.2967]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1342, 0.2035, 0.3610,  ..., 0.2307, 0.1718, 0.1365],
         [0.5974, 0.3894, 0.2016,  ..., 0.3079, 0.4846, 0.3899],
         [0.1342, 0.2035, 0.2155,  ..., 0.2307, 0.1718, 0.3372],
         [0.1342, 0.2035, 0.2219,  ..., 0.2307, 0.1718, 0.1365]],
        [[0.1472, 0.2863, 0.1970,  ..., 0.2761, 0.1928, 0.2158],
         [0.3526, 0.1768, 0.2895,  ..., 0.1757, 0.1625, 0.3526],
         [0.2711, 0.2051, 0.3165,  ..., 0.3726, 0.2837, 0.2158],
         [0.2291, 0.3319, 0.1970,  ..., 0.1757, 0.3610, 0.2158]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:04:25,911 [Process: 0] Synchronize training processes
2024-08-16 11:04:25,911 [Process: 0] Evaluating...
2024-08-16 11:04:25,913 [Process: 0] EPOCH 15:
2024-08-16 11:04:25,915 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3281, 0.2660, 0.2995,  ..., 0.2427, 0.2995, 0.2181],
         [0.2022, 0.2357, 0.1611,  ..., 0.2658, 0.2357, 0.2467],
         [0.2022, 0.2046, 0.1484,  ..., 0.1982, 0.1709, 0.2235],
         [0.2674, 0.2936, 0.3910,  ..., 0.2934, 0.2939, 0.3117]],
        [[0.2372, 0.2500, 0.2393,  ..., 0.2416, 0.2500, 0.2331],
         [0.2838, 0.2500, 0.2393,  ..., 0.2438, 0.2500, 0.2691],
         [0.2372, 0.2500, 0.2393,  ..., 0.2416, 0.2500, 0.2345],
         [0.2418, 0.2500, 0.2822,  ..., 0.2731, 0.2500, 0.2634]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2368, 0.2226,  ..., 0.2415, 0.4335, 0.3896],
         [0.2500, 0.2368, 0.3321,  ..., 0.2755, 0.1561, 0.1892],
         [0.2500, 0.2897, 0.2226,  ..., 0.2415, 0.0813, 0.2320],
         [0.2500, 0.2368, 0.2226,  ..., 0.2415, 0.3291, 0.1892]],
        [[0.3090, 0.2969, 0.2752,  ..., 0.1565, 0.2299, 0.2079],
         [0.1631, 0.1250, 0.3338,  ..., 0.1565, 0.3823, 0.1931],
         [0.2576, 0.1307, 0.2372,  ..., 0.3815, 0.1584, 0.4100],
         [0.2704, 0.4473, 0.1538,  ..., 0.3054, 0.2295, 0.1890]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:04:27,815 [Process: 0] Synchronize training processes
2024-08-16 11:04:27,815 [Process: 0] Evaluating...
2024-08-16 11:04:27,817 [Process: 0] EPOCH 16:
2024-08-16 11:04:27,819 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2354, 0.2068, 0.2260,  ..., 0.2669, 0.2297, 0.2335],
         [0.2354, 0.2082, 0.2260,  ..., 0.2095, 0.2742, 0.2995],
         [0.2354, 0.1979, 0.2260,  ..., 0.2095, 0.2297, 0.2335],
         [0.2939, 0.3870, 0.3220,  ..., 0.3141, 0.2664, 0.2335]],
        [[0.2357, 0.2079, 0.2500,  ..., 0.2291, 0.2500, 0.2346],
         [0.2357, 0.2079, 0.2500,  ..., 0.3128, 0.2500, 0.3096],
         [0.2357, 0.2079, 0.2500,  ..., 0.2291, 0.2500, 0.2279],
         [0.2930, 0.3763, 0.2500,  ..., 0.2291, 0.2500, 0.2279]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1692, 0.2285, 0.2374,  ..., 0.1575, 0.1805, 0.2021],
         [0.1692, 0.3226, 0.2374,  ..., 0.5276, 0.2641, 0.3936],
         [0.4925, 0.2244, 0.2877,  ..., 0.1575, 0.2442, 0.2021],
         [0.1692, 0.2244, 0.2374,  ..., 0.1575, 0.3111, 0.2021]],
        [[0.6287, 0.3747, 0.2555,  ..., 0.2922, 0.1725, 0.0898],
         [0.1466, 0.1373, 0.0565,  ..., 0.4270, 0.2475, 0.1140],
         [0.0746, 0.1811, 0.4955,  ..., 0.0723, 0.4076, 0.6863],
         [0.1501, 0.3069, 0.1924,  ..., 0.2084, 0.1725, 0.1099]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:04:29,713 [Process: 0] Synchronize training processes
2024-08-16 11:04:29,713 [Process: 0] Evaluating...
2024-08-16 11:04:29,715 [Process: 0] EPOCH 17:
2024-08-16 11:04:29,717 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2526, 0.2215, 0.2099,  ..., 0.2361, 0.2369, 0.2025],
         [0.1920, 0.2215, 0.2099,  ..., 0.2061, 0.2489, 0.2157],
         [0.1524, 0.2215, 0.2099,  ..., 0.2061, 0.2369, 0.1834],
         [0.4030, 0.3354, 0.3702,  ..., 0.3517, 0.2773, 0.3985]],
        [[0.2500, 0.2431, 0.2761,  ..., 0.2501, 0.2440, 0.2542],
         [0.2500, 0.2708, 0.2472,  ..., 0.2493, 0.2440, 0.2712],
         [0.2500, 0.2431, 0.2384,  ..., 0.2493, 0.2440, 0.2007],
         [0.2500, 0.2431, 0.2384,  ..., 0.2513, 0.2680, 0.2739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2265,  ..., 0.3902, 0.3926, 0.2316],
         [0.2500, 0.2500, 0.2295,  ..., 0.0867, 0.1735, 0.2803],
         [0.2500, 0.2500, 0.1487,  ..., 0.4365, 0.2605, 0.2840],
         [0.2500, 0.2500, 0.3953,  ..., 0.0867, 0.1735, 0.2041]],
        [[0.2312, 0.2323, 0.2102,  ..., 0.2074, 0.1805, 0.2110],
         [0.3065, 0.2323, 0.2102,  ..., 0.2475, 0.2508, 0.3264],
         [0.2312, 0.3032, 0.2743,  ..., 0.3048, 0.1805, 0.2110],
         [0.2312, 0.2323, 0.3053,  ..., 0.2403, 0.3881, 0.2516]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:04:31,613 [Process: 0] Synchronize training processes
2024-08-16 11:04:31,614 [Process: 0] Evaluating...
2024-08-16 11:04:31,616 [Process: 0] EPOCH 18:
2024-08-16 11:04:31,617 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2457, 0.2234, 0.2412,  ..., 0.2414, 0.2081, 0.2055],
         [0.2496, 0.2234, 0.2717,  ..., 0.2392, 0.2480, 0.2195],
         [0.2457, 0.2234, 0.2412,  ..., 0.2111, 0.2081, 0.2055],
         [0.2589, 0.3299, 0.2459,  ..., 0.3083, 0.3358, 0.3695]],
        [[0.2155, 0.2338, 0.2213,  ..., 0.2433, 0.2503, 0.1950],
         [0.2877, 0.2338, 0.2381,  ..., 0.2433, 0.2353, 0.2614],
         [0.2112, 0.2338, 0.2213,  ..., 0.2433, 0.2353, 0.1950],
         [0.2856, 0.2987, 0.3194,  ..., 0.2700, 0.2791, 0.3487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3566, 0.3209, 0.1543,  ..., 0.1767, 0.3748, 0.3354],
         [0.2030, 0.2954, 0.2123,  ..., 0.2449, 0.1836, 0.3357],
         [0.1648, 0.1919, 0.5243,  ..., 0.3592, 0.2580, 0.1644],
         [0.2757, 0.1919, 0.1091,  ..., 0.2192, 0.1836, 0.1644]],
        [[0.1640, 0.1891, 0.1052,  ..., 0.2452, 0.2500, 0.2356],
         [0.1640, 0.1891, 0.1052,  ..., 0.2452, 0.2500, 0.2356],
         [0.5081, 0.2426, 0.1593,  ..., 0.2452, 0.2500, 0.2356],
         [0.1640, 0.3792, 0.6302,  ..., 0.2643, 0.2500, 0.2932]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 11:04:33,502 [Process: 0] Synchronize training processes
2024-08-16 11:04:33,502 [Process: 0] Evaluating...
2024-08-16 11:04:33,504 [Process: 0] EPOCH 19:
2024-08-16 11:04:33,506 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2124, 0.2337, 0.2312,  ..., 0.2467, 0.2265, 0.2160],
         [0.2124, 0.2337, 0.2130,  ..., 0.2467, 0.2112, 0.2010],
         [0.2124, 0.2337, 0.2130,  ..., 0.2467, 0.2112, 0.1940],
         [0.3629, 0.2990, 0.3429,  ..., 0.2600, 0.3511, 0.3889]],
        [[0.2221, 0.2576, 0.2666,  ..., 0.2259, 0.2350, 0.2284],
         [0.2639, 0.2896, 0.2343,  ..., 0.2797, 0.2350, 0.2494],
         [0.2221, 0.1766, 0.2343,  ..., 0.2259, 0.2350, 0.2284],
         [0.2919, 0.2762, 0.2648,  ..., 0.2684, 0.2951, 0.2938]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1842, 0.2500, 0.2500,  ..., 0.1745, 0.3135, 0.2904],
         [0.1842, 0.2500, 0.2500,  ..., 0.1225, 0.2223, 0.1879],
         [0.4473, 0.2500, 0.2500,  ..., 0.2403, 0.0683, 0.2412],
         [0.1842, 0.2500, 0.2500,  ..., 0.4627, 0.3959, 0.2805]],
        [[0.1600, 0.2500, 0.3181,  ..., 0.2354, 0.2217, 0.4887],
         [0.2120, 0.2500, 0.3083,  ..., 0.2354, 0.3348, 0.1658],
         [0.4905, 0.2500, 0.1868,  ..., 0.2939, 0.2217, 0.1817],
         [0.1376, 0.2500, 0.1868,  ..., 0.2354, 0.2217, 0.1638]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2054, 0.2286, 0.2269,  ..., 0.2726, 0.2546, 0.2475],
         [0.2296, 0.2307, 0.2293,  ..., 0.2091, 0.2353, 0.2615],
         [0.2054, 0.2286, 0.2018,  ..., 0.2091, 0.2353, 0.2300],
         [0.3597, 0.3121, 0.3420,  ..., 0.3093, 0.2749, 0.2610]],
        [[0.2335, 0.2111, 0.2306,  ..., 0.2490, 0.2500, 0.2442],
         [0.2699, 0.3028, 0.3002,  ..., 0.2531, 0.2500, 0.2646],
         [0.2335, 0.2111, 0.2306,  ..., 0.2490, 0.2500, 0.2470],
         [0.2631, 0.2750, 0.2386,  ..., 0.2490, 0.2500, 0.2442]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:35,412 [Process: 0] Synchronize training processes
2024-08-16 11:04:35,413 [Process: 0] Evaluating...
2024-08-16 11:04:35,415 [Process: 0] EPOCH 20:
2024-08-16 11:04:35,417 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4317, 0.2398, 0.2932,  ..., 0.1740, 0.6311, 0.2500],
         [0.1894, 0.2398, 0.4433,  ..., 0.3173, 0.1230, 0.2500],
         [0.1894, 0.2807, 0.1475,  ..., 0.3347, 0.1230, 0.2500],
         [0.1894, 0.2398, 0.1159,  ..., 0.1740, 0.1230, 0.2500]],
        [[0.1206, 0.3671, 0.2070,  ..., 0.3603, 0.1282, 0.2819],
         [0.3698, 0.2010, 0.1923,  ..., 0.2216, 0.3151, 0.2970],
         [0.3303, 0.2523, 0.2046,  ..., 0.2286, 0.0521, 0.1431],
         [0.1793, 0.1796, 0.3961,  ..., 0.1895, 0.5045, 0.2781]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2397, 0.1956, 0.2293,  ..., 0.2439, 0.1888, 0.2323],
         [0.2439, 0.2257, 0.3071,  ..., 0.2576, 0.2285, 0.2323],
         [0.2311, 0.1480, 0.1844,  ..., 0.1945, 0.2033, 0.2323],
         [0.2853, 0.4307, 0.2792,  ..., 0.3040, 0.3794, 0.3031]],
        [[0.2409, 0.2400, 0.2393,  ..., 0.2401, 0.2227, 0.2245],
         [0.2400, 0.2540, 0.2393,  ..., 0.2401, 0.2227, 0.2266],
         [0.2400, 0.2400, 0.2393,  ..., 0.2401, 0.2227, 0.2245],
         [0.2792, 0.2659, 0.2820,  ..., 0.2797, 0.3320, 0.3244]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:37,345 [Process: 0] Synchronize training processes
2024-08-16 11:04:37,346 [Process: 0] Evaluating...
2024-08-16 11:04:37,348 [Process: 0] EPOCH 21:
2024-08-16 11:04:37,350 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.1434, 0.1825,  ..., 0.1261, 0.0969, 0.4974],
         [0.2500, 0.1434, 0.1560,  ..., 0.1261, 0.1159, 0.0875],
         [0.2500, 0.1451, 0.5055,  ..., 0.5826, 0.6902, 0.2157],
         [0.2500, 0.5680, 0.1560,  ..., 0.1651, 0.0969, 0.1995]],
        [[0.3177, 0.2456, 0.2252,  ..., 0.2500, 0.2020, 0.2307],
         [0.2986, 0.2039, 0.3244,  ..., 0.2500, 0.4200, 0.2307],
         [0.1918, 0.2039, 0.2252,  ..., 0.2500, 0.1890, 0.3079],
         [0.1918, 0.3466, 0.2252,  ..., 0.2500, 0.1890, 0.2307]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2058, 0.2323, 0.2671,  ..., 0.2164, 0.2109, 0.1984],
         [0.3068, 0.2468, 0.2120,  ..., 0.2297, 0.2196, 0.2436],
         [0.2058, 0.2323, 0.2120,  ..., 0.1941, 0.2109, 0.1800],
         [0.2816, 0.2886, 0.3089,  ..., 0.3598, 0.3586, 0.3780]],
        [[0.2379, 0.2755, 0.2256,  ..., 0.2458, 0.2419, 0.2255],
         [0.2379, 0.2337, 0.2256,  ..., 0.2458, 0.2457, 0.2347],
         [0.2379, 0.2308, 0.2256,  ..., 0.2458, 0.2171, 0.2208],
         [0.2862, 0.2599, 0.3232,  ..., 0.2626, 0.2953, 0.3189]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:39,232 [Process: 0] Synchronize training processes
2024-08-16 11:04:39,233 [Process: 0] Evaluating...
2024-08-16 11:04:39,234 [Process: 0] EPOCH 22:
2024-08-16 11:04:39,236 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1879, 0.1927, 0.1920,  ..., 0.0847, 0.6109, 0.2500],
         [0.1879, 0.2602, 0.2058,  ..., 0.0847, 0.0244, 0.2500],
         [0.1879, 0.1927, 0.1920,  ..., 0.7458, 0.1345, 0.2500],
         [0.4362, 0.3543, 0.4103,  ..., 0.0847, 0.2303, 0.2500]],
        [[0.2014, 0.1728, 0.2444,  ..., 0.1651, 0.2500, 0.2542],
         [0.2490, 0.4295, 0.4396,  ..., 0.5112, 0.2500, 0.2913],
         [0.3482, 0.2248, 0.1580,  ..., 0.1619, 0.2500, 0.2272],
         [0.2014, 0.1728, 0.1580,  ..., 0.1619, 0.2500, 0.2272]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2131, 0.2669, 0.2104,  ..., 0.2134, 0.2500, 0.2087],
         [0.2249, 0.2109, 0.2388,  ..., 0.2787, 0.2500, 0.2937],
         [0.1808, 0.2109, 0.2059,  ..., 0.2134, 0.2500, 0.2028],
         [0.3812, 0.3113, 0.3449,  ..., 0.2944, 0.2500, 0.2949]],
        [[0.2536, 0.2466, 0.2807,  ..., 0.2272, 0.2351, 0.2424],
         [0.2505, 0.2466, 0.2134,  ..., 0.2253, 0.2503, 0.2424],
         [0.2480, 0.2466, 0.2107,  ..., 0.2253, 0.2351, 0.2424],
         [0.2480, 0.2603, 0.2951,  ..., 0.3223, 0.2795, 0.2729]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:41,131 [Process: 0] Synchronize training processes
2024-08-16 11:04:41,131 [Process: 0] Evaluating...
2024-08-16 11:04:41,133 [Process: 0] EPOCH 23:
2024-08-16 11:04:41,135 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2809, 0.3619, 0.1924,  ..., 0.5331, 0.1063, 0.2324],
         [0.1784, 0.1347, 0.1599,  ..., 0.0823, 0.4411, 0.2324],
         [0.1093, 0.1669, 0.3189,  ..., 0.1133, 0.0989, 0.3027],
         [0.4314, 0.3365, 0.3289,  ..., 0.2713, 0.3538, 0.2324]],
        [[0.1912, 0.1902, 0.2082,  ..., 0.2240, 0.2283, 0.1852],
         [0.3702, 0.4293, 0.3754,  ..., 0.2852, 0.4145, 0.4843],
         [0.2473, 0.1902, 0.2082,  ..., 0.2240, 0.1786, 0.1653],
         [0.1912, 0.1902, 0.2082,  ..., 0.2669, 0.1786, 0.1653]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2158, 0.1985, 0.1981,  ..., 0.2205, 0.1990, 0.2082],
         [0.2885, 0.1985, 0.2866,  ..., 0.2512, 0.2783, 0.2665],
         [0.2158, 0.1985, 0.1981,  ..., 0.2205, 0.1990, 0.2082],
         [0.2800, 0.4046, 0.3172,  ..., 0.3078, 0.3236, 0.3171]],
        [[0.2486, 0.2374, 0.2123,  ..., 0.2487, 0.2453, 0.2371],
         [0.2486, 0.2374, 0.2544,  ..., 0.2487, 0.2217, 0.2371],
         [0.2542, 0.2374, 0.2123,  ..., 0.2487, 0.2217, 0.2371],
         [0.2486, 0.2877, 0.3211,  ..., 0.2539, 0.3113, 0.2888]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:43,036 [Process: 0] Synchronize training processes
2024-08-16 11:04:43,036 [Process: 0] Evaluating...
2024-08-16 11:04:43,038 [Process: 0] EPOCH 24:
2024-08-16 11:04:43,040 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3674, 0.2600, 0.2902,  ..., 0.1701, 0.1627, 0.6616],
         [0.1961, 0.3005, 0.3307,  ..., 0.4897, 0.1623, 0.1199],
         [0.0986, 0.2618, 0.2261,  ..., 0.1701, 0.1349, 0.0956],
         [0.3379, 0.1777, 0.1529,  ..., 0.1701, 0.5400, 0.1229]],
        [[0.3754, 0.2500, 0.2434,  ..., 0.1283, 0.2500, 0.2489],
         [0.1303, 0.2500, 0.2434,  ..., 0.1283, 0.2500, 0.2756],
         [0.1303, 0.2500, 0.2698,  ..., 0.2424, 0.2500, 0.2377],
         [0.3639, 0.2500, 0.2434,  ..., 0.5010, 0.2500, 0.2377]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2283, 0.2130, 0.2267,  ..., 0.1990, 0.2110, 0.2009],
         [0.2476, 0.2865, 0.2938,  ..., 0.2062, 0.2432, 0.2251],
         [0.2283, 0.2130, 0.2267,  ..., 0.1954, 0.1861, 0.1913],
         [0.2958, 0.2876, 0.2527,  ..., 0.3994, 0.3598, 0.3827]],
        [[0.2500, 0.2425, 0.2390,  ..., 0.2785, 0.2471, 0.2454],
         [0.2500, 0.2425, 0.2531,  ..., 0.2452, 0.2546, 0.2454],
         [0.2500, 0.2425, 0.2390,  ..., 0.2252, 0.2471, 0.2454],
         [0.2500, 0.2724, 0.2689,  ..., 0.2511, 0.2512, 0.2639]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:44,937 [Process: 0] Synchronize training processes
2024-08-16 11:04:44,937 [Process: 0] Evaluating...
2024-08-16 11:04:44,939 [Process: 0] EPOCH 25:
2024-08-16 11:04:44,941 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1695, 0.1721, 0.1670,  ..., 0.2085, 0.1762, 0.2077],
         [0.4315, 0.1958, 0.1670,  ..., 0.2707, 0.1762, 0.2077],
         [0.1976, 0.4600, 0.4989,  ..., 0.3123, 0.4714, 0.3768],
         [0.2013, 0.1721, 0.1670,  ..., 0.2085, 0.1762, 0.2077]],
        [[0.4050, 0.1882, 0.2745,  ..., 0.4307, 0.4128, 0.3277],
         [0.1983, 0.1000, 0.2822,  ..., 0.1473, 0.1440, 0.2351],
         [0.1983, 0.1000, 0.2217,  ..., 0.1473, 0.1116, 0.0837],
         [0.1983, 0.6119, 0.2217,  ..., 0.2746, 0.3316, 0.3536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2378, 0.2410, 0.2321,  ..., 0.2182, 0.2500, 0.2344],
         [0.2378, 0.2410, 0.2294,  ..., 0.2182, 0.2500, 0.2140],
         [0.2378, 0.2435, 0.2294,  ..., 0.2182, 0.2500, 0.2140],
         [0.2867, 0.2745, 0.3091,  ..., 0.3454, 0.2500, 0.3377]],
        [[0.2239, 0.2520, 0.1894,  ..., 0.2898, 0.2418, 0.2012],
         [0.3211, 0.2380, 0.3059,  ..., 0.2269, 0.3001, 0.2991],
         [0.1702, 0.2372, 0.1894,  ..., 0.1942, 0.1717, 0.2064],
         [0.2849, 0.2728, 0.3154,  ..., 0.2892, 0.2863, 0.2932]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:46,828 [Process: 0] Synchronize training processes
2024-08-16 11:04:46,828 [Process: 0] Evaluating...
2024-08-16 11:04:46,830 [Process: 0] EPOCH 26:
2024-08-16 11:04:46,832 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2971, 0.2977, 0.4368,  ..., 0.0198, 0.3951, 0.5484],
         [0.4497, 0.4056, 0.2475,  ..., 0.0198, 0.2016, 0.1595],
         [0.1266, 0.1483, 0.1578,  ..., 0.9405, 0.2016, 0.1500],
         [0.1266, 0.1483, 0.1578,  ..., 0.0198, 0.2016, 0.1421]],
        [[0.0988, 0.2224, 0.2044,  ..., 0.1703, 0.1697, 0.1919],
         [0.2460, 0.2224, 0.3032,  ..., 0.1703, 0.4046, 0.1919],
         [0.0988, 0.2974, 0.2879,  ..., 0.2186, 0.2452, 0.2367],
         [0.5565, 0.2578, 0.2044,  ..., 0.4408, 0.1805, 0.3795]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2320, 0.2077, 0.2378,  ..., 0.2175, 0.2288, 0.1966],
         [0.2320, 0.2077, 0.2378,  ..., 0.2355, 0.2288, 0.1966],
         [0.2320, 0.2098, 0.2378,  ..., 0.2175, 0.2288, 0.1993],
         [0.3039, 0.3748, 0.2866,  ..., 0.3294, 0.3135, 0.4075]],
        [[0.2336, 0.2193, 0.2428,  ..., 0.2170, 0.3114, 0.2466],
         [0.3222, 0.2621, 0.2428,  ..., 0.2789, 0.2290, 0.2609],
         [0.2132, 0.2193, 0.2428,  ..., 0.2169, 0.2290, 0.2299],
         [0.2310, 0.2992, 0.2716,  ..., 0.2872, 0.2305, 0.2626]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:48,742 [Process: 0] Synchronize training processes
2024-08-16 11:04:48,742 [Process: 0] Evaluating...
2024-08-16 11:04:48,744 [Process: 0] EPOCH 27:
2024-08-16 11:04:48,746 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1533, 0.2155, 0.2904,  ..., 0.2178, 0.2047, 0.2500],
         [0.1533, 0.1373, 0.2154,  ..., 0.2178, 0.2416, 0.2500],
         [0.5402, 0.5099, 0.2789,  ..., 0.3467, 0.3490, 0.2500],
         [0.1533, 0.1373, 0.2154,  ..., 0.2178, 0.2047, 0.2500]],
        [[0.2566, 0.4909, 0.3224,  ..., 0.3013, 0.1812, 0.2250],
         [0.2478, 0.2234, 0.1507,  ..., 0.3178, 0.3214, 0.3141],
         [0.2478, 0.1024, 0.1507,  ..., 0.0703, 0.1542, 0.2250],
         [0.2478, 0.1833, 0.3762,  ..., 0.3107, 0.3432, 0.2359]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2623, 0.1857, 0.1988,  ..., 0.2074, 0.1958, 0.2009],
         [0.1730, 0.1925, 0.2357,  ..., 0.2295, 0.2259, 0.2789],
         [0.1730, 0.1857, 0.1988,  ..., 0.2074, 0.1700, 0.2009],
         [0.3918, 0.4361, 0.3666,  ..., 0.3556, 0.4083, 0.3194]],
        [[0.2702, 0.2267, 0.2301,  ..., 0.2500, 0.2442, 0.2500],
         [0.2334, 0.2653, 0.3096,  ..., 0.2500, 0.2442, 0.2500],
         [0.2334, 0.2267, 0.2301,  ..., 0.2500, 0.2442, 0.2500],
         [0.2631, 0.2813, 0.2301,  ..., 0.2500, 0.2674, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:50,644 [Process: 0] Synchronize training processes
2024-08-16 11:04:50,645 [Process: 0] Evaluating...
2024-08-16 11:04:50,646 [Process: 0] EPOCH 28:
2024-08-16 11:04:50,648 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.3746, 0.2767,  ..., 0.2843, 0.1992, 0.1908],
         [0.2500, 0.1688, 0.1065,  ..., 0.2556, 0.3584, 0.1170],
         [0.2500, 0.0627, 0.1065,  ..., 0.1832, 0.1992, 0.1170],
         [0.2500, 0.3939, 0.5102,  ..., 0.2770, 0.2433, 0.5751]],
        [[0.1423, 0.1429, 0.1782,  ..., 0.1937, 0.1408, 0.0911],
         [0.2734, 0.2807, 0.1782,  ..., 0.1937, 0.1408, 0.4010],
         [0.4359, 0.4335, 0.4653,  ..., 0.4190, 0.3706, 0.3978],
         [0.1485, 0.1429, 0.1782,  ..., 0.1937, 0.3478, 0.1102]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2142, 0.2076, 0.2367,  ..., 0.2295, 0.2032, 0.2053],
         [0.1910, 0.2076, 0.2367,  ..., 0.2295, 0.2233, 0.2167],
         [0.1910, 0.2234, 0.2416,  ..., 0.2295, 0.2317, 0.2030],
         [0.4039, 0.3614, 0.2850,  ..., 0.3115, 0.3418, 0.3750]],
        [[0.2147, 0.2349, 0.2335,  ..., 0.2455, 0.2190, 0.2500],
         [0.3190, 0.2952, 0.2408,  ..., 0.2455, 0.2670, 0.2500],
         [0.2147, 0.2349, 0.2335,  ..., 0.2455, 0.2190, 0.2500],
         [0.2516, 0.2349, 0.2922,  ..., 0.2636, 0.2949, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 11:04:52,549 [Process: 0] Synchronize training processes
2024-08-16 11:04:52,550 [Process: 0] Evaluating...
2024-08-16 11:04:52,552 [Process: 0] EPOCH 29:
2024-08-16 11:04:52,554 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2904, 0.3226, 0.2662,  ..., 0.1847, 0.2405, 0.2386],
         [0.1282, 0.2190, 0.4290,  ..., 0.3485, 0.2405, 0.5590],
         [0.1282, 0.2190, 0.0768,  ..., 0.2820, 0.2614, 0.0902],
         [0.4533, 0.2395, 0.2280,  ..., 0.1847, 0.2575, 0.1122]],
        [[0.2362, 0.1900, 0.0787,  ..., 0.2996, 0.2881, 0.9354],
         [0.2362, 0.1900, 0.3098,  ..., 0.2335, 0.2135, 0.0309],
         [0.2915, 0.4301, 0.5498,  ..., 0.2335, 0.2849, 0.0081],
         [0.2362, 0.1900, 0.0617,  ..., 0.2335, 0.2135, 0.0256]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2280, 0.2156,  ..., 0.2342, 0.2264, 0.2428],
         [0.2500, 0.2288, 0.2156,  ..., 0.2342, 0.2236, 0.2479],
         [0.2500, 0.2280, 0.2156,  ..., 0.2342, 0.2236, 0.2428],
         [0.2500, 0.3152, 0.3533,  ..., 0.2974, 0.3264, 0.2666]],
        [[0.1945, 0.2093, 0.2268,  ..., 0.2353, 0.2119, 0.2465],
         [0.3087, 0.3116, 0.2552,  ..., 0.2668, 0.2480, 0.2465],
         [0.1893, 0.2093, 0.2152,  ..., 0.2353, 0.2119, 0.2465],
         [0.3075, 0.2698, 0.3028,  ..., 0.2626, 0.3283, 0.2605]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1932, 0.1205, 0.2500,  ..., 0.1902, 0.2442, 0.1935],
         [0.1932, 0.1205, 0.2500,  ..., 0.1902, 0.2442, 0.1935],
         [0.4204, 0.2896, 0.2500,  ..., 0.4295, 0.2674, 0.4194],
         [0.1932, 0.4695, 0.2500,  ..., 0.1902, 0.2442, 0.1935]],
        [[0.1477, 0.1421, 0.3699,  ..., 0.2033, 0.2182, 0.1983],
         [0.4279, 0.2741, 0.1890,  ..., 0.3900, 0.3455, 0.3760],
         [0.1493, 0.2636, 0.0897,  ..., 0.2033, 0.2182, 0.1983],
         [0.2752, 0.3202, 0.3514,  ..., 0.2033, 0.2182, 0.2273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:04:54,472 [Process: 0] Synchronize training processes
2024-08-16 11:04:54,472 [Process: 0] Evaluating...
2024-08-16 11:04:54,474 [Process: 0] EPOCH 30:
2024-08-16 11:04:54,476 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2424, 0.2500, 0.2232,  ..., 0.2500, 0.2448, 0.2541],
         [0.2424, 0.2500, 0.2181,  ..., 0.2500, 0.2448, 0.2444],
         [0.2424, 0.2500, 0.2181,  ..., 0.2500, 0.2448, 0.2218],
         [0.2728, 0.2500, 0.3407,  ..., 0.2500, 0.2655, 0.2797]],
        [[0.1935, 0.2331, 0.1646,  ..., 0.2370, 0.2094, 0.2184],
         [0.2561, 0.2331, 0.3819,  ..., 0.2930, 0.2083, 0.2184],
         [0.1935, 0.2331, 0.1646,  ..., 0.2022, 0.1970, 0.2184],
         [0.3569, 0.3007, 0.2890,  ..., 0.2678, 0.3853, 0.3449]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2405, 0.2498, 0.2307,  ..., 0.2500, 0.2054, 0.2232],
         [0.2627, 0.2507, 0.2307,  ..., 0.2500, 0.2964, 0.3304],
         [0.2405, 0.2498, 0.2307,  ..., 0.2500, 0.2054, 0.2232],
         [0.2563, 0.2498, 0.3080,  ..., 0.2500, 0.2927, 0.2232]],
        [[0.2503, 0.4733, 0.3604,  ..., 0.1849, 0.2534, 0.3537],
         [0.2028, 0.1280, 0.2111,  ..., 0.2975, 0.2005, 0.2037],
         [0.2313, 0.1360, 0.2111,  ..., 0.2481, 0.3625, 0.2561],
         [0.3156, 0.2627, 0.2175,  ..., 0.2695, 0.1835, 0.1866]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:04:56,374 [Process: 0] Synchronize training processes
2024-08-16 11:04:56,374 [Process: 0] Evaluating...
2024-08-16 11:04:56,376 [Process: 0] EPOCH 31:
2024-08-16 11:04:56,378 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:04:58,284 [Process: 0] Synchronize training processes
2024-08-16 11:04:58,285 [Process: 0] Evaluating...
2024-08-16 11:04:58,286 [Process: 0] EPOCH 32:
2024-08-16 11:04:58,288 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2663, 0.2574, 0.2359,  ..., 0.1995, 0.2420, 0.2356],
         [0.2281, 0.2156, 0.2359,  ..., 0.2060, 0.2272, 0.2356],
         [0.2281, 0.2148, 0.2359,  ..., 0.1885, 0.2347, 0.2356],
         [0.2775, 0.3122, 0.2924,  ..., 0.4061, 0.2961, 0.2933]],
        [[0.2413, 0.2277, 0.2174,  ..., 0.2212, 0.2206, 0.2147],
         [0.2413, 0.2277, 0.2442,  ..., 0.2212, 0.2891, 0.2149],
         [0.2413, 0.2277, 0.2174,  ..., 0.2212, 0.2206, 0.2147],
         [0.2760, 0.3168, 0.3210,  ..., 0.3364, 0.2697, 0.3557]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2530, 0.1925, 0.2500,  ..., 0.2134, 0.1284, 0.1594],
         [0.3930, 0.3145, 0.2500,  ..., 0.2134, 0.6094, 0.4101],
         [0.1923, 0.2343, 0.2500,  ..., 0.3599, 0.0544, 0.2710],
         [0.1617, 0.2586, 0.2500,  ..., 0.2134, 0.2078, 0.1594]],
        [[0.3259, 0.1990, 0.3582,  ..., 0.2170, 0.2517, 0.3134],
         [0.1786, 0.3170, 0.1612,  ..., 0.3167, 0.3893, 0.2014],
         [0.2207, 0.1990, 0.1612,  ..., 0.2170, 0.1795, 0.2575],
         [0.2749, 0.2849, 0.3195,  ..., 0.2493, 0.1795, 0.2277]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:00,175 [Process: 0] Synchronize training processes
2024-08-16 11:05:00,175 [Process: 0] Evaluating...
2024-08-16 11:05:00,177 [Process: 0] EPOCH 33:
2024-08-16 11:05:00,179 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2497, 0.2352, 0.2500,  ..., 0.2410, 0.2489, 0.2404],
         [0.2286, 0.2589, 0.2500,  ..., 0.2549, 0.2489, 0.2424],
         [0.2131, 0.2352, 0.2500,  ..., 0.2410, 0.2489, 0.2420],
         [0.3086, 0.2708, 0.2500,  ..., 0.2631, 0.2532, 0.2752]],
        [[0.2225, 0.2055, 0.2308,  ..., 0.2236, 0.1936, 0.2191],
         [0.2863, 0.2055, 0.2308,  ..., 0.2236, 0.1936, 0.2377],
         [0.2225, 0.2055, 0.2308,  ..., 0.2236, 0.1936, 0.2191],
         [0.2686, 0.3836, 0.3077,  ..., 0.3292, 0.4193, 0.3241]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2675, 0.5042, 0.1958,  ..., 0.2039, 0.5429, 0.4768],
         [0.1963, 0.2109, 0.5357,  ..., 0.2372, 0.1638, 0.3163],
         [0.1963, 0.1424, 0.1808,  ..., 0.3980, 0.1395, 0.1035],
         [0.3399, 0.1424, 0.0877,  ..., 0.1610, 0.1538, 0.1035]],
        [[0.1346, 0.1819, 0.1850,  ..., 0.0726, 0.2066, 0.2080],
         [0.1346, 0.1819, 0.1850,  ..., 0.0726, 0.2066, 0.2080],
         [0.5548, 0.4542, 0.4279,  ..., 0.6895, 0.3803, 0.3530],
         [0.1759, 0.1819, 0.2020,  ..., 0.1653, 0.2066, 0.2309]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:02,111 [Process: 0] Synchronize training processes
2024-08-16 11:05:02,112 [Process: 0] Evaluating...
2024-08-16 11:05:02,113 [Process: 0] EPOCH 34:
2024-08-16 11:05:02,115 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2368, 0.2309, 0.2609,  ..., 0.2407, 0.2328, 0.2435],
         [0.2226, 0.2309, 0.2313,  ..., 0.2407, 0.3016, 0.2435],
         [0.2141, 0.2309, 0.2313,  ..., 0.2547, 0.2328, 0.2435],
         [0.3265, 0.3074, 0.2764,  ..., 0.2639, 0.2328, 0.2695]],
        [[0.2086, 0.2046, 0.2293,  ..., 0.2246, 0.1926, 0.2172],
         [0.2718, 0.2046, 0.2293,  ..., 0.2649, 0.2557, 0.2340],
         [0.2086, 0.2046, 0.2293,  ..., 0.2246, 0.1926, 0.2172],
         [0.3111, 0.3861, 0.3121,  ..., 0.2860, 0.3591, 0.3315]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2259, 0.2299, 0.1919,  ..., 0.2279, 0.1666, 0.3063],
         [0.2259, 0.2330, 0.3152,  ..., 0.2279, 0.3811, 0.2415],
         [0.2259, 0.1490, 0.1674,  ..., 0.2279, 0.1666, 0.0950],
         [0.3223, 0.3882, 0.3256,  ..., 0.3162, 0.2856, 0.3572]],
        [[0.3838, 0.3284, 0.2500,  ..., 0.1782, 0.1969, 0.1972],
         [0.1895, 0.2174, 0.2500,  ..., 0.1914, 0.2532, 0.2135],
         [0.2077, 0.2367, 0.2500,  ..., 0.3358, 0.3529, 0.3920],
         [0.2190, 0.2174, 0.2500,  ..., 0.2945, 0.1969, 0.1972]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:04,121 [Process: 0] Synchronize training processes
2024-08-16 11:05:04,122 [Process: 0] Evaluating...
2024-08-16 11:05:04,123 [Process: 0] EPOCH 35:
2024-08-16 11:05:04,125 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2538, 0.2567,  ..., 0.2500, 0.2626, 0.2672],
         [0.2500, 0.2572, 0.2261,  ..., 0.2500, 0.2554, 0.2309],
         [0.2500, 0.2445, 0.2261,  ..., 0.2500, 0.2192, 0.2309],
         [0.2500, 0.2445, 0.2911,  ..., 0.2500, 0.2628, 0.2709]],
        [[0.1981, 0.2208, 0.1832,  ..., 0.2155, 0.1712, 0.2110],
         [0.2474, 0.2208, 0.1938,  ..., 0.2905, 0.2244, 0.2110],
         [0.2133, 0.2208, 0.1832,  ..., 0.1990, 0.1712, 0.2110],
         [0.3412, 0.3375, 0.4398,  ..., 0.2950, 0.4333, 0.3669]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.6408, 0.4127, 0.3150,  ..., 0.3054, 0.4036, 0.1555],
         [0.1364, 0.1958, 0.2283,  ..., 0.1892, 0.2371, 0.1555],
         [0.1114, 0.1958, 0.2283,  ..., 0.1966, 0.1796, 0.5335],
         [0.1114, 0.1958, 0.2283,  ..., 0.3089, 0.1796, 0.1555]],
        [[0.1861, 0.1663, 0.1811,  ..., 0.1896, 0.2209, 0.1801],
         [0.1861, 0.2184, 0.4461,  ..., 0.3006, 0.2852, 0.3592],
         [0.2084, 0.2395, 0.1947,  ..., 0.2700, 0.1344, 0.1801],
         [0.4194, 0.3757, 0.1782,  ..., 0.2398, 0.3595, 0.2805]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:06,166 [Process: 0] Synchronize training processes
2024-08-16 11:05:06,167 [Process: 0] Evaluating...
2024-08-16 11:05:06,169 [Process: 0] EPOCH 36:
2024-08-16 11:05:06,171 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2330, 0.2141, 0.2146,  ..., 0.2423, 0.2420, 0.2500],
         [0.2330, 0.2257, 0.2510,  ..., 0.2730, 0.2420, 0.2500],
         [0.2330, 0.2141, 0.2146,  ..., 0.2423, 0.2420, 0.2500],
         [0.3009, 0.3461, 0.3198,  ..., 0.2423, 0.2740, 0.2500]],
        [[0.2113, 0.2262, 0.2799,  ..., 0.2497, 0.2277, 0.1835],
         [0.2960, 0.2634, 0.1905,  ..., 0.2449, 0.2277, 0.3441],
         [0.1936, 0.2262, 0.1905,  ..., 0.1937, 0.2277, 0.1835],
         [0.2991, 0.2843, 0.3392,  ..., 0.3116, 0.3170, 0.2889]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0975, 0.0814, 0.1845,  ..., 0.1338, 0.1238, 0.1065],
         [0.5714, 0.0814, 0.2343,  ..., 0.2435, 0.1490, 0.2093],
         [0.2336, 0.0814, 0.3967,  ..., 0.4888, 0.6033, 0.3655],
         [0.0975, 0.7557, 0.1845,  ..., 0.1338, 0.1238, 0.3187]],
        [[0.2500, 0.4072, 0.3451,  ..., 0.3477, 0.2399, 0.3962],
         [0.2500, 0.1976, 0.3274,  ..., 0.1489, 0.2399, 0.0824],
         [0.2500, 0.1976, 0.1638,  ..., 0.1489, 0.2802, 0.0824],
         [0.2500, 0.1976, 0.1638,  ..., 0.3545, 0.2399, 0.4389]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:08,194 [Process: 0] Synchronize training processes
2024-08-16 11:05:08,194 [Process: 0] Evaluating...
2024-08-16 11:05:08,196 [Process: 0] EPOCH 37:
2024-08-16 11:05:08,198 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2444, 0.2623, 0.2524,  ..., 0.2500, 0.2500, 0.2449],
         [0.2538, 0.2568, 0.2611,  ..., 0.2500, 0.2500, 0.2449],
         [0.2444, 0.2405, 0.2051,  ..., 0.2500, 0.2500, 0.2449],
         [0.2574, 0.2405, 0.2813,  ..., 0.2500, 0.2500, 0.2653]],
        [[0.1734, 0.2021, 0.2218,  ..., 0.1881, 0.2312, 0.2106],
         [0.1734, 0.2021, 0.2321,  ..., 0.2197, 0.2312, 0.2165],
         [0.1734, 0.2021, 0.2218,  ..., 0.1881, 0.2312, 0.2106],
         [0.4799, 0.3938, 0.3242,  ..., 0.4040, 0.3063, 0.3622]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2074, 0.2400, 0.1848,  ..., 0.2367, 0.1698, 0.1702],
         [0.2203, 0.2400, 0.1848,  ..., 0.2899, 0.1698, 0.2996],
         [0.2074, 0.2400, 0.2483,  ..., 0.2367, 0.1698, 0.1702],
         [0.3649, 0.2800, 0.3822,  ..., 0.2367, 0.4907, 0.3601]],
        [[0.2351, 0.1454, 0.1743,  ..., 0.5091, 0.2207, 0.1629],
         [0.3697, 0.4539, 0.3444,  ..., 0.1636, 0.4523, 0.4467],
         [0.2506, 0.2553, 0.3660,  ..., 0.1636, 0.0932, 0.2399],
         [0.1447, 0.1454, 0.1152,  ..., 0.1636, 0.2338, 0.1505]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:10,113 [Process: 0] Synchronize training processes
2024-08-16 11:05:10,114 [Process: 0] Evaluating...
2024-08-16 11:05:10,116 [Process: 0] EPOCH 38:
2024-08-16 11:05:10,118 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2639, 0.2487, 0.2435,  ..., 0.2415, 0.2228, 0.2605],
         [0.2426, 0.2412, 0.2695,  ..., 0.2415, 0.2869, 0.2520],
         [0.2440, 0.2412, 0.2435,  ..., 0.2415, 0.2228, 0.2323],
         [0.2495, 0.2689, 0.2435,  ..., 0.2756, 0.2676, 0.2552]],
        [[0.2455, 0.2173, 0.2500,  ..., 0.2415, 0.2190, 0.2389],
         [0.2029, 0.2204, 0.2500,  ..., 0.2415, 0.2190, 0.2501],
         [0.2029, 0.2173, 0.2500,  ..., 0.2415, 0.2190, 0.2389],
         [0.3486, 0.3450, 0.2500,  ..., 0.2754, 0.3429, 0.2722]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1992, 0.1070, 0.1789,  ..., 0.2694, 0.2797, 0.3298],
         [0.3797, 0.1585, 0.2374,  ..., 0.3760, 0.3228, 0.1222],
         [0.1535, 0.1441, 0.4048,  ..., 0.1773, 0.2654, 0.0791],
         [0.2676, 0.5904, 0.1789,  ..., 0.1773, 0.1321, 0.4689]],
        [[0.2221, 0.2394, 0.2500,  ..., 0.2500, 0.2327, 0.2500],
         [0.3337, 0.2394, 0.2500,  ..., 0.2500, 0.2327, 0.2500],
         [0.2221, 0.2817, 0.2500,  ..., 0.2500, 0.2327, 0.2500],
         [0.2221, 0.2394, 0.2500,  ..., 0.2500, 0.3018, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:12,136 [Process: 0] Synchronize training processes
2024-08-16 11:05:12,136 [Process: 0] Evaluating...
2024-08-16 11:05:12,138 [Process: 0] EPOCH 39:
2024-08-16 11:05:12,140 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2514, 0.2434, 0.2425,  ..., 0.2204, 0.2416, 0.2448],
         [0.2498, 0.2434, 0.2300,  ..., 0.2203, 0.2309, 0.2350],
         [0.2197, 0.2434, 0.2110,  ..., 0.2203, 0.2272, 0.2225],
         [0.2791, 0.2699, 0.3165,  ..., 0.3390, 0.3002, 0.2977]],
        [[0.2016, 0.1996, 0.2094,  ..., 0.2182, 0.2298, 0.1673],
         [0.2307, 0.1996, 0.2511,  ..., 0.2882, 0.2461, 0.1739],
         [0.2016, 0.1996, 0.2094,  ..., 0.2182, 0.2298, 0.1673],
         [0.3660, 0.4011, 0.3302,  ..., 0.2753, 0.2943, 0.4915]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2174, 0.1804, 0.1424,  ..., 0.2242, 0.1430, 0.1963],
         [0.2266, 0.1804, 0.1424,  ..., 0.2064, 0.1430, 0.1963],
         [0.3386, 0.4587, 0.2347,  ..., 0.3631, 0.2798, 0.2055],
         [0.2174, 0.1804, 0.4805,  ..., 0.2064, 0.4342, 0.4018]],
        [[0.2781, 0.1791, 0.1686,  ..., 0.2674, 0.2090, 0.1298],
         [0.2263, 0.4504, 0.6045,  ..., 0.3573, 0.3605, 0.1633],
         [0.2263, 0.1791, 0.1135,  ..., 0.1877, 0.2216, 0.0838],
         [0.2694, 0.1915, 0.1135,  ..., 0.1877, 0.2090, 0.6232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:14,059 [Process: 0] Synchronize training processes
2024-08-16 11:05:14,059 [Process: 0] Evaluating...
2024-08-16 11:05:14,061 [Process: 0] EPOCH 40:
2024-08-16 11:05:14,063 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2442, 0.2275, 0.2236,  ..., 0.2267, 0.2458, 0.2422],
         [0.2496, 0.2244, 0.2437,  ..., 0.2483, 0.2523, 0.2422],
         [0.2442, 0.2115, 0.2236,  ..., 0.2267, 0.2458, 0.2422],
         [0.2621, 0.3366, 0.3091,  ..., 0.2983, 0.2562, 0.2734]],
        [[0.2164, 0.2107, 0.2443,  ..., 0.2017, 0.2500, 0.2155],
         [0.2549, 0.2648, 0.2443,  ..., 0.2245, 0.2500, 0.2418],
         [0.2164, 0.2107, 0.2443,  ..., 0.2017, 0.2500, 0.2155],
         [0.3122, 0.3138, 0.2672,  ..., 0.3720, 0.2500, 0.3271]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5473, 0.1529, 0.1652,  ..., 0.4568, 0.1718, 0.2589],
         [0.1348, 0.1529, 0.3637,  ..., 0.1490, 0.1718, 0.2546],
         [0.1348, 0.5413, 0.3060,  ..., 0.1325, 0.4845, 0.2433],
         [0.1832, 0.1529, 0.1652,  ..., 0.2617, 0.1718, 0.2433]],
        [[0.2158, 0.2402, 0.2500,  ..., 0.1717, 0.1825, 0.5899],
         [0.3526, 0.2795, 0.2500,  ..., 0.4410, 0.1825, 0.2063],
         [0.2158, 0.2402, 0.2500,  ..., 0.2156, 0.1825, 0.0709],
         [0.2158, 0.2402, 0.2500,  ..., 0.1717, 0.4524, 0.1329]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:16,017 [Process: 0] Synchronize training processes
2024-08-16 11:05:16,018 [Process: 0] Evaluating...
2024-08-16 11:05:16,020 [Process: 0] EPOCH 41:
2024-08-16 11:05:16,022 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2140, 0.2052, 0.2257,  ..., 0.2313, 0.2391, 0.2363],
         [0.2140, 0.2553, 0.2366,  ..., 0.2515, 0.2391, 0.2476],
         [0.2140, 0.2052, 0.2257,  ..., 0.2313, 0.2391, 0.2363],
         [0.3581, 0.3343, 0.3120,  ..., 0.2859, 0.2826, 0.2798]],
        [[0.1853, 0.2144, 0.2255,  ..., 0.2451, 0.2027, 0.2173],
         [0.1915, 0.2176, 0.2255,  ..., 0.2628, 0.2604, 0.2173],
         [0.1853, 0.2144, 0.2255,  ..., 0.2451, 0.2027, 0.2173],
         [0.4378, 0.3537, 0.3236,  ..., 0.2471, 0.3342, 0.3481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1712, 0.2206, 0.2444,  ..., 0.1690, 0.1829, 0.3086],
         [0.2061, 0.1788, 0.2616,  ..., 0.2414, 0.2559, 0.0790],
         [0.1712, 0.1788, 0.1407,  ..., 0.1577, 0.1829, 0.5333],
         [0.4514, 0.4219, 0.3532,  ..., 0.4319, 0.3784, 0.0790]],
        [[0.2500, 0.2477, 0.2957,  ..., 0.2577, 0.2238, 0.2267],
         [0.2500, 0.2570, 0.2081,  ..., 0.1895, 0.3287, 0.3198],
         [0.2500, 0.2477, 0.1458,  ..., 0.3159, 0.2238, 0.1846],
         [0.2500, 0.2477, 0.3504,  ..., 0.2369, 0.2238, 0.2689]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:18,070 [Process: 0] Synchronize training processes
2024-08-16 11:05:18,070 [Process: 0] Evaluating...
2024-08-16 11:05:18,072 [Process: 0] EPOCH 42:
2024-08-16 11:05:18,074 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2044, 0.2310, 0.2362,  ..., 0.2365, 0.2297, 0.2284],
         [0.2044, 0.2310, 0.2645,  ..., 0.2365, 0.2716, 0.2711],
         [0.2044, 0.2310, 0.1982,  ..., 0.2365, 0.2297, 0.2284],
         [0.3869, 0.3070, 0.3011,  ..., 0.2904, 0.2689, 0.2720]],
        [[0.2048, 0.2252, 0.2389,  ..., 0.2477, 0.2194, 0.1988],
         [0.2048, 0.1933, 0.2389,  ..., 0.2477, 0.2194, 0.2082],
         [0.2048, 0.1933, 0.2389,  ..., 0.2477, 0.2194, 0.1988],
         [0.3855, 0.3882, 0.2834,  ..., 0.2569, 0.3417, 0.3942]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2351, 0.1390, 0.4102,  ..., 0.4045, 0.2291, 0.2137],
         [0.4102, 0.4846, 0.1966,  ..., 0.3373, 0.2467, 0.1371],
         [0.2130, 0.1390, 0.1966,  ..., 0.1291, 0.3245, 0.5121],
         [0.1417, 0.2373, 0.1966,  ..., 0.1291, 0.1997, 0.1371]],
        [[0.2277, 0.2223, 0.5041,  ..., 0.1089, 0.2377, 0.2320],
         [0.2990, 0.2223, 0.2305,  ..., 0.1089, 0.4551, 0.3039],
         [0.2456, 0.3332, 0.1466,  ..., 0.1089, 0.1536, 0.2320],
         [0.2277, 0.2223, 0.1189,  ..., 0.6732, 0.1536, 0.2320]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:20,096 [Process: 0] Synchronize training processes
2024-08-16 11:05:20,096 [Process: 0] Evaluating...
2024-08-16 11:05:20,098 [Process: 0] EPOCH 43:
2024-08-16 11:05:20,100 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2177, 0.2249, 0.2321,  ..., 0.2291, 0.2254, 0.2257],
         [0.2482, 0.2327, 0.2321,  ..., 0.2814, 0.2254, 0.2257],
         [0.2097, 0.2217, 0.2321,  ..., 0.2036, 0.2254, 0.2257],
         [0.3244, 0.3206, 0.3037,  ..., 0.2859, 0.3237, 0.3230]],
        [[0.2397, 0.2163, 0.2218,  ..., 0.2067, 0.2188, 0.2290],
         [0.2397, 0.2163, 0.2218,  ..., 0.2633, 0.2756, 0.2290],
         [0.2397, 0.2163, 0.2218,  ..., 0.2067, 0.2188, 0.2290],
         [0.2810, 0.3512, 0.3346,  ..., 0.3234, 0.2868, 0.3130]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2599, 0.2500, 0.2500,  ..., 0.2478, 0.2500, 0.2387],
         [0.2548, 0.2500, 0.2500,  ..., 0.2567, 0.2500, 0.2839],
         [0.2137, 0.2500, 0.2500,  ..., 0.2478, 0.2500, 0.2387],
         [0.2715, 0.2500, 0.2500,  ..., 0.2478, 0.2500, 0.2387]],
        [[0.1943, 0.2446, 0.3723,  ..., 0.1979, 0.2199, 0.2466],
         [0.4171, 0.2072, 0.2767,  ..., 0.1876, 0.3428, 0.2923],
         [0.1943, 0.2072, 0.1755,  ..., 0.1876, 0.1949, 0.1731],
         [0.1943, 0.3409, 0.1755,  ..., 0.4268, 0.2424, 0.2879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:22,101 [Process: 0] Synchronize training processes
2024-08-16 11:05:22,101 [Process: 0] Evaluating...
2024-08-16 11:05:22,103 [Process: 0] EPOCH 44:
2024-08-16 11:05:22,105 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2271, 0.2551, 0.2334,  ..., 0.2349, 0.2038, 0.2112],
         [0.2258, 0.2343, 0.2334,  ..., 0.2349, 0.2038, 0.2112],
         [0.2258, 0.2343, 0.2334,  ..., 0.2349, 0.2038, 0.2112],
         [0.3214, 0.2764, 0.2999,  ..., 0.2953, 0.3887, 0.3663]],
        [[0.2197, 0.2101, 0.2089,  ..., 0.1867, 0.2024, 0.2075],
         [0.2759, 0.2111, 0.2534,  ..., 0.2292, 0.2024, 0.2983],
         [0.2197, 0.2101, 0.2089,  ..., 0.1867, 0.2024, 0.2075],
         [0.2847, 0.3688, 0.3287,  ..., 0.3974, 0.3928, 0.2868]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1944, 0.0977, 0.2113,  ..., 0.2500, 0.2500, 0.2500],
         [0.1944, 0.0977, 0.2113,  ..., 0.2500, 0.2500, 0.2500],
         [0.4169, 0.6067, 0.3547,  ..., 0.2500, 0.2500, 0.2500],
         [0.1944, 0.1979, 0.2227,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.0697, 0.1748, 0.0893,  ..., 0.1424, 0.5782, 0.2500],
         [0.0628, 0.1740, 0.5849,  ..., 0.1539, 0.1524, 0.2500],
         [0.0587, 0.1566, 0.2061,  ..., 0.1424, 0.1347, 0.2500],
         [0.8089, 0.4946, 0.1197,  ..., 0.5613, 0.1347, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:24,163 [Process: 0] Synchronize training processes
2024-08-16 11:05:24,163 [Process: 0] Evaluating...
2024-08-16 11:05:24,165 [Process: 0] EPOCH 45:
2024-08-16 11:05:24,167 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2260, 0.2394, 0.2388,  ..., 0.2164, 0.2282, 0.2239],
         [0.2260, 0.2430, 0.2641,  ..., 0.2164, 0.2282, 0.2239],
         [0.2260, 0.2394, 0.2388,  ..., 0.2164, 0.2282, 0.2239],
         [0.3221, 0.2782, 0.2584,  ..., 0.3509, 0.3154, 0.3282]],
        [[0.2048, 0.2151, 0.2016,  ..., 0.2232, 0.2168, 0.2144],
         [0.2048, 0.2231, 0.2016,  ..., 0.2232, 0.2168, 0.2048],
         [0.2059, 0.2230, 0.2016,  ..., 0.2274, 0.2168, 0.1678],
         [0.3845, 0.3388, 0.3953,  ..., 0.3263, 0.3495, 0.4131]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2725, 0.2500, 0.3412,  ..., 0.2500, 0.2904, 0.5449],
         [0.1997, 0.2500, 0.1390,  ..., 0.2500, 0.2365, 0.1038],
         [0.3281, 0.2500, 0.3808,  ..., 0.2500, 0.2365, 0.2476],
         [0.1997, 0.2500, 0.1390,  ..., 0.2500, 0.2365, 0.1038]],
        [[0.1909, 0.2763, 0.2187,  ..., 0.1858, 0.1276, 0.0731],
         [0.1860, 0.1673, 0.1451,  ..., 0.1858, 0.1276, 0.2096],
         [0.1103, 0.3858, 0.3748,  ..., 0.1858, 0.6065, 0.4221],
         [0.5129, 0.1705, 0.2613,  ..., 0.4427, 0.1382, 0.2952]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:26,132 [Process: 0] Synchronize training processes
2024-08-16 11:05:26,132 [Process: 0] Evaluating...
2024-08-16 11:05:26,134 [Process: 0] EPOCH 46:
2024-08-16 11:05:26,136 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2292, 0.2250, 0.2690,  ..., 0.2364, 0.2373, 0.2103],
         [0.2666, 0.2689, 0.2560,  ..., 0.2364, 0.2553, 0.2103],
         [0.2292, 0.2188, 0.1995,  ..., 0.2364, 0.2373, 0.2103],
         [0.2750, 0.2873, 0.2755,  ..., 0.2908, 0.2700, 0.3691]],
        [[0.1898, 0.2243, 0.2064,  ..., 0.2150, 0.2133, 0.1877],
         [0.2448, 0.2243, 0.2131,  ..., 0.2344, 0.2248, 0.2164],
         [0.1898, 0.2261, 0.2064,  ..., 0.2150, 0.2133, 0.1877],
         [0.3757, 0.3253, 0.3741,  ..., 0.3355, 0.3485, 0.4082]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2310, 0.3941, 0.2243,  ..., 0.1692, 0.1165, 0.2281],
         [0.2310, 0.1484, 0.2112,  ..., 0.1692, 0.0948, 0.2281],
         [0.3071, 0.3091, 0.3408,  ..., 0.4666, 0.6939, 0.3157],
         [0.2310, 0.1484, 0.2236,  ..., 0.1950, 0.0948, 0.2281]],
        [[0.2494, 0.2409, 0.4575,  ..., 0.1920, 0.1626, 0.2411],
         [0.4659, 0.1285, 0.1638,  ..., 0.3531, 0.2850, 0.2411],
         [0.0880, 0.0719, 0.1638,  ..., 0.1920, 0.1403, 0.2411],
         [0.1967, 0.5587, 0.2150,  ..., 0.2630, 0.4121, 0.2768]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:28,124 [Process: 0] Synchronize training processes
2024-08-16 11:05:28,124 [Process: 0] Evaluating...
2024-08-16 11:05:28,126 [Process: 0] EPOCH 47:
2024-08-16 11:05:28,128 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1882, 0.2293, 0.2454,  ..., 0.2238, 0.2262, 0.2089],
         [0.2083, 0.2293, 0.2454,  ..., 0.2238, 0.2217, 0.2058],
         [0.1879, 0.2293, 0.2454,  ..., 0.2238, 0.2217, 0.2058],
         [0.4155, 0.3121, 0.2638,  ..., 0.3285, 0.3304, 0.3795]],
        [[0.2423, 0.2217, 0.2303,  ..., 0.2129, 0.2360, 0.2185],
         [0.2731, 0.2217, 0.2690,  ..., 0.3030, 0.2828, 0.2721],
         [0.2423, 0.2217, 0.2303,  ..., 0.2129, 0.2360, 0.2185],
         [0.2423, 0.3350, 0.2703,  ..., 0.2712, 0.2453, 0.2909]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1618, 0.2103, 0.2665,  ..., 0.0485, 0.3090, 0.1807],
         [0.1618, 0.0901, 0.2467,  ..., 0.0485, 0.1741, 0.1561],
         [0.5146, 0.1870, 0.2898,  ..., 0.5926, 0.1981, 0.2511],
         [0.1618, 0.5127, 0.1969,  ..., 0.3103, 0.3188, 0.4121]],
        [[0.2131, 0.4885, 0.2326,  ..., 0.2612, 0.2500, 0.2500],
         [0.3314, 0.1705, 0.2326,  ..., 0.2463, 0.2500, 0.2500],
         [0.2424, 0.1705, 0.3021,  ..., 0.2463, 0.2500, 0.2500],
         [0.2131, 0.1705, 0.2326,  ..., 0.2463, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:30,072 [Process: 0] Synchronize training processes
2024-08-16 11:05:30,073 [Process: 0] Evaluating...
2024-08-16 11:05:30,075 [Process: 0] EPOCH 48:
2024-08-16 11:05:30,077 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2250, 0.2038, 0.2167,  ..., 0.2390, 0.2446, 0.2370],
         [0.2283, 0.2038, 0.2167,  ..., 0.2390, 0.2446, 0.2370],
         [0.2250, 0.2038, 0.2167,  ..., 0.2390, 0.2446, 0.2370],
         [0.3216, 0.3885, 0.3499,  ..., 0.2829, 0.2661, 0.2891]],
        [[0.2449, 0.2159, 0.2473,  ..., 0.2322, 0.2106, 0.2244],
         [0.2654, 0.2159, 0.2582,  ..., 0.2322, 0.2106, 0.2244],
         [0.2449, 0.2159, 0.2473,  ..., 0.2322, 0.2106, 0.2244],
         [0.2449, 0.3522, 0.2473,  ..., 0.3035, 0.3682, 0.3268]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2466, 0.2505, 0.2500,  ..., 0.2928, 0.2290, 0.2500],
         [0.2212, 0.4449, 0.2500,  ..., 0.2739, 0.3141, 0.2500],
         [0.3110, 0.1523, 0.2500,  ..., 0.2166, 0.3593, 0.2500],
         [0.2212, 0.1523, 0.2500,  ..., 0.2166, 0.0977, 0.2500]],
        [[0.1341, 0.1789, 0.2287,  ..., 0.1569, 0.2713, 0.2181],
         [0.1275, 0.2977, 0.3139,  ..., 0.5293, 0.1599, 0.2181],
         [0.4293, 0.1072, 0.2287,  ..., 0.1569, 0.2850, 0.2674],
         [0.3091, 0.4163, 0.2287,  ..., 0.1569, 0.2838, 0.2965]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:32,115 [Process: 0] Synchronize training processes
2024-08-16 11:05:32,115 [Process: 0] Evaluating...
2024-08-16 11:05:32,117 [Process: 0] EPOCH 49:
2024-08-16 11:05:32,119 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2169, 0.2189,  ..., 0.2428, 0.2376, 0.2192],
         [0.2500, 0.2169, 0.2189,  ..., 0.2620, 0.2464, 0.2192],
         [0.2500, 0.2169, 0.2189,  ..., 0.2428, 0.2376, 0.2192],
         [0.2500, 0.3493, 0.3434,  ..., 0.2525, 0.2784, 0.3424]],
        [[0.2428, 0.2152, 0.1894,  ..., 0.2048, 0.2100, 0.2315],
         [0.2428, 0.2152, 0.2503,  ..., 0.2587, 0.2351, 0.2466],
         [0.2428, 0.2152, 0.1894,  ..., 0.2048, 0.2100, 0.2315],
         [0.2716, 0.3544, 0.3708,  ..., 0.3317, 0.3449, 0.2904]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2390, 0.2162, 0.2346,  ..., 0.2179, 0.3207, 0.2294],
         [0.2924, 0.3198, 0.3891,  ..., 0.3133, 0.2390, 0.3722],
         [0.2456, 0.2477, 0.1949,  ..., 0.2179, 0.2391, 0.2317],
         [0.2230, 0.2162, 0.1815,  ..., 0.2510, 0.2012, 0.1667]],
        [[0.1580, 0.1894, 0.2430,  ..., 0.1999, 0.1402, 0.1928],
         [0.1580, 0.1894, 0.2430,  ..., 0.2256, 0.1210, 0.1928],
         [0.1580, 0.1894, 0.2430,  ..., 0.1999, 0.1210, 0.1928],
         [0.5261, 0.4317, 0.2709,  ..., 0.3745, 0.6178, 0.4215]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:34,149 [Process: 0] Synchronize training processes
2024-08-16 11:05:34,149 [Process: 0] Evaluating...
2024-08-16 11:05:34,151 [Process: 0] EPOCH 50:
2024-08-16 11:05:34,153 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2375, 0.2200, 0.2224,  ..., 0.2645, 0.2254, 0.2217],
         [0.2375, 0.2255, 0.2774,  ..., 0.2162, 0.2586, 0.2217],
         [0.2375, 0.2200, 0.2203,  ..., 0.2105, 0.2254, 0.2217],
         [0.2875, 0.3346, 0.2799,  ..., 0.3087, 0.2907, 0.3348]],
        [[0.2176, 0.2345, 0.2500,  ..., 0.2157, 0.2251, 0.2266],
         [0.2176, 0.2402, 0.2500,  ..., 0.2594, 0.2447, 0.2266],
         [0.2176, 0.2345, 0.2500,  ..., 0.2157, 0.2251, 0.2266],
         [0.3473, 0.2908, 0.2500,  ..., 0.3093, 0.3051, 0.3202]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1427, 0.2309, 0.1741,  ..., 0.5023, 0.4559, 0.3769],
         [0.1427, 0.3607, 0.1741,  ..., 0.1527, 0.3330, 0.1917],
         [0.3740, 0.2647, 0.3688,  ..., 0.1924, 0.1056, 0.1917],
         [0.3406, 0.1437, 0.2831,  ..., 0.1527, 0.1056, 0.2397]],
        [[0.1594, 0.1966, 0.1612,  ..., 0.1553, 0.1738, 0.1200],
         [0.1594, 0.1966, 0.1612,  ..., 0.1309, 0.1738, 0.1200],
         [0.3717, 0.4103, 0.5165,  ..., 0.3263, 0.2091, 0.1445],
         [0.3095, 0.1966, 0.1612,  ..., 0.3876, 0.4434, 0.6155]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:36,154 [Process: 0] Synchronize training processes
2024-08-16 11:05:36,155 [Process: 0] Evaluating...
2024-08-16 11:05:36,157 [Process: 0] EPOCH 51:
2024-08-16 11:05:36,158 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2225, 0.2492, 0.2438,  ..., 0.2265, 0.2457, 0.2296],
         [0.2225, 0.2492, 0.2438,  ..., 0.2265, 0.2472, 0.2296],
         [0.2225, 0.2492, 0.2438,  ..., 0.2265, 0.2457, 0.2296],
         [0.3325, 0.2525, 0.2687,  ..., 0.3205, 0.2613, 0.3111]],
        [[0.2225, 0.2376, 0.2194,  ..., 0.2056, 0.2065, 0.2070],
         [0.2225, 0.2488, 0.2194,  ..., 0.2056, 0.2017, 0.2512],
         [0.2225, 0.2376, 0.2194,  ..., 0.2056, 0.2017, 0.2070],
         [0.3324, 0.2760, 0.3419,  ..., 0.3831, 0.3902, 0.3348]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1324, 0.1835, 0.1919,  ..., 0.2145, 0.2182, 0.2163],
         [0.6346, 0.3121, 0.3094,  ..., 0.3901, 0.3038, 0.3866],
         [0.1165, 0.2363, 0.1919,  ..., 0.1977, 0.2532, 0.2305],
         [0.1165, 0.2682, 0.3068,  ..., 0.1977, 0.2249, 0.1666]],
        [[0.2500, 0.3108, 0.1650,  ..., 0.1049, 0.2355, 0.1423],
         [0.2500, 0.1616, 0.1983,  ..., 0.1049, 0.2275, 0.0875],
         [0.2500, 0.1616, 0.0965,  ..., 0.4122, 0.2275, 0.0875],
         [0.2500, 0.3661, 0.5403,  ..., 0.3781, 0.3096, 0.6827]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:38,101 [Process: 0] Synchronize training processes
2024-08-16 11:05:38,102 [Process: 0] Evaluating...
2024-08-16 11:05:38,104 [Process: 0] EPOCH 52:
2024-08-16 11:05:38,106 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2368, 0.2381, 0.2262,  ..., 0.2433, 0.2382, 0.2266],
         [0.2368, 0.2478, 0.2600,  ..., 0.2433, 0.2382, 0.2322],
         [0.2368, 0.2381, 0.2262,  ..., 0.2433, 0.2382, 0.2266],
         [0.2895, 0.2760, 0.2875,  ..., 0.2702, 0.2854, 0.3146]],
        [[0.2069, 0.2426, 0.2385,  ..., 0.2138, 0.1962, 0.2500],
         [0.2069, 0.2426, 0.2385,  ..., 0.2138, 0.1962, 0.2500],
         [0.2069, 0.2426, 0.2385,  ..., 0.2138, 0.1962, 0.2500],
         [0.3792, 0.2721, 0.2845,  ..., 0.3587, 0.4113, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4165, 0.1926, 0.2734,  ..., 0.2578, 0.2586, 0.3856],
         [0.0974, 0.5004, 0.1730,  ..., 0.7180, 0.3235, 0.1510],
         [0.2986, 0.2087, 0.3217,  ..., 0.0121, 0.2889, 0.2983],
         [0.1875, 0.0983, 0.2318,  ..., 0.0121, 0.1290, 0.1651]],
        [[0.2012, 0.2500, 0.1761,  ..., 0.2265, 0.2500, 0.2318],
         [0.2427, 0.2500, 0.2767,  ..., 0.2265, 0.2500, 0.2801],
         [0.2012, 0.2500, 0.1761,  ..., 0.2265, 0.2500, 0.2318],
         [0.3549, 0.2500, 0.3711,  ..., 0.3204, 0.2500, 0.2563]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:40,007 [Process: 0] Synchronize training processes
2024-08-16 11:05:40,007 [Process: 0] Evaluating...
2024-08-16 11:05:40,009 [Process: 0] EPOCH 53:
2024-08-16 11:05:40,011 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2064, 0.2216, 0.2039,  ..., 0.2126, 0.2110, 0.2229],
         [0.2166, 0.2380, 0.2307,  ..., 0.2126, 0.2254, 0.2229],
         [0.2064, 0.2216, 0.2039,  ..., 0.2126, 0.2110, 0.2229],
         [0.3707, 0.3189, 0.3615,  ..., 0.3623, 0.3525, 0.3312]],
        [[0.2157, 0.2300, 0.1983,  ..., 0.2376, 0.2303, 0.2031],
         [0.2225, 0.2359, 0.2197,  ..., 0.2376, 0.2558, 0.2472],
         [0.1920, 0.2300, 0.1983,  ..., 0.2376, 0.2303, 0.2031],
         [0.3699, 0.3040, 0.3838,  ..., 0.2872, 0.2836, 0.3465]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4411, 0.1824, 0.0982,  ..., 0.2062, 0.1926, 0.1072],
         [0.2297, 0.1408, 0.1210,  ..., 0.1133, 0.1227, 0.2832],
         [0.1009, 0.5360, 0.5992,  ..., 0.4488, 0.5497, 0.4037],
         [0.2283, 0.1408, 0.1816,  ..., 0.2317, 0.1350, 0.2059]],
        [[0.2089, 0.4397, 0.2204,  ..., 0.3496, 0.4766, 0.2500],
         [0.2089, 0.3628, 0.3389,  ..., 0.2168, 0.1745, 0.2500],
         [0.3734, 0.0987, 0.2204,  ..., 0.2168, 0.1745, 0.2500],
         [0.2089, 0.0987, 0.2204,  ..., 0.2168, 0.1745, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:41,988 [Process: 0] Synchronize training processes
2024-08-16 11:05:41,989 [Process: 0] Evaluating...
2024-08-16 11:05:41,991 [Process: 0] EPOCH 54:
2024-08-16 11:05:41,993 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2340, 0.1943, 0.2030,  ..., 0.2081, 0.2058, 0.2163],
         [0.2682, 0.2167, 0.2548,  ..., 0.2378, 0.2593, 0.2312],
         [0.2340, 0.1943, 0.2030,  ..., 0.2081, 0.2058, 0.2163],
         [0.2637, 0.3947, 0.3391,  ..., 0.3459, 0.3291, 0.3362]],
        [[0.2329, 0.2422, 0.2069,  ..., 0.2020, 0.2471, 0.2367],
         [0.2329, 0.2690, 0.2436,  ..., 0.2089, 0.2586, 0.2367],
         [0.2329, 0.2422, 0.2069,  ..., 0.2020, 0.2471, 0.2367],
         [0.3014, 0.2467, 0.3426,  ..., 0.3871, 0.2471, 0.2899]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.6473, 0.2269, 0.1845,  ..., 0.1646, 0.2160, 0.2920],
         [0.1571, 0.2269, 0.3334,  ..., 0.0798, 0.2160, 0.2361],
         [0.1020, 0.3194, 0.3915,  ..., 0.6757, 0.3519, 0.2360],
         [0.0936, 0.2269, 0.0906,  ..., 0.0798, 0.2160, 0.2360]],
        [[0.2645, 0.2552, 0.1598,  ..., 0.1246, 0.2288, 0.1238],
         [0.2407, 0.2293, 0.2968,  ..., 0.4589, 0.1855, 0.5991],
         [0.2541, 0.2648, 0.1598,  ..., 0.0568, 0.0862, 0.1298],
         [0.2407, 0.2508, 0.3836,  ..., 0.3597, 0.4995, 0.1473]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:43,951 [Process: 0] Synchronize training processes
2024-08-16 11:05:43,951 [Process: 0] Evaluating...
2024-08-16 11:05:43,953 [Process: 0] EPOCH 55:
2024-08-16 11:05:43,955 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2256, 0.2165, 0.2500,  ..., 0.2500, 0.2298, 0.2410],
         [0.2256, 0.2165, 0.2500,  ..., 0.2500, 0.2298, 0.2410],
         [0.2256, 0.2165, 0.2500,  ..., 0.2500, 0.2298, 0.2410],
         [0.3233, 0.3505, 0.2500,  ..., 0.2500, 0.3105, 0.2770]],
        [[0.1835, 0.1953, 0.2063,  ..., 0.2237, 0.2500, 0.2190],
         [0.1835, 0.1953, 0.2063,  ..., 0.2237, 0.2500, 0.2190],
         [0.1835, 0.1953, 0.2063,  ..., 0.2237, 0.2500, 0.2190],
         [0.4496, 0.4141, 0.3810,  ..., 0.3290, 0.2500, 0.3429]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1628, 0.1002, 0.0898,  ..., 0.1877, 0.0849, 0.3384],
         [0.2299, 0.5643, 0.2333,  ..., 0.3106, 0.1757, 0.3207],
         [0.3651, 0.2185, 0.4730,  ..., 0.1877, 0.6379, 0.1850],
         [0.2423, 0.1170, 0.2040,  ..., 0.3139, 0.1015, 0.1559]],
        [[0.2500, 0.0954, 0.3485,  ..., 0.1930, 0.2500, 0.2500],
         [0.2500, 0.0794, 0.1130,  ..., 0.1930, 0.2500, 0.2500],
         [0.2500, 0.7457, 0.1130,  ..., 0.4209, 0.2500, 0.2500],
         [0.2500, 0.0794, 0.4255,  ..., 0.1930, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:45,934 [Process: 0] Synchronize training processes
2024-08-16 11:05:45,935 [Process: 0] Evaluating...
2024-08-16 11:05:45,936 [Process: 0] EPOCH 56:
2024-08-16 11:05:45,938 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2388, 0.2341, 0.2088,  ..., 0.2319, 0.2462, 0.2261],
         [0.2443, 0.2341, 0.2310,  ..., 0.2319, 0.2615, 0.2261],
         [0.2388, 0.2341, 0.2088,  ..., 0.2319, 0.2462, 0.2261],
         [0.2780, 0.2976, 0.3515,  ..., 0.3044, 0.2462, 0.3217]],
        [[0.2250, 0.2344, 0.2332,  ..., 0.2500, 0.2471, 0.1820],
         [0.2250, 0.2344, 0.2332,  ..., 0.2500, 0.2471, 0.2009],
         [0.2250, 0.2344, 0.2332,  ..., 0.2500, 0.2471, 0.1820],
         [0.3250, 0.2968, 0.3004,  ..., 0.2500, 0.2588, 0.4352]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2189, 0.7075, 0.3809,  ..., 0.1685, 0.3259, 0.2118],
         [0.3432, 0.1348, 0.2064,  ..., 0.5244, 0.3318, 0.3638],
         [0.2189, 0.0788, 0.2064,  ..., 0.1535, 0.1711, 0.1981],
         [0.2189, 0.0788, 0.2064,  ..., 0.1535, 0.1711, 0.2263]],
        [[0.2278, 0.1750, 0.1760,  ..., 0.2357, 0.1688, 0.2480],
         [0.2278, 0.2017, 0.1760,  ..., 0.2019, 0.1688, 0.2561],
         [0.2641, 0.1083, 0.3045,  ..., 0.2019, 0.4935, 0.2480],
         [0.2803, 0.5151, 0.3436,  ..., 0.3606, 0.1688, 0.2480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:05:47,845 [Process: 0] Synchronize training processes
2024-08-16 11:05:47,846 [Process: 0] Evaluating...
2024-08-16 11:05:47,848 [Process: 0] EPOCH 57:
2024-08-16 11:05:47,850 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2354, 0.2322, 0.2221,  ..., 0.2275, 0.2347, 0.2477],
         [0.2530, 0.2322, 0.2221,  ..., 0.2415, 0.2347, 0.2477],
         [0.2354, 0.2322, 0.2221,  ..., 0.2275, 0.2347, 0.2477],
         [0.2762, 0.3033, 0.3336,  ..., 0.3035, 0.2958, 0.2568]],
        [[0.2237, 0.1934, 0.2464,  ..., 0.2125, 0.2399, 0.2474],
         [0.2237, 0.1934, 0.2542,  ..., 0.2125, 0.2594, 0.2431],
         [0.2237, 0.1934, 0.1726,  ..., 0.2125, 0.2399, 0.2074],
         [0.3288, 0.4197, 0.3268,  ..., 0.3626, 0.2608, 0.3021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5630, 0.0554, 0.3406,  ..., 0.4864, 0.3412, 0.2500],
         [0.1792, 0.1236, 0.1589,  ..., 0.1712, 0.2012, 0.2500],
         [0.1289, 0.0554, 0.3415,  ..., 0.1712, 0.2012, 0.2500],
         [0.1289, 0.7656, 0.1589,  ..., 0.1712, 0.2563, 0.2500]],
        [[0.2456, 0.3549, 0.2088,  ..., 0.3595, 0.0689, 0.0943],
         [0.2066, 0.2681, 0.1797,  ..., 0.3157, 0.1974, 0.5045],
         [0.3069, 0.1612, 0.2525,  ..., 0.0943, 0.4749, 0.3069],
         [0.2408, 0.2158, 0.3590,  ..., 0.2305, 0.2589, 0.0943]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 11:05:49,747 [Process: 0] Synchronize training processes
2024-08-16 11:05:49,748 [Process: 0] Evaluating...
2024-08-16 11:05:49,750 [Process: 0] EPOCH 58:
2024-08-16 11:05:49,752 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2347, 0.2236, 0.2676,  ..., 0.2377, 0.2163, 0.2214],
         [0.2347, 0.2403, 0.2189,  ..., 0.2092, 0.2208, 0.2123],
         [0.2347, 0.2236, 0.2189,  ..., 0.1959, 0.2163, 0.2084],
         [0.2959, 0.3125, 0.2946,  ..., 0.3572, 0.3466, 0.3579]],
        [[0.2500, 0.2086, 0.2381,  ..., 0.2312, 0.2196, 0.2011],
         [0.2500, 0.2744, 0.2381,  ..., 0.2312, 0.2640, 0.2011],
         [0.2500, 0.2086, 0.2381,  ..., 0.2312, 0.2196, 0.2011],
         [0.2500, 0.3085, 0.2858,  ..., 0.3065, 0.2967, 0.3966]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5644, 0.3860, 0.3110,  ..., 0.6362, 0.1647, 0.4851],
         [0.2646, 0.2449, 0.2919,  ..., 0.1213, 0.1647, 0.2358],
         [0.0855, 0.1924, 0.1986,  ..., 0.1213, 0.5060, 0.1960],
         [0.0855, 0.1767, 0.1986,  ..., 0.1213, 0.1647, 0.0831]],
        [[0.1775, 0.1729, 0.1649,  ..., 0.1676, 0.2306, 0.1435],
         [0.1775, 0.1729, 0.1649,  ..., 0.1676, 0.2306, 0.1435],
         [0.4676, 0.1729, 0.1649,  ..., 0.1676, 0.2306, 0.1435],
         [0.1775, 0.4814, 0.5053,  ..., 0.4972, 0.3082, 0.5695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1945, 0.2131, 0.2227,  ..., 0.2168, 0.2384, 0.2197],
         [0.1945, 0.2328, 0.2584,  ..., 0.2612, 0.2384, 0.2559],
         [0.1945, 0.2131, 0.2227,  ..., 0.2168, 0.2384, 0.2197],
         [0.4165, 0.3409, 0.2962,  ..., 0.3051, 0.2849, 0.3046]],
        [[0.2343, 0.2316, 0.2500,  ..., 0.2078, 0.2500, 0.2145],
         [0.2608, 0.2316, 0.2500,  ..., 0.2078, 0.2500, 0.2384],
         [0.2343, 0.2343, 0.2500,  ..., 0.2078, 0.2500, 0.2145],
         [0.2706, 0.3025, 0.2500,  ..., 0.3767, 0.2500, 0.3326]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:05:51,660 [Process: 0] Synchronize training processes
2024-08-16 11:05:51,660 [Process: 0] Evaluating...
2024-08-16 11:05:51,662 [Process: 0] EPOCH 59:
2024-08-16 11:05:51,664 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1049, 0.1411, 0.1178,  ..., 0.1312, 0.3066, 0.2369],
         [0.0778, 0.2323, 0.4653,  ..., 0.3923, 0.1172, 0.2193],
         [0.7471, 0.4288, 0.2227,  ..., 0.1312, 0.1634, 0.2193],
         [0.0702, 0.1977, 0.1942,  ..., 0.3454, 0.4129, 0.3244]],
        [[0.2567, 0.1526, 0.2500,  ..., 0.2306, 0.5124, 0.1502],
         [0.2109, 0.1687, 0.2500,  ..., 0.1710, 0.1625, 0.1502],
         [0.2109, 0.5289, 0.2500,  ..., 0.1747, 0.1625, 0.5494],
         [0.3215, 0.1498, 0.2500,  ..., 0.4237, 0.1625, 0.1502]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2111, 0.2325, 0.2274,  ..., 0.2129, 0.2468, 0.2255],
         [0.2111, 0.2451, 0.2274,  ..., 0.2584, 0.2468, 0.2574],
         [0.2111, 0.2033, 0.2274,  ..., 0.2129, 0.2468, 0.2173],
         [0.3667, 0.3191, 0.3177,  ..., 0.3159, 0.2595, 0.2998]],
        [[0.2343, 0.2427, 0.2204,  ..., 0.2414, 0.2273, 0.2453],
         [0.2343, 0.2427, 0.2204,  ..., 0.2414, 0.2273, 0.2453],
         [0.2343, 0.2427, 0.2204,  ..., 0.2414, 0.2273, 0.2453],
         [0.2971, 0.2718, 0.3387,  ..., 0.2759, 0.3181, 0.2641]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:05:53,566 [Process: 0] Synchronize training processes
2024-08-16 11:05:53,567 [Process: 0] Evaluating...
2024-08-16 11:05:53,568 [Process: 0] EPOCH 60:
2024-08-16 11:05:53,570 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1755, 0.1969, 0.3370,  ..., 0.2223, 0.2500, 0.0781],
         [0.1755, 0.1969, 0.1567,  ..., 0.2223, 0.2500, 0.0781],
         [0.2558, 0.1969, 0.1567,  ..., 0.3331, 0.2500, 0.2244],
         [0.3931, 0.4094, 0.3497,  ..., 0.2223, 0.2500, 0.6194]],
        [[0.3020, 0.5038, 0.3404,  ..., 0.2413, 0.2715, 0.2584],
         [0.2431, 0.3240, 0.2134,  ..., 0.4283, 0.5328, 0.3151],
         [0.2680, 0.1075, 0.2349,  ..., 0.2516, 0.1008, 0.3555],
         [0.1869, 0.0646, 0.2112,  ..., 0.0788, 0.0949, 0.0710]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2441, 0.2436, 0.2325,  ..., 0.2305, 0.2344, 0.2256],
         [0.2441, 0.2606, 0.2325,  ..., 0.2305, 0.2344, 0.2256],
         [0.2441, 0.2436, 0.2325,  ..., 0.2305, 0.2344, 0.2256],
         [0.2678, 0.2522, 0.3024,  ..., 0.3086, 0.2969, 0.3232]],
        [[0.2407, 0.2070, 0.2086,  ..., 0.2186, 0.2357, 0.2330],
         [0.2462, 0.2841, 0.2162,  ..., 0.2186, 0.2492, 0.2330],
         [0.2407, 0.2070, 0.2086,  ..., 0.2186, 0.2357, 0.2330],
         [0.2724, 0.3018, 0.3667,  ..., 0.3443, 0.2795, 0.3010]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:05:55,468 [Process: 0] Synchronize training processes
2024-08-16 11:05:55,469 [Process: 0] Evaluating...
2024-08-16 11:05:55,471 [Process: 0] EPOCH 61:
2024-08-16 11:05:55,473 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2478, 0.3076, 0.2321,  ..., 0.2271, 0.2595, 0.2500],
         [0.2724, 0.2737, 0.3212,  ..., 0.3276, 0.3361, 0.2500],
         [0.2507, 0.2194, 0.2233,  ..., 0.2227, 0.2048, 0.2500],
         [0.2291, 0.1993, 0.2233,  ..., 0.2227, 0.1996, 0.2500]],
        [[0.1731, 0.2004, 0.2157,  ..., 0.2225, 0.1504, 0.1684],
         [0.1731, 0.2004, 0.2264,  ..., 0.2225, 0.1504, 0.1684],
         [0.1789, 0.2004, 0.2184,  ..., 0.2225, 0.1558, 0.1716],
         [0.4749, 0.3988, 0.3395,  ..., 0.3325, 0.5434, 0.4916]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2388, 0.2272, 0.2263,  ..., 0.1961, 0.2100, 0.2250],
         [0.2388, 0.2272, 0.2263,  ..., 0.2488, 0.2100, 0.2250],
         [0.2388, 0.2272, 0.2263,  ..., 0.1961, 0.2100, 0.2250],
         [0.2835, 0.3184, 0.3212,  ..., 0.3590, 0.3700, 0.3249]],
        [[0.2371, 0.2207, 0.2156,  ..., 0.1923, 0.2297, 0.1960],
         [0.2371, 0.2383, 0.2156,  ..., 0.2050, 0.2458, 0.2098],
         [0.2371, 0.2207, 0.2156,  ..., 0.1923, 0.2297, 0.1960],
         [0.2886, 0.3204, 0.3533,  ..., 0.4104, 0.2948, 0.3982]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:05:57,397 [Process: 0] Synchronize training processes
2024-08-16 11:05:57,397 [Process: 0] Evaluating...
2024-08-16 11:05:57,399 [Process: 0] EPOCH 62:
2024-08-16 11:05:57,401 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2170, 0.2012, 0.2500,  ..., 0.0886, 0.2258, 0.4170],
         [0.2822, 0.1052, 0.2500,  ..., 0.0886, 0.3114, 0.0611],
         [0.0826, 0.0932, 0.2500,  ..., 0.2494, 0.2263, 0.0904],
         [0.4182, 0.6003, 0.2500,  ..., 0.5734, 0.2364, 0.4315]],
        [[0.2500, 0.2355, 0.2270,  ..., 0.1848, 0.1915, 0.2830],
         [0.2500, 0.2936, 0.2270,  ..., 0.1848, 0.4210, 0.4901],
         [0.2500, 0.2355, 0.2270,  ..., 0.1848, 0.1915, 0.1135],
         [0.2500, 0.2355, 0.3191,  ..., 0.4457, 0.1959, 0.1135]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2142, 0.2413, 0.2357,  ..., 0.2115, 0.2257, 0.2355],
         [0.2597, 0.2422, 0.2709,  ..., 0.2577, 0.2668, 0.2425],
         [0.2142, 0.2413, 0.2357,  ..., 0.2097, 0.2257, 0.2355],
         [0.3118, 0.2753, 0.2578,  ..., 0.3211, 0.2818, 0.2865]],
        [[0.2483, 0.2350, 0.1835,  ..., 0.2339, 0.2014, 0.2124],
         [0.2483, 0.2350, 0.1835,  ..., 0.2339, 0.2205, 0.2204],
         [0.2483, 0.2350, 0.1835,  ..., 0.2339, 0.2014, 0.2124],
         [0.2552, 0.2949, 0.4495,  ..., 0.2982, 0.3768, 0.3549]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:05:59,314 [Process: 0] Synchronize training processes
2024-08-16 11:05:59,314 [Process: 0] Evaluating...
2024-08-16 11:05:59,316 [Process: 0] EPOCH 63:
2024-08-16 11:05:59,318 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2403, 0.2584, 0.2257,  ..., 0.2085, 0.2017, 0.2056],
         [0.2792, 0.2572, 0.3228,  ..., 0.2085, 0.3592, 0.3047],
         [0.2403, 0.2422, 0.2257,  ..., 0.2085, 0.2373, 0.2913],
         [0.2403, 0.2422, 0.2257,  ..., 0.3746, 0.2017, 0.1983]],
        [[0.3273, 0.1782, 0.2794,  ..., 0.4008, 0.2353, 0.3082],
         [0.2910, 0.2558, 0.3018,  ..., 0.2261, 0.2353, 0.3420],
         [0.1908, 0.1746, 0.2094,  ..., 0.1940, 0.2353, 0.1596],
         [0.1908, 0.3914, 0.2094,  ..., 0.1791, 0.2941, 0.1902]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2238, 0.2216, 0.2315,  ..., 0.2431, 0.2577, 0.2357],
         [0.2238, 0.2538, 0.2622,  ..., 0.2777, 0.2453, 0.2357],
         [0.2238, 0.2216, 0.2163,  ..., 0.2161, 0.2389, 0.2357],
         [0.3286, 0.3031, 0.2899,  ..., 0.2631, 0.2582, 0.2928]],
        [[0.2163, 0.2444, 0.2127,  ..., 0.2380, 0.1794, 0.2312],
         [0.2163, 0.2444, 0.2205,  ..., 0.2380, 0.2355, 0.2312],
         [0.2163, 0.2444, 0.2127,  ..., 0.2380, 0.1794, 0.2312],
         [0.3512, 0.2668, 0.3541,  ..., 0.2860, 0.4057, 0.3065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:01,228 [Process: 0] Synchronize training processes
2024-08-16 11:06:01,228 [Process: 0] Evaluating...
2024-08-16 11:06:01,230 [Process: 0] EPOCH 64:
2024-08-16 11:06:01,232 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2085, 0.1562, 0.2380,  ..., 0.4497, 0.2301, 0.3557],
         [0.3639, 0.1562, 0.1114,  ..., 0.1607, 0.3148, 0.2302],
         [0.2190, 0.1562, 0.0578,  ..., 0.1607, 0.2276, 0.2318],
         [0.2085, 0.5314, 0.5928,  ..., 0.2290, 0.2276, 0.1824]],
        [[0.2344, 0.2500, 0.2123,  ..., 0.1461, 0.2628, 0.1451],
         [0.2184, 0.2500, 0.2352,  ..., 0.1461, 0.1873, 0.1451],
         [0.3289, 0.2500, 0.2202,  ..., 0.5617, 0.1873, 0.2670],
         [0.2184, 0.2500, 0.3323,  ..., 0.1461, 0.3626, 0.4428]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2414, 0.2317, 0.2401,  ..., 0.2254, 0.2296, 0.2244],
         [0.2472, 0.2360, 0.2401,  ..., 0.2254, 0.2345, 0.2244],
         [0.2414, 0.2317, 0.2401,  ..., 0.2254, 0.2296, 0.2244],
         [0.2700, 0.3006, 0.2796,  ..., 0.3237, 0.3063, 0.3267]],
        [[0.2114, 0.2323, 0.2158,  ..., 0.1917, 0.2322, 0.2015],
         [0.2228, 0.2734, 0.2158,  ..., 0.1917, 0.2322, 0.2144],
         [0.2114, 0.2323, 0.2158,  ..., 0.1917, 0.2322, 0.2015],
         [0.3544, 0.2620, 0.3527,  ..., 0.4249, 0.3035, 0.3826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:03,163 [Process: 0] Synchronize training processes
2024-08-16 11:06:03,163 [Process: 0] Evaluating...
2024-08-16 11:06:03,165 [Process: 0] EPOCH 65:
2024-08-16 11:06:03,167 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1070, 0.1597, 0.1235,  ..., 0.1614, 0.2305, 0.1188],
         [0.2634, 0.1597, 0.1235,  ..., 0.1614, 0.2305, 0.4733],
         [0.5225, 0.3582, 0.6294,  ..., 0.5157, 0.3085, 0.2891],
         [0.1070, 0.3224, 0.1235,  ..., 0.1614, 0.2305, 0.1188]],
        [[0.3917, 0.2029, 0.3339,  ..., 0.2243, 0.4825, 0.3247],
         [0.2021, 0.6023, 0.2712,  ..., 0.2124, 0.2920, 0.2413],
         [0.1578, 0.0727, 0.1778,  ..., 0.2124, 0.0943, 0.1518],
         [0.2484, 0.1221, 0.2171,  ..., 0.3508, 0.1312, 0.2822]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2418, 0.2182, 0.2323,  ..., 0.2222, 0.2336, 0.2136],
         [0.2447, 0.2546, 0.2344,  ..., 0.2222, 0.2336, 0.2278],
         [0.2418, 0.2182, 0.2323,  ..., 0.2222, 0.2336, 0.2136],
         [0.2718, 0.3090, 0.3009,  ..., 0.3333, 0.2991, 0.3450]],
        [[0.1804, 0.2149, 0.2500,  ..., 0.1903, 0.2219, 0.2077],
         [0.2695, 0.2149, 0.2500,  ..., 0.2142, 0.2219, 0.2280],
         [0.1804, 0.2149, 0.2500,  ..., 0.1903, 0.2219, 0.2077],
         [0.3697, 0.3552, 0.2500,  ..., 0.4051, 0.3344, 0.3565]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:05,084 [Process: 0] Synchronize training processes
2024-08-16 11:06:05,085 [Process: 0] Evaluating...
2024-08-16 11:06:05,087 [Process: 0] EPOCH 66:
2024-08-16 11:06:05,089 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1072, 0.1138, 0.2139,  ..., 0.1731, 0.1773, 0.2928],
         [0.1072, 0.3259, 0.4252,  ..., 0.1731, 0.2706, 0.1858],
         [0.4643, 0.3805, 0.1805,  ..., 0.3159, 0.3748, 0.3357],
         [0.3214, 0.1799, 0.1805,  ..., 0.3380, 0.1773, 0.1858]],
        [[0.1491, 0.1778, 0.1919,  ..., 0.3522, 0.3118, 0.2500],
         [0.5240, 0.4405, 0.3483,  ..., 0.2183, 0.5284, 0.2500],
         [0.1779, 0.2039, 0.2680,  ..., 0.2784, 0.0758, 0.2500],
         [0.1491, 0.1778, 0.1919,  ..., 0.1511, 0.0840, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2080, 0.2290, 0.2310,  ..., 0.2457, 0.2324, 0.2403],
         [0.2106, 0.2290, 0.2033,  ..., 0.2611, 0.2246, 0.2403],
         [0.2017, 0.2290, 0.2033,  ..., 0.2079, 0.2021, 0.2403],
         [0.3797, 0.3130, 0.3623,  ..., 0.2852, 0.3409, 0.2791]],
        [[0.2024, 0.2500, 0.1949,  ..., 0.2469, 0.2258, 0.2486],
         [0.2182, 0.2500, 0.2215,  ..., 0.2469, 0.2611, 0.2486],
         [0.2024, 0.2500, 0.1949,  ..., 0.2469, 0.2258, 0.2486],
         [0.3770, 0.2500, 0.3887,  ..., 0.2594, 0.2874, 0.2541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:07,006 [Process: 0] Synchronize training processes
2024-08-16 11:06:07,007 [Process: 0] Evaluating...
2024-08-16 11:06:07,009 [Process: 0] EPOCH 67:
2024-08-16 11:06:07,011 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5551, 0.2307, 0.4518,  ..., 0.5053, 0.1244, 0.1692],
         [0.1448, 0.2134, 0.1782,  ..., 0.1649, 0.4221, 0.1155],
         [0.1448, 0.1630, 0.1782,  ..., 0.1649, 0.1050, 0.1155],
         [0.1554, 0.3928, 0.1919,  ..., 0.1649, 0.3484, 0.5998]],
        [[0.1099, 0.1949, 0.1681,  ..., 0.2016, 0.1058, 0.1738],
         [0.2134, 0.1949, 0.3415,  ..., 0.2016, 0.6074, 0.4353],
         [0.5668, 0.4152, 0.3444,  ..., 0.3952, 0.1809, 0.2172],
         [0.1099, 0.1949, 0.1459,  ..., 0.2016, 0.1058, 0.1738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2217, 0.2182, 0.2110,  ..., 0.1984, 0.2657, 0.2239],
         [0.2137, 0.2295, 0.2701,  ..., 0.1992, 0.2181, 0.2192],
         [0.2137, 0.2182, 0.2110,  ..., 0.1911, 0.2062, 0.2192],
         [0.3509, 0.3340, 0.3078,  ..., 0.4113, 0.3100, 0.3376]],
        [[0.2060, 0.2470, 0.2270,  ..., 0.2245, 0.2024, 0.2181],
         [0.2573, 0.2470, 0.2512,  ..., 0.2908, 0.2024, 0.2892],
         [0.2060, 0.2470, 0.2270,  ..., 0.2245, 0.2024, 0.2181],
         [0.3307, 0.2589, 0.2949,  ..., 0.2602, 0.3928, 0.2746]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:08,930 [Process: 0] Synchronize training processes
2024-08-16 11:06:08,930 [Process: 0] Evaluating...
2024-08-16 11:06:08,932 [Process: 0] EPOCH 68:
2024-08-16 11:06:08,934 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2500,  ..., 0.2662, 0.2500, 0.0546],
         [0.2500, 0.2500, 0.2500,  ..., 0.2446, 0.2500, 0.1190],
         [0.2500, 0.2500, 0.2500,  ..., 0.2446, 0.2500, 0.8077],
         [0.2500, 0.2500, 0.2500,  ..., 0.2446, 0.2500, 0.0187]],
        [[0.2557, 0.2086, 0.2720,  ..., 0.2156, 0.2152, 0.2979],
         [0.2953, 0.3227, 0.2457,  ..., 0.3008, 0.1776, 0.3076],
         [0.2245, 0.2701, 0.2157,  ..., 0.2680, 0.1418, 0.2042],
         [0.2245, 0.1986, 0.2666,  ..., 0.2156, 0.4654, 0.1904]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2263, 0.2368, 0.2198,  ..., 0.2287, 0.2391, 0.2428],
         [0.2263, 0.2482, 0.2479,  ..., 0.2522, 0.2391, 0.2428],
         [0.2263, 0.2368, 0.2198,  ..., 0.2287, 0.2391, 0.2428],
         [0.3211, 0.2782, 0.3124,  ..., 0.2905, 0.2828, 0.2715]],
        [[0.2079, 0.2110, 0.2411,  ..., 0.2223, 0.2355, 0.2327],
         [0.2079, 0.2110, 0.2515,  ..., 0.2223, 0.2355, 0.2327],
         [0.2079, 0.2110, 0.2411,  ..., 0.2223, 0.2355, 0.2327],
         [0.3762, 0.3670, 0.2664,  ..., 0.3331, 0.2934, 0.3018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 11:06:10,840 [Process: 0] Synchronize training processes
2024-08-16 11:06:10,840 [Process: 0] Evaluating...
2024-08-16 11:06:10,842 [Process: 0] EPOCH 69:
2024-08-16 11:06:10,844 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1315, 0.1785, 0.1275,  ..., 0.1789, 0.2160, 0.1996],
         [0.4181, 0.4646, 0.5991,  ..., 0.3329, 0.3436, 0.4012],
         [0.1315, 0.1785, 0.1275,  ..., 0.1789, 0.2160, 0.1996],
         [0.3189, 0.1785, 0.1459,  ..., 0.3092, 0.2244, 0.1996]],
        [[0.2256, 0.1041, 0.1514,  ..., 0.2159, 0.2516, 0.0895],
         [0.2256, 0.1041, 0.1514,  ..., 0.1475, 0.1287, 0.0895],
         [0.3231, 0.6876, 0.4856,  ..., 0.4890, 0.4910, 0.7315],
         [0.2256, 0.1041, 0.2117,  ..., 0.1475, 0.1287, 0.0895]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2081, 0.2261, 0.2356,  ..., 0.2580, 0.2412, 0.2311],
         [0.2081, 0.2261, 0.2218,  ..., 0.2452, 0.2269, 0.2488],
         [0.2081, 0.2261, 0.2218,  ..., 0.2142, 0.2035, 0.2311],
         [0.3758, 0.3218, 0.3208,  ..., 0.2827, 0.3284, 0.2890]],
        [[0.2097, 0.2342, 0.2047,  ..., 0.2287, 0.2431, 0.2346],
         [0.2264, 0.2616, 0.2188,  ..., 0.2547, 0.2685, 0.2726],
         [0.2097, 0.2342, 0.2047,  ..., 0.2287, 0.2431, 0.2346],
         [0.3542, 0.2700, 0.3717,  ..., 0.2880, 0.2453, 0.2581]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3014, 0.2500, 0.2143,  ..., 0.1979, 0.2500, 0.2363],
         [0.2144, 0.2500, 0.1841,  ..., 0.4062, 0.2500, 0.2363],
         [0.2144, 0.2500, 0.1822,  ..., 0.1979, 0.2500, 0.2363],
         [0.2698, 0.2500, 0.4195,  ..., 0.1979, 0.2500, 0.2910]],
        [[0.1731, 0.2449, 0.2290,  ..., 0.0924, 0.2816, 0.0693],
         [0.3564, 0.1896, 0.3473,  ..., 0.0924, 0.4389, 0.0502],
         [0.3043, 0.3759, 0.1747,  ..., 0.1406, 0.1442, 0.0909],
         [0.1662, 0.1896, 0.2489,  ..., 0.6747, 0.1353, 0.7896]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:12,752 [Process: 0] Synchronize training processes
2024-08-16 11:06:12,753 [Process: 0] Evaluating...
2024-08-16 11:06:12,755 [Process: 0] EPOCH 70:
2024-08-16 11:06:12,756 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2420, 0.2256, 0.2195,  ..., 0.2268, 0.2274, 0.2478],
         [0.2460, 0.2256, 0.2195,  ..., 0.2268, 0.2389, 0.2478],
         [0.2420, 0.2256, 0.2195,  ..., 0.2268, 0.2274, 0.2478],
         [0.2700, 0.3232, 0.3414,  ..., 0.3196, 0.3063, 0.2567]],
        [[0.2344, 0.2500, 0.2141,  ..., 0.2215, 0.2260, 0.2123],
         [0.2553, 0.2500, 0.2261,  ..., 0.2251, 0.2260, 0.2274],
         [0.2344, 0.2500, 0.2141,  ..., 0.2215, 0.2260, 0.2123],
         [0.2758, 0.2500, 0.3457,  ..., 0.3319, 0.3221, 0.3479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2504, 0.1817,  ..., 0.1642, 0.3239, 0.1192],
         [0.2500, 0.3533, 0.1817,  ..., 0.5073, 0.1687, 0.1192],
         [0.2500, 0.2386, 0.4242,  ..., 0.1642, 0.3387, 0.6425],
         [0.2500, 0.1576, 0.2125,  ..., 0.1642, 0.1687, 0.1192]],
        [[0.2239, 0.1808, 0.2205,  ..., 0.2154, 0.1818, 0.1979],
         [0.2239, 0.1808, 0.2205,  ..., 0.2154, 0.1818, 0.1979],
         [0.2514, 0.1808, 0.3385,  ..., 0.2154, 0.1818, 0.1979],
         [0.3008, 0.4577, 0.2205,  ..., 0.3538, 0.4547, 0.4063]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:14,664 [Process: 0] Synchronize training processes
2024-08-16 11:06:14,665 [Process: 0] Evaluating...
2024-08-16 11:06:14,666 [Process: 0] EPOCH 71:
2024-08-16 11:06:14,668 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2424, 0.2215, 0.2430,  ..., 0.2145, 0.2143, 0.2266],
         [0.2727, 0.2304, 0.2463,  ..., 0.2561, 0.2325, 0.2266],
         [0.2424, 0.2215, 0.2430,  ..., 0.2145, 0.2143, 0.2266],
         [0.2424, 0.3267, 0.2677,  ..., 0.3149, 0.3389, 0.3202]],
        [[0.2448, 0.2395, 0.2147,  ..., 0.2465, 0.2232, 0.1750],
         [0.2465, 0.2505, 0.2147,  ..., 0.2552, 0.2232, 0.1750],
         [0.2448, 0.2395, 0.2147,  ..., 0.2465, 0.2232, 0.1750],
         [0.2639, 0.2704, 0.3560,  ..., 0.2518, 0.3305, 0.4751]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3151, 0.3140, 0.4483,  ..., 0.1802, 0.2421, 0.1431],
         [0.2421, 0.3275, 0.2065,  ..., 0.4593, 0.4075, 0.1431],
         [0.2561, 0.2023, 0.1726,  ..., 0.1802, 0.1752, 0.2946],
         [0.1867, 0.1562, 0.1726,  ..., 0.1802, 0.1752, 0.4193]],
        [[0.2078, 0.2270, 0.2717,  ..., 0.1718, 0.2286, 0.3053],
         [0.2078, 0.2086, 0.1808,  ..., 0.1718, 0.2286, 0.2396],
         [0.2291, 0.3141, 0.2489,  ..., 0.2830, 0.2286, 0.2335],
         [0.3553, 0.2503, 0.2986,  ..., 0.3733, 0.3143, 0.2216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:06:16,581 [Process: 0] Synchronize training processes
2024-08-16 11:06:16,581 [Process: 0] Evaluating...
2024-08-16 11:06:16,583 [Process: 0] EPOCH 72:
2024-08-16 11:06:16,585 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2375, 0.2287, 0.2500,  ..., 0.2120, 0.2479, 0.2500],
         [0.2689, 0.2287, 0.2500,  ..., 0.2120, 0.2479, 0.2500],
         [0.2375, 0.2287, 0.2500,  ..., 0.2120, 0.2479, 0.2500],
         [0.2562, 0.3140, 0.2500,  ..., 0.3641, 0.2562, 0.2500]],
        [[0.1862, 0.2346, 0.2037,  ..., 0.2093, 0.2309, 0.2132],
         [0.1954, 0.2708, 0.2037,  ..., 0.2093, 0.2421, 0.2132],
         [0.1862, 0.2346, 0.2037,  ..., 0.2093, 0.2309, 0.2132],
         [0.4322, 0.2600, 0.3888,  ..., 0.3721, 0.2961, 0.3604]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1027, 0.1161, 0.5057,  ..., 0.5533, 0.2393, 0.2500],
         [0.5410, 0.1509, 0.1767,  ..., 0.0786, 0.2393, 0.2500],
         [0.2536, 0.6169, 0.2372,  ..., 0.2936, 0.2821, 0.2500],
         [0.1027, 0.1161, 0.0803,  ..., 0.0746, 0.2393, 0.2500]],
        [[0.2394, 0.2564, 0.2287,  ..., 0.2214, 0.2416, 0.2573],
         [0.2547, 0.1835, 0.2287,  ..., 0.2214, 0.2566, 0.2408],
         [0.2394, 0.1835, 0.2287,  ..., 0.2214, 0.2416, 0.2046],
         [0.2665, 0.3767, 0.3138,  ..., 0.3357, 0.2603, 0.2973]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:06:18,506 [Process: 0] Synchronize training processes
2024-08-16 11:06:18,506 [Process: 0] Evaluating...
2024-08-16 11:06:18,508 [Process: 0] EPOCH 73:
2024-08-16 11:06:18,510 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2240, 0.2362, 0.2430,  ..., 0.2451, 0.2500, 0.2319],
         [0.2240, 0.2362, 0.2430,  ..., 0.2451, 0.2500, 0.2319],
         [0.2240, 0.2362, 0.2430,  ..., 0.2451, 0.2500, 0.2319],
         [0.3280, 0.2914, 0.2711,  ..., 0.2648, 0.2500, 0.3042]],
        [[0.2432, 0.2352, 0.2000,  ..., 0.2227, 0.2197, 0.2473],
         [0.2432, 0.2480, 0.2160,  ..., 0.2227, 0.2197, 0.2473],
         [0.2432, 0.2352, 0.2000,  ..., 0.2227, 0.2197, 0.2473],
         [0.2703, 0.2815, 0.3840,  ..., 0.3318, 0.3409, 0.2580]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4028, 0.3811, 0.1739,  ..., 0.2112, 0.3090, 0.2036],
         [0.3201, 0.3335, 0.2916,  ..., 0.1833, 0.3728, 0.2012],
         [0.1712, 0.1296, 0.3605,  ..., 0.5089, 0.1780, 0.3613],
         [0.1059, 0.1559, 0.1739,  ..., 0.0966, 0.1402, 0.2339]],
        [[0.2227, 0.2500, 0.2179,  ..., 0.2459, 0.2500, 0.2500],
         [0.2227, 0.2500, 0.2179,  ..., 0.2459, 0.2500, 0.2500],
         [0.2227, 0.2500, 0.2179,  ..., 0.2459, 0.2500, 0.2500],
         [0.3320, 0.2500, 0.3464,  ..., 0.2622, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:06:20,415 [Process: 0] Synchronize training processes
2024-08-16 11:06:20,415 [Process: 0] Evaluating...
2024-08-16 11:06:20,417 [Process: 0] EPOCH 74:
2024-08-16 11:06:20,419 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:06:22,335 [Process: 0] Synchronize training processes
2024-08-16 11:06:22,336 [Process: 0] Evaluating...
2024-08-16 11:06:22,337 [Process: 0] EPOCH 75:
2024-08-16 11:06:22,339 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2099, 0.2372, 0.2163,  ..., 0.2337, 0.2417, 0.2251],
         [0.2302, 0.2372, 0.2163,  ..., 0.2337, 0.2417, 0.2251],
         [0.2013, 0.2372, 0.2163,  ..., 0.2337, 0.2417, 0.2251],
         [0.3587, 0.2885, 0.3511,  ..., 0.2989, 0.2749, 0.3246]],
        [[0.2163, 0.2218, 0.1899,  ..., 0.2500, 0.2320, 0.2344],
         [0.2163, 0.2218, 0.1899,  ..., 0.2500, 0.2466, 0.2344],
         [0.2163, 0.2218, 0.1899,  ..., 0.2500, 0.2320, 0.2344],
         [0.3511, 0.3347, 0.4302,  ..., 0.2500, 0.2894, 0.2968]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2101, 0.3283, 0.1338,  ..., 0.2500, 0.3780, 0.3172],
         [0.2101, 0.2158, 0.5829,  ..., 0.2500, 0.4474, 0.4783],
         [0.3697, 0.2401, 0.1529,  ..., 0.2500, 0.0977, 0.1022],
         [0.2101, 0.2158, 0.1304,  ..., 0.2500, 0.0770, 0.1022]],
        [[0.1824, 0.0928, 0.1839,  ..., 0.3051, 0.2455, 0.1127],
         [0.1973, 0.2035, 0.1839,  ..., 0.1556, 0.2313, 0.1127],
         [0.2602, 0.0928, 0.4482,  ..., 0.3359, 0.2313, 0.1573],
         [0.3601, 0.6109, 0.1839,  ..., 0.2033, 0.2920, 0.6173]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:06:24,255 [Process: 0] Synchronize training processes
2024-08-16 11:06:24,255 [Process: 0] Evaluating...
2024-08-16 11:06:24,257 [Process: 0] EPOCH 76:
2024-08-16 11:06:24,259 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2157, 0.2322, 0.2464,  ..., 0.2079, 0.2169, 0.2142],
         [0.2157, 0.2322, 0.2492,  ..., 0.2261, 0.2175, 0.2142],
         [0.2157, 0.2322, 0.2464,  ..., 0.2079, 0.2169, 0.2142],
         [0.3529, 0.3034, 0.2580,  ..., 0.3580, 0.3487, 0.3573]],
        [[0.2116, 0.2300, 0.2352,  ..., 0.2355, 0.2443, 0.2026],
         [0.2116, 0.2428, 0.2472,  ..., 0.2355, 0.2443, 0.2026],
         [0.2116, 0.2300, 0.2352,  ..., 0.2355, 0.2443, 0.2026],
         [0.3651, 0.2972, 0.2824,  ..., 0.2934, 0.2671, 0.3923]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2375, 0.2077, 0.1582,  ..., 0.2984, 0.2048, 0.1439],
         [0.1600, 0.3768, 0.1582,  ..., 0.1106, 0.2048, 0.2500],
         [0.1600, 0.2077, 0.3250,  ..., 0.1443, 0.2508, 0.1439],
         [0.4425, 0.2077, 0.3586,  ..., 0.4466, 0.3396, 0.4623]],
        [[0.4468, 0.2482, 0.2125,  ..., 0.5729, 0.3876, 0.4110],
         [0.1844, 0.2482, 0.2125,  ..., 0.1126, 0.2041, 0.1963],
         [0.1844, 0.2554, 0.3625,  ..., 0.2019, 0.2041, 0.1963],
         [0.1844, 0.2482, 0.2125,  ..., 0.1126, 0.2041, 0.1963]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:06:26,157 [Process: 0] Synchronize training processes
2024-08-16 11:06:26,157 [Process: 0] Evaluating...
2024-08-16 11:06:26,159 [Process: 0] EPOCH 77:
2024-08-16 11:06:26,161 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2204, 0.2211, 0.2063,  ..., 0.2442, 0.2229, 0.2482],
         [0.2204, 0.2211, 0.2063,  ..., 0.2442, 0.2229, 0.2393],
         [0.2204, 0.2211, 0.2063,  ..., 0.2442, 0.2229, 0.2393],
         [0.3387, 0.3366, 0.3812,  ..., 0.2675, 0.3314, 0.2731]],
        [[0.2200, 0.2168, 0.2158,  ..., 0.2191, 0.2150, 0.2211],
         [0.2200, 0.2168, 0.2334,  ..., 0.2191, 0.2058, 0.2421],
         [0.2200, 0.2168, 0.2158,  ..., 0.2191, 0.2058, 0.2211],
         [0.3400, 0.3497, 0.3350,  ..., 0.3426, 0.3735, 0.3158]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2575, 0.2957, 0.3252,  ..., 0.2055, 0.2065, 0.1507],
         [0.1227, 0.3239, 0.2250,  ..., 0.3164, 0.2015, 0.2841],
         [0.1111, 0.1681, 0.2222,  ..., 0.2055, 0.2015, 0.1507],
         [0.5087, 0.2124, 0.2276,  ..., 0.2725, 0.3904, 0.4145]],
        [[0.2254, 0.2176, 0.2500,  ..., 0.0435, 0.2188, 0.1777],
         [0.2254, 0.3471, 0.2500,  ..., 0.1448, 0.2188, 0.3938],
         [0.3237, 0.2176, 0.2500,  ..., 0.7682, 0.2188, 0.2507],
         [0.2254, 0.2176, 0.2500,  ..., 0.0435, 0.3436, 0.1777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:06:28,068 [Process: 0] Synchronize training processes
2024-08-16 11:06:28,069 [Process: 0] Evaluating...
2024-08-16 11:06:28,071 [Process: 0] EPOCH 78:
2024-08-16 11:06:28,072 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2339, 0.2445, 0.2086,  ..., 0.2354, 0.2199, 0.2177],
         [0.2660, 0.2445, 0.2086,  ..., 0.2354, 0.2280, 0.2281],
         [0.2339, 0.2445, 0.2086,  ..., 0.2354, 0.2199, 0.2177],
         [0.2663, 0.2666, 0.3743,  ..., 0.2938, 0.3322, 0.3365]],
        [[0.2142, 0.1964, 0.1886,  ..., 0.2352, 0.2258, 0.2041],
         [0.2234, 0.1964, 0.1909,  ..., 0.2352, 0.2258, 0.2041],
         [0.1836, 0.1964, 0.1886,  ..., 0.2352, 0.2258, 0.2041],
         [0.3788, 0.4107, 0.4318,  ..., 0.2943, 0.3227, 0.3876]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3597, 0.3718, 0.1117,  ..., 0.2436, 0.2865, 0.1547],
         [0.2268, 0.4228, 0.2383,  ..., 0.3905, 0.4157, 0.2996],
         [0.2571, 0.1166, 0.3072,  ..., 0.1830, 0.1339, 0.3325],
         [0.1564, 0.0888, 0.3427,  ..., 0.1830, 0.1639, 0.2132]],
        [[0.2050, 0.1955, 0.2500,  ..., 0.1531, 0.1604, 0.0733],
         [0.2022, 0.1955, 0.2500,  ..., 0.1531, 0.1604, 0.1198],
         [0.1934, 0.4134, 0.2500,  ..., 0.1867, 0.2167, 0.0733],
         [0.3993, 0.1955, 0.2500,  ..., 0.5070, 0.4626, 0.7335]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 11:06:29,974 [Process: 0] Synchronize training processes
2024-08-16 11:06:29,974 [Process: 0] Evaluating...
2024-08-16 11:06:29,976 [Process: 0] EPOCH 79:
2024-08-16 11:06:29,978 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2223, 0.2166, 0.2299,  ..., 0.2173, 0.2227, 0.2130],
         [0.2223, 0.2166, 0.2428,  ..., 0.2173, 0.2227, 0.2130],
         [0.2223, 0.2166, 0.2299,  ..., 0.2173, 0.2227, 0.2130],
         [0.3331, 0.3503, 0.2973,  ..., 0.3482, 0.3319, 0.3610]],
        [[0.2098, 0.2297, 0.2141,  ..., 0.2444, 0.2130, 0.1983],
         [0.2306, 0.2297, 0.2141,  ..., 0.2444, 0.2130, 0.1983],
         [0.2098, 0.2297, 0.2141,  ..., 0.2444, 0.2130, 0.1983],
         [0.3498, 0.3109, 0.3578,  ..., 0.2667, 0.3610, 0.4052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2098, 0.4267, 0.3320,  ..., 0.4376, 0.1132, 0.5841],
         [0.3958, 0.3376, 0.2712,  ..., 0.2337, 0.3539, 0.1821],
         [0.2056, 0.1178, 0.1584,  ..., 0.1643, 0.3484, 0.1169],
         [0.1889, 0.1178, 0.2384,  ..., 0.1643, 0.1844, 0.1169]],
        [[0.1780, 0.2774, 0.0600,  ..., 0.2343, 0.1498, 0.1201],
         [0.1780, 0.1266, 0.0600,  ..., 0.2343, 0.0550, 0.1201],
         [0.4434, 0.2634, 0.0694,  ..., 0.2343, 0.0930, 0.3116],
         [0.2006, 0.3325, 0.8105,  ..., 0.2970, 0.7022, 0.4481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 11:06:31,888 [Process: 0] Synchronize training processes
2024-08-16 11:06:31,889 [Process: 0] Evaluating...
2024-08-16 11:06:31,890 [Process: 0] EPOCH 80:
2024-08-16 11:06:31,892 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2245, 0.2294, 0.2240,  ..., 0.2449, 0.2196, 0.2351],
         [0.2245, 0.2294, 0.2240,  ..., 0.2449, 0.2196, 0.2351],
         [0.2245, 0.2294, 0.2240,  ..., 0.2449, 0.2196, 0.2351],
         [0.3266, 0.3118, 0.3279,  ..., 0.2652, 0.3411, 0.2948]],
        [[0.2060, 0.2395, 0.2167,  ..., 0.2275, 0.2341, 0.2500],
         [0.2255, 0.2444, 0.2167,  ..., 0.2275, 0.2693, 0.2500],
         [0.2060, 0.2395, 0.2167,  ..., 0.2275, 0.2341, 0.2500],
         [0.3624, 0.2766, 0.3498,  ..., 0.3174, 0.2624, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2197, 0.2566, 0.2155,  ..., 0.3090, 0.2217, 0.2240],
         [0.3179, 0.2069, 0.3535,  ..., 0.2163, 0.3348, 0.3279],
         [0.1610, 0.1686, 0.2155,  ..., 0.2122, 0.2217, 0.2240],
         [0.3014, 0.3679, 0.2155,  ..., 0.2625, 0.2217, 0.2240]],
        [[0.2162, 0.2774, 0.1963,  ..., 0.1219, 0.2478, 0.2087],
         [0.2162, 0.2961, 0.2045,  ..., 0.1106, 0.2478, 0.2087],
         [0.2977, 0.1977, 0.4030,  ..., 0.1106, 0.2478, 0.2087],
         [0.2699, 0.2288, 0.1963,  ..., 0.6568, 0.2566, 0.3738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2268, 0.2187, 0.2350,  ..., 0.2298, 0.2204, 0.2099],
         [0.2558, 0.2187, 0.2409,  ..., 0.2298, 0.2204, 0.2099],
         [0.2268, 0.2187, 0.2350,  ..., 0.2298, 0.2204, 0.2099],
         [0.2906, 0.3440, 0.2890,  ..., 0.3106, 0.3388, 0.3702]],
        [[0.2217, 0.2236, 0.1991,  ..., 0.1894, 0.2311, 0.2152],
         [0.2741, 0.2386, 0.2061,  ..., 0.2084, 0.2437, 0.2152],
         [0.2217, 0.2236, 0.1991,  ..., 0.1894, 0.2311, 0.2152],
         [0.2826, 0.3142, 0.3956,  ..., 0.4128, 0.2941, 0.3544]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:33,823 [Process: 0] Synchronize training processes
2024-08-16 11:06:33,824 [Process: 0] Evaluating...
2024-08-16 11:06:33,825 [Process: 0] EPOCH 81:
2024-08-16 11:06:33,827 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0889, 0.1314, 0.2066,  ..., 0.1820, 0.2331, 0.3476],
         [0.1455, 0.1084, 0.3801,  ..., 0.5151, 0.2489, 0.2577],
         [0.6869, 0.6518, 0.2066,  ..., 0.1985, 0.2849, 0.2110],
         [0.0788, 0.1084, 0.2066,  ..., 0.1043, 0.2331, 0.1837]],
        [[0.1152, 0.1743, 0.2499,  ..., 0.1558, 0.1552, 0.2500],
         [0.1152, 0.1743, 0.2499,  ..., 0.1558, 0.1552, 0.2500],
         [0.3132, 0.1743, 0.2499,  ..., 0.3205, 0.1552, 0.2500],
         [0.4564, 0.4772, 0.2502,  ..., 0.3679, 0.5344, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2385, 0.2209, 0.2334,  ..., 0.2173, 0.2240, 0.2088],
         [0.2385, 0.2209, 0.2524,  ..., 0.2173, 0.2240, 0.2088],
         [0.2385, 0.2209, 0.2334,  ..., 0.2173, 0.2240, 0.2088],
         [0.2845, 0.3374, 0.2807,  ..., 0.3482, 0.3281, 0.3737]],
        [[0.2281, 0.1996, 0.2463,  ..., 0.2109, 0.2033, 0.1970],
         [0.2281, 0.2312, 0.2483,  ..., 0.2427, 0.2033, 0.2005],
         [0.2281, 0.1996, 0.2463,  ..., 0.2109, 0.2033, 0.1769],
         [0.3156, 0.3695, 0.2590,  ..., 0.3355, 0.3902, 0.4256]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:35,760 [Process: 0] Synchronize training processes
2024-08-16 11:06:35,760 [Process: 0] Evaluating...
2024-08-16 11:06:35,762 [Process: 0] EPOCH 82:
2024-08-16 11:06:35,764 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2087, 0.1966, 0.2686,  ..., 0.2060, 0.2046, 0.3021],
         [0.1681, 0.1966, 0.2765,  ..., 0.2060, 0.2046, 0.2383],
         [0.1681, 0.1966, 0.2272,  ..., 0.2060, 0.2046, 0.2269],
         [0.4551, 0.4103, 0.2277,  ..., 0.3819, 0.3861, 0.2328]],
        [[0.2422, 0.2140, 0.2260,  ..., 0.2268, 0.1985, 0.2415],
         [0.2488, 0.2140, 0.2260,  ..., 0.2268, 0.2422, 0.2415],
         [0.2503, 0.3581, 0.3221,  ..., 0.3196, 0.3608, 0.2756],
         [0.2588, 0.2140, 0.2260,  ..., 0.2268, 0.1985, 0.2415]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2001, 0.2198, 0.2365,  ..., 0.2096, 0.2143, 0.2273],
         [0.2001, 0.2198, 0.2409,  ..., 0.2096, 0.2143, 0.2329],
         [0.2001, 0.2198, 0.2365,  ..., 0.2096, 0.2143, 0.2273],
         [0.3998, 0.3407, 0.2861,  ..., 0.3712, 0.3572, 0.3125]],
        [[0.2471, 0.1837, 0.2334,  ..., 0.2185, 0.2263, 0.2324],
         [0.2473, 0.1766, 0.2334,  ..., 0.2185, 0.2498, 0.2700],
         [0.2471, 0.1766, 0.2334,  ..., 0.2185, 0.2263, 0.2324],
         [0.2586, 0.4631, 0.2999,  ..., 0.3445, 0.2976, 0.2652]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:37,667 [Process: 0] Synchronize training processes
2024-08-16 11:06:37,667 [Process: 0] Evaluating...
2024-08-16 11:06:37,669 [Process: 0] EPOCH 83:
2024-08-16 11:06:37,671 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2182, 0.2015, 0.2286,  ..., 0.2380, 0.3112, 0.4182],
         [0.2810, 0.3229, 0.3141,  ..., 0.1964, 0.3274, 0.5523],
         [0.2182, 0.2015, 0.2286,  ..., 0.2172, 0.1569, 0.0224],
         [0.2827, 0.2741, 0.2286,  ..., 0.3484, 0.2045, 0.0071]],
        [[0.2346, 0.1870, 0.1827,  ..., 0.2256, 0.2299, 0.2145],
         [0.2346, 0.1870, 0.1827,  ..., 0.2256, 0.2398, 0.2145],
         [0.2346, 0.1870, 0.1827,  ..., 0.2256, 0.2299, 0.2145],
         [0.2961, 0.4390, 0.4518,  ..., 0.3231, 0.3005, 0.3565]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1996, 0.2000, 0.2102,  ..., 0.2299, 0.1825, 0.2407],
         [0.1996, 0.2000, 0.2020,  ..., 0.2299, 0.1832, 0.2407],
         [0.1996, 0.2000, 0.1987,  ..., 0.2299, 0.1825, 0.2407],
         [0.4013, 0.3999, 0.3891,  ..., 0.3102, 0.4518, 0.2779]],
        [[0.2394, 0.2348, 0.2456,  ..., 0.2295, 0.2467, 0.2296],
         [0.2451, 0.2348, 0.2456,  ..., 0.2295, 0.2467, 0.2296],
         [0.2394, 0.2348, 0.2498,  ..., 0.2295, 0.2600, 0.2296],
         [0.2762, 0.2956, 0.2590,  ..., 0.3115, 0.2467, 0.3111]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:39,577 [Process: 0] Synchronize training processes
2024-08-16 11:06:39,578 [Process: 0] Evaluating...
2024-08-16 11:06:39,579 [Process: 0] EPOCH 84:
2024-08-16 11:06:39,581 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4884, 0.2148, 0.2794,  ..., 0.8047, 0.3666, 0.0620],
         [0.1786, 0.2148, 0.3431,  ..., 0.0938, 0.1178, 0.0106],
         [0.1987, 0.3555, 0.2230,  ..., 0.0327, 0.2681, 0.9168],
         [0.1344, 0.2148, 0.1544,  ..., 0.0688, 0.2475, 0.0106]],
        [[0.2294, 0.2581, 0.2500,  ..., 0.2500, 0.2307, 0.3069],
         [0.3280, 0.2317, 0.2500,  ..., 0.2500, 0.3078, 0.1939],
         [0.2213, 0.2102, 0.2500,  ..., 0.2500, 0.2307, 0.1531],
         [0.2213, 0.3000, 0.2500,  ..., 0.2500, 0.2307, 0.3462]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2123, 0.2376, 0.2065,  ..., 0.2175, 0.2359, 0.2255],
         [0.2123, 0.2376, 0.2065,  ..., 0.2175, 0.2359, 0.2255],
         [0.2123, 0.2376, 0.2065,  ..., 0.2175, 0.2359, 0.2255],
         [0.3631, 0.2872, 0.3804,  ..., 0.3475, 0.2923, 0.3234]],
        [[0.2087, 0.2049, 0.2423,  ..., 0.2293, 0.2043, 0.2313],
         [0.2087, 0.2164, 0.2504,  ..., 0.2570, 0.2043, 0.2313],
         [0.2087, 0.2049, 0.2423,  ..., 0.2293, 0.2043, 0.2313],
         [0.3739, 0.3738, 0.2649,  ..., 0.2844, 0.3871, 0.3060]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:41,493 [Process: 0] Synchronize training processes
2024-08-16 11:06:41,493 [Process: 0] Evaluating...
2024-08-16 11:06:41,495 [Process: 0] EPOCH 85:
2024-08-16 11:06:41,497 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2400, 0.1282, 0.1663,  ..., 0.2347, 0.1455, 0.5056],
         [0.3649, 0.0956, 0.1089,  ..., 0.2347, 0.1701, 0.2461],
         [0.1661, 0.1337, 0.5174,  ..., 0.2959, 0.1840, 0.1670],
         [0.2290, 0.6425, 0.2074,  ..., 0.2347, 0.5004, 0.0813]],
        [[0.2500, 0.2500, 0.5982,  ..., 0.3273, 0.2474, 0.2621],
         [0.2500, 0.2500, 0.1339,  ..., 0.3386, 0.2474, 0.2270],
         [0.2500, 0.2500, 0.1339,  ..., 0.1670, 0.2578, 0.2270],
         [0.2500, 0.2500, 0.1339,  ..., 0.1670, 0.2474, 0.2838]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2206, 0.2304, 0.1998,  ..., 0.2209, 0.2143, 0.1997],
         [0.2403, 0.2419, 0.1998,  ..., 0.2209, 0.2215, 0.2103],
         [0.2206, 0.2304, 0.1998,  ..., 0.2209, 0.2143, 0.1997],
         [0.3184, 0.2972, 0.4007,  ..., 0.3372, 0.3498, 0.3904]],
        [[0.2474, 0.1996, 0.2344,  ..., 0.2209, 0.2234, 0.1912],
         [0.2577, 0.2137, 0.2344,  ..., 0.2510, 0.2994, 0.2016],
         [0.2474, 0.1996, 0.2344,  ..., 0.2209, 0.2234, 0.1912],
         [0.2474, 0.3870, 0.2967,  ..., 0.3072, 0.2538, 0.4161]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:43,412 [Process: 0] Synchronize training processes
2024-08-16 11:06:43,412 [Process: 0] Evaluating...
2024-08-16 11:06:43,414 [Process: 0] EPOCH 86:
2024-08-16 11:06:43,416 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3113, 0.2673, 0.2500,  ..., 0.3266, 0.2268, 0.2500],
         [0.3363, 0.2442, 0.2500,  ..., 0.2245, 0.1788, 0.2500],
         [0.1762, 0.2442, 0.2500,  ..., 0.2245, 0.4155, 0.2500],
         [0.1762, 0.2442, 0.2500,  ..., 0.2245, 0.1788, 0.2500]],
        [[0.2137, 0.2002, 0.2500,  ..., 0.6023, 0.4492, 0.2912],
         [0.1843, 0.2002, 0.2500,  ..., 0.0841, 0.2245, 0.2194],
         [0.2024, 0.3994, 0.2500,  ..., 0.1296, 0.1495, 0.2352],
         [0.3996, 0.2002, 0.2500,  ..., 0.1839, 0.1768, 0.2542]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2151, 0.2283, 0.2133,  ..., 0.2282, 0.2311, 0.1951],
         [0.2151, 0.2283, 0.2133,  ..., 0.2527, 0.2378, 0.2057],
         [0.2151, 0.2283, 0.2133,  ..., 0.2282, 0.2311, 0.1951],
         [0.3546, 0.3152, 0.3600,  ..., 0.2910, 0.3000, 0.4041]],
        [[0.1968, 0.2267, 0.1843,  ..., 0.1989, 0.2142, 0.2418],
         [0.2685, 0.2267, 0.2223,  ..., 0.1999, 0.2142, 0.2618],
         [0.1968, 0.2267, 0.1843,  ..., 0.1989, 0.2142, 0.2418],
         [0.3379, 0.3199, 0.4091,  ..., 0.4022, 0.3575, 0.2546]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:45,342 [Process: 0] Synchronize training processes
2024-08-16 11:06:45,343 [Process: 0] Evaluating...
2024-08-16 11:06:45,344 [Process: 0] EPOCH 87:
2024-08-16 11:06:45,346 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1703, 0.4004, 0.6046,  ..., 0.2471, 0.2500, 0.3812],
         [0.2179, 0.3584, 0.1931,  ..., 0.2373, 0.2500, 0.3171],
         [0.4542, 0.1689, 0.1011,  ..., 0.2783, 0.2500, 0.1312],
         [0.1577, 0.0723, 0.1011,  ..., 0.2373, 0.2500, 0.1706]],
        [[0.1211, 0.3999, 0.1019,  ..., 0.3071, 0.1571, 0.2169],
         [0.1211, 0.1370, 0.4899,  ..., 0.1735, 0.3362, 0.2169],
         [0.1211, 0.2024, 0.1019,  ..., 0.3458, 0.1571, 0.2169],
         [0.6366, 0.2606, 0.3063,  ..., 0.1735, 0.3497, 0.3493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2044, 0.2157, 0.2120,  ..., 0.2500, 0.2302, 0.2172],
         [0.2180, 0.2157, 0.2120,  ..., 0.2500, 0.2302, 0.2172],
         [0.2044, 0.2157, 0.2120,  ..., 0.2500, 0.2302, 0.2172],
         [0.3732, 0.3530, 0.3639,  ..., 0.2500, 0.3093, 0.3484]],
        [[0.2308, 0.2472, 0.1908,  ..., 0.2202, 0.2070, 0.2500],
         [0.2405, 0.2472, 0.2168,  ..., 0.2202, 0.2146, 0.2500],
         [0.2308, 0.2472, 0.1908,  ..., 0.2202, 0.2070, 0.2500],
         [0.2980, 0.2585, 0.4016,  ..., 0.3395, 0.3714, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:47,251 [Process: 0] Synchronize training processes
2024-08-16 11:06:47,251 [Process: 0] Evaluating...
2024-08-16 11:06:47,253 [Process: 0] EPOCH 88:
2024-08-16 11:06:47,255 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1862, 0.4092, 0.1235,  ..., 0.8110, 0.0711, 0.1635],
         [0.1862, 0.1969, 0.1235,  ..., 0.0573, 0.2934, 0.1635],
         [0.4415, 0.1969, 0.6296,  ..., 0.0725, 0.5767, 0.5096],
         [0.1862, 0.1969, 0.1235,  ..., 0.0593, 0.0588, 0.1635]],
        [[0.1897, 0.3994, 0.1553,  ..., 0.1933, 0.2405, 0.1863],
         [0.1897, 0.0624, 0.1553,  ..., 0.2068, 0.2405, 0.1536],
         [0.1897, 0.0612, 0.1553,  ..., 0.1933, 0.2424, 0.1282],
         [0.4310, 0.4770, 0.5342,  ..., 0.4066, 0.2767, 0.5318]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2156, 0.2218, 0.2075,  ..., 0.2109, 0.2232, 0.2689],
         [0.2156, 0.2218, 0.2075,  ..., 0.2109, 0.2232, 0.2273],
         [0.2156, 0.2218, 0.2075,  ..., 0.2109, 0.2232, 0.2209],
         [0.3533, 0.3345, 0.3775,  ..., 0.3674, 0.3304, 0.2829]],
        [[0.2207, 0.2133, 0.2080,  ..., 0.2354, 0.2274, 0.1877],
         [0.2290, 0.2133, 0.2695,  ..., 0.2577, 0.2274, 0.1979],
         [0.2207, 0.2133, 0.2080,  ..., 0.2354, 0.2274, 0.1877],
         [0.3296, 0.3602, 0.3146,  ..., 0.2716, 0.3177, 0.4267]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:49,191 [Process: 0] Synchronize training processes
2024-08-16 11:06:49,191 [Process: 0] Evaluating...
2024-08-16 11:06:49,193 [Process: 0] EPOCH 89:
2024-08-16 11:06:49,195 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5770, 0.2332, 0.1347,  ..., 0.2869, 0.3512, 0.0864],
         [0.1158, 0.4718, 0.2606,  ..., 0.1777, 0.3845, 0.5563],
         [0.1216, 0.1244, 0.1303,  ..., 0.1777, 0.1321, 0.0500],
         [0.1855, 0.1707, 0.4744,  ..., 0.3577, 0.1321, 0.3074]],
        [[0.1812, 0.0962, 0.2106,  ..., 0.1245, 0.0990, 0.2083],
         [0.1812, 0.0680, 0.2106,  ..., 0.1245, 0.0990, 0.2083],
         [0.3287, 0.0757, 0.3682,  ..., 0.6264, 0.7031, 0.3752],
         [0.3090, 0.7602, 0.2106,  ..., 0.1245, 0.0990, 0.2083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2283, 0.2187, 0.2223,  ..., 0.2425, 0.2290, 0.2297],
         [0.2283, 0.2187, 0.2223,  ..., 0.2425, 0.2300, 0.2297],
         [0.2283, 0.2187, 0.2223,  ..., 0.2425, 0.2290, 0.2297],
         [0.3151, 0.3438, 0.3331,  ..., 0.2725, 0.3120, 0.3109]],
        [[0.2104, 0.2160, 0.2255,  ..., 0.1849, 0.2085, 0.2115],
         [0.2482, 0.2160, 0.2411,  ..., 0.2040, 0.2085, 0.2115],
         [0.2104, 0.2160, 0.2255,  ..., 0.1849, 0.2085, 0.2115],
         [0.3309, 0.3521, 0.3080,  ..., 0.4262, 0.3745, 0.3656]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:51,110 [Process: 0] Synchronize training processes
2024-08-16 11:06:51,110 [Process: 0] Evaluating...
2024-08-16 11:06:51,112 [Process: 0] EPOCH 90:
2024-08-16 11:06:51,114 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.3823, 0.2616,  ..., 0.1452, 0.4004, 0.2500],
         [0.2500, 0.2059, 0.2512,  ..., 0.5645, 0.0901, 0.2500],
         [0.2500, 0.2059, 0.2436,  ..., 0.1452, 0.2730, 0.2500],
         [0.2500, 0.2059, 0.2436,  ..., 0.1452, 0.2365, 0.2500]],
        [[0.2150, 0.1942, 0.2845,  ..., 0.1799, 0.1942, 0.1503],
         [0.2977, 0.3458, 0.2215,  ..., 0.4602, 0.2463, 0.2959],
         [0.2150, 0.1898, 0.1904,  ..., 0.1799, 0.1942, 0.1503],
         [0.2723, 0.2703, 0.3035,  ..., 0.1801, 0.3653, 0.4035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2356, 0.2341, 0.2380,  ..., 0.2127, 0.2091, 0.2169],
         [0.2356, 0.2341, 0.2380,  ..., 0.2138, 0.2091, 0.2260],
         [0.2356, 0.2341, 0.2380,  ..., 0.2127, 0.2091, 0.2169],
         [0.2932, 0.2977, 0.2861,  ..., 0.3608, 0.3727, 0.3402]],
        [[0.2391, 0.1995, 0.2500,  ..., 0.2437, 0.2293, 0.2459],
         [0.2328, 0.2160, 0.2500,  ..., 0.2437, 0.2293, 0.2612],
         [0.2279, 0.1995, 0.2500,  ..., 0.2437, 0.2293, 0.2459],
         [0.3002, 0.3851, 0.2500,  ..., 0.2690, 0.3120, 0.2471]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 11:06:53,026 [Process: 0] Synchronize training processes
2024-08-16 11:06:53,026 [Process: 0] Evaluating...
2024-08-16 11:06:53,028 [Process: 0] EPOCH 91:
2024-08-16 11:06:53,030 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2356, 0.2422, 0.1147,  ..., 0.6422, 0.2486, 0.1801],
         [0.2933, 0.2733, 0.6559,  ..., 0.2575, 0.2541, 0.4617],
         [0.2356, 0.2422, 0.1147,  ..., 0.0502, 0.2486, 0.2683],
         [0.2356, 0.2422, 0.1147,  ..., 0.0502, 0.2486, 0.0899]],
        [[0.0728, 0.1433, 0.1236,  ..., 0.1605, 0.1540, 0.1330],
         [0.0728, 0.1433, 0.1236,  ..., 0.3188, 0.1250, 0.1330],
         [0.1019, 0.1433, 0.2153,  ..., 0.1578, 0.1250, 0.3455],
         [0.7524, 0.5702, 0.5375,  ..., 0.3630, 0.5961, 0.3885]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2036, 0.2185, 0.1974,  ..., 0.2215, 0.2190, 0.2353],
         [0.2201, 0.2264, 0.2307,  ..., 0.2215, 0.2190, 0.2411],
         [0.2036, 0.2185, 0.1974,  ..., 0.2215, 0.2190, 0.2353],
         [0.3726, 0.3366, 0.3745,  ..., 0.3355, 0.3430, 0.2883]],
        [[0.2282, 0.2291, 0.2382,  ..., 0.1905, 0.2237, 0.2181],
         [0.2282, 0.2291, 0.2382,  ..., 0.1905, 0.2333, 0.2591],
         [0.2282, 0.2291, 0.2382,  ..., 0.1905, 0.2237, 0.2181],
         [0.3154, 0.3128, 0.2853,  ..., 0.4284, 0.3193, 0.3047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 11:06:54,940 [Process: 0] Synchronize training processes
2024-08-16 11:06:54,941 [Process: 0] Evaluating...
2024-08-16 11:06:54,942 [Process: 0] EPOCH 92:
2024-08-16 11:06:54,944 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.2448, 0.2368, 0.2684,  ..., 0.2011, 0.2994, 0.2070],
         [0.2655, 0.2896, 0.2333,  ..., 0.2857, 0.2560, 0.3145],
         [0.2448, 0.2368, 0.2299,  ..., 0.2011, 0.1866, 0.1962],
         [0.2448, 0.2368, 0.2685,  ..., 0.3121, 0.2580, 0.2823]],
        [[0.2757, 0.2126, 0.2065,  ..., 0.2273, 0.2032, 0.1734],
         [0.1851, 0.1707, 0.2299,  ..., 0.2273, 0.2032, 0.1734],
         [0.1806, 0.1707, 0.2065,  ..., 0.2273, 0.2032, 0.1734],
         [0.3586, 0.4461, 0.3570,  ..., 0.3181, 0.3905, 0.4799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1838, 0.2108, 0.2204,  ..., 0.2095, 0.2305, 0.2377],
         [0.1952, 0.2108, 0.2204,  ..., 0.2232, 0.2305, 0.2377],
         [0.1838, 0.2108, 0.2204,  ..., 0.2095, 0.2305, 0.2377],
         [0.4372, 0.3677, 0.3389,  ..., 0.3577, 0.3084, 0.2868]],
        [[0.2288, 0.2176, 0.2104,  ..., 0.2058, 0.2275, 0.2342],
         [0.2288, 0.2176, 0.2104,  ..., 0.2058, 0.2275, 0.2342],
         [0.2288, 0.2176, 0.2104,  ..., 0.2058, 0.2275, 0.2342],
         [0.3137, 0.3471, 0.3687,  ..., 0.3827, 0.3176, 0.2973]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1985, 0.3506, 0.3086,  ..., 0.2736, 0.2520, 0.3613],
         [0.2501, 0.3053, 0.3686,  ..., 0.2709, 0.3204, 0.2175],
         [0.3528, 0.1720, 0.1458,  ..., 0.2277, 0.2598, 0.1979],
         [0.1985, 0.1720, 0.1771,  ..., 0.2277, 0.1678, 0.2234]],
        [[0.1966, 0.2491, 0.2024,  ..., 0.2500, 0.2500, 0.1413],
         [0.1966, 0.2153, 0.2104,  ..., 0.2500, 0.2500, 0.1984],
         [0.1966, 0.2153, 0.2024,  ..., 0.2500, 0.2500, 0.1439],
         [0.4101, 0.3204, 0.3848,  ..., 0.2500, 0.2500, 0.5163]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:56,854 [Process: 0] Synchronize training processes
2024-08-16 11:06:56,854 [Process: 0] Evaluating...
2024-08-16 11:06:56,856 [Process: 0] EPOCH 93:
2024-08-16 11:06:56,858 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1923, 0.2235, 0.2207,  ..., 0.2279, 0.1877, 0.2102],
         [0.2601, 0.2235, 0.2207,  ..., 0.2346, 0.2260, 0.2187],
         [0.1923, 0.2235, 0.2207,  ..., 0.2279, 0.1877, 0.2053],
         [0.3552, 0.3296, 0.3378,  ..., 0.3096, 0.3986, 0.3658]],
        [[0.2165, 0.2252, 0.2391,  ..., 0.2203, 0.2320, 0.2013],
         [0.2165, 0.2422, 0.2391,  ..., 0.2203, 0.2320, 0.2013],
         [0.2165, 0.2252, 0.2391,  ..., 0.2203, 0.2320, 0.2013],
         [0.3504, 0.3075, 0.2827,  ..., 0.3390, 0.3041, 0.3962]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3858, 0.1443, 0.2392,  ..., 0.1391, 0.1743, 0.1011],
         [0.2047, 0.3397, 0.2482,  ..., 0.1391, 0.1743, 0.1011],
         [0.2047, 0.3800, 0.2392,  ..., 0.5827, 0.4771, 0.5682],
         [0.2047, 0.1359, 0.2735,  ..., 0.1391, 0.1743, 0.2297]],
        [[0.4920, 0.1228, 0.3628,  ..., 0.1798, 0.4621, 0.2840],
         [0.3243, 0.1228, 0.2524,  ..., 0.5315, 0.2076, 0.3034],
         [0.1262, 0.1228, 0.1313,  ..., 0.0678, 0.1638, 0.3149],
         [0.0575, 0.6316, 0.2536,  ..., 0.2209, 0.1665, 0.0977]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:06:58,780 [Process: 0] Synchronize training processes
2024-08-16 11:06:58,780 [Process: 0] Evaluating...
2024-08-16 11:06:58,782 [Process: 0] EPOCH 94:
2024-08-16 11:06:58,784 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2214, 0.2301, 0.2227,  ..., 0.2255, 0.2205, 0.2317],
         [0.2134, 0.2301, 0.2227,  ..., 0.2357, 0.2332, 0.2317],
         [0.2134, 0.2301, 0.2227,  ..., 0.2255, 0.2205, 0.2317],
         [0.3517, 0.3098, 0.3318,  ..., 0.3133, 0.3257, 0.3048]],
        [[0.2013, 0.2401, 0.2084,  ..., 0.2497, 0.2016, 0.2016],
         [0.2013, 0.2401, 0.2324,  ..., 0.2509, 0.2016, 0.2016],
         [0.2013, 0.2401, 0.2084,  ..., 0.2497, 0.2016, 0.2016],
         [0.3961, 0.2798, 0.3508,  ..., 0.2497, 0.3953, 0.3951]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:07:01,348 [Process: 0] Synchronize training processes
2024-08-16 11:07:01,348 [Process: 0] Evaluating...
2024-08-16 11:07:01,350 [Process: 0] EPOCH 95:
2024-08-16 11:07:01,352 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2491, 0.2500, 0.1761,  ..., 0.1655, 0.1929, 0.4576],
         [0.2151, 0.2500, 0.1981,  ..., 0.3922, 0.3537, 0.2670],
         [0.4181, 0.2500, 0.4498,  ..., 0.2768, 0.2605, 0.1423],
         [0.1176, 0.2500, 0.1761,  ..., 0.1655, 0.1929, 0.1332]],
        [[0.1214, 0.3933, 0.2553,  ..., 0.3078, 0.4821, 0.1609],
         [0.1214, 0.1716, 0.1887,  ..., 0.1936, 0.0975, 0.4597],
         [0.1214, 0.1716, 0.1887,  ..., 0.2488, 0.0975, 0.1776],
         [0.6358, 0.2635, 0.3673,  ..., 0.2498, 0.3229, 0.2019]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2264, 0.2302, 0.2292,  ..., 0.2412, 0.2485, 0.2326],
         [0.2264, 0.2302, 0.2292,  ..., 0.2412, 0.2485, 0.2221],
         [0.2264, 0.2302, 0.2292,  ..., 0.2412, 0.2485, 0.2221],
         [0.3208, 0.3093, 0.3124,  ..., 0.2765, 0.2544, 0.3232]],
        [[0.2128, 0.1746, 0.1987,  ..., 0.1929, 0.1882, 0.2451],
         [0.2128, 0.1846, 0.2317,  ..., 0.1929, 0.1882, 0.2451],
         [0.2128, 0.1746, 0.1987,  ..., 0.1929, 0.1882, 0.2451],
         [0.3616, 0.4663, 0.3710,  ..., 0.4214, 0.4355, 0.2646]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:07:03,270 [Process: 0] Synchronize training processes
2024-08-16 11:07:03,270 [Process: 0] Evaluating...
2024-08-16 11:07:03,272 [Process: 0] EPOCH 96:
2024-08-16 11:07:03,274 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1521, 0.2973, 0.4049,  ..., 0.2395, 0.5023, 0.1542],
         [0.4089, 0.2240, 0.3936,  ..., 0.2395, 0.3031, 0.4778],
         [0.2664, 0.3159, 0.1221,  ..., 0.2815, 0.0973, 0.2137],
         [0.1727, 0.1629, 0.0794,  ..., 0.2395, 0.0973, 0.1542]],
        [[0.3930, 0.1953, 0.3259,  ..., 0.4544, 0.2255, 0.2234],
         [0.0859, 0.1065, 0.1752,  ..., 0.1152, 0.2255, 0.2234],
         [0.0859, 0.1065, 0.1752,  ..., 0.1152, 0.2255, 0.3298],
         [0.4351, 0.5917, 0.3238,  ..., 0.3152, 0.3234, 0.2234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2227, 0.2189, 0.2228,  ..., 0.2331, 0.2499, 0.2285],
         [0.2227, 0.2189, 0.2611,  ..., 0.2543, 0.2499, 0.2285],
         [0.2227, 0.2189, 0.2228,  ..., 0.2331, 0.2499, 0.2285],
         [0.3318, 0.3433, 0.2933,  ..., 0.2794, 0.2504, 0.3144]],
        [[0.2316, 0.2268, 0.2147,  ..., 0.2223, 0.2277, 0.2272],
         [0.2316, 0.2480, 0.2147,  ..., 0.2223, 0.2277, 0.2528],
         [0.2316, 0.2268, 0.2147,  ..., 0.2223, 0.2277, 0.2272],
         [0.3052, 0.2985, 0.3558,  ..., 0.3330, 0.3169, 0.2929]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:07:05,187 [Process: 0] Synchronize training processes
2024-08-16 11:07:05,187 [Process: 0] Evaluating...
2024-08-16 11:07:05,189 [Process: 0] EPOCH 97:
2024-08-16 11:07:05,191 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1540, 0.3087, 0.2743,  ..., 0.4787, 0.2136, 0.2623],
         [0.3787, 0.2927, 0.4448,  ..., 0.2482, 0.3592, 0.4282],
         [0.1540, 0.1993, 0.1405,  ..., 0.0765, 0.2136, 0.1076],
         [0.3132, 0.1993, 0.1405,  ..., 0.1966, 0.2136, 0.2019]],
        [[0.2127, 0.2198, 0.1512,  ..., 0.2719, 0.0814, 0.1566],
         [0.2127, 0.2198, 0.1512,  ..., 0.2421, 0.0814, 0.1566],
         [0.3619, 0.2198, 0.5464,  ..., 0.2438, 0.7559, 0.1566],
         [0.2127, 0.3405, 0.1512,  ..., 0.2421, 0.0814, 0.5303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2184, 0.2335, 0.2228,  ..., 0.2360, 0.2203, 0.2384],
         [0.2456, 0.2335, 0.2228,  ..., 0.2374, 0.2338, 0.2848],
         [0.2184, 0.2335, 0.2228,  ..., 0.2360, 0.2203, 0.2384],
         [0.3176, 0.2996, 0.3317,  ..., 0.2907, 0.3255, 0.2384]],
        [[0.2500, 0.2184, 0.2458,  ..., 0.1938, 0.2300, 0.2266],
         [0.2500, 0.2196, 0.2458,  ..., 0.1938, 0.2300, 0.2266],
         [0.2500, 0.2184, 0.2458,  ..., 0.1938, 0.2300, 0.2266],
         [0.2500, 0.3436, 0.2625,  ..., 0.4186, 0.3100, 0.3202]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:07:07,117 [Process: 0] Synchronize training processes
2024-08-16 11:07:07,118 [Process: 0] Evaluating...
2024-08-16 11:07:07,120 [Process: 0] EPOCH 98:
2024-08-16 11:07:07,121 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2326, 0.2162, 0.2125,  ..., 0.1494, 0.1628, 0.3232],
         [0.2880, 0.3513, 0.2950,  ..., 0.5399, 0.2121, 0.3399],
         [0.3851, 0.2162, 0.1726,  ..., 0.1494, 0.5271, 0.1627],
         [0.0942, 0.2162, 0.3199,  ..., 0.1613, 0.0979, 0.1742]],
        [[0.3756, 0.2500, 0.1538,  ..., 0.2500, 0.1233, 0.2500],
         [0.2081, 0.2500, 0.1474,  ..., 0.2500, 0.1233, 0.2500],
         [0.2081, 0.2500, 0.4424,  ..., 0.2500, 0.1233, 0.2500],
         [0.2081, 0.2500, 0.2565,  ..., 0.2500, 0.6300, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2227, 0.2302, 0.2053,  ..., 0.2476, 0.2308, 0.2322],
         [0.2227, 0.2456, 0.2102,  ..., 0.2572, 0.2308, 0.2215],
         [0.2227, 0.2302, 0.2053,  ..., 0.2476, 0.2308, 0.2215],
         [0.3318, 0.2940, 0.3791,  ..., 0.2476, 0.3076, 0.3247]],
        [[0.2277, 0.2071, 0.2154,  ..., 0.2395, 0.2455, 0.2288],
         [0.2277, 0.2071, 0.2154,  ..., 0.2395, 0.2455, 0.2587],
         [0.2277, 0.2071, 0.2154,  ..., 0.2395, 0.2455, 0.2288],
         [0.3170, 0.3788, 0.3538,  ..., 0.2814, 0.2635, 0.2838]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 11:07:09,039 [Process: 0] Synchronize training processes
2024-08-16 11:07:09,040 [Process: 0] Evaluating...
2024-08-16 11:07:09,042 [Process: 0] EPOCH 99:
2024-08-16 11:07:09,044 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1175, 0.2330, 0.1536,  ..., 0.1375, 0.2769, 0.2803],
         [0.1175, 0.2330, 0.2129,  ..., 0.2748, 0.2316, 0.4552],
         [0.5595, 0.3009, 0.2193,  ..., 0.1208, 0.2316, 0.1323],
         [0.2055, 0.2330, 0.4141,  ..., 0.4669, 0.2599, 0.1323]],
        [[0.1885, 0.1954, 0.5265,  ..., 0.2836, 0.3572, 0.4474],
         [0.2247, 0.1433, 0.1590,  ..., 0.4345, 0.2243, 0.2329],
         [0.4452, 0.5299, 0.1573,  ..., 0.1377, 0.2092, 0.1598],
         [0.1416, 0.1314, 0.1573,  ..., 0.1442, 0.2092, 0.1598]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2345, 0.2468, 0.2353,  ..., 0.1960, 0.2371, 0.2275],
         [0.2345, 0.2468, 0.2413,  ..., 0.1960, 0.2371, 0.2275],
         [0.2345, 0.2468, 0.2353,  ..., 0.1960, 0.2371, 0.2275],
         [0.2965, 0.2595, 0.2881,  ..., 0.4119, 0.2886, 0.3176]],
        [[0.2155, 0.2479, 0.2022,  ..., 0.2279, 0.2421, 0.2031],
         [0.2464, 0.2479, 0.2022,  ..., 0.2524, 0.2421, 0.2031],
         [0.2155, 0.2479, 0.2022,  ..., 0.2137, 0.2421, 0.2067],
         [0.3226, 0.2564, 0.3933,  ..., 0.3060, 0.2738, 0.3871]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3444, 0.3756, 0.2434,  ..., 0.2211, 0.1155, 0.1794],
         [0.2412, 0.2810, 0.4583,  ..., 0.2211, 0.6534, 0.2360],
         [0.1995, 0.1306, 0.1412,  ..., 0.2211, 0.1155, 0.5090],
         [0.2150, 0.2128, 0.1570,  ..., 0.3366, 0.1155, 0.0756]],
        [[0.1907, 0.2195, 0.2096,  ..., 0.2085, 0.2371, 0.1701],
         [0.1907, 0.2195, 0.2096,  ..., 0.2085, 0.2371, 0.1701],
         [0.1907, 0.2195, 0.2096,  ..., 0.2085, 0.2371, 0.1701],
         [0.4279, 0.3416, 0.3711,  ..., 0.3745, 0.2886, 0.4896]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:07:10,946 [Process: 0] Synchronize training processes
2024-08-16 11:07:10,947 [Process: 0] Evaluating...
2024-08-16 11:07:10,949 [Process: 0] EPOCH 100:
2024-08-16 11:07:10,951 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2250, 0.2431, 0.2159,  ..., 0.2267, 0.2451, 0.2254],
         [0.2250, 0.2431, 0.2159,  ..., 0.2423, 0.2451, 0.2254],
         [0.2250, 0.2431, 0.2159,  ..., 0.2267, 0.2451, 0.2254],
         [0.3249, 0.2707, 0.3523,  ..., 0.3043, 0.2646, 0.3238]],
        [[0.2194, 0.2173, 0.2224,  ..., 0.2241, 0.2151, 0.2381],
         [0.2194, 0.2173, 0.2224,  ..., 0.2241, 0.2220, 0.2381],
         [0.2194, 0.2173, 0.2224,  ..., 0.2241, 0.2151, 0.2381],
         [0.3418, 0.3482, 0.3329,  ..., 0.3278, 0.3478, 0.2857]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1604, 0.3691, 0.3704,  ..., 0.2631, 0.2500, 0.1863],
         [0.0898, 0.1562, 0.2099,  ..., 0.3231, 0.2500, 0.1714],
         [0.6601, 0.1562, 0.2099,  ..., 0.2069, 0.2500, 0.3221],
         [0.0898, 0.3185, 0.2099,  ..., 0.2069, 0.2500, 0.3201]],
        [[0.1941, 0.0735, 0.1071,  ..., 0.0881, 0.1515, 0.1891],
         [0.3860, 0.4923, 0.1363,  ..., 0.1491, 0.6246, 0.1891],
         [0.1941, 0.0550, 0.1071,  ..., 0.0881, 0.1059, 0.1891],
         [0.2258, 0.3793, 0.6496,  ..., 0.6747, 0.1181, 0.4326]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 11:07:12,874 [Process: 0] Synchronize training processes
2024-08-16 11:07:12,874 [Process: 0] Evaluating...
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...