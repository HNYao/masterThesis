2024-08-19 13:11:29,649 [Worker 0] Is distributed: False
2024-08-19 13:11:29,649 [Process: 0] Starting training
2024-08-19 13:11:29,650 [Process: 0] EPOCH 1:
2024-08-19 13:11:29,652 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:11:31,267 [Process: 0] Synchronize training processes
2024-08-19 13:11:31,267 [Process: 0] Evaluating...
Error executing job with overrides: []
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 356, in train
    self.model.inference_heatmap_4cls()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/GeoL.py", line 149, in inference_heatmap_4cls
    self.color_backproj()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/GeoL.py", line 181, in color_backproj
    ply1.points = o3d.utility.Vector3dVecotr(points_ply1)
AttributeError: module 'open3d.cuda.pybind.utility' has no attribute 'Vector3dVecotr'
Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2013, 0.3420, 0.1496,  ..., 0.1481, 0.4452, 0.1980],
         [0.3961, 0.3088, 0.1496,  ..., 0.1420, 0.1849, 0.4061],
         [0.2013, 0.1928, 0.5388,  ..., 0.5084, 0.1849, 0.1980],
         [0.2013, 0.1564, 0.1620,  ..., 0.2015, 0.1849, 0.1980]],
        [[0.3098, 0.1502, 0.6037,  ..., 0.2301, 0.2239, 0.1630],
         [0.1867, 0.4153, 0.0751,  ..., 0.3520, 0.2239, 0.2199],
         [0.1668, 0.2519, 0.0751,  ..., 0.2089, 0.3282, 0.1630],
         [0.3367, 0.1825, 0.2462,  ..., 0.2089, 0.2239, 0.4541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2679, 0.2408, 0.2278,  ..., 0.3022, 0.2315, 0.1319],
         [0.2877, 0.2408, 0.2584,  ..., 0.2581, 0.2752, 0.3204],
         [0.1914, 0.2408, 0.2278,  ..., 0.1980, 0.1807, 0.2400],
         [0.2530, 0.2775, 0.2859,  ..., 0.2417, 0.3127, 0.3077]],
        [[0.2874, 0.2701, 0.2659,  ..., 0.2885, 0.2652, 0.1467],
         [0.1893, 0.3015, 0.2683,  ..., 0.2872, 0.3012, 0.1467],
         [0.2040, 0.1570, 0.2298,  ..., 0.1966, 0.1617, 0.5598],
         [0.3193, 0.2714, 0.2361,  ..., 0.2277, 0.2719, 0.1467]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)